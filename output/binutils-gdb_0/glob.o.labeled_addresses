collated_compare	functions,0:ELSE,0:CALL,1:DO,0:SWITCH,0:IF,3:WHILE,0:FOR,0	35
0x40026c2	              0x55	                                push rbp	      1371	glob.c	FUNCTION_12
0x40026c3	          0x4889e5	                            mov rbp, rsp	      1371	glob.c	FUNCTION_12
0x40026c6	        0x4883ec30	                           sub rsp, 0x30	      1371	glob.c	FUNCTION_12
0x40026ca	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1371	glob.c	FUNCTION_12
0x40026ce	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1371	glob.c	FUNCTION_12
0x40026d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1372	glob.c	FUNCTION_12
0x40026d6	        0x488945e0	             mov qword [rbp - 0x20], rax	      1372	glob.c	FUNCTION_12
0x40026da	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1372	glob.c	FUNCTION_12
0x40026de	          0x488b00	                    mov rax, qword [rax]	      1372	glob.c	FUNCTION_12
0x40026e1	        0x488945e8	             mov qword [rbp - 0x18], rax	      1372	glob.c	FUNCTION_12
0x40026e5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1373	glob.c	FUNCTION_12
0x40026e9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1373	glob.c	FUNCTION_12
0x40026ed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1373	glob.c	FUNCTION_12
0x40026f1	          0x488b00	                    mov rax, qword [rax]	      1373	glob.c	FUNCTION_12
0x40026f4	        0x488945f8	                mov qword [rbp - 8], rax	      1373	glob.c	FUNCTION_12
0x40026f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1375	glob.c	FUNCTION_12	IF_1
0x40026fc	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1375	glob.c	FUNCTION_12	IF_1
0x4002700	            0x7507	                           jne 0x4002709	      1375	glob.c	FUNCTION_12	IF_1
0x4002702	      0xb800000000	                              mov eax, 0	      1376	glob.c	FUNCTION_12	IF_1
0x4002707	            0xeb2f	                           jmp 0x4002738	      1376	glob.c	FUNCTION_12	IF_1
0x4002709	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1377	glob.c	FUNCTION_12	IF_2
0x400270e	            0x7507	                           jne 0x4002717	      1377	glob.c	FUNCTION_12	IF_2
0x4002710	      0xb801000000	                              mov eax, 1	      1378	glob.c	FUNCTION_12	IF_2
0x4002715	            0xeb21	                           jmp 0x4002738	      1378	glob.c	FUNCTION_12	IF_2
0x4002717	      0x48837df800	                  cmp qword [rbp - 8], 0	      1379	glob.c	FUNCTION_12	IF_3
0x400271c	            0x7507	                           jne 0x4002725	      1379	glob.c	FUNCTION_12	IF_3
0x400271e	      0xb8ffffffff	                     mov eax, 0xffffffff	      1380	glob.c	FUNCTION_12	IF_3
0x4002723	            0xeb13	                           jmp 0x4002738	      1380	glob.c	FUNCTION_12	IF_3
0x4002725	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1381	glob.c	FUNCTION_12	CALL_1
0x4002729	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1381	glob.c	FUNCTION_12	CALL_1
0x400272d	          0x4889d6	                            mov rsi, rdx	      1381	glob.c	FUNCTION_12	CALL_1
0x4002730	          0x4889c7	                            mov rdi, rax	      1381	glob.c	FUNCTION_12	CALL_1
0x4002733	      0xe800000000	                          call 0x4002738	      1381	glob.c	FUNCTION_12	CALL_1
0x4002738	              0xc9	                                   leave	      1382	glob.c	FUNCTION_12
0x4002739	              0xc3	                                     ret	      1382	glob.c	FUNCTION_12
link_exists2_p	functions,0:ELSE,0:CALL,4:DO,0:SWITCH,0:IF,1:WHILE,0:FOR,0	68
0x4002972	              0x55	                                push rbp	      1504	glob.c	FUNCTION_15
0x4002973	          0x4889e5	                            mov rbp, rsp	      1504	glob.c	FUNCTION_15
0x4002976	              0x53	                                push rbx	      1504	glob.c	FUNCTION_15
0x4002977	    0x4881ecd80000	                           sub rsp, 0xd8	      1504	glob.c	FUNCTION_15
0x400297e	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1504	glob.c	FUNCTION_15
0x4002985	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      1504	glob.c	FUNCTION_15
0x400298c	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      1504	glob.c	FUNCTION_15
0x4002993	    0x48898d20ffff	             mov qword [rbp - 0xe0], rcx	      1504	glob.c	FUNCTION_15
0x400299a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1504	glob.c	FUNCTION_15
0x40029a3	        0x488945e8	             mov qword [rbp - 0x18], rax	      1504	glob.c	FUNCTION_15
0x40029a7	            0x31c0	                            xor eax, eax	      1504	glob.c	FUNCTION_15
0x40029a9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1505	glob.c	FUNCTION_15	CALL_1
0x40029b0	          0x4889c7	                            mov rdi, rax	      1505	glob.c	FUNCTION_15	CALL_1
0x40029b3	      0xe800000000	                          call 0x40029b8	      1505	glob.c	FUNCTION_15	CALL_1
0x40029b8	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      1505	glob.c	FUNCTION_15	CALL_1
0x40029bf	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      1506	glob.c	FUNCTION_15
0x40029c6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1506	glob.c	FUNCTION_15
0x40029cd	          0x4801d0	                            add rax, rdx	      1506	glob.c	FUNCTION_15
0x40029d0	        0x4883c002	                              add rax, 2	      1506	glob.c	FUNCTION_15
0x40029d4	        0x488d500f	                    lea rdx, [rax + 0xf]	      1506	glob.c	FUNCTION_15
0x40029d8	      0xb810000000	                           mov eax, 0x10	      1506	glob.c	FUNCTION_15
0x40029dd	        0x4883e801	                              sub rax, 1	      1506	glob.c	FUNCTION_15
0x40029e1	          0x4801d0	                            add rax, rdx	      1506	glob.c	FUNCTION_15
0x40029e4	      0xbb10000000	                           mov ebx, 0x10	      1506	glob.c	FUNCTION_15
0x40029e9	      0xba00000000	                              mov edx, 0	      1506	glob.c	FUNCTION_15
0x40029ee	          0x48f7f3	                                 div rbx	      1506	glob.c	FUNCTION_15
0x40029f1	        0x486bc010	                     imul rax, rax, 0x10	      1506	glob.c	FUNCTION_15
0x40029f5	          0x4829c4	                            sub rsp, rax	      1506	glob.c	FUNCTION_15
0x40029f8	          0x4889e0	                            mov rax, rsp	      1506	glob.c	FUNCTION_15
0x40029fb	        0x4883c00f	                            add rax, 0xf	      1506	glob.c	FUNCTION_15
0x40029ff	        0x48c1e804	                              shr rax, 4	      1506	glob.c	FUNCTION_15
0x4002a03	        0x48c1e004	                              shl rax, 4	      1506	glob.c	FUNCTION_15
0x4002a07	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1506	glob.c	FUNCTION_15
0x4002a0e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a15	        0x488d5801	                      lea rbx, [rax + 1]	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a19	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a20	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a27	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a2e	          0x4889ce	                            mov rsi, rcx	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a31	          0x4889c7	                            mov rdi, rax	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a34	      0xe800000000	                          call 0x4002a39	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a39	      0xba01000000	                              mov edx, 1	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a3e	      0xbe00000000	                              mov esi, 0	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a43	          0x4889c7	                            mov rdi, rax	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a46	      0xe800000000	                          call 0x4002a4b	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a4b	          0x4889c1	                            mov rcx, rax	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a4e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a55	          0x4889da	                            mov rdx, rbx	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a58	          0x4889c6	                            mov rsi, rax	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a5b	          0x4889cf	                            mov rdi, rcx	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a5e	      0xe800000000	                          call 0x4002a63	      1509	glob.c	FUNCTION_15	CALL_4
0x4002a63	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1519	glob.c	FUNCTION_15
0x4002a6a	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1519	glob.c	FUNCTION_15
0x4002a6e	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	      1519	glob.c	FUNCTION_15
0x4002a75	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      1519	glob.c	FUNCTION_15
0x4002a7c	          0x4889ce	                            mov rsi, rcx	      1519	glob.c	FUNCTION_15
0x4002a7f	          0x4889d7	                            mov rdi, rdx	      1519	glob.c	FUNCTION_15
0x4002a82	            0xffd0	                                call rax	      1519	glob.c	FUNCTION_15
0x4002a84	            0x85c0	                           test eax, eax	      1519	glob.c	FUNCTION_15
0x4002a86	           0xf94c0	                                 sete al	      1519	glob.c	FUNCTION_15
0x4002a89	           0xfb6c0	                           movzx eax, al	      1519	glob.c	FUNCTION_15
0x4002a8c	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1520	glob.c	FUNCTION_15
0x4002a90	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1520	glob.c	FUNCTION_15
0x4002a99	            0x7405	                            je 0x4002aa0	      1520	glob.c	FUNCTION_15
0x4002a9b	      0xe800000000	                          call 0x4002aa0	      1520	glob.c	FUNCTION_15
0x4002aa0	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1520	glob.c	FUNCTION_15
0x4002aa4	              0xc9	                                   leave	      1520	glob.c	FUNCTION_15
0x4002aa5	              0xc3	                                     ret	      1520	glob.c	FUNCTION_15
size_add_wrapv	functions,0:ELSE,0:CALL,1:DO,0:SWITCH,0:IF,0:WHILE,0:FOR,0	19
0x4000119	              0x55	                                push rbp	       263	glob.c	FUNCTION_7
0x400011a	          0x4889e5	                            mov rbp, rsp	       263	glob.c	FUNCTION_7
0x400011d	        0x48897df8	                mov qword [rbp - 8], rdi	       263	glob.c	FUNCTION_7
0x4000121	        0x488975f0	             mov qword [rbp - 0x10], rsi	       263	glob.c	FUNCTION_7
0x4000125	        0x488955e8	             mov qword [rbp - 0x18], rdx	       263	glob.c	FUNCTION_7
0x4000129	      0xb900000000	                              mov ecx, 0	       265	glob.c	FUNCTION_7	CALL_1
0x400012e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       265	glob.c	FUNCTION_7	CALL_1
0x4000132	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       265	glob.c	FUNCTION_7	CALL_1
0x4000136	          0x4801d0	                            add rax, rdx	       265	glob.c	FUNCTION_7	CALL_1
0x4000139	        0x483b45f8	                cmp rax, qword [rbp - 8]	       265	glob.c	FUNCTION_7	CALL_1
0x400013d	            0x7305	                           jae 0x4000144	       265	glob.c	FUNCTION_7	CALL_1
0x400013f	      0xb901000000	                              mov ecx, 1	       265	glob.c	FUNCTION_7	CALL_1
0x4000144	          0x4889c2	                            mov rdx, rax	       265	glob.c	FUNCTION_7	CALL_1
0x4000147	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       265	glob.c	FUNCTION_7	CALL_1
0x400014b	          0x488910	                    mov qword [rax], rdx	       265	glob.c	FUNCTION_7	CALL_1
0x400014e	          0x4889c8	                            mov rax, rcx	       265	glob.c	FUNCTION_7	CALL_1
0x4000151	          0x83e001	                              and eax, 1	       265	glob.c	FUNCTION_7	CALL_1
0x4000154	              0x5d	                                 pop rbp	       270	glob.c	FUNCTION_7
0x4000155	              0xc3	                                     ret	       270	glob.c	FUNCTION_7
__glob_pattern_type	functions,0:ELSE,0:CALL,0:DO,0:SWITCH,1:IF,3:WHILE,0:FOR,1	56
0x40028a8	              0x55	                                push rbp	      1448	glob.c	FUNCTION_14
0x40028a9	          0x4889e5	                            mov rbp, rsp	      1448	glob.c	FUNCTION_14
0x40028ac	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1448	glob.c	FUNCTION_14
0x40028b0	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1448	glob.c	FUNCTION_14
0x40028b3	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1450	glob.c	FUNCTION_14
0x40028ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1452	glob.c	FUNCTION_14	FOR_1
0x40028be	        0x488945f8	                mov qword [rbp - 8], rax	      1452	glob.c	FUNCTION_14	FOR_1
0x40028c2	            0xeb73	                           jmp 0x4002937	      1452	glob.c	FUNCTION_14	FOR_1
0x40028c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028c8	           0xfb600	                   movzx eax, byte [rax]	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028cb	           0xfbec0	                           movsx eax, al	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028ce	          0x83f85b	                           cmp eax, 0x5b	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028d1	            0x7444	                            je 0x4002917	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028d3	          0x83f85b	                           cmp eax, 0x5b	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028d6	            0x7f0c	                            jg 0x40028e4	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028d8	          0x83f82a	                           cmp eax, 0x2a	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028db	            0x7413	                            je 0x40028f0	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028dd	          0x83f83f	                           cmp eax, 0x3f	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028e0	            0x740e	                            je 0x40028f0	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028e2	            0xeb4e	                           jmp 0x4002932	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028e4	          0x83f85c	                           cmp eax, 0x5c	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028e7	            0x740e	                            je 0x40028f7	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028e9	          0x83f85d	                           cmp eax, 0x5d	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028ec	            0x742f	                            je 0x400291d	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028ee	            0xeb42	                           jmp 0x4002932	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028f0	      0xb801000000	                              mov eax, 1	      1457	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028f5	            0xeb4e	                           jmp 0x4002945	      1457	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40028f7	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1460	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x40028fb	            0x7431	                            je 0x400292e	      1460	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x40028fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1462	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x4002901	        0x4883c001	                              add rax, 1	      1462	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x4002905	           0xfb600	                   movzx eax, byte [rax]	      1462	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x4002908	            0x84c0	                             test al, al	      1462	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x400290a	            0x7405	                            je 0x4002911	      1462	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x400290c	      0x488345f801	                  add qword [rbp - 8], 1	      1463	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x4002911	        0x834df402	                 or dword [rbp - 0xc], 2	      1464	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x4002915	            0xeb17	                           jmp 0x400292e	      1466	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4002917	        0x834df404	                 or dword [rbp - 0xc], 4	      1469	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400291b	            0xeb15	                           jmp 0x4002932	      1470	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400291d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x4002920	          0x83e004	                              and eax, 4	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x4002923	            0x85c0	                           test eax, eax	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x4002925	            0x740a	                            je 0x4002931	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x4002927	      0xb801000000	                              mov eax, 1	      1474	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x400292c	            0xeb17	                           jmp 0x4002945	      1474	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x400292e	              0x90	                                     nop	      1466	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400292f	            0xeb01	                           jmp 0x4002932	      1466	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4002931	              0x90	                                     nop	      1475	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4002932	      0x488345f801	                  add qword [rbp - 8], 1	      1452	glob.c	FUNCTION_14	FOR_1
0x4002937	        0x488b45f8	                mov rax, qword [rbp - 8]	      1452	glob.c	FUNCTION_14	FOR_1
0x400293b	           0xfb600	                   movzx eax, byte [rax]	      1452	glob.c	FUNCTION_14	FOR_1
0x400293e	            0x84c0	                             test al, al	      1452	glob.c	FUNCTION_14	FOR_1
0x4002940	            0x7582	                           jne 0x40028c4	      1452	glob.c	FUNCTION_14	FOR_1
0x4002942	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1478	glob.c	FUNCTION_14
0x4002945	              0x5d	                                 pop rbp	      1479	glob.c	FUNCTION_14
0x4002946	              0xc3	                                     ret	      1479	glob.c	FUNCTION_14
readdir_result_might_be_symlink	functions,0:ELSE,0:CALL,0:DO,0:SWITCH,0:IF,0:WHILE,0:FOR,0	19
0x4000040	              0x55	                                push rbp	       126	glob.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       126	glob.c	FUNCTION_1
0x4000044	          0x4889f8	                            mov rax, rdi	       126	glob.c	FUNCTION_1
0x4000047	          0x4889f1	                            mov rcx, rsi	       126	glob.c	FUNCTION_1
0x400004a	          0x4889ca	                            mov rdx, rcx	       126	glob.c	FUNCTION_1
0x400004d	        0x488945f0	             mov qword [rbp - 0x10], rax	       126	glob.c	FUNCTION_1
0x4000051	        0x488955f8	                mov qword [rbp - 8], rdx	       126	glob.c	FUNCTION_1
0x4000055	         0xfb645f8	               movzx eax, byte [rbp - 8]	       127	glob.c	FUNCTION_1
0x4000059	            0x84c0	                             test al, al	       127	glob.c	FUNCTION_1
0x400005b	            0x7408	                            je 0x4000065	       127	glob.c	FUNCTION_1
0x400005d	         0xfb645f8	               movzx eax, byte [rbp - 8]	       127	glob.c	FUNCTION_1
0x4000061	            0x3c0a	                             cmp al, 0xa	       127	glob.c	FUNCTION_1
0x4000063	            0x7507	                           jne 0x400006c	       127	glob.c	FUNCTION_1
0x4000065	      0xb801000000	                              mov eax, 1	       127	glob.c	FUNCTION_1
0x400006a	            0xeb05	                           jmp 0x4000071	       127	glob.c	FUNCTION_1
0x400006c	      0xb800000000	                              mov eax, 0	       127	glob.c	FUNCTION_1
0x4000071	          0x83e001	                              and eax, 1	       127	glob.c	FUNCTION_1
0x4000074	              0x5d	                                 pop rbp	       128	glob.c	FUNCTION_1
0x4000075	              0xc3	                                     ret	       128	glob.c	FUNCTION_1
convert_dirent	functions,0:ELSE,0:CALL,0:DO,0:SWITCH,0:IF,1:WHILE,0:FOR,0	25
0x40000bf	              0x55	                                push rbp	       186	glob.c	FUNCTION_5
0x40000c0	          0x4889e5	                            mov rbp, rsp	       186	glob.c	FUNCTION_5
0x40000c3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       186	glob.c	FUNCTION_5
0x40000c7	      0x48837de800	               cmp qword [rbp - 0x18], 0	       187	glob.c	FUNCTION_5	IF_1
0x40000cc	            0x751a	                           jne 0x40000e8	       187	glob.c	FUNCTION_5	IF_1
0x40000ce	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       189	glob.c	FUNCTION_5	IF_1
0x40000d6	    0x48c745f80000	                  mov qword [rbp - 8], 0	       189	glob.c	FUNCTION_5	IF_1
0x40000de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       190	glob.c	FUNCTION_5	IF_1
0x40000e2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       190	glob.c	FUNCTION_5	IF_1
0x40000e6	            0xeb2f	                           jmp 0x4000117	       190	glob.c	FUNCTION_5	IF_1
0x40000e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       192	glob.c	FUNCTION_5
0x40000ec	        0x4883c013	                           add rax, 0x13	       192	glob.c	FUNCTION_5
0x40000f0	        0x488945f0	             mov qword [rbp - 0x10], rax	       192	glob.c	FUNCTION_5
0x40000f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       192	glob.c	FUNCTION_5
0x40000f8	         0xfb64012	           movzx eax, byte [rax + 0x12] 	       192	glob.c	FUNCTION_5
0x40000fc	          0x8845f8	                  mov byte [rbp - 8], al	       192	glob.c	FUNCTION_5
0x40000ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       192	glob.c	FUNCTION_5
0x4000103	          0x488b00	                    mov rax, qword [rax]	       192	glob.c	FUNCTION_5
0x4000106	          0x4885c0	                           test rax, rax	       192	glob.c	FUNCTION_5
0x4000109	           0xf94c0	                                 sete al	       192	glob.c	FUNCTION_5
0x400010c	          0x8845f9	                  mov byte [rbp - 7], al	       192	glob.c	FUNCTION_5
0x400010f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       193	glob.c	FUNCTION_5
0x4000113	        0x488b55f8	                mov rdx, qword [rbp - 8]	       193	glob.c	FUNCTION_5
0x4000117	              0x5d	                                 pop rbp	       194	glob.c	FUNCTION_5
0x4000118	              0xc3	                                     ret	       194	glob.c	FUNCTION_5
link_exists_p	functions,0:ELSE,1:CALL,2:DO,0:SWITCH,0:IF,1:WHILE,0:FOR,0	39
0x4002aa6	              0x55	                                push rbp	      1526	glob.c	FUNCTION_16
0x4002aa7	          0x4889e5	                            mov rbp, rsp	      1526	glob.c	FUNCTION_16
0x4002aaa	    0x4881ecd00000	                           sub rsp, 0xd0	      1526	glob.c	FUNCTION_16
0x4002ab1	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	      1526	glob.c	FUNCTION_16
0x4002ab7	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      1526	glob.c	FUNCTION_16
0x4002abe	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      1526	glob.c	FUNCTION_16
0x4002ac5	    0x48898d40ffff	             mov qword [rbp - 0xc0], rcx	      1526	glob.c	FUNCTION_16
0x4002acc	    0x4c898538ffff	              mov qword [rbp - 0xc8], r8	      1526	glob.c	FUNCTION_16
0x4002ad3	    0x44898d58ffff	             mov dword [rbp - 0xa8], r9d	      1526	glob.c	FUNCTION_16
0x4002ada	    0x64488b042528	                mov rax, qword fs:[0x28]	      1526	glob.c	FUNCTION_16
0x4002ae3	        0x488945f8	                mov qword [rbp - 8], rax	      1526	glob.c	FUNCTION_16
0x4002ae7	            0x31c0	                            xor eax, eax	      1526	glob.c	FUNCTION_16
0x4002ae9	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      1528	glob.c	FUNCTION_16	IF_1
0x4002aef	            0x4898	                                    cdqe	      1528	glob.c	FUNCTION_16	IF_1
0x4002af1	      0x2500020000	                          and eax, 0x200	      1528	glob.c	FUNCTION_16	IF_1
0x4002af6	          0x4885c0	                           test rax, rax	      1528	glob.c	FUNCTION_16	IF_1
0x4002af9	            0x7426	                            je 0x4002b21	      1528	glob.c	FUNCTION_16	IF_1
0x4002afb	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1529	glob.c	FUNCTION_16	CALL_1
0x4002b02	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      1529	glob.c	FUNCTION_16	CALL_1
0x4002b09	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      1529	glob.c	FUNCTION_16	CALL_1
0x4002b10	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1529	glob.c	FUNCTION_16	CALL_1
0x4002b17	          0x4889c7	                            mov rdi, rax	      1529	glob.c	FUNCTION_16	CALL_1
0x4002b1a	      0xe853feffff	                 call sym.link_exists2_p	      1529	glob.c	FUNCTION_16	CALL_1
0x4002b1f	            0xeb28	                           jmp 0x4002b49	      1529	glob.c	FUNCTION_16	CALL_1
0x4002b21	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1535	glob.c	FUNCTION_16	ELSE_1
0x4002b28	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      1535	glob.c	FUNCTION_16	ELSE_1
0x4002b2f	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1535	glob.c	FUNCTION_16	ELSE_1
0x4002b35	      0xb900000000	                              mov ecx, 0	      1535	glob.c	FUNCTION_16	ELSE_1
0x4002b3a	            0x89c7	                            mov edi, eax	      1535	glob.c	FUNCTION_16	ELSE_1
0x4002b3c	      0xe800000000	                          call 0x4002b41	      1535	glob.c	FUNCTION_16	ELSE_1
0x4002b41	            0x85c0	                           test eax, eax	      1535	glob.c	FUNCTION_16	ELSE_1
0x4002b43	           0xf94c0	                                 sete al	      1535	glob.c	FUNCTION_16	ELSE_1
0x4002b46	           0xfb6c0	                           movzx eax, al	      1535	glob.c	FUNCTION_16	ELSE_1
0x4002b49	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1540	glob.c	FUNCTION_16
0x4002b4d	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1540	glob.c	FUNCTION_16
0x4002b56	            0x7405	                            je 0x4002b5d	      1540	glob.c	FUNCTION_16
0x4002b58	      0xe800000000	                          call 0x4002b5d	      1540	glob.c	FUNCTION_16
0x4002b5d	              0xc9	                                   leave	      1540	glob.c	FUNCTION_16
0x4002b5e	              0xc3	                                     ret	      1540	glob.c	FUNCTION_16
glob_in_dir	functions,0:ELSE,10:CALL,31:DO,0:SWITCH,0:IF,31:WHILE,3:FOR,2	568
0x4002b5f	              0x55	                                push rbp	      1552	glob.c	FUNCTION_17
0x4002b60	          0x4889e5	                            mov rbp, rsp	      1552	glob.c	FUNCTION_17
0x4002b63	              0x53	                                push rbx	      1552	glob.c	FUNCTION_17
0x4002b64	    0x4881eca80300	                          sub rsp, 0x3a8	      1552	glob.c	FUNCTION_17
0x4002b6b	    0x4889bd78fcff	            mov qword [rbp - 0x388], rdi	      1552	glob.c	FUNCTION_17
0x4002b72	    0x4889b570fcff	            mov qword [rbp - 0x390], rsi	      1552	glob.c	FUNCTION_17
0x4002b79	    0x89956cfcffff	            mov dword [rbp - 0x394], edx	      1552	glob.c	FUNCTION_17
0x4002b7f	    0x48898d60fcff	            mov qword [rbp - 0x3a0], rcx	      1552	glob.c	FUNCTION_17
0x4002b86	    0x4c898558fcff	             mov qword [rbp - 0x3a8], r8	      1552	glob.c	FUNCTION_17
0x4002b8d	    0x4c898d50fcff	             mov qword [rbp - 0x3b0], r9	      1552	glob.c	FUNCTION_17
0x4002b94	    0x64488b042528	                mov rax, qword fs:[0x28]	      1552	glob.c	FUNCTION_17
0x4002b9d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1552	glob.c	FUNCTION_17
0x4002ba1	            0x31c0	                            xor eax, eax	      1552	glob.c	FUNCTION_17
0x4002ba3	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	      1553	glob.c	FUNCTION_17	CALL_1
0x4002baa	          0x4889c7	                            mov rdi, rax	      1553	glob.c	FUNCTION_17	CALL_1
0x4002bad	      0xe800000000	                          call 0x4002bb2	      1553	glob.c	FUNCTION_17	CALL_1
0x4002bb2	    0x488985e8fcff	            mov qword [rbp - 0x318], rax	      1553	glob.c	FUNCTION_17	CALL_1
0x4002bb9	    0x48c785a0fcff	              mov qword [rbp - 0x360], 0	      1554	glob.c	FUNCTION_17
0x4002bc4	    0x488d85d0fdff	                  lea rax, [rbp - 0x230]	      1562	glob.c	FUNCTION_17
0x4002bcb	    0x488985a8fcff	            mov qword [rbp - 0x358], rax	      1562	glob.c	FUNCTION_17
0x4002bd2	    0x488d85d0fdff	                  lea rax, [rbp - 0x230]	      1563	glob.c	FUNCTION_17
0x4002bd9	    0x488985b0fcff	            mov qword [rbp - 0x350], rax	      1563	glob.c	FUNCTION_17
0x4002be0	    0x48c785b8fcff	              mov qword [rbp - 0x348], 0	      1564	glob.c	FUNCTION_17
0x4002beb	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	      1565	glob.c	FUNCTION_17
0x4002bf6	    0x48818550fcff	          add qword [rbp - 0x3b0], 0x210	      1570	glob.c	FUNCTION_17
0x4002c01	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	      1572	glob.c	FUNCTION_17
0x4002c0c	    0x48c785d8fdff	          mov qword [rbp - 0x228], 0x40 	      1573	glob.c	FUNCTION_17
0x4002c17	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1575	glob.c	FUNCTION_17	CALL_2
0x4002c1d	          0x83e040	                           and eax, 0x40	      1575	glob.c	FUNCTION_17	CALL_2
0x4002c20	            0x85c0	                           test eax, eax	      1575	glob.c	FUNCTION_17	CALL_2
0x4002c22	           0xf94c0	                                 sete al	      1575	glob.c	FUNCTION_17	CALL_2
0x4002c25	           0xfb6d0	                           movzx edx, al	      1575	glob.c	FUNCTION_17	CALL_2
0x4002c28	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      1575	glob.c	FUNCTION_17	CALL_2
0x4002c2f	            0x89d6	                            mov esi, edx	      1575	glob.c	FUNCTION_17	CALL_2
0x4002c31	          0x4889c7	                            mov rdi, rax	      1575	glob.c	FUNCTION_17	CALL_2
0x4002c34	      0xe800000000	                          call 0x4002c39	      1575	glob.c	FUNCTION_17	CALL_2
0x4002c39	    0x898590fcffff	            mov dword [rbp - 0x370], eax	      1575	glob.c	FUNCTION_17	CALL_2
0x4002c3f	    0x83bd90fcffff	              cmp dword [rbp - 0x370], 0	      1576	glob.c	FUNCTION_17	IF_1
0x4002c46	            0x751b	                           jne 0x4002c63	      1576	glob.c	FUNCTION_17	IF_1
0x4002c48	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1576	glob.c	FUNCTION_17	IF_1
0x4002c4e	      0x2510080000	                          and eax, 0x810	      1576	glob.c	FUNCTION_17	IF_1
0x4002c53	            0x85c0	                           test eax, eax	      1576	glob.c	FUNCTION_17	IF_1
0x4002c55	            0x740c	                            je 0x4002c63	      1576	glob.c	FUNCTION_17	IF_1
0x4002c57	    0x838d6cfcffff	            or dword [rbp - 0x394], 0x10	      1581	glob.c	FUNCTION_17	IF_1
0x4002c5e	      0xe99c050000	                           jmp 0x40031ff	      1581	glob.c	FUNCTION_17	IF_1
0x4002c63	    0x83bd90fcffff	              cmp dword [rbp - 0x370], 0	      1583	glob.c	FUNCTION_17	ELSE_1	IF_2
0x4002c6a	     0xf859d010000	                           jne 0x4002e0d	      1583	glob.c	FUNCTION_17	ELSE_1	IF_2
0x4002c70	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      1592	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_3
0x4002c77	          0x4889c7	                            mov rdi, rax	      1592	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_3
0x4002c7a	      0xe800000000	                          call 0x4002c7f	      1592	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_3
0x4002c7f	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	      1592	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_3
0x4002c86	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	      1595	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_4
0x4002c8d	        0x488d7001	                      lea rsi, [rax + 1]	      1595	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_4
0x4002c91	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	      1595	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_4
0x4002c98	        0x488d4801	                      lea rcx, [rax + 1]	      1595	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_4
0x4002c9c	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	      1595	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_4
0x4002ca3	          0x4889c2	                            mov rdx, rax	      1595	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_4
0x4002ca6	          0x4889cf	                            mov rdi, rcx	      1595	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_4
0x4002ca9	      0xe86bd4ffff	                 call sym.size_add_wrapv	      1595	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_4
0x4002cae	          0x83f001	                              xor eax, 1	      1595	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_4
0x4002cb1	            0x84c0	                             test al, al	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cb3	            0x7424	                            je 0x4002cd9	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cb5	    0x488b9530fdff	            mov rdx, qword [rbp - 0x2d0]	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cbc	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cc3	          0x4889d6	                            mov rsi, rdx	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cc6	          0x4889c7	                            mov rdi, rax	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cc9	      0xe888d4ffff	                call sym.glob_use_alloca	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cce	            0x84c0	                             test al, al	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cd0	            0x7407	                            je 0x4002cd9	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cd2	      0xb801000000	                              mov eax, 1	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cd7	            0xeb05	                           jmp 0x4002cde	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cd9	      0xb800000000	                              mov eax, 0	      1596	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_5
0x4002cde	    0x88858bfcffff	              mov byte [rbp - 0x375], al	      1594	glob.c	FUNCTION_17	ELSE_1	IF_2
0x4002ce4	    0x80a58bfcffff	               and byte [rbp - 0x375], 1	      1594	glob.c	FUNCTION_17	ELSE_1	IF_2
0x4002ceb	    0x80bd8bfcffff	               cmp byte [rbp - 0x375], 0	      1598	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x4002cf2	            0x740d	                            je 0x4002d01	      1598	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x4002cf4	    0x48c785c8fcff	              mov qword [rbp - 0x338], 0	      1599	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x4002cff	            0xeb2a	                           jmp 0x4002d2b	      1599	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x4002d01	    0x488b8530fdff	            mov rax, qword [rbp - 0x2d0]	      1602	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	CALL_6
0x4002d08	          0x4889c7	                            mov rdi, rax	      1602	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	CALL_6
0x4002d0b	      0xe800000000	                          call 0x4002d10	      1602	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	CALL_6
0x4002d10	    0x488985c8fcff	            mov qword [rbp - 0x338], rax	      1602	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	CALL_6
0x4002d17	    0x4883bdc8fcff	              cmp qword [rbp - 0x338], 0	      1603	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x4002d1f	            0x750a	                           jne 0x4002d2b	      1603	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x4002d21	      0xb801000000	                              mov eax, 1	      1604	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x4002d26	      0xe90c090000	                           jmp 0x4003637	      1604	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x4002d2b	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d32	        0x488d5801	                      lea rbx, [rax + 1]	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d36	    0x488b95e8fcff	            mov rdx, qword [rbp - 0x318]	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d3d	    0x488b8d70fcff	            mov rcx, qword [rbp - 0x390]	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d44	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d4b	          0x4889ce	                            mov rsi, rcx	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d4e	          0x4889c7	                            mov rdi, rax	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d51	      0xe800000000	                          call 0x4002d56	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d56	      0xba01000000	                              mov edx, 1	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d5b	      0xbe00000000	                              mov esi, 0	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d60	          0x4889c7	                            mov rdi, rax	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d63	      0xe800000000	                          call 0x4002d68	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d68	          0x4889c1	                            mov rcx, rax	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d6b	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d72	          0x4889da	                            mov rdx, rbx	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d75	          0x4889c6	                            mov rsi, rax	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d78	          0x4889cf	                            mov rdi, rcx	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d7b	      0xe800000000	                          call 0x4002d80	      1607	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_9
0x4002d80	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1610	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002d86	            0x4898	                                    cdqe	      1610	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002d88	      0x2500020000	                          and eax, 0x200	      1610	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002d8d	          0x4885c0	                           test rax, rax	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002d90	            0x7428	                            je 0x4002dba	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002d92	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1611	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002d99	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1611	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002d9d	    0x488d8d40fdff	                  lea rcx, [rbp - 0x2c0]	      1611	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002da4	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	      1611	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dab	          0x4889ce	                            mov rsi, rcx	      1611	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dae	          0x4889d7	                            mov rdi, rdx	      1611	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002db1	            0xffd0	                                call rax	      1611	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002db3	            0x85c0	                           test eax, eax	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002db5	           0xf94c0	                                 sete al	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002db8	            0xeb1e	                           jmp 0x4002dd8	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dba	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dc1	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dc8	          0x4889d6	                            mov rsi, rdx	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dcb	          0x4889c7	                            mov rdi, rax	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dce	      0xe800000000	                          call 0x4002dd3	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dd3	            0x85c0	                           test eax, eax	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dd5	           0xf94c0	                                 sete al	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dd8	            0x84c0	                             test al, al	      1610	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002dda	            0x7407	                            je 0x4002de3	      1610	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002ddc	    0x838d6cfcffff	            or dword [rbp - 0x394], 0x10	      1615	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4002de3	     0xfb6858bfcff	           movzx eax, byte [rbp - 0x375]	      1617	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_6
0x4002dea	          0x83f001	                              xor eax, 1	      1617	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_6
0x4002ded	           0xfb6c0	                           movzx eax, al	      1617	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_6
0x4002df0	          0x4885c0	                           test rax, rax	      1617	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_6
0x4002df3	     0xf8406040000	                            je 0x40031ff	      1617	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_6
0x4002df9	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      1618	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x4002e00	          0x4889c7	                            mov rdi, rax	      1618	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x4002e03	      0xe800000000	                          call 0x4002e08	      1618	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x4002e08	      0xe9f2030000	                           jmp 0x40031ff	      1618	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x4002e0d	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1622	glob.c	FUNCTION_17	ELSE_3
0x4002e13	            0x4898	                                    cdqe	      1622	glob.c	FUNCTION_17	ELSE_3
0x4002e15	      0x2500020000	                          and eax, 0x200	      1622	glob.c	FUNCTION_17	ELSE_3
0x4002e1a	          0x4885c0	                           test rax, rax	      1624	glob.c	FUNCTION_17	ELSE_3
0x4002e1d	            0x7419	                            je 0x4002e38	      1624	glob.c	FUNCTION_17	ELSE_3
0x4002e1f	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1623	glob.c	FUNCTION_17	ELSE_3
0x4002e26	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1623	glob.c	FUNCTION_17	ELSE_3
0x4002e2a	    0x488b9570fcff	            mov rdx, qword [rbp - 0x390]	      1624	glob.c	FUNCTION_17	ELSE_3
0x4002e31	          0x4889d7	                            mov rdi, rdx	      1624	glob.c	FUNCTION_17	ELSE_3
0x4002e34	            0xffd0	                                call rax	      1624	glob.c	FUNCTION_17	ELSE_3
0x4002e36	            0xeb0f	                           jmp 0x4002e47	      1624	glob.c	FUNCTION_17	ELSE_3
0x4002e38	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	      1624	glob.c	FUNCTION_17	ELSE_3
0x4002e3f	          0x4889c7	                            mov rdi, rax	      1624	glob.c	FUNCTION_17	ELSE_3
0x4002e42	      0xe800000000	                          call 0x4002e47	      1624	glob.c	FUNCTION_17	ELSE_3
0x4002e47	    0x488985a0fcff	            mov qword [rbp - 0x360], rax	      1622	glob.c	FUNCTION_17	ELSE_3
0x4002e4e	    0x4883bda0fcff	              cmp qword [rbp - 0x360], 0	      1625	glob.c	FUNCTION_17	ELSE_3	IF_7
0x4002e56	            0x7555	                           jne 0x4002ead	      1625	glob.c	FUNCTION_17	ELSE_3	IF_7
0x4002e58	      0xe800000000	                          call 0x4002e5d	      1627	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e5d	            0x8b00	                    mov eax, dword [rax]	      1627	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e5f	          0x83f814	                           cmp eax, 0x14	      1627	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e62	     0xf8497030000	                            je 0x40031ff	      1627	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e68	    0x4883bd60fcff	              cmp qword [rbp - 0x3a0], 0	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e70	            0x7420	                            je 0x4002e92	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e72	      0xe800000000	                          call 0x4002e77	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e77	            0x8b08	                    mov ecx, dword [rax]	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e79	    0x488b9570fcff	            mov rdx, qword [rbp - 0x390]	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e80	    0x488b8560fcff	            mov rax, qword [rbp - 0x3a0]	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e87	            0x89ce	                            mov esi, ecx	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e89	          0x4889d7	                            mov rdi, rdx	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e8c	            0xffd0	                                call rax	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e8e	            0x85c0	                           test eax, eax	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e90	            0x7511	                           jne 0x4002ea3	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e92	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1629	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e98	          0x83e001	                              and eax, 1	      1629	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e9b	            0x85c0	                           test eax, eax	      1629	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002e9d	     0xf845c030000	                            je 0x40031ff	      1629	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002ea3	      0xb802000000	                              mov eax, 2	      1630	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002ea8	      0xe98a070000	                           jmp 0x4003637	      1630	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4002ead	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1634	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002eb3	            0x4898	                                    cdqe	      1634	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002eb5	      0x2500020000	                          and eax, 0x200	      1634	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002eba	          0x4885c0	                           test rax, rax	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x4002ebd	            0x7511	                           jne 0x4002ed0	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x4002ebf	    0x488b85a0fcff	            mov rax, qword [rbp - 0x360]	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x4002ec6	          0x4889c7	                            mov rdi, rax	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x4002ec9	      0xe800000000	                          call 0x4002ece	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x4002ece	            0xeb05	                           jmp 0x4002ed5	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x4002ed0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x4002ed5	    0x898594fcffff	            mov dword [rbp - 0x36c], eax	      1634	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002edb	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002ee1	      0x2580000000	                           and eax, 0x80	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002ee6	            0x85c0	                           test eax, eax	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002ee8	            0x7507	                           jne 0x4002ef1	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002eea	      0xba04000000	                              mov edx, 4	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002eef	            0xeb05	                           jmp 0x4002ef6	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002ef1	      0xba00000000	                              mov edx, 0	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002ef6	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1637	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002efc	          0x83e040	                           and eax, 0x40	      1637	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002eff	            0x85c0	                           test eax, eax	      1637	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002f01	            0x7407	                            je 0x4002f0a	      1637	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002f03	      0xb802000000	                              mov eax, 2	      1637	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002f08	            0xeb05	                           jmp 0x4002f0f	      1637	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002f0a	      0xb800000000	                              mov eax, 0	      1637	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002f0f	             0x9d0	                             or eax, edx	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002f11	    0x898598fcffff	            mov dword [rbp - 0x368], eax	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002f17	    0x818d6cfcffff	           or dword [rbp - 0x394], 0x100	      1642	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4002f21	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1648	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_9
0x4002f27	            0x4898	                                    cdqe	      1648	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_9
0x4002f29	      0x2500020000	                          and eax, 0x200	      1648	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_9
0x4002f2e	          0x4885c0	                           test rax, rax	      1648	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_9
0x4002f31	            0x742f	                            je 0x4002f62	      1648	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_9
0x4002f33	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x4002f3a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x4002f3e	    0x488b95a0fcff	            mov rdx, qword [rbp - 0x360]	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x4002f45	          0x4889d7	                            mov rdi, rdx	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x4002f48	            0xffd0	                                call rax	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x4002f4a	          0x4889c7	                            mov rdi, rax	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x4002f4d	      0xe86dd1ffff	                 call sym.convert_dirent	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x4002f52	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x4002f59	    0x48899538fdff	            mov qword [rbp - 0x2c8], rdx	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x4002f60	            0xeb25	                           jmp 0x4002f87	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x4002f62	    0x488b85a0fcff	            mov rax, qword [rbp - 0x360]	      1653	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	ELSE_5	CALL_13
0x4002f69	          0x4889c7	                            mov rdi, rax	      1653	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	ELSE_5	CALL_13
0x4002f6c	      0xe800000000	                          call 0x4002f71	      1653	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	ELSE_5	CALL_13
0x4002f71	          0x4889c7	                            mov rdi, rax	      1653	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	ELSE_5	CALL_13
0x4002f74	      0xe846d1ffff	                 call sym.convert_dirent	      1653	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	ELSE_5	CALL_13
0x4002f79	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	      1653	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	ELSE_5	CALL_13
0x4002f80	    0x48899538fdff	            mov qword [rbp - 0x2c8], rdx	      1653	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	ELSE_5	CALL_13
0x4002f87	    0x488b8530fdff	            mov rax, qword [rbp - 0x2d0]	      1659	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_10
0x4002f8e	          0x4885c0	                           test rax, rax	      1659	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_10
0x4002f91	     0xf8467020000	                            je 0x40031fe	      1659	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_10
0x4002f97	     0xfb68539fdff	           movzx eax, byte [rbp - 0x2c7]	      1661	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_11
0x4002f9e	            0x84c0	                             test al, al	      1661	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_11
0x4002fa0	     0xf854c020000	                           jne 0x40031f2	      1661	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_11
0x4002fa6	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fac	      0x2500200000	                         and eax, 0x2000	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fb1	            0x85c0	                           test eax, eax	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fb3	            0x7424	                            je 0x4002fd9	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fb5	    0x488b9530fdff	            mov rdx, qword [rbp - 0x2d0]	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fbc	    0x488b8538fdff	            mov rax, qword [rbp - 0x2c8]	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fc3	          0x4889d7	                            mov rdi, rdx	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fc6	          0x4889c6	                            mov rsi, rax	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fc9	      0xe8a8d0ffff	    call sym.readdir_result_might_be_dir	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fce	          0x83f001	                              xor eax, 1	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fd1	            0x84c0	                             test al, al	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fd3	     0xf851f020000	                           jne 0x40031f8	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4002fd9	    0x488b8d30fdff	            mov rcx, qword [rbp - 0x2d0]	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4002fe0	    0x8b9598fcffff	            mov edx, dword [rbp - 0x368]	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4002fe6	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4002fed	          0x4889ce	                            mov rsi, rcx	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4002ff0	          0x4889c7	                            mov rdi, rax	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4002ff3	      0xe800000000	                          call 0x4002ff8	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4002ff8	            0x85c0	                           test eax, eax	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4002ffa	     0xf8521ffffff	                           jne 0x4002f21	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4003000	    0x488b9530fdff	            mov rdx, qword [rbp - 0x2d0]	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x4003007	    0x488b8538fdff	            mov rax, qword [rbp - 0x2c8]	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x400300e	          0x4889d7	                            mov rdi, rdx	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x4003011	          0x4889c6	                            mov rsi, rax	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x4003014	      0xe827d0ffff	call sym.readdir_result_might_be_symlink	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x4003019	          0x83f001	                              xor eax, 1	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x400301c	            0x84c0	                             test al, al	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x400301e	            0x753e	                           jne 0x400305e	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x4003020	    0x488b8d30fdff	            mov rcx, qword [rbp - 0x2d0]	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x4003027	    0x448b856cfcff	            mov r8d, dword [rbp - 0x394]	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x400302e	    0x488bbd58fcff	            mov rdi, qword [rbp - 0x3a8]	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x4003035	    0x488b95e8fcff	            mov rdx, qword [rbp - 0x318]	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x400303c	    0x488bb570fcff	            mov rsi, qword [rbp - 0x390]	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x4003043	    0x8b8594fcffff	            mov eax, dword [rbp - 0x36c]	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x4003049	          0x4589c1	                            mov r9d, r8d	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x400304c	          0x4989f8	                             mov r8, rdi	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x400304f	            0x89c7	                            mov edi, eax	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x4003051	      0xe850faffff	                  call sym.link_exists_p	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x4003056	            0x85c0	                           test eax, eax	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x4003058	     0xf84c3feffff	                            je 0x4002f21	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x400305e	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1677	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003065	        0x488b4008	                mov rax, qword [rax + 8]	      1677	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003069	    0x483b85c0fcff	            cmp rax, qword [rbp - 0x340]	      1677	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003070	     0xf85f7000000	                           jne 0x400316d	      1677	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003076	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1680	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x400307d	        0x488b4008	                mov rax, qword [rax + 8]	      1680	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003081	          0x4801c0	                            add rax, rax	      1680	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003084	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	      1680	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x400308b	    0x48c78500fdff	          mov qword [rbp - 0x300], 0x10 	      1681	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003096	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	      1682	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	CALL_20
0x400309d	        0x48c1e003	                              shl rax, 3	      1682	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	CALL_20
0x40030a1	        0x4883c017	                           add rax, 0x17	      1682	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	CALL_20
0x40030a5	        0x4883e0f8	             and rax, 0xfffffffffffffff8	      1682	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	CALL_20
0x40030a9	    0x48898508fdff	            mov qword [rbp - 0x2f8], rax	      1682	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	CALL_20
0x40030b0	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	      1684	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x40030b7	          0x48f7d0	                                 not rax	      1684	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x40030ba	        0x48c1e804	                              shr rax, 4	      1684	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x40030be	          0x4889c2	                            mov rdx, rax	      1684	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x40030c1	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1685	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x40030c8	        0x488b4008	                mov rax, qword [rax + 8]	      1685	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x40030cc	          0x4839c2	                            cmp rdx, rax	      1684	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x40030cf	     0xf820b010000	                            jb 0x40031e0	      1684	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x40030d5	    0x488b9508fdff	            mov rdx, qword [rbp - 0x2f8]	      1687	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17	CALL_21
0x40030dc	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      1687	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17	CALL_21
0x40030e3	          0x4889d6	                            mov rsi, rdx	      1687	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17	CALL_21
0x40030e6	          0x4889c7	                            mov rdi, rax	      1687	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17	CALL_21
0x40030e9	      0xe868d0ffff	                call sym.glob_use_alloca	      1687	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17	CALL_21
0x40030ee	            0x84c0	                             test al, al	      1687	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17	CALL_21
0x40030f0	            0x741b	                            je 0x400310d	      1687	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17	CALL_21
0x40030f2	    0x48c785b0fcff	              mov qword [rbp - 0x350], 0	      1689	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17
0x40030fd	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      1688	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17
0x4003104	    0x488985d0fcff	            mov qword [rbp - 0x330], rax	      1688	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17
0x400310b	            0xeb24	                           jmp 0x4003131	      1688	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_17
0x400310d	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      1690	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18	CALL_22
0x4003114	          0x4889c7	                            mov rdi, rax	      1690	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18	CALL_22
0x4003117	      0xe800000000	                          call 0x400311c	      1690	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18	CALL_22
0x400311c	    0x488985d0fcff	            mov qword [rbp - 0x330], rax	      1690	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18	CALL_22
0x4003123	    0x4883bdd0fcff	              cmp qword [rbp - 0x330], 0	      1690	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18	CALL_22
0x400312b	     0xf84b5000000	                            je 0x40031e6	      1690	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18	CALL_22
0x4003131	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      1693	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003138	    0x488b95f8fcff	            mov rdx, qword [rbp - 0x308]	      1693	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x400313f	        0x48895008	                mov qword [rax + 8], rdx	      1693	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003143	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      1694	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x400314a	    0x488b95a8fcff	            mov rdx, qword [rbp - 0x358]	      1694	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003151	          0x488910	                    mov qword [rax], rdx	      1694	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003154	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      1695	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x400315b	    0x488985a8fcff	            mov qword [rbp - 0x358], rax	      1695	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4003162	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	      1696	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x400316d	    0x488b8530fdff	            mov rax, qword [rbp - 0x2d0]	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x4003174	          0x4889c7	                            mov rdi, rax	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x4003177	      0xe800000000	                          call 0x400317c	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x400317c	          0x4889c1	                            mov rcx, rax	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x400317f	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x4003186	    0x488b95c0fcff	            mov rdx, qword [rbp - 0x340]	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x400318d	        0x4883c202	                              add rdx, 2	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x4003191	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x4003195	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1699	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_19
0x400319c	    0x488b95c0fcff	            mov rdx, qword [rbp - 0x340]	      1699	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_19
0x40031a3	        0x4883c202	                              add rdx, 2	      1699	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_19
0x40031a7	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1699	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_19
0x40031ab	          0x4885c0	                           test rax, rax	      1699	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_19
0x40031ae	            0x743c	                            je 0x40031ec	      1699	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_19
0x40031b0	    0x488385c0fcff	              add qword [rbp - 0x340], 1	      1701	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x40031b8	    0x488385b8fcff	              add qword [rbp - 0x348], 1	      1702	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x40031c0	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40031c7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40031cb	          0x48f7d0	                                 not rax	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40031ce	    0x483b85b8fcff	            cmp rax, qword [rbp - 0x348]	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40031d5	     0xf8746fdffff	                            ja 0x4002f21	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40031db	      0xe99d010000	                           jmp 0x400337d	      1704	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40031e0	              0x90	                                     nop	      1686	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x40031e1	      0xe997010000	                           jmp 0x400337d	      1686	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x40031e6	              0x90	                                     nop	      1692	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18
0x40031e7	      0xe991010000	                           jmp 0x400337d	      1692	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18
0x40031ec	              0x90	                                     nop	      1700	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_19
0x40031ed	      0xe98b010000	                           jmp 0x400337d	      1700	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_19
0x40031f2	              0x90	                                     nop	      1662	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_11
0x40031f3	      0xe929fdffff	                           jmp 0x4002f21	      1662	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_11
0x40031f8	              0x90	                                     nop	      1667	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12
0x40031f9	      0xe923fdffff	                           jmp 0x4002f21	      1707	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1
0x40031fe	              0x90	                                     nop	      1660	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_10
0x40031ff	    0x4883bdb8fcff	              cmp qword [rbp - 0x348], 0	      1711	glob.c	FUNCTION_17	IF_21
0x4003207	     0xf85bb000000	                           jne 0x40032c8	      1711	glob.c	FUNCTION_17	IF_21
0x400320d	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1711	glob.c	FUNCTION_17	IF_21
0x4003213	          0x83e010	                           and eax, 0x10	      1711	glob.c	FUNCTION_17	IF_21
0x4003216	            0x85c0	                           test eax, eax	      1711	glob.c	FUNCTION_17	IF_21
0x4003218	     0xf84aa000000	                            je 0x40032c8	      1711	glob.c	FUNCTION_17	IF_21
0x400321e	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x4003225	          0x4889c7	                            mov rdi, rax	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x4003228	      0xe800000000	                          call 0x400322d	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x400322d	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x4003234	    0x48c785b8fcff	              mov qword [rbp - 0x348], 1	      1714	glob.c	FUNCTION_17	IF_21
0x400323f	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x4003246	        0x4883c001	                              add rax, 1	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x400324a	          0x4889c7	                            mov rdi, rax	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x400324d	      0xe800000000	                          call 0x4003252	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x4003252	          0x4889c1	                            mov rcx, rax	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x4003255	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x400325c	    0x488b95c0fcff	            mov rdx, qword [rbp - 0x340]	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x4003263	        0x4883c202	                              add rdx, 2	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x4003267	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x400326b	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1716	glob.c	FUNCTION_17	IF_21	IF_22
0x4003272	    0x488b95c0fcff	            mov rdx, qword [rbp - 0x340]	      1716	glob.c	FUNCTION_17	IF_21	IF_22
0x4003279	        0x4883c202	                              add rdx, 2	      1716	glob.c	FUNCTION_17	IF_21	IF_22
0x400327d	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1716	glob.c	FUNCTION_17	IF_21	IF_22
0x4003281	          0x4885c0	                           test rax, rax	      1716	glob.c	FUNCTION_17	IF_21	IF_22
0x4003284	            0x7505	                           jne 0x400328b	      1716	glob.c	FUNCTION_17	IF_21	IF_22
0x4003286	      0xe9f2000000	                           jmp 0x400337d	      1717	glob.c	FUNCTION_17	IF_21	IF_22
0x400328b	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x4003292	        0x488d5001	                      lea rdx, [rax + 1]	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x4003296	    0x488995c0fcff	            mov qword [rbp - 0x340], rdx	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x400329d	    0x488b95a8fcff	            mov rdx, qword [rbp - 0x358]	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x40032a4	        0x4883c002	                              add rax, 2	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x40032a8	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x40032ac	    0x488b9510fdff	            mov rdx, qword [rbp - 0x2f0]	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x40032b3	    0x488b8d78fcff	            mov rcx, qword [rbp - 0x388]	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x40032ba	          0x4889ce	                            mov rsi, rcx	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x40032bd	          0x4889c7	                            mov rdi, rax	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x40032c0	      0xe800000000	                          call 0x40032c5	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x40032c5	          0xc60000	                       mov byte [rax], 0	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x40032c8	    0xc7858cfcffff	              mov dword [rbp - 0x374], 3	      1721	glob.c	FUNCTION_17
0x40032d2	    0x4883bdb8fcff	              cmp qword [rbp - 0x348], 0	      1722	glob.c	FUNCTION_17	IF_23
0x40032da	     0xf84f0020000	                            je 0x40035d0	      1722	glob.c	FUNCTION_17	IF_23
0x40032e0	    0xc7858cfcffff	              mov dword [rbp - 0x374], 0	      1725	glob.c	FUNCTION_17	IF_23
0x40032ea	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x40032f1	          0x488b00	                    mov rax, qword [rax]	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x40032f4	    0x48baffffffff	         movabs rdx, 0x1fffffffffffffff 	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x40032fe	          0x4889d1	                            mov rcx, rdx	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x4003301	          0x4829c1	                            sub rcx, rax	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x4003304	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1728	glob.c	FUNCTION_17	IF_23	IF_24
0x400330b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1728	glob.c	FUNCTION_17	IF_23	IF_24
0x400330f	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	      1728	glob.c	FUNCTION_17	IF_23	IF_24
0x4003316	          0x4801d0	                            add rax, rdx	      1728	glob.c	FUNCTION_17	IF_23	IF_24
0x4003319	        0x4883c001	                              add rax, 1	      1728	glob.c	FUNCTION_17	IF_23	IF_24
0x400331d	          0x4839c1	                            cmp rcx, rax	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x4003320	            0x7302	                           jae 0x4003324	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x4003322	            0xeb59	                           jmp 0x400337d	      1729	glob.c	FUNCTION_17	IF_23	IF_24
0x4003324	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1733	glob.c	FUNCTION_17	IF_23
0x400332b	          0x488b10	                    mov rdx, qword [rax]	      1733	glob.c	FUNCTION_17	IF_23
0x400332e	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1733	glob.c	FUNCTION_17	IF_23
0x4003335	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1733	glob.c	FUNCTION_17	IF_23
0x4003339	          0x4801c2	                            add rdx, rax	      1733	glob.c	FUNCTION_17	IF_23
0x400333c	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	      1733	glob.c	FUNCTION_17	IF_23
0x4003343	          0x4801d0	                            add rax, rdx	      1733	glob.c	FUNCTION_17	IF_23
0x4003346	        0x4883c001	                              add rax, 1	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x400334a	    0x488d14c50000	                        lea rdx, [rax*8]	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x4003352	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x4003359	        0x488b4008	                mov rax, qword [rax + 8]	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x400335d	          0x4889d6	                            mov rsi, rdx	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x4003360	          0x4889c7	                            mov rdi, rax	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x4003363	      0xe800000000	                          call 0x4003368	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x4003368	    0x48898518fdff	            mov qword [rbp - 0x2e8], rax	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x400336f	    0x4883bd18fdff	              cmp qword [rbp - 0x2e8], 0	      1736	glob.c	FUNCTION_17	IF_23	IF_25
0x4003377	     0xf85ee000000	                           jne 0x400346b	      1736	glob.c	FUNCTION_17	IF_23	IF_25
0x400337d	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1741	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x4003384	    0x48898528fdff	            mov qword [rbp - 0x2d8], rax	      1741	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x400338b	    0x48c785d8fcff	              mov qword [rbp - 0x328], 0	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x4003396	            0xeb26	                           jmp 0x40033be	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x4003398	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1744	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_27
0x400339f	    0x488b95d8fcff	            mov rdx, qword [rbp - 0x328]	      1744	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_27
0x40033a6	        0x4883c202	                              add rdx, 2	      1744	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_27
0x40033aa	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1744	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_27
0x40033ae	          0x4889c7	                            mov rdi, rax	      1744	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_27
0x40033b1	      0xe800000000	                          call 0x40033b6	      1744	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_27
0x40033b6	    0x488385d8fcff	              add qword [rbp - 0x328], 1	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x40033be	    0x488b85d8fcff	            mov rax, qword [rbp - 0x328]	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x40033c5	    0x483b85c0fcff	            cmp rax, qword [rbp - 0x340]	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x40033cc	            0x72ca	                            jb 0x4003398	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x40033ce	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1745	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x40033d5	          0x488b00	                    mov rax, qword [rax]	      1745	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x40033d8	    0x488985a8fcff	            mov qword [rbp - 0x358], rax	      1745	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x40033df	    0x4883bda8fcff	              cmp qword [rbp - 0x358], 0	      1750	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26
0x40033e7	            0x7529	                           jne 0x4003412	      1750	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26
0x40033e9	    0x488d85d0fdff	                  lea rax, [rbp - 0x230]	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x40033f0	    0x48398528fdff	           cmp qword [rbp - 0x2d8], rax 	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x40033f7	            0x7462	                            je 0x400345b	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x40033f9	      0xb900000000	                              mov ecx, 0	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x40033fe	      0xbad8060000	                          mov edx, 0x6d8	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x4003403	      0xbe00000000	                              mov esi, 0	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x4003408	      0xbf00000000	                              mov edi, 0	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x400340d	      0xe800000000	                          call 0x4003412	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x4003412	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1755	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x4003419	        0x488b4008	                mov rax, qword [rax + 8]	      1755	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x400341d	    0x488985c0fcff	            mov qword [rbp - 0x340], rax	      1755	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x4003424	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	      1756	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x400342b	    0x483b85b0fcff	            cmp rax, qword [rbp - 0x350]	      1756	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x4003432	            0x7513	                           jne 0x4003447	      1756	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x4003434	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1757	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x400343b	    0x488985b0fcff	            mov qword [rbp - 0x350], rax	      1757	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x4003442	      0xe936ffffff	                           jmp 0x400337d	      1757	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x4003447	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	      1759	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_29
0x400344e	          0x4889c7	                            mov rdi, rax	      1759	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_29
0x4003451	      0xe800000000	                          call 0x4003456	      1759	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_29
0x4003456	      0xe922ffffff	                           jmp 0x400337d	      1760	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x400345b	              0x90	                                     nop	      1753	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26
0x400345c	    0xc7858cfcffff	              mov dword [rbp - 0x374], 1	      1761	glob.c	FUNCTION_17	IF_23	IF_25
0x4003466	      0xe965010000	                           jmp 0x40035d0	      1761	glob.c	FUNCTION_17	IF_23	IF_25
0x400346b	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1767	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x4003472	    0x48898520fdff	            mov qword [rbp - 0x2e0], rax	      1767	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x4003479	    0x48c785e0fcff	              mov qword [rbp - 0x320], 0	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4003484	            0xeb59	                           jmp 0x40034df	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4003486	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x400348d	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4003491	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4003498	          0x488b00	                    mov rax, qword [rax]	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x400349b	        0x488d4801	                      lea rcx, [rax + 1]	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x400349f	    0x488b9558fcff	            mov rdx, qword [rbp - 0x3a8]	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034a6	          0x48890a	                    mov qword [rdx], rcx	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034a9	          0x4801f0	                            add rax, rsi	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034ac	    0x488d14c50000	                        lea rdx, [rax*8]	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034b4	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034bb	          0x4801c2	                            add rdx, rax	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034be	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1771	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034c5	    0x488b8de0fcff	            mov rcx, qword [rbp - 0x320]	      1771	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034cc	        0x4883c102	                              add rcx, 2	      1771	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034d0	        0x488b04c8	            mov rax, qword [rax + rcx*8]	      1771	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034d4	          0x488902	                    mov qword [rdx], rax	      1771	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034d7	    0x488385e0fcff	              add qword [rbp - 0x320], 1	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034df	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034e6	    0x483b85c0fcff	            cmp rax, qword [rbp - 0x340]	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034ed	            0x7297	                            jb 0x4003486	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x40034ef	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1772	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x40034f6	          0x488b00	                    mov rax, qword [rax]	      1772	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x40034f9	    0x488985a8fcff	            mov qword [rbp - 0x358], rax	      1772	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x4003500	    0x4883bda8fcff	              cmp qword [rbp - 0x358], 0	      1777	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28
0x4003508	            0x7529	                           jne 0x4003533	      1777	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28
0x400350a	    0x488d85d0fdff	                  lea rax, [rbp - 0x230]	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x4003511	    0x48398520fdff	           cmp qword [rbp - 0x2e0], rax 	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x4003518	            0x7462	                            je 0x400357c	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x400351a	      0xb900000000	                              mov ecx, 0	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x400351f	      0xbaf3060000	                          mov edx, 0x6f3	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x4003524	      0xbe00000000	                              mov esi, 0	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x4003529	      0xbf00000000	                              mov edi, 0	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x400352e	      0xe800000000	                          call 0x4003533	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x4003533	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1782	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x400353a	        0x488b4008	                mov rax, qword [rax + 8]	      1782	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x400353e	    0x488985c0fcff	            mov qword [rbp - 0x340], rax	      1782	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x4003545	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	      1783	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_29
0x400354c	    0x483b85b0fcff	            cmp rax, qword [rbp - 0x350]	      1783	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_29
0x4003553	            0x7513	                           jne 0x4003568	      1783	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_29
0x4003555	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1784	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_29
0x400355c	    0x488985b0fcff	            mov qword [rbp - 0x350], rax	      1784	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_29
0x4003563	      0xe903ffffff	                           jmp 0x400346b	      1784	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_29
0x4003568	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	      1786	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	CALL_31
0x400356f	          0x4889c7	                            mov rdi, rax	      1786	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	CALL_31
0x4003572	      0xe800000000	                          call 0x4003577	      1786	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	CALL_31
0x4003577	      0xe9effeffff	                           jmp 0x400346b	      1787	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x400357c	              0x90	                                     nop	      1780	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28
0x400357d	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1789	glob.c	FUNCTION_17	IF_23	ELSE_8
0x4003584	    0x488b9518fdff	            mov rdx, qword [rbp - 0x2e8]	      1789	glob.c	FUNCTION_17	IF_23	ELSE_8
0x400358b	        0x48895008	                mov qword [rax + 8], rdx	      1789	glob.c	FUNCTION_17	IF_23	ELSE_8
0x400358f	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x4003596	        0x488b5008	                mov rdx, qword [rax + 8]	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x400359a	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035a1	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035a5	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035ac	          0x488b00	                    mov rax, qword [rax]	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035af	          0x4801c8	                            add rax, rcx	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035b2	        0x48c1e003	                              shl rax, 3	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035b6	          0x4801d0	                            add rax, rdx	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035b9	    0x48c700000000	                      mov qword [rax], 0	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035c0	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1793	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035c7	    0x8b956cfcffff	            mov edx, dword [rbp - 0x394]	      1793	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035cd	          0x895018	             mov dword [rax + 0x18], edx	      1793	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40035d0	    0x4883bda0fcff	              cmp qword [rbp - 0x360], 0	      1797	glob.c	FUNCTION_17	IF_30
0x40035d8	            0x7457	                            je 0x4003631	      1797	glob.c	FUNCTION_17	IF_30
0x40035da	      0xe800000000	                          call 0x40035df	      1799	glob.c	FUNCTION_17	IF_30
0x40035df	            0x8b00	                    mov eax, dword [rax]	      1799	glob.c	FUNCTION_17	IF_30
0x40035e1	    0x89859cfcffff	            mov dword [rbp - 0x364], eax	      1799	glob.c	FUNCTION_17	IF_30
0x40035e7	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      1800	glob.c	FUNCTION_17	IF_30	IF_31
0x40035ed	            0x4898	                                    cdqe	      1800	glob.c	FUNCTION_17	IF_30	IF_31
0x40035ef	      0x2500020000	                          and eax, 0x200	      1800	glob.c	FUNCTION_17	IF_30	IF_31
0x40035f4	          0x4885c0	                           test rax, rax	      1800	glob.c	FUNCTION_17	IF_30	IF_31
0x40035f7	            0x7419	                            je 0x4003612	      1800	glob.c	FUNCTION_17	IF_30	IF_31
0x40035f9	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      1801	glob.c	FUNCTION_17	IF_30	IF_31
0x4003600	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1801	glob.c	FUNCTION_17	IF_30	IF_31
0x4003604	    0x488b95a0fcff	            mov rdx, qword [rbp - 0x360]	      1801	glob.c	FUNCTION_17	IF_30	IF_31
0x400360b	          0x4889d7	                            mov rdi, rdx	      1801	glob.c	FUNCTION_17	IF_30	IF_31
0x400360e	            0xffd0	                                call rax	      1801	glob.c	FUNCTION_17	IF_30	IF_31
0x4003610	            0xeb0f	                           jmp 0x4003621	      1801	glob.c	FUNCTION_17	IF_30	IF_31
0x4003612	    0x488b85a0fcff	            mov rax, qword [rbp - 0x360]	      1803	glob.c	FUNCTION_17	IF_30	ELSE_10
0x4003619	          0x4889c7	                            mov rdi, rax	      1803	glob.c	FUNCTION_17	IF_30	ELSE_10
0x400361c	      0xe800000000	                          call 0x4003621	      1803	glob.c	FUNCTION_17	IF_30	ELSE_10
0x4003621	      0xe800000000	                          call 0x4003626	      1804	glob.c	FUNCTION_17	IF_30
0x4003626	          0x4889c2	                            mov rdx, rax	      1804	glob.c	FUNCTION_17	IF_30
0x4003629	    0x8b859cfcffff	            mov eax, dword [rbp - 0x364]	      1804	glob.c	FUNCTION_17	IF_30
0x400362f	            0x8902	                    mov dword [rdx], eax	      1804	glob.c	FUNCTION_17	IF_30
0x4003631	    0x8b858cfcffff	            mov eax, dword [rbp - 0x374]	      1807	glob.c	FUNCTION_17
0x4003637	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1808	glob.c	FUNCTION_17
0x400363b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1808	glob.c	FUNCTION_17
0x4003644	            0x7405	                            je 0x400364b	      1808	glob.c	FUNCTION_17
0x4003646	      0xe800000000	                          call 0x400364b	      1808	glob.c	FUNCTION_17
0x400364b	    0x4881c4a80300	                          add rsp, 0x3a8	      1808	glob.c	FUNCTION_17
0x4003652	              0x5b	                                 pop rbx	      1808	glob.c	FUNCTION_17
0x4003653	              0x5d	                                 pop rbp	      1808	glob.c	FUNCTION_17
0x4003654	              0xc3	                                     ret	      1808	glob.c	FUNCTION_17
next_brace_sub	functions,0:ELSE,1:CALL,0:DO,0:SWITCH,0:IF,4:WHILE,1:FOR,0	58
0x40001a7	              0x55	                                push rbp	       294	glob.c	FUNCTION_9
0x40001a8	          0x4889e5	                            mov rbp, rsp	       294	glob.c	FUNCTION_9
0x40001ab	        0x48897de8	             mov qword [rbp - 0x18], rdi	       294	glob.c	FUNCTION_9
0x40001af	          0x8975e4	             mov dword [rbp - 0x1c], esi	       294	glob.c	FUNCTION_9
0x40001b2	    0x48c745f80000	                  mov qword [rbp - 8], 0	       295	glob.c	FUNCTION_9
0x40001ba	            0xeb72	                           jmp 0x400022e	       296	glob.c	FUNCTION_9	WHILE_1
0x40001bc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40001bf	          0x83e040	                           and eax, 0x40	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40001c2	            0x85c0	                           test eax, eax	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40001c4	            0x7522	                           jne 0x40001e8	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40001c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40001ca	           0xfb600	                   movzx eax, byte [rax]	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40001cd	            0x3c5c	                            cmp al, 0x5c	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40001cf	            0x7517	                           jne 0x40001e8	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40001d1	      0x488345e801	               add qword [rbp - 0x18], 1	       299	glob.c	FUNCTION_9	WHILE_1	IF_1	IF_2
0x40001d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       299	glob.c	FUNCTION_9	WHILE_1	IF_1	IF_2
0x40001da	           0xfb600	                   movzx eax, byte [rax]	       299	glob.c	FUNCTION_9	WHILE_1	IF_1	IF_2
0x40001dd	            0x84c0	                             test al, al	       299	glob.c	FUNCTION_9	WHILE_1	IF_1	IF_2
0x40001df	            0x745a	                            je 0x400023b	       299	glob.c	FUNCTION_9	WHILE_1	IF_1	IF_2
0x40001e1	      0x488345e801	               add qword [rbp - 0x18], 1	       301	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40001e6	            0xeb46	                           jmp 0x400022e	       301	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40001e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x40001ec	           0xfb600	                   movzx eax, byte [rax]	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x40001ef	            0x3c7d	                            cmp al, 0x7d	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x40001f1	            0x7511	                           jne 0x4000204	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x40001f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x40001f7	        0x488d50ff	                      lea rdx, [rax - 1]	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x40001fb	        0x488955f8	                mov qword [rbp - 8], rdx	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x40001ff	          0x4885c0	                           test rax, rax	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000202	            0x7438	                            je 0x400023c	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000204	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000208	           0xfb600	                   movzx eax, byte [rax]	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x400020b	            0x3c2c	                            cmp al, 0x2c	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x400020d	            0x7507	                           jne 0x4000216	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x400020f	      0x48837df800	                  cmp qword [rbp - 8], 0	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000214	            0x7426	                            je 0x400023c	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000216	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x400021a	        0x488d5001	                      lea rdx, [rax + 1]	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x400021e	        0x488955e8	             mov qword [rbp - 0x18], rdx	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000222	           0xfb600	                   movzx eax, byte [rax]	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000225	            0x3c7b	                            cmp al, 0x7b	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000227	            0x7505	                           jne 0x400022e	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000229	      0x488345f801	                  add qword [rbp - 8], 1	       309	glob.c	FUNCTION_9	ELSE_1	IF_4
0x400022e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       296	glob.c	FUNCTION_9	WHILE_1
0x4000232	           0xfb600	                   movzx eax, byte [rax]	       296	glob.c	FUNCTION_9	WHILE_1
0x4000235	            0x84c0	                             test al, al	       296	glob.c	FUNCTION_9	WHILE_1
0x4000237	            0x7583	                           jne 0x40001bc	       296	glob.c	FUNCTION_9	WHILE_1
0x4000239	            0xeb01	                           jmp 0x400023c	       296	glob.c	FUNCTION_9	WHILE_1
0x400023b	              0x90	                                     nop	       300	glob.c	FUNCTION_9	WHILE_1	IF_1	IF_2
0x400023c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	glob.c	FUNCTION_9
0x4000240	           0xfb600	                   movzx eax, byte [rax]	       312	glob.c	FUNCTION_9
0x4000243	            0x84c0	                             test al, al	       312	glob.c	FUNCTION_9
0x4000245	            0x7406	                            je 0x400024d	       312	glob.c	FUNCTION_9
0x4000247	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	glob.c	FUNCTION_9
0x400024b	            0xeb05	                           jmp 0x4000252	       312	glob.c	FUNCTION_9
0x400024d	      0xb800000000	                              mov eax, 0	       312	glob.c	FUNCTION_9
0x4000252	              0x5d	                                 pop rbp	       313	glob.c	FUNCTION_9
0x4000253	              0xc3	                                     ret	       313	glob.c	FUNCTION_9
glob_use_alloca	functions,0:ELSE,0:CALL,1:DO,0:SWITCH,0:IF,0:WHILE,0:FOR,0	21
0x4000156	              0x55	                                push rbp	       274	glob.c	FUNCTION_8
0x4000157	          0x4889e5	                            mov rbp, rsp	       274	glob.c	FUNCTION_8
0x400015a	        0x4883ec20	                           sub rsp, 0x20	       274	glob.c	FUNCTION_8
0x400015e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       274	glob.c	FUNCTION_8
0x4000162	        0x488975e0	             mov qword [rbp - 0x20], rsi	       274	glob.c	FUNCTION_8
0x4000166	    0x64488b042528	                mov rax, qword fs:[0x28]	       274	glob.c	FUNCTION_8
0x400016f	        0x488945f8	                mov qword [rbp - 8], rax	       274	glob.c	FUNCTION_8
0x4000173	            0x31c0	                            xor eax, eax	       274	glob.c	FUNCTION_8
0x4000175	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       276	glob.c	FUNCTION_8	CALL_1
0x4000179	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       276	glob.c	FUNCTION_8	CALL_1
0x400017d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       276	glob.c	FUNCTION_8	CALL_1
0x4000181	          0x4889ce	                            mov rsi, rcx	       276	glob.c	FUNCTION_8	CALL_1
0x4000184	          0x4889c7	                            mov rdi, rax	       276	glob.c	FUNCTION_8	CALL_1
0x4000187	      0xe88dffffff	                 call sym.size_add_wrapv	       276	glob.c	FUNCTION_8	CALL_1
0x400018c	      0xb800000000	                              mov eax, 0	       276	glob.c	FUNCTION_8	CALL_1
0x4000191	        0x488b4df8	                mov rcx, qword [rbp - 8]	       278	glob.c	FUNCTION_8
0x4000195	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       278	glob.c	FUNCTION_8
0x400019e	            0x7405	                            je 0x40001a5	       278	glob.c	FUNCTION_8
0x40001a0	      0xe800000000	                          call 0x40001a5	       278	glob.c	FUNCTION_8
0x40001a5	              0xc9	                                   leave	       278	glob.c	FUNCTION_8
0x40001a6	              0xc3	                                     ret	       278	glob.c	FUNCTION_8
readdir_result_might_be_dir	functions,0:ELSE,0:CALL,0:DO,0:SWITCH,0:IF,0:WHILE,0:FOR,0	24
0x4000076	              0x55	                                push rbp	       133	glob.c	FUNCTION_2
0x4000077	          0x4889e5	                            mov rbp, rsp	       133	glob.c	FUNCTION_2
0x400007a	        0x4883ec10	                           sub rsp, 0x10	       133	glob.c	FUNCTION_2
0x400007e	          0x4889f8	                            mov rax, rdi	       133	glob.c	FUNCTION_2
0x4000081	          0x4889f1	                            mov rcx, rsi	       133	glob.c	FUNCTION_2
0x4000084	          0x4889ca	                            mov rdx, rcx	       133	glob.c	FUNCTION_2
0x4000087	        0x488945f0	             mov qword [rbp - 0x10], rax	       133	glob.c	FUNCTION_2
0x400008b	        0x488955f8	                mov qword [rbp - 8], rdx	       133	glob.c	FUNCTION_2
0x400008f	         0xfb645f8	               movzx eax, byte [rbp - 8]	       134	glob.c	FUNCTION_2	CALL_1
0x4000093	            0x3c04	                               cmp al, 4	       134	glob.c	FUNCTION_2	CALL_1
0x4000095	            0x7417	                            je 0x40000ae	       134	glob.c	FUNCTION_2	CALL_1
0x4000097	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       134	glob.c	FUNCTION_2	CALL_1
0x400009b	        0x488b45f8	                mov rax, qword [rbp - 8]	       134	glob.c	FUNCTION_2	CALL_1
0x400009f	          0x4889d7	                            mov rdi, rdx	       134	glob.c	FUNCTION_2	CALL_1
0x40000a2	          0x4889c6	                            mov rsi, rax	       134	glob.c	FUNCTION_2	CALL_1
0x40000a5	      0xe896ffffff	call sym.readdir_result_might_be_symlink	       134	glob.c	FUNCTION_2	CALL_1
0x40000aa	            0x84c0	                             test al, al	       134	glob.c	FUNCTION_2	CALL_1
0x40000ac	            0x7407	                            je 0x40000b5	       134	glob.c	FUNCTION_2	CALL_1
0x40000ae	      0xb801000000	                              mov eax, 1	       134	glob.c	FUNCTION_2	CALL_1
0x40000b3	            0xeb05	                           jmp 0x40000ba	       134	glob.c	FUNCTION_2	CALL_1
0x40000b5	      0xb800000000	                              mov eax, 0	       134	glob.c	FUNCTION_2	CALL_1
0x40000ba	          0x83e001	                              and eax, 1	       134	glob.c	FUNCTION_2	CALL_1
0x40000bd	              0xc9	                                   leave	       135	glob.c	FUNCTION_2
0x40000be	              0xc3	                                     ret	       135	glob.c	FUNCTION_2
prefix_array	functions,0:ELSE,2:CALL,7:DO,0:SWITCH,0:IF,5:WHILE,1:FOR,1	91
0x400273a	              0x55	                                push rbp	      1391	glob.c	FUNCTION_13
0x400273b	          0x4889e5	                            mov rbp, rsp	      1391	glob.c	FUNCTION_13
0x400273e	        0x4883ec50	                           sub rsp, 0x50	      1391	glob.c	FUNCTION_13
0x4002742	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1391	glob.c	FUNCTION_13
0x4002746	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1391	glob.c	FUNCTION_13
0x400274a	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1391	glob.c	FUNCTION_13
0x400274e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1393	glob.c	FUNCTION_13	CALL_1
0x4002752	          0x4889c7	                            mov rdi, rax	      1393	glob.c	FUNCTION_13	CALL_1
0x4002755	      0xe800000000	                          call 0x400275a	      1393	glob.c	FUNCTION_13	CALL_1
0x400275a	        0x488945e0	             mov qword [rbp - 0x20], rax	      1393	glob.c	FUNCTION_13	CALL_1
0x400275e	      0x48837de001	               cmp qword [rbp - 0x20], 1	      1401	glob.c	FUNCTION_13	IF_1
0x4002763	            0x7513	                           jne 0x4002778	      1401	glob.c	FUNCTION_13	IF_1
0x4002765	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1401	glob.c	FUNCTION_13	IF_1
0x4002769	           0xfb600	                   movzx eax, byte [rax]	      1401	glob.c	FUNCTION_13	IF_1
0x400276c	            0x3c2f	                            cmp al, 0x2f	      1401	glob.c	FUNCTION_13	IF_1
0x400276e	            0x7508	                           jne 0x4002778	      1401	glob.c	FUNCTION_13	IF_1
0x4002770	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1404	glob.c	FUNCTION_13	IF_1
0x4002778	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1420	glob.c	FUNCTION_13	FOR_1
0x4002780	      0xe90e010000	                           jmp 0x4002893	      1420	glob.c	FUNCTION_13	FOR_1
0x4002785	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x4002789	    0x488d14c50000	                        lea rdx, [rax*8]	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x4002791	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x4002795	          0x4801d0	                            add rax, rdx	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x4002798	          0x488b00	                    mov rax, qword [rax]	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x400279b	          0x4889c7	                            mov rdi, rax	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x400279e	      0xe800000000	                          call 0x40027a3	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x40027a3	        0x4883c001	                              add rax, 1	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x40027a7	        0x488945e8	             mov qword [rbp - 0x18], rax	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x40027ab	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x40027af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x40027b3	          0x4801d0	                            add rax, rdx	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x40027b6	        0x4883c001	                              add rax, 1	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x40027ba	          0x4889c7	                            mov rdi, rax	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x40027bd	      0xe800000000	                          call 0x40027c2	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x40027c2	        0x488945f0	             mov qword [rbp - 0x10], rax	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x40027c6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1424	glob.c	FUNCTION_13	FOR_1	IF_5
0x40027cb	            0x7536	                           jne 0x4002803	      1424	glob.c	FUNCTION_13	FOR_1	IF_5
0x40027cd	            0xeb23	                           jmp 0x40027f2	      1426	glob.c	FUNCTION_13	FOR_1	IF_5	WHILE_1
0x40027cf	      0x48836dd801	               sub qword [rbp - 0x28], 1	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40027d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40027d8	    0x488d14c50000	                        lea rdx, [rax*8]	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40027e0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40027e4	          0x4801d0	                            add rax, rdx	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40027e7	          0x488b00	                    mov rax, qword [rax]	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40027ea	          0x4889c7	                            mov rdi, rax	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40027ed	      0xe800000000	                          call 0x40027f2	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40027f2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1426	glob.c	FUNCTION_13	FOR_1	IF_5	WHILE_1
0x40027f7	            0x75d6	                           jne 0x40027cf	      1426	glob.c	FUNCTION_13	FOR_1	IF_5	WHILE_1
0x40027f9	      0xb801000000	                              mov eax, 1	      1428	glob.c	FUNCTION_13	FOR_1	IF_5
0x40027fe	      0xe9a3000000	                           jmp 0x40028a6	      1428	glob.c	FUNCTION_13	FOR_1	IF_5
0x4002803	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1432	glob.c	FUNCTION_13	FOR_1	CALL_5
0x4002807	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1432	glob.c	FUNCTION_13	FOR_1	CALL_5
0x400280b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1432	glob.c	FUNCTION_13	FOR_1	CALL_5
0x400280f	          0x4889ce	                            mov rsi, rcx	      1432	glob.c	FUNCTION_13	FOR_1	CALL_5
0x4002812	          0x4889c7	                            mov rdi, rax	      1432	glob.c	FUNCTION_13	FOR_1	CALL_5
0x4002815	      0xe800000000	                          call 0x400281a	      1432	glob.c	FUNCTION_13	FOR_1	CALL_5
0x400281a	        0x488945f8	                mov qword [rbp - 8], rax	      1432	glob.c	FUNCTION_13	FOR_1	CALL_5
0x400281e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1433	glob.c	FUNCTION_13	FOR_1
0x4002822	        0x488d5001	                      lea rdx, [rax + 1]	      1433	glob.c	FUNCTION_13	FOR_1
0x4002826	        0x488955f8	                mov qword [rbp - 8], rdx	      1433	glob.c	FUNCTION_13	FOR_1
0x400282a	          0xc6002f	                    mov byte [rax], 0x2f	      1433	glob.c	FUNCTION_13	FOR_1
0x400282d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1434	glob.c	FUNCTION_13	FOR_1	CALL_6
0x4002831	    0x488d14c50000	                        lea rdx, [rax*8]	      1434	glob.c	FUNCTION_13	FOR_1	CALL_6
0x4002839	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1434	glob.c	FUNCTION_13	FOR_1	CALL_6
0x400283d	          0x4801d0	                            add rax, rdx	      1434	glob.c	FUNCTION_13	FOR_1	CALL_6
0x4002840	          0x488b08	                    mov rcx, qword [rax]	      1434	glob.c	FUNCTION_13	FOR_1	CALL_6
0x4002843	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1434	glob.c	FUNCTION_13	FOR_1	CALL_6
0x4002847	        0x488b45f8	                mov rax, qword [rbp - 8]	      1434	glob.c	FUNCTION_13	FOR_1	CALL_6
0x400284b	          0x4889ce	                            mov rsi, rcx	      1434	glob.c	FUNCTION_13	FOR_1	CALL_6
0x400284e	          0x4889c7	                            mov rdi, rax	      1434	glob.c	FUNCTION_13	FOR_1	CALL_6
0x4002851	      0xe800000000	                          call 0x4002856	      1434	glob.c	FUNCTION_13	FOR_1	CALL_6
0x4002856	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x400285a	    0x488d14c50000	                        lea rdx, [rax*8]	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x4002862	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x4002866	          0x4801d0	                            add rax, rdx	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x4002869	          0x488b00	                    mov rax, qword [rax]	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x400286c	          0x4889c7	                            mov rdi, rax	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x400286f	      0xe800000000	                          call 0x4002874	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x4002874	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1437	glob.c	FUNCTION_13	FOR_1
0x4002878	    0x488d14c50000	                        lea rdx, [rax*8]	      1437	glob.c	FUNCTION_13	FOR_1
0x4002880	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1437	glob.c	FUNCTION_13	FOR_1
0x4002884	          0x4801c2	                            add rdx, rax	      1437	glob.c	FUNCTION_13	FOR_1
0x4002887	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1437	glob.c	FUNCTION_13	FOR_1
0x400288b	          0x488902	                    mov qword [rdx], rax	      1437	glob.c	FUNCTION_13	FOR_1
0x400288e	      0x488345d801	               add qword [rbp - 0x28], 1	      1420	glob.c	FUNCTION_13	FOR_1
0x4002893	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1420	glob.c	FUNCTION_13	FOR_1
0x4002897	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1420	glob.c	FUNCTION_13	FOR_1
0x400289b	     0xf82e4feffff	                            jb 0x4002785	      1420	glob.c	FUNCTION_13	FOR_1
0x40028a1	      0xb800000000	                              mov eax, 0	      1440	glob.c	FUNCTION_13
0x40028a6	              0xc9	                                   leave	      1441	glob.c	FUNCTION_13
0x40028a7	              0xc3	                                     ret	      1441	glob.c	FUNCTION_13
