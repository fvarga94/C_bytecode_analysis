maintenance_info_program_spaces_command	SWITCH,0:functions,0:IF,2:WHILE,0:ELSE,0:FOR,0:CALL,5:DO,0	39
0x4000570	              0x55	                                push rbp	       327	progspace.c	FUNCTION_14
0x4000571	              0x53	                                push rbx	       327	progspace.c	FUNCTION_14
0x4000572	      0xbbffffffff	                     mov ebx, 0xffffffff	       328	progspace.c	FUNCTION_14
0x4000577	        0x4883ec08	                              sub rsp, 8	       327	progspace.c	FUNCTION_14
0x400057b	          0x4885ff	                           test rdi, rdi	       330	progspace.c	FUNCTION_14	IF_1
0x400057e	            0x7405	                            je 0x4000585	       330	progspace.c	FUNCTION_14	IF_1
0x4000580	          0x803f00	                       cmp byte [rdi], 0	       330	progspace.c	FUNCTION_14	IF_1
0x4000583	            0x751b	                           jne 0x40005a0	       330	progspace.c	FUNCTION_14	IF_1
0x4000585	      0xe800000000	                          call 0x400058a	       337	progspace.c	FUNCTION_14	CALL_5
0x400058a	          0x488b38	                    mov rdi, qword [rax]	       337	progspace.c	FUNCTION_14	CALL_5
0x400058d	        0x4883c408	                              add rsp, 8	       338	progspace.c	FUNCTION_14
0x4000591	            0x89de	                            mov esi, ebx	       337	progspace.c	FUNCTION_14	CALL_5
0x4000593	              0x5b	                                 pop rbx	       338	progspace.c	FUNCTION_14
0x4000594	              0x5d	                                 pop rbp	       338	progspace.c	FUNCTION_14
0x4000595	      0xe906fbffff	jmp sym.print_program_space_ui_out__int__clone.constprop.30	       337	progspace.c	FUNCTION_14	CALL_5
0x400059a	    0x660f1f440000	                    nop word [rax + rax]	       337	progspace.c	FUNCTION_14	CALL_5
0x40005a0	      0xe800000000	                          call 0x40005a5	       332	progspace.c	FUNCTION_14	IF_1	CALL_1
0x40005a5	          0x4889c5	                            mov rbp, rax	       332	progspace.c	FUNCTION_14	IF_1	CALL_1
0x40005a8	            0x89c2	                            mov edx, eax	       332	progspace.c	FUNCTION_14	IF_1	CALL_1
0x40005aa	    0x488b05000000	            mov rax, qword [0x040005b1] 	       314	progspace.c	FUNCTION_13
0x40005b1	          0x4885c0	                           test rax, rax	       314	progspace.c	FUNCTION_13
0x40005b4	            0x7419	                            je 0x40005cf	       314	progspace.c	FUNCTION_13
0x40005b6	          0x8b5808	                mov ebx, dword [rax + 8]	       315	progspace.c	FUNCTION_13	IF_1
0x40005b9	            0x39dd	                            cmp ebp, ebx	       315	progspace.c	FUNCTION_13	IF_1
0x40005bb	            0x750a	                           jne 0x40005c7	       315	progspace.c	FUNCTION_13	IF_1
0x40005bd	            0xebc6	                           jmp 0x4000585	       315	progspace.c	FUNCTION_13	IF_1
0x40005bf	              0x90	                                     nop	       315	progspace.c	FUNCTION_13	IF_1
0x40005c0	          0x8b5808	                mov ebx, dword [rax + 8]	       315	progspace.c	FUNCTION_13	IF_1
0x40005c3	            0x39da	                            cmp edx, ebx	       315	progspace.c	FUNCTION_13	IF_1
0x40005c5	            0x74be	                            je 0x4000585	       315	progspace.c	FUNCTION_13	IF_1
0x40005c7	          0x488b00	                    mov rax, qword [rax]	       314	progspace.c	FUNCTION_13
0x40005ca	          0x4885c0	                           test rax, rax	       314	progspace.c	FUNCTION_13
0x40005cd	            0x75f1	                           jne 0x40005c0	       314	progspace.c	FUNCTION_13
0x40005cf	      0xbf00000000	                              mov edi, 0	       334	progspace.c	FUNCTION_14	IF_1	CALL_4
0x40005d4	      0xe800000000	                          call 0x40005d9	       334	progspace.c	FUNCTION_14	IF_1	CALL_4
0x40005d9	            0x89ee	                            mov esi, ebp	       334	progspace.c	FUNCTION_14	IF_1	CALL_4
0x40005db	          0x4889c7	                            mov rdi, rax	       334	progspace.c	FUNCTION_14	IF_1	CALL_4
0x40005de	            0x31c0	                            xor eax, eax	       334	progspace.c	FUNCTION_14	IF_1	CALL_4
0x40005e0	      0xe800000000	                          call 0x40005e5	       334	progspace.c	FUNCTION_14	IF_1	CALL_4
free_address_space	SWITCH,0:functions,0:IF,0:WHILE,0:ELSE,0:FOR,0:CALL,2:DO,0	15
0x4000060	              0x53	                                push rbx	        88	progspace.c	FUNCTION_3
0x4000061	        0x488d4f08	                      lea rcx, [rdi + 8]	        50	progspace.c	CALL_2
0x4000065	          0x4889fb	                            mov rbx, rdi	        88	progspace.c	FUNCTION_3
0x4000068	          0x4889fa	                            mov rdx, rdi	        50	progspace.c	CALL_2
0x400006b	      0xbe00000000	                              mov esi, 0	        50	progspace.c	CALL_2
0x4000070	      0xbf00000000	                              mov edi, 0	        50	progspace.c	CALL_2
0x4000075	      0xe800000000	                          call 0x400007a	        50	progspace.c	CALL_2
0x400007a	          0x4885db	                           test rbx, rbx	        59	common-utils.h	FUNCTION_21	CALL_2
0x400007d	            0x7411	                            je 0x4000090	        59	common-utils.h	FUNCTION_21	CALL_2
0x400007f	          0x4889df	                            mov rdi, rbx	        60	common-utils.h	FUNCTION_21
0x4000082	              0x5b	                                 pop rbx	        91	progspace.c	FUNCTION_3
0x4000083	      0xe900000000	                           jmp 0x4000088	        60	common-utils.h	FUNCTION_21
0x4000088	     0xf1f84000000	                   nop dword [rax + rax]	        60	common-utils.h	FUNCTION_21
0x4000090	              0x5b	                                 pop rbx	        91	progspace.c	FUNCTION_3
0x4000091	              0xc3	                                     ret	        91	progspace.c	FUNCTION_3
number_of_program_spaces	SWITCH,0:functions,0:IF,0:WHILE,0:ELSE,0:FOR,0:CALL,0:DO,0	11
0x4000bf0	    0x488b15000000	            mov rdx, qword [0x04000bf7] 	       348	progspace.c	FUNCTION_15
0x4000bf7	            0x31c0	                            xor eax, eax	       346	progspace.c	FUNCTION_15
0x4000bf9	          0x4885d2	                           test rdx, rdx	       348	progspace.c	FUNCTION_15
0x4000bfc	            0x740f	                            je 0x4000c0d	       348	progspace.c	FUNCTION_15
0x4000bfe	            0x6690	                                     nop	       348	progspace.c	FUNCTION_15
0x4000c00	          0x488b12	                    mov rdx, qword [rdx]	       348	progspace.c	FUNCTION_15
0x4000c03	          0x83c001	                              add eax, 1	       349	progspace.c	FUNCTION_15
0x4000c06	          0x4885d2	                           test rdx, rdx	       348	progspace.c	FUNCTION_15
0x4000c09	            0x75f5	                           jne 0x4000c00	       348	progspace.c	FUNCTION_15
0x4000c0b	            0xf3c3	                                     ret	       348	progspace.c	FUNCTION_15
0x4000c0d	            0xf3c3	                                     ret	       352	progspace.c	FUNCTION_15
new_address_space	SWITCH,0:functions,0:IF,0:WHILE,0:ELSE,0:FOR,0:CALL,1:DO,0	15
0x40006b0	              0x53	                                push rbx	        58	progspace.c	FUNCTION_1
0x40006b1	      0xbe18000000	                           mov esi, 0x18	       122	poison.h	
0x40006b6	      0xbf01000000	                              mov edi, 1	       122	poison.h	
0x40006bb	      0xe800000000	                          call 0x40006c0	       122	poison.h	
0x40006c0	          0x4889c3	                            mov rbx, rax	       122	poison.h	
0x40006c3	    0x8b0500000000	            mov eax, dword [0x040006c9] 	        62	progspace.c	FUNCTION_1
0x40006c9	      0xbf00000000	                              mov edi, 0	        50	progspace.c	CALL_2
0x40006ce	        0x488d7308	                      lea rsi, [rbx + 8]	        50	progspace.c	CALL_2
0x40006d2	          0x8d5001	                      lea edx, [rax + 1]	        62	progspace.c	FUNCTION_1
0x40006d5	            0x8913	                    mov dword [rbx], edx	        62	progspace.c	FUNCTION_1
0x40006d7	    0x891500000000	            mov dword [0x040006dd], edx 	        62	progspace.c	FUNCTION_1
0x40006dd	      0xe800000000	                          call 0x40006e2	        50	progspace.c	CALL_2
0x40006e2	          0x4889d8	                            mov rax, rbx	        66	progspace.c	FUNCTION_1
0x40006e5	              0x5b	                                 pop rbx	        66	progspace.c	FUNCTION_1
0x40006e6	              0xc3	                                     ret	        66	progspace.c	FUNCTION_1
delete_program_space	SWITCH,0:functions,0:IF,1:WHILE,1:ELSE,0:FOR,0:CALL,2:DO,0	48
0x4000b30	          0x4885ff	                           test rdi, rdi	       211	progspace.c	FUNCTION_11	CALL_1
0x4000b33	              0x53	                                push rbx	       209	progspace.c	FUNCTION_11
0x4000b34	     0xf8487000000	                            je 0x4000bc1	       211	progspace.c	FUNCTION_11	CALL_1
0x4000b3a	    0x483b3d000000	            cmp rdi, qword [0x04000b41] 	       212	progspace.c	FUNCTION_11	CALL_2
0x4000b41	          0x4889fb	                            mov rbx, rdi	       212	progspace.c	FUNCTION_11	CALL_2
0x4000b44	            0x7452	                            je 0x4000b98	       212	progspace.c	FUNCTION_11	CALL_2
0x4000b46	    0x488b15000000	            mov rdx, qword [0x04000b4d] 	       214	progspace.c	FUNCTION_11
0x4000b4d	          0x4885d2	                           test rdx, rdx	       216	progspace.c	FUNCTION_11	WHILE_1
0x4000b50	            0x741e	                            je 0x4000b70	       216	progspace.c	FUNCTION_11	WHILE_1
0x4000b52	          0x4839d7	                            cmp rdi, rdx	       218	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b55	            0x7511	                           jne 0x4000b68	       218	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b57	            0xeb28	                           jmp 0x4000b81	       218	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b59	     0xf1f80000000	                         nop dword [rax]	       218	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b60	          0x4839c3	                            cmp rbx, rax	       218	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b63	            0x742b	                            je 0x4000b90	       218	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b65	          0x4889c2	                            mov rdx, rax	       218	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b68	          0x488b02	                    mov rax, qword [rdx]	       225	progspace.c	FUNCTION_11	WHILE_1
0x4000b6b	          0x4885c0	                           test rax, rax	       216	progspace.c	FUNCTION_11	WHILE_1
0x4000b6e	            0x75f0	                           jne 0x4000b60	       216	progspace.c	FUNCTION_11	WHILE_1
0x4000b70	          0x4889df	                            mov rdi, rbx	       228	progspace.c	FUNCTION_11
0x4000b73	      0xe800000000	                          call 0x4000b78	       228	progspace.c	FUNCTION_11
0x4000b78	          0x4889df	                            mov rdi, rbx	       228	progspace.c	FUNCTION_11
0x4000b7b	              0x5b	                                 pop rbx	       229	progspace.c	FUNCTION_11
0x4000b7c	      0xe900000000	                           jmp 0x4000b81	       228	progspace.c	FUNCTION_11
0x4000b81	          0x4889f8	                            mov rax, rdi	       218	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b84	      0xba00000000	                              mov edx, 0	       215	progspace.c	FUNCTION_11
0x4000b89	     0xf1f80000000	                         nop dword [rax]	       215	progspace.c	FUNCTION_11
0x4000b90	          0x488b00	                    mov rax, qword [rax]	       220	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b93	          0x488902	                    mov qword [rdx], rax	       220	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b96	            0xebd8	                           jmp 0x4000b70	       221	progspace.c	FUNCTION_11	WHILE_1	IF_1
0x4000b98	      0xbf00000000	                              mov edi, 0	       212	progspace.c	FUNCTION_11	CALL_2
0x4000b9d	      0xe800000000	                          call 0x4000ba2	       212	progspace.c	FUNCTION_11	CALL_2
0x4000ba2	    0x41b800000000	                              mov r8d, 0	       212	progspace.c	FUNCTION_11	CALL_2
0x4000ba8	          0x4889c2	                            mov rdx, rax	       212	progspace.c	FUNCTION_11	CALL_2
0x4000bab	      0xb900000000	                              mov ecx, 0	       212	progspace.c	FUNCTION_11	CALL_2
0x4000bb0	      0xbed4000000	                           mov esi, 0xd4	       212	progspace.c	FUNCTION_11	CALL_2
0x4000bb5	      0xbf00000000	                              mov edi, 0	       212	progspace.c	FUNCTION_11	CALL_2
0x4000bba	            0x31c0	                            xor eax, eax	       212	progspace.c	FUNCTION_11	CALL_2
0x4000bbc	      0xe800000000	                          call 0x4000bc1	       212	progspace.c	FUNCTION_11	CALL_2
0x4000bc1	      0xbf00000000	                              mov edi, 0	       211	progspace.c	FUNCTION_11	CALL_1
0x4000bc6	      0xe800000000	                          call 0x4000bcb	       211	progspace.c	FUNCTION_11	CALL_1
0x4000bcb	    0x41b800000000	                              mov r8d, 0	       211	progspace.c	FUNCTION_11	CALL_1
0x4000bd1	          0x4889c2	                            mov rdx, rax	       211	progspace.c	FUNCTION_11	CALL_1
0x4000bd4	      0xb900000000	                              mov ecx, 0	       211	progspace.c	FUNCTION_11	CALL_1
0x4000bd9	      0xbed3000000	                           mov esi, 0xd3	       211	progspace.c	FUNCTION_11	CALL_1
0x4000bde	      0xbf00000000	                              mov edi, 0	       211	progspace.c	FUNCTION_11	CALL_1
0x4000be3	            0x31c0	                            xor eax, eax	       211	progspace.c	FUNCTION_11	CALL_1
0x4000be5	      0xe800000000	                          call 0x4000bea	       211	progspace.c	FUNCTION_11	CALL_1
program_space_empty_p	SWITCH,0:functions,0:IF,1:WHILE,0:ELSE,0:FOR,0:CALL,1:DO,0	7
0x4000b10	        0x4883ec08	                              sub rsp, 8	       197	progspace.c	FUNCTION_10
0x4000b14	      0xe800000000	                          call 0x4000b19	       198	progspace.c	FUNCTION_10	IF_1	CALL_1
0x4000b19	          0x4885c0	                           test rax, rax	       198	progspace.c	FUNCTION_10	IF_1	CALL_1
0x4000b1c	           0xf94c0	                                 sete al	       198	progspace.c	FUNCTION_10	IF_1	CALL_1
0x4000b1f	        0x4883c408	                              add rsp, 8	       202	progspace.c	FUNCTION_10
0x4000b23	           0xfb6c0	                           movzx eax, al	       202	progspace.c	FUNCTION_10
0x4000b26	              0xc3	                                     ret	       202	progspace.c	FUNCTION_10
maybe_new_address_space	SWITCH,0:functions,0:IF,1:WHILE,0:ELSE,0:FOR,0:CALL,3:DO,0	13
0x40006f0	        0x4883ec08	                              sub rsp, 8	        74	progspace.c	FUNCTION_2
0x40006f4	      0xe800000000	                          call 0x40006f9	        75	progspace.c	FUNCTION_2	CALL_2
0x40006f9	          0x4889c7	                            mov rdi, rax	        75	progspace.c	FUNCTION_2	CALL_2
0x40006fc	      0xe800000000	                          call 0x4000701	        75	progspace.c	FUNCTION_2	CALL_2
0x4000701	            0x85c0	                           test eax, eax	        77	progspace.c	FUNCTION_2	IF_1
0x4000703	            0x7413	                            je 0x4000718	        77	progspace.c	FUNCTION_2	IF_1
0x4000705	    0x488b05000000	            mov rax, qword [0x0400070c] 	        80	progspace.c	FUNCTION_2	IF_1
0x400070c	        0x488b4030	            mov rax, qword [rax + 0x30] 	        80	progspace.c	FUNCTION_2	IF_1
0x4000710	        0x4883c408	                              add rsp, 8	        84	progspace.c	FUNCTION_2
0x4000714	              0xc3	                                     ret	        84	progspace.c	FUNCTION_2
0x4000715	           0xf1f00	                         nop dword [rax]	        84	progspace.c	FUNCTION_2
0x4000718	        0x4883c408	                              add rsp, 8	        84	progspace.c	FUNCTION_2
0x400071c	            0xeb92	               jmp sym.new_address_space	        83	progspace.c	FUNCTION_2	CALL_3
address_space_num	SWITCH,0:functions,0:IF,0:WHILE,0:ELSE,0:FOR,0:CALL,0:DO,0	2
0x4000720	            0x8b07	                    mov eax, dword [rdi]	        96	progspace.c	FUNCTION_4
0x4000722	              0xc3	                                     ret	        97	progspace.c	FUNCTION_4
clone_program_space	SWITCH,0:functions,0:IF,2:WHILE,0:ELSE,0:FOR,0:CALL,4:DO,0	31
0x4000920	            0x4154	                                push r12	       160	progspace.c	FUNCTION_8
0x4000922	              0x55	                                push rbp	       160	progspace.c	FUNCTION_8
0x4000923	          0x4889f5	                            mov rbp, rsi	       160	progspace.c	FUNCTION_8
0x4000926	              0x53	                                push rbx	       160	progspace.c	FUNCTION_8
0x4000927	    0x4c8b25000000	            mov r12, qword [0x0400092e] 	       281	progspace.h	
0x400092e	          0x4889fb	                            mov rbx, rdi	       160	progspace.c	FUNCTION_8
0x4000931	      0xe800000000	                          call 0x4000936	       163	progspace.c	FUNCTION_8	CALL_1
0x4000936	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       165	progspace.c	FUNCTION_8	IF_1
0x400093a	          0x4885ff	                           test rdi, rdi	       165	progspace.c	FUNCTION_8	IF_1
0x400093d	            0x7407	                            je 0x4000946	       165	progspace.c	FUNCTION_8	IF_1
0x400093f	            0x31f6	                            xor esi, esi	       166	progspace.c	FUNCTION_8	CALL_2
0x4000941	      0xe800000000	                          call 0x4000946	       166	progspace.c	FUNCTION_8	CALL_2
0x4000946	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       168	progspace.c	FUNCTION_8	IF_2
0x400094a	          0x4885ff	                           test rdi, rdi	       168	progspace.c	FUNCTION_8	IF_2
0x400094d	            0x7412	                            je 0x4000961	       168	progspace.c	FUNCTION_8	IF_2
0x400094f	      0xe800000000	                          call 0x4000954	       169	progspace.c	FUNCTION_8	IF_2	CALL_4
0x4000954	      0xbe08000000	                              mov esi, 8	       170	progspace.c	FUNCTION_8	IF_2
0x4000959	          0x4889c7	                            mov rdi, rax	       170	progspace.c	FUNCTION_8	IF_2
0x400095c	      0xe800000000	                          call 0x4000961	       170	progspace.c	FUNCTION_8	IF_2
0x4000961	          0x4c89e7	                            mov rdi, r12	       285	progspace.h	CALL_13
0x4000964	      0xe800000000	                          call 0x4000969	       285	progspace.h	CALL_13
0x4000969	          0x4889d8	                            mov rax, rbx	       173	progspace.c	FUNCTION_8
0x400096c	              0x5b	                                 pop rbx	       173	progspace.c	FUNCTION_8
0x400096d	              0x5d	                                 pop rbp	       173	progspace.c	FUNCTION_8
0x400096e	            0x415c	                                 pop r12	       173	progspace.c	FUNCTION_8
0x4000970	              0xc3	                                     ret	       173	progspace.c	FUNCTION_8
0x4000971	          0x4889c3	                            mov rbx, rax	       173	progspace.c	FUNCTION_8
0x4000974	          0x4c89e7	                            mov rdi, r12	       285	progspace.h	CALL_13
0x4000977	      0xe800000000	                          call 0x400097c	       285	progspace.h	CALL_13
0x400097c	          0x4889df	                            mov rdi, rbx	       285	progspace.h	CALL_13
0x400097f	      0xe800000000	                          call 0x4000984	       285	progspace.h	CALL_13
update_address_spaces	SWITCH,0:functions,0:IF,2:WHILE,0:ELSE,2:FOR,1:CALL,10:DO,0	56
0x4000c10	              0x53	                                push rbx	       367	progspace.c	FUNCTION_16
0x4000c11	      0xe800000000	                          call 0x4000c16	       368	progspace.c	FUNCTION_16	CALL_2
0x4000c16	          0x4889c7	                            mov rdi, rax	       368	progspace.c	FUNCTION_16	CALL_2
0x4000c19	      0xe800000000	                          call 0x4000c1e	       368	progspace.c	FUNCTION_16	CALL_2
0x4000c1e	            0x85c0	                           test eax, eax	       374	progspace.c	FUNCTION_16	IF_1
0x4000c20	    0xc70500000000	               mov dword [0x04000c2a], 0	       104	progspace.c	FUNCTION_5
0x4000c2a	     0xf8580000000	                           jne 0x4000cb0	       374	progspace.c	FUNCTION_16	IF_1
0x4000c30	    0x488b1d000000	            mov rbx, qword [0x04000c37] 	       383	progspace.c	FUNCTION_16	ELSE_1
0x4000c37	          0x4885db	                           test rbx, rbx	       383	progspace.c	FUNCTION_16	ELSE_1
0x4000c3a	            0x741e	                            je 0x4000c5a	       383	progspace.c	FUNCTION_16	ELSE_1
0x4000c3c	         0xf1f4000	                         nop dword [rax]	       383	progspace.c	FUNCTION_16	ELSE_1
0x4000c40	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       385	progspace.c	FUNCTION_16	ELSE_1	CALL_6
0x4000c44	      0xe817f4ffff	call sym.free_address_space_address_space	       385	progspace.c	FUNCTION_16	ELSE_1	CALL_6
0x4000c49	      0xe800000000	                          call 0x4000c4e	       386	progspace.c	FUNCTION_16	ELSE_1	CALL_7
0x4000c4e	        0x48894330	             mov qword [rbx + 0x30], rax	       386	progspace.c	FUNCTION_16	ELSE_1	CALL_7
0x4000c52	          0x488b1b	                    mov rbx, qword [rbx]	       383	progspace.c	FUNCTION_16	ELSE_1
0x4000c55	          0x4885db	                           test rbx, rbx	       383	progspace.c	FUNCTION_16	ELSE_1
0x4000c58	            0x75e6	                           jne 0x4000c40	       383	progspace.c	FUNCTION_16	ELSE_1
0x4000c5a	    0x488b1d000000	            mov rbx, qword [0x04000c61] 	       389	progspace.c	FUNCTION_16	FOR_1
0x4000c61	          0x4885db	                           test rbx, rbx	       389	progspace.c	FUNCTION_16	FOR_1
0x4000c64	            0x751f	                           jne 0x4000c85	       389	progspace.c	FUNCTION_16	FOR_1
0x4000c66	            0xeb40	                           jmp 0x4000ca8	       389	progspace.c	FUNCTION_16	FOR_1
0x4000c68	     0xf1f84000000	                   nop dword [rax + rax]	       389	progspace.c	FUNCTION_16	FOR_1
0x4000c70	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       393	progspace.c	FUNCTION_16	ELSE_2
0x4000c74	        0x488b4030	            mov rax, qword [rax + 0x30] 	       393	progspace.c	FUNCTION_16	ELSE_2
0x4000c78	        0x48894328	             mov qword [rbx + 0x28], rax	       393	progspace.c	FUNCTION_16	ELSE_2
0x4000c7c	        0x488b5b08	                mov rbx, qword [rbx + 8]	       389	progspace.c	FUNCTION_16	FOR_1
0x4000c80	          0x4885db	                           test rbx, rbx	       389	progspace.c	FUNCTION_16	FOR_1
0x4000c83	            0x7423	                            je 0x4000ca8	       389	progspace.c	FUNCTION_16	FOR_1
0x4000c85	      0xe800000000	                          call 0x4000c8a	       390	progspace.c	FUNCTION_16	FOR_1	IF_2	CALL_9
0x4000c8a	          0x4889c7	                            mov rdi, rax	       390	progspace.c	FUNCTION_16	FOR_1	IF_2	CALL_9
0x4000c8d	      0xe800000000	                          call 0x4000c92	       390	progspace.c	FUNCTION_16	FOR_1	IF_2	CALL_9
0x4000c92	            0x85c0	                           test eax, eax	       390	progspace.c	FUNCTION_16	FOR_1	IF_2	CALL_9
0x4000c94	            0x74da	                            je 0x4000c70	       390	progspace.c	FUNCTION_16	FOR_1	IF_2	CALL_9
0x4000c96	      0xe800000000	                          call 0x4000c9b	       391	progspace.c	FUNCTION_16	FOR_1	IF_2
0x4000c9b	        0x48894328	             mov qword [rbx + 0x28], rax	       391	progspace.c	FUNCTION_16	FOR_1	IF_2
0x4000c9f	        0x488b5b08	                mov rbx, qword [rbx + 8]	       389	progspace.c	FUNCTION_16	FOR_1
0x4000ca3	          0x4885db	                           test rbx, rbx	       389	progspace.c	FUNCTION_16	FOR_1
0x4000ca6	            0x75dd	                           jne 0x4000c85	       389	progspace.c	FUNCTION_16	FOR_1
0x4000ca8	              0x5b	                                 pop rbx	       394	progspace.c	FUNCTION_16	ELSE_2
0x4000ca9	              0xc3	                                     ret	       394	progspace.c	FUNCTION_16	ELSE_2
0x4000caa	    0x660f1f440000	                    nop word [rax + rax]	       394	progspace.c	FUNCTION_16	ELSE_2
0x4000cb0	      0xe800000000	                          call 0x4000cb5	       376	progspace.c	FUNCTION_16	IF_1	CALL_4
0x4000cb5	          0x4889c3	                            mov rbx, rax	       376	progspace.c	FUNCTION_16	IF_1	CALL_4
0x4000cb8	    0x488b05000000	            mov rax, qword [0x04000cbf] 	       378	progspace.c	FUNCTION_16	IF_1	CALL_5
0x4000cbf	        0x488b7830	            mov rdi, qword [rax + 0x30] 	       378	progspace.c	FUNCTION_16	IF_1	CALL_5
0x4000cc3	      0xe898f3ffff	call sym.free_address_space_address_space	       378	progspace.c	FUNCTION_16	IF_1	CALL_5
0x4000cc8	    0x488b15000000	            mov rdx, qword [0x04000ccf] 	       379	progspace.c	FUNCTION_16	IF_1
0x4000ccf	          0x4885d2	                           test rdx, rdx	       379	progspace.c	FUNCTION_16	IF_1
0x4000cd2	            0x7486	                            je 0x4000c5a	       379	progspace.c	FUNCTION_16	IF_1
0x4000cd4	         0xf1f4000	                         nop dword [rax]	       379	progspace.c	FUNCTION_16	IF_1
0x4000cd8	        0x48895a30	             mov qword [rdx + 0x30], rbx	       380	progspace.c	FUNCTION_16	IF_1
0x4000cdc	          0x488b12	                    mov rdx, qword [rdx]	       379	progspace.c	FUNCTION_16	IF_1
0x4000cdf	          0x4885d2	                           test rdx, rdx	       379	progspace.c	FUNCTION_16	IF_1
0x4000ce2	            0x75f4	                           jne 0x4000cd8	       379	progspace.c	FUNCTION_16	IF_1
0x4000ce4	      0xe971ffffff	                           jmp 0x4000c5a	       379	progspace.c	FUNCTION_16	IF_1
initialize_progspace	SWITCH,0:functions,0:IF,0:WHILE,0:ELSE,0:FOR,0:CALL,4:DO,0	29
0x4000d50	              0x55	                                push rbp	       411	progspace.c	FUNCTION_18
0x4000d51	              0x53	                                push rbx	       411	progspace.c	FUNCTION_18
0x4000d52	      0xbf00000000	                              mov edi, 0	       414	progspace.c	FUNCTION_18	CALL_2
0x4000d57	        0x4883ec08	                              sub rsp, 8	       411	progspace.c	FUNCTION_18
0x4000d5b	      0xe800000000	                          call 0x4000d60	       414	progspace.c	FUNCTION_18	CALL_2
0x4000d60	      0xbe0b000000	                            mov esi, 0xb	       415	progspace.c	FUNCTION_18
0x4000d65	    0x41b800000000	                              mov r8d, 0	       415	progspace.c	FUNCTION_18
0x4000d6b	          0x4889c1	                            mov rcx, rax	       415	progspace.c	FUNCTION_18
0x4000d6e	      0xba00000000	                              mov edx, 0	       415	progspace.c	FUNCTION_18
0x4000d73	      0xbf00000000	                              mov edi, 0	       415	progspace.c	FUNCTION_18
0x4000d78	      0xe800000000	                          call 0x4000d7d	       415	progspace.c	FUNCTION_18
0x4000d7d	      0xe800000000	                          call 0x4000d82	       424	progspace.c	FUNCTION_18	CALL_4
0x4000d82	      0xbfb0000000	                           mov edi, 0xb0	       424	progspace.c	FUNCTION_18	CALL_4
0x4000d87	          0x4889c5	                            mov rbp, rax	       424	progspace.c	FUNCTION_18	CALL_4
0x4000d8a	      0xe800000000	                          call 0x4000d8f	       424	progspace.c	FUNCTION_18	CALL_4
0x4000d8f	          0x4889ee	                            mov rsi, rbp	       424	progspace.c	FUNCTION_18	CALL_4
0x4000d92	          0x4889c7	                            mov rdi, rax	       424	progspace.c	FUNCTION_18	CALL_4
0x4000d95	          0x4889c3	                            mov rbx, rax	       424	progspace.c	FUNCTION_18	CALL_4
0x4000d98	      0xe800000000	                          call 0x4000d9d	       424	progspace.c	FUNCTION_18	CALL_4
0x4000d9d	    0x48891d000000	            mov qword [0x04000da4], rbx 	       424	progspace.c	FUNCTION_18	CALL_4
0x4000da4	        0x4883c408	                              add rsp, 8	       425	progspace.c	FUNCTION_18
0x4000da8	              0x5b	                                 pop rbx	       425	progspace.c	FUNCTION_18
0x4000da9	              0x5d	                                 pop rbp	       425	progspace.c	FUNCTION_18
0x4000daa	              0xc3	                                     ret	       425	progspace.c	FUNCTION_18
0x4000dab	          0x4889c5	                            mov rbp, rax	       425	progspace.c	FUNCTION_18
0x4000dae	          0x4889df	                            mov rdi, rbx	       424	progspace.c	FUNCTION_18	CALL_4
0x4000db1	      0xe800000000	                          call 0x4000db6	       424	progspace.c	FUNCTION_18	CALL_4
0x4000db6	          0x4889ef	                            mov rdi, rbp	       424	progspace.c	FUNCTION_18	CALL_4
0x4000db9	      0xe800000000	                  call section_end..data	       424	progspace.c	FUNCTION_18	CALL_4
