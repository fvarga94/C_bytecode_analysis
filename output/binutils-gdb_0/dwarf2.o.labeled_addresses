read_alt_indirect_ref	SWITCH,0:ELSE,0:CALL,6:IF,6:DO,0:WHILE,0:functions,0:FOR,0	81
0x4000ac8	              0x55	                                push rbp	       838	dwarf2.c	FUNCTION_16
0x4000ac9	          0x4889e5	                            mov rbp, rsp	       838	dwarf2.c	FUNCTION_16
0x4000acc	        0x4883ec30	                           sub rsp, 0x30	       838	dwarf2.c	FUNCTION_16
0x4000ad0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       838	dwarf2.c	FUNCTION_16
0x4000ad4	        0x488975d0	             mov qword [rbp - 0x30], rsi	       838	dwarf2.c	FUNCTION_16
0x4000ad8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       839	dwarf2.c	FUNCTION_16
0x4000adc	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       839	dwarf2.c	FUNCTION_16
0x4000ae3	        0x488945e8	             mov qword [rbp - 0x18], rax	       839	dwarf2.c	FUNCTION_16
0x4000ae7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       841	dwarf2.c	FUNCTION_16	IF_1
0x4000aeb	        0x488b4048	            mov rax, qword [rax + 0x48] 	       841	dwarf2.c	FUNCTION_16	IF_1
0x4000aef	          0x4885c0	                           test rax, rax	       841	dwarf2.c	FUNCTION_16	IF_1
0x4000af2	     0xf8590000000	                           jne 0x4000b88	       841	dwarf2.c	FUNCTION_16	IF_1
0x4000af8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       844	dwarf2.c	FUNCTION_16	IF_1	CALL_1
0x4000afc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       844	dwarf2.c	FUNCTION_16	IF_1	CALL_1
0x4000b00	      0xbe00000000	                              mov esi, 0	       844	dwarf2.c	FUNCTION_16	IF_1	CALL_1
0x4000b05	          0x4889c7	                            mov rdi, rax	       844	dwarf2.c	FUNCTION_16	IF_1	CALL_1
0x4000b08	      0xe800000000	                          call 0x4000b0d	       844	dwarf2.c	FUNCTION_16	IF_1	CALL_1
0x4000b0d	        0x488945f0	             mov qword [rbp - 0x10], rax	       844	dwarf2.c	FUNCTION_16	IF_1	CALL_1
0x4000b11	      0x48837df000	               cmp qword [rbp - 0x10], 0	       846	dwarf2.c	FUNCTION_16	IF_1	IF_2
0x4000b16	            0x750a	                           jne 0x4000b22	       846	dwarf2.c	FUNCTION_16	IF_1	IF_2
0x4000b18	      0xb800000000	                              mov eax, 0	       847	dwarf2.c	FUNCTION_16	IF_1	IF_2
0x4000b1d	      0xe9da000000	                           jmp 0x4000bfc	       847	dwarf2.c	FUNCTION_16	IF_1	IF_2
0x4000b22	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4000b26	      0xbe00000000	                              mov esi, 0	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4000b2b	          0x4889c7	                            mov rdi, rax	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4000b2e	      0xe800000000	                          call 0x4000b33	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4000b33	        0x488945f8	                mov qword [rbp - 8], rax	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4000b37	      0x48837df800	                  cmp qword [rbp - 8], 0	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4000b3c	            0x7415	                            je 0x4000b53	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4000b3e	        0x488b45f8	                mov rax, qword [rbp - 8]	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4000b42	      0xbe01000000	                              mov esi, 1	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4000b47	          0x4889c7	                            mov rdi, rax	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4000b4a	      0xe800000000	                          call 0x4000b4f	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4000b4f	            0x85c0	                           test eax, eax	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4000b51	            0x7529	                           jne 0x4000b7c	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4000b53	      0x48837df800	                  cmp qword [rbp - 8], 0	       852	dwarf2.c	FUNCTION_16	IF_1	IF_3	IF_4
0x4000b58	            0x740c	                            je 0x4000b66	       852	dwarf2.c	FUNCTION_16	IF_1	IF_3	IF_4
0x4000b5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       853	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_4
0x4000b5e	          0x4889c7	                            mov rdi, rax	       853	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_4
0x4000b61	      0xe800000000	                          call 0x4000b66	       853	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_4
0x4000b66	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       856	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_5
0x4000b6a	          0x4889c7	                            mov rdi, rax	       856	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_5
0x4000b6d	      0xe800000000	                          call 0x4000b72	       856	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_5
0x4000b72	      0xb800000000	                              mov eax, 0	       857	dwarf2.c	FUNCTION_16	IF_1	IF_3
0x4000b77	      0xe980000000	                           jmp 0x4000bfc	       857	dwarf2.c	FUNCTION_16	IF_1	IF_3
0x4000b7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       859	dwarf2.c	FUNCTION_16	IF_1
0x4000b80	        0x488b55f8	                mov rdx, qword [rbp - 8]	       859	dwarf2.c	FUNCTION_16	IF_1
0x4000b84	        0x48895048	             mov qword [rax + 0x48], rdx	       859	dwarf2.c	FUNCTION_16	IF_1
0x4000b88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000b8c	        0x488d7868	                   lea rdi, [rax + 0x68]	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000b90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000b94	        0x488d4860	                   lea rcx, [rax + 0x60]	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000b98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       863	dwarf2.c	FUNCTION_16	IF_5
0x4000b9c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       863	dwarf2.c	FUNCTION_16	IF_5
0x4000ba0	        0x488d7040	                   lea rsi, [rax + 0x40]	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000ba4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000ba8	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000baf	        0x488b4048	            mov rax, qword [rax + 0x48] 	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000bb3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000bb7	          0x4989f9	                             mov r9, rdi	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000bba	          0x4989c8	                             mov r8, rcx	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000bbd	          0x4889d1	                            mov rcx, rdx	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000bc0	      0xba00000000	                              mov edx, 0	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000bc5	          0x4889c7	                            mov rdi, rax	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000bc8	      0xe82ff6ffff	                   call sym.read_section	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000bcd	            0x85c0	                           test eax, eax	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000bcf	            0x7507	                           jne 0x4000bd8	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4000bd1	      0xb800000000	                              mov eax, 0	       868	dwarf2.c	FUNCTION_16	IF_5
0x4000bd6	            0xeb24	                           jmp 0x4000bfc	       868	dwarf2.c	FUNCTION_16	IF_5
0x4000bd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       870	dwarf2.c	FUNCTION_16	IF_6
0x4000bdc	        0x488b4068	            mov rax, qword [rax + 0x68] 	       870	dwarf2.c	FUNCTION_16	IF_6
0x4000be0	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       870	dwarf2.c	FUNCTION_16	IF_6
0x4000be4	            0x7707	                            ja 0x4000bed	       870	dwarf2.c	FUNCTION_16	IF_6
0x4000be6	      0xb800000000	                              mov eax, 0	       871	dwarf2.c	FUNCTION_16	IF_6
0x4000beb	            0xeb0f	                           jmp 0x4000bfc	       871	dwarf2.c	FUNCTION_16	IF_6
0x4000bed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       872	dwarf2.c	FUNCTION_16
0x4000bf1	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       872	dwarf2.c	FUNCTION_16
0x4000bf5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       872	dwarf2.c	FUNCTION_16
0x4000bf9	          0x4801d0	                            add rax, rdx	       872	dwarf2.c	FUNCTION_16
0x4000bfc	              0xc9	                                   leave	       873	dwarf2.c	FUNCTION_16
0x4000bfd	              0xc3	                                     ret	       873	dwarf2.c	FUNCTION_16
place_sections	SWITCH,0:ELSE,2:CALL,7:IF,11:DO,0:WHILE,2:functions,0:FOR,3	269
0x4006f4e	              0x55	                                push rbp	      3904	dwarf2.c	FUNCTION_57
0x4006f4f	          0x4889e5	                            mov rbp, rsp	      3904	dwarf2.c	FUNCTION_57
0x4006f52	        0x4883ec70	                           sub rsp, 0x70	      3904	dwarf2.c	FUNCTION_57
0x4006f56	        0x48897d98	             mov qword [rbp - 0x68], rdi	      3904	dwarf2.c	FUNCTION_57
0x4006f5a	        0x48897590	             mov qword [rbp - 0x70], rsi	      3904	dwarf2.c	FUNCTION_57
0x4006f5e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3910	dwarf2.c	FUNCTION_57	IF_1
0x4006f62	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	      3910	dwarf2.c	FUNCTION_57	IF_1
0x4006f68	            0x85c0	                           test eax, eax	      3910	dwarf2.c	FUNCTION_57	IF_1
0x4006f6a	            0x744a	                            je 0x4006fb6	      3910	dwarf2.c	FUNCTION_57	IF_1
0x4006f6c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3912	dwarf2.c	FUNCTION_57	IF_1
0x4006f70	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	      3912	dwarf2.c	FUNCTION_57	IF_1
0x4006f76	          0x8945ac	             mov dword [rbp - 0x54], eax	      3912	dwarf2.c	FUNCTION_57	IF_1
0x4006f79	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3913	dwarf2.c	FUNCTION_57	IF_1
0x4006f7d	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      3913	dwarf2.c	FUNCTION_57	IF_1
0x4006f84	        0x488945c0	             mov qword [rbp - 0x40], rax	      3913	dwarf2.c	FUNCTION_57	IF_1
0x4006f88	            0xeb1c	                           jmp 0x4006fa6	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4006f8a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3915	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4006f8e	          0x488b00	                    mov rax, qword [rax]	      3915	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4006f91	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3915	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4006f95	        0x488b5208	                mov rdx, qword [rdx + 8]	      3915	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4006f99	        0x48895028	             mov qword [rax + 0x28], rdx	      3915	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4006f9d	        0x836dac01	               sub dword [rbp - 0x54], 1	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4006fa1	      0x488345c010	            add qword [rbp - 0x40], 0x10	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4006fa6	        0x837dac00	               cmp dword [rbp - 0x54], 0	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4006faa	            0x7fde	                            jg 0x4006f8a	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4006fac	      0xb801000000	                              mov eax, 1	      3916	dwarf2.c	FUNCTION_57	IF_1
0x4006fb1	      0xe978030000	                           jmp 0x400732e	      3916	dwarf2.c	FUNCTION_57	IF_1
0x4006fb6	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3919	dwarf2.c	FUNCTION_57
0x4006fba	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3919	dwarf2.c	FUNCTION_57
0x4006fbe	        0x4883c030	                           add rax, 0x30	      3919	dwarf2.c	FUNCTION_57
0x4006fc2	          0x488b00	                    mov rax, qword [rax]	      3919	dwarf2.c	FUNCTION_57
0x4006fc5	        0x488945e8	             mov qword [rbp - 0x18], rax	      3919	dwarf2.c	FUNCTION_57
0x4006fc9	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      3920	dwarf2.c	FUNCTION_57
0x4006fd0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3921	dwarf2.c	FUNCTION_57
0x4006fd4	        0x488945b8	             mov qword [rbp - 0x48], rax	      3921	dwarf2.c	FUNCTION_57
0x4006fd8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x4006fdc	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x4006fe3	        0x488945c8	             mov qword [rbp - 0x38], rax	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x4006fe7	      0xe9b2000000	                           jmp 0x400709e	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x4006fec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3930	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4006ff0	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3930	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4006ff4	          0x4885c0	                           test rax, rax	      3930	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4006ff7	            0x741e	                            je 0x4007017	      3930	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4006ff9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3931	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4006ffd	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3931	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4007001	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      3931	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4007005	            0x7410	                            je 0x4007017	      3931	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4007007	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3932	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x400700b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3932	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x400700e	      0x2500200000	                         and eax, 0x2000	      3932	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4007013	            0x85c0	                           test eax, eax	      3932	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4007015	            0x7477	                            je 0x400708e	      3932	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4007017	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3933	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x400701b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3933	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x400701f	          0x4885c0	                           test rax, rax	      3933	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4007022	            0x756a	                           jne 0x400708e	      3933	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4007024	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x4007028	          0x488b00	                    mov rax, qword [rax]	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x400702b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x400702f	          0x4889d6	                            mov rsi, rdx	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x4007032	          0x4889c7	                            mov rdi, rax	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x4007035	      0xe800000000	                          call 0x400703a	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x400703a	            0x85c0	                           test eax, eax	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x400703c	            0x741d	                            je 0x400705b	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x400703e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x4007042	          0x488b00	                    mov rax, qword [rax]	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x4007045	      0xba11000000	                           mov edx, 0x11	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x400704a	      0xbe00000000	                              mov esi, 0	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x400704f	          0x4889c7	                            mov rdi, rax	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x4007052	      0xe800000000	                          call 0x4007057	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x4007057	            0x85c0	                           test eax, eax	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x4007059	            0x7507	                           jne 0x4007062	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x400705b	      0xb801000000	                              mov eax, 1	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x4007060	            0xeb05	                           jmp 0x4007067	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x4007062	      0xb800000000	                              mov eax, 0	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x4007067	          0x8945b0	             mov dword [rbp - 0x50], eax	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x400706a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x400706e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x4007071	          0x83e001	                              and eax, 1	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x4007074	            0x85c0	                           test eax, eax	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x4007076	            0x740a	                            je 0x4007082	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x4007078	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x400707c	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x4007080	            0x7406	                            je 0x4007088	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x4007082	        0x837db000	               cmp dword [rbp - 0x50], 0	      3940	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x4007086	            0x7409	                            je 0x4007091	      3940	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x4007088	        0x8345ac01	               add dword [rbp - 0x54], 1	      3943	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x400708c	            0xeb04	                           jmp 0x4007092	      3943	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x400708e	              0x90	                                     nop	      3934	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x400708f	            0xeb01	                           jmp 0x4007092	      3934	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4007091	              0x90	                                     nop	      3941	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x4007092	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x4007096	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x400709a	        0x488945c8	             mov qword [rbp - 0x38], rax	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x400709e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x40070a3	     0xf8543ffffff	                           jne 0x4006fec	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x40070a9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3945	dwarf2.c	FUNCTION_57	WHILE_1	IF_4
0x40070ad	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3945	dwarf2.c	FUNCTION_57	WHILE_1	IF_4
0x40070b1	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      3945	dwarf2.c	FUNCTION_57	WHILE_1	IF_4
0x40070b5	            0x7411	                            je 0x40070c8	      3945	dwarf2.c	FUNCTION_57	WHILE_1	IF_4
0x40070b7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3947	dwarf2.c	FUNCTION_57	WHILE_1
0x40070bb	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3947	dwarf2.c	FUNCTION_57	WHILE_1
0x40070bf	        0x488945b8	             mov qword [rbp - 0x48], rax	      3947	dwarf2.c	FUNCTION_57	WHILE_1
0x40070c3	      0xe910ffffff	                           jmp 0x4006fd8	      3948	dwarf2.c	FUNCTION_57	WHILE_1
0x40070c8	              0x90	                                     nop	      3946	dwarf2.c	FUNCTION_57	WHILE_1	IF_4
0x40070c9	        0x837dac01	               cmp dword [rbp - 0x54], 1	      3950	dwarf2.c	FUNCTION_57	IF_5
0x40070cd	            0x7f13	                            jg 0x40070e2	      3950	dwarf2.c	FUNCTION_57	IF_5
0x40070cf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3951	dwarf2.c	FUNCTION_57	IF_5
0x40070d3	    0xc780e0000000	     mov dword [rax + 0xe0], 0xffffffff 	      3951	dwarf2.c	FUNCTION_57	IF_5
0x40070dd	      0xe922020000	                           jmp 0x4007304	      3951	dwarf2.c	FUNCTION_57	IF_5
0x40070e2	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      3954	dwarf2.c	FUNCTION_57	ELSE_1
0x40070ea	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      3954	dwarf2.c	FUNCTION_57	ELSE_1
0x40070f2	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3955	dwarf2.c	FUNCTION_57	ELSE_1
0x40070f5	            0x4898	                                    cdqe	      3955	dwarf2.c	FUNCTION_57	ELSE_1
0x40070f7	        0x48c1e004	                              shl rax, 4	      3955	dwarf2.c	FUNCTION_57	ELSE_1
0x40070fb	        0x488945f0	             mov qword [rbp - 0x10], rax	      3955	dwarf2.c	FUNCTION_57	ELSE_1
0x40070ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3957	dwarf2.c	FUNCTION_57	ELSE_1	CALL_3
0x4007103	          0x4889c7	                            mov rdi, rax	      3957	dwarf2.c	FUNCTION_57	ELSE_1	CALL_3
0x4007106	      0xe800000000	                          call 0x400710b	      3957	dwarf2.c	FUNCTION_57	ELSE_1	CALL_3
0x400710b	        0x488945c0	             mov qword [rbp - 0x40], rax	      3957	dwarf2.c	FUNCTION_57	ELSE_1	CALL_3
0x400710f	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3958	dwarf2.c	FUNCTION_57	ELSE_1	IF_6
0x4007114	            0x750a	                           jne 0x4007120	      3958	dwarf2.c	FUNCTION_57	ELSE_1	IF_6
0x4007116	      0xb800000000	                              mov eax, 0	      3959	dwarf2.c	FUNCTION_57	ELSE_1	IF_6
0x400711b	      0xe90e020000	                           jmp 0x400732e	      3959	dwarf2.c	FUNCTION_57	ELSE_1	IF_6
0x4007120	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3961	dwarf2.c	FUNCTION_57	ELSE_1
0x4007124	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3961	dwarf2.c	FUNCTION_57	ELSE_1
0x4007128	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      3961	dwarf2.c	FUNCTION_57	ELSE_1
0x400712f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3962	dwarf2.c	FUNCTION_57	ELSE_1
0x4007133	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3962	dwarf2.c	FUNCTION_57	ELSE_1
0x4007136	    0x8990e0000000	             mov dword [rax + 0xe0], edx	      3962	dwarf2.c	FUNCTION_57	ELSE_1
0x400713c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3964	dwarf2.c	FUNCTION_57	ELSE_1
0x4007140	        0x488945b8	             mov qword [rbp - 0x48], rax	      3964	dwarf2.c	FUNCTION_57	ELSE_1
0x4007144	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4007148	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x400714f	        0x488945e0	             mov qword [rbp - 0x20], rax	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4007153	      0xe981010000	                           jmp 0x40072d9	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4007158	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3974	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x400715c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3974	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007160	          0x4885c0	                           test rax, rax	      3974	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007163	            0x7422	                            je 0x4007187	      3974	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007165	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3975	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007169	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3975	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x400716d	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3975	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007171	            0x7414	                            je 0x4007187	      3975	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007173	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3976	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007177	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3976	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x400717a	      0x2500200000	                         and eax, 0x2000	      3976	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x400717f	            0x85c0	                           test eax, eax	      3976	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007181	     0xf8442010000	                            je 0x40072c9	      3976	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007187	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3977	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x400718b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3977	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x400718f	          0x4885c0	                           test rax, rax	      3977	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007192	     0xf8531010000	                           jne 0x40072c9	      3977	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4007198	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x400719c	          0x488b00	                    mov rax, qword [rax]	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x400719f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x40071a3	          0x4889d6	                            mov rsi, rdx	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x40071a6	          0x4889c7	                            mov rdi, rax	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x40071a9	      0xe800000000	                          call 0x40071ae	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x40071ae	            0x85c0	                           test eax, eax	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071b0	            0x741d	                            je 0x40071cf	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071b6	          0x488b00	                    mov rax, qword [rax]	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071b9	      0xba11000000	                           mov edx, 0x11	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071be	      0xbe00000000	                              mov esi, 0	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071c3	          0x4889c7	                            mov rdi, rax	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071c6	      0xe800000000	                          call 0x40071cb	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071cb	            0x85c0	                           test eax, eax	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071cd	            0x7507	                           jne 0x40071d6	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071cf	      0xb801000000	                              mov eax, 1	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071d4	            0xeb05	                           jmp 0x40071db	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071d6	      0xb800000000	                              mov eax, 0	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40071db	          0x8945b4	             mov dword [rbp - 0x4c], eax	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x40071de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40071e2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40071e5	          0x83e001	                              and eax, 1	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40071e8	            0x85c0	                           test eax, eax	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40071ea	            0x740a	                            je 0x40071f6	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40071ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40071f0	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40071f4	            0x740a	                            je 0x4007200	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40071f6	        0x837db400	               cmp dword [rbp - 0x4c], 0	      3984	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40071fa	     0xf84cc000000	                            je 0x40072cc	      3984	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x4007200	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4007204	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4007208	          0x4885c0	                           test rax, rax	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x400720b	            0x740a	                            je 0x4007217	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x400720d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4007211	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4007215	            0xeb08	                           jmp 0x400721f	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4007217	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x400721b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x400721f	        0x488945f8	                mov qword [rbp - 8], rax	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4007223	        0x837db400	               cmp dword [rbp - 0x4c], 0	      3989	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x4007227	            0x7430	                            je 0x4007259	      3989	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x4007229	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x400722d	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x4007230	            0x85c0	                           test eax, eax	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x4007232	            0x740f	                            je 0x4007243	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x4007234	      0xbe970f0000	                          mov esi, 0xf97	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x4007239	      0xbf00000000	                              mov edi, 0	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x400723e	      0xe800000000	                          call 0x4007243	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x4007243	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3992	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x4007247	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3992	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x400724b	        0x48895028	             mov qword [rax + 0x28], rdx	      3992	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x400724f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3993	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x4007253	        0x480145d8	            add qword [rbp - 0x28], rax 	      3993	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x4007257	            0xeb4e	                           jmp 0x40072a7	      3993	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x4007259	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400725d	          0x8b4070	            mov eax, dword [rax + 0x70] 	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007260	      0xba01000000	                              mov edx, 1	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007265	            0x89c1	                            mov ecx, eax	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007267	          0x48d3e2	                             shl rdx, cl	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400726a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400726e	          0x4801d0	                            add rax, rdx	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007271	        0x488d50ff	                      lea rdx, [rax - 1]	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007275	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4001	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007279	          0x8b4070	            mov eax, dword [rax + 0x70] 	      4001	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400727c	      0xbe01000000	                              mov esi, 1	      4001	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007281	            0x89c1	                            mov ecx, eax	      4001	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007283	          0x48d3e6	                             shl rsi, cl	      4001	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007286	          0x4889f0	                            mov rax, rsi	      4001	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007289	          0x48f7d8	                                 neg rax	      4001	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400728c	          0x4821d0	                            and rax, rdx	      3999	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400728f	        0x488945d0	             mov qword [rbp - 0x30], rax	      3999	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007293	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4002	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4007297	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4002	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400729b	        0x48895028	             mov qword [rax + 0x28], rdx	      4002	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400729f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4003	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x40072a3	        0x480145d0	            add qword [rbp - 0x30], rax 	      4003	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x40072a7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4006	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072ab	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4006	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072af	          0x488910	                    mov qword [rax], rdx	      4006	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4007	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072b6	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4007	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072ba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4007	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072be	        0x48895008	                mov qword [rax + 8], rdx	      4007	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072c2	      0x488345c010	            add qword [rbp - 0x40], 0x10	      4008	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072c7	            0xeb04	                           jmp 0x40072cd	      4008	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072c9	              0x90	                                     nop	      3978	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x40072ca	            0xeb01	                           jmp 0x40072cd	      3978	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x40072cc	              0x90	                                     nop	      3985	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40072cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072d1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072d5	        0x488945e0	             mov qword [rbp - 0x20], rax	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072d9	      0x48837de000	               cmp qword [rbp - 0x20], 0	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072de	     0xf8574feffff	                           jne 0x4007158	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40072e4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4010	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	IF_10
0x40072e8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4010	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	IF_10
0x40072ec	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      4010	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	IF_10
0x40072f0	            0x7411	                            je 0x4007303	      4010	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	IF_10
0x40072f2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4012	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2
0x40072f6	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4012	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2
0x40072fa	        0x488945b8	             mov qword [rbp - 0x48], rax	      4012	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2
0x40072fe	      0xe941feffff	                           jmp 0x4007144	      4013	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2
0x4007303	              0x90	                                     nop	      4011	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	IF_10
0x4007304	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4016	dwarf2.c	FUNCTION_57	IF_11
0x4007308	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4016	dwarf2.c	FUNCTION_57	IF_11
0x400730c	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      4016	dwarf2.c	FUNCTION_57	IF_11
0x4007310	            0x7417	                            je 0x4007329	      4016	dwarf2.c	FUNCTION_57	IF_11
0x4007312	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4017	dwarf2.c	FUNCTION_57	CALL_7
0x4007316	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4017	dwarf2.c	FUNCTION_57	CALL_7
0x400731a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4017	dwarf2.c	FUNCTION_57	CALL_7
0x400731e	          0x4889d6	                            mov rsi, rdx	      4017	dwarf2.c	FUNCTION_57	CALL_7
0x4007321	          0x4889c7	                            mov rdi, rax	      4017	dwarf2.c	FUNCTION_57	CALL_7
0x4007324	      0xe821fbffff	                  call sym.set_debug_vma	      4017	dwarf2.c	FUNCTION_57	CALL_7
0x4007329	      0xb801000000	                              mov eax, 1	      4019	dwarf2.c	FUNCTION_57
0x400732e	              0xc9	                                   leave	      4020	dwarf2.c	FUNCTION_57
0x400732f	              0xc3	                                     ret	      4020	dwarf2.c	FUNCTION_57
insert_info_hash_table	SWITCH,0:ELSE,0:CALL,2:IF,2:DO,0:WHILE,0:functions,0:FOR,0	41
0x4000122	              0x55	                                push rbp	       479	dwarf2.c	FUNCTION_3
0x4000123	          0x4889e5	                            mov rbp, rsp	       479	dwarf2.c	FUNCTION_3
0x4000126	        0x4883ec30	                           sub rsp, 0x30	       479	dwarf2.c	FUNCTION_3
0x400012a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       479	dwarf2.c	FUNCTION_3
0x400012e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       479	dwarf2.c	FUNCTION_3
0x4000132	        0x488955d8	             mov qword [rbp - 0x28], rdx	       479	dwarf2.c	FUNCTION_3
0x4000136	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       479	dwarf2.c	FUNCTION_3
0x4000139	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       483	dwarf2.c	FUNCTION_3	CALL_1
0x400013d	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4000140	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4000144	            0x89d1	                            mov ecx, edx	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4000146	      0xba01000000	                              mov edx, 1	       483	dwarf2.c	FUNCTION_3	CALL_1
0x400014b	          0x4889c7	                            mov rdi, rax	       483	dwarf2.c	FUNCTION_3	CALL_1
0x400014e	      0xe800000000	                          call 0x4000153	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4000153	        0x488945f0	             mov qword [rbp - 0x10], rax	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4000157	      0x48837df000	               cmp qword [rbp - 0x10], 0	       485	dwarf2.c	FUNCTION_3	IF_1
0x400015c	            0x7507	                           jne 0x4000165	       485	dwarf2.c	FUNCTION_3	IF_1
0x400015e	      0xb800000000	                              mov eax, 0	       486	dwarf2.c	FUNCTION_3	IF_1
0x4000163	            0xeb4f	                           jmp 0x40001b4	       486	dwarf2.c	FUNCTION_3	IF_1
0x4000165	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4000169	      0xbe10000000	                           mov esi, 0x10	       488	dwarf2.c	FUNCTION_3	CALL_2
0x400016e	          0x4889c7	                            mov rdi, rax	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4000171	      0xe800000000	                          call 0x4000176	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4000176	        0x488945f8	                mov qword [rbp - 8], rax	       488	dwarf2.c	FUNCTION_3	CALL_2
0x400017a	      0x48837df800	                  cmp qword [rbp - 8], 0	       490	dwarf2.c	FUNCTION_3	IF_2
0x400017f	            0x7507	                           jne 0x4000188	       490	dwarf2.c	FUNCTION_3	IF_2
0x4000181	      0xb800000000	                              mov eax, 0	       491	dwarf2.c	FUNCTION_3	IF_2
0x4000186	            0xeb2c	                           jmp 0x40001b4	       491	dwarf2.c	FUNCTION_3	IF_2
0x4000188	        0x488b45f8	                mov rax, qword [rbp - 8]	       493	dwarf2.c	FUNCTION_3
0x400018c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       493	dwarf2.c	FUNCTION_3
0x4000190	        0x48895008	                mov qword [rax + 8], rdx	       493	dwarf2.c	FUNCTION_3
0x4000194	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       494	dwarf2.c	FUNCTION_3
0x4000198	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       494	dwarf2.c	FUNCTION_3
0x400019c	        0x488b45f8	                mov rax, qword [rbp - 8]	       494	dwarf2.c	FUNCTION_3
0x40001a0	          0x488910	                    mov qword [rax], rdx	       494	dwarf2.c	FUNCTION_3
0x40001a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       495	dwarf2.c	FUNCTION_3
0x40001a7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       495	dwarf2.c	FUNCTION_3
0x40001ab	        0x48895018	             mov qword [rax + 0x18], rdx	       495	dwarf2.c	FUNCTION_3
0x40001af	      0xb801000000	                              mov eax, 1	       497	dwarf2.c	FUNCTION_3
0x40001b4	              0xc9	                                   leave	       498	dwarf2.c	FUNCTION_3
0x40001b5	              0xc3	                                     ret	       498	dwarf2.c	FUNCTION_3
build_line_info_table	SWITCH,0:ELSE,0:CALL,2:IF,3:DO,0:WHILE,0:functions,0:FOR,2	72
0x40024f5	              0x55	                                push rbp	      1712	dwarf2.c	FUNCTION_29
0x40024f6	          0x4889e5	                            mov rbp, rsp	      1712	dwarf2.c	FUNCTION_29
0x40024f9	        0x4883ec30	                           sub rsp, 0x30	      1712	dwarf2.c	FUNCTION_29
0x40024fd	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1712	dwarf2.c	FUNCTION_29
0x4002501	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1712	dwarf2.c	FUNCTION_29
0x4002505	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1719	dwarf2.c	FUNCTION_29	IF_1
0x4002509	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1719	dwarf2.c	FUNCTION_29	IF_1
0x400250d	          0x4885c0	                           test rax, rax	      1719	dwarf2.c	FUNCTION_29	IF_1
0x4002510	            0x740a	                            je 0x400251c	      1719	dwarf2.c	FUNCTION_29	IF_1
0x4002512	      0xb801000000	                              mov eax, 1	      1720	dwarf2.c	FUNCTION_29	IF_1
0x4002517	      0xe9e2000000	                           jmp 0x40025fe	      1720	dwarf2.c	FUNCTION_29	IF_1
0x400251c	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1726	dwarf2.c	FUNCTION_29
0x4002523	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x4002527	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x400252b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x400252f	            0xeb0f	                           jmp 0x4002540	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x4002531	        0x8345e001	               add dword [rbp - 0x20], 1	      1728	dwarf2.c	FUNCTION_29	FOR_1
0x4002535	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x4002539	          0x488b00	                    mov rax, qword [rax]	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x400253c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x4002540	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x4002545	            0x75ea	                           jne 0x4002531	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x4002547	        0x837de000	               cmp dword [rbp - 0x20], 0	      1730	dwarf2.c	FUNCTION_29	IF_2
0x400254b	            0x750a	                           jne 0x4002557	      1730	dwarf2.c	FUNCTION_29	IF_2
0x400254d	      0xb801000000	                              mov eax, 1	      1731	dwarf2.c	FUNCTION_29	IF_2
0x4002552	      0xe9a7000000	                           jmp 0x40025fe	      1731	dwarf2.c	FUNCTION_29	IF_2
0x4002557	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1734	dwarf2.c	FUNCTION_29
0x400255a	        0x48c1e003	                              shl rax, 3	      1734	dwarf2.c	FUNCTION_29
0x400255e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1734	dwarf2.c	FUNCTION_29
0x4002562	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x4002566	          0x488b00	                    mov rax, qword [rax]	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x4002569	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x400256d	          0x4889d6	                            mov rsi, rdx	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x4002570	          0x4889c7	                            mov rdi, rax	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x4002573	      0xe800000000	                          call 0x4002578	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x4002578	        0x488945f8	                mov qword [rbp - 8], rax	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x400257c	      0x48837df800	                  cmp qword [rbp - 8], 0	      1736	dwarf2.c	FUNCTION_29	IF_3
0x4002581	            0x7507	                           jne 0x400258a	      1736	dwarf2.c	FUNCTION_29	IF_3
0x4002583	      0xb800000000	                              mov eax, 0	      1737	dwarf2.c	FUNCTION_29	IF_3
0x4002588	            0xeb74	                           jmp 0x40025fe	      1737	dwarf2.c	FUNCTION_29	IF_3
0x400258a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1740	dwarf2.c	FUNCTION_29
0x400258d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1740	dwarf2.c	FUNCTION_29
0x4002590	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x4002594	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x4002598	        0x488945e8	             mov qword [rbp - 0x18], rax	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x400259c	            0xeb28	                           jmp 0x40025c6	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x400259e	        0x836de401	               sub dword [rbp - 0x1c], 1	      1742	dwarf2.c	FUNCTION_29	FOR_2
0x40025a2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1742	dwarf2.c	FUNCTION_29	FOR_2
0x40025a5	    0x488d14c50000	                        lea rdx, [rax*8]	      1742	dwarf2.c	FUNCTION_29	FOR_2
0x40025ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      1742	dwarf2.c	FUNCTION_29	FOR_2
0x40025b1	          0x4801c2	                            add rdx, rax	      1742	dwarf2.c	FUNCTION_29	FOR_2
0x40025b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1742	dwarf2.c	FUNCTION_29	FOR_2
0x40025b8	          0x488902	                    mov qword [rdx], rax	      1742	dwarf2.c	FUNCTION_29	FOR_2
0x40025bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40025bf	          0x488b00	                    mov rax, qword [rax]	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40025c2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40025c6	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40025cb	            0x75d1	                           jne 0x400259e	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40025cd	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1744	dwarf2.c	FUNCTION_29	CALL_2
0x40025d1	            0x740f	                            je 0x40025e2	      1744	dwarf2.c	FUNCTION_29	CALL_2
0x40025d3	      0xbed0060000	                          mov esi, 0x6d0	      1744	dwarf2.c	FUNCTION_29	CALL_2
0x40025d8	      0xbf00000000	                              mov edi, 0	      1744	dwarf2.c	FUNCTION_29	CALL_2
0x40025dd	      0xe800000000	                          call 0x40025e2	      1744	dwarf2.c	FUNCTION_29	CALL_2
0x40025e2	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1746	dwarf2.c	FUNCTION_29
0x40025e5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1746	dwarf2.c	FUNCTION_29
0x40025e9	        0x48895020	             mov qword [rax + 0x20], rdx	      1746	dwarf2.c	FUNCTION_29
0x40025ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1747	dwarf2.c	FUNCTION_29
0x40025f1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1747	dwarf2.c	FUNCTION_29
0x40025f5	        0x48895018	             mov qword [rax + 0x18], rdx	      1747	dwarf2.c	FUNCTION_29
0x40025f9	      0xb801000000	                              mov eax, 1	      1749	dwarf2.c	FUNCTION_29
0x40025fe	              0xc9	                                   leave	      1750	dwarf2.c	FUNCTION_29
0x40025ff	              0xc3	                                     ret	      1750	dwarf2.c	FUNCTION_29
set_debug_vma	SWITCH,0:ELSE,0:CALL,1:IF,2:DO,0:WHILE,0:functions,0:FOR,1	53
0x4006e4a	              0x55	                                push rbp	      3858	dwarf2.c	FUNCTION_55
0x4006e4b	          0x4889e5	                            mov rbp, rsp	      3858	dwarf2.c	FUNCTION_55
0x4006e4e	        0x4883ec20	                           sub rsp, 0x20	      3858	dwarf2.c	FUNCTION_55
0x4006e52	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3858	dwarf2.c	FUNCTION_55
0x4006e56	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3858	dwarf2.c	FUNCTION_55
0x4006e5a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4006e5e	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4006e65	        0x488945f0	             mov qword [rbp - 0x10], rax	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4006e69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4006e6d	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4006e74	        0x488945f8	                mov qword [rbp - 8], rax	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4006e78	            0xeb75	                           jmp 0x4006eef	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4006e7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3865	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x4006e7e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3865	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x4006e81	      0x2500200000	                         and eax, 0x2000	      3865	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x4006e86	            0x85c0	                           test eax, eax	      3865	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x4006e88	            0x7579	                           jne 0x4006f03	      3865	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x4006e8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4006e8e	          0x488b10	                    mov rdx, qword [rax]	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4006e91	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4006e95	          0x488b00	                    mov rax, qword [rax]	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4006e98	          0x4889d6	                            mov rsi, rdx	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4006e9b	          0x4889c7	                            mov rdi, rax	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4006e9e	      0xe800000000	                          call 0x4006ea3	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4006ea3	            0x85c0	                           test eax, eax	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4006ea5	            0x7530	                           jne 0x4006ed7	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4006ea7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3871	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006eab	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      3871	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006eaf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3871	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006eb3	        0x48895068	             mov qword [rax + 0x68], rdx	      3871	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006eb7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3872	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006ebb	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      3872	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006ebf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3872	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006ec3	        0x48895060	             mov qword [rax + 0x60], rdx	      3872	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006ec7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3873	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006ecb	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3873	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006ecf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3873	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006ed3	        0x48895028	             mov qword [rax + 0x28], rdx	      3873	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4006ed7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3863	dwarf2.c	FUNCTION_55	FOR_1
0x4006edb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3863	dwarf2.c	FUNCTION_55	FOR_1
0x4006edf	        0x488945f0	             mov qword [rbp - 0x10], rax	      3863	dwarf2.c	FUNCTION_55	FOR_1
0x4006ee3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3863	dwarf2.c	FUNCTION_55	FOR_1
0x4006ee7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3863	dwarf2.c	FUNCTION_55	FOR_1
0x4006eeb	        0x488945f8	                mov qword [rbp - 8], rax	      3863	dwarf2.c	FUNCTION_55	FOR_1
0x4006eef	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4006ef4	            0x740e	                            je 0x4006f04	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4006ef6	      0x48837df800	                  cmp qword [rbp - 8], 0	      3862	dwarf2.c	FUNCTION_55	FOR_1
0x4006efb	     0xf8579ffffff	                           jne 0x4006e7a	      3862	dwarf2.c	FUNCTION_55	FOR_1
0x4006f01	            0xeb01	                           jmp 0x4006f04	      3876	dwarf2.c	FUNCTION_55
0x4006f03	              0x90	                                     nop	      3866	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x4006f04	              0x90	                                     nop	      3876	dwarf2.c	FUNCTION_55
0x4006f05	              0xc9	                                   leave	      3876	dwarf2.c	FUNCTION_55
0x4006f06	              0xc3	                                     ret	      3876	dwarf2.c	FUNCTION_55
read_abbrevs	SWITCH,0:ELSE,0:CALL,13:IF,10:DO,0:WHILE,2:functions,0:FOR,2	295
0x4000e04	              0x55	                                push rbp	       945	dwarf2.c	ELSE_1	FUNCTION_19
0x4000e05	          0x4889e5	                            mov rbp, rsp	       945	dwarf2.c	ELSE_1	FUNCTION_19
0x4000e08	    0x4881ec900000	                           sub rsp, 0x90	       945	dwarf2.c	ELSE_1	FUNCTION_19
0x4000e0f	        0x48897d88	             mov qword [rbp - 0x78], rdi	       945	dwarf2.c	ELSE_1	FUNCTION_19
0x4000e13	        0x48897580	             mov qword [rbp - 0x80], rsi	       945	dwarf2.c	ELSE_1	FUNCTION_19
0x4000e17	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       945	dwarf2.c	ELSE_1	FUNCTION_19
0x4000e1e	    0x64488b042528	                mov rax, qword fs:[0x28]	       945	dwarf2.c	ELSE_1	FUNCTION_19
0x4000e27	        0x488945f8	                mov qword [rbp - 8], rax	       945	dwarf2.c	ELSE_1	FUNCTION_19
0x4000e2b	            0x31c0	                            xor eax, eax	       945	dwarf2.c	ELSE_1	FUNCTION_19
0x4000e2d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e34	    0x4c8d80880000	                    lea r8, [rax + 0x88]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e3b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e42	    0x488db8800000	                   lea rdi, [rax + 0x80]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e49	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e50	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e54	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e5b	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e5f	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e63	        0x488b4588	             mov rax, qword [rbp - 0x78]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e67	          0x4d89c1	                              mov r9, r8	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e6a	          0x4989f8	                             mov r8, rdi	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e6d	          0x4889c7	                            mov rdi, rax	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e70	      0xe887f3ffff	                   call sym.read_section	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e75	            0x85c0	                           test eax, eax	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e77	            0x750a	                           jne 0x4000e83	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4000e79	      0xb800000000	                              mov eax, 0	       957	dwarf2.c	ELSE_1	FUNCTION_19	IF_1
0x4000e7e	      0xe9e8030000	                           jmp 0x400126b	       957	dwarf2.c	ELSE_1	FUNCTION_19	IF_1
0x4000e83	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x4000e8a	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x4000e91	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x4000e95	            0x770a	                            ja 0x4000ea1	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x4000e97	      0xb800000000	                              mov eax, 0	       960	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x4000e9c	      0xe9ca030000	                           jmp 0x400126b	       960	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x4000ea1	    0x48c745d0c803	          mov qword [rbp - 0x30], 0x3c8 	       962	dwarf2.c	ELSE_1	FUNCTION_19
0x4000ea9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4000ead	        0x488b4588	             mov rax, qword [rbp - 0x78]	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4000eb1	          0x4889d6	                            mov rsi, rdx	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4000eb4	          0x4889c7	                            mov rdi, rax	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4000eb7	      0xe800000000	                          call 0x4000ebc	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4000ebc	        0x488945d8	             mov qword [rbp - 0x28], rax	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4000ec0	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       964	dwarf2.c	ELSE_1	FUNCTION_19	IF_3
0x4000ec5	            0x750a	                           jne 0x4000ed1	       964	dwarf2.c	ELSE_1	FUNCTION_19	IF_3
0x4000ec7	      0xb800000000	                              mov eax, 0	       965	dwarf2.c	ELSE_1	FUNCTION_19	IF_3
0x4000ecc	      0xe99a030000	                           jmp 0x400126b	       965	dwarf2.c	ELSE_1	FUNCTION_19	IF_3
0x4000ed1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4000ed8	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4000edf	        0x488b4580	             mov rax, qword [rbp - 0x80]	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4000ee3	          0x4801d0	                            add rax, rdx	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4000ee6	        0x488945b0	             mov qword [rbp - 0x50], rax	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4000eea	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x4000ef1	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x4000ef8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x4000eff	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x4000f06	          0x4801d0	                            add rax, rdx	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x4000f09	        0x488945e0	             mov qword [rbp - 0x20], rax	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x4000f0d	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4000f11	        0x488d559c	                   lea rdx, [rbp - 0x64]	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4000f15	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4000f19	        0x488b4588	             mov rax, qword [rbp - 0x78]	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4000f1d	          0x4989c8	                             mov r8, rcx	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4000f20	      0xb900000000	                              mov ecx, 0	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4000f25	          0x4889c7	                            mov rdi, rax	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4000f28	      0xe800000000	                          call 0x4000f2d	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4000f2d	          0x8945a0	             mov dword [rbp - 0x60], eax	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4000f30	          0x8b459c	             mov eax, dword [rbp - 0x64]	       971	dwarf2.c	ELSE_1	FUNCTION_19
0x4000f33	            0x89c0	                            mov eax, eax	       971	dwarf2.c	ELSE_1	FUNCTION_19
0x4000f35	        0x480145b0	            add qword [rbp - 0x50], rax 	       971	dwarf2.c	ELSE_1	FUNCTION_19
0x4000f39	      0xe919030000	                           jmp 0x4001257	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000f3e	    0x48c745d02000	           mov qword [rbp - 0x30], 0x20 	       976	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000f46	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4000f4a	        0x488b4588	             mov rax, qword [rbp - 0x78]	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4000f4e	          0x4889d6	                            mov rsi, rdx	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4000f51	          0x4889c7	                            mov rdi, rax	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4000f54	      0xe800000000	                          call 0x4000f59	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4000f59	        0x488945e8	             mov qword [rbp - 0x18], rax	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4000f5d	      0x48837de800	               cmp qword [rbp - 0x18], 0	       978	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_4
0x4000f62	            0x750a	                           jne 0x4000f6e	       978	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_4
0x4000f64	      0xb800000000	                              mov eax, 0	       979	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_4
0x4000f69	      0xe9fd020000	                           jmp 0x400126b	       979	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_4
0x4000f6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       982	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000f72	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       982	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000f75	            0x8910	                    mov dword [rax], edx	       982	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000f77	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4000f7b	        0x488d559c	                   lea rdx, [rbp - 0x64]	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4000f7f	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4000f83	        0x488b4588	             mov rax, qword [rbp - 0x78]	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4000f87	          0x4989c8	                             mov r8, rcx	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4000f8a	      0xb900000000	                              mov ecx, 0	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4000f8f	          0x4889c7	                            mov rdi, rax	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4000f92	      0xe800000000	                          call 0x4000f97	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4000f97	            0x89c2	                            mov edx, eax	       983	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000f99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       983	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000f9d	          0x895004	                mov dword [rax + 4], edx	       983	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000fa0	          0x8b459c	             mov eax, dword [rbp - 0x64]	       986	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000fa3	            0x89c0	                            mov eax, eax	       986	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000fa5	        0x480145b0	            add qword [rbp - 0x50], rax 	       986	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000fa9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4000fad	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4000fb1	        0x488b4588	             mov rax, qword [rbp - 0x78]	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4000fb5	          0x4889ce	                            mov rsi, rcx	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4000fb8	          0x4889c7	                            mov rdi, rax	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4000fbb	      0xe839f4ffff	                    call sym.read_1_byte	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4000fc0	            0x89c2	                            mov edx, eax	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4000fc2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4000fc6	          0x895008	                mov dword [rax + 8], edx	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4000fc9	      0x488345b001	               add qword [rbp - 0x50], 1	       988	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000fce	    0x48c745b8ffff	mov qword [rbp - 0x48], 0xffffffffffffffff	       994	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4000fd6	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4000fda	        0x488d559c	                   lea rdx, [rbp - 0x64]	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4000fde	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4000fe2	        0x488b4588	             mov rax, qword [rbp - 0x78]	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4000fe6	          0x4989c8	                             mov r8, rcx	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4000fe9	      0xb900000000	                              mov ecx, 0	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4000fee	          0x4889c7	                            mov rdi, rax	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4000ff1	      0xe800000000	                          call 0x4000ff6	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4000ff6	          0x8945a4	             mov dword [rbp - 0x5c], eax	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4000ff9	          0x8b459c	             mov eax, dword [rbp - 0x64]	       998	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4000ffc	            0x89c0	                            mov eax, eax	       998	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4000ffe	        0x480145b0	            add qword [rbp - 0x50], rax 	       998	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001002	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4001006	        0x488d559c	                   lea rdx, [rbp - 0x64]	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400100a	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400100e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4001012	          0x4989c8	                             mov r8, rcx	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4001015	      0xb900000000	                              mov ecx, 0	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400101a	          0x4889c7	                            mov rdi, rax	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400101d	      0xe800000000	                          call 0x4001022	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4001022	          0x8945a8	             mov dword [rbp - 0x58], eax	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4001025	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1001	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001028	            0x89c0	                            mov eax, eax	      1001	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400102a	        0x480145b0	            add qword [rbp - 0x50], rax 	      1001	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400102e	        0x837da821	           cmp dword [rbp - 0x58], 0x21 	      1002	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4001032	            0x752d	                           jne 0x4001061	      1002	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4001034	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4001038	        0x488d559c	                   lea rdx, [rbp - 0x64]	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x400103c	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4001040	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4001044	          0x4989c8	                             mov r8, rcx	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4001047	      0xb901000000	                              mov ecx, 1	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x400104c	          0x4889c7	                            mov rdi, rax	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x400104f	      0xe800000000	                          call 0x4001054	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4001054	        0x488945b8	             mov qword [rbp - 0x48], rax	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4001058	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1007	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x400105b	            0x89c0	                            mov eax, eax	      1007	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x400105d	        0x480145b0	            add qword [rbp - 0x50], rax 	      1007	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4001061	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x4001065	     0xf8425010000	                            je 0x4001190	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x400106b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x400106f	          0x8b400c	              mov eax, dword [rax + 0xc]	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4001072	          0x83e003	                              and eax, 3	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4001075	            0x85c0	                           test eax, eax	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4001077	     0xf85a2000000	                           jne 0x400111f	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x400107d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1017	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4001081	          0x8b400c	              mov eax, dword [rax + 0xc]	      1017	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4001084	          0x83c004	                              add eax, 4	      1017	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4001087	            0x89c0	                            mov eax, eax	      1017	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4001089	        0x488945d0	             mov qword [rbp - 0x30], rax	      1017	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x400108d	      0x48c165d004	               shl qword [rbp - 0x30], 4	      1018	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4001092	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x4001096	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x400109a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x400109e	          0x4889d6	                            mov rsi, rdx	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x40010a1	          0x4889c7	                            mov rdi, rax	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x40010a4	      0xe800000000	                          call 0x40010a9	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x40010a9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x40010ad	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x40010b2	            0x755f	                           jne 0x4001113	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x40010b4	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40010bc	            0xeb44	                           jmp 0x4001102	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40010be	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1026	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40010c2	    0x488d14c50000	                        lea rdx, [rax*8]	      1026	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40010ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1026	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40010ce	          0x4801d0	                            add rax, rdx	      1026	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40010d1	          0x488b00	                    mov rax, qword [rax]	      1026	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40010d4	        0x488945c8	             mov qword [rbp - 0x38], rax	      1026	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40010d8	            0xeb1c	                           jmp 0x40010f6	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40010da	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1030	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2	CALL_11
0x40010de	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1030	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2	CALL_11
0x40010e2	          0x4889c7	                            mov rdi, rax	      1030	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2	CALL_11
0x40010e5	      0xe800000000	                          call 0x40010ea	      1030	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2	CALL_11
0x40010ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1031	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40010ee	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1031	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40010f2	        0x488945c8	             mov qword [rbp - 0x38], rax	      1031	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40010f6	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40010fb	            0x75dd	                           jne 0x40010da	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40010fd	      0x488345c001	               add qword [rbp - 0x40], 1	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x4001102	      0x48837dc078	           cmp qword [rbp - 0x40], 0x78 	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x4001107	            0x76b5	                           jbe 0x40010be	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x4001109	      0xb800000000	                              mov eax, 0	      1034	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x400110e	      0xe958010000	                           jmp 0x400126b	      1034	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x4001113	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4001117	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x400111b	        0x48895010	             mov qword [rax + 0x10], rdx	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x400111f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001123	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001127	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400112b	          0x8b400c	              mov eax, dword [rax + 0xc]	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400112e	            0x89c0	                            mov eax, eax	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001130	        0x48c1e004	                              shl rax, 4	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001134	          0x4801c2	                            add rdx, rax	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001137	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1040	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400113a	            0x8902	                    mov dword [rdx], eax	      1040	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400113c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1041	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001140	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1041	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001144	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1041	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001148	          0x8b400c	              mov eax, dword [rax + 0xc]	      1041	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400114b	            0x89c0	                            mov eax, eax	      1041	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400114d	        0x48c1e004	                              shl rax, 4	      1041	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001151	          0x4801c2	                            add rdx, rax	      1041	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001154	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      1042	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001157	          0x894204	                mov dword [rdx + 4], eax	      1042	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400115a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1043	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400115e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1043	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001162	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1043	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001166	          0x8b400c	              mov eax, dword [rax + 0xc]	      1043	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001169	            0x89c0	                            mov eax, eax	      1043	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400116b	        0x48c1e004	                              shl rax, 4	      1043	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400116f	          0x4801c2	                            add rdx, rax	      1043	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001172	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1044	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001176	        0x48894208	                mov qword [rdx + 8], rax	      1044	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400117a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400117e	          0x8b400c	              mov eax, dword [rax + 0xc]	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001181	          0x8d5001	                      lea edx, [rax + 1]	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001184	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001188	          0x89500c	              mov dword [rax + 0xc], edx	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400118b	      0xe93efeffff	                           jmp 0x4000fce	      1046	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4001190	              0x90	                                     nop	      1011	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x4001191	          0x8b4da0	             mov ecx, dword [rbp - 0x60]	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4001194	      0xbabf56cf0e	                      mov edx, 0xecf56bf	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4001199	            0x89c8	                            mov eax, ecx	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400119b	            0xf7e2	                                 mul edx	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400119d	            0x89c8	                            mov eax, ecx	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400119f	            0x29d0	                            sub eax, edx	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011a1	            0xd1e8	                              shr eax, 1	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011a3	             0x1d0	                            add eax, edx	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011a5	          0xc1e806	                              shr eax, 6	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011a8	          0x6bc079	                     imul eax, eax, 0x79	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011ab	            0x29c1	                            sub ecx, eax	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011ad	            0x89c8	                            mov eax, ecx	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011af	          0x8945ac	             mov dword [rbp - 0x54], eax	      1048	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011b2	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011b5	    0x488d14c50000	                        lea rdx, [rax*8]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011c1	          0x4801d0	                            add rax, rdx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011c4	          0x488b10	                    mov rdx, qword [rax]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011cb	        0x48895018	             mov qword [rax + 0x18], rdx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011cf	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1050	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011d2	    0x488d14c50000	                        lea rdx, [rax*8]	      1050	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1050	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011de	          0x4801c2	                            add rdx, rax	      1050	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1050	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011e5	          0x488902	                    mov qword [rdx], rax	      1050	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40011e8	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x40011ec	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x40011f3	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x40011fa	          0x4829c2	                            sub rdx, rax	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x40011fd	          0x4889d0	                            mov rax, rdx	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4001200	            0x89c2	                            mov edx, eax	      1060	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4001202	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1060	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4001209	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1060	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4001210	          0x4839c2	                            cmp rdx, rax	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4001213	            0x734e	                           jae 0x4001263	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4001215	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4001219	        0x488d559c	                   lea rdx, [rbp - 0x64]	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x400121d	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4001221	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4001225	          0x4989c8	                             mov r8, rcx	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4001228	      0xb900000000	                              mov ecx, 0	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x400122d	          0x4889c7	                            mov rdi, rax	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4001230	      0xe800000000	                          call 0x4001235	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4001235	          0x8945a0	             mov dword [rbp - 0x60], eax	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4001238	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1064	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400123b	            0x89c0	                            mov eax, eax	      1064	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400123d	        0x480145b0	            add qword [rbp - 0x50], rax 	      1064	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4001241	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x4001245	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x4001248	          0x4889d6	                            mov rsi, rdx	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x400124b	            0x89c7	                            mov edi, eax	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x400124d	      0xe840fbffff	                  call sym.lookup_abbrev	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x4001252	          0x4885c0	                           test rax, rax	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x4001255	            0x750f	                           jne 0x4001266	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x4001257	        0x837da000	               cmp dword [rbp - 0x60], 0	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400125b	     0xf85ddfcffff	                           jne 0x4000f3e	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4001261	            0xeb04	                           jmp 0x4001267	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4001263	              0x90	                                     nop	      1061	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4001264	            0xeb01	                           jmp 0x4001267	      1061	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4001266	              0x90	                                     nop	      1066	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10
0x4001267	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1069	dwarf2.c	ELSE_1	FUNCTION_19
0x400126b	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1070	dwarf2.c	ELSE_1	FUNCTION_19
0x400126f	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1070	dwarf2.c	ELSE_1	FUNCTION_19
0x4001278	            0x7405	                            je 0x400127f	      1070	dwarf2.c	ELSE_1	FUNCTION_19
0x400127a	      0xe800000000	                          call 0x400127f	      1070	dwarf2.c	ELSE_1	FUNCTION_19
0x400127f	              0xc9	                                   leave	      1070	dwarf2.c	ELSE_1	FUNCTION_19
0x4001280	              0xc3	                                     ret	      1070	dwarf2.c	ELSE_1	FUNCTION_19
read_alt_indirect_string	SWITCH,0:ELSE,1:CALL,8:IF,9:DO,0:WHILE,0:functions,0:FOR,0	129
0x40008d9	              0x55	                                push rbp	       775	dwarf2.c	FUNCTION_15
0x40008da	          0x4889e5	                            mov rbp, rsp	       775	dwarf2.c	FUNCTION_15
0x40008dd	        0x4883ec50	                           sub rsp, 0x50	       775	dwarf2.c	FUNCTION_15
0x40008e1	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       775	dwarf2.c	FUNCTION_15
0x40008e5	        0x488975c0	             mov qword [rbp - 0x40], rsi	       775	dwarf2.c	FUNCTION_15
0x40008e9	        0x488955b8	             mov qword [rbp - 0x48], rdx	       775	dwarf2.c	FUNCTION_15
0x40008ed	        0x48894db0	             mov qword [rbp - 0x50], rcx	       775	dwarf2.c	FUNCTION_15
0x40008f1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       777	dwarf2.c	FUNCTION_15
0x40008f5	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       777	dwarf2.c	FUNCTION_15
0x40008fc	        0x488945e0	             mov qword [rbp - 0x20], rax	       777	dwarf2.c	FUNCTION_15
0x4000900	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       780	dwarf2.c	FUNCTION_15	IF_1
0x4000904	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	       780	dwarf2.c	FUNCTION_15	IF_1
0x400090b	           0xfb6d0	                           movzx edx, al	       780	dwarf2.c	FUNCTION_15	IF_1
0x400090e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       780	dwarf2.c	FUNCTION_15	IF_1
0x4000912	          0x4801d0	                            add rax, rdx	       780	dwarf2.c	FUNCTION_15	IF_1
0x4000915	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       780	dwarf2.c	FUNCTION_15	IF_1
0x4000919	            0x7614	                           jbe 0x400092f	       780	dwarf2.c	FUNCTION_15	IF_1
0x400091b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       782	dwarf2.c	FUNCTION_15	IF_1
0x400091f	    0xc70000000000	                      mov dword [rax], 0	       782	dwarf2.c	FUNCTION_15	IF_1
0x4000925	      0xb800000000	                              mov eax, 0	       783	dwarf2.c	FUNCTION_15	IF_1
0x400092a	      0xe997010000	                           jmp 0x4000ac6	       783	dwarf2.c	FUNCTION_15	IF_1
0x400092f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       786	dwarf2.c	FUNCTION_15	IF_2
0x4000933	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	       786	dwarf2.c	FUNCTION_15	IF_2
0x400093a	            0x3c04	                               cmp al, 4	       786	dwarf2.c	FUNCTION_15	IF_2
0x400093c	            0x7523	                           jne 0x4000961	       786	dwarf2.c	FUNCTION_15	IF_2
0x400093e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       787	dwarf2.c	FUNCTION_15	CALL_1
0x4000942	        0x488b4010	            mov rax, qword [rax + 0x10] 	       787	dwarf2.c	FUNCTION_15	CALL_1
0x4000946	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       787	dwarf2.c	FUNCTION_15	CALL_1
0x400094a	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       787	dwarf2.c	FUNCTION_15	CALL_1
0x400094e	          0x4889ce	                            mov rsi, rcx	       787	dwarf2.c	FUNCTION_15	CALL_1
0x4000951	          0x4889c7	                            mov rdi, rax	       787	dwarf2.c	FUNCTION_15	CALL_1
0x4000954	      0xe848fbffff	                   call sym.read_4_bytes	       787	dwarf2.c	FUNCTION_15	CALL_1
0x4000959	            0x89c0	                            mov eax, eax	       787	dwarf2.c	FUNCTION_15	CALL_1
0x400095b	        0x488945d8	             mov qword [rbp - 0x28], rax	       787	dwarf2.c	FUNCTION_15	CALL_1
0x400095f	            0xeb1f	                           jmp 0x4000980	       787	dwarf2.c	FUNCTION_15	CALL_1
0x4000961	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       789	dwarf2.c	FUNCTION_15	CALL_2
0x4000965	        0x488b4010	            mov rax, qword [rax + 0x10] 	       789	dwarf2.c	FUNCTION_15	CALL_2
0x4000969	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       789	dwarf2.c	FUNCTION_15	CALL_2
0x400096d	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       789	dwarf2.c	FUNCTION_15	CALL_2
0x4000971	          0x4889ce	                            mov rsi, rcx	       789	dwarf2.c	FUNCTION_15	CALL_2
0x4000974	          0x4889c7	                            mov rdi, rax	       789	dwarf2.c	FUNCTION_15	CALL_2
0x4000977	      0xe865fbffff	                   call sym.read_8_bytes	       789	dwarf2.c	FUNCTION_15	CALL_2
0x400097c	        0x488945d8	             mov qword [rbp - 0x28], rax	       789	dwarf2.c	FUNCTION_15	CALL_2
0x4000980	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       791	dwarf2.c	FUNCTION_15
0x4000984	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	       791	dwarf2.c	FUNCTION_15
0x400098b	           0xfb6d0	                           movzx edx, al	       791	dwarf2.c	FUNCTION_15
0x400098e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       791	dwarf2.c	FUNCTION_15
0x4000992	            0x8910	                    mov dword [rax], edx	       791	dwarf2.c	FUNCTION_15
0x4000994	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       793	dwarf2.c	FUNCTION_15	IF_3
0x4000998	        0x488b4048	            mov rax, qword [rax + 0x48] 	       793	dwarf2.c	FUNCTION_15	IF_3
0x400099c	          0x4885c0	                           test rax, rax	       793	dwarf2.c	FUNCTION_15	IF_3
0x400099f	     0xf8590000000	                           jne 0x4000a35	       793	dwarf2.c	FUNCTION_15	IF_3
0x40009a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40009a9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40009ad	      0xbe00000000	                              mov esi, 0	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40009b2	          0x4889c7	                            mov rdi, rax	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40009b5	      0xe800000000	                          call 0x40009ba	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40009ba	        0x488945e8	             mov qword [rbp - 0x18], rax	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40009be	      0x48837de800	               cmp qword [rbp - 0x18], 0	       798	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x40009c3	            0x750a	                           jne 0x40009cf	       798	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x40009c5	      0xb800000000	                              mov eax, 0	       799	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x40009ca	      0xe9f7000000	                           jmp 0x4000ac6	       799	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x40009cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40009d3	      0xbe00000000	                              mov esi, 0	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40009d8	          0x4889c7	                            mov rdi, rax	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40009db	      0xe800000000	                          call 0x40009e0	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40009e0	        0x488945f0	             mov qword [rbp - 0x10], rax	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40009e4	      0x48837df000	               cmp qword [rbp - 0x10], 0	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40009e9	            0x7415	                            je 0x4000a00	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40009eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40009ef	      0xbe01000000	                              mov esi, 1	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40009f4	          0x4889c7	                            mov rdi, rax	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40009f7	      0xe800000000	                          call 0x40009fc	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40009fc	            0x85c0	                           test eax, eax	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40009fe	            0x7529	                           jne 0x4000a29	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x4000a00	      0x48837df000	               cmp qword [rbp - 0x10], 0	       804	dwarf2.c	FUNCTION_15	IF_3	IF_5	IF_6
0x4000a05	            0x740c	                            je 0x4000a13	       804	dwarf2.c	FUNCTION_15	IF_3	IF_5	IF_6
0x4000a07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       805	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_6
0x4000a0b	          0x4889c7	                            mov rdi, rax	       805	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_6
0x4000a0e	      0xe800000000	                          call 0x4000a13	       805	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_6
0x4000a13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x4000a17	          0x4889c7	                            mov rdi, rax	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x4000a1a	      0xe800000000	                          call 0x4000a1f	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x4000a1f	      0xb800000000	                              mov eax, 0	       809	dwarf2.c	FUNCTION_15	IF_3	IF_5
0x4000a24	      0xe99d000000	                           jmp 0x4000ac6	       809	dwarf2.c	FUNCTION_15	IF_3	IF_5
0x4000a29	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       811	dwarf2.c	FUNCTION_15	IF_3
0x4000a2d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       811	dwarf2.c	FUNCTION_15	IF_3
0x4000a31	        0x48895048	             mov qword [rax + 0x48], rdx	       811	dwarf2.c	FUNCTION_15	IF_3
0x4000a35	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a39	        0x488d7858	                   lea rdi, [rax + 0x58]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a3d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a41	        0x488d4850	                   lea rcx, [rax + 0x50]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a45	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       815	dwarf2.c	FUNCTION_15	IF_7
0x4000a49	        0x488b4010	            mov rax, qword [rax + 0x10] 	       815	dwarf2.c	FUNCTION_15	IF_7
0x4000a4d	    0x488db0f00000	                   lea rsi, [rax + 0xf0]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a54	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a58	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a5f	        0x488b4048	            mov rax, qword [rax + 0x48] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a63	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a67	          0x4989f9	                             mov r9, rdi	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a6a	          0x4989c8	                             mov r8, rcx	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a6d	          0x4889d1	                            mov rcx, rdx	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a70	      0xba00000000	                              mov edx, 0	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a75	          0x4889c7	                            mov rdi, rax	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a78	      0xe87ff7ffff	                   call sym.read_section	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a7d	            0x85c0	                           test eax, eax	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a7f	            0x7507	                           jne 0x4000a88	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4000a81	      0xb800000000	                              mov eax, 0	       820	dwarf2.c	FUNCTION_15	IF_7
0x4000a86	            0xeb3e	                           jmp 0x4000ac6	       820	dwarf2.c	FUNCTION_15	IF_7
0x4000a88	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       822	dwarf2.c	FUNCTION_15	IF_8
0x4000a8c	        0x488b4058	            mov rax, qword [rax + 0x58] 	       822	dwarf2.c	FUNCTION_15	IF_8
0x4000a90	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       822	dwarf2.c	FUNCTION_15	IF_8
0x4000a94	            0x7707	                            ja 0x4000a9d	       822	dwarf2.c	FUNCTION_15	IF_8
0x4000a96	      0xb800000000	                              mov eax, 0	       823	dwarf2.c	FUNCTION_15	IF_8
0x4000a9b	            0xeb29	                           jmp 0x4000ac6	       823	dwarf2.c	FUNCTION_15	IF_8
0x4000a9d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       824	dwarf2.c	FUNCTION_15
0x4000aa1	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       824	dwarf2.c	FUNCTION_15
0x4000aa5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       824	dwarf2.c	FUNCTION_15
0x4000aa9	          0x4801d0	                            add rax, rdx	       824	dwarf2.c	FUNCTION_15
0x4000aac	        0x488945f8	                mov qword [rbp - 8], rax	       824	dwarf2.c	FUNCTION_15
0x4000ab0	        0x488b45f8	                mov rax, qword [rbp - 8]	       825	dwarf2.c	FUNCTION_15	IF_9
0x4000ab4	           0xfb600	                   movzx eax, byte [rax]	       825	dwarf2.c	FUNCTION_15	IF_9
0x4000ab7	            0x84c0	                             test al, al	       825	dwarf2.c	FUNCTION_15	IF_9
0x4000ab9	            0x7507	                           jne 0x4000ac2	       825	dwarf2.c	FUNCTION_15	IF_9
0x4000abb	      0xb800000000	                              mov eax, 0	       826	dwarf2.c	FUNCTION_15	IF_9
0x4000ac0	            0xeb04	                           jmp 0x4000ac6	       826	dwarf2.c	FUNCTION_15	IF_9
0x4000ac2	        0x488b45f8	                mov rax, qword [rbp - 8]	       828	dwarf2.c	FUNCTION_15
0x4000ac6	              0xc9	                                   leave	       829	dwarf2.c	FUNCTION_15
0x4000ac7	              0xc3	                                     ret	       829	dwarf2.c	FUNCTION_15
save_section_vma	SWITCH,0:ELSE,1:CALL,1:IF,3:DO,0:WHILE,0:functions,0:FOR,1	67
0x400796e	              0x55	                                push rbp	      4254	dwarf2.c	FUNCTION_64
0x400796f	          0x4889e5	                            mov rbp, rsp	      4254	dwarf2.c	FUNCTION_64
0x4007972	        0x4883ec20	                           sub rsp, 0x20	      4254	dwarf2.c	FUNCTION_64
0x4007976	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4254	dwarf2.c	FUNCTION_64
0x400797a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4254	dwarf2.c	FUNCTION_64
0x400797e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4258	dwarf2.c	FUNCTION_64	IF_1
0x4007982	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4258	dwarf2.c	FUNCTION_64	IF_1
0x4007988	            0x85c0	                           test eax, eax	      4258	dwarf2.c	FUNCTION_64	IF_1
0x400798a	            0x750a	                           jne 0x4007996	      4258	dwarf2.c	FUNCTION_64	IF_1
0x400798c	      0xb801000000	                              mov eax, 1	      4259	dwarf2.c	FUNCTION_64	IF_1
0x4007991	      0xe9da000000	                           jmp 0x4007a70	      4259	dwarf2.c	FUNCTION_64	IF_1
0x4007996	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x400799a	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40079a0	            0x89c0	                            mov eax, eax	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40079a2	        0x48c1e003	                              shl rax, 3	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40079a6	          0x4889c7	                            mov rdi, rax	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40079a9	      0xe800000000	                          call 0x40079ae	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40079ae	          0x4889c2	                            mov rdx, rax	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40079b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40079b5	    0x488990d80000	             mov qword [rax + 0xd8], rdx	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40079bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4261	dwarf2.c	FUNCTION_64	IF_2
0x40079c0	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      4261	dwarf2.c	FUNCTION_64	IF_2
0x40079c7	          0x4885c0	                           test rax, rax	      4261	dwarf2.c	FUNCTION_64	IF_2
0x40079ca	            0x750a	                           jne 0x40079d6	      4261	dwarf2.c	FUNCTION_64	IF_2
0x40079cc	      0xb800000000	                              mov eax, 0	      4262	dwarf2.c	FUNCTION_64	IF_2
0x40079d1	      0xe99a000000	                           jmp 0x4007a70	      4262	dwarf2.c	FUNCTION_64	IF_2
0x40079d6	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40079dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40079e1	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40079e8	        0x488945f8	                mov qword [rbp - 8], rax	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40079ec	            0xeb6e	                           jmp 0x4007a5c	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40079ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x40079f2	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x40079f6	          0x4885c0	                           test rax, rax	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x40079f9	            0x7431	                            je 0x4007a2c	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x40079fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x40079ff	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a06	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a09	        0x48c1e203	                              shl rdx, 3	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a0d	          0x4801c2	                            add rdx, rax	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a10	        0x488b45f8	                mov rax, qword [rbp - 8]	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a14	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a18	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a20	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a24	          0x4801c8	                            add rax, rcx	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a27	          0x488902	                    mov qword [rdx], rax	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a2a	            0xeb20	                           jmp 0x4007a4c	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4007a2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4007a30	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4007a37	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4007a3a	        0x48c1e203	                              shl rdx, 3	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4007a3e	          0x4801c2	                            add rdx, rax	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4007a41	        0x488b45f8	                mov rax, qword [rbp - 8]	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4007a45	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4007a49	          0x488902	                    mov qword [rdx], rax	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4007a4c	        0x8345f401	                add dword [rbp - 0xc], 1	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4007a50	        0x488b45f8	                mov rax, qword [rbp - 8]	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4007a54	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4007a58	        0x488945f8	                mov qword [rbp - 8], rax	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4007a5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4007a60	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4007a66	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4007a69	            0x7783	                            ja 0x40079ee	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4007a6b	      0xb801000000	                              mov eax, 1	      4270	dwarf2.c	FUNCTION_64	ELSE_1
0x4007a70	              0xc9	                                   leave	      4271	dwarf2.c	FUNCTION_64	ELSE_1
0x4007a71	              0xc3	                                     ret	      4271	dwarf2.c	FUNCTION_64	ELSE_1
read_4_bytes	SWITCH,0:ELSE,0:CALL,1:IF,1:DO,0:WHILE,0:functions,0:FOR,0	20
0x40004a1	              0x55	                                push rbp	       611	dwarf2.c	FUNCTION_9
0x40004a2	          0x4889e5	                            mov rbp, rsp	       611	dwarf2.c	FUNCTION_9
0x40004a5	        0x4883ec20	                           sub rsp, 0x20	       611	dwarf2.c	FUNCTION_9
0x40004a9	        0x48897df8	                mov qword [rbp - 8], rdi	       611	dwarf2.c	FUNCTION_9
0x40004ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       611	dwarf2.c	FUNCTION_9
0x40004b1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       611	dwarf2.c	FUNCTION_9
0x40004b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40004b9	        0x4883c004	                              add rax, 4	       612	dwarf2.c	FUNCTION_9	IF_1
0x40004bd	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40004c1	            0x7607	                           jbe 0x40004ca	       612	dwarf2.c	FUNCTION_9	IF_1
0x40004c3	      0xb800000000	                              mov eax, 0	       613	dwarf2.c	FUNCTION_9	IF_1
0x40004c8	            0xeb15	                           jmp 0x40004df	       613	dwarf2.c	FUNCTION_9	IF_1
0x40004ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40004ce	        0x488b4008	                mov rax, qword [rax + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40004d2	        0x488b4038	            mov rax, qword [rax + 0x38] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40004d6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40004da	          0x4889d7	                            mov rdi, rdx	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40004dd	            0xffd0	                                call rax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40004df	              0xc9	                                   leave	       615	dwarf2.c	FUNCTION_9
0x40004e0	              0xc3	                                     ret	       615	dwarf2.c	FUNCTION_9
_bfd_dwarf2_find_inliner_info	SWITCH,0:ELSE,0:CALL,0:IF,2:DO,0:WHILE,0:functions,0:FOR,0	44
0x4008c2b	              0x55	                                push rbp	      4862	dwarf2.c	FUNCTION_69
0x4008c2c	          0x4889e5	                            mov rbp, rsp	      4862	dwarf2.c	FUNCTION_69
0x4008c2f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4862	dwarf2.c	FUNCTION_69
0x4008c33	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4862	dwarf2.c	FUNCTION_69
0x4008c37	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4862	dwarf2.c	FUNCTION_69
0x4008c3b	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      4862	dwarf2.c	FUNCTION_69
0x4008c3f	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      4862	dwarf2.c	FUNCTION_69
0x4008c43	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4865	dwarf2.c	FUNCTION_69
0x4008c47	          0x488b00	                    mov rax, qword [rax]	      4865	dwarf2.c	FUNCTION_69
0x4008c4a	        0x488945f0	             mov qword [rbp - 0x10], rax	      4865	dwarf2.c	FUNCTION_69
0x4008c4e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4866	dwarf2.c	FUNCTION_69	IF_1
0x4008c53	            0x746e	                            je 0x4008cc3	      4866	dwarf2.c	FUNCTION_69	IF_1
0x4008c55	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4868	dwarf2.c	FUNCTION_69	IF_1
0x4008c59	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      4868	dwarf2.c	FUNCTION_69	IF_1
0x4008c60	        0x488945f8	                mov qword [rbp - 8], rax	      4868	dwarf2.c	FUNCTION_69	IF_1
0x4008c64	      0x48837df800	                  cmp qword [rbp - 8], 0	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c69	            0x7458	                            je 0x4008cc3	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c6b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c6f	        0x488b4008	                mov rax, qword [rax + 8]	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c73	          0x4885c0	                           test rax, rax	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c76	            0x744b	                            je 0x4008cc3	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c78	        0x488b45f8	                mov rax, qword [rbp - 8]	      4872	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c7c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4872	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c80	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4872	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c84	          0x488910	                    mov qword [rax], rdx	      4872	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c87	        0x488b45f8	                mov rax, qword [rbp - 8]	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c8b	        0x488b4008	                mov rax, qword [rax + 8]	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c8f	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c93	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c97	          0x488910	                    mov qword [rax], rdx	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c9a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008c9e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008ca1	            0x89c2	                            mov edx, eax	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008ca3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008ca7	            0x8910	                    mov dword [rax], edx	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008ca9	        0x488b45f8	                mov rax, qword [rbp - 8]	      4875	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008cad	        0x488b5008	                mov rdx, qword [rax + 8]	      4875	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008cb1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4875	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008cb5	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      4875	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008cbc	      0xb801000000	                              mov eax, 1	      4876	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008cc1	            0xeb05	                           jmp 0x4008cc8	      4876	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4008cc3	      0xb800000000	                              mov eax, 0	      4880	dwarf2.c	FUNCTION_69
0x4008cc8	              0x5d	                                 pop rbp	      4881	dwarf2.c	FUNCTION_69
0x4008cc9	              0xc3	                                     ret	      4881	dwarf2.c	FUNCTION_69
info_hash_lookup_varinfo	SWITCH,0:ELSE,0:CALL,3:IF,1:DO,0:WHILE,0:functions,0:FOR,1	58
0x4007494	              0x55	                                push rbp	      4087	dwarf2.c	FUNCTION_59
0x4007495	          0x4889e5	                            mov rbp, rsp	      4087	dwarf2.c	FUNCTION_59
0x4007498	        0x4883ec50	                           sub rsp, 0x50	      4087	dwarf2.c	FUNCTION_59
0x400749c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4087	dwarf2.c	FUNCTION_59
0x40074a0	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4087	dwarf2.c	FUNCTION_59
0x40074a4	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4087	dwarf2.c	FUNCTION_59
0x40074a8	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      4087	dwarf2.c	FUNCTION_59
0x40074ac	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      4087	dwarf2.c	FUNCTION_59
0x40074b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4088	dwarf2.c	FUNCTION_59	CALL_1
0x40074b4	        0x488b4008	                mov rax, qword [rax + 8]	      4088	dwarf2.c	FUNCTION_59	CALL_1
0x40074b8	        0x488945e8	             mov qword [rbp - 0x18], rax	      4088	dwarf2.c	FUNCTION_59	CALL_1
0x40074bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4089	dwarf2.c	FUNCTION_59	CALL_2
0x40074c0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4089	dwarf2.c	FUNCTION_59	CALL_2
0x40074c4	        0x488945f0	             mov qword [rbp - 0x10], rax	      4089	dwarf2.c	FUNCTION_59	CALL_2
0x40074c8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40074cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40074d0	          0x4889d6	                            mov rsi, rdx	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40074d3	          0x4889c7	                            mov rdi, rax	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40074d6	      0xe8db8cffff	         call sym.lookup_info_hash_table	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40074db	        0x488945e0	             mov qword [rbp - 0x20], rax	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40074df	            0xeb71	                           jmp 0x4007552	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40074e1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4097	dwarf2.c	FUNCTION_59	FOR_1
0x40074e5	        0x488b4008	                mov rax, qword [rax + 8]	      4097	dwarf2.c	FUNCTION_59	FOR_1
0x40074e9	        0x488945f8	                mov qword [rbp - 8], rax	      4097	dwarf2.c	FUNCTION_59	FOR_1
0x40074ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      4098	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40074f1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4098	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40074f5	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      4098	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40074f9	            0x754c	                           jne 0x4007547	      4098	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40074fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40074ff	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007503	          0x4885c0	                           test rax, rax	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007506	            0x740e	                            je 0x4007516	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007508	        0x488b45f8	                mov rax, qword [rbp - 8]	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400750c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007510	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007514	            0x7531	                           jne 0x4007547	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007516	        0x488b45f8	                mov rax, qword [rbp - 8]	      4101	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400751a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4101	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400751e	        0x48895028	             mov qword [rax + 0x28], rdx	      4101	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007522	        0x488b45f8	                mov rax, qword [rbp - 8]	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007526	        0x488b5008	                mov rdx, qword [rax + 8]	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400752a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400752e	          0x488910	                    mov qword [rax], rdx	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007531	        0x488b45f8	                mov rax, qword [rbp - 8]	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007535	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007538	            0x89c2	                            mov edx, eax	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400753a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400753e	            0x8910	                    mov dword [rax], edx	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007540	      0xb801000000	                              mov eax, 1	      4104	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007545	            0xeb17	                           jmp 0x400755e	      4104	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4007547	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4095	dwarf2.c	FUNCTION_59	FOR_1
0x400754b	          0x488b00	                    mov rax, qword [rax]	      4095	dwarf2.c	FUNCTION_59	FOR_1
0x400754e	        0x488945e0	             mov qword [rbp - 0x20], rax	      4095	dwarf2.c	FUNCTION_59	FOR_1
0x4007552	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4007557	            0x7588	                           jne 0x40074e1	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4007559	      0xb800000000	                              mov eax, 0	      4108	dwarf2.c	FUNCTION_59
0x400755e	              0xc9	                                   leave	      4109	dwarf2.c	FUNCTION_59
0x400755f	              0xc3	                                     ret	      4109	dwarf2.c	FUNCTION_59
line_info_add_include_dir_stub	SWITCH,0:ELSE,0:CALL,1:IF,0:DO,0:WHILE,0:functions,0:FOR,0	15
0x40029d7	              0x55	                                push rbp	      1850	dwarf2.c	FUNCTION_32
0x40029d8	          0x4889e5	                            mov rbp, rsp	      1850	dwarf2.c	FUNCTION_32
0x40029db	        0x4883ec20	                           sub rsp, 0x20	      1850	dwarf2.c	FUNCTION_32
0x40029df	        0x48897df8	                mov qword [rbp - 8], rdi	      1850	dwarf2.c	FUNCTION_32
0x40029e3	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1850	dwarf2.c	FUNCTION_32
0x40029e7	          0x8955ec	             mov dword [rbp - 0x14], edx	      1850	dwarf2.c	FUNCTION_32
0x40029ea	          0x894de8	             mov dword [rbp - 0x18], ecx	      1850	dwarf2.c	FUNCTION_32
0x40029ed	        0x448945e4	             mov dword [rbp - 0x1c], r8d	      1850	dwarf2.c	FUNCTION_32
0x40029f1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1851	dwarf2.c	FUNCTION_32	CALL_1
0x40029f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1851	dwarf2.c	FUNCTION_32	CALL_1
0x40029f9	          0x4889d6	                            mov rsi, rdx	      1851	dwarf2.c	FUNCTION_32	CALL_1
0x40029fc	          0x4889c7	                            mov rdi, rax	      1851	dwarf2.c	FUNCTION_32	CALL_1
0x40029ff	      0xe824ffffff	      call sym.line_info_add_include_dir	      1851	dwarf2.c	FUNCTION_32	CALL_1
0x4002a04	              0xc9	                                   leave	      1852	dwarf2.c	FUNCTION_32
0x4002a05	              0xc3	                                     ret	      1852	dwarf2.c	FUNCTION_32
compare_lookup_funcinfos	SWITCH,0:ELSE,0:CALL,0:IF,4:DO,0:WHILE,0:functions,0:FOR,0	43
0x40047ec	              0x55	                                push rbp	      2547	dwarf2.c	FUNCTION_38
0x40047ed	          0x4889e5	                            mov rbp, rsp	      2547	dwarf2.c	FUNCTION_38
0x40047f0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2547	dwarf2.c	FUNCTION_38
0x40047f4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2547	dwarf2.c	FUNCTION_38
0x40047f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2548	dwarf2.c	FUNCTION_38
0x40047fc	        0x488945f0	             mov qword [rbp - 0x10], rax	      2548	dwarf2.c	FUNCTION_38
0x4004800	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2549	dwarf2.c	FUNCTION_38
0x4004804	        0x488945f8	                mov qword [rbp - 8], rax	      2549	dwarf2.c	FUNCTION_38
0x4004808	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2551	dwarf2.c	FUNCTION_38	IF_1
0x400480c	        0x488b5008	                mov rdx, qword [rax + 8]	      2551	dwarf2.c	FUNCTION_38	IF_1
0x4004810	        0x488b45f8	                mov rax, qword [rbp - 8]	      2551	dwarf2.c	FUNCTION_38	IF_1
0x4004814	        0x488b4008	                mov rax, qword [rax + 8]	      2551	dwarf2.c	FUNCTION_38	IF_1
0x4004818	          0x4839c2	                            cmp rdx, rax	      2551	dwarf2.c	FUNCTION_38	IF_1
0x400481b	            0x7307	                           jae 0x4004824	      2551	dwarf2.c	FUNCTION_38	IF_1
0x400481d	      0xb8ffffffff	                     mov eax, 0xffffffff	      2552	dwarf2.c	FUNCTION_38	IF_1
0x4004822	            0xeb59	                           jmp 0x400487d	      2552	dwarf2.c	FUNCTION_38	IF_1
0x4004824	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2553	dwarf2.c	FUNCTION_38	IF_2
0x4004828	        0x488b5008	                mov rdx, qword [rax + 8]	      2553	dwarf2.c	FUNCTION_38	IF_2
0x400482c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2553	dwarf2.c	FUNCTION_38	IF_2
0x4004830	        0x488b4008	                mov rax, qword [rax + 8]	      2553	dwarf2.c	FUNCTION_38	IF_2
0x4004834	          0x4839c2	                            cmp rdx, rax	      2553	dwarf2.c	FUNCTION_38	IF_2
0x4004837	            0x7607	                           jbe 0x4004840	      2553	dwarf2.c	FUNCTION_38	IF_2
0x4004839	      0xb801000000	                              mov eax, 1	      2554	dwarf2.c	FUNCTION_38	IF_2
0x400483e	            0xeb3d	                           jmp 0x400487d	      2554	dwarf2.c	FUNCTION_38	IF_2
0x4004840	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2555	dwarf2.c	FUNCTION_38	IF_3
0x4004844	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2555	dwarf2.c	FUNCTION_38	IF_3
0x4004848	        0x488b45f8	                mov rax, qword [rbp - 8]	      2555	dwarf2.c	FUNCTION_38	IF_3
0x400484c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2555	dwarf2.c	FUNCTION_38	IF_3
0x4004850	          0x4839c2	                            cmp rdx, rax	      2555	dwarf2.c	FUNCTION_38	IF_3
0x4004853	            0x7307	                           jae 0x400485c	      2555	dwarf2.c	FUNCTION_38	IF_3
0x4004855	      0xb8ffffffff	                     mov eax, 0xffffffff	      2556	dwarf2.c	FUNCTION_38	IF_3
0x400485a	            0xeb21	                           jmp 0x400487d	      2556	dwarf2.c	FUNCTION_38	IF_3
0x400485c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2557	dwarf2.c	FUNCTION_38	IF_4
0x4004860	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2557	dwarf2.c	FUNCTION_38	IF_4
0x4004864	        0x488b45f8	                mov rax, qword [rbp - 8]	      2557	dwarf2.c	FUNCTION_38	IF_4
0x4004868	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2557	dwarf2.c	FUNCTION_38	IF_4
0x400486c	          0x4839c2	                            cmp rdx, rax	      2557	dwarf2.c	FUNCTION_38	IF_4
0x400486f	            0x7607	                           jbe 0x4004878	      2557	dwarf2.c	FUNCTION_38	IF_4
0x4004871	      0xb801000000	                              mov eax, 1	      2558	dwarf2.c	FUNCTION_38	IF_4
0x4004876	            0xeb05	                           jmp 0x400487d	      2558	dwarf2.c	FUNCTION_38	IF_4
0x4004878	      0xb800000000	                              mov eax, 0	      2560	dwarf2.c	FUNCTION_38
0x400487d	              0x5d	                                 pop rbp	      2561	dwarf2.c	FUNCTION_38
0x400487e	              0xc3	                                     ret	      2561	dwarf2.c	FUNCTION_38
stash_verify_info_hash_table	SWITCH,0:ELSE,0:CALL,6:IF,2:DO,0:WHILE,2:functions,0:FOR,3	121
0x400762b	              0x55	                                push rbp	      4148	dwarf2.c	FUNCTION_61
0x400762c	          0x4889e5	                            mov rbp, rsp	      4148	dwarf2.c	FUNCTION_61
0x400762f	        0x4883ec40	                           sub rsp, 0x40	      4148	dwarf2.c	FUNCTION_61
0x4007633	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4148	dwarf2.c	FUNCTION_61
0x4007637	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4155	dwarf2.c	FUNCTION_61	FOR_1
0x400763b	          0x488b00	                    mov rax, qword [rax]	      4155	dwarf2.c	FUNCTION_61	FOR_1
0x400763e	        0x488945e0	             mov qword [rbp - 0x20], rax	      4155	dwarf2.c	FUNCTION_61	FOR_1
0x4007642	      0xe9b1010000	                           jmp 0x40077f8	      4155	dwarf2.c	FUNCTION_61	FOR_1
0x4007647	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4159	dwarf2.c	FUNCTION_61	FOR_1	FOR_2
0x400764b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      4159	dwarf2.c	FUNCTION_61	FOR_1	FOR_2
0x4007652	        0x488945e8	             mov qword [rbp - 0x18], rax	      4159	dwarf2.c	FUNCTION_61	FOR_1	FOR_2
0x4007656	      0xe9a2000000	                           jmp 0x40076fd	      4159	dwarf2.c	FUNCTION_61	FOR_1	FOR_2
0x400765b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4163	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400765f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4163	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4007663	          0x4885c0	                           test rax, rax	      4163	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4007666	     0xf8485000000	                            je 0x40076f1	      4163	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400766c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4165	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_1
0x4007670	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4165	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_1
0x4007674	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4165	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_1
0x4007678	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4165	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_1
0x400767f	          0x4889d6	                            mov rsi, rdx	      4165	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_1
0x4007682	          0x4889c7	                            mov rdi, rax	      4165	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_1
0x4007685	      0xe82c8bffff	         call sym.lookup_info_hash_table	      4165	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_1
0x400768a	        0x488945f8	                mov qword [rbp - 8], rax	      4165	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_1
0x400768e	      0x48837df800	                  cmp qword [rbp - 8], 0	      4167	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_2
0x4007693	            0x750f	                           jne 0x40076a4	      4167	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_2
0x4007695	      0xbe47100000	                         mov esi, 0x1047	      4167	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_2
0x400769a	      0xbf00000000	                              mov edi, 0	      4167	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_2
0x400769f	      0xe800000000	                          call 0x40076a4	      4167	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_2
0x40076a4	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4168	dwarf2.c	FUNCTION_61	FOR_1	FOR_2
0x40076ab	            0xeb20	                           jmp 0x40076cd	      4169	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      4171	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076b1	        0x488b4008	                mov rax, qword [rax + 8]	      4171	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076b5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4171	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076b9	           0xf94c0	                                 sete al	      4171	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076bc	           0xfb6c0	                           movzx eax, al	      4171	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076bf	          0x8945dc	             mov dword [rbp - 0x24], eax	      4171	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4172	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076c6	          0x488b00	                    mov rax, qword [rax]	      4172	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076c9	        0x488945f8	                mov qword [rbp - 8], rax	      4172	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076cd	      0x48837df800	                  cmp qword [rbp - 8], 0	      4169	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076d2	            0x7406	                            je 0x40076da	      4169	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076d4	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4169	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076d8	            0x74d3	                            je 0x40076ad	      4169	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	WHILE_1
0x40076da	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4174	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_3
0x40076de	            0x7512	                           jne 0x40076f2	      4174	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_3
0x40076e0	      0xbe4e100000	                         mov esi, 0x104e	      4174	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_3
0x40076e5	      0xbf00000000	                              mov edi, 0	      4174	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_3
0x40076ea	      0xe800000000	                          call 0x40076ef	      4174	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_3
0x40076ef	            0xeb01	                           jmp 0x40076f2	      4174	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	CALL_3
0x40076f1	              0x90	                                     nop	      4164	dwarf2.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x40076f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4161	dwarf2.c	FUNCTION_61	FOR_1	FOR_2
0x40076f6	          0x488b00	                    mov rax, qword [rax]	      4161	dwarf2.c	FUNCTION_61	FOR_1	FOR_2
0x40076f9	        0x488945e8	             mov qword [rbp - 0x18], rax	      4161	dwarf2.c	FUNCTION_61	FOR_1	FOR_2
0x40076fd	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4159	dwarf2.c	FUNCTION_61	FOR_1	FOR_2
0x4007702	     0xf8553ffffff	                           jne 0x400765b	      4159	dwarf2.c	FUNCTION_61	FOR_1	FOR_2
0x4007708	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4177	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x400770c	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4177	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x4007713	        0x488945f0	             mov qword [rbp - 0x10], rax	      4177	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x4007717	      0xe9c6000000	                           jmp 0x40077e2	      4177	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x400771c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x4007720	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x4007724	          0x4885c0	                           test rax, rax	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x4007727	     0xf84a9000000	                            je 0x40077d6	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x400772d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x4007731	        0x488b4008	                mov rax, qword [rax + 8]	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x4007735	          0x4885c0	                           test rax, rax	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x4007738	     0xf8498000000	                            je 0x40077d6	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x400773e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x4007742	         0xfb64030	           movzx eax, byte [rax + 0x30] 	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x4007746	          0x83e001	                              and eax, 1	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x4007749	            0x84c0	                             test al, al	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x400774b	     0xf8585000000	                           jne 0x40077d6	      4181	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x4007751	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4184	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x4007755	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4184	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x4007759	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4183	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_4
0x400775d	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      4183	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_4
0x4007764	          0x4889d6	                            mov rsi, rdx	      4183	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_4
0x4007767	          0x4889c7	                            mov rdi, rax	      4183	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_4
0x400776a	      0xe8478affff	         call sym.lookup_info_hash_table	      4183	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_4
0x400776f	        0x488945f8	                mov qword [rbp - 8], rax	      4183	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_4
0x4007773	      0x48837df800	                  cmp qword [rbp - 8], 0	      4185	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_5
0x4007778	            0x750f	                           jne 0x4007789	      4185	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_5
0x400777a	      0xbe59100000	                         mov esi, 0x1059	      4185	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_5
0x400777f	      0xbf00000000	                              mov edi, 0	      4185	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_5
0x4007784	      0xe800000000	                          call 0x4007789	      4185	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_5
0x4007789	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4186	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x4007790	            0xeb20	                           jmp 0x40077b2	      4187	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x4007792	        0x488b45f8	                mov rax, qword [rbp - 8]	      4189	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x4007796	        0x488b4008	                mov rax, qword [rax + 8]	      4189	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x400779a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4189	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x400779e	           0xf94c0	                                 sete al	      4189	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x40077a1	           0xfb6c0	                           movzx eax, al	      4189	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x40077a4	          0x8945dc	             mov dword [rbp - 0x24], eax	      4189	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x40077a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4190	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x40077ab	          0x488b00	                    mov rax, qword [rax]	      4190	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x40077ae	        0x488945f8	                mov qword [rbp - 8], rax	      4190	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x40077b2	      0x48837df800	                  cmp qword [rbp - 8], 0	      4187	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x40077b7	            0x7406	                            je 0x40077bf	      4187	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x40077b9	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4187	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x40077bd	            0x74d3	                            je 0x4007792	      4187	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	WHILE_2
0x40077bf	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4192	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_6
0x40077c3	            0x7512	                           jne 0x40077d7	      4192	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_6
0x40077c5	      0xbe60100000	                         mov esi, 0x1060	      4192	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_6
0x40077ca	      0xbf00000000	                              mov edi, 0	      4192	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_6
0x40077cf	      0xe800000000	                          call 0x40077d4	      4192	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_6
0x40077d4	            0xeb01	                           jmp 0x40077d7	      4192	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	CALL_6
0x40077d6	              0x90	                                     nop	      4182	dwarf2.c	FUNCTION_61	FOR_1	FOR_3	IF_2
0x40077d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4179	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x40077db	          0x488b00	                    mov rax, qword [rax]	      4179	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x40077de	        0x488945f0	             mov qword [rbp - 0x10], rax	      4179	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x40077e2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4177	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x40077e7	     0xf852fffffff	                           jne 0x400771c	      4177	dwarf2.c	FUNCTION_61	FOR_1	FOR_3
0x40077ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4157	dwarf2.c	FUNCTION_61	FOR_1
0x40077f1	          0x488b00	                    mov rax, qword [rax]	      4157	dwarf2.c	FUNCTION_61	FOR_1
0x40077f4	        0x488945e0	             mov qword [rbp - 0x20], rax	      4157	dwarf2.c	FUNCTION_61	FOR_1
0x40077f8	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4155	dwarf2.c	FUNCTION_61	FOR_1
0x40077fd	     0xf8544feffff	                           jne 0x4007647	      4155	dwarf2.c	FUNCTION_61	FOR_1
0x4007803	              0x90	                                     nop	      4195	dwarf2.c	FUNCTION_61
0x4007804	              0xc9	                                   leave	      4195	dwarf2.c	FUNCTION_61
0x4007805	              0xc3	                                     ret	      4195	dwarf2.c	FUNCTION_61
lookup_abbrev	SWITCH,0:ELSE,1:CALL,0:IF,1:DO,0:WHILE,1:functions,0:FOR,0	38
0x4000d92	              0x55	                                push rbp	       920	dwarf2.c	FUNCTION_18
0x4000d93	          0x4889e5	                            mov rbp, rsp	       920	dwarf2.c	FUNCTION_18
0x4000d96	          0x897dec	             mov dword [rbp - 0x14], edi	       920	dwarf2.c	FUNCTION_18
0x4000d99	        0x488975e0	             mov qword [rbp - 0x20], rsi	       920	dwarf2.c	FUNCTION_18
0x4000d9d	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       924	dwarf2.c	FUNCTION_18
0x4000da0	      0xbabf56cf0e	                      mov edx, 0xecf56bf	       924	dwarf2.c	FUNCTION_18
0x4000da5	            0x89c8	                            mov eax, ecx	       924	dwarf2.c	FUNCTION_18
0x4000da7	            0xf7e2	                                 mul edx	       924	dwarf2.c	FUNCTION_18
0x4000da9	            0x89c8	                            mov eax, ecx	       924	dwarf2.c	FUNCTION_18
0x4000dab	            0x29d0	                            sub eax, edx	       924	dwarf2.c	FUNCTION_18
0x4000dad	            0xd1e8	                              shr eax, 1	       924	dwarf2.c	FUNCTION_18
0x4000daf	             0x1d0	                            add eax, edx	       924	dwarf2.c	FUNCTION_18
0x4000db1	          0xc1e806	                              shr eax, 6	       924	dwarf2.c	FUNCTION_18
0x4000db4	          0x6bc079	                     imul eax, eax, 0x79	       924	dwarf2.c	FUNCTION_18
0x4000db7	            0x29c1	                            sub ecx, eax	       924	dwarf2.c	FUNCTION_18
0x4000db9	            0x89c8	                            mov eax, ecx	       924	dwarf2.c	FUNCTION_18
0x4000dbb	          0x8945f4	              mov dword [rbp - 0xc], eax	       924	dwarf2.c	FUNCTION_18
0x4000dbe	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       925	dwarf2.c	FUNCTION_18
0x4000dc1	    0x488d14c50000	                        lea rdx, [rax*8]	       925	dwarf2.c	FUNCTION_18
0x4000dc9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       925	dwarf2.c	FUNCTION_18
0x4000dcd	          0x4801d0	                            add rax, rdx	       925	dwarf2.c	FUNCTION_18
0x4000dd0	          0x488b00	                    mov rax, qword [rax]	       925	dwarf2.c	FUNCTION_18
0x4000dd3	        0x488945f8	                mov qword [rbp - 8], rax	       925	dwarf2.c	FUNCTION_18
0x4000dd7	            0xeb1d	                           jmp 0x4000df6	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4000dd9	        0x488b45f8	                mov rax, qword [rbp - 8]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4000ddd	            0x8b00	                    mov eax, dword [rax]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4000ddf	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4000de2	            0x7506	                           jne 0x4000dea	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4000de4	        0x488b45f8	                mov rax, qword [rbp - 8]	       930	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4000de8	            0xeb18	                           jmp 0x4000e02	       930	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4000dea	        0x488b45f8	                mov rax, qword [rbp - 8]	       932	dwarf2.c	FUNCTION_18	WHILE_1	ELSE_1
0x4000dee	        0x488b4018	            mov rax, qword [rax + 0x18] 	       932	dwarf2.c	FUNCTION_18	WHILE_1	ELSE_1
0x4000df2	        0x488945f8	                mov qword [rbp - 8], rax	       932	dwarf2.c	FUNCTION_18	WHILE_1	ELSE_1
0x4000df6	      0x48837df800	                  cmp qword [rbp - 8], 0	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4000dfb	            0x75dc	                           jne 0x4000dd9	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4000dfd	      0xb800000000	                              mov eax, 0	       935	dwarf2.c	FUNCTION_18	ELSE_1
0x4000e02	              0x5d	                                 pop rbp	       936	dwarf2.c	FUNCTION_18	ELSE_1
0x4000e03	              0xc3	                                     ret	       936	dwarf2.c	FUNCTION_18	ELSE_1
find_abstract_instance	SWITCH,1:ELSE,4:CALL,24:IF,18:DO,0:WHILE,0:functions,0:FOR,3	343
0x4004f8c	              0x55	                                push rbp	      2806	dwarf2.c	FUNCTION_43
0x4004f8d	          0x4889e5	                            mov rbp, rsp	      2806	dwarf2.c	FUNCTION_43
0x4004f90	    0x4881ecc00000	                           sub rsp, 0xc0	      2806	dwarf2.c	FUNCTION_43
0x4004f97	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      2806	dwarf2.c	FUNCTION_43
0x4004f9e	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      2806	dwarf2.c	FUNCTION_43
0x4004fa5	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      2806	dwarf2.c	FUNCTION_43
0x4004fac	    0x48898d60ffff	             mov qword [rbp - 0xa0], rcx	      2806	dwarf2.c	FUNCTION_43
0x4004fb3	    0x4c898558ffff	              mov qword [rbp - 0xa8], r8	      2806	dwarf2.c	FUNCTION_43
0x4004fba	    0x4c898d50ffff	              mov qword [rbp - 0xb0], r9	      2806	dwarf2.c	FUNCTION_43
0x4004fc1	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2806	dwarf2.c	FUNCTION_43
0x4004fc5	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2806	dwarf2.c	FUNCTION_43
0x4004fcc	    0x64488b042528	                mov rax, qword fs:[0x28]	      2806	dwarf2.c	FUNCTION_43
0x4004fd5	        0x488945f8	                mov qword [rbp - 8], rax	      2806	dwarf2.c	FUNCTION_43
0x4004fd9	            0x31c0	                            xor eax, eax	      2806	dwarf2.c	FUNCTION_43
0x4004fdb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2807	dwarf2.c	FUNCTION_43
0x4004fe2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2807	dwarf2.c	FUNCTION_43
0x4004fe6	        0x488945b8	             mov qword [rbp - 0x48], rax	      2807	dwarf2.c	FUNCTION_43
0x4004fea	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2812	dwarf2.c	FUNCTION_43
0x4004ff1	        0x488b4008	                mov rax, qword [rax + 8]	      2812	dwarf2.c	FUNCTION_43
0x4004ff5	        0x488945c0	             mov qword [rbp - 0x40], rax	      2812	dwarf2.c	FUNCTION_43
0x4004ff9	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      2814	dwarf2.c	FUNCTION_43
0x4005001	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2818	dwarf2.c	FUNCTION_43	IF_1
0x4005008	          0x8b4004	                mov eax, dword [rax + 4]	      2818	dwarf2.c	FUNCTION_43	IF_1
0x400500b	          0x83f810	                           cmp eax, 0x10	      2818	dwarf2.c	FUNCTION_43	IF_1
0x400500e	     0xf8572010000	                           jne 0x4005186	      2818	dwarf2.c	FUNCTION_43	IF_1
0x4005014	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2837	dwarf2.c	FUNCTION_43	IF_1
0x400501b	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2837	dwarf2.c	FUNCTION_43	IF_1
0x4005022	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2837	dwarf2.c	FUNCTION_43	IF_1
0x4005026	        0x48894598	             mov qword [rbp - 0x68], rax	      2837	dwarf2.c	FUNCTION_43	IF_1
0x400502a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2838	dwarf2.c	FUNCTION_43	IF_1
0x4005031	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2838	dwarf2.c	FUNCTION_43	IF_1
0x4005038	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2838	dwarf2.c	FUNCTION_43	IF_1
0x400503c	        0x488945a0	             mov qword [rbp - 0x60], rax	      2838	dwarf2.c	FUNCTION_43	IF_1
0x4005040	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2839	dwarf2.c	FUNCTION_43	IF_1
0x4005044	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2839	dwarf2.c	FUNCTION_43	IF_1
0x4005048	          0x4829c2	                            sub rdx, rax	      2839	dwarf2.c	FUNCTION_43	IF_1
0x400504b	          0x4889d0	                            mov rax, rdx	      2839	dwarf2.c	FUNCTION_43	IF_1
0x400504e	        0x488945c8	             mov qword [rbp - 0x38], rax	      2839	dwarf2.c	FUNCTION_43	IF_1
0x4005052	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4005057	            0x740a	                            je 0x4005063	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4005059	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x400505d	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4005061	            0x7230	                            jb 0x4005093	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4005063	      0xbe00000000	                              mov esi, 0	      2843	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4005068	      0xbf00000000	                              mov edi, 0	      2843	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x400506d	      0xe800000000	                          call 0x4005072	      2843	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4005072	          0x4889c7	                            mov rdi, rax	      2842	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4005075	      0xb800000000	                              mov eax, 0	      2842	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x400507a	      0xe800000000	                          call 0x400507f	      2842	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x400507f	      0xbf11000000	                           mov edi, 0x11	      2844	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_3
0x4005084	      0xe800000000	                          call 0x4005089	      2844	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_3
0x4005089	      0xb800000000	                              mov eax, 0	      2845	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x400508e	      0xe994040000	                           jmp 0x4005527	      2845	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4005093	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2847	dwarf2.c	FUNCTION_43	IF_1
0x4005097	        0x48014598	            add qword [rbp - 0x68], rax 	      2847	dwarf2.c	FUNCTION_43	IF_1
0x400509b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050a2	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050a6	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050aa	            0x7725	                            ja 0x40050d1	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050ac	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050b3	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050b7	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050bb	            0x7614	                           jbe 0x40050d1	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050bd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2851	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050c4	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2851	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050c8	        0x488945a0	             mov qword [rbp - 0x60], rax	      2851	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050cc	      0xe9cb010000	                           jmp 0x400529c	      2851	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x40050d1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x40050d8	        0x488b4008	                mov rax, qword [rax + 8]	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x40050dc	        0x488945b0	             mov qword [rbp - 0x50], rax	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x40050e0	            0xeb28	                           jmp 0x400510a	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x40050e2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x40050e6	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x40050ea	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x40050ee	            0x770e	                            ja 0x40050fe	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x40050f0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x40050f4	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x40050f8	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x40050fc	            0x7715	                            ja 0x4005113	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x40050fe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4005102	        0x488b4008	                mov rax, qword [rax + 8]	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4005106	        0x488945b0	             mov qword [rbp - 0x50], rax	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x400510a	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x400510f	            0x75d1	                           jne 0x40050e2	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4005111	            0xeb01	                           jmp 0x4005114	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4005113	              0x90	                                     nop	      2859	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x4005114	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2861	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5
0x4005119	            0x7541	                           jne 0x400515c	      2861	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5
0x400511b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4005122	          0x488b00	                    mov rax, qword [rax]	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4005125	        0x488945b0	             mov qword [rbp - 0x50], rax	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4005129	            0xeb27	                           jmp 0x4005152	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x400512b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x400512f	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x4005133	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x4005137	            0x770e	                            ja 0x4005147	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x4005139	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x400513d	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x4005141	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x4005145	            0x7714	                            ja 0x400515b	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x4005147	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x400514b	          0x488b00	                    mov rax, qword [rax]	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x400514e	        0x488945b0	             mov qword [rbp - 0x50], rax	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4005152	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4005157	            0x75d2	                           jne 0x400512b	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4005159	            0xeb01	                           jmp 0x400515c	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x400515b	              0x90	                                     nop	      2864	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x400515c	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2866	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4005161	     0xf8435010000	                            je 0x400529c	      2866	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4005167	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2868	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x400516b	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2868	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4005172	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2869	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4005179	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2869	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x400517d	        0x488945a0	             mov qword [rbp - 0x60], rax	      2869	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4005181	      0xe916010000	                           jmp 0x400529c	      2869	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4005186	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2874	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x400518d	          0x8b4004	                mov eax, dword [rax + 4]	      2874	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4005190	      0x3d201f0000	                         cmp eax, 0x1f20	      2874	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4005195	     0xf8588000000	                           jne 0x4005223	      2874	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x400519b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2876	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	CALL_4
0x400519f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2876	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	CALL_4
0x40051a6	          0x4889d6	                            mov rsi, rdx	      2876	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	CALL_4
0x40051a9	          0x4889c7	                            mov rdi, rax	      2876	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	CALL_4
0x40051ac	      0xe817b9ffff	          call sym.read_alt_indirect_ref	      2876	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	CALL_4
0x40051b1	        0x48894598	             mov qword [rbp - 0x68], rax	      2876	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	CALL_4
0x40051b5	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2877	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9
0x40051ba	            0x753a	                           jne 0x40051f6	      2877	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9
0x40051bc	      0xbe00000000	                              mov esi, 0	      2880	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_6
0x40051c1	      0xbf00000000	                              mov edi, 0	      2880	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_6
0x40051c6	      0xe800000000	                          call 0x40051cb	      2880	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_6
0x40051cb	          0x4889c2	                            mov rdx, rax	      2880	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_6
0x40051ce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2879	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_5
0x40051d2	          0x4889c6	                            mov rsi, rax	      2879	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_5
0x40051d5	          0x4889d7	                            mov rdi, rdx	      2879	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_5
0x40051d8	      0xb800000000	                              mov eax, 0	      2879	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_5
0x40051dd	      0xe800000000	                          call 0x40051e2	      2879	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_5
0x40051e2	      0xbf11000000	                           mov edi, 0x11	      2882	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_7
0x40051e7	      0xe800000000	                          call 0x40051ec	      2882	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_7
0x40051ec	      0xb800000000	                              mov eax, 0	      2883	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9
0x40051f1	      0xe931030000	                           jmp 0x4005527	      2883	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9
0x40051f6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2885	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x40051fd	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2885	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4005204	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2885	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4005208	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2886	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x400520f	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2886	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4005216	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2886	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x400521a	          0x4801d0	                            add rax, rdx	      2885	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x400521d	        0x488945a0	             mov qword [rbp - 0x60], rax	      2885	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4005221	            0xeb79	                           jmp 0x400529c	      2885	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4005223	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2898	dwarf2.c	FUNCTION_43	ELSE_3
0x400522a	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2898	dwarf2.c	FUNCTION_43	ELSE_3
0x400522e	        0x48894598	             mov qword [rbp - 0x68], rax	      2898	dwarf2.c	FUNCTION_43	ELSE_3
0x4005232	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2899	dwarf2.c	FUNCTION_43	ELSE_3
0x4005239	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2899	dwarf2.c	FUNCTION_43	ELSE_3
0x400523d	        0x488945a0	             mov qword [rbp - 0x60], rax	      2899	dwarf2.c	FUNCTION_43	ELSE_3
0x4005241	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2900	dwarf2.c	FUNCTION_43	ELSE_3
0x4005245	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2900	dwarf2.c	FUNCTION_43	ELSE_3
0x4005249	          0x4829c2	                            sub rdx, rax	      2900	dwarf2.c	FUNCTION_43	ELSE_3
0x400524c	          0x4889d0	                            mov rax, rdx	      2900	dwarf2.c	FUNCTION_43	ELSE_3
0x400524f	        0x488945d0	             mov qword [rbp - 0x30], rax	      2900	dwarf2.c	FUNCTION_43	ELSE_3
0x4005253	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4005258	            0x740a	                            je 0x4005264	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x400525a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x400525e	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4005262	            0x7230	                            jb 0x4005294	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4005264	      0xbe00000000	                              mov esi, 0	      2904	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_9
0x4005269	      0xbf00000000	                              mov edi, 0	      2904	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_9
0x400526e	      0xe800000000	                          call 0x4005273	      2904	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_9
0x4005273	          0x4889c7	                            mov rdi, rax	      2903	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_8
0x4005276	      0xb800000000	                              mov eax, 0	      2903	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_8
0x400527b	      0xe800000000	                          call 0x4005280	      2903	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_8
0x4005280	      0xbf11000000	                           mov edi, 0x11	      2905	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_10
0x4005285	      0xe800000000	                          call 0x400528a	      2905	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_10
0x400528a	      0xb800000000	                              mov eax, 0	      2906	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x400528f	      0xe993020000	                           jmp 0x4005527	      2906	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4005294	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2908	dwarf2.c	FUNCTION_43	ELSE_3
0x4005298	        0x48014598	            add qword [rbp - 0x68], rax 	      2908	dwarf2.c	FUNCTION_43	ELSE_3
0x400529c	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40052a0	        0x488d558c	                   lea rdx, [rbp - 0x74]	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40052a4	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40052a8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40052ac	          0x4989c8	                             mov r8, rcx	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40052af	      0xb900000000	                              mov ecx, 0	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40052b4	          0x4889c7	                            mov rdi, rax	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40052b7	      0xe800000000	                          call 0x40052bc	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40052bc	          0x894594	             mov dword [rbp - 0x6c], eax	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40052bf	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2913	dwarf2.c	FUNCTION_43
0x40052c2	            0x89c0	                            mov eax, eax	      2913	dwarf2.c	FUNCTION_43
0x40052c4	        0x48014598	            add qword [rbp - 0x68], rax 	      2913	dwarf2.c	FUNCTION_43
0x40052c8	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      2915	dwarf2.c	FUNCTION_43	IF_11
0x40052cc	     0xf8442020000	                            je 0x4005514	      2915	dwarf2.c	FUNCTION_43	IF_11
0x40052d2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40052d9	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40052dd	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40052e0	          0x4889d6	                            mov rsi, rdx	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40052e3	            0x89c7	                            mov edi, eax	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40052e5	      0xe8a8baffff	                  call sym.lookup_abbrev	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40052ea	        0x488945d8	             mov qword [rbp - 0x28], rax	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40052ee	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2918	dwarf2.c	FUNCTION_43	IF_11	IF_12
0x40052f3	            0x7538	                           jne 0x400532d	      2918	dwarf2.c	FUNCTION_43	IF_11	IF_12
0x40052f5	      0xbe00000000	                              mov esi, 0	      2921	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_14
0x40052fa	      0xbf00000000	                              mov edi, 0	      2921	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_14
0x40052ff	      0xe800000000	                          call 0x4005304	      2921	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_14
0x4005304	          0x4889c2	                            mov rdx, rax	      2921	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_14
0x4005307	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2920	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_13
0x400530a	            0x89c6	                            mov esi, eax	      2920	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_13
0x400530c	          0x4889d7	                            mov rdi, rdx	      2920	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_13
0x400530f	      0xb800000000	                              mov eax, 0	      2920	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_13
0x4005314	      0xe800000000	                          call 0x4005319	      2920	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_13
0x4005319	      0xbf11000000	                           mov edi, 0x11	      2922	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_15
0x400531e	      0xe800000000	                          call 0x4005323	      2922	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_15
0x4005323	      0xb800000000	                              mov eax, 0	      2923	dwarf2.c	FUNCTION_43	IF_11	IF_12
0x4005328	      0xe9fa010000	                           jmp 0x4005527	      2923	dwarf2.c	FUNCTION_43	IF_11	IF_12
0x400532d	    0xc74590000000	               mov dword [rbp - 0x70], 0	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x4005334	      0xe9c8010000	                           jmp 0x4005501	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x4005339	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x400533d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x4005341	          0x8b5590	             mov edx, dword [rbp - 0x70]	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x4005344	        0x48c1e204	                              shl rdx, 4	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x4005348	        0x488d3410	                    lea rsi, [rax + rdx]	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x400534c	        0x488b7da0	             mov rdi, qword [rbp - 0x60]	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x4005350	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x4005354	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x400535b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x400535f	          0x4989f8	                             mov r8, rdi	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x4005362	          0x4889c7	                            mov rdi, rax	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x4005365	      0xe86ec8ffff	                 call sym.read_attribute	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x400536a	        0x48894598	             mov qword [rbp - 0x68], rax	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x400536e	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2931	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_13
0x4005373	     0xf849a010000	                            je 0x4005513	      2931	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_13
0x4005379	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2935	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14
0x400537d	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      2935	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14
0x4005384	            0x7530	                           jne 0x40053b6	      2935	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14
0x4005386	      0xbe00000000	                              mov esi, 0	      2938	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_18
0x400538b	      0xbf00000000	                              mov edi, 0	      2938	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_18
0x4005390	      0xe800000000	                          call 0x4005395	      2938	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_18
0x4005395	          0x4889c7	                            mov rdi, rax	      2937	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_17
0x4005398	      0xb800000000	                              mov eax, 0	      2937	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_17
0x400539d	      0xe800000000	                          call 0x40053a2	      2937	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_17
0x40053a2	      0xbf11000000	                           mov edi, 0x11	      2939	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_19
0x40053a7	      0xe800000000	                          call 0x40053ac	      2939	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_19
0x40053ac	      0xb800000000	                              mov eax, 0	      2940	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14
0x40053b1	      0xe971010000	                           jmp 0x4005527	      2940	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14
0x40053b6	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053b9	          0x83f83b	                           cmp eax, 0x3b	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053bc	     0xf8423010000	                            je 0x40054e5	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053c2	          0x83f83b	                           cmp eax, 0x3b	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053c5	            0x7713	                            ja 0x40053da	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053c7	          0x83f803	                              cmp eax, 3	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053ca	            0x742c	                            je 0x40053f8	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053cc	          0x83f83a	                           cmp eax, 0x3a	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053cf	     0xf84e6000000	                            je 0x40054bb	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053d5	      0xe923010000	                           jmp 0x40054fd	      2978	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053da	          0x83f86e	                           cmp eax, 0x6e	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053dd	     0xf84b3000000	                            je 0x4005496	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053e3	      0x3d07200000	                         cmp eax, 0x2007	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053e8	     0xf84a8000000	                            je 0x4005496	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053ee	          0x83f847	                           cmp eax, 0x47	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053f1	            0x7455	                            je 0x4005448	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053f3	      0xe905010000	                           jmp 0x40054fd	      2978	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40053f8	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x40053fd	     0xf85f3000000	                           jne 0x40054f6	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x4005403	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x4005406	            0x89c7	                            mov edi, eax	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x4005408	      0xe874beffff	                    call sym.is_str_attr	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x400540d	            0x85c0	                           test eax, eax	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x400540f	     0xf84e1000000	                            je 0x40054f6	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x4005415	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2949	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15
0x4005419	        0x488945a8	             mov qword [rbp - 0x58], rax	      2949	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15
0x400541d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2950	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16	CALL_21
0x4005424	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2950	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16	CALL_21
0x4005427	            0x89c7	                            mov edi, eax	      2950	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16	CALL_21
0x4005429	      0xe809c8ffff	                    call sym.non_mangled	      2950	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16	CALL_21
0x400542e	            0x85c0	                           test eax, eax	      2950	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16	CALL_21
0x4005430	     0xf84c0000000	                            je 0x40054f6	      2950	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16	CALL_21
0x4005436	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2951	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16
0x400543d	    0xc70001000000	                      mov dword [rax], 1	      2951	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16
0x4005443	      0xe9ae000000	                           jmp 0x40054f6	      2953	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x4005448	    0x4c8b8550ffff	              mov r8, qword [rbp - 0xb0]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400544f	    0x488bbd58ffff	             mov rdi, qword [rbp - 0xa8]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4005456	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400545d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4005461	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4005465	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400546c	        0x4883ec08	                              sub rsp, 8	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4005470	    0xffb548ffffff	                 push qword [rbp - 0xb8]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4005476	          0x4d89c1	                              mov r9, r8	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4005479	          0x4989f8	                             mov r8, rdi	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400547c	          0x4889c7	                            mov rdi, rax	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400547f	      0xe808fbffff	         call sym.find_abstract_instance	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4005484	        0x4883c410	                           add rsp, 0x10	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4005488	            0x85c0	                           test eax, eax	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400548a	            0x756d	                           jne 0x40054f9	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400548c	      0xb800000000	                              mov eax, 0	      2958	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17
0x4005491	      0xe991000000	                           jmp 0x4005527	      2958	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17
0x4005496	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2964	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18	CALL_23
0x4005499	            0x89c7	                            mov edi, eax	      2964	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18	CALL_23
0x400549b	      0xe8e1bdffff	                    call sym.is_str_attr	      2964	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18	CALL_23
0x40054a0	            0x85c0	                           test eax, eax	      2964	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18	CALL_23
0x40054a2	            0x7458	                            je 0x40054fc	      2964	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18	CALL_23
0x40054a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2966	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18
0x40054a8	        0x488945a8	             mov qword [rbp - 0x58], rax	      2966	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18
0x40054ac	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2967	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18
0x40054b3	    0xc70001000000	                      mov dword [rax], 1	      2967	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18
0x40054b9	            0xeb41	                           jmp 0x40054fc	      2969	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2972	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054bf	            0x89c2	                            mov edx, eax	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40054c1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40054c8	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40054cc	            0x89d6	                            mov esi, edx	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40054ce	          0x4889c7	                            mov rdi, rax	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40054d1	      0xe8a2cbffff	                call sym.concat_filename	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40054d6	          0x4889c2	                            mov rdx, rax	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40054d9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40054e0	          0x488910	                    mov qword [rax], rdx	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40054e3	            0xeb18	                           jmp 0x40054fd	      2973	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2975	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054e9	            0x89c2	                            mov edx, eax	      2975	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054eb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2975	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054f2	            0x8910	                    mov dword [rax], edx	      2975	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054f4	            0xeb07	                           jmp 0x40054fd	      2976	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054f6	              0x90	                                     nop	      2953	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054f7	            0xeb04	                           jmp 0x40054fd	      2953	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054f9	              0x90	                                     nop	      2959	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054fa	            0xeb01	                           jmp 0x40054fd	      2959	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054fc	              0x90	                                     nop	      2969	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40054fd	        0x83459001	               add dword [rbp - 0x70], 1	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x4005501	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x4005505	          0x8b400c	              mov eax, dword [rax + 0xc]	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x4005508	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x400550b	     0xf8728feffff	                            ja 0x4005339	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x4005511	            0xeb01	                           jmp 0x4005514	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x4005513	              0x90	                                     nop	      2932	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_13
0x4005514	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2983	dwarf2.c	FUNCTION_43
0x400551b	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2983	dwarf2.c	FUNCTION_43
0x400551f	          0x488910	                    mov qword [rax], rdx	      2983	dwarf2.c	FUNCTION_43
0x4005522	      0xb801000000	                              mov eax, 1	      2984	dwarf2.c	FUNCTION_43
0x4005527	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2985	dwarf2.c	FUNCTION_43
0x400552b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2985	dwarf2.c	FUNCTION_43
0x4005534	            0x7405	                            je 0x400553b	      2985	dwarf2.c	FUNCTION_43
0x4005536	      0xe800000000	                          call 0x400553b	      2985	dwarf2.c	FUNCTION_43
0x400553b	              0xc9	                                   leave	      2985	dwarf2.c	FUNCTION_43
0x400553c	              0xc3	                                     ret	      2985	dwarf2.c	FUNCTION_43
read_1_byte	SWITCH,0:ELSE,0:CALL,1:IF,1:DO,0:WHILE,0:functions,0:FOR,0	16
0x40003f9	              0x55	                                push rbp	       587	dwarf2.c	FUNCTION_6
0x40003fa	          0x4889e5	                            mov rbp, rsp	       587	dwarf2.c	FUNCTION_6
0x40003fd	        0x48897df8	                mov qword [rbp - 8], rdi	       587	dwarf2.c	FUNCTION_6
0x4000401	        0x488975f0	             mov qword [rbp - 0x10], rsi	       587	dwarf2.c	FUNCTION_6
0x4000405	        0x488955e8	             mov qword [rbp - 0x18], rdx	       587	dwarf2.c	FUNCTION_6
0x4000409	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400040d	        0x4883c001	                              add rax, 1	       588	dwarf2.c	FUNCTION_6	IF_1
0x4000411	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4000415	            0x7607	                           jbe 0x400041e	       588	dwarf2.c	FUNCTION_6	IF_1
0x4000417	      0xb800000000	                              mov eax, 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x400041c	            0xeb0a	                           jmp 0x4000428	       589	dwarf2.c	FUNCTION_6	IF_1
0x400041e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4000422	           0xfb600	                   movzx eax, byte [rax]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4000425	           0xfb6c0	                           movzx eax, al	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4000428	              0x5d	                                 pop rbp	       591	dwarf2.c	FUNCTION_6
0x4000429	              0xc3	                                     ret	       591	dwarf2.c	FUNCTION_6
stash_maybe_enable_info_hash_tables	SWITCH,0:ELSE,0:CALL,4:IF,2:DO,0:WHILE,0:functions,0:FOR,0	51
0x4007806	              0x55	                                push rbp	      4204	dwarf2.c	FUNCTION_62
0x4007807	          0x4889e5	                            mov rbp, rsp	      4204	dwarf2.c	FUNCTION_62
0x400780a	        0x4883ec10	                           sub rsp, 0x10	      4204	dwarf2.c	FUNCTION_62
0x400780e	        0x48897df8	                mov qword [rbp - 8], rdi	      4204	dwarf2.c	FUNCTION_62
0x4007812	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4204	dwarf2.c	FUNCTION_62
0x4007816	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4205	dwarf2.c	FUNCTION_62	CALL_1
0x400781a	    0x8b8010010000	           mov eax, dword [rax + 0x110] 	      4205	dwarf2.c	FUNCTION_62	CALL_1
0x4007820	            0x85c0	                           test eax, eax	      4205	dwarf2.c	FUNCTION_62	CALL_1
0x4007822	            0x740f	                            je 0x4007833	      4205	dwarf2.c	FUNCTION_62	CALL_1
0x4007824	      0xbe6d100000	                         mov esi, 0x106d	      4205	dwarf2.c	FUNCTION_62	CALL_1
0x4007829	      0xbf00000000	                              mov edi, 0	      4205	dwarf2.c	FUNCTION_62	CALL_1
0x400782e	      0xe800000000	                          call 0x4007833	      4205	dwarf2.c	FUNCTION_62	CALL_1
0x4007833	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4007837	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      4207	dwarf2.c	FUNCTION_62	IF_1
0x400783d	          0x8d4801	                      lea ecx, [rax + 1]	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4007840	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4007844	    0x898af0000000	             mov dword [rdx + 0xf0], ecx	      4207	dwarf2.c	FUNCTION_62	IF_1
0x400784a	          0x83f863	                           cmp eax, 0x63	      4207	dwarf2.c	FUNCTION_62	IF_1
0x400784d	     0xf8e80000000	                           jle 0x40078d3	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4007853	        0x488b45f8	                mov rax, qword [rbp - 8]	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4007857	          0x4889c7	                            mov rdi, rax	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x400785a	      0xe85b88ffff	         call sym.create_info_hash_table	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x400785f	          0x4889c2	                            mov rdx, rax	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4007862	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4007866	    0x488990f80000	             mov qword [rax + 0xf8], rdx	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x400786d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4007871	          0x4889c7	                            mov rdi, rax	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4007874	      0xe84188ffff	         call sym.create_info_hash_table	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4007879	          0x4889c2	                            mov rdx, rax	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x400787c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4007880	    0x488990000100	            mov qword [rax + 0x100], rdx	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4007887	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4216	dwarf2.c	FUNCTION_62	IF_2
0x400788b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4216	dwarf2.c	FUNCTION_62	IF_2
0x4007892	          0x4885c0	                           test rax, rax	      4216	dwarf2.c	FUNCTION_62	IF_2
0x4007895	            0x7410	                            je 0x40078a7	      4216	dwarf2.c	FUNCTION_62	IF_2
0x4007897	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4216	dwarf2.c	FUNCTION_62	IF_2
0x400789b	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      4216	dwarf2.c	FUNCTION_62	IF_2
0x40078a2	          0x4885c0	                           test rax, rax	      4216	dwarf2.c	FUNCTION_62	IF_2
0x40078a5	            0x7510	                           jne 0x40078b7	      4216	dwarf2.c	FUNCTION_62	IF_2
0x40078a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4219	dwarf2.c	FUNCTION_62	IF_2
0x40078ab	    0xc78010010000	              mov dword [rax + 0x110], 2	      4219	dwarf2.c	FUNCTION_62	IF_2
0x40078b5	            0xeb1d	                           jmp 0x40078d4	      4220	dwarf2.c	FUNCTION_62	IF_2
0x40078b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4225	dwarf2.c	FUNCTION_62	CALL_4
0x40078bb	          0x4889c7	                            mov rdi, rax	      4225	dwarf2.c	FUNCTION_62	CALL_4
0x40078be	      0xe89dfcffff	call sym.stash_maybe_update_info_hash_tables	      4225	dwarf2.c	FUNCTION_62	CALL_4
0x40078c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4226	dwarf2.c	FUNCTION_62
0x40078c7	    0xc78010010000	              mov dword [rax + 0x110], 1	      4226	dwarf2.c	FUNCTION_62
0x40078d1	            0xeb01	                           jmp 0x40078d4	      4226	dwarf2.c	FUNCTION_62
0x40078d3	              0x90	                                     nop	      4208	dwarf2.c	FUNCTION_62	IF_1
0x40078d4	              0xc9	                                   leave	      4227	dwarf2.c	FUNCTION_62
0x40078d5	              0xc3	                                     ret	      4227	dwarf2.c	FUNCTION_62
scan_unit_for_symbols	SWITCH,3:ELSE,2:CALL,24:IF,29:DO,0:WHILE,1:functions,0:FOR,2	596
0x40056e8	              0x55	                                push rbp	      3041	dwarf2.c	FUNCTION_45
0x40056e9	          0x4889e5	                            mov rbp, rsp	      3041	dwarf2.c	FUNCTION_45
0x40056ec	    0x4881ecb00000	                           sub rsp, 0xb0	      3041	dwarf2.c	FUNCTION_45
0x40056f3	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      3041	dwarf2.c	FUNCTION_45
0x40056fa	    0x64488b042528	                mov rax, qword fs:[0x28]	      3041	dwarf2.c	FUNCTION_45
0x4005703	        0x488945f8	                mov qword [rbp - 8], rax	      3041	dwarf2.c	FUNCTION_45
0x4005707	            0x31c0	                            xor eax, eax	      3041	dwarf2.c	FUNCTION_45
0x4005709	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3042	dwarf2.c	FUNCTION_45
0x4005710	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3042	dwarf2.c	FUNCTION_45
0x4005714	        0x488945b0	             mov qword [rbp - 0x50], rax	      3042	dwarf2.c	FUNCTION_45
0x4005718	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3043	dwarf2.c	FUNCTION_45
0x400571f	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3043	dwarf2.c	FUNCTION_45
0x4005723	        0x48894580	             mov qword [rbp - 0x80], rax	      3043	dwarf2.c	FUNCTION_45
0x4005727	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3044	dwarf2.c	FUNCTION_45
0x400572e	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      3044	dwarf2.c	FUNCTION_45
0x4005735	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3044	dwarf2.c	FUNCTION_45
0x4005739	        0x488945b8	             mov qword [rbp - 0x48], rax	      3044	dwarf2.c	FUNCTION_45
0x400573d	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      3045	dwarf2.c	FUNCTION_45
0x4005747	    0xc78570ffffff	           mov dword [rbp - 0x90], 0x20 	      3053	dwarf2.c	FUNCTION_45
0x4005751	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      3055	dwarf2.c	FUNCTION_45	CALL_1
0x4005757	            0x4898	                                    cdqe	      3055	dwarf2.c	FUNCTION_45	CALL_1
0x4005759	        0x48c1e003	                              shl rax, 3	      3055	dwarf2.c	FUNCTION_45	CALL_1
0x400575d	          0x4889c7	                            mov rdi, rax	      3054	dwarf2.c	FUNCTION_45
0x4005760	      0xe800000000	                          call 0x4005765	      3054	dwarf2.c	FUNCTION_45
0x4005765	        0x48894588	             mov qword [rbp - 0x78], rax	      3054	dwarf2.c	FUNCTION_45
0x4005769	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      3056	dwarf2.c	FUNCTION_45	IF_1
0x400576e	            0x750a	                           jne 0x400577a	      3056	dwarf2.c	FUNCTION_45	IF_1
0x4005770	      0xb800000000	                              mov eax, 0	      3057	dwarf2.c	FUNCTION_45	IF_1
0x4005775	      0xe9f9080000	                           jmp 0x4006073	      3057	dwarf2.c	FUNCTION_45	IF_1
0x400577a	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      3058	dwarf2.c	FUNCTION_45
0x4005780	            0x4898	                                    cdqe	      3058	dwarf2.c	FUNCTION_45
0x4005782	    0x488d14c50000	                        lea rdx, [rax*8]	      3058	dwarf2.c	FUNCTION_45
0x400578a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3058	dwarf2.c	FUNCTION_45
0x400578e	          0x4801d0	                            add rax, rdx	      3058	dwarf2.c	FUNCTION_45
0x4005791	    0x48c700000000	                      mov qword [rax], 0	      3058	dwarf2.c	FUNCTION_45
0x4005798	      0xe995080000	                           jmp 0x4006032	      3060	dwarf2.c	FUNCTION_45	WHILE_1
0x400579d	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3067	dwarf2.c	FUNCTION_45	WHILE_1
0x40057a5	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      3068	dwarf2.c	FUNCTION_45	WHILE_1
0x40057ad	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      3069	dwarf2.c	FUNCTION_45	WHILE_1
0x40057b7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x40057bb	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x40057bf	     0xf838d080000	                           jae 0x4006052	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x40057c5	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40057c9	    0x488d9568ffff	                   lea rdx, [rbp - 0x98]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40057d0	        0x488b7580	             mov rsi, qword [rbp - 0x80]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40057d4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40057d8	          0x4989c8	                             mov r8, rcx	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40057db	      0xb900000000	                              mov ecx, 0	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40057e0	          0x4889c7	                            mov rdi, rax	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40057e3	      0xe800000000	                          call 0x40057e8	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40057e8	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40057ee	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      3077	dwarf2.c	FUNCTION_45	WHILE_1
0x40057f4	            0x89c0	                            mov eax, eax	      3077	dwarf2.c	FUNCTION_45	WHILE_1
0x40057f6	        0x48014580	            add qword [rbp - 0x80], rax 	      3077	dwarf2.c	FUNCTION_45	WHILE_1
0x40057fa	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      3079	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x4005801	            0x750c	                           jne 0x400580f	      3079	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x4005803	    0x83ad6cffffff	               sub dword [rbp - 0x94], 1	      3081	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x400580a	      0xe923080000	                           jmp 0x4006032	      3081	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x400580f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x4005816	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x400581a	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x4005820	          0x4889d6	                            mov rsi, rdx	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x4005823	            0x89c7	                            mov edi, eax	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x4005825	      0xe868b5ffff	                  call sym.lookup_abbrev	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x400582a	        0x488945c0	             mov qword [rbp - 0x40], rax	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x400582e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3086	dwarf2.c	FUNCTION_45	WHILE_1	IF_4
0x4005833	            0x7550	                           jne 0x4005885	      3086	dwarf2.c	FUNCTION_45	WHILE_1	IF_4
0x4005835	    0x8b0500000000	            mov eax, dword [0x0400583b] 	      3091	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x400583b	    0x39857cffffff	            cmp dword [rbp - 0x84], eax 	      3091	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x4005841	            0x7433	                            je 0x4005876	      3091	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x4005843	      0xbe00000000	                              mov esi, 0	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x4005848	      0xbf00000000	                              mov edi, 0	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x400584d	      0xe800000000	                          call 0x4005852	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x4005852	          0x4889c2	                            mov rdx, rax	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x4005855	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x400585b	            0x89c6	                            mov esi, eax	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x400585d	          0x4889d7	                            mov rdi, rdx	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x4005860	      0xb800000000	                              mov eax, 0	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x4005865	      0xe800000000	                          call 0x400586a	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x400586a	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3096	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x4005870	    0x890500000000	            mov dword [0x04005876], eax 	      3096	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x4005876	      0xbf11000000	                           mov edi, 0x11	      3098	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	CALL_6
0x400587b	      0xe800000000	                          call 0x4005880	      3098	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	CALL_6
0x4005880	      0xe9dd070000	                           jmp 0x4006062	      3099	dwarf2.c	FUNCTION_45	WHILE_1	IF_4
0x4005885	    0x48c745980000	               mov qword [rbp - 0x68], 0	      3102	dwarf2.c	FUNCTION_45	WHILE_1
0x400588d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3103	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4005891	          0x8b4004	                mov eax, dword [rax + 4]	      3103	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4005894	          0x83f82e	                           cmp eax, 0x2e	      3103	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4005897	            0x741c	                            je 0x40058b5	      3103	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4005899	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3104	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400589d	          0x8b4004	                mov eax, dword [rax + 4]	      3104	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058a0	          0x83f803	                              cmp eax, 3	      3104	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058a3	            0x7410	                            je 0x40058b5	      3104	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058a5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058a9	          0x8b4004	                mov eax, dword [rax + 4]	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058ac	          0x83f81d	                           cmp eax, 0x1d	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058af	     0xf8530010000	                           jne 0x40059e5	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058b5	    0x48c745d05800	           mov qword [rbp - 0x30], 0x58 	      3107	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058bd	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x40058c1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x40058c5	          0x4889d6	                            mov rsi, rdx	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x40058c8	          0x4889c7	                            mov rdi, rax	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x40058cb	      0xe800000000	                          call 0x40058d0	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x40058d0	        0x48894590	             mov qword [rbp - 0x70], rax	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x40058d4	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3109	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_7
0x40058d9	     0xf8476070000	                            je 0x4006055	      3109	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_7
0x40058df	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058e3	          0x8b4004	                mov eax, dword [rax + 4]	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058e6	            0x89c2	                            mov edx, eax	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058e8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058ec	          0x895028	             mov dword [rax + 0x28], edx	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058ef	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3112	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058f6	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      3112	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40058fd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3112	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4005901	          0x488910	                    mov qword [rax], rdx	      3112	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4005904	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3113	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400590b	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3113	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400590f	    0x488990800000	             mov qword [rax + 0x80], rdx	      3113	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4005916	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3114	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400591d	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3114	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4005924	        0x488d5001	                      lea rdx, [rax + 1]	      3114	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4005928	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3114	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400592f	    0x488990900000	             mov qword [rax + 0x90], rdx	      3114	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4005936	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x400593d	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4005943	            0x85c0	                           test eax, eax	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4005945	            0x740f	                            je 0x4005956	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4005947	      0xbe2b0c0000	                          mov esi, 0xc2b	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x400594c	      0xbf00000000	                              mov edi, 0	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4005951	      0xe800000000	                          call 0x4005956	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4005956	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x400595a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x400595d	          0x83f81d	                           cmp eax, 0x1d	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x4005960	            0x7560	                           jne 0x40059c2	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x4005962	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4005968	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x400596e	            0xeb3f	                           jmp 0x40059af	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4005970	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4005976	    0x488d14c50000	                        lea rdx, [rax*8]	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x400597e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4005982	          0x4801d0	                            add rax, rdx	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4005985	          0x488b00	                    mov rax, qword [rax]	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4005988	          0x4885c0	                           test rax, rax	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x400598b	            0x7422	                            je 0x40059af	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x400598d	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      3121	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4005993	    0x488d14c50000	                        lea rdx, [rax*8]	      3121	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x400599b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3121	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x400599f	          0x4801d0	                            add rax, rdx	      3121	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40059a2	          0x488b10	                    mov rdx, qword [rax]	      3121	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40059a5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3121	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40059a9	        0x48895008	                mov qword [rax + 8], rdx	      3121	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40059ad	            0xeb13	                           jmp 0x40059c2	      3122	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40059af	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x40059b5	          0x8d50ff	                      lea edx, [rax - 1]	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x40059b8	    0x899574ffffff	             mov dword [rbp - 0x8c], edx	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x40059be	            0x85c0	                           test eax, eax	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x40059c0	            0x75ae	                           jne 0x4005970	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x40059c2	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40059c8	            0x4898	                                    cdqe	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40059ca	    0x488d14c50000	                        lea rdx, [rax*8]	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40059d2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40059d6	          0x4801c2	                            add rdx, rax	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40059d9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40059dd	          0x488902	                    mov qword [rdx], rax	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40059e0	      0xe9a1000000	                           jmp 0x4005a86	      3106	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40059e5	    0x48c745900000	               mov qword [rbp - 0x70], 0	      3128	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x40059ed	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3129	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40059f1	          0x8b4004	                mov eax, dword [rax + 4]	      3129	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40059f4	          0x83f834	                           cmp eax, 0x34	      3129	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40059f7	            0x756f	                           jne 0x4005a68	      3129	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40059f9	    0x48c745c83800	           mov qword [rbp - 0x38], 0x38 	      3131	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a01	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4005a05	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4005a09	          0x4889d6	                            mov rsi, rdx	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4005a0c	          0x4889c7	                            mov rdi, rax	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4005a0f	      0xe800000000	                          call 0x4005a14	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4005a14	        0x48894598	             mov qword [rbp - 0x68], rax	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4005a18	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      3133	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	IF_11
0x4005a1d	     0xf8435060000	                            je 0x4006058	      3133	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	IF_11
0x4005a23	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a27	          0x8b4004	                mov eax, dword [rax + 4]	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a2a	            0x89c2	                            mov edx, eax	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a2c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a30	          0x895014	             mov dword [rax + 0x14], edx	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a33	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3136	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a37	         0xfb65030	           movzx edx, byte [rax + 0x30] 	      3136	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a3b	          0x83ca01	                               or edx, 1	      3136	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a3e	          0x885030	               mov byte [rax + 0x30], dl	      3136	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a41	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3137	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a48	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3137	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a4f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3137	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a53	          0x488910	                    mov qword [rax], rdx	      3137	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a56	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3138	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a5d	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3138	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a61	    0x488990980000	             mov qword [rax + 0x98], rdx	      3138	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4005a68	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4005a6e	            0x4898	                                    cdqe	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4005a70	    0x488d14c50000	                        lea rdx, [rax*8]	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4005a78	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4005a7c	          0x4801d0	                            add rax, rdx	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4005a7f	    0x48c700000000	                      mov qword [rax], 0	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4005a86	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4005a90	      0xe9ce040000	                           jmp 0x4005f63	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4005a95	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005a99	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005a9d	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005aa3	        0x48c1e204	                              shl rdx, 4	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005aa7	        0x488d3410	                    lea rsi, [rax + rdx]	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005aab	        0x488b7db8	             mov rdi, qword [rbp - 0x48]	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005aaf	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005ab3	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005aba	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005abe	          0x4989f8	                             mov r8, rdi	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005ac1	          0x4889c7	                            mov rdi, rax	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005ac4	      0xe80fc1ffff	                 call sym.read_attribute	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005ac9	        0x48894580	             mov qword [rbp - 0x80], rax	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4005acd	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      3151	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_12
0x4005ad2	     0xf8483050000	                            je 0x400605b	      3151	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_12
0x4005ad8	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3154	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13
0x4005add	     0xf842c020000	                            je 0x4005d0f	      3154	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13
0x4005ae3	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005ae6	          0x83f83b	                           cmp eax, 0x3b	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005ae9	     0xf840e020000	                            je 0x4005cfd	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005aef	          0x83f83b	                           cmp eax, 0x3b	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005af2	            0x773c	                            ja 0x4005b30	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005af4	          0x83f812	                           cmp eax, 0x12	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005af7	     0xf848b010000	                            je 0x4005c88	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005afd	          0x83f812	                           cmp eax, 0x12	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b00	            0x7717	                            ja 0x4005b19	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b02	          0x83f803	                              cmp eax, 3	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b05	     0xf84ea000000	                            je 0x4005bf5	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b0b	          0x83f811	                           cmp eax, 0x11	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b0e	     0xf8467010000	                            je 0x4005c7b	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b14	      0xe943040000	                           jmp 0x4005f5c	      3223	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b19	          0x83f831	                           cmp eax, 0x31	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b1c	     0xf8486000000	                            je 0x4005ba8	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b22	          0x83f83a	                           cmp eax, 0x3a	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b25	     0xf84a7010000	                            je 0x4005cd2	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b2b	      0xe92c040000	                           jmp 0x4005f5c	      3223	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b30	          0x83f858	                           cmp eax, 0x58	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b33	            0x7436	                            je 0x4005b6b	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b35	          0x83f858	                           cmp eax, 0x58	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b38	            0x7713	                            ja 0x4005b4d	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b3a	          0x83f847	                           cmp eax, 0x47	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b3d	            0x7469	                            je 0x4005ba8	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b3f	          0x83f855	                           cmp eax, 0x55	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b42	     0xf845f010000	                            je 0x4005ca7	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b48	      0xe90f040000	                           jmp 0x4005f5c	      3223	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b4d	          0x83f86e	                           cmp eax, 0x6e	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b50	     0xf84f7000000	                            je 0x4005c4d	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b56	      0x3d07200000	                         cmp eax, 0x2007	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b5b	     0xf84ec000000	                            je 0x4005c4d	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b61	          0x83f859	                           cmp eax, 0x59	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b64	            0x7430	                            je 0x4005b96	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b66	      0xe9f1030000	                           jmp 0x4005f5c	      3223	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3160	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b6f	            0x89c2	                            mov edx, eax	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4005b71	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4005b78	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4005b7c	            0x89d6	                            mov esi, edx	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4005b7e	          0x4889c7	                            mov rdi, rax	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4005b81	      0xe8f2c4ffff	                call sym.concat_filename	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4005b86	          0x4889c2	                            mov rdx, rax	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4005b89	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4005b8d	        0x48895010	             mov qword [rax + 0x10], rdx	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4005b91	      0xe9c6030000	                           jmp 0x4005f5c	      3161	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3164	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b9a	            0x89c2	                            mov edx, eax	      3164	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005b9c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3164	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005ba0	          0x895020	             mov dword [rax + 0x20], edx	      3164	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005ba3	      0xe9b4030000	                           jmp 0x4005f5c	      3165	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005ba8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bac	        0x488d7824	                   lea rdi, [rax + 0x24]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bb0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bb4	        0x4c8d4818	                    lea r9, [rax + 0x18]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bb8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bbc	        0x4c8d402c	                    lea r8, [rax + 0x2c]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bc0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bc4	        0x488d4830	                   lea rcx, [rax + 0x30]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bc8	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bcc	        0x488b7580	             mov rsi, qword [rbp - 0x80]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bd0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bd7	        0x4883ec08	                              sub rsp, 8	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bdb	              0x57	                                push rdi	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bdc	          0x4889c7	                            mov rdi, rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bdf	      0xe8a8f3ffff	         call sym.find_abstract_instance	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005be4	        0x4883c410	                           add rsp, 0x10	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005be8	            0x85c0	                           test eax, eax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bea	     0xf855c030000	                           jne 0x4005f4c	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4005bf0	      0xe96d040000	                           jmp 0x4006062	      3174	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14
0x4005bf5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x4005bf9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x4005bfd	          0x4885c0	                           test rax, rax	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x4005c00	     0xf8549030000	                           jne 0x4005f4f	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x4005c06	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x4005c09	            0x89c7	                            mov edi, eax	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x4005c0b	      0xe871b6ffff	                    call sym.is_str_attr	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x4005c10	            0x85c0	                           test eax, eax	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x4005c12	     0xf8437030000	                            je 0x4005f4f	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x4005c18	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x4005c1c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x4005c20	        0x48895030	             mov qword [rax + 0x30], rdx	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x4005c24	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3183	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16	CALL_14
0x4005c2b	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3183	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16	CALL_14
0x4005c2e	            0x89c7	                            mov edi, eax	      3183	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16	CALL_14
0x4005c30	      0xe802c0ffff	                    call sym.non_mangled	      3183	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16	CALL_14
0x4005c35	            0x85c0	                           test eax, eax	      3183	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16	CALL_14
0x4005c37	     0xf8412030000	                            je 0x4005f4f	      3183	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16	CALL_14
0x4005c3d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3184	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16
0x4005c41	    0xc7402c010000	               mov dword [rax + 0x2c], 1	      3184	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16
0x4005c48	      0xe902030000	                           jmp 0x4005f4f	      3186	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c4d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3192	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17	CALL_15
0x4005c50	            0x89c7	                            mov edi, eax	      3192	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17	CALL_15
0x4005c52	      0xe82ab6ffff	                    call sym.is_str_attr	      3192	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17	CALL_15
0x4005c57	            0x85c0	                           test eax, eax	      3192	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17	CALL_15
0x4005c59	     0xf84f3020000	                            je 0x4005f52	      3192	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17	CALL_15
0x4005c5f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3194	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4005c63	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3194	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4005c67	        0x48895030	             mov qword [rax + 0x30], rdx	      3194	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4005c6b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3195	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4005c6f	    0xc7402c010000	               mov dword [rax + 0x2c], 1	      3195	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4005c76	      0xe9d7020000	                           jmp 0x4005f52	      3197	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c7f	        0x488945a0	             mov qword [rbp - 0x60], rax	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c83	      0xe9d4020000	                           jmp 0x4005f5c	      3201	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3204	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c8c	        0x488945a8	             mov qword [rbp - 0x58], rax	      3204	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c90	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c93	          0x83f801	                              cmp eax, 1	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c96	           0xf95c0	                                setne al	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c99	           0xfb6c0	                           movzx eax, al	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005c9c	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005ca2	      0xe9b5020000	                           jmp 0x4005f5c	      3206	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005ca7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4005cab	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4005caf	        0x488d4838	                   lea rcx, [rax + 0x38]	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4005cb3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4005cba	          0x4889ce	                            mov rsi, rcx	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4005cbd	          0x4889c7	                            mov rdi, rax	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4005cc0	      0xe878f8ffff	                 call sym.read_rangelist	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4005cc5	            0x85c0	                           test eax, eax	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4005cc7	     0xf8588020000	                           jne 0x4005f55	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4005ccd	      0xe990030000	                           jmp 0x4006062	      3210	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18
0x4005cd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3215	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005cd6	            0x89c2	                            mov edx, eax	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4005cd8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4005cdf	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4005ce3	            0x89d6	                            mov esi, edx	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4005ce5	          0x4889c7	                            mov rdi, rax	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4005ce8	      0xe88bc3ffff	                call sym.concat_filename	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4005ced	          0x4889c2	                            mov rdx, rax	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4005cf0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4005cf4	        0x48895018	             mov qword [rax + 0x18], rdx	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4005cf8	      0xe95f020000	                           jmp 0x4005f5c	      3216	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005cfd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3219	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005d01	            0x89c2	                            mov edx, eax	      3219	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005d03	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3219	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005d07	          0x895024	             mov dword [rax + 0x24], edx	      3219	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005d0a	      0xe94d020000	                           jmp 0x4005f5c	      3220	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005d0f	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      3226	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19
0x4005d14	     0xf8442020000	                            je 0x4005f5c	      3226	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19
0x4005d1a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d1d	          0x83f83a	                           cmp eax, 0x3a	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d20	            0x744a	                            je 0x4005d6c	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d22	          0x83f83a	                           cmp eax, 0x3a	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d25	            0x7713	                            ja 0x4005d3a	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d27	          0x83f802	                              cmp eax, 2	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d2a	     0xf8499000000	                            je 0x4005dc9	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d30	          0x83f803	                              cmp eax, 3	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d33	            0x7414	                            je 0x4005d49	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d35	      0xe922020000	                           jmp 0x4005f5c	      3281	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d3a	          0x83f83b	                           cmp eax, 0x3b	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d3d	            0x7458	                            je 0x4005d97	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d3f	          0x83f83f	                           cmp eax, 0x3f	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d42	            0x7465	                            je 0x4005da9	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d44	      0xe913020000	                           jmp 0x4005f5c	      3281	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d49	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3231	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20	CALL_18
0x4005d4c	            0x89c7	                            mov edi, eax	      3231	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20	CALL_18
0x4005d4e	      0xe82eb5ffff	                    call sym.is_str_attr	      3231	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20	CALL_18
0x4005d53	            0x85c0	                           test eax, eax	      3231	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20	CALL_18
0x4005d55	     0xf84fd010000	                            je 0x4005f58	      3231	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20	CALL_18
0x4005d5b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x4005d5f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x4005d63	        0x48895018	             mov qword [rax + 0x18], rdx	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x4005d67	      0xe9ec010000	                           jmp 0x4005f58	      3233	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3237	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d70	            0x89c2	                            mov edx, eax	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4005d72	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4005d79	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4005d7d	            0x89d6	                            mov esi, edx	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4005d7f	          0x4889c7	                            mov rdi, rax	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4005d82	      0xe8f1c2ffff	                call sym.concat_filename	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4005d87	          0x4889c2	                            mov rdx, rax	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4005d8a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4005d8e	        0x48895008	                mov qword [rax + 8], rdx	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4005d92	      0xe9c5010000	                           jmp 0x4005f5c	      3238	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d9b	            0x89c2	                            mov edx, eax	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005d9d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005da1	          0x895010	             mov dword [rax + 0x10], edx	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005da4	      0xe9b3010000	                           jmp 0x4005f5c	      3242	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005da9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3245	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4005dad	          0x4885c0	                           test rax, rax	      3245	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4005db0	     0xf84a5010000	                            je 0x4005f5b	      3245	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4005db6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4005dba	         0xfb65030	           movzx edx, byte [rax + 0x30] 	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4005dbe	          0x83e2fe	                     and edx, 0xfffffffe	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4005dc1	          0x885030	               mov byte [rax + 0x30], dl	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4005dc4	      0xe992010000	                           jmp 0x4005f5b	      3247	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005dc9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005dcc	          0x83e803	                              sub eax, 3	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005dcf	          0x83f815	                           cmp eax, 0x15	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005dd2	     0xf876e010000	                            ja 0x4005f46	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005dd8	            0x89c0	                            mov eax, eax	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005dda	    0x488b04c50000	                  mov rax, qword [rax*8]	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005de2	            0xffe0	                                 jmp rax	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005de4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005de8	        0x488b4008	                mov rax, qword [rax + 8]	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005dec	          0x4885c0	                           test rax, rax	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005def	     0xf8454010000	                            je 0x4005f49	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005df5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005df9	        0x488b4008	                mov rax, qword [rax + 8]	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005dfd	           0xfb600	                   movzx eax, byte [rax]	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005e00	            0x3c03	                               cmp al, 3	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005e02	     0xf8541010000	                           jne 0x4005f49	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005e08	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3260	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005e0c	         0xfb65030	           movzx edx, byte [rax + 0x30] 	      3260	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005e10	          0x83e2fe	                     and edx, 0xfffffffe	      3260	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005e13	          0x885030	               mov byte [rax + 0x30], dl	      3260	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4005e16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4005e1a	            0x8b10	                    mov edx, dword [rax]	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4005e1c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4005e23	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4005e2a	           0xfb6c0	                           movzx eax, al	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4005e2d	          0x83c001	                              add eax, 1	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4005e30	            0x39c2	                            cmp edx, eax	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4005e32	     0xf8511010000	                           jne 0x4005f49	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4005e38	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e3f	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e46	           0xfb6c0	                           movzx eax, al	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e49	          0xc1e003	                              shl eax, 3	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e4c	          0x83f808	                              cmp eax, 8	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e4f	            0x7517	                           jne 0x4005e68	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e51	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e55	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e59	        0x4883c001	                              add rax, 1	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e5d	           0xfb600	                   movzx eax, byte [rax]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e60	           0xfb6c0	                           movzx eax, al	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e63	      0xe9d4000000	                           jmp 0x4005f3c	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e68	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e6f	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e76	           0xfb6c0	                           movzx eax, al	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e79	          0xc1e003	                              shl eax, 3	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e7c	          0x83f810	                           cmp eax, 0x10	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e7f	            0x7529	                           jne 0x4005eaa	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e81	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e88	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e8c	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e90	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e94	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e98	        0x488b5208	                mov rdx, qword [rdx + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005e9c	        0x4883c201	                              add rdx, 1	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ea0	          0x4889d7	                            mov rdi, rdx	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ea3	            0xffd0	                                call rax	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ea5	      0xe992000000	                           jmp 0x4005f3c	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005eaa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005eb1	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005eb8	           0xfb6c0	                           movzx eax, al	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ebb	          0xc1e003	                              shl eax, 3	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ebe	          0x83f820	                           cmp eax, 0x20	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ec1	            0x7526	                           jne 0x4005ee9	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ec3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005eca	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ece	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ed2	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ed6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005eda	        0x488b5208	                mov rdx, qword [rdx + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ede	        0x4883c201	                              add rdx, 1	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ee2	          0x4889d7	                            mov rdi, rdx	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ee5	            0xffd0	                                call rax	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ee7	            0xeb53	                           jmp 0x4005f3c	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ee9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ef0	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005ef7	           0xfb6c0	                           movzx eax, al	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005efa	          0xc1e003	                              shl eax, 3	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005efd	          0x83f840	                           cmp eax, 0x40	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f00	            0x7526	                           jne 0x4005f28	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f02	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f09	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f0d	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f11	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f15	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f19	        0x488b5208	                mov rdx, qword [rdx + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f1d	        0x4883c201	                              add rdx, 1	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f21	          0x4889d7	                            mov rdi, rdx	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f24	            0xffd0	                                call rax	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f26	            0xeb14	                           jmp 0x4005f3c	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f28	      0xba00000000	                              mov edx, 0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f2d	      0xbec70c0000	                          mov esi, 0xcc7	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f32	      0xbf00000000	                              mov edi, 0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f37	      0xe800000000	                          call 0x4005f3c	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f3c	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f40	        0x48894220	             mov qword [rdx + 0x20], rax	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005f44	            0xeb03	                           jmp 0x4005f49	      3273	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005f46	              0x90	                                     nop	      3276	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005f47	            0xeb13	                           jmp 0x4005f5c	      3276	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005f49	              0x90	                                     nop	      3273	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4005f4a	            0xeb10	                           jmp 0x4005f5c	      3278	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005f4c	              0x90	                                     nop	      3175	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005f4d	            0xeb0d	                           jmp 0x4005f5c	      3175	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005f4f	              0x90	                                     nop	      3186	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005f50	            0xeb0a	                           jmp 0x4005f5c	      3186	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005f52	              0x90	                                     nop	      3197	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005f53	            0xeb07	                           jmp 0x4005f5c	      3197	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005f55	              0x90	                                     nop	      3211	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005f56	            0xeb04	                           jmp 0x4005f5c	      3211	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4005f58	              0x90	                                     nop	      3233	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005f59	            0xeb01	                           jmp 0x4005f5c	      3233	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005f5b	              0x90	                                     nop	      3247	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4005f5c	    0x838574ffffff	               add dword [rbp - 0x8c], 1	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4005f63	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4005f67	          0x8b400c	              mov eax, dword [rax + 0xc]	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4005f6a	    0x3b8574ffffff	             cmp eax, dword [rbp - 0x8c]	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4005f70	     0xf871ffbffff	                            ja 0x4005a95	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4005f76	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4005f7d	            0x7408	                            je 0x4005f87	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4005f7f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3287	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4005f83	        0x480145a8	            add qword [rbp - 0x58], rax 	      3287	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4005f87	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4005f8c	            0x742e	                            je 0x4005fbc	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4005f8e	      0x48837da800	               cmp qword [rbp - 0x58], 0	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4005f93	            0x7427	                            je 0x4005fbc	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4005f95	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4005f99	        0x488d7038	                   lea rsi, [rax + 0x38]	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4005f9d	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4005fa1	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4005fa5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4005fac	          0x4889c7	                            mov rdi, rax	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4005faf	      0xe83dc3ffff	                     call sym.arange_add	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4005fb4	            0x85c0	                           test eax, eax	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4005fb6	     0xf84a2000000	                            je 0x400605e	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4005fbc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4005fc0	          0x8b4008	                mov eax, dword [rax + 8]	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4005fc3	            0x85c0	                           test eax, eax	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4005fc5	            0x746b	                            je 0x4006032	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4005fc7	    0x83856cffffff	               add dword [rbp - 0x94], 1	      3297	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4005fce	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      3299	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4005fd4	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	      3299	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4005fda	            0x7c38	                            jl 0x4006014	      3299	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4005fdc	    0xd1a570ffffff	               shl dword [rbp - 0x90], 1	      3303	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4005fe2	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      3305	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	CALL_22
0x4005fe8	            0x4898	                                    cdqe	      3305	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	CALL_22
0x4005fea	    0x488d14c50000	                        lea rdx, [rax*8]	      3305	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	CALL_22
0x4005ff2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4005ff6	          0x4889d6	                            mov rsi, rdx	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4005ff9	          0x4889c7	                            mov rdi, rax	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4005ffc	      0xe800000000	                          call 0x4006001	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4006001	        0x488945d8	             mov qword [rbp - 0x28], rax	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4006005	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x400600a	            0x7455	                            je 0x4006061	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x400600c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3309	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4006010	        0x48894588	             mov qword [rbp - 0x78], rax	      3309	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4006014	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x400601a	            0x4898	                                    cdqe	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x400601c	    0x488d14c50000	                        lea rdx, [rax*8]	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4006024	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4006028	          0x4801d0	                            add rax, rdx	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x400602b	    0x48c700000000	                      mov qword [rax], 0	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4006032	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3060	dwarf2.c	FUNCTION_45	WHILE_1
0x4006039	     0xf895ef7ffff	                           jns 0x400579d	      3060	dwarf2.c	FUNCTION_45	WHILE_1
0x400603f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3315	dwarf2.c	FUNCTION_45	CALL_23
0x4006043	          0x4889c7	                            mov rdi, rax	      3315	dwarf2.c	FUNCTION_45	CALL_23
0x4006046	      0xe800000000	                          call 0x400604b	      3315	dwarf2.c	FUNCTION_45	CALL_23
0x400604b	      0xb801000000	                              mov eax, 1	      3316	dwarf2.c	FUNCTION_45
0x4006050	            0xeb21	                           jmp 0x4006073	      3316	dwarf2.c	FUNCTION_45
0x4006052	              0x90	                                     nop	      3073	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4006053	            0xeb0d	                           jmp 0x4006062	      3073	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4006055	              0x90	                                     nop	      3110	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_7
0x4006056	            0xeb0a	                           jmp 0x4006062	      3110	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_7
0x4006058	              0x90	                                     nop	      3134	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	IF_11
0x4006059	            0xeb07	                           jmp 0x4006062	      3134	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	IF_11
0x400605b	              0x90	                                     nop	      3152	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_12
0x400605c	            0xeb04	                           jmp 0x4006062	      3152	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_12
0x400605e	              0x90	                                     nop	      3292	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26
0x400605f	            0xeb01	                           jmp 0x4006062	      3292	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26
0x4006061	              0x90	                                     nop	      3308	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x4006062	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3319	dwarf2.c	FUNCTION_45	CALL_24
0x4006066	          0x4889c7	                            mov rdi, rax	      3319	dwarf2.c	FUNCTION_45	CALL_24
0x4006069	      0xe800000000	                          call 0x400606e	      3319	dwarf2.c	FUNCTION_45	CALL_24
0x400606e	      0xb800000000	                              mov eax, 0	      3320	dwarf2.c	FUNCTION_45
0x4006073	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3321	dwarf2.c	FUNCTION_45
0x4006077	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3321	dwarf2.c	FUNCTION_45
0x4006080	            0x7405	                            je 0x4006087	      3321	dwarf2.c	FUNCTION_45
0x4006082	      0xe800000000	                          call 0x4006087	      3321	dwarf2.c	FUNCTION_45
0x4006087	              0xc9	                                   leave	      3321	dwarf2.c	FUNCTION_45
0x4006088	              0xc3	                                     ret	      3321	dwarf2.c	FUNCTION_45
read_8_bytes	SWITCH,0:ELSE,0:CALL,1:IF,1:DO,0:WHILE,0:functions,0:FOR,0	20
0x40004e1	              0x55	                                push rbp	       619	dwarf2.c	FUNCTION_10
0x40004e2	          0x4889e5	                            mov rbp, rsp	       619	dwarf2.c	FUNCTION_10
0x40004e5	        0x4883ec20	                           sub rsp, 0x20	       619	dwarf2.c	FUNCTION_10
0x40004e9	        0x48897df8	                mov qword [rbp - 8], rdi	       619	dwarf2.c	FUNCTION_10
0x40004ed	        0x488975f0	             mov qword [rbp - 0x10], rsi	       619	dwarf2.c	FUNCTION_10
0x40004f1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       619	dwarf2.c	FUNCTION_10
0x40004f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       620	dwarf2.c	FUNCTION_10	IF_1
0x40004f9	        0x4883c008	                              add rax, 8	       620	dwarf2.c	FUNCTION_10	IF_1
0x40004fd	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4000501	            0x7607	                           jbe 0x400050a	       620	dwarf2.c	FUNCTION_10	IF_1
0x4000503	      0xb800000000	                              mov eax, 0	       621	dwarf2.c	FUNCTION_10	IF_1
0x4000508	            0xeb15	                           jmp 0x400051f	       621	dwarf2.c	FUNCTION_10	IF_1
0x400050a	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400050e	        0x488b4008	                mov rax, qword [rax + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4000512	        0x488b4020	            mov rax, qword [rax + 0x20] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4000516	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400051a	          0x4889d7	                            mov rdi, rdx	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400051d	            0xffd0	                                call rax	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400051f	              0xc9	                                   leave	       623	dwarf2.c	FUNCTION_10
0x4000520	              0xc3	                                     ret	       623	dwarf2.c	FUNCTION_10
sort_line_sequences	SWITCH,0:ELSE,0:CALL,5:IF,5:DO,0:WHILE,0:functions,0:FOR,2	218
0x4002600	              0x55	                                push rbp	      1756	dwarf2.c	FUNCTION_30
0x4002601	          0x4889e5	                            mov rbp, rsp	      1756	dwarf2.c	FUNCTION_30
0x4002604	        0x4883ec40	                           sub rsp, 0x40	      1756	dwarf2.c	FUNCTION_30
0x4002608	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1756	dwarf2.c	FUNCTION_30
0x400260c	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1760	dwarf2.c	FUNCTION_30
0x4002613	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1761	dwarf2.c	FUNCTION_30
0x4002617	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1761	dwarf2.c	FUNCTION_30
0x400261a	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1761	dwarf2.c	FUNCTION_30
0x400261d	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1764	dwarf2.c	FUNCTION_30	IF_1
0x4002621	            0x750a	                           jne 0x400262d	      1764	dwarf2.c	FUNCTION_30	IF_1
0x4002623	      0xb801000000	                              mov eax, 1	      1765	dwarf2.c	FUNCTION_30	IF_1
0x4002628	      0xe9f9020000	                           jmp 0x4002926	      1765	dwarf2.c	FUNCTION_30	IF_1
0x400262d	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1768	dwarf2.c	FUNCTION_30
0x4002630	          0x4889d0	                            mov rax, rdx	      1768	dwarf2.c	FUNCTION_30
0x4002633	        0x48c1e002	                              shl rax, 2	      1768	dwarf2.c	FUNCTION_30
0x4002637	          0x4801d0	                            add rax, rdx	      1768	dwarf2.c	FUNCTION_30
0x400263a	        0x48c1e003	                              shl rax, 3	      1768	dwarf2.c	FUNCTION_30
0x400263e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1768	dwarf2.c	FUNCTION_30
0x4002642	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002646	          0x488b00	                    mov rax, qword [rax]	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002649	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x400264d	          0x4889d6	                            mov rsi, rdx	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002650	          0x4889c7	                            mov rdi, rax	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002653	      0xe800000000	                          call 0x4002658	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002658	        0x488945f0	             mov qword [rbp - 0x10], rax	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x400265c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1770	dwarf2.c	FUNCTION_30	IF_2
0x4002661	            0x750a	                           jne 0x400266d	      1770	dwarf2.c	FUNCTION_30	IF_2
0x4002663	      0xb800000000	                              mov eax, 0	      1771	dwarf2.c	FUNCTION_30	IF_2
0x4002668	      0xe9b9020000	                           jmp 0x4002926	      1771	dwarf2.c	FUNCTION_30	IF_2
0x400266d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1774	dwarf2.c	FUNCTION_30
0x4002671	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1774	dwarf2.c	FUNCTION_30
0x4002675	        0x488945d8	             mov qword [rbp - 0x28], rax	      1774	dwarf2.c	FUNCTION_30
0x4002679	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x4002680	      0xe9ef000000	                           jmp 0x4002774	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x4002685	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1777	dwarf2.c	FUNCTION_30	FOR_1
0x4002689	        0x488945f8	                mov qword [rbp - 8], rax	      1777	dwarf2.c	FUNCTION_30	FOR_1
0x400268d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002692	            0x750f	                           jne 0x40026a3	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002694	      0xbef3060000	                          mov esi, 0x6f3	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002699	      0xbf00000000	                              mov edi, 0	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x400269e	      0xe800000000	                          call 0x40026a3	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x40026a3	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026a6	          0x4889d0	                            mov rax, rdx	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026a9	        0x48c1e002	                              shl rax, 2	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026ad	          0x4801d0	                            add rax, rdx	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026b0	        0x48c1e003	                              shl rax, 3	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026b4	          0x4889c2	                            mov rdx, rax	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026bb	          0x4801c2	                            add rdx, rax	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026c2	          0x488b00	                    mov rax, qword [rax]	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026c5	          0x488902	                    mov qword [rdx], rax	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x40026c8	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x40026cb	          0x4889d0	                            mov rax, rdx	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x40026ce	        0x48c1e002	                              shl rax, 2	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x40026d2	          0x4801d0	                            add rax, rdx	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x40026d5	        0x48c1e003	                              shl rax, 3	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x40026d9	          0x4889c2	                            mov rdx, rax	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x40026dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x40026e0	          0x4801d0	                            add rax, rdx	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x40026e3	    0x48c740080000	                  mov qword [rax + 8], 0	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x40026eb	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x40026ee	          0x4889d0	                            mov rax, rdx	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x40026f1	        0x48c1e002	                              shl rax, 2	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x40026f5	          0x4801d0	                            add rax, rdx	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x40026f8	        0x48c1e003	                              shl rax, 3	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x40026fc	          0x4889c2	                            mov rdx, rax	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x40026ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x4002703	          0x4801c2	                            add rdx, rax	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x4002706	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x400270a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x400270e	        0x48894210	             mov qword [rdx + 0x10], rax	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x4002712	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x4002715	          0x4889d0	                            mov rax, rdx	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x4002718	        0x48c1e002	                              shl rax, 2	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x400271c	          0x4801d0	                            add rax, rdx	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x400271f	        0x48c1e003	                              shl rax, 3	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x4002723	          0x4889c2	                            mov rdx, rax	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x4002726	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x400272a	          0x4801d0	                            add rax, rdx	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x400272d	    0x48c740180000	               mov qword [rax + 0x18], 0	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x4002735	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x4002738	          0x4889d0	                            mov rax, rdx	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x400273b	        0x48c1e002	                              shl rax, 2	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x400273f	          0x4801d0	                            add rax, rdx	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x4002742	        0x48c1e003	                              shl rax, 3	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x4002746	          0x4889c2	                            mov rdx, rax	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x4002749	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x400274d	          0x4801d0	                            add rax, rdx	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x4002750	    0x48c740200000	               mov qword [rax + 0x20], 0	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x4002758	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1785	dwarf2.c	FUNCTION_30	FOR_1
0x400275c	        0x488b4008	                mov rax, qword [rax + 8]	      1785	dwarf2.c	FUNCTION_30	FOR_1
0x4002760	        0x488945d8	             mov qword [rbp - 0x28], rax	      1785	dwarf2.c	FUNCTION_30	FOR_1
0x4002764	        0x488b45f8	                mov rax, qword [rbp - 8]	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x4002768	          0x4889c7	                            mov rdi, rax	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x400276b	      0xe800000000	                          call 0x4002770	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x4002770	        0x8345d001	               add dword [rbp - 0x30], 1	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x4002774	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x4002777	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x400277a	     0xf8205ffffff	                            jb 0x4002685	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x4002780	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002785	            0x740f	                            je 0x4002796	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002787	      0xbefc060000	                          mov esi, 0x6fc	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x400278c	      0xbf00000000	                              mov edi, 0	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002791	      0xe800000000	                          call 0x4002796	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002796	          0x8b75d0	             mov esi, dword [rbp - 0x30]	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002799	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x400279d	      0xb900000000	                              mov ecx, 0	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x40027a2	      0xba28000000	                           mov edx, 0x28	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x40027a7	          0x4889c7	                            mov rdi, rax	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x40027aa	      0xe800000000	                          call 0x40027af	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x40027af	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      1794	dwarf2.c	FUNCTION_30
0x40027b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1795	dwarf2.c	FUNCTION_30
0x40027ba	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1795	dwarf2.c	FUNCTION_30
0x40027be	        0x488b4008	                mov rax, qword [rax + 8]	      1795	dwarf2.c	FUNCTION_30
0x40027c2	        0x488945e0	             mov qword [rbp - 0x20], rax	      1795	dwarf2.c	FUNCTION_30
0x40027c6	    0xc745d0010000	               mov dword [rbp - 0x30], 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x40027cd	      0xe929010000	                           jmp 0x40028fb	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x40027d2	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027d5	          0x4889d0	                            mov rax, rdx	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027d8	        0x48c1e002	                              shl rax, 2	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027dc	          0x4801d0	                            add rax, rdx	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027df	        0x48c1e003	                              shl rax, 3	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027e3	          0x4889c2	                            mov rdx, rax	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027ea	          0x4801d0	                            add rax, rdx	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027ed	          0x488b00	                    mov rax, qword [rax]	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027f0	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027f4	            0x734f	                           jae 0x4002845	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40027f6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x40027f9	          0x4889d0	                            mov rax, rdx	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x40027fc	        0x48c1e002	                              shl rax, 2	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002800	          0x4801d0	                            add rax, rdx	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002803	        0x48c1e003	                              shl rax, 3	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002807	          0x4889c2	                            mov rdx, rax	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x400280a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x400280e	          0x4801d0	                            add rax, rdx	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002811	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002815	        0x488b4008	                mov rax, qword [rax + 8]	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002819	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x400281d	     0xf86d3000000	                           jbe 0x40028f6	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002823	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002826	          0x4889d0	                            mov rax, rdx	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002829	        0x48c1e002	                              shl rax, 2	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x400282d	          0x4801d0	                            add rax, rdx	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002830	        0x48c1e003	                              shl rax, 3	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002834	          0x4889c2	                            mov rdx, rax	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002837	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x400283b	          0x4801c2	                            add rdx, rax	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x400283e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002842	          0x488902	                    mov qword [rdx], rax	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002845	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4002848	          0x4889d0	                            mov rax, rdx	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x400284b	        0x48c1e002	                              shl rax, 2	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x400284f	          0x4801d0	                            add rax, rdx	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4002852	        0x48c1e003	                              shl rax, 3	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4002856	          0x4889c2	                            mov rdx, rax	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4002859	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x400285d	          0x4801d0	                            add rax, rdx	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4002860	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4002864	        0x488b4008	                mov rax, qword [rax + 8]	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4002868	        0x488945e0	             mov qword [rbp - 0x20], rax	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x400286c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1808	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x400286f	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1808	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002872	            0x767c	                           jbe 0x40028f0	      1808	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002874	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002877	          0x4889d0	                            mov rax, rdx	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x400287a	        0x48c1e002	                              shl rax, 2	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x400287e	          0x4801d0	                            add rax, rdx	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002881	        0x48c1e003	                              shl rax, 3	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002885	          0x4889c2	                            mov rdx, rax	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002888	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x400288c	        0x488d0c02	                    lea rcx, [rdx + rax]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002890	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002893	          0x4889d0	                            mov rax, rdx	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002896	        0x48c1e002	                              shl rax, 2	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x400289a	          0x4801d0	                            add rax, rdx	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x400289d	        0x48c1e003	                              shl rax, 3	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028a1	          0x4889c2	                            mov rdx, rax	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028a8	          0x4801d0	                            add rax, rdx	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028ab	          0x488b00	                    mov rax, qword [rax]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028ae	          0x488901	                    mov qword [rcx], rax	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028b1	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028b4	          0x4889d0	                            mov rax, rdx	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028b7	        0x48c1e002	                              shl rax, 2	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028bb	          0x4801d0	                            add rax, rdx	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028be	        0x48c1e003	                              shl rax, 3	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028c2	          0x4889c2	                            mov rdx, rax	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028c9	        0x488d0c02	                    lea rcx, [rdx + rax]	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028cd	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028d0	          0x4889d0	                            mov rax, rdx	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028d3	        0x48c1e002	                              shl rax, 2	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028d7	          0x4801d0	                            add rax, rdx	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028da	        0x48c1e003	                              shl rax, 3	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028de	          0x4889c2	                            mov rdx, rax	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028e5	          0x4801d0	                            add rax, rdx	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028e8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028ec	        0x48894110	             mov qword [rcx + 0x10], rax	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x40028f0	        0x8345d401	               add dword [rbp - 0x2c], 1	      1814	dwarf2.c	FUNCTION_30	FOR_2
0x40028f4	            0xeb01	                           jmp 0x40028f7	      1814	dwarf2.c	FUNCTION_30	FOR_2
0x40028f6	              0x90	                                     nop	      1802	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x40028f7	        0x8345d001	               add dword [rbp - 0x30], 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x40028fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x40028ff	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002902	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002905	     0xf87c7feffff	                            ja 0x40027d2	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x400290b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1817	dwarf2.c	FUNCTION_30
0x400290f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1817	dwarf2.c	FUNCTION_30
0x4002913	        0x48895030	             mov qword [rax + 0x30], rdx	      1817	dwarf2.c	FUNCTION_30
0x4002917	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1818	dwarf2.c	FUNCTION_30
0x400291b	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1818	dwarf2.c	FUNCTION_30
0x400291e	          0x895010	             mov dword [rax + 0x10], edx	      1818	dwarf2.c	FUNCTION_30
0x4002921	      0xb801000000	                              mov eax, 1	      1819	dwarf2.c	FUNCTION_30
0x4002926	              0xc9	                                   leave	      1820	dwarf2.c	FUNCTION_30
0x4002927	              0xc3	                                     ret	      1820	dwarf2.c	FUNCTION_30
_bfd_dwarf2_cleanup_debug_info	SWITCH,0:ELSE,0:CALL,21:IF,20:DO,0:WHILE,3:functions,0:FOR,2	233
0x4008cca	              0x55	                                push rbp	      4885	dwarf2.c	FUNCTION_70
0x4008ccb	          0x4889e5	                            mov rbp, rsp	      4885	dwarf2.c	FUNCTION_70
0x4008cce	        0x4883ec50	                           sub rsp, 0x50	      4885	dwarf2.c	FUNCTION_70
0x4008cd2	        0x48897db8	             mov qword [rbp - 0x48], rdi	      4885	dwarf2.c	FUNCTION_70
0x4008cd6	        0x488975b0	             mov qword [rbp - 0x50], rsi	      4885	dwarf2.c	FUNCTION_70
0x4008cda	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4886	dwarf2.c	FUNCTION_70
0x4008cde	          0x488b00	                    mov rax, qword [rax]	      4886	dwarf2.c	FUNCTION_70
0x4008ce1	        0x488945f0	             mov qword [rbp - 0x10], rax	      4886	dwarf2.c	FUNCTION_70
0x4008ce5	      0x48837db800	               cmp qword [rbp - 0x48], 0	      4889	dwarf2.c	FUNCTION_70	IF_1
0x4008cea	     0xf848d030000	                            je 0x400907d	      4889	dwarf2.c	FUNCTION_70	IF_1
0x4008cf0	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4889	dwarf2.c	FUNCTION_70	IF_1
0x4008cf5	     0xf8482030000	                            je 0x400907d	      4889	dwarf2.c	FUNCTION_70	IF_1
0x4008cfb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4008cff	          0x488b00	                    mov rax, qword [rax]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4008d02	        0x488945c8	             mov qword [rbp - 0x38], rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4008d06	      0xe998010000	                           jmp 0x4008ea3	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4008d0b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4894	dwarf2.c	FUNCTION_70	FOR_1
0x4008d0f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4894	dwarf2.c	FUNCTION_70	FOR_1
0x4008d13	        0x488945f8	                mov qword [rbp - 8], rax	      4894	dwarf2.c	FUNCTION_70	FOR_1
0x4008d17	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4895	dwarf2.c	FUNCTION_70	FOR_1
0x4008d1b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      4895	dwarf2.c	FUNCTION_70	FOR_1
0x4008d22	        0x488945d0	             mov qword [rbp - 0x30], rax	      4895	dwarf2.c	FUNCTION_70	FOR_1
0x4008d26	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x4008d2a	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x4008d31	        0x488945d8	             mov qword [rbp - 0x28], rax	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x4008d35	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d3d	            0xeb44	                           jmp 0x4008d83	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d3f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4901	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d43	    0x488d14c50000	                        lea rdx, [rax*8]	      4901	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4901	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d4f	          0x4801d0	                            add rax, rdx	      4901	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d52	          0x488b00	                    mov rax, qword [rax]	      4901	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d55	        0x488945e8	             mov qword [rbp - 0x18], rax	      4901	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d59	            0xeb1c	                           jmp 0x4008d77	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x4008d5b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4905	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1	CALL_1
0x4008d5f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4905	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1	CALL_1
0x4008d63	          0x4889c7	                            mov rdi, rax	      4905	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1	CALL_1
0x4008d66	      0xe800000000	                          call 0x4008d6b	      4905	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1	CALL_1
0x4008d6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4906	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x4008d6f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4906	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x4008d73	        0x488945e8	             mov qword [rbp - 0x18], rax	      4906	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x4008d77	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x4008d7c	            0x75dd	                           jne 0x4008d5b	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x4008d7e	      0x488345e001	               add qword [rbp - 0x20], 1	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d83	      0x48837de078	           cmp qword [rbp - 0x20], 0x78 	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d88	            0x76b5	                           jbe 0x4008d3f	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4008d8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x4008d8e	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x4008d92	          0x4885c0	                           test rax, rax	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x4008d95	     0xf8487000000	                            je 0x4008e22	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x4008d9b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x4008d9f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x4008da3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x4008da7	          0x4889c7	                            mov rdi, rax	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x4008daa	      0xe800000000	                          call 0x4008daf	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x4008daf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x4008db3	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x4008db7	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x4008dbb	          0x4889c7	                            mov rdi, rax	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x4008dbe	      0xe800000000	                          call 0x4008dc3	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x4008dc3	            0xeb5d	                           jmp 0x4008e22	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4008dc5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x4008dc9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x4008dcd	          0x4885c0	                           test rax, rax	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x4008dd0	            0x741c	                            je 0x4008dee	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x4008dd2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4920	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3	CALL_4
0x4008dd6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4920	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3	CALL_4
0x4008dda	          0x4889c7	                            mov rdi, rax	      4920	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3	CALL_4
0x4008ddd	      0xe800000000	                          call 0x4008de2	      4920	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3	CALL_4
0x4008de2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4921	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x4008de6	    0x48c740180000	               mov qword [rax + 0x18], 0	      4921	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x4008dee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x4008df2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x4008df6	          0x4885c0	                           test rax, rax	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x4008df9	            0x741c	                            je 0x4008e17	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x4008dfb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4926	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4	CALL_5
0x4008dff	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4926	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4	CALL_5
0x4008e03	          0x4889c7	                            mov rdi, rax	      4926	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4	CALL_5
0x4008e06	      0xe800000000	                          call 0x4008e0b	      4926	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4	CALL_5
0x4008e0b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4927	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x4008e0f	    0x48c740100000	               mov qword [rax + 0x10], 0	      4927	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x4008e17	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4929	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4008e1b	          0x488b00	                    mov rax, qword [rax]	      4929	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4008e1e	        0x488945d0	             mov qword [rbp - 0x30], rax	      4929	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4008e22	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4008e27	            0x759c	                           jne 0x4008dc5	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4008e29	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4008e2d	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4008e34	          0x4885c0	                           test rax, rax	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4008e37	            0x7458	                            je 0x4008e91	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4008e39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4934	dwarf2.c	FUNCTION_70	FOR_1	IF_5	CALL_6
0x4008e3d	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4934	dwarf2.c	FUNCTION_70	FOR_1	IF_5	CALL_6
0x4008e44	          0x4889c7	                            mov rdi, rax	      4934	dwarf2.c	FUNCTION_70	FOR_1	IF_5	CALL_6
0x4008e47	      0xe800000000	                          call 0x4008e4c	      4934	dwarf2.c	FUNCTION_70	FOR_1	IF_5	CALL_6
0x4008e4c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4008e50	    0x48c780880000	               mov qword [rax + 0x88], 0	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4008e5b	            0xeb34	                           jmp 0x4008e91	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4008e5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4008e61	        0x488b4008	                mov rax, qword [rax + 8]	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4008e65	          0x4885c0	                           test rax, rax	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4008e68	            0x741c	                            je 0x4008e86	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4008e6a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4942	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6	CALL_7
0x4008e6e	        0x488b4008	                mov rax, qword [rax + 8]	      4942	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6	CALL_7
0x4008e72	          0x4889c7	                            mov rdi, rax	      4942	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6	CALL_7
0x4008e75	      0xe800000000	                          call 0x4008e7a	      4942	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6	CALL_7
0x4008e7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4943	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4008e7e	    0x48c740080000	                  mov qword [rax + 8], 0	      4943	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4008e86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4946	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4008e8a	          0x488b00	                    mov rax, qword [rax]	      4946	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4008e8d	        0x488945d8	             mov qword [rbp - 0x28], rax	      4946	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4008e91	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4008e96	            0x75c5	                           jne 0x4008e5d	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4008e98	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4008e9c	          0x488b00	                    mov rax, qword [rax]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4008e9f	        0x488945c8	             mov qword [rbp - 0x38], rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4008ea3	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4008ea8	     0xf855dfeffff	                           jne 0x4008d0b	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4008eae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4950	dwarf2.c	FUNCTION_70	IF_7
0x4008eb2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4950	dwarf2.c	FUNCTION_70	IF_7
0x4008eb9	          0x4885c0	                           test rax, rax	      4950	dwarf2.c	FUNCTION_70	IF_7
0x4008ebc	            0x7413	                            je 0x4008ed1	      4950	dwarf2.c	FUNCTION_70	IF_7
0x4008ebe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4951	dwarf2.c	FUNCTION_70	CALL_8
0x4008ec2	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4951	dwarf2.c	FUNCTION_70	CALL_8
0x4008ec9	          0x4889c7	                            mov rdi, rax	      4951	dwarf2.c	FUNCTION_70	CALL_8
0x4008ecc	      0xe800000000	                          call 0x4008ed1	      4951	dwarf2.c	FUNCTION_70	CALL_8
0x4008ed1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4952	dwarf2.c	FUNCTION_70	IF_8
0x4008ed5	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      4952	dwarf2.c	FUNCTION_70	IF_8
0x4008edc	          0x4885c0	                           test rax, rax	      4952	dwarf2.c	FUNCTION_70	IF_8
0x4008edf	            0x7413	                            je 0x4008ef4	      4952	dwarf2.c	FUNCTION_70	IF_8
0x4008ee1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4953	dwarf2.c	FUNCTION_70	CALL_9
0x4008ee5	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      4953	dwarf2.c	FUNCTION_70	CALL_9
0x4008eec	          0x4889c7	                            mov rdi, rax	      4953	dwarf2.c	FUNCTION_70	CALL_9
0x4008eef	      0xe800000000	                          call 0x4008ef4	      4953	dwarf2.c	FUNCTION_70	CALL_9
0x4008ef4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4954	dwarf2.c	FUNCTION_70	IF_9
0x4008ef8	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      4954	dwarf2.c	FUNCTION_70	IF_9
0x4008eff	          0x4885c0	                           test rax, rax	      4954	dwarf2.c	FUNCTION_70	IF_9
0x4008f02	            0x7413	                            je 0x4008f17	      4954	dwarf2.c	FUNCTION_70	IF_9
0x4008f04	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4955	dwarf2.c	FUNCTION_70	CALL_10
0x4008f08	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      4955	dwarf2.c	FUNCTION_70	CALL_10
0x4008f0f	          0x4889c7	                            mov rdi, rax	      4955	dwarf2.c	FUNCTION_70	CALL_10
0x4008f12	      0xe800000000	                          call 0x4008f17	      4955	dwarf2.c	FUNCTION_70	CALL_10
0x4008f17	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4956	dwarf2.c	FUNCTION_70	IF_10
0x4008f1b	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4956	dwarf2.c	FUNCTION_70	IF_10
0x4008f22	          0x4885c0	                           test rax, rax	      4956	dwarf2.c	FUNCTION_70	IF_10
0x4008f25	            0x7413	                            je 0x4008f3a	      4956	dwarf2.c	FUNCTION_70	IF_10
0x4008f27	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4957	dwarf2.c	FUNCTION_70	CALL_11
0x4008f2b	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4957	dwarf2.c	FUNCTION_70	CALL_11
0x4008f32	          0x4889c7	                            mov rdi, rax	      4957	dwarf2.c	FUNCTION_70	CALL_11
0x4008f35	      0xe800000000	                          call 0x4008f3a	      4957	dwarf2.c	FUNCTION_70	CALL_11
0x4008f3a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4958	dwarf2.c	FUNCTION_70	IF_11
0x4008f3e	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      4958	dwarf2.c	FUNCTION_70	IF_11
0x4008f45	          0x4885c0	                           test rax, rax	      4958	dwarf2.c	FUNCTION_70	IF_11
0x4008f48	            0x7413	                            je 0x4008f5d	      4958	dwarf2.c	FUNCTION_70	IF_11
0x4008f4a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4959	dwarf2.c	FUNCTION_70	CALL_12
0x4008f4e	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      4959	dwarf2.c	FUNCTION_70	CALL_12
0x4008f55	          0x4889c7	                            mov rdi, rax	      4959	dwarf2.c	FUNCTION_70	CALL_12
0x4008f58	      0xe800000000	                          call 0x4008f5d	      4959	dwarf2.c	FUNCTION_70	CALL_12
0x4008f5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4960	dwarf2.c	FUNCTION_70	IF_12
0x4008f61	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      4960	dwarf2.c	FUNCTION_70	IF_12
0x4008f68	          0x4885c0	                           test rax, rax	      4960	dwarf2.c	FUNCTION_70	IF_12
0x4008f6b	            0x7413	                            je 0x4008f80	      4960	dwarf2.c	FUNCTION_70	IF_12
0x4008f6d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4961	dwarf2.c	FUNCTION_70	CALL_13
0x4008f71	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      4961	dwarf2.c	FUNCTION_70	CALL_13
0x4008f78	          0x4889c7	                            mov rdi, rax	      4961	dwarf2.c	FUNCTION_70	CALL_13
0x4008f7b	      0xe800000000	                          call 0x4008f80	      4961	dwarf2.c	FUNCTION_70	CALL_13
0x4008f80	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4962	dwarf2.c	FUNCTION_70	IF_13
0x4008f84	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      4962	dwarf2.c	FUNCTION_70	IF_13
0x4008f8b	          0x4885c0	                           test rax, rax	      4962	dwarf2.c	FUNCTION_70	IF_13
0x4008f8e	            0x7413	                            je 0x4008fa3	      4962	dwarf2.c	FUNCTION_70	IF_13
0x4008f90	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4963	dwarf2.c	FUNCTION_70	CALL_14
0x4008f94	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      4963	dwarf2.c	FUNCTION_70	CALL_14
0x4008f9b	          0x4889c7	                            mov rdi, rax	      4963	dwarf2.c	FUNCTION_70	CALL_14
0x4008f9e	      0xe800000000	                          call 0x4008fa3	      4963	dwarf2.c	FUNCTION_70	CALL_14
0x4008fa3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4964	dwarf2.c	FUNCTION_70	IF_14
0x4008fa7	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4964	dwarf2.c	FUNCTION_70	IF_14
0x4008fab	          0x4885c0	                           test rax, rax	      4964	dwarf2.c	FUNCTION_70	IF_14
0x4008fae	            0x7410	                            je 0x4008fc0	      4964	dwarf2.c	FUNCTION_70	IF_14
0x4008fb0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4965	dwarf2.c	FUNCTION_70	CALL_15
0x4008fb4	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4965	dwarf2.c	FUNCTION_70	CALL_15
0x4008fb8	          0x4889c7	                            mov rdi, rax	      4965	dwarf2.c	FUNCTION_70	CALL_15
0x4008fbb	      0xe800000000	                          call 0x4008fc0	      4965	dwarf2.c	FUNCTION_70	CALL_15
0x4008fc0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4008fc4	    0x8b8014010000	           mov eax, dword [rax + 0x114] 	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4008fca	            0x85c0	                           test eax, eax	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4008fcc	            0x7410	                            je 0x4008fde	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4008fce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4008fd2	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4008fd6	          0x4889c7	                            mov rdi, rax	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4008fd9	      0xe800000000	                          call 0x4008fde	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4008fde	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4968	dwarf2.c	FUNCTION_70	IF_16
0x4008fe2	        0x488b4050	            mov rax, qword [rax + 0x50] 	      4968	dwarf2.c	FUNCTION_70	IF_16
0x4008fe6	          0x4885c0	                           test rax, rax	      4968	dwarf2.c	FUNCTION_70	IF_16
0x4008fe9	            0x7410	                            je 0x4008ffb	      4968	dwarf2.c	FUNCTION_70	IF_16
0x4008feb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4969	dwarf2.c	FUNCTION_70	CALL_17
0x4008fef	        0x488b4050	            mov rax, qword [rax + 0x50] 	      4969	dwarf2.c	FUNCTION_70	CALL_17
0x4008ff3	          0x4889c7	                            mov rdi, rax	      4969	dwarf2.c	FUNCTION_70	CALL_17
0x4008ff6	      0xe800000000	                          call 0x4008ffb	      4969	dwarf2.c	FUNCTION_70	CALL_17
0x4008ffb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4970	dwarf2.c	FUNCTION_70	IF_17
0x4008fff	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4970	dwarf2.c	FUNCTION_70	IF_17
0x4009003	          0x4885c0	                           test rax, rax	      4970	dwarf2.c	FUNCTION_70	IF_17
0x4009006	            0x7410	                            je 0x4009018	      4970	dwarf2.c	FUNCTION_70	IF_17
0x4009008	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4971	dwarf2.c	FUNCTION_70	CALL_18
0x400900c	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4971	dwarf2.c	FUNCTION_70	CALL_18
0x4009010	          0x4889c7	                            mov rdi, rax	      4971	dwarf2.c	FUNCTION_70	CALL_18
0x4009013	      0xe800000000	                          call 0x4009018	      4971	dwarf2.c	FUNCTION_70	CALL_18
0x4009018	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4972	dwarf2.c	FUNCTION_70	IF_18
0x400901c	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      4972	dwarf2.c	FUNCTION_70	IF_18
0x4009023	          0x4885c0	                           test rax, rax	      4972	dwarf2.c	FUNCTION_70	IF_18
0x4009026	            0x7413	                            je 0x400903b	      4972	dwarf2.c	FUNCTION_70	IF_18
0x4009028	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4973	dwarf2.c	FUNCTION_70	CALL_19
0x400902c	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      4973	dwarf2.c	FUNCTION_70	CALL_19
0x4009033	          0x4889c7	                            mov rdi, rax	      4973	dwarf2.c	FUNCTION_70	CALL_19
0x4009036	      0xe800000000	                          call 0x400903b	      4973	dwarf2.c	FUNCTION_70	CALL_19
0x400903b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4974	dwarf2.c	FUNCTION_70	IF_19
0x400903f	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4974	dwarf2.c	FUNCTION_70	IF_19
0x4009046	          0x4885c0	                           test rax, rax	      4974	dwarf2.c	FUNCTION_70	IF_19
0x4009049	            0x7413	                            je 0x400905e	      4974	dwarf2.c	FUNCTION_70	IF_19
0x400904b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4975	dwarf2.c	FUNCTION_70	CALL_20
0x400904f	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4975	dwarf2.c	FUNCTION_70	CALL_20
0x4009056	          0x4889c7	                            mov rdi, rax	      4975	dwarf2.c	FUNCTION_70	CALL_20
0x4009059	      0xe800000000	                          call 0x400905e	      4975	dwarf2.c	FUNCTION_70	CALL_20
0x400905e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4976	dwarf2.c	FUNCTION_70	IF_20
0x4009062	        0x488b4048	            mov rax, qword [rax + 0x48] 	      4976	dwarf2.c	FUNCTION_70	IF_20
0x4009066	          0x4885c0	                           test rax, rax	      4976	dwarf2.c	FUNCTION_70	IF_20
0x4009069	            0x7413	                            je 0x400907e	      4976	dwarf2.c	FUNCTION_70	IF_20
0x400906b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4977	dwarf2.c	FUNCTION_70	CALL_21
0x400906f	        0x488b4048	            mov rax, qword [rax + 0x48] 	      4977	dwarf2.c	FUNCTION_70	CALL_21
0x4009073	          0x4889c7	                            mov rdi, rax	      4977	dwarf2.c	FUNCTION_70	CALL_21
0x4009076	      0xe800000000	                          call 0x400907b	      4977	dwarf2.c	FUNCTION_70	CALL_21
0x400907b	            0xeb01	                           jmp 0x400907e	      4977	dwarf2.c	FUNCTION_70	CALL_21
0x400907d	              0x90	                                     nop	      4890	dwarf2.c	FUNCTION_70	IF_1
0x400907e	              0xc9	                                   leave	      4978	dwarf2.c	FUNCTION_70
0x400907f	              0xc3	                                     ret	      4978	dwarf2.c	FUNCTION_70
read_1_signed_byte	SWITCH,0:ELSE,0:CALL,1:IF,1:DO,0:WHILE,0:functions,0:FOR,0	18
0x400042a	              0x55	                                push rbp	       595	dwarf2.c	FUNCTION_7
0x400042b	          0x4889e5	                            mov rbp, rsp	       595	dwarf2.c	FUNCTION_7
0x400042e	        0x48897df8	                mov qword [rbp - 8], rdi	       595	dwarf2.c	FUNCTION_7
0x4000432	        0x488975f0	             mov qword [rbp - 0x10], rsi	       595	dwarf2.c	FUNCTION_7
0x4000436	        0x488955e8	             mov qword [rbp - 0x18], rdx	       595	dwarf2.c	FUNCTION_7
0x400043a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       596	dwarf2.c	FUNCTION_7	IF_1
0x400043e	        0x4883c001	                              add rax, 1	       596	dwarf2.c	FUNCTION_7	IF_1
0x4000442	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       596	dwarf2.c	FUNCTION_7	IF_1
0x4000446	            0x7607	                           jbe 0x400044f	       596	dwarf2.c	FUNCTION_7	IF_1
0x4000448	      0xb800000000	                              mov eax, 0	       597	dwarf2.c	FUNCTION_7	IF_1
0x400044d	            0xeb10	                           jmp 0x400045f	       597	dwarf2.c	FUNCTION_7	IF_1
0x400044f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4000453	           0xfb600	                   movzx eax, byte [rax]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4000456	          0x83f080	                     xor eax, 0xffffff80	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4000459	           0xfb6c0	                           movzx eax, al	       598	dwarf2.c	FUNCTION_7	CALL_1
0x400045c	          0x83c080	             add eax, 0xffffffffffffff80	       598	dwarf2.c	FUNCTION_7	CALL_1
0x400045f	              0x5d	                                 pop rbp	       599	dwarf2.c	FUNCTION_7
0x4000460	              0xc3	                                     ret	       599	dwarf2.c	FUNCTION_7
section_vma_same	SWITCH,0:ELSE,1:CALL,0:IF,2:DO,0:WHILE,0:functions,0:FOR,1	45
0x4007a72	              0x55	                                push rbp	      4282	dwarf2.c	ELSE_1	FUNCTION_65
0x4007a73	          0x4889e5	                            mov rbp, rsp	      4282	dwarf2.c	ELSE_1	FUNCTION_65
0x4007a76	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4282	dwarf2.c	ELSE_1	FUNCTION_65
0x4007a7a	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4282	dwarf2.c	ELSE_1	FUNCTION_65
0x4007a7e	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007a85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007a89	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007a90	        0x488945f0	             mov qword [rbp - 0x10], rax	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007a94	            0xeb6b	                           jmp 0x4007b01	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007a96	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007a9a	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007a9e	          0x4885c0	                           test rax, rax	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007aa1	            0x741d	                            je 0x4007ac0	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007aa3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007aa7	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007aab	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007aaf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007ab3	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007ab7	          0x4801d0	                            add rax, rdx	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007aba	        0x488945f8	                mov qword [rbp - 8], rax	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007abe	            0xeb0c	                           jmp 0x4007acc	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4007ac0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4293	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1
0x4007ac4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4293	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1
0x4007ac8	        0x488945f8	                mov qword [rbp - 8], rax	      4293	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1
0x4007acc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4007ad0	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4007ad7	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4007ada	        0x48c1e203	                              shl rdx, 3	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4007ade	          0x4801d0	                            add rax, rdx	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4007ae1	          0x488b00	                    mov rax, qword [rax]	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4007ae4	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4007ae8	            0x7407	                            je 0x4007af1	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4007aea	      0xb800000000	                              mov eax, 0	      4295	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4007aef	            0xeb24	                           jmp 0x4007b15	      4295	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4007af1	        0x8345ec01	               add dword [rbp - 0x14], 1	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007af5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007af9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007afd	        0x488945f0	             mov qword [rbp - 0x10], rax	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007b01	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007b05	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007b0b	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007b0e	            0x7786	                            ja 0x4007a96	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4007b10	      0xb801000000	                              mov eax, 1	      4297	dwarf2.c	FUNCTION_65	ELSE_1
0x4007b15	              0x5d	                                 pop rbp	      4298	dwarf2.c	FUNCTION_65	ELSE_1
0x4007b16	              0xc3	                                     ret	      4298	dwarf2.c	FUNCTION_65	ELSE_1
_bfd_dwarf2_find_symbol_bias	SWITCH,0:ELSE,0:CALL,3:IF,6:DO,0:WHILE,0:functions,0:FOR,3	105
0x4008008	              0x55	                                push rbp	      4460	dwarf2.c	FUNCTION_67
0x4008009	          0x4889e5	                            mov rbp, rsp	      4460	dwarf2.c	FUNCTION_67
0x400800c	        0x4883ec40	                           sub rsp, 0x40	      4460	dwarf2.c	FUNCTION_67
0x4008010	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4460	dwarf2.c	FUNCTION_67
0x4008014	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4460	dwarf2.c	FUNCTION_67
0x4008018	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4464	dwarf2.c	FUNCTION_67
0x400801c	          0x488b00	                    mov rax, qword [rax]	      4464	dwarf2.c	FUNCTION_67
0x400801f	        0x488945f0	             mov qword [rbp - 0x10], rax	      4464	dwarf2.c	FUNCTION_67
0x4008023	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4466	dwarf2.c	FUNCTION_67	IF_1
0x4008028	            0x750a	                           jne 0x4008034	      4466	dwarf2.c	FUNCTION_67	IF_1
0x400802a	      0xb800000000	                              mov eax, 0	      4467	dwarf2.c	FUNCTION_67	IF_1
0x400802f	      0xe955010000	                           jmp 0x4008189	      4467	dwarf2.c	FUNCTION_67	IF_1
0x4008034	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4008038	          0x488b00	                    mov rax, qword [rax]	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x400803b	        0x488945d8	             mov qword [rbp - 0x28], rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x400803f	      0xe935010000	                           jmp 0x4008179	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4008044	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x4008048	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x400804f	          0x4885c0	                           test rax, rax	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x4008052	            0x7544	                           jne 0x4008098	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x4008054	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4475	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_3
0x4008058	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4475	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_3
0x400805c	          0x4885c0	                           test rax, rax	      4475	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_3
0x400805f	            0x751e	                           jne 0x400807f	      4475	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_3
0x4008061	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x4008065	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x4008069	          0x4889d6	                            mov rsi, rdx	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x400806c	          0x4889c7	                            mov rdi, rax	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x400806f	      0xe805afffff	               call sym.decode_line_info	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x4008074	          0x4889c2	                            mov rdx, rax	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x4008077	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x400807b	        0x48895078	             mov qword [rax + 0x78], rdx	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x400807f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
0x4008083	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
0x4008087	          0x4885c0	                           test rax, rax	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
0x400808a	            0x740c	                            je 0x4008098	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
0x400808c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4478	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_2
0x4008090	          0x4889c7	                            mov rdi, rax	      4478	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_2
0x4008093	      0xe850d6ffff	          call sym.scan_unit_for_symbols	      4478	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_2
0x4008098	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x400809c	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40080a3	        0x488945e0	             mov qword [rbp - 0x20], rax	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40080a7	      0xe9b7000000	                           jmp 0x4008163	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40080ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40080b0	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40080b4	          0x4885c0	                           test rax, rax	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40080b7	     0xf849b000000	                            je 0x4008158	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40080bd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40080c1	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40080c5	          0x4885c0	                           test rax, rax	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40080c8	     0xf848a000000	                            je 0x4008158	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40080ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40080d2	        0x488945e8	             mov qword [rbp - 0x18], rax	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40080d6	            0xeb74	                           jmp 0x400814c	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40080d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4490	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40080dc	          0x488b00	                    mov rax, qword [rax]	      4490	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40080df	        0x488945f8	                mov qword [rbp - 8], rax	      4490	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40080e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40080e7	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40080ea	          0x83e008	                              and eax, 8	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40080ed	            0x85c0	                           test eax, eax	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40080ef	            0x7456	                            je 0x4008147	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40080f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40080f5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40080f9	          0x4885c0	                           test rax, rax	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40080fc	            0x7449	                            je 0x4008147	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40080fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4008102	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4008106	        0x488b45f8	                mov rax, qword [rbp - 8]	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x400810a	        0x488b4008	                mov rax, qword [rax + 8]	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x400810e	          0x4889d6	                            mov rsi, rdx	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4008111	          0x4889c7	                            mov rdi, rax	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4008114	      0xe800000000	                          call 0x4008119	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4008119	            0x85c0	                           test eax, eax	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x400811b	            0x752a	                           jne 0x4008147	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x400811d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4008121	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4008125	          0x4889c1	                            mov rcx, rax	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4008128	        0x488b45f8	                mov rax, qword [rbp - 8]	      4496	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x400812c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4496	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4008130	        0x488b45f8	                mov rax, qword [rbp - 8]	      4496	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4008134	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4496	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4008138	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4496	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x400813c	          0x4801d0	                            add rax, rdx	      4496	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x400813f	          0x4829c1	                            sub rcx, rax	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4008142	          0x4889c8	                            mov rax, rcx	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4008145	            0xeb42	                           jmp 0x4008189	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4008147	      0x488345e808	               add qword [rbp - 0x18], 8	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x400814c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4008150	          0x488b00	                    mov rax, qword [rax]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4008153	          0x4885c0	                           test rax, rax	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4008156	            0x7580	                           jne 0x40080d8	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4008158	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x400815c	          0x488b00	                    mov rax, qword [rax]	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x400815f	        0x488945e0	             mov qword [rbp - 0x20], rax	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4008163	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4008168	     0xf853effffff	                           jne 0x40080ac	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x400816e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4008172	          0x488b00	                    mov rax, qword [rax]	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4008175	        0x488945d8	             mov qword [rbp - 0x28], rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4008179	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x400817e	     0xf85c0feffff	                           jne 0x4008044	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4008184	      0xb800000000	                              mov eax, 0	      4501	dwarf2.c	FUNCTION_67
0x4008189	              0xc9	                                   leave	      4502	dwarf2.c	FUNCTION_67
0x400818a	              0xc3	                                     ret	      4502	dwarf2.c	FUNCTION_67
lookup_symbol_in_function_table	SWITCH,0:ELSE,1:CALL,3:IF,2:DO,0:WHILE,0:functions,0:FOR,2	100
0x4004d0a	              0x55	                                push rbp	      2721	dwarf2.c	FUNCTION_41
0x4004d0b	          0x4889e5	                            mov rbp, rsp	      2721	dwarf2.c	FUNCTION_41
0x4004d0e	        0x4883ec60	                           sub rsp, 0x60	      2721	dwarf2.c	FUNCTION_41
0x4004d12	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2721	dwarf2.c	FUNCTION_41
0x4004d16	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2721	dwarf2.c	FUNCTION_41
0x4004d1a	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2721	dwarf2.c	FUNCTION_41
0x4004d1e	        0x48894db0	             mov qword [rbp - 0x50], rcx	      2721	dwarf2.c	FUNCTION_41
0x4004d22	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      2721	dwarf2.c	FUNCTION_41
0x4004d26	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2723	dwarf2.c	FUNCTION_41
0x4004d2e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2724	dwarf2.c	FUNCTION_41
0x4004d36	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2726	dwarf2.c	FUNCTION_41	CALL_1
0x4004d3a	        0x488b4008	                mov rax, qword [rax + 8]	      2726	dwarf2.c	FUNCTION_41	CALL_1
0x4004d3e	        0x488945f0	             mov qword [rbp - 0x10], rax	      2726	dwarf2.c	FUNCTION_41	CALL_1
0x4004d42	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2727	dwarf2.c	FUNCTION_41	CALL_2
0x4004d46	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2727	dwarf2.c	FUNCTION_41	CALL_2
0x4004d4a	        0x488945f8	                mov qword [rbp - 8], rax	      2727	dwarf2.c	FUNCTION_41	CALL_2
0x4004d4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4004d52	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4004d59	        0x488945d0	             mov qword [rbp - 0x30], rax	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4004d5d	      0xe9da000000	                           jmp 0x4004e3c	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4004d62	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4004d66	        0x4883c038	                           add rax, 0x38	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4004d6a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4004d6e	      0xe9b3000000	                           jmp 0x4004e26	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4004d73	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d77	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d7b	          0x4885c0	                           test rax, rax	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d7e	            0x7412	                            je 0x4004d92	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d80	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d84	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d88	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d8c	     0xf8589000000	                           jne 0x4004e1b	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2738	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d96	        0x488b4008	                mov rax, qword [rax + 8]	      2738	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d9a	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      2738	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004d9e	            0x777b	                            ja 0x4004e1b	      2738	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004da0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2739	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004da4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2739	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004da8	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      2739	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004dac	            0x766d	                           jbe 0x4004e1b	      2739	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004dae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2740	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004db2	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2740	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004db6	          0x4885c0	                           test rax, rax	      2740	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004db9	            0x7460	                            je 0x4004e1b	      2740	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004dbb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4004dbf	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4004dc3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4004dc7	          0x4889d6	                            mov rsi, rdx	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4004dca	          0x4889c7	                            mov rdi, rax	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4004dcd	      0xe800000000	                          call 0x4004dd2	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4004dd2	            0x85c0	                           test eax, eax	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4004dd4	            0x7545	                           jne 0x4004e1b	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4004dd6	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2742	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004ddb	            0x741c	                            je 0x4004df9	      2742	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004ddd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004de1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004de5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004de9	        0x488b4008	                mov rax, qword [rax + 8]	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004ded	          0x4829c2	                            sub rdx, rax	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004df0	          0x4889d0	                            mov rax, rdx	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004df3	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004df7	            0x7322	                           jae 0x4004e1b	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004df9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2745	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004dfd	        0x488945d8	             mov qword [rbp - 0x28], rax	      2745	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004e01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2746	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004e05	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2746	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004e09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2746	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004e0d	        0x488b4008	                mov rax, qword [rax + 8]	      2746	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004e11	          0x4829c2	                            sub rdx, rax	      2746	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004e14	          0x4889d0	                            mov rax, rdx	      2746	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004e17	        0x488945e0	             mov qword [rbp - 0x20], rax	      2746	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4004e1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2735	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4004e1f	          0x488b00	                    mov rax, qword [rax]	      2735	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4004e22	        0x488945e8	             mov qword [rbp - 0x18], rax	      2735	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4004e26	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4004e2b	     0xf8542ffffff	                           jne 0x4004d73	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4004e31	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2731	dwarf2.c	FUNCTION_41	FOR_1
0x4004e35	          0x488b00	                    mov rax, qword [rax]	      2731	dwarf2.c	FUNCTION_41	FOR_1
0x4004e38	        0x488945d0	             mov qword [rbp - 0x30], rax	      2731	dwarf2.c	FUNCTION_41	FOR_1
0x4004e3c	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4004e41	     0xf851bffffff	                           jne 0x4004d62	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4004e47	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2751	dwarf2.c	FUNCTION_41	IF_2
0x4004e4c	            0x7431	                            je 0x4004e7f	      2751	dwarf2.c	FUNCTION_41	IF_2
0x4004e4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2753	dwarf2.c	FUNCTION_41	IF_2
0x4004e52	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2753	dwarf2.c	FUNCTION_41	IF_2
0x4004e56	        0x48895050	             mov qword [rax + 0x50], rdx	      2753	dwarf2.c	FUNCTION_41	IF_2
0x4004e5a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2754	dwarf2.c	FUNCTION_41	IF_2
0x4004e5e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2754	dwarf2.c	FUNCTION_41	IF_2
0x4004e62	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2754	dwarf2.c	FUNCTION_41	IF_2
0x4004e66	          0x488910	                    mov qword [rax], rdx	      2754	dwarf2.c	FUNCTION_41	IF_2
0x4004e69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2755	dwarf2.c	FUNCTION_41	IF_2
0x4004e6d	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2755	dwarf2.c	FUNCTION_41	IF_2
0x4004e70	            0x89c2	                            mov edx, eax	      2755	dwarf2.c	FUNCTION_41	IF_2
0x4004e72	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2755	dwarf2.c	FUNCTION_41	IF_2
0x4004e76	            0x8910	                    mov dword [rax], edx	      2755	dwarf2.c	FUNCTION_41	IF_2
0x4004e78	      0xb801000000	                              mov eax, 1	      2756	dwarf2.c	FUNCTION_41	IF_2
0x4004e7d	            0xeb05	                           jmp 0x4004e84	      2756	dwarf2.c	FUNCTION_41	IF_2
0x4004e7f	      0xb800000000	                              mov eax, 0	      2759	dwarf2.c	FUNCTION_41	ELSE_1
0x4004e84	              0xc9	                                   leave	      2760	dwarf2.c	FUNCTION_41	ELSE_1
0x4004e85	              0xc3	                                     ret	      2760	dwarf2.c	FUNCTION_41	ELSE_1
stash_maybe_update_info_hash_tables	SWITCH,0:ELSE,1:CALL,1:IF,3:DO,0:WHILE,1:functions,0:FOR,0	51
0x4007560	              0x55	                                push rbp	      4117	dwarf2.c	FUNCTION_60
0x4007561	          0x4889e5	                            mov rbp, rsp	      4117	dwarf2.c	FUNCTION_60
0x4007564	        0x4883ec20	                           sub rsp, 0x20	      4117	dwarf2.c	FUNCTION_60
0x4007568	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4117	dwarf2.c	FUNCTION_60
0x400756c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4007570	          0x488b10	                    mov rdx, qword [rax]	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4007573	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4007577	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      4121	dwarf2.c	FUNCTION_60	IF_1
0x400757e	          0x4839c2	                            cmp rdx, rax	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4007581	            0x750a	                           jne 0x400758d	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4007583	      0xb801000000	                              mov eax, 1	      4122	dwarf2.c	FUNCTION_60	IF_1
0x4007588	      0xe99c000000	                           jmp 0x4007629	      4122	dwarf2.c	FUNCTION_60	IF_1
0x400758d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4124	dwarf2.c	FUNCTION_60	IF_2
0x4007591	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      4124	dwarf2.c	FUNCTION_60	IF_2
0x4007598	          0x4885c0	                           test rax, rax	      4124	dwarf2.c	FUNCTION_60	IF_2
0x400759b	            0x7415	                            je 0x40075b2	      4124	dwarf2.c	FUNCTION_60	IF_2
0x400759d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4125	dwarf2.c	FUNCTION_60	IF_2
0x40075a1	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      4125	dwarf2.c	FUNCTION_60	IF_2
0x40075a8	        0x488b4008	                mov rax, qword [rax + 8]	      4125	dwarf2.c	FUNCTION_60	IF_2
0x40075ac	        0x488945f8	                mov qword [rbp - 8], rax	      4125	dwarf2.c	FUNCTION_60	IF_2
0x40075b0	            0xeb59	                           jmp 0x400760b	      4125	dwarf2.c	FUNCTION_60	IF_2
0x40075b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4127	dwarf2.c	FUNCTION_60	ELSE_1
0x40075b6	        0x488b4008	                mov rax, qword [rax + 8]	      4127	dwarf2.c	FUNCTION_60	ELSE_1
0x40075ba	        0x488945f8	                mov qword [rbp - 8], rax	      4127	dwarf2.c	FUNCTION_60	ELSE_1
0x40075be	            0xeb4b	                           jmp 0x400760b	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x40075c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40075c4	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40075cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40075cf	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40075d6	        0x488b75f8	                mov rsi, qword [rbp - 8]	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40075da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40075de	          0x4889c7	                            mov rdi, rax	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40075e1	      0xe8dbf4ffff	            call sym.comp_unit_hash_info	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40075e6	            0x85c0	                           test eax, eax	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40075e8	            0x7515	                           jne 0x40075ff	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40075ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4134	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x40075ee	    0xc78010010000	              mov dword [rax + 0x110], 2	      4134	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x40075f8	      0xb800000000	                              mov eax, 0	      4135	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x40075fd	            0xeb2a	                           jmp 0x4007629	      4135	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x40075ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      4137	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4007603	        0x488b4008	                mov rax, qword [rax + 8]	      4137	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4007607	        0x488945f8	                mov qword [rbp - 8], rax	      4137	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x400760b	      0x48837df800	                  cmp qword [rbp - 8], 0	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4007610	            0x75ae	                           jne 0x40075c0	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4007612	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4140	dwarf2.c	FUNCTION_60
0x4007616	          0x488b10	                    mov rdx, qword [rax]	      4140	dwarf2.c	FUNCTION_60
0x4007619	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4140	dwarf2.c	FUNCTION_60
0x400761d	    0x488990080100	            mov qword [rax + 0x108], rdx	      4140	dwarf2.c	FUNCTION_60
0x4007624	      0xb801000000	                              mov eax, 1	      4141	dwarf2.c	FUNCTION_60
0x4007629	              0xc9	                                   leave	      4142	dwarf2.c	FUNCTION_60
0x400762a	              0xc3	                                     ret	      4142	dwarf2.c	FUNCTION_60
build_lookup_funcinfo_table	SWITCH,0:ELSE,1:CALL,3:IF,5:DO,0:WHILE,0:functions,0:FOR,3	136
0x400487f	              0x55	                                push rbp	      2565	dwarf2.c	FUNCTION_39
0x4004880	          0x4889e5	                            mov rbp, rsp	      2565	dwarf2.c	FUNCTION_39
0x4004883	        0x4883ec50	                           sub rsp, 0x50	      2565	dwarf2.c	FUNCTION_39
0x4004887	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2565	dwarf2.c	FUNCTION_39
0x400488b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2566	dwarf2.c	FUNCTION_39
0x400488f	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2566	dwarf2.c	FUNCTION_39
0x4004896	        0x488945f0	             mov qword [rbp - 0x10], rax	      2566	dwarf2.c	FUNCTION_39
0x400489a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2567	dwarf2.c	FUNCTION_39
0x400489e	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2567	dwarf2.c	FUNCTION_39
0x40048a5	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2567	dwarf2.c	FUNCTION_39
0x40048a8	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2574	dwarf2.c	FUNCTION_39	IF_1
0x40048ad	            0x7506	                           jne 0x40048b5	      2574	dwarf2.c	FUNCTION_39	IF_1
0x40048af	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2574	dwarf2.c	FUNCTION_39	IF_1
0x40048b3	            0x750a	                           jne 0x40048bf	      2574	dwarf2.c	FUNCTION_39	IF_1
0x40048b5	      0xb801000000	                              mov eax, 1	      2575	dwarf2.c	FUNCTION_39	IF_1
0x40048ba	      0xe9c8010000	                           jmp 0x4004a87	      2575	dwarf2.c	FUNCTION_39	IF_1
0x40048bf	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2579	dwarf2.c	FUNCTION_39	CALL_1
0x40048c2	          0x4889d0	                            mov rax, rdx	      2579	dwarf2.c	FUNCTION_39	CALL_1
0x40048c5	          0x4801c0	                            add rax, rax	      2579	dwarf2.c	FUNCTION_39	CALL_1
0x40048c8	          0x4801d0	                            add rax, rdx	      2579	dwarf2.c	FUNCTION_39	CALL_1
0x40048cb	        0x48c1e003	                              shl rax, 3	      2579	dwarf2.c	FUNCTION_39	CALL_1
0x40048cf	          0x4889c7	                            mov rdi, rax	      2578	dwarf2.c	FUNCTION_39
0x40048d2	      0xe800000000	                          call 0x40048d7	      2578	dwarf2.c	FUNCTION_39
0x40048d7	        0x488945f0	             mov qword [rbp - 0x10], rax	      2578	dwarf2.c	FUNCTION_39
0x40048db	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2580	dwarf2.c	FUNCTION_39	IF_2
0x40048e0	            0x750a	                           jne 0x40048ec	      2580	dwarf2.c	FUNCTION_39	IF_2
0x40048e2	      0xb800000000	                              mov eax, 0	      2581	dwarf2.c	FUNCTION_39	IF_2
0x40048e7	      0xe99b010000	                           jmp 0x4004a87	      2581	dwarf2.c	FUNCTION_39	IF_2
0x40048ec	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2584	dwarf2.c	FUNCTION_39
0x40048ef	        0x488945d0	             mov qword [rbp - 0x30], rax	      2584	dwarf2.c	FUNCTION_39
0x40048f3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x40048f7	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x40048fe	        0x488945c8	             mov qword [rbp - 0x38], rax	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4004902	      0xe9c7000000	                           jmp 0x40049ce	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4004907	      0x48836dd001	               sub qword [rbp - 0x30], 1	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x400490c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x4004910	          0x4889d0	                            mov rax, rdx	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x4004913	          0x4801c0	                            add rax, rax	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x4004916	          0x4801d0	                            add rax, rdx	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x4004919	        0x48c1e003	                              shl rax, 3	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x400491d	          0x4889c2	                            mov rdx, rax	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x4004920	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x4004924	          0x4801d0	                            add rax, rdx	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x4004927	        0x488945f8	                mov qword [rbp - 8], rax	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x400492b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2588	dwarf2.c	FUNCTION_39	FOR_1
0x400492f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2588	dwarf2.c	FUNCTION_39	FOR_1
0x4004933	          0x488910	                    mov qword [rax], rdx	      2588	dwarf2.c	FUNCTION_39	FOR_1
0x4004936	        0x488b45f8	                mov rax, qword [rbp - 8]	      2591	dwarf2.c	FUNCTION_39	FOR_1
0x400493a	          0x488b00	                    mov rax, qword [rax]	      2591	dwarf2.c	FUNCTION_39	FOR_1
0x400493d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2591	dwarf2.c	FUNCTION_39	FOR_1
0x4004941	        0x488945e0	             mov qword [rbp - 0x20], rax	      2591	dwarf2.c	FUNCTION_39	FOR_1
0x4004945	        0x488b45f8	                mov rax, qword [rbp - 8]	      2592	dwarf2.c	FUNCTION_39	FOR_1
0x4004949	          0x488b00	                    mov rax, qword [rax]	      2592	dwarf2.c	FUNCTION_39	FOR_1
0x400494c	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2592	dwarf2.c	FUNCTION_39	FOR_1
0x4004950	        0x488945e8	             mov qword [rbp - 0x18], rax	      2592	dwarf2.c	FUNCTION_39	FOR_1
0x4004954	        0x488b45f8	                mov rax, qword [rbp - 8]	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x4004958	          0x488b00	                    mov rax, qword [rax]	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x400495b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x400495f	        0x488945d8	             mov qword [rbp - 0x28], rax	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x4004963	            0xeb3f	                           jmp 0x40049a4	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x4004965	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2596	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4004969	        0x488b4008	                mov rax, qword [rax + 8]	      2596	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x400496d	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2596	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4004971	            0x730c	                           jae 0x400497f	      2596	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4004973	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2597	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4004977	        0x488b4008	                mov rax, qword [rax + 8]	      2597	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x400497b	        0x488945e0	             mov qword [rbp - 0x20], rax	      2597	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x400497f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2598	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4004983	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2598	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4004987	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      2598	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x400498b	            0x760c	                           jbe 0x4004999	      2598	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x400498d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2599	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4004991	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2599	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4004995	        0x488945e8	             mov qword [rbp - 0x18], rax	      2599	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4004999	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x400499d	          0x488b00	                    mov rax, qword [rax]	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x40049a0	        0x488945d8	             mov qword [rbp - 0x28], rax	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x40049a4	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x40049a9	            0x75ba	                           jne 0x4004965	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x40049ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      2602	dwarf2.c	FUNCTION_39	FOR_1
0x40049af	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2602	dwarf2.c	FUNCTION_39	FOR_1
0x40049b3	        0x48895008	                mov qword [rax + 8], rdx	      2602	dwarf2.c	FUNCTION_39	FOR_1
0x40049b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2603	dwarf2.c	FUNCTION_39	FOR_1
0x40049bb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2603	dwarf2.c	FUNCTION_39	FOR_1
0x40049bf	        0x48895010	             mov qword [rax + 0x10], rdx	      2603	dwarf2.c	FUNCTION_39	FOR_1
0x40049c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x40049c7	          0x488b00	                    mov rax, qword [rax]	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x40049ca	        0x488945c8	             mov qword [rbp - 0x38], rax	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x40049ce	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x40049d3	     0xf852effffff	                           jne 0x4004907	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x40049d9	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2606	dwarf2.c	FUNCTION_39	CALL_2
0x40049de	            0x740f	                            je 0x40049ef	      2606	dwarf2.c	FUNCTION_39	CALL_2
0x40049e0	      0xbe2e0a0000	                          mov esi, 0xa2e	      2606	dwarf2.c	FUNCTION_39	CALL_2
0x40049e5	      0xbf00000000	                              mov edi, 0	      2606	dwarf2.c	FUNCTION_39	CALL_2
0x40049ea	      0xe800000000	                          call 0x40049ef	      2606	dwarf2.c	FUNCTION_39	CALL_2
0x40049ef	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x40049f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x40049f6	      0xb900000000	                              mov ecx, 0	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x40049fb	      0xba18000000	                           mov edx, 0x18	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x4004a00	          0x4889c7	                            mov rdi, rax	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x4004a03	      0xe800000000	                          call 0x4004a08	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x4004a08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2615	dwarf2.c	FUNCTION_39
0x4004a0c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2615	dwarf2.c	FUNCTION_39
0x4004a10	        0x488945e8	             mov qword [rbp - 0x18], rax	      2615	dwarf2.c	FUNCTION_39
0x4004a14	    0x48c745d00100	               mov qword [rbp - 0x30], 1	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x4004a1c	            0xeb4c	                           jmp 0x4004a6a	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x4004a1e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2618	dwarf2.c	FUNCTION_39	FOR_3
0x4004a22	          0x4889d0	                            mov rax, rdx	      2618	dwarf2.c	FUNCTION_39	FOR_3
0x4004a25	          0x4801c0	                            add rax, rax	      2618	dwarf2.c	FUNCTION_39	FOR_3
0x4004a28	          0x4801d0	                            add rax, rdx	      2618	dwarf2.c	FUNCTION_39	FOR_3
0x4004a2b	        0x48c1e003	                              shl rax, 3	      2618	dwarf2.c	FUNCTION_39	FOR_3
0x4004a2f	          0x4889c2	                            mov rdx, rax	      2618	dwarf2.c	FUNCTION_39	FOR_3
0x4004a32	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2618	dwarf2.c	FUNCTION_39	FOR_3
0x4004a36	          0x4801d0	                            add rax, rdx	      2618	dwarf2.c	FUNCTION_39	FOR_3
0x4004a39	        0x488945f8	                mov qword [rbp - 8], rax	      2618	dwarf2.c	FUNCTION_39	FOR_3
0x4004a3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2619	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x4004a41	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2619	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x4004a45	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      2619	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x4004a49	            0x760e	                           jbe 0x4004a59	      2619	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x4004a4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2620	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x4004a4f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2620	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x4004a53	        0x488945e8	             mov qword [rbp - 0x18], rax	      2620	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x4004a57	            0xeb0c	                           jmp 0x4004a65	      2620	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x4004a59	        0x488b45f8	                mov rax, qword [rbp - 8]	      2622	dwarf2.c	FUNCTION_39	FOR_3	ELSE_1
0x4004a5d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2622	dwarf2.c	FUNCTION_39	FOR_3	ELSE_1
0x4004a61	        0x48895010	             mov qword [rax + 0x10], rdx	      2622	dwarf2.c	FUNCTION_39	FOR_3	ELSE_1
0x4004a65	      0x488345d001	               add qword [rbp - 0x30], 1	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x4004a6a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x4004a6d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x4004a71	            0x77ab	                            ja 0x4004a1e	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x4004a73	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2625	dwarf2.c	FUNCTION_39	ELSE_1
0x4004a77	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2625	dwarf2.c	FUNCTION_39	ELSE_1
0x4004a7b	    0x488990880000	             mov qword [rax + 0x88], rdx	      2625	dwarf2.c	FUNCTION_39	ELSE_1
0x4004a82	      0xb801000000	                              mov eax, 1	      2626	dwarf2.c	FUNCTION_39	ELSE_1
0x4004a87	              0xc9	                                   leave	      2627	dwarf2.c	FUNCTION_39	ELSE_1
0x4004a88	              0xc3	                                     ret	      2627	dwarf2.c	FUNCTION_39	ELSE_1
lookup_address_in_line_info_table	SWITCH,0:ELSE,4:CALL,1:IF,8:DO,0:WHILE,2:functions,0:FOR,0	171
0x400453a	              0x55	                                push rbp	      2469	dwarf2.c	FUNCTION_36
0x400453b	          0x4889e5	                            mov rbp, rsp	      2469	dwarf2.c	FUNCTION_36
0x400453e	        0x4883ec50	                           sub rsp, 0x50	      2469	dwarf2.c	FUNCTION_36
0x4004542	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2469	dwarf2.c	FUNCTION_36
0x4004546	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2469	dwarf2.c	FUNCTION_36
0x400454a	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2469	dwarf2.c	FUNCTION_36
0x400454e	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      2469	dwarf2.c	FUNCTION_36
0x4004552	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      2469	dwarf2.c	FUNCTION_36
0x4004556	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2470	dwarf2.c	FUNCTION_36
0x400455e	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2475	dwarf2.c	FUNCTION_36
0x4004565	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2476	dwarf2.c	FUNCTION_36
0x4004569	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2476	dwarf2.c	FUNCTION_36
0x400456c	          0x8945e8	             mov dword [rbp - 0x18], eax	      2476	dwarf2.c	FUNCTION_36
0x400456f	            0xeb67	                           jmp 0x40045d8	      2477	dwarf2.c	FUNCTION_36	WHILE_1
0x4004571	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x4004574	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x4004577	             0x1d0	                            add eax, edx	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x4004579	            0x89c2	                            mov edx, eax	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x400457b	          0xc1ea1f	                           shr edx, 0x1f	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x400457e	             0x1d0	                            add eax, edx	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x4004580	            0xd1f8	                              sar eax, 1	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x4004582	          0x8945ec	             mov dword [rbp - 0x14], eax	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x4004585	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x4004589	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x400458d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x4004590	          0x4863d0	                         movsxd rdx, eax	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x4004593	          0x4889d0	                            mov rax, rdx	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x4004596	        0x48c1e002	                              shl rax, 2	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x400459a	          0x4801d0	                            add rax, rdx	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x400459d	        0x48c1e003	                              shl rax, 3	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x40045a1	          0x4801c8	                            add rax, rcx	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x40045a4	        0x488945f0	             mov qword [rbp - 0x10], rax	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x40045a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2481	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x40045ac	          0x488b00	                    mov rax, qword [rax]	      2481	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x40045af	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2481	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x40045b3	            0x7608	                           jbe 0x40045bd	      2481	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x40045b5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2482	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x40045b8	          0x8945e8	             mov dword [rbp - 0x18], eax	      2482	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x40045bb	            0xeb1b	                           jmp 0x40045d8	      2482	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x40045bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2483	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x40045c1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2483	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x40045c5	        0x488b4008	                mov rax, qword [rax + 8]	      2483	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x40045c9	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2483	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x40045cd	            0x7713	                            ja 0x40045e2	      2483	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x40045cf	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2484	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x40045d2	          0x83c001	                              add eax, 1	      2484	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x40045d5	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2484	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x40045d8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2477	dwarf2.c	FUNCTION_36	WHILE_1
0x40045db	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      2477	dwarf2.c	FUNCTION_36	WHILE_1
0x40045de	            0x7c91	                            jl 0x4004571	      2477	dwarf2.c	FUNCTION_36	WHILE_1
0x40045e0	            0xeb01	                           jmp 0x40045e3	      2477	dwarf2.c	FUNCTION_36	WHILE_1
0x40045e2	              0x90	                                     nop	      2486	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_2
0x40045e3	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2490	dwarf2.c	FUNCTION_36	IF_3
0x40045e8	     0xf8487010000	                            je 0x4004775	      2490	dwarf2.c	FUNCTION_36	IF_3
0x40045ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2490	dwarf2.c	FUNCTION_36	IF_3
0x40045f2	          0x488b00	                    mov rax, qword [rax]	      2490	dwarf2.c	FUNCTION_36	IF_3
0x40045f5	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2490	dwarf2.c	FUNCTION_36	IF_3
0x40045f9	     0xf8776010000	                            ja 0x4004775	      2490	dwarf2.c	FUNCTION_36	IF_3
0x40045ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2490	dwarf2.c	FUNCTION_36	IF_3
0x4004603	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2490	dwarf2.c	FUNCTION_36	IF_3
0x4004607	        0x488b4008	                mov rax, qword [rax + 8]	      2490	dwarf2.c	FUNCTION_36	IF_3
0x400460b	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2490	dwarf2.c	FUNCTION_36	IF_3
0x400460f	     0xf8660010000	                           jbe 0x4004775	      2490	dwarf2.c	FUNCTION_36	IF_3
0x4004615	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2493	dwarf2.c	FUNCTION_36	IF_4	CALL_1
0x4004619	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2493	dwarf2.c	FUNCTION_36	IF_4	CALL_1
0x400461d	          0x4889d6	                            mov rsi, rdx	      2493	dwarf2.c	FUNCTION_36	IF_4	CALL_1
0x4004620	          0x4889c7	                            mov rdi, rax	      2493	dwarf2.c	FUNCTION_36	IF_4	CALL_1
0x4004623	      0xe8cddeffff	          call sym.build_line_info_table	      2493	dwarf2.c	FUNCTION_36	IF_4	CALL_1
0x4004628	            0x85c0	                           test eax, eax	      2493	dwarf2.c	FUNCTION_36	IF_4	CALL_1
0x400462a	     0xf8444010000	                            je 0x4004774	      2493	dwarf2.c	FUNCTION_36	IF_4	CALL_1
0x4004630	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2497	dwarf2.c	FUNCTION_36
0x4004637	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2498	dwarf2.c	FUNCTION_36
0x400463b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2498	dwarf2.c	FUNCTION_36
0x400463f	          0x8945e8	             mov dword [rbp - 0x18], eax	      2498	dwarf2.c	FUNCTION_36
0x4004642	    0x48c745f80000	                  mov qword [rbp - 8], 0	      2499	dwarf2.c	FUNCTION_36
0x400464a	            0xeb75	                           jmp 0x40046c1	      2500	dwarf2.c	FUNCTION_36	WHILE_2
0x400464c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x400464f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x4004652	             0x1d0	                            add eax, edx	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x4004654	            0x89c2	                            mov edx, eax	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x4004656	          0xc1ea1f	                           shr edx, 0x1f	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x4004659	             0x1d0	                            add eax, edx	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x400465b	            0xd1f8	                              sar eax, 1	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x400465d	          0x8945ec	             mov dword [rbp - 0x14], eax	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x4004660	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x4004664	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x4004668	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x400466b	          0x4863d2	                         movsxd rdx, edx	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x400466e	        0x48c1e203	                              shl rdx, 3	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x4004672	          0x4801d0	                            add rax, rdx	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x4004675	          0x488b00	                    mov rax, qword [rax]	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x4004678	        0x488945f8	                mov qword [rbp - 8], rax	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x400467c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2504	dwarf2.c	FUNCTION_36	WHILE_2	IF_5
0x4004680	        0x488b4008	                mov rax, qword [rax + 8]	      2504	dwarf2.c	FUNCTION_36	WHILE_2	IF_5
0x4004684	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2504	dwarf2.c	FUNCTION_36	WHILE_2	IF_5
0x4004688	            0x7608	                           jbe 0x4004692	      2504	dwarf2.c	FUNCTION_36	WHILE_2	IF_5
0x400468a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2505	dwarf2.c	FUNCTION_36	WHILE_2	IF_5
0x400468d	          0x8945e8	             mov dword [rbp - 0x18], eax	      2505	dwarf2.c	FUNCTION_36	WHILE_2	IF_5
0x4004690	            0xeb2f	                           jmp 0x40046c1	      2505	dwarf2.c	FUNCTION_36	WHILE_2	IF_5
0x4004692	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x4004696	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x400469a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x400469d	          0x4863d2	                         movsxd rdx, edx	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046a0	        0x4883c201	                              add rdx, 1	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046a4	        0x48c1e203	                              shl rdx, 3	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046a8	          0x4801d0	                            add rax, rdx	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046ab	          0x488b00	                    mov rax, qword [rax]	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046ae	        0x488b4008	                mov rax, qword [rax + 8]	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046b2	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046b6	            0x7713	                            ja 0x40046cb	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046b8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2507	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046bb	          0x83c001	                              add eax, 1	      2507	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046be	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2507	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x40046c1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2500	dwarf2.c	FUNCTION_36	WHILE_2
0x40046c4	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      2500	dwarf2.c	FUNCTION_36	WHILE_2
0x40046c7	            0x7c83	                            jl 0x400464c	      2500	dwarf2.c	FUNCTION_36	WHILE_2
0x40046c9	            0xeb01	                           jmp 0x40046cc	      2500	dwarf2.c	FUNCTION_36	WHILE_2
0x40046cb	              0x90	                                     nop	      2509	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_4
0x40046cc	      0x48837df800	                  cmp qword [rbp - 8], 0	      2513	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046d1	     0xf849e000000	                            je 0x4004775	      2513	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2514	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046db	        0x488b4008	                mov rax, qword [rax + 8]	      2514	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046df	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2514	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046e3	     0xf878c000000	                            ja 0x4004775	      2514	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046ed	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046f1	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046f4	          0x4863d2	                         movsxd rdx, edx	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046f7	        0x4883c201	                              add rdx, 1	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046fb	        0x48c1e203	                              shl rdx, 3	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40046ff	          0x4801d0	                            add rax, rdx	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004702	          0x488b00	                    mov rax, qword [rax]	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004705	        0x488b4008	                mov rax, qword [rax + 8]	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004709	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400470d	            0x7666	                           jbe 0x4004775	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400470f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004713	         0xfb64025	           movzx eax, byte [rax + 0x25] 	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004717	            0x84c0	                             test al, al	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004719	            0x755a	                           jne 0x4004775	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400471b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400471f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004723	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004727	            0x744c	                            je 0x4004775	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004729	        0x488b45f8	                mov rax, qword [rbp - 8]	      2518	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400472d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2518	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004731	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2518	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004735	          0x488910	                    mov qword [rax], rdx	      2518	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004738	        0x488b45f8	                mov rax, qword [rbp - 8]	      2519	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400473c	          0x8b5018	            mov edx, dword [rax + 0x18] 	      2519	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400473f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2519	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004743	            0x8910	                    mov dword [rax], edx	      2519	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004745	      0x48837db800	               cmp qword [rbp - 0x48], 0	      2520	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x400474a	            0x740d	                            je 0x4004759	      2520	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x400474c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2521	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x4004750	          0x8b5020	            mov edx, dword [rax + 0x20] 	      2521	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x4004753	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2521	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x4004757	            0x8910	                    mov dword [rax], edx	      2521	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x4004759	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400475d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004761	        0x488b5008	                mov rdx, qword [rax + 8]	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004765	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004769	          0x488b00	                    mov rax, qword [rax]	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400476c	          0x4829c2	                            sub rdx, rax	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400476f	          0x4889d0	                            mov rax, rdx	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004772	            0xeb11	                           jmp 0x4004785	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004774	              0x90	                                     nop	      2494	dwarf2.c	FUNCTION_36	IF_4
0x4004775	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2526	dwarf2.c	FUNCTION_36
0x4004779	    0x48c700000000	                      mov qword [rax], 0	      2526	dwarf2.c	FUNCTION_36
0x4004780	      0xb800000000	                              mov eax, 0	      2527	dwarf2.c	FUNCTION_36
0x4004785	              0xc9	                                   leave	      2528	dwarf2.c	FUNCTION_36
0x4004786	              0xc3	                                     ret	      2528	dwarf2.c	FUNCTION_36
read_indirect_string	SWITCH,0:ELSE,1:CALL,3:IF,5:DO,0:WHILE,0:functions,0:FOR,0	88
0x4000633	              0x55	                                push rbp	       696	dwarf2.c	FUNCTION_13
0x4000634	          0x4889e5	                            mov rbp, rsp	       696	dwarf2.c	FUNCTION_13
0x4000637	        0x4883ec40	                           sub rsp, 0x40	       696	dwarf2.c	FUNCTION_13
0x400063b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       696	dwarf2.c	FUNCTION_13
0x400063f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       696	dwarf2.c	FUNCTION_13
0x4000643	        0x488955c8	             mov qword [rbp - 0x38], rdx	       696	dwarf2.c	FUNCTION_13
0x4000647	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       696	dwarf2.c	FUNCTION_13
0x400064b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       698	dwarf2.c	FUNCTION_13
0x400064f	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       698	dwarf2.c	FUNCTION_13
0x4000656	        0x488945f0	             mov qword [rbp - 0x10], rax	       698	dwarf2.c	FUNCTION_13
0x400065a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       701	dwarf2.c	FUNCTION_13	IF_1
0x400065e	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	       701	dwarf2.c	FUNCTION_13	IF_1
0x4000665	           0xfb6d0	                           movzx edx, al	       701	dwarf2.c	FUNCTION_13	IF_1
0x4000668	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       701	dwarf2.c	FUNCTION_13	IF_1
0x400066c	          0x4801d0	                            add rax, rdx	       701	dwarf2.c	FUNCTION_13	IF_1
0x400066f	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       701	dwarf2.c	FUNCTION_13	IF_1
0x4000673	            0x7614	                           jbe 0x4000689	       701	dwarf2.c	FUNCTION_13	IF_1
0x4000675	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       703	dwarf2.c	FUNCTION_13	IF_1
0x4000679	    0xc70000000000	                      mov dword [rax], 0	       703	dwarf2.c	FUNCTION_13	IF_1
0x400067f	      0xb800000000	                              mov eax, 0	       704	dwarf2.c	FUNCTION_13	IF_1
0x4000684	      0xe9fb000000	                           jmp 0x4000784	       704	dwarf2.c	FUNCTION_13	IF_1
0x4000689	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       707	dwarf2.c	FUNCTION_13	IF_2
0x400068d	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	       707	dwarf2.c	FUNCTION_13	IF_2
0x4000694	            0x3c04	                               cmp al, 4	       707	dwarf2.c	FUNCTION_13	IF_2
0x4000696	            0x7523	                           jne 0x40006bb	       707	dwarf2.c	FUNCTION_13	IF_2
0x4000698	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       708	dwarf2.c	FUNCTION_13	CALL_1
0x400069c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       708	dwarf2.c	FUNCTION_13	CALL_1
0x40006a0	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       708	dwarf2.c	FUNCTION_13	CALL_1
0x40006a4	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       708	dwarf2.c	FUNCTION_13	CALL_1
0x40006a8	          0x4889ce	                            mov rsi, rcx	       708	dwarf2.c	FUNCTION_13	CALL_1
0x40006ab	          0x4889c7	                            mov rdi, rax	       708	dwarf2.c	FUNCTION_13	CALL_1
0x40006ae	      0xe8eefdffff	                   call sym.read_4_bytes	       708	dwarf2.c	FUNCTION_13	CALL_1
0x40006b3	            0x89c0	                            mov eax, eax	       708	dwarf2.c	FUNCTION_13	CALL_1
0x40006b5	        0x488945e8	             mov qword [rbp - 0x18], rax	       708	dwarf2.c	FUNCTION_13	CALL_1
0x40006b9	            0xeb1f	                           jmp 0x40006da	       708	dwarf2.c	FUNCTION_13	CALL_1
0x40006bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       710	dwarf2.c	FUNCTION_13	CALL_2
0x40006bf	        0x488b4010	            mov rax, qword [rax + 0x10] 	       710	dwarf2.c	FUNCTION_13	CALL_2
0x40006c3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       710	dwarf2.c	FUNCTION_13	CALL_2
0x40006c7	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       710	dwarf2.c	FUNCTION_13	CALL_2
0x40006cb	          0x4889ce	                            mov rsi, rcx	       710	dwarf2.c	FUNCTION_13	CALL_2
0x40006ce	          0x4889c7	                            mov rdi, rax	       710	dwarf2.c	FUNCTION_13	CALL_2
0x40006d1	      0xe80bfeffff	                   call sym.read_8_bytes	       710	dwarf2.c	FUNCTION_13	CALL_2
0x40006d6	        0x488945e8	             mov qword [rbp - 0x18], rax	       710	dwarf2.c	FUNCTION_13	CALL_2
0x40006da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       712	dwarf2.c	FUNCTION_13
0x40006de	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	       712	dwarf2.c	FUNCTION_13
0x40006e5	           0xfb6d0	                           movzx edx, al	       712	dwarf2.c	FUNCTION_13
0x40006e8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       712	dwarf2.c	FUNCTION_13
0x40006ec	            0x8910	                    mov dword [rax], edx	       712	dwarf2.c	FUNCTION_13
0x40006ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x40006f2	    0x4c8d80a80000	                    lea r8, [rax + 0xa8]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x40006f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x40006fd	    0x488db8a00000	                   lea rdi, [rax + 0xa0]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4000704	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4000708	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400070c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4000710	        0x488b4010	            mov rax, qword [rax + 0x10] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4000714	    0x488db0e00000	                   lea rsi, [rax + 0xe0]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400071b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400071f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4000723	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4000727	          0x4d89c1	                              mov r9, r8	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400072a	          0x4989f8	                             mov r8, rdi	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400072d	          0x4889c7	                            mov rdi, rax	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4000730	      0xe8c7faffff	                   call sym.read_section	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4000735	            0x85c0	                           test eax, eax	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4000737	            0x7507	                           jne 0x4000740	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4000739	      0xb800000000	                              mov eax, 0	       717	dwarf2.c	FUNCTION_13	IF_3
0x400073e	            0xeb44	                           jmp 0x4000784	       717	dwarf2.c	FUNCTION_13	IF_3
0x4000740	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       719	dwarf2.c	FUNCTION_13	IF_4
0x4000744	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       719	dwarf2.c	FUNCTION_13	IF_4
0x400074b	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       719	dwarf2.c	FUNCTION_13	IF_4
0x400074f	            0x7707	                            ja 0x4000758	       719	dwarf2.c	FUNCTION_13	IF_4
0x4000751	      0xb800000000	                              mov eax, 0	       720	dwarf2.c	FUNCTION_13	IF_4
0x4000756	            0xeb2c	                           jmp 0x4000784	       720	dwarf2.c	FUNCTION_13	IF_4
0x4000758	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       721	dwarf2.c	FUNCTION_13
0x400075c	    0x488b90a00000	            mov rdx, qword [rax + 0xa0] 	       721	dwarf2.c	FUNCTION_13
0x4000763	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       721	dwarf2.c	FUNCTION_13
0x4000767	          0x4801d0	                            add rax, rdx	       721	dwarf2.c	FUNCTION_13
0x400076a	        0x488945f8	                mov qword [rbp - 8], rax	       721	dwarf2.c	FUNCTION_13
0x400076e	        0x488b45f8	                mov rax, qword [rbp - 8]	       722	dwarf2.c	FUNCTION_13	IF_5
0x4000772	           0xfb600	                   movzx eax, byte [rax]	       722	dwarf2.c	FUNCTION_13	IF_5
0x4000775	            0x84c0	                             test al, al	       722	dwarf2.c	FUNCTION_13	IF_5
0x4000777	            0x7507	                           jne 0x4000780	       722	dwarf2.c	FUNCTION_13	IF_5
0x4000779	      0xb800000000	                              mov eax, 0	       723	dwarf2.c	FUNCTION_13	IF_5
0x400077e	            0xeb04	                           jmp 0x4000784	       723	dwarf2.c	FUNCTION_13	IF_5
0x4000780	        0x488b45f8	                mov rax, qword [rbp - 8]	       724	dwarf2.c	FUNCTION_13
0x4000784	              0xc9	                                   leave	       725	dwarf2.c	FUNCTION_13
0x4000785	              0xc3	                                     ret	       725	dwarf2.c	FUNCTION_13
read_attribute_value	SWITCH,1:ELSE,2:CALL,43:IF,9:DO,0:WHILE,0:functions,0:FOR,0	594
0x40012b1	              0x55	                                push rbp	      1092	dwarf2.c	FUNCTION_21
0x40012b2	          0x4889e5	                            mov rbp, rsp	      1092	dwarf2.c	FUNCTION_21
0x40012b5	        0x4883ec60	                           sub rsp, 0x60	      1092	dwarf2.c	FUNCTION_21
0x40012b9	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1092	dwarf2.c	FUNCTION_21
0x40012bd	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1092	dwarf2.c	FUNCTION_21
0x40012c0	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1092	dwarf2.c	FUNCTION_21
0x40012c4	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1092	dwarf2.c	FUNCTION_21
0x40012c8	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1092	dwarf2.c	FUNCTION_21
0x40012cc	        0x4c894da0	              mov qword [rbp - 0x60], r9	      1092	dwarf2.c	FUNCTION_21
0x40012d0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1092	dwarf2.c	FUNCTION_21
0x40012d9	        0x488945f8	                mov qword [rbp - 8], rax	      1092	dwarf2.c	FUNCTION_21
0x40012dd	            0x31c0	                            xor eax, eax	      1092	dwarf2.c	FUNCTION_21
0x40012df	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1093	dwarf2.c	FUNCTION_21
0x40012e3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1093	dwarf2.c	FUNCTION_21
0x40012e7	        0x488945e0	             mov qword [rbp - 0x20], rax	      1093	dwarf2.c	FUNCTION_21
0x40012eb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1098	dwarf2.c	FUNCTION_21	IF_1
0x40012ef	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      1098	dwarf2.c	FUNCTION_21	IF_1
0x40012f3	            0x7235	                            jb 0x400132a	      1098	dwarf2.c	FUNCTION_21	IF_1
0x40012f5	        0x837dc419	           cmp dword [rbp - 0x3c], 0x19 	      1098	dwarf2.c	FUNCTION_21	IF_1
0x40012f9	            0x742f	                            je 0x400132a	      1098	dwarf2.c	FUNCTION_21	IF_1
0x40012fb	      0xbe00000000	                              mov esi, 0	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4001300	      0xbf00000000	                              mov edi, 0	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4001305	      0xe800000000	                          call 0x400130a	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x400130a	          0x4889c7	                            mov rdi, rax	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x400130d	      0xb800000000	                              mov eax, 0	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4001312	      0xe800000000	                          call 0x4001317	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4001317	      0xbf11000000	                           mov edi, 0x11	      1101	dwarf2.c	FUNCTION_21	IF_1	CALL_3
0x400131c	      0xe800000000	                          call 0x4001321	      1101	dwarf2.c	FUNCTION_21	IF_1	CALL_3
0x4001321	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1102	dwarf2.c	FUNCTION_21	IF_1
0x4001325	      0xe998080000	                           jmp 0x4001bc2	      1102	dwarf2.c	FUNCTION_21	IF_1
0x400132a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1105	dwarf2.c	FUNCTION_21
0x400132e	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1105	dwarf2.c	FUNCTION_21
0x4001331	          0x895004	                mov dword [rax + 4], edx	      1105	dwarf2.c	FUNCTION_21
0x4001334	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001337	          0x83f810	                           cmp eax, 0x10	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400133a	     0xf842b010000	                            je 0x400146b	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001340	          0x83f810	                           cmp eax, 0x10	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001343	     0xf8786000000	                            ja 0x40013cf	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001349	          0x83f808	                              cmp eax, 8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400134c	     0xf84d8030000	                            je 0x400172a	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001352	          0x83f808	                              cmp eax, 8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001355	            0x773c	                            ja 0x4001393	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001357	          0x83f804	                              cmp eax, 4	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400135a	     0xf84c8020000	                            je 0x4001628	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001360	          0x83f804	                              cmp eax, 4	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001363	            0x7717	                            ja 0x400137c	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001365	          0x83f801	                              cmp eax, 1	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001368	     0xf848e010000	                            je 0x40014fc	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400136e	          0x83f803	                              cmp eax, 3	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001371	     0xf8431020000	                            je 0x40015a8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001377	      0xe90d080000	                           jmp 0x4001b89	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400137c	          0x83f806	                              cmp eax, 6	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400137f	     0xf844e030000	                            je 0x40016d3	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001385	          0x83f806	                              cmp eax, 6	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001388	     0xf8770030000	                            ja 0x40016fe	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400138e	      0xe915030000	                           jmp 0x40016a8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001393	          0x83f80c	                            cmp eax, 0xc	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001396	     0xf848a050000	                            je 0x4001926	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400139c	          0x83f80c	                            cmp eax, 0xc	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400139f	            0x7717	                            ja 0x40013b8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013a1	          0x83f80a	                            cmp eax, 0xa	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013a4	     0xf84d1040000	                            je 0x400187b	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013aa	          0x83f80a	                            cmp eax, 0xa	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013ad	     0xf8748050000	                            ja 0x40018fb	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013b3	      0xe936040000	                           jmp 0x40017ee	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013b8	          0x83f80e	                            cmp eax, 0xe	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013bb	     0xf849a030000	                            je 0x400175b	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013c1	          0x83f80e	                            cmp eax, 0xe	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013c4	     0xf87d1050000	                            ja 0x400199b	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013ca	      0xe993050000	                           jmp 0x4001962	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013cf	          0x83f817	                           cmp eax, 0x17	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013d2	     0xf845d010000	                            je 0x4001535	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013d8	          0x83f817	                           cmp eax, 0x17	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013db	            0x773c	                            ja 0x4001419	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013dd	          0x83f813	                           cmp eax, 0x13	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013e0	     0xf8444060000	                            je 0x4001a2a	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013e6	          0x83f813	                           cmp eax, 0x13	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013e9	            0x7717	                            ja 0x4001402	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013eb	          0x83f811	                           cmp eax, 0x11	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013ee	     0xf84e0050000	                            je 0x40019d4	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013f4	          0x83f812	                           cmp eax, 0x12	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013f7	     0xf8402060000	                            je 0x40019ff	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013fd	      0xe987070000	                           jmp 0x4001b89	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001402	          0x83f815	                           cmp eax, 0x15	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001405	     0xf84a2060000	                            je 0x4001aad	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400140b	          0x83f815	                           cmp eax, 0x15	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400140e	     0xf87d2060000	                            ja 0x4001ae6	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001414	      0xe93c060000	                           jmp 0x4001a55	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001419	          0x83f820	                           cmp eax, 0x20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400141c	     0xf845f060000	                            je 0x4001a81	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001422	          0x83f820	                           cmp eax, 0x20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001425	            0x7720	                            ja 0x4001447	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001427	          0x83f819	                           cmp eax, 0x19	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400142a	     0xf8421050000	                            je 0x4001951	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001430	          0x83f819	                           cmp eax, 0x19	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001433	     0xf82b5030000	                            jb 0x40017ee	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001439	          0x83f81f	                           cmp eax, 0x1f	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400143c	     0xf844a030000	                            je 0x400178c	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001442	      0xe942070000	                           jmp 0x4001b89	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001447	      0x3d201f0000	                         cmp eax, 0x1f20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400144c	     0xf84e3000000	                            je 0x4001535	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001452	      0x3d211f0000	                         cmp eax, 0x1f21	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001457	     0xf8460030000	                            je 0x40017bd	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400145d	          0x83f821	                           cmp eax, 0x21	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001460	     0xf840a070000	                            je 0x4001b70	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001466	      0xe91e070000	                           jmp 0x4001b89	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400146b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x400146f	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001475	          0x83f803	                              cmp eax, 3	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001478	            0x740f	                            je 0x4001489	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x400147a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x400147e	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001484	          0x83f804	                              cmp eax, 4	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001487	            0x7573	                           jne 0x40014fc	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001489	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1114	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	IF_3
0x400148d	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	      1114	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	IF_3
0x4001494	            0x3c04	                               cmp al, 4	      1114	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	IF_3
0x4001496	            0x7527	                           jne 0x40014bf	      1114	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	IF_3
0x4001498	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x400149c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x40014a0	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x40014a4	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x40014a8	          0x4889ce	                            mov rsi, rcx	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x40014ab	          0x4889c7	                            mov rdi, rax	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x40014ae	      0xe8eeefffff	                   call sym.read_4_bytes	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x40014b3	            0x89c2	                            mov edx, eax	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x40014b5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x40014b9	        0x48895008	                mov qword [rax + 8], rdx	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x40014bd	            0xeb26	                           jmp 0x40014e5	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x40014bf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x40014c3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x40014c7	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x40014cb	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x40014cf	          0x4889ce	                            mov rsi, rcx	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x40014d2	          0x4889c7	                            mov rdi, rax	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x40014d5	      0xe807f0ffff	                   call sym.read_8_bytes	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x40014da	          0x4889c2	                            mov rdx, rax	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x40014dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x40014e1	        0x48895008	                mov qword [rax + 8], rdx	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x40014e5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1118	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x40014e9	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	      1118	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x40014f0	           0xfb6c0	                           movzx eax, al	      1118	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x40014f3	        0x480145a8	            add qword [rbp - 0x58], rax 	      1118	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x40014f7	      0xe9c2060000	                           jmp 0x4001bbe	      1119	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x40014fc	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001500	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001504	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001508	          0x4889ce	                            mov rsi, rcx	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x400150b	          0x4889c7	                            mov rdi, rax	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x400150e	      0xe8ebf6ffff	                   call sym.read_address	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001513	          0x4889c2	                            mov rdx, rax	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001516	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x400151a	        0x48895008	                mov qword [rax + 8], rdx	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x400151e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001522	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001529	           0xfb6c0	                           movzx eax, al	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x400152c	        0x480145a8	            add qword [rbp - 0x58], rax 	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001530	      0xe989060000	                           jmp 0x4001bbe	      1125	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001535	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x4001539	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x4001540	            0x3c04	                               cmp al, 4	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x4001542	            0x7527	                           jne 0x400156b	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x4001544	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001548	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x400154c	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001550	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001554	          0x4889ce	                            mov rsi, rcx	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001557	          0x4889c7	                            mov rdi, rax	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x400155a	      0xe842efffff	                   call sym.read_4_bytes	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x400155f	            0x89c2	                            mov edx, eax	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001561	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001565	        0x48895008	                mov qword [rax + 8], rdx	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001569	            0xeb26	                           jmp 0x4001591	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x400156b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x400156f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001573	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001577	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x400157b	          0x4889ce	                            mov rsi, rcx	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x400157e	          0x4889c7	                            mov rdi, rax	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001581	      0xe85befffff	                   call sym.read_8_bytes	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001586	          0x4889c2	                            mov rdx, rax	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001589	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x400158d	        0x48895008	                mov qword [rax + 8], rdx	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001591	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001595	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x400159c	           0xfb6c0	                           movzx eax, al	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x400159f	        0x480145a8	            add qword [rbp - 0x58], rax 	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x40015a3	      0xe916060000	                           jmp 0x4001bbe	      1133	dwarf2.c	FUNCTION_21	SWITCH_1
0x40015a8	    0x48c745e81000	           mov qword [rbp - 0x18], 0x10 	      1135	dwarf2.c	FUNCTION_21	SWITCH_1
0x40015b0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40015b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40015b8	          0x4889d6	                            mov rsi, rdx	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40015bb	          0x4889c7	                            mov rdi, rax	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40015be	      0xe800000000	                          call 0x40015c3	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40015c3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40015c7	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1137	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x40015cc	            0x750a	                           jne 0x40015d8	      1137	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x40015ce	      0xb800000000	                              mov eax, 0	      1138	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x40015d3	      0xe9ea050000	                           jmp 0x4001bc2	      1138	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x40015d8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40015dc	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40015e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40015e4	          0x4889ce	                            mov rsi, rcx	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40015e7	          0x4889c7	                            mov rdi, rax	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40015ea	      0xe872eeffff	                   call sym.read_2_bytes	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40015ef	            0x89c2	                            mov edx, eax	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40015f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40015f5	            0x8910	                    mov dword [rax], edx	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40015f7	      0x488345a802	               add qword [rbp - 0x58], 2	      1140	dwarf2.c	FUNCTION_21	SWITCH_1
0x40015fc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1141	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_11
0x4001600	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1141	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_11
0x4001604	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1141	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_11
0x4001608	          0x4889ce	                            mov rsi, rcx	      1141	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_11
0x400160b	          0x4889c7	                            mov rdi, rax	      1141	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_11
0x400160e	      0xe80eefffff	                   call sym.read_n_bytes	      1141	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_11
0x4001613	        0x488945a8	             mov qword [rbp - 0x58], rax	      1141	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_11
0x4001617	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1142	dwarf2.c	FUNCTION_21	SWITCH_1
0x400161b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1142	dwarf2.c	FUNCTION_21	SWITCH_1
0x400161f	        0x48895008	                mov qword [rax + 8], rdx	      1142	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001623	      0xe996050000	                           jmp 0x4001bbe	      1143	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001628	    0x48c745e81000	           mov qword [rbp - 0x18], 0x10 	      1145	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001630	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001634	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001638	          0x4889d6	                            mov rsi, rdx	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x400163b	          0x4889c7	                            mov rdi, rax	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x400163e	      0xe800000000	                          call 0x4001643	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001643	        0x488945f0	             mov qword [rbp - 0x10], rax	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001647	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1147	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x400164c	            0x750a	                           jne 0x4001658	      1147	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x400164e	      0xb800000000	                              mov eax, 0	      1148	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x4001653	      0xe96a050000	                           jmp 0x4001bc2	      1148	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x4001658	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x400165c	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4001660	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4001664	          0x4889ce	                            mov rsi, rcx	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4001667	          0x4889c7	                            mov rdi, rax	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x400166a	      0xe832eeffff	                   call sym.read_4_bytes	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x400166f	            0x89c2	                            mov edx, eax	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4001671	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4001675	            0x8910	                    mov dword [rax], edx	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4001677	      0x488345a804	               add qword [rbp - 0x58], 4	      1150	dwarf2.c	FUNCTION_21	SWITCH_1
0x400167c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1151	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_14
0x4001680	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1151	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_14
0x4001684	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1151	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_14
0x4001688	          0x4889ce	                            mov rsi, rcx	      1151	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_14
0x400168b	          0x4889c7	                            mov rdi, rax	      1151	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_14
0x400168e	      0xe88eeeffff	                   call sym.read_n_bytes	      1151	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_14
0x4001693	        0x488945a8	             mov qword [rbp - 0x58], rax	      1151	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_14
0x4001697	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1152	dwarf2.c	FUNCTION_21	SWITCH_1
0x400169b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1152	dwarf2.c	FUNCTION_21	SWITCH_1
0x400169f	        0x48895008	                mov qword [rax + 8], rdx	      1152	dwarf2.c	FUNCTION_21	SWITCH_1
0x40016a3	      0xe916050000	                           jmp 0x4001bbe	      1153	dwarf2.c	FUNCTION_21	SWITCH_1
0x40016a8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x40016ac	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x40016b0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x40016b4	          0x4889ce	                            mov rsi, rcx	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x40016b7	          0x4889c7	                            mov rdi, rax	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x40016ba	      0xe8a2edffff	                   call sym.read_2_bytes	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x40016bf	            0x89c2	                            mov edx, eax	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x40016c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x40016c5	        0x48895008	                mov qword [rax + 8], rdx	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x40016c9	      0x488345a802	               add qword [rbp - 0x58], 2	      1156	dwarf2.c	FUNCTION_21	SWITCH_1
0x40016ce	      0xe9eb040000	                           jmp 0x4001bbe	      1157	dwarf2.c	FUNCTION_21	SWITCH_1
0x40016d3	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x40016d7	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x40016db	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x40016df	          0x4889ce	                            mov rsi, rcx	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x40016e2	          0x4889c7	                            mov rdi, rax	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x40016e5	      0xe8b7edffff	                   call sym.read_4_bytes	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x40016ea	            0x89c2	                            mov edx, eax	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x40016ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x40016f0	        0x48895008	                mov qword [rax + 8], rdx	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x40016f4	      0x488345a804	               add qword [rbp - 0x58], 4	      1160	dwarf2.c	FUNCTION_21	SWITCH_1
0x40016f9	      0xe9c0040000	                           jmp 0x4001bbe	      1161	dwarf2.c	FUNCTION_21	SWITCH_1
0x40016fe	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x4001702	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x4001706	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x400170a	          0x4889ce	                            mov rsi, rcx	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x400170d	          0x4889c7	                            mov rdi, rax	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x4001710	      0xe8ccedffff	                   call sym.read_8_bytes	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x4001715	          0x4889c2	                            mov rdx, rax	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x4001718	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x400171c	        0x48895008	                mov qword [rax + 8], rdx	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x4001720	      0x488345a808	               add qword [rbp - 0x58], 8	      1164	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001725	      0xe994040000	                           jmp 0x4001bbe	      1165	dwarf2.c	FUNCTION_21	SWITCH_1
0x400172a	        0x488d4ddc	                   lea rcx, [rbp - 0x24]	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x400172e	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x4001732	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x4001736	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x400173a	          0x4889c7	                            mov rdi, rax	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x400173d	      0xe848eeffff	                    call sym.read_string	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x4001742	          0x4889c2	                            mov rdx, rax	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x4001745	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x4001749	        0x48895008	                mov qword [rax + 8], rdx	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x400174d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1168	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001750	            0x89c0	                            mov eax, eax	      1168	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001752	        0x480145a8	            add qword [rbp - 0x58], rax 	      1168	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001756	      0xe963040000	                           jmp 0x4001bbe	      1169	dwarf2.c	FUNCTION_21	SWITCH_1
0x400175b	        0x488d4ddc	                   lea rcx, [rbp - 0x24]	      1171	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_19
0x400175f	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1171	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_19
0x4001763	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1171	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_19
0x4001767	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1171	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_19
0x400176b	          0x4889c7	                            mov rdi, rax	      1171	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_19
0x400176e	      0xe8c0eeffff	           call sym.read_indirect_string	      1171	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_19
0x4001773	          0x4889c2	                            mov rdx, rax	      1171	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_19
0x4001776	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1171	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_19
0x400177a	        0x48895008	                mov qword [rax + 8], rdx	      1171	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_19
0x400177e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1172	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001781	            0x89c0	                            mov eax, eax	      1172	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001783	        0x480145a8	            add qword [rbp - 0x58], rax 	      1172	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001787	      0xe932040000	                           jmp 0x4001bbe	      1173	dwarf2.c	FUNCTION_21	SWITCH_1
0x400178c	        0x488d4ddc	                   lea rcx, [rbp - 0x24]	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x4001790	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x4001794	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x4001798	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x400179c	          0x4889c7	                            mov rdi, rax	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x400179f	      0xe8e2efffff	      call sym.read_indirect_line_string	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x40017a4	          0x4889c2	                            mov rdx, rax	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x40017a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x40017ab	        0x48895008	                mov qword [rax + 8], rdx	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x40017af	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1176	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017b2	            0x89c0	                            mov eax, eax	      1176	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017b4	        0x480145a8	            add qword [rbp - 0x58], rax 	      1176	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017b8	      0xe901040000	                           jmp 0x4001bbe	      1177	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017bd	        0x488d4ddc	                   lea rcx, [rbp - 0x24]	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x40017c1	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x40017c5	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x40017c9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x40017cd	          0x4889c7	                            mov rdi, rax	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x40017d0	      0xe804f1ffff	       call sym.read_alt_indirect_string	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x40017d5	          0x4889c2	                            mov rdx, rax	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x40017d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x40017dc	        0x48895008	                mov qword [rax + 8], rdx	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x40017e0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1180	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017e3	            0x89c0	                            mov eax, eax	      1180	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017e5	        0x480145a8	            add qword [rbp - 0x58], rax 	      1180	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017e9	      0xe9d0030000	                           jmp 0x4001bbe	      1181	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017ee	    0x48c745e81000	           mov qword [rbp - 0x18], 0x10 	      1184	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017f6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x40017fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x40017fe	          0x4889d6	                            mov rsi, rdx	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x4001801	          0x4889c7	                            mov rdi, rax	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x4001804	      0xe800000000	                          call 0x4001809	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x4001809	        0x488945f0	             mov qword [rbp - 0x10], rax	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x400180d	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1186	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x4001812	            0x750a	                           jne 0x400181e	      1186	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x4001814	      0xb800000000	                              mov eax, 0	      1187	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x4001819	      0xe9a4030000	                           jmp 0x4001bc2	      1187	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x400181e	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001822	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001826	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x400182a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x400182e	          0x4989c8	                             mov r8, rcx	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001831	      0xb900000000	                              mov ecx, 0	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001836	          0x4889c7	                            mov rdi, rax	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001839	      0xe800000000	                          call 0x400183e	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x400183e	            0x89c2	                            mov edx, eax	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001840	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001844	            0x8910	                    mov dword [rax], edx	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001846	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1190	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001849	            0x89c0	                            mov eax, eax	      1190	dwarf2.c	FUNCTION_21	SWITCH_1
0x400184b	        0x480145a8	            add qword [rbp - 0x58], rax 	      1190	dwarf2.c	FUNCTION_21	SWITCH_1
0x400184f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1191	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_24
0x4001853	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1191	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_24
0x4001857	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1191	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_24
0x400185b	          0x4889ce	                            mov rsi, rcx	      1191	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_24
0x400185e	          0x4889c7	                            mov rdi, rax	      1191	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_24
0x4001861	      0xe8bbecffff	                   call sym.read_n_bytes	      1191	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_24
0x4001866	        0x488945a8	             mov qword [rbp - 0x58], rax	      1191	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_24
0x400186a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1192	dwarf2.c	FUNCTION_21	SWITCH_1
0x400186e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1192	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001872	        0x48895008	                mov qword [rax + 8], rdx	      1192	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001876	      0xe943030000	                           jmp 0x4001bbe	      1193	dwarf2.c	FUNCTION_21	SWITCH_1
0x400187b	    0x48c745e81000	           mov qword [rbp - 0x18], 0x10 	      1195	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001883	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4001887	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x400188b	          0x4889d6	                            mov rsi, rdx	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x400188e	          0x4889c7	                            mov rdi, rax	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4001891	      0xe800000000	                          call 0x4001896	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4001896	        0x488945f0	             mov qword [rbp - 0x10], rax	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x400189a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1197	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x400189f	            0x750a	                           jne 0x40018ab	      1197	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x40018a1	      0xb800000000	                              mov eax, 0	      1198	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x40018a6	      0xe917030000	                           jmp 0x4001bc2	      1198	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x40018ab	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x40018af	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x40018b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x40018b7	          0x4889ce	                            mov rsi, rcx	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x40018ba	          0x4889c7	                            mov rdi, rax	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x40018bd	      0xe837ebffff	                    call sym.read_1_byte	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x40018c2	            0x89c2	                            mov edx, eax	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x40018c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x40018c8	            0x8910	                    mov dword [rax], edx	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x40018ca	      0x488345a801	               add qword [rbp - 0x58], 1	      1200	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018cf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1201	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_27
0x40018d3	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1201	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_27
0x40018d7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1201	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_27
0x40018db	          0x4889ce	                            mov rsi, rcx	      1201	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_27
0x40018de	          0x4889c7	                            mov rdi, rax	      1201	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_27
0x40018e1	      0xe83becffff	                   call sym.read_n_bytes	      1201	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_27
0x40018e6	        0x488945a8	             mov qword [rbp - 0x58], rax	      1201	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_27
0x40018ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1202	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018ee	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1202	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018f2	        0x48895008	                mov qword [rax + 8], rdx	      1202	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018f6	      0xe9c3020000	                           jmp 0x4001bbe	      1203	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018fb	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x40018ff	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x4001903	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x4001907	          0x4889ce	                            mov rsi, rcx	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x400190a	          0x4889c7	                            mov rdi, rax	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x400190d	      0xe8e7eaffff	                    call sym.read_1_byte	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x4001912	            0x89c2	                            mov edx, eax	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x4001914	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x4001918	        0x48895008	                mov qword [rax + 8], rdx	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x400191c	      0x488345a801	               add qword [rbp - 0x58], 1	      1206	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001921	      0xe998020000	                           jmp 0x4001bbe	      1207	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001926	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x400192a	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x400192e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x4001932	          0x4889ce	                            mov rsi, rcx	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x4001935	          0x4889c7	                            mov rdi, rax	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x4001938	      0xe8bceaffff	                    call sym.read_1_byte	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x400193d	            0x89c2	                            mov edx, eax	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x400193f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x4001943	        0x48895008	                mov qword [rax + 8], rdx	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x4001947	      0x488345a801	               add qword [rbp - 0x58], 1	      1210	dwarf2.c	FUNCTION_21	SWITCH_1
0x400194c	      0xe96d020000	                           jmp 0x4001bbe	      1211	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001951	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1213	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001955	    0x48c740080100	                  mov qword [rax + 8], 1	      1213	dwarf2.c	FUNCTION_21	SWITCH_1
0x400195d	      0xe95c020000	                           jmp 0x4001bbe	      1214	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001962	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4001966	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x400196a	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x400196e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4001972	          0x4989c8	                             mov r8, rcx	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4001975	      0xb901000000	                              mov ecx, 1	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x400197a	          0x4889c7	                            mov rdi, rax	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x400197d	      0xe800000000	                          call 0x4001982	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4001982	          0x4889c2	                            mov rdx, rax	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4001985	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4001989	        0x48895008	                mov qword [rax + 8], rdx	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x400198d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1218	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001990	            0x89c0	                            mov eax, eax	      1218	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001992	        0x480145a8	            add qword [rbp - 0x58], rax 	      1218	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001996	      0xe923020000	                           jmp 0x4001bbe	      1219	dwarf2.c	FUNCTION_21	SWITCH_1
0x400199b	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x400199f	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40019a3	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40019a7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40019ab	          0x4989c8	                             mov r8, rcx	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40019ae	      0xb900000000	                              mov ecx, 0	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40019b3	          0x4889c7	                            mov rdi, rax	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40019b6	      0xe800000000	                          call 0x40019bb	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40019bb	          0x4889c2	                            mov rdx, rax	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40019be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40019c2	        0x48895008	                mov qword [rax + 8], rdx	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40019c6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1223	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019c9	            0x89c0	                            mov eax, eax	      1223	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019cb	        0x480145a8	            add qword [rbp - 0x58], rax 	      1223	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019cf	      0xe9ea010000	                           jmp 0x4001bbe	      1224	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019d4	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x40019d8	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x40019dc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x40019e0	          0x4889ce	                            mov rsi, rcx	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x40019e3	          0x4889c7	                            mov rdi, rax	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x40019e6	      0xe80eeaffff	                    call sym.read_1_byte	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x40019eb	            0x89c2	                            mov edx, eax	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x40019ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x40019f1	        0x48895008	                mov qword [rax + 8], rdx	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x40019f5	      0x488345a801	               add qword [rbp - 0x58], 1	      1227	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019fa	      0xe9bf010000	                           jmp 0x4001bbe	      1228	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019ff	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001a03	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001a07	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001a0b	          0x4889ce	                            mov rsi, rcx	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001a0e	          0x4889c7	                            mov rdi, rax	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001a11	      0xe84beaffff	                   call sym.read_2_bytes	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001a16	            0x89c2	                            mov edx, eax	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001a18	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001a1c	        0x48895008	                mov qword [rax + 8], rdx	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001a20	      0x488345a802	               add qword [rbp - 0x58], 2	      1231	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a25	      0xe994010000	                           jmp 0x4001bbe	      1232	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a2a	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001a2e	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001a32	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001a36	          0x4889ce	                            mov rsi, rcx	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001a39	          0x4889c7	                            mov rdi, rax	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001a3c	      0xe860eaffff	                   call sym.read_4_bytes	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001a41	            0x89c2	                            mov edx, eax	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001a43	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001a47	        0x48895008	                mov qword [rax + 8], rdx	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001a4b	      0x488345a804	               add qword [rbp - 0x58], 4	      1235	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a50	      0xe969010000	                           jmp 0x4001bbe	      1236	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a55	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001a59	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001a5d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001a61	          0x4889ce	                            mov rsi, rcx	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001a64	          0x4889c7	                            mov rdi, rax	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001a67	      0xe875eaffff	                   call sym.read_8_bytes	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001a6c	          0x4889c2	                            mov rdx, rax	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001a6f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001a73	        0x48895008	                mov qword [rax + 8], rdx	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001a77	      0x488345a808	               add qword [rbp - 0x58], 8	      1239	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a7c	      0xe93d010000	                           jmp 0x4001bbe	      1240	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a81	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001a85	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001a89	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001a8d	          0x4889ce	                            mov rsi, rcx	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001a90	          0x4889c7	                            mov rdi, rax	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001a93	      0xe849eaffff	                   call sym.read_8_bytes	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001a98	          0x4889c2	                            mov rdx, rax	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001a9b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001a9f	        0x48895008	                mov qword [rax + 8], rdx	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001aa3	      0x488345a808	               add qword [rbp - 0x58], 8	      1243	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001aa8	      0xe911010000	                           jmp 0x4001bbe	      1244	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001aad	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001ab1	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001ab5	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001ab9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001abd	          0x4989c8	                             mov r8, rcx	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001ac0	      0xb900000000	                              mov ecx, 0	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001ac5	          0x4889c7	                            mov rdi, rax	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001ac8	      0xe800000000	                          call 0x4001acd	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001acd	          0x4889c2	                            mov rdx, rax	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001ad0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001ad4	        0x48895008	                mov qword [rax + 8], rdx	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001ad8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001adb	            0x89c0	                            mov eax, eax	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001add	        0x480145a8	            add qword [rbp - 0x58], rax 	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001ae1	      0xe9d8000000	                           jmp 0x4001bbe	      1249	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001ae6	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001aea	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001aee	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001af2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001af6	          0x4989c8	                             mov r8, rcx	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001af9	      0xb900000000	                              mov ecx, 0	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001afe	          0x4889c7	                            mov rdi, rax	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001b01	      0xe800000000	                          call 0x4001b06	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001b06	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001b09	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1253	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001b0c	            0x89c0	                            mov eax, eax	      1253	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001b0e	        0x480145a8	            add qword [rbp - 0x58], rax 	      1253	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001b12	        0x837dc421	           cmp dword [rbp - 0x3c], 0x21 	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001b16	            0x752d	                           jne 0x4001b45	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001b18	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001b1c	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001b20	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001b24	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001b28	          0x4989c8	                             mov r8, rcx	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001b2b	      0xb901000000	                              mov ecx, 1	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001b30	          0x4889c7	                            mov rdi, rax	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001b33	      0xe800000000	                          call 0x4001b38	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001b38	        0x488945b8	             mov qword [rbp - 0x48], rax	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001b3c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001b3f	            0x89c0	                            mov eax, eax	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001b41	        0x480145a8	            add qword [rbp - 0x58], rax 	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001b45	        0x4c8b45a0	              mov r8, qword [rbp - 0x60]	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b49	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b4d	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b51	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b55	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b58	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b5c	          0x4d89c1	                              mov r9, r8	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b5f	          0x4989f8	                             mov r8, rdi	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b62	          0x4889c7	                            mov rdi, rax	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b65	      0xe847f7ffff	           call sym.read_attribute_value	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b6a	        0x488945a8	             mov qword [rbp - 0x58], rax	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001b6e	            0xeb4e	                           jmp 0x4001bbe	      1262	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001b70	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1264	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001b74	    0xc740040d0000	                mov dword [rax + 4], 0xd	      1264	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001b7b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1265	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001b7f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1265	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001b83	        0x48895008	                mov qword [rax + 8], rdx	      1265	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001b87	            0xeb35	                           jmp 0x4001bbe	      1266	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001b89	      0xbe00000000	                              mov esi, 0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001b8e	      0xbf00000000	                              mov edi, 0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001b93	      0xe800000000	                          call 0x4001b98	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001b98	          0x4889c2	                            mov rdx, rax	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001b9b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001b9e	            0x89c6	                            mov esi, eax	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001ba0	          0x4889d7	                            mov rdi, rdx	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001ba3	      0xb800000000	                              mov eax, 0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001ba8	      0xe800000000	                          call 0x4001bad	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001bad	      0xbf11000000	                           mov edi, 0x11	      1270	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_43
0x4001bb2	      0xe800000000	                          call 0x4001bb7	      1270	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_43
0x4001bb7	      0xb800000000	                              mov eax, 0	      1271	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001bbc	            0xeb04	                           jmp 0x4001bc2	      1271	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001bbe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1273	dwarf2.c	FUNCTION_21
0x4001bc2	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1274	dwarf2.c	FUNCTION_21
0x4001bc6	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1274	dwarf2.c	FUNCTION_21
0x4001bcf	            0x7405	                            je 0x4001bd6	      1274	dwarf2.c	FUNCTION_21
0x4001bd1	      0xe800000000	                          call 0x4001bd6	      1274	dwarf2.c	FUNCTION_21
0x4001bd6	              0xc9	                                   leave	      1274	dwarf2.c	FUNCTION_21
0x4001bd7	              0xc3	                                     ret	      1274	dwarf2.c	FUNCTION_21
info_hash_table_newfunc	SWITCH,0:ELSE,0:CALL,2:IF,3:DO,0:WHILE,0:functions,0:FOR,0	33
0x4000040	              0x55	                                push rbp	       421	dwarf2.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       421	dwarf2.c	FUNCTION_1
0x4000044	        0x4883ec30	                           sub rsp, 0x30	       421	dwarf2.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       421	dwarf2.c	FUNCTION_1
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       421	dwarf2.c	FUNCTION_1
0x4000050	        0x488955d8	             mov qword [rbp - 0x28], rdx	       421	dwarf2.c	FUNCTION_1
0x4000054	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       422	dwarf2.c	FUNCTION_1
0x4000058	        0x488945f8	                mov qword [rbp - 8], rax	       422	dwarf2.c	FUNCTION_1
0x400005c	      0x48837df800	                  cmp qword [rbp - 8], 0	       426	dwarf2.c	FUNCTION_1	IF_1
0x4000061	            0x7523	                           jne 0x4000086	       426	dwarf2.c	FUNCTION_1	IF_1
0x4000063	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000067	      0xbe20000000	                           mov esi, 0x20	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x400006c	          0x4889c7	                            mov rdi, rax	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x400006f	      0xe800000000	                          call 0x4000074	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000074	        0x488945f8	                mov qword [rbp - 8], rax	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000078	      0x48837df800	                  cmp qword [rbp - 8], 0	       430	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x400007d	            0x7507	                           jne 0x4000086	       430	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x400007f	      0xb800000000	                              mov eax, 0	       431	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x4000084	            0xeb32	                           jmp 0x40000b8	       431	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x4000086	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       435	dwarf2.c	FUNCTION_1
0x400008a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       435	dwarf2.c	FUNCTION_1
0x400008e	        0x488b45f8	                mov rax, qword [rbp - 8]	       435	dwarf2.c	FUNCTION_1
0x4000092	          0x4889ce	                            mov rsi, rcx	       435	dwarf2.c	FUNCTION_1
0x4000095	          0x4889c7	                            mov rdi, rax	       435	dwarf2.c	FUNCTION_1
0x4000098	      0xe800000000	                          call 0x400009d	       435	dwarf2.c	FUNCTION_1
0x400009d	        0x488945f8	                mov qword [rbp - 8], rax	       435	dwarf2.c	FUNCTION_1
0x40000a1	      0x48837df800	                  cmp qword [rbp - 8], 0	       439	dwarf2.c	FUNCTION_1	IF_3
0x40000a6	            0x740c	                            je 0x40000b4	       439	dwarf2.c	FUNCTION_1	IF_3
0x40000a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       440	dwarf2.c	FUNCTION_1	IF_3
0x40000ac	    0x48c740180000	               mov qword [rax + 0x18], 0	       440	dwarf2.c	FUNCTION_1	IF_3
0x40000b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       442	dwarf2.c	FUNCTION_1
0x40000b8	              0xc9	                                   leave	       443	dwarf2.c	FUNCTION_1
0x40000b9	              0xc3	                                     ret	       443	dwarf2.c	FUNCTION_1
lookup_address_in_function_table	SWITCH,0:ELSE,2:CALL,1:IF,9:DO,0:WHILE,2:functions,0:FOR,1	168
0x4004a89	              0x55	                                push rbp	      2638	dwarf2.c	ELSE_1	FUNCTION_40
0x4004a8a	          0x4889e5	                            mov rbp, rsp	      2638	dwarf2.c	ELSE_1	FUNCTION_40
0x4004a8d	        0x4883ec70	                           sub rsp, 0x70	      2638	dwarf2.c	ELSE_1	FUNCTION_40
0x4004a91	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2638	dwarf2.c	ELSE_1	FUNCTION_40
0x4004a95	        0x488975a0	             mov qword [rbp - 0x60], rsi	      2638	dwarf2.c	ELSE_1	FUNCTION_40
0x4004a99	        0x48895598	             mov qword [rbp - 0x68], rdx	      2638	dwarf2.c	ELSE_1	FUNCTION_40
0x4004a9d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2639	dwarf2.c	ELSE_1	FUNCTION_40
0x4004aa1	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2639	dwarf2.c	ELSE_1	FUNCTION_40
0x4004aa8	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2639	dwarf2.c	ELSE_1	FUNCTION_40
0x4004aab	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2640	dwarf2.c	ELSE_1	FUNCTION_40
0x4004ab3	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2641	dwarf2.c	ELSE_1	FUNCTION_40
0x4004abb	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2642	dwarf2.c	ELSE_1	FUNCTION_40
0x4004ac3	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2643	dwarf2.c	ELSE_1	FUNCTION_40
0x4004acb	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2647	dwarf2.c	ELSE_1	FUNCTION_40	IF_1
0x4004acf	            0x750a	                           jne 0x4004adb	      2647	dwarf2.c	ELSE_1	FUNCTION_40	IF_1
0x4004ad1	      0xb800000000	                              mov eax, 0	      2648	dwarf2.c	ELSE_1	FUNCTION_40	IF_1
0x4004ad6	      0xe92d020000	                           jmp 0x4004d08	      2648	dwarf2.c	ELSE_1	FUNCTION_40	IF_1
0x4004adb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2650	dwarf2.c	ELSE_1	FUNCTION_40	IF_2	CALL_1
0x4004adf	          0x4889c7	                            mov rdi, rax	      2650	dwarf2.c	ELSE_1	FUNCTION_40	IF_2	CALL_1
0x4004ae2	      0xe898fdffff	    call sym.build_lookup_funcinfo_table	      2650	dwarf2.c	ELSE_1	FUNCTION_40	IF_2	CALL_1
0x4004ae7	            0x85c0	                           test eax, eax	      2650	dwarf2.c	ELSE_1	FUNCTION_40	IF_2	CALL_1
0x4004ae9	            0x750a	                           jne 0x4004af5	      2650	dwarf2.c	ELSE_1	FUNCTION_40	IF_2	CALL_1
0x4004aeb	      0xb800000000	                              mov eax, 0	      2651	dwarf2.c	ELSE_1	FUNCTION_40	IF_2
0x4004af0	      0xe913020000	                           jmp 0x4004d08	      2651	dwarf2.c	ELSE_1	FUNCTION_40	IF_2
0x4004af5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004af9	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b00	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b03	          0x83e801	                              sub eax, 1	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b06	            0x89c1	                            mov ecx, eax	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b08	          0x4889c8	                            mov rax, rcx	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b0b	          0x4801c0	                            add rax, rax	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b0e	          0x4801c8	                            add rax, rcx	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b11	        0x48c1e003	                              shl rax, 3	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b15	          0x4801d0	                            add rax, rdx	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b18	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b1c	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b20	            0x730a	                           jae 0x4004b2c	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b22	      0xb800000000	                              mov eax, 0	      2654	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b27	      0xe9dc010000	                           jmp 0x4004d08	      2654	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x4004b2c	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2658	dwarf2.c	ELSE_1	FUNCTION_40
0x4004b34	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2659	dwarf2.c	ELSE_1	FUNCTION_40
0x4004b37	        0x488945d0	             mov qword [rbp - 0x30], rax	      2659	dwarf2.c	ELSE_1	FUNCTION_40
0x4004b3b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2660	dwarf2.c	ELSE_1	FUNCTION_40
0x4004b3f	        0x488945d8	             mov qword [rbp - 0x28], rax	      2660	dwarf2.c	ELSE_1	FUNCTION_40
0x4004b43	            0xeb79	                           jmp 0x4004bbe	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b45	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2663	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b49	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2663	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b4d	          0x4801d0	                            add rax, rdx	      2663	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b50	          0x48d1e8	                              shr rax, 1	      2663	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b53	        0x488945f8	                mov qword [rbp - 8], rax	      2663	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b57	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b5b	    0x488b88880000	            mov rcx, qword [rax + 0x88] 	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b62	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b66	          0x4889d0	                            mov rax, rdx	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b69	          0x4801c0	                            add rax, rax	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b6c	          0x4801d0	                            add rax, rdx	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b6f	        0x48c1e003	                              shl rax, 3	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b73	          0x4801c8	                            add rax, rcx	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b76	        0x488945e8	             mov qword [rbp - 0x18], rax	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004b7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2665	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x4004b7e	        0x488b4008	                mov rax, qword [rax + 8]	      2665	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x4004b82	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2665	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x4004b86	            0x760a	                           jbe 0x4004b92	      2665	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x4004b88	        0x488b45f8	                mov rax, qword [rbp - 8]	      2666	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x4004b8c	        0x488945d0	             mov qword [rbp - 0x30], rax	      2666	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x4004b90	            0xeb2c	                           jmp 0x4004bbe	      2666	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x4004b92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2667	dwarf2.c	FUNCTION_40	WHILE_1	IF_5
0x4004b96	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2667	dwarf2.c	FUNCTION_40	WHILE_1	IF_5
0x4004b9a	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2667	dwarf2.c	FUNCTION_40	WHILE_1	IF_5
0x4004b9e	            0x770e	                            ja 0x4004bae	      2667	dwarf2.c	FUNCTION_40	WHILE_1	IF_5
0x4004ba0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2668	dwarf2.c	FUNCTION_40	WHILE_1	IF_5	ELSE_1
0x4004ba4	        0x4883c001	                              add rax, 1	      2668	dwarf2.c	FUNCTION_40	WHILE_1	IF_5	ELSE_1
0x4004ba8	        0x488945c8	             mov qword [rbp - 0x38], rax	      2668	dwarf2.c	FUNCTION_40	WHILE_1	IF_5	ELSE_1
0x4004bac	            0xeb10	                           jmp 0x4004bbe	      2668	dwarf2.c	FUNCTION_40	WHILE_1	IF_5	ELSE_1
0x4004bae	        0x488b45f8	                mov rax, qword [rbp - 8]	      2670	dwarf2.c	FUNCTION_40	WHILE_1	ELSE_1	ELSE_2
0x4004bb2	        0x488945d8	             mov qword [rbp - 0x28], rax	      2670	dwarf2.c	FUNCTION_40	WHILE_1	ELSE_1	ELSE_2
0x4004bb6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2670	dwarf2.c	FUNCTION_40	WHILE_1	ELSE_1	ELSE_2
0x4004bba	        0x488945d0	             mov qword [rbp - 0x30], rax	      2670	dwarf2.c	FUNCTION_40	WHILE_1	ELSE_1	ELSE_2
0x4004bbe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004bc2	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004bc6	     0xf8279ffffff	                            jb 0x4004b45	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004bcc	      0xe909010000	                           jmp 0x4004cda	      2678	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004bd1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004bd5	    0x488b88880000	            mov rcx, qword [rax + 0x88] 	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004bdc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004be0	          0x4889d0	                            mov rax, rdx	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004be3	          0x4801c0	                            add rax, rax	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004be6	          0x4801d0	                            add rax, rdx	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004be9	        0x48c1e003	                              shl rax, 3	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004bed	          0x4801c8	                            add rax, rcx	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004bf0	        0x488b4008	                mov rax, qword [rax + 8]	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004bf4	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004bf8	     0xf87eb000000	                            ja 0x4004ce9	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004bfe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004c02	    0x488b88880000	            mov rcx, qword [rax + 0x88] 	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004c09	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004c0d	          0x4889d0	                            mov rax, rdx	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004c10	          0x4801c0	                            add rax, rax	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004c13	          0x4801d0	                            add rax, rdx	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004c16	        0x48c1e003	                              shl rax, 3	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004c1a	          0x4801c8	                            add rax, rcx	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004c1d	          0x488b00	                    mov rax, qword [rax]	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004c20	        0x488945f0	             mov qword [rbp - 0x10], rax	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004c24	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004c28	        0x4883c038	                           add rax, 0x38	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004c2c	        0x488945e0	             mov qword [rbp - 0x20], rax	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004c30	      0xe995000000	                           jmp 0x4004cca	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004c35	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x4004c39	        0x488b4008	                mov rax, qword [rax + 8]	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x4004c3d	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x4004c41	            0x777b	                            ja 0x4004cbe	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x4004c43	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x4004c47	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x4004c4b	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x4004c4f	            0x766d	                           jbe 0x4004cbe	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x4004c51	      0x48837db800	               cmp qword [rbp - 0x48], 0	      2689	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c56	            0x7442	                            je 0x4004c9a	      2689	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c5c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c60	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c64	        0x488b4008	                mov rax, qword [rax + 8]	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c68	          0x4829c2	                            sub rdx, rax	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c6b	          0x4889d0	                            mov rax, rdx	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c6e	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c72	            0x7226	                            jb 0x4004c9a	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c74	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2694	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c78	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2694	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c7c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2694	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c80	        0x488b4008	                mov rax, qword [rax + 8]	      2694	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c84	          0x4829c2	                            sub rdx, rax	      2694	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c87	          0x4889d0	                            mov rax, rdx	      2694	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c8a	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2694	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c8e	            0x752f	                           jne 0x4004cbf	      2694	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c90	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2695	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c94	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      2695	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c98	            0x7625	                           jbe 0x4004cbf	      2695	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c9a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2697	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004c9e	        0x488945b8	             mov qword [rbp - 0x48], rax	      2697	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004ca2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2698	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004ca6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2698	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004caa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2698	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004cae	        0x488b4008	                mov rax, qword [rax + 8]	      2698	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004cb2	          0x4829c2	                            sub rdx, rax	      2698	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004cb5	          0x4889d0	                            mov rax, rdx	      2698	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004cb8	        0x488945c0	             mov qword [rbp - 0x40], rax	      2698	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004cbc	            0xeb01	                           jmp 0x4004cbf	      2698	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004cbe	              0x90	                                     nop	      2687	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x4004cbf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004cc3	          0x488b00	                    mov rax, qword [rax]	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004cc6	        0x488945e0	             mov qword [rbp - 0x20], rax	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004cca	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004ccf	     0xf8560ffffff	                           jne 0x4004c35	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004cd5	      0x488345d801	               add qword [rbp - 0x28], 1	      2702	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004cda	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2678	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004cdd	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      2678	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004ce1	     0xf87eafeffff	                            ja 0x4004bd1	      2678	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004ce7	            0xeb01	                           jmp 0x4004cea	      2678	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004ce9	              0x90	                                     nop	      2681	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004cea	      0x48837db800	               cmp qword [rbp - 0x48], 0	      2705	dwarf2.c	FUNCTION_40	ELSE_1	IF_9
0x4004cef	            0x7507	                           jne 0x4004cf8	      2705	dwarf2.c	FUNCTION_40	ELSE_1	IF_9
0x4004cf1	      0xb800000000	                              mov eax, 0	      2706	dwarf2.c	FUNCTION_40	ELSE_1	IF_9
0x4004cf6	            0xeb10	                           jmp 0x4004d08	      2706	dwarf2.c	FUNCTION_40	ELSE_1	IF_9
0x4004cf8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2708	dwarf2.c	FUNCTION_40	ELSE_1
0x4004cfc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2708	dwarf2.c	FUNCTION_40	ELSE_1
0x4004d00	          0x488910	                    mov qword [rax], rdx	      2708	dwarf2.c	FUNCTION_40	ELSE_1
0x4004d03	      0xb801000000	                              mov eax, 1	      2709	dwarf2.c	FUNCTION_40	ELSE_1
0x4004d08	              0xc9	                                   leave	      2710	dwarf2.c	FUNCTION_40	ELSE_1
0x4004d09	              0xc3	                                     ret	      2710	dwarf2.c	FUNCTION_40	ELSE_1
read_formatted_entries	SWITCH,2:ELSE,0:CALL,19:IF,4:DO,0:WHILE,0:functions,0:FOR,3	241
0x4002b56	              0x55	                                push rbp	      1896	dwarf2.c	FUNCTION_34
0x4002b57	          0x4889e5	                            mov rbp, rsp	      1896	dwarf2.c	FUNCTION_34
0x4002b5a	    0x4881ecd00000	                           sub rsp, 0xd0	      1896	dwarf2.c	FUNCTION_34
0x4002b61	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      1896	dwarf2.c	FUNCTION_34
0x4002b68	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      1896	dwarf2.c	FUNCTION_34
0x4002b6f	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      1896	dwarf2.c	FUNCTION_34
0x4002b76	    0x48898d40ffff	             mov qword [rbp - 0xc0], rcx	      1896	dwarf2.c	FUNCTION_34
0x4002b7d	    0x4c898538ffff	              mov qword [rbp - 0xc8], r8	      1896	dwarf2.c	FUNCTION_34
0x4002b84	    0x64488b042528	                mov rax, qword fs:[0x28]	      1896	dwarf2.c	FUNCTION_34
0x4002b8d	        0x488945f8	                mov qword [rbp - 8], rax	      1896	dwarf2.c	FUNCTION_34
0x4002b91	            0x31c0	                            xor eax, eax	      1896	dwarf2.c	FUNCTION_34
0x4002b93	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1897	dwarf2.c	FUNCTION_34
0x4002b9a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1897	dwarf2.c	FUNCTION_34
0x4002b9e	        0x488945a8	             mov qword [rbp - 0x58], rax	      1897	dwarf2.c	FUNCTION_34
0x4002ba2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1900	dwarf2.c	FUNCTION_34
0x4002ba9	          0x488b00	                    mov rax, qword [rax]	      1900	dwarf2.c	FUNCTION_34
0x4002bac	        0x48894588	             mov qword [rbp - 0x78], rax	      1900	dwarf2.c	FUNCTION_34
0x4002bb0	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      1904	dwarf2.c	FUNCTION_34	CALL_2
0x4002bb7	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1904	dwarf2.c	FUNCTION_34	CALL_2
0x4002bbb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1904	dwarf2.c	FUNCTION_34	CALL_2
0x4002bbf	          0x4889ce	                            mov rsi, rcx	      1904	dwarf2.c	FUNCTION_34	CALL_2
0x4002bc2	          0x4889c7	                            mov rdi, rax	      1904	dwarf2.c	FUNCTION_34	CALL_2
0x4002bc5	      0xe82fd8ffff	                    call sym.read_1_byte	      1904	dwarf2.c	FUNCTION_34	CALL_2
0x4002bca	    0x88856fffffff	               mov byte [rbp - 0x91], al	      1904	dwarf2.c	FUNCTION_34	CALL_2
0x4002bd0	      0x4883458801	               add qword [rbp - 0x78], 1	      1905	dwarf2.c	FUNCTION_34
0x4002bd5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1906	dwarf2.c	FUNCTION_34
0x4002bd9	        0x488945b0	             mov qword [rbp - 0x50], rax	      1906	dwarf2.c	FUNCTION_34
0x4002bdd	    0xc6856effffff	                mov byte [rbp - 0x92], 0	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002be4	            0xeb74	                           jmp 0x4002c5a	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002be6	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002bed	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002bf4	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002bf8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002bfc	          0x4989c8	                             mov r8, rcx	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002bff	      0xb900000000	                              mov ecx, 0	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002c04	          0x4889c7	                            mov rdi, rax	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002c07	      0xe800000000	                          call 0x4002c0c	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002c0c	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x4002c12	            0x89c0	                            mov eax, eax	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x4002c14	        0x48014588	            add qword [rbp - 0x78], rax 	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x4002c18	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c1f	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c26	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c2a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c2e	          0x4989c8	                             mov r8, rcx	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c31	      0xb900000000	                              mov ecx, 0	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c36	          0x4889c7	                            mov rdi, rax	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c39	      0xe800000000	                          call 0x4002c3e	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c3e	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x4002c44	            0x89c0	                            mov eax, eax	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x4002c46	        0x48014588	            add qword [rbp - 0x78], rax 	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x4002c4a	     0xfb6856effff	            movzx eax, byte [rbp - 0x92]	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c51	          0x83c001	                              add eax, 1	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c54	    0x88856effffff	               mov byte [rbp - 0x92], al	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c5a	     0xfb6856effff	            movzx eax, byte [rbp - 0x92]	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c61	    0x3a856fffffff	               cmp al, byte [rbp - 0x91]	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c67	     0xf8279ffffff	                            jb 0x4002be6	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c6d	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002c74	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002c7b	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002c7f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002c83	          0x4989c8	                             mov r8, rcx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002c86	      0xb900000000	                              mov ecx, 0	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002c8b	          0x4889c7	                            mov rdi, rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002c8e	      0xe800000000	                          call 0x4002c93	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002c93	        0x488945b8	             mov qword [rbp - 0x48], rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002c97	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      1916	dwarf2.c	FUNCTION_34
0x4002c9d	            0x89c0	                            mov eax, eax	      1916	dwarf2.c	FUNCTION_34
0x4002c9f	        0x48014588	            add qword [rbp - 0x78], rax 	      1916	dwarf2.c	FUNCTION_34
0x4002ca3	    0x80bd6fffffff	                cmp byte [rbp - 0x91], 0	      1917	dwarf2.c	FUNCTION_34	IF_1
0x4002caa	            0x7537	                           jne 0x4002ce3	      1917	dwarf2.c	FUNCTION_34	IF_1
0x4002cac	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1917	dwarf2.c	FUNCTION_34	IF_1
0x4002cb1	            0x7430	                            je 0x4002ce3	      1917	dwarf2.c	FUNCTION_34	IF_1
0x4002cb3	      0xbe00000000	                              mov esi, 0	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4002cb8	      0xbf00000000	                              mov edi, 0	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4002cbd	      0xe800000000	                          call 0x4002cc2	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4002cc2	          0x4889c7	                            mov rdi, rax	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4002cc5	      0xb800000000	                              mov eax, 0	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4002cca	      0xe800000000	                          call 0x4002ccf	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4002ccf	      0xbf11000000	                           mov edi, 0x11	      1920	dwarf2.c	FUNCTION_34	IF_1	CALL_8
0x4002cd4	      0xe800000000	                          call 0x4002cd9	      1920	dwarf2.c	FUNCTION_34	IF_1	CALL_8
0x4002cd9	      0xb800000000	                              mov eax, 0	      1921	dwarf2.c	FUNCTION_34	IF_1
0x4002cde	      0xe980020000	                           jmp 0x4002f63	      1921	dwarf2.c	FUNCTION_34	IF_1
0x4002ce3	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002cea	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002cee	          0x4829c2	                            sub rdx, rax	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002cf1	          0x4889d0	                            mov rax, rdx	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002cf4	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002cf8	            0x733a	                           jae 0x4002d34	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002cfa	      0xbe00000000	                              mov esi, 0	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002cff	      0xbf00000000	                              mov edi, 0	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002d04	      0xe800000000	                          call 0x4002d09	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002d09	          0x4889c2	                            mov rdx, rax	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002d0c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4002d10	          0x4889c6	                            mov rsi, rax	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4002d13	          0x4889d7	                            mov rdi, rdx	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4002d16	      0xb800000000	                              mov eax, 0	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4002d1b	      0xe800000000	                          call 0x4002d20	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4002d20	      0xbf11000000	                           mov edi, 0x11	      1931	dwarf2.c	FUNCTION_34	IF_2	CALL_11
0x4002d25	      0xe800000000	                          call 0x4002d2a	      1931	dwarf2.c	FUNCTION_34	IF_2	CALL_11
0x4002d2a	      0xb800000000	                              mov eax, 0	      1932	dwarf2.c	FUNCTION_34	IF_2
0x4002d2f	      0xe92f020000	                           jmp 0x4002f63	      1932	dwarf2.c	FUNCTION_34	IF_2
0x4002d34	    0x48c745800000	               mov qword [rbp - 0x80], 0	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002d3c	      0xe901020000	                           jmp 0x4002f42	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002d41	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1937	dwarf2.c	FUNCTION_34	FOR_2
0x4002d45	        0x48894590	             mov qword [rbp - 0x70], rax	      1937	dwarf2.c	FUNCTION_34	FOR_2
0x4002d49	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1940	dwarf2.c	FUNCTION_34	FOR_2	CALL_12
0x4002d4d	      0xba18000000	                           mov edx, 0x18	      1940	dwarf2.c	FUNCTION_34	FOR_2	CALL_12
0x4002d52	      0xbe00000000	                              mov esi, 0	      1940	dwarf2.c	FUNCTION_34	FOR_2	CALL_12
0x4002d57	          0x4889c7	                            mov rdi, rax	      1940	dwarf2.c	FUNCTION_34	FOR_2	CALL_12
0x4002d5a	      0xe800000000	                          call 0x4002d5f	      1940	dwarf2.c	FUNCTION_34	FOR_2	CALL_12
0x4002d5f	    0xc6856effffff	                mov byte [rbp - 0x92], 0	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002d66	      0xe996010000	                           jmp 0x4002f01	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002d6b	    0x488d8578ffff	                   lea rax, [rbp - 0x88]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002d72	        0x48894598	             mov qword [rbp - 0x68], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002d76	    0x488d8574ffff	                   lea rax, [rbp - 0x8c]	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002d7d	        0x488945a0	             mov qword [rbp - 0x60], rax	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002d81	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d88	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d8f	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d93	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d97	          0x4989c8	                             mov r8, rcx	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d9a	      0xb900000000	                              mov ecx, 0	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d9f	          0x4889c7	                            mov rdi, rax	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002da2	      0xe800000000	                          call 0x4002da7	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002da7	        0x488945c0	             mov qword [rbp - 0x40], rax	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002dab	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002db1	            0x89c0	                            mov eax, eax	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002db3	        0x48014590	            add qword [rbp - 0x70], rax 	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002db7	      0x48837dc005	               cmp qword [rbp - 0x40], 5	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dbc	            0x7747	                            ja 0x4002e05	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dbe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dc2	        0x48c1e003	                              shl rax, 3	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dc6	    0x480500000000	                              add rax, 0	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dcc	          0x488b00	                    mov rax, qword [rax]	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dcf	            0xffe0	                                 jmp rax	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dd1	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dd5	        0x48894598	             mov qword [rbp - 0x68], rax	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dd9	            0xeb65	                           jmp 0x4002e40	      1956	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002ddb	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002ddf	        0x4883c008	                              add rax, 8	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002de3	        0x488945a0	             mov qword [rbp - 0x60], rax	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002de7	            0xeb57	                           jmp 0x4002e40	      1959	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002de9	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002ded	        0x4883c00c	                            add rax, 0xc	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002df1	        0x488945a0	             mov qword [rbp - 0x60], rax	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002df5	            0xeb49	                           jmp 0x4002e40	      1962	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002df7	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dfb	        0x4883c010	                           add rax, 0x10	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002dff	        0x488945a0	             mov qword [rbp - 0x60], rax	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002e03	            0xeb3b	                           jmp 0x4002e40	      1965	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002e05	      0xbe00000000	                              mov esi, 0	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002e0a	      0xbf00000000	                              mov edi, 0	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002e0f	      0xe800000000	                          call 0x4002e14	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002e14	          0x4889c2	                            mov rdx, rax	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002e17	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002e1b	          0x4889c6	                            mov rsi, rax	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002e1e	          0x4889d7	                            mov rdi, rdx	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002e21	      0xb800000000	                              mov eax, 0	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002e26	      0xe800000000	                          call 0x4002e2b	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002e2b	      0xbf11000000	                           mov edi, 0x11	      1972	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_16
0x4002e30	      0xe800000000	                          call 0x4002e35	      1972	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_16
0x4002e35	      0xb800000000	                              mov eax, 0	      1973	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002e3a	      0xe924010000	                           jmp 0x4002f63	      1973	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002e3f	              0x90	                                     nop	      1967	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002e40	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002e47	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002e4e	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002e52	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002e56	          0x4989c8	                             mov r8, rcx	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002e59	      0xb900000000	                              mov ecx, 0	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002e5e	          0x4889c7	                            mov rdi, rax	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002e61	      0xe800000000	                          call 0x4002e66	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002e66	        0x488945c8	             mov qword [rbp - 0x38], rax	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002e6a	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002e70	            0x89c0	                            mov eax, eax	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002e72	        0x48014590	            add qword [rbp - 0x70], rax 	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002e76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002e7a	            0x89c7	                            mov edi, eax	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002e7c	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002e83	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002e87	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002e8e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002e92	          0x4989f1	                             mov r9, rsi	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002e95	          0x4989c8	                             mov r8, rcx	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002e98	          0x4889d1	                            mov rcx, rdx	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002e9b	      0xba00000000	                              mov edx, 0	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002ea0	            0x89fe	                            mov esi, edi	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002ea2	          0x4889c7	                            mov rdi, rax	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002ea5	      0xe807e4ffff	           call sym.read_attribute_value	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002eaa	        0x48894588	             mov qword [rbp - 0x78], rax	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002eae	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002eb3	            0x750a	                           jne 0x4002ebf	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002eb5	      0xb800000000	                              mov eax, 0	      1982	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002eba	      0xe9a4000000	                           jmp 0x4002f63	      1982	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002ebf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1983	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ec3	        0x4883e805	                              sub rax, 5	      1983	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ec7	        0x4883f81a	                           cmp rax, 0x1a	      1983	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ecb	            0x7724	                            ja 0x4002ef1	      1983	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ecd	    0x488b04c50000	                  mov rax, qword [rax*8]	      1983	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ed5	            0xffe0	                                 jmp rax	      1983	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ed7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002edb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002edf	          0x488910	                    mov qword [rax], rdx	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ee2	            0xeb0d	                           jmp 0x4002ef1	      1988	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ee4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ee8	            0x89c2	                            mov edx, eax	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002eea	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002eee	            0x8910	                    mov dword [rax], edx	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ef0	              0x90	                                     nop	      1996	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002ef1	     0xfb6856effff	            movzx eax, byte [rbp - 0x92]	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002ef8	          0x83c001	                              add eax, 1	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002efb	    0x88856effffff	               mov byte [rbp - 0x92], al	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002f01	     0xfb6856effff	            movzx eax, byte [rbp - 0x92]	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002f08	    0x3a856fffffff	               cmp al, byte [rbp - 0x91]	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002f0e	     0xf8257feffff	                            jb 0x4002d6b	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002f14	        0x448b45f0	             mov r8d, dword [rbp - 0x10]	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4002f18	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4002f1b	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4002f1e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4002f22	    0x488bbd40ffff	             mov rdi, qword [rbp - 0xc0]	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4002f29	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4002f30	            0xffd0	                                call rax	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4002f32	            0x85c0	                           test eax, eax	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4002f34	            0x7507	                           jne 0x4002f3d	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4002f36	      0xb800000000	                              mov eax, 0	      2001	dwarf2.c	FUNCTION_34	FOR_2	IF_4
0x4002f3b	            0xeb26	                           jmp 0x4002f63	      2001	dwarf2.c	FUNCTION_34	FOR_2	IF_4
0x4002f3d	      0x4883458001	               add qword [rbp - 0x80], 1	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002f42	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002f46	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002f4a	     0xf82f1fdffff	                            jb 0x4002d41	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002f50	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2004	dwarf2.c	FUNCTION_34
0x4002f57	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2004	dwarf2.c	FUNCTION_34
0x4002f5b	          0x488910	                    mov qword [rax], rdx	      2004	dwarf2.c	FUNCTION_34
0x4002f5e	      0xb801000000	                              mov eax, 1	      2005	dwarf2.c	FUNCTION_34
0x4002f63	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2006	dwarf2.c	FUNCTION_34
0x4002f67	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2006	dwarf2.c	FUNCTION_34
0x4002f70	            0x7405	                            je 0x4002f77	      2006	dwarf2.c	FUNCTION_34
0x4002f72	      0xe800000000	                          call 0x4002f77	      2006	dwarf2.c	FUNCTION_34
0x4002f77	              0xc9	                                   leave	      2006	dwarf2.c	FUNCTION_34
0x4002f78	              0xc3	                                     ret	      2006	dwarf2.c	FUNCTION_34
read_section	SWITCH,0:ELSE,0:CALL,12:IF,7:DO,0:WHILE,0:functions,0:FOR,0	137
0x40001fc	              0x55	                                push rbp	       526	dwarf2.c	FUNCTION_5
0x40001fd	          0x4889e5	                            mov rbp, rsp	       526	dwarf2.c	FUNCTION_5
0x4000200	              0x53	                                push rbx	       526	dwarf2.c	FUNCTION_5
0x4000201	        0x4883ec58	                           sub rsp, 0x58	       526	dwarf2.c	FUNCTION_5
0x4000205	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       526	dwarf2.c	FUNCTION_5
0x4000209	        0x488975c0	             mov qword [rbp - 0x40], rsi	       526	dwarf2.c	FUNCTION_5
0x400020d	        0x488955b8	             mov qword [rbp - 0x48], rdx	       526	dwarf2.c	FUNCTION_5
0x4000211	        0x48894db0	             mov qword [rbp - 0x50], rcx	       526	dwarf2.c	FUNCTION_5
0x4000215	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       526	dwarf2.c	FUNCTION_5
0x4000219	        0x4c894da0	              mov qword [rbp - 0x60], r9	       526	dwarf2.c	FUNCTION_5
0x400021d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       528	dwarf2.c	FUNCTION_5
0x4000221	          0x488b00	                    mov rax, qword [rax]	       528	dwarf2.c	FUNCTION_5
0x4000224	        0x488945e0	             mov qword [rbp - 0x20], rax	       528	dwarf2.c	FUNCTION_5
0x4000228	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       529	dwarf2.c	FUNCTION_5
0x400022c	          0x488b00	                    mov rax, qword [rax]	       529	dwarf2.c	FUNCTION_5
0x400022f	        0x488945e8	             mov qword [rbp - 0x18], rax	       529	dwarf2.c	FUNCTION_5
0x4000233	      0x48837de800	               cmp qword [rbp - 0x18], 0	       532	dwarf2.c	FUNCTION_5	IF_1
0x4000238	     0xf8559010000	                           jne 0x4000397	       532	dwarf2.c	FUNCTION_5	IF_1
0x400023e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x4000242	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x4000246	          0x4889d6	                            mov rsi, rdx	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x4000249	          0x4889c7	                            mov rdi, rax	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x400024c	      0xe800000000	                          call 0x4000251	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x4000251	        0x488945d8	             mov qword [rbp - 0x28], rax	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x4000255	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x400025a	            0x752a	                           jne 0x4000286	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x400025c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       537	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x4000260	        0x488b4008	                mov rax, qword [rax + 8]	       537	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x4000264	        0x488945e0	             mov qword [rbp - 0x20], rax	       537	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x4000268	      0x48837de000	               cmp qword [rbp - 0x20], 0	       538	dwarf2.c	FUNCTION_5	IF_1	IF_2	IF_3
0x400026d	            0x7417	                            je 0x4000286	       538	dwarf2.c	FUNCTION_5	IF_1	IF_2	IF_3
0x400026f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000273	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000277	          0x4889d6	                            mov rsi, rdx	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x400027a	          0x4889c7	                            mov rdi, rax	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x400027d	      0xe800000000	                          call 0x4000282	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000282	        0x488945d8	             mov qword [rbp - 0x28], rax	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000286	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x400028b	            0x753a	                           jne 0x40002c7	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x400028d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x4000291	          0x488b18	                    mov rbx, qword [rax]	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x4000294	      0xbe00000000	                              mov esi, 0	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x4000299	      0xbf00000000	                              mov edi, 0	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x400029e	      0xe800000000	                          call 0x40002a3	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40002a3	          0x4889de	                            mov rsi, rbx	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40002a6	          0x4889c7	                            mov rdi, rax	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40002a9	      0xb800000000	                              mov eax, 0	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40002ae	      0xe800000000	                          call 0x40002b3	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40002b3	      0xbf11000000	                           mov edi, 0x11	       545	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_5
0x40002b8	      0xe800000000	                          call 0x40002bd	       545	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_5
0x40002bd	      0xb800000000	                              mov eax, 0	       546	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40002c2	      0xe92b010000	                           jmp 0x40003f2	       546	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40002c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002cb	        0x488b4040	            mov rax, qword [rax + 0x40] 	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002cf	          0x4885c0	                           test rax, rax	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002d2	            0x740a	                            je 0x40002de	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002d8	        0x488b4040	            mov rax, qword [rax + 0x40] 	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002dc	            0xeb08	                           jmp 0x40002e6	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002e2	        0x488b4038	            mov rax, qword [rax + 0x38] 	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002e6	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002ea	          0x488902	                    mov qword [rdx], rax	       549	dwarf2.c	FUNCTION_5	IF_1
0x40002ed	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x40002f1	          0x488b00	                    mov rax, qword [rax]	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x40002f4	        0x4883c001	                              add rax, 1	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x40002f8	          0x4889c7	                            mov rdi, rax	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x40002fb	      0xe800000000	                          call 0x4000300	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x4000300	        0x488945e8	             mov qword [rbp - 0x18], rax	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x4000304	      0x48837de800	               cmp qword [rbp - 0x18], 0	       553	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x4000309	            0x750a	                           jne 0x4000315	       553	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x400030b	      0xb800000000	                              mov eax, 0	       554	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x4000310	      0xe9dd000000	                           jmp 0x40003f2	       554	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x4000315	      0x48837db800	               cmp qword [rbp - 0x48], 0	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400031a	            0x7420	                            je 0x400033c	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400031c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000320	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000324	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000328	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x400032c	          0x4889c7	                            mov rdi, rax	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x400032f	      0xe800000000	                          call 0x4000334	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000334	          0x4885c0	                           test rax, rax	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000337	           0xf94c0	                                 sete al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400033a	            0xeb28	                           jmp 0x4000364	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400033c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000340	          0x488b08	                    mov rcx, qword [rax]	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000343	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000347	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400034b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400034f	          0x4989c8	                             mov r8, rcx	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000352	      0xb900000000	                              mov ecx, 0	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000357	          0x4889c7	                            mov rdi, rax	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400035a	      0xe800000000	                          call 0x400035f	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400035f	            0x85c0	                           test eax, eax	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000361	           0xf94c0	                                 sete al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000364	            0x84c0	                             test al, al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000366	            0x7413	                            je 0x400037b	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000368	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       560	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_9
0x400036c	          0x4889c7	                            mov rdi, rax	       560	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_9
0x400036f	      0xe800000000	                          call 0x4000374	       560	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_9
0x4000374	      0xb800000000	                              mov eax, 0	       561	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000379	            0xeb77	                           jmp 0x40003f2	       561	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400037b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       563	dwarf2.c	FUNCTION_5	IF_1
0x400037f	          0x488b10	                    mov rdx, qword [rax]	       563	dwarf2.c	FUNCTION_5	IF_1
0x4000382	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       563	dwarf2.c	FUNCTION_5	IF_1
0x4000386	          0x4801d0	                            add rax, rdx	       563	dwarf2.c	FUNCTION_5	IF_1
0x4000389	          0xc60000	                       mov byte [rax], 0	       563	dwarf2.c	FUNCTION_5	IF_1
0x400038c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       564	dwarf2.c	FUNCTION_5	IF_1
0x4000390	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       564	dwarf2.c	FUNCTION_5	IF_1
0x4000394	          0x488910	                    mov qword [rax], rdx	       564	dwarf2.c	FUNCTION_5	IF_1
0x4000397	      0x48837db000	               cmp qword [rbp - 0x50], 0	       569	dwarf2.c	FUNCTION_5	IF_7
0x400039c	            0x744f	                            je 0x40003ed	       569	dwarf2.c	FUNCTION_5	IF_7
0x400039e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       569	dwarf2.c	FUNCTION_5	IF_7
0x40003a2	          0x488b00	                    mov rax, qword [rax]	       569	dwarf2.c	FUNCTION_5	IF_7
0x40003a5	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       569	dwarf2.c	FUNCTION_5	IF_7
0x40003a9	            0x7742	                            ja 0x40003ed	       569	dwarf2.c	FUNCTION_5	IF_7
0x40003ab	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003af	          0x488b18	                    mov rbx, qword [rax]	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003b2	      0xbe00000000	                              mov esi, 0	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003b7	      0xbf00000000	                              mov edi, 0	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003bc	      0xe800000000	                          call 0x40003c1	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003c1	          0x4889c7	                            mov rdi, rax	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003c4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003c8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003cc	          0x4889d9	                            mov rcx, rbx	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003cf	          0x4889c6	                            mov rsi, rax	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003d2	      0xb800000000	                              mov eax, 0	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003d7	      0xe800000000	                          call 0x40003dc	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40003dc	      0xbf11000000	                           mov edi, 0x11	       576	dwarf2.c	FUNCTION_5	IF_7	CALL_12
0x40003e1	      0xe800000000	                          call 0x40003e6	       576	dwarf2.c	FUNCTION_5	IF_7	CALL_12
0x40003e6	      0xb800000000	                              mov eax, 0	       577	dwarf2.c	FUNCTION_5	IF_7
0x40003eb	            0xeb05	                           jmp 0x40003f2	       577	dwarf2.c	FUNCTION_5	IF_7
0x40003ed	      0xb801000000	                              mov eax, 1	       580	dwarf2.c	FUNCTION_5
0x40003f2	        0x4883c458	                           add rsp, 0x58	       581	dwarf2.c	FUNCTION_5
0x40003f6	              0x5b	                                 pop rbx	       581	dwarf2.c	FUNCTION_5
0x40003f7	              0x5d	                                 pop rbp	       581	dwarf2.c	FUNCTION_5
0x40003f8	              0xc3	                                     ret	       581	dwarf2.c	FUNCTION_5
add_line_info	SWITCH,0:ELSE,5:CALL,10:IF,12:DO,0:WHILE,1:functions,0:FOR,0	264
0x4001cb7	              0x55	                                push rbp	      1448	dwarf2.c	FUNCTION_25
0x4001cb8	          0x4889e5	                            mov rbp, rsp	      1448	dwarf2.c	FUNCTION_25
0x4001cbb	        0x4883ec60	                           sub rsp, 0x60	      1448	dwarf2.c	FUNCTION_25
0x4001cbf	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1448	dwarf2.c	FUNCTION_25
0x4001cc3	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1448	dwarf2.c	FUNCTION_25
0x4001cc7	            0x89d0	                            mov eax, edx	      1448	dwarf2.c	FUNCTION_25
0x4001cc9	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1448	dwarf2.c	FUNCTION_25
0x4001ccd	        0x448945b8	             mov dword [rbp - 0x48], r8d	      1448	dwarf2.c	FUNCTION_25
0x4001cd1	        0x44894dac	             mov dword [rbp - 0x54], r9d	      1448	dwarf2.c	FUNCTION_25
0x4001cd5	          0x8845bc	               mov byte [rbp - 0x44], al	      1448	dwarf2.c	FUNCTION_25
0x4001cd8	    0x48c745e82800	           mov qword [rbp - 0x18], 0x28 	      1449	dwarf2.c	FUNCTION_25
0x4001ce0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1450	dwarf2.c	FUNCTION_25
0x4001ce4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1450	dwarf2.c	FUNCTION_25
0x4001ce8	        0x488945f0	             mov qword [rbp - 0x10], rax	      1450	dwarf2.c	FUNCTION_25
0x4001cec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4001cf0	          0x488b00	                    mov rax, qword [rax]	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4001cf3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4001cf7	          0x4889d6	                            mov rsi, rdx	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4001cfa	          0x4889c7	                            mov rdi, rax	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4001cfd	      0xe800000000	                          call 0x4001d02	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4001d02	        0x488945f8	                mov qword [rbp - 8], rax	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4001d06	      0x48837df800	                  cmp qword [rbp - 8], 0	      1453	dwarf2.c	FUNCTION_25	IF_1
0x4001d0b	            0x750a	                           jne 0x4001d17	      1453	dwarf2.c	FUNCTION_25	IF_1
0x4001d0d	      0xb800000000	                              mov eax, 0	      1454	dwarf2.c	FUNCTION_25	IF_1
0x4001d12	      0xe95f030000	                           jmp 0x4002076	      1454	dwarf2.c	FUNCTION_25	IF_1
0x4001d17	        0x488b45f8	                mov rax, qword [rbp - 8]	      1457	dwarf2.c	FUNCTION_25
0x4001d1b	    0x48c700000000	                      mov qword [rax], 0	      1457	dwarf2.c	FUNCTION_25
0x4001d22	        0x488b45f8	                mov rax, qword [rbp - 8]	      1458	dwarf2.c	FUNCTION_25
0x4001d26	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1458	dwarf2.c	FUNCTION_25
0x4001d2a	        0x48895008	                mov qword [rax + 8], rdx	      1458	dwarf2.c	FUNCTION_25
0x4001d2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1459	dwarf2.c	FUNCTION_25
0x4001d32	         0xfb655bc	            movzx edx, byte [rbp - 0x44]	      1459	dwarf2.c	FUNCTION_25
0x4001d36	          0x885024	               mov byte [rax + 0x24], dl	      1459	dwarf2.c	FUNCTION_25
0x4001d39	        0x488b45f8	                mov rax, qword [rbp - 8]	      1460	dwarf2.c	FUNCTION_25
0x4001d3d	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1460	dwarf2.c	FUNCTION_25
0x4001d40	          0x895018	             mov dword [rax + 0x18], edx	      1460	dwarf2.c	FUNCTION_25
0x4001d43	        0x488b45f8	                mov rax, qword [rbp - 8]	      1461	dwarf2.c	FUNCTION_25
0x4001d47	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1461	dwarf2.c	FUNCTION_25
0x4001d4a	          0x89501c	             mov dword [rax + 0x1c], edx	      1461	dwarf2.c	FUNCTION_25
0x4001d4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1462	dwarf2.c	FUNCTION_25
0x4001d51	          0x8b5510	            mov edx, dword [rbp + 0x10] 	      1462	dwarf2.c	FUNCTION_25
0x4001d54	          0x895020	             mov dword [rax + 0x20], edx	      1462	dwarf2.c	FUNCTION_25
0x4001d57	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      1463	dwarf2.c	FUNCTION_25
0x4001d5a	            0x89c2	                            mov edx, eax	      1463	dwarf2.c	FUNCTION_25
0x4001d5c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1463	dwarf2.c	FUNCTION_25
0x4001d60	          0x885025	               mov byte [rax + 0x25], dl	      1463	dwarf2.c	FUNCTION_25
0x4001d63	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4001d68	            0x7468	                            je 0x4001dd2	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4001d6a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4001d6e	           0xfb600	                   movzx eax, byte [rax]	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4001d71	            0x84c0	                             test al, al	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4001d73	            0x745d	                            je 0x4001dd2	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4001d75	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d79	          0x4889c7	                            mov rdi, rax	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d7c	      0xe800000000	                          call 0x4001d81	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d81	        0x488d5001	                      lea rdx, [rax + 1]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d85	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d89	          0x488b00	                    mov rax, qword [rax]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d8c	          0x4889d6	                            mov rsi, rdx	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d8f	          0x4889c7	                            mov rdi, rax	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d92	      0xe800000000	                          call 0x4001d97	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d97	          0x4889c2	                            mov rdx, rax	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d9a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001d9e	        0x48895010	             mov qword [rax + 0x10], rdx	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4001da2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1468	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x4001da6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1468	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x4001daa	          0x4885c0	                           test rax, rax	      1468	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x4001dad	            0x750a	                           jne 0x4001db9	      1468	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x4001daf	      0xb800000000	                              mov eax, 0	      1469	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x4001db4	      0xe9bd020000	                           jmp 0x4002076	      1469	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x4001db9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1470	dwarf2.c	FUNCTION_25	IF_2	CALL_4
0x4001dbd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1470	dwarf2.c	FUNCTION_25	IF_2	CALL_4
0x4001dc1	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1470	dwarf2.c	FUNCTION_25	IF_2	CALL_4
0x4001dc5	          0x4889d6	                            mov rsi, rdx	      1470	dwarf2.c	FUNCTION_25	IF_2	CALL_4
0x4001dc8	          0x4889c7	                            mov rdi, rax	      1470	dwarf2.c	FUNCTION_25	IF_2	CALL_4
0x4001dcb	      0xe800000000	                          call 0x4001dd0	      1470	dwarf2.c	FUNCTION_25	IF_2	CALL_4
0x4001dd0	            0xeb0c	                           jmp 0x4001dde	      1470	dwarf2.c	FUNCTION_25	IF_2	CALL_4
0x4001dd2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1473	dwarf2.c	FUNCTION_25	ELSE_1
0x4001dd6	    0x48c740100000	               mov qword [rax + 0x10], 0	      1473	dwarf2.c	FUNCTION_25	ELSE_1
0x4001dde	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1490	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001de3	            0x747b	                            je 0x4001e60	      1490	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001de5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001de9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001ded	        0x488b4008	                mov rax, qword [rax + 8]	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001df1	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001df5	            0x7569	                           jne 0x4001e60	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001df7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001dfb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001dff	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e03	          0x3a45bc	               cmp al, byte [rbp - 0x44]	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e06	            0x7558	                           jne 0x4001e60	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e0c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e10	         0xfb64025	           movzx eax, byte [rax + 0x25] 	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e14	           0xfb6c0	                           movzx eax, al	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e17	          0x3b4518	            cmp eax, dword [rbp + 0x18] 	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e1a	            0x7544	                           jne 0x4001e60	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e1c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4001e20	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4001e24	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4001e28	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4001e2c	          0x4839c2	                            cmp rdx, rax	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4001e2f	            0x750c	                           jne 0x4001e3d	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4001e31	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1498	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4001e35	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1498	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4001e39	        0x48895038	             mov qword [rax + 0x38], rdx	      1498	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4001e3d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e41	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e45	          0x488b10	                    mov rdx, qword [rax]	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e48	        0x488b45f8	                mov rax, qword [rbp - 8]	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e4c	          0x488910	                    mov qword [rax], rdx	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1500	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e53	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1500	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e57	        0x48895010	             mov qword [rax + 0x10], rdx	      1500	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e5b	      0xe911020000	                           jmp 0x4002071	      1500	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4001e60	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001e65	            0x7410	                            je 0x4001e77	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001e67	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001e6b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001e6f	         0xfb64025	           movzx eax, byte [rax + 0x25] 	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001e73	            0x84c0	                             test al, al	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001e75	            0x747e	                            je 0x4001ef5	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001e77	    0x48c745e82800	           mov qword [rbp - 0x18], 0x28 	      1505	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001e7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1506	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	CALL_5
0x4001e83	          0x4889c7	                            mov rdi, rax	      1506	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	CALL_5
0x4001e86	      0xe800000000	                          call 0x4001e8b	      1506	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	CALL_5
0x4001e8b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1506	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	CALL_5
0x4001e8f	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1507	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x4001e94	            0x750a	                           jne 0x4001ea0	      1507	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x4001e96	      0xb800000000	                              mov eax, 0	      1508	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x4001e9b	      0xe9d6010000	                           jmp 0x4002076	      1508	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x4001ea0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1509	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ea4	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1509	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ea8	          0x488910	                    mov qword [rax], rdx	      1509	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001eab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1510	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001eaf	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1510	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001eb3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1510	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001eb7	        0x48895008	                mov qword [rax + 8], rdx	      1510	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ebb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1511	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ebf	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1511	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ec3	        0x48895010	             mov qword [rax + 0x10], rdx	      1511	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ec7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1512	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ecb	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1512	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ecf	        0x48895038	             mov qword [rax + 0x38], rdx	      1512	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ed3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1513	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ed7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1513	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001edb	        0x48895030	             mov qword [rax + 0x30], rdx	      1513	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001edf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1514	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ee3	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1514	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ee6	          0x8d5001	                      lea edx, [rax + 1]	      1514	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ee9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1514	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001eed	          0x895010	             mov dword [rax + 0x10], edx	      1514	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ef0	      0xe97c010000	                           jmp 0x4002071	      1514	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4001ef5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001ef9	         0xfb64025	           movzx eax, byte [rax + 0x25] 	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001efd	            0x84c0	                             test al, al	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001eff	            0x751b	                           jne 0x4001f1c	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001f01	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1517	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	CALL_6
0x4001f05	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1517	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	CALL_6
0x4001f09	        0x488b45f8	                mov rax, qword [rbp - 8]	      1517	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	CALL_6
0x4001f0d	          0x4889d6	                            mov rsi, rdx	      1517	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	CALL_6
0x4001f10	          0x4889c7	                            mov rdi, rax	      1517	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	CALL_6
0x4001f13	      0xe847fdffff	           call sym.new_line_sorts_after	      1517	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	CALL_6
0x4001f18	            0x85c0	                           test eax, eax	      1517	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	CALL_6
0x4001f1a	            0x743d	                            je 0x4001f59	      1517	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	CALL_6
0x4001f1c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1520	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001f20	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1520	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001f24	        0x488b45f8	                mov rax, qword [rbp - 8]	      1520	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001f28	          0x488910	                    mov qword [rax], rdx	      1520	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001f2b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1521	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001f2f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1521	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001f33	        0x48895010	             mov qword [rax + 0x10], rdx	      1521	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4001f37	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4001f3b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4001f3f	          0x4885c0	                           test rax, rax	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4001f42	     0xf8529010000	                           jne 0x4002071	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4001f48	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1525	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4001f4c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1525	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4001f50	        0x48895038	             mov qword [rax + 0x38], rdx	      1525	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4001f54	      0xe918010000	                           jmp 0x4002071	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4001f59	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x4001f5d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x4001f61	        0x488b45f8	                mov rax, qword [rbp - 8]	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x4001f65	          0x4889d6	                            mov rsi, rdx	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x4001f68	          0x4889c7	                            mov rdi, rax	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x4001f6b	      0xe8effcffff	           call sym.new_line_sorts_after	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x4001f70	            0x85c0	                           test eax, eax	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x4001f72	            0x7554	                           jne 0x4001fc8	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x4001f74	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001f78	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001f7c	          0x488b00	                    mov rax, qword [rax]	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001f7f	          0x4885c0	                           test rax, rax	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001f82	            0x741e	                            je 0x4001fa2	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001f84	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1529	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_8
0x4001f88	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1529	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_8
0x4001f8c	          0x488b10	                    mov rdx, qword [rax]	      1529	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_8
0x4001f8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1529	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_8
0x4001f93	          0x4889d6	                            mov rsi, rdx	      1529	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_8
0x4001f96	          0x4889c7	                            mov rdi, rax	      1529	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_8
0x4001f99	      0xe8c1fcffff	           call sym.new_line_sorts_after	      1529	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_8
0x4001f9e	            0x85c0	                           test eax, eax	      1529	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_8
0x4001fa0	            0x7426	                            je 0x4001fc8	      1529	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_8
0x4001fa2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1532	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001fa6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1532	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001faa	          0x488b10	                    mov rdx, qword [rax]	      1532	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001fad	        0x488b45f8	                mov rax, qword [rbp - 8]	      1532	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001fb1	          0x488910	                    mov qword [rax], rdx	      1532	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001fb4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001fb8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001fbc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001fc0	          0x488910	                    mov qword [rax], rdx	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001fc3	      0xe9a9000000	                           jmp 0x4002071	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4001fc8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1539	dwarf2.c	FUNCTION_25	ELSE_5
0x4001fcc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1539	dwarf2.c	FUNCTION_25	ELSE_5
0x4001fd0	        0x488945d8	             mov qword [rbp - 0x28], rax	      1539	dwarf2.c	FUNCTION_25	ELSE_5
0x4001fd4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1540	dwarf2.c	FUNCTION_25	ELSE_5
0x4001fd8	          0x488b00	                    mov rax, qword [rax]	      1540	dwarf2.c	FUNCTION_25	ELSE_5
0x4001fdb	        0x488945e0	             mov qword [rbp - 0x20], rax	      1540	dwarf2.c	FUNCTION_25	ELSE_5
0x4001fdf	            0xeb41	                           jmp 0x4002022	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4001fe1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1544	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_9
0x4001fe5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1544	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_9
0x4001fe9	          0x4889d6	                            mov rsi, rdx	      1544	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_9
0x4001fec	          0x4889c7	                            mov rdi, rax	      1544	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_9
0x4001fef	      0xe86bfcffff	           call sym.new_line_sorts_after	      1544	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_9
0x4001ff4	            0x85c0	                           test eax, eax	      1544	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_9
0x4001ff6	            0x7517	                           jne 0x400200f	      1544	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_9
0x4001ff8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1545	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_10
0x4001ffc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1545	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_10
0x4002000	          0x4889d6	                            mov rsi, rdx	      1545	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_10
0x4002003	          0x4889c7	                            mov rdi, rax	      1545	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_10
0x4002006	      0xe854fcffff	           call sym.new_line_sorts_after	      1545	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_10
0x400200b	            0x85c0	                           test eax, eax	      1545	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_10
0x400200d	            0x751c	                           jne 0x400202b	      1545	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11	CALL_10
0x400200f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1548	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4002013	        0x488945d8	             mov qword [rbp - 0x28], rax	      1548	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4002017	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400201b	          0x488b00	                    mov rax, qword [rax]	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400201e	        0x488945e0	             mov qword [rbp - 0x20], rax	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4002022	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4002027	            0x75b8	                           jne 0x4001fe1	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4002029	            0xeb01	                           jmp 0x400202c	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400202b	              0x90	                                     nop	      1546	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1	IF_11
0x400202c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1551	dwarf2.c	FUNCTION_25	ELSE_5
0x4002030	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1551	dwarf2.c	FUNCTION_25	ELSE_5
0x4002034	        0x48895038	             mov qword [rax + 0x38], rdx	      1551	dwarf2.c	FUNCTION_25	ELSE_5
0x4002038	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1552	dwarf2.c	FUNCTION_25	ELSE_5
0x400203c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1552	dwarf2.c	FUNCTION_25	ELSE_5
0x4002040	          0x488b10	                    mov rdx, qword [rax]	      1552	dwarf2.c	FUNCTION_25	ELSE_5
0x4002043	        0x488b45f8	                mov rax, qword [rbp - 8]	      1552	dwarf2.c	FUNCTION_25	ELSE_5
0x4002047	          0x488910	                    mov qword [rax], rdx	      1552	dwarf2.c	FUNCTION_25	ELSE_5
0x400204a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1553	dwarf2.c	FUNCTION_25	ELSE_5
0x400204e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1553	dwarf2.c	FUNCTION_25	ELSE_5
0x4002052	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1553	dwarf2.c	FUNCTION_25	ELSE_5
0x4002056	          0x488910	                    mov qword [rax], rdx	      1553	dwarf2.c	FUNCTION_25	ELSE_5
0x4002059	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1554	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x400205d	          0x488b00	                    mov rax, qword [rax]	      1554	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4002060	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1554	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4002064	            0x760b	                           jbe 0x4002071	      1554	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4002066	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1555	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x400206a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1555	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x400206e	          0x488910	                    mov qword [rax], rdx	      1555	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4002071	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x4002076	              0xc9	                                   leave	      1558	dwarf2.c	FUNCTION_25
0x4002077	              0xc3	                                     ret	      1558	dwarf2.c	FUNCTION_25
lookup_info_hash_table	SWITCH,0:ELSE,0:CALL,1:IF,0:DO,0:WHILE,0:functions,0:FOR,0	20
0x40001b6	              0x55	                                push rbp	       505	dwarf2.c	FUNCTION_4
0x40001b7	          0x4889e5	                            mov rbp, rsp	       505	dwarf2.c	FUNCTION_4
0x40001ba	        0x4883ec20	                           sub rsp, 0x20	       505	dwarf2.c	FUNCTION_4
0x40001be	        0x48897de8	             mov qword [rbp - 0x18], rdi	       505	dwarf2.c	FUNCTION_4
0x40001c2	        0x488975e0	             mov qword [rbp - 0x20], rsi	       505	dwarf2.c	FUNCTION_4
0x40001c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40001ca	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40001ce	      0xb900000000	                              mov ecx, 0	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40001d3	      0xba00000000	                              mov edx, 0	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40001d8	          0x4889c7	                            mov rdi, rax	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40001db	      0xe800000000	                          call 0x40001e0	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40001e0	        0x488945f8	                mov qword [rbp - 8], rax	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40001e4	      0x48837df800	                  cmp qword [rbp - 8], 0	       510	dwarf2.c	FUNCTION_4
0x40001e9	            0x740a	                            je 0x40001f5	       510	dwarf2.c	FUNCTION_4
0x40001eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       510	dwarf2.c	FUNCTION_4
0x40001ef	        0x488b4018	            mov rax, qword [rax + 0x18] 	       510	dwarf2.c	FUNCTION_4
0x40001f3	            0xeb05	                           jmp 0x40001fa	       510	dwarf2.c	FUNCTION_4
0x40001f5	      0xb800000000	                              mov eax, 0	       510	dwarf2.c	FUNCTION_4
0x40001fa	              0xc9	                                   leave	       511	dwarf2.c	FUNCTION_4
0x40001fb	              0xc3	                                     ret	       511	dwarf2.c	FUNCTION_4
read_n_bytes	SWITCH,0:ELSE,1:CALL,0:IF,1:DO,0:WHILE,0:functions,0:FOR,0	30
0x4000521	              0x55	                                push rbp	       629	dwarf2.c	FUNCTION_11
0x4000522	          0x4889e5	                            mov rbp, rsp	       629	dwarf2.c	FUNCTION_11
0x4000525	        0x48897de8	             mov qword [rbp - 0x18], rdi	       629	dwarf2.c	FUNCTION_11
0x4000529	        0x488975e0	             mov qword [rbp - 0x20], rsi	       629	dwarf2.c	FUNCTION_11
0x400052d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       629	dwarf2.c	FUNCTION_11
0x4000531	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       630	dwarf2.c	FUNCTION_11
0x4000535	            0x8b00	                    mov eax, dword [rax]	       630	dwarf2.c	FUNCTION_11
0x4000537	          0x8945f4	              mov dword [rbp - 0xc], eax	       630	dwarf2.c	FUNCTION_11
0x400053a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       631	dwarf2.c	FUNCTION_11
0x400053d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       631	dwarf2.c	FUNCTION_11
0x4000541	          0x4801d0	                            add rax, rdx	       631	dwarf2.c	FUNCTION_11
0x4000544	        0x488945f8	                mov qword [rbp - 8], rax	       631	dwarf2.c	FUNCTION_11
0x4000548	        0x488b45f8	                mov rax, qword [rbp - 8]	       633	dwarf2.c	FUNCTION_11	IF_1
0x400054c	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       633	dwarf2.c	FUNCTION_11	IF_1
0x4000550	            0x770a	                            ja 0x400055c	       633	dwarf2.c	FUNCTION_11	IF_1
0x4000552	        0x488b45f8	                mov rax, qword [rbp - 8]	       633	dwarf2.c	FUNCTION_11	IF_1
0x4000556	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       633	dwarf2.c	FUNCTION_11	IF_1
0x400055a	            0x731c	                           jae 0x4000578	       633	dwarf2.c	FUNCTION_11	IF_1
0x400055c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       635	dwarf2.c	FUNCTION_11	IF_1
0x4000560	    0x48c740080000	                  mov qword [rax + 8], 0	       635	dwarf2.c	FUNCTION_11	IF_1
0x4000568	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       636	dwarf2.c	FUNCTION_11	IF_1
0x400056c	    0xc70000000000	                      mov dword [rax], 0	       636	dwarf2.c	FUNCTION_11	IF_1
0x4000572	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       637	dwarf2.c	FUNCTION_11	IF_1
0x4000576	            0xeb10	                           jmp 0x4000588	       637	dwarf2.c	FUNCTION_11	IF_1
0x4000578	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x400057c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x4000580	        0x48895008	                mov qword [rax + 8], rdx	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x4000584	        0x488b45f8	                mov rax, qword [rbp - 8]	       642	dwarf2.c	FUNCTION_11	ELSE_1
0x4000588	              0x5d	                                 pop rbp	       644	dwarf2.c	FUNCTION_11
0x4000589	              0xc3	                                     ret	       644	dwarf2.c	FUNCTION_11
non_mangled	SWITCH,1:ELSE,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:FOR,0	13
0x4001c37	              0x55	                                push rbp	      1296	dwarf2.c	FUNCTION_23
0x4001c38	          0x4889e5	                            mov rbp, rsp	      1296	dwarf2.c	FUNCTION_23
0x4001c3b	          0x897dfc	                mov dword [rbp - 4], edi	      1296	dwarf2.c	FUNCTION_23
0x4001c3e	        0x837dfc1d	               cmp dword [rbp - 4], 0x1d	      1297	dwarf2.c	FUNCTION_23	SWITCH_1
0x4001c42	            0x770d	                            ja 0x4001c51	      1297	dwarf2.c	FUNCTION_23	SWITCH_1
0x4001c44	          0x8b45fc	                mov eax, dword [rbp - 4]	      1297	dwarf2.c	FUNCTION_23	SWITCH_1
0x4001c47	    0x488b04c50000	                  mov rax, qword [rax*8]	      1297	dwarf2.c	FUNCTION_23	SWITCH_1
0x4001c4f	            0xffe0	                                 jmp rax	      1297	dwarf2.c	FUNCTION_23	SWITCH_1
0x4001c51	      0xb800000000	                              mov eax, 0	      1300	dwarf2.c	FUNCTION_23	SWITCH_1
0x4001c56	            0xeb05	                           jmp 0x4001c5d	      1300	dwarf2.c	FUNCTION_23	SWITCH_1
0x4001c58	      0xb801000000	                              mov eax, 1	      1314	dwarf2.c	FUNCTION_23	SWITCH_1
0x4001c5d	              0x5d	                                 pop rbp	      1316	dwarf2.c	FUNCTION_23
0x4001c5e	              0xc3	                                     ret	      1316	dwarf2.c	FUNCTION_23
find_debug_info	SWITCH,0:ELSE,0:CALL,6:IF,8:DO,0:WHILE,0:functions,0:FOR,2	111
0x4006cab	              0x55	                                push rbp	      3811	dwarf2.c	FUNCTION_54
0x4006cac	          0x4889e5	                            mov rbp, rsp	      3811	dwarf2.c	FUNCTION_54
0x4006caf	        0x4883ec30	                           sub rsp, 0x30	      3811	dwarf2.c	FUNCTION_54
0x4006cb3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3811	dwarf2.c	FUNCTION_54
0x4006cb7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3811	dwarf2.c	FUNCTION_54
0x4006cbb	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3811	dwarf2.c	FUNCTION_54
0x4006cbf	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3815	dwarf2.c	FUNCTION_54	IF_1
0x4006cc4	     0xf85c8000000	                           jne 0x4006d92	      3815	dwarf2.c	FUNCTION_54	IF_1
0x4006cca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3817	dwarf2.c	FUNCTION_54	IF_1
0x4006cce	        0x4883c030	                           add rax, 0x30	      3817	dwarf2.c	FUNCTION_54	IF_1
0x4006cd2	          0x488b00	                    mov rax, qword [rax]	      3817	dwarf2.c	FUNCTION_54	IF_1
0x4006cd5	        0x488945f8	                mov qword [rbp - 8], rax	      3817	dwarf2.c	FUNCTION_54	IF_1
0x4006cd9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006cdd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006ce1	          0x4889d6	                            mov rsi, rdx	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006ce4	          0x4889c7	                            mov rdi, rax	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006ce7	      0xe800000000	                          call 0x4006cec	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006cec	        0x488945f0	             mov qword [rbp - 0x10], rax	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006cf0	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4006cf5	            0x7409	                            je 0x4006d00	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4006cf7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3820	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4006cfb	      0xe948010000	                           jmp 0x4006e48	      3820	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4006d00	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3822	dwarf2.c	FUNCTION_54	IF_1
0x4006d04	        0x4883c030	                           add rax, 0x30	      3822	dwarf2.c	FUNCTION_54	IF_1
0x4006d08	        0x488b4008	                mov rax, qword [rax + 8]	      3822	dwarf2.c	FUNCTION_54	IF_1
0x4006d0c	        0x488945f8	                mov qword [rbp - 8], rax	      3822	dwarf2.c	FUNCTION_54	IF_1
0x4006d10	      0x48837df800	                  cmp qword [rbp - 8], 0	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x4006d15	            0x7427	                            je 0x4006d3e	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x4006d17	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006d1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006d1f	          0x4889d6	                            mov rsi, rdx	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006d22	          0x4889c7	                            mov rdi, rax	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006d25	      0xe800000000	                          call 0x4006d2a	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006d2a	        0x488945f0	             mov qword [rbp - 0x10], rax	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006d2e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x4006d33	            0x7409	                            je 0x4006d3e	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x4006d35	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3827	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x4006d39	      0xe90a010000	                           jmp 0x4006e48	      3827	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x4006d3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006d42	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006d49	        0x488945f0	             mov qword [rbp - 0x10], rax	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006d4d	            0xeb32	                           jmp 0x4006d81	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006d4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006d53	          0x488b00	                    mov rax, qword [rax]	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006d56	      0xba11000000	                           mov edx, 0x11	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006d5b	      0xbe00000000	                              mov esi, 0	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006d60	          0x4889c7	                            mov rdi, rax	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006d63	      0xe800000000	                          call 0x4006d68	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006d68	            0x85c0	                           test eax, eax	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006d6a	            0x7509	                           jne 0x4006d75	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006d6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3832	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5
0x4006d70	      0xe9d3000000	                           jmp 0x4006e48	      3832	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5
0x4006d75	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006d79	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006d7d	        0x488945f0	             mov qword [rbp - 0x10], rax	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006d81	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006d86	            0x75c7	                           jne 0x4006d4f	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006d88	      0xb800000000	                              mov eax, 0	      3834	dwarf2.c	FUNCTION_54	IF_1
0x4006d8d	      0xe9b6000000	                           jmp 0x4006e48	      3834	dwarf2.c	FUNCTION_54	IF_1
0x4006d92	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006d96	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006d9a	        0x488945f0	             mov qword [rbp - 0x10], rax	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006d9e	      0xe995000000	                           jmp 0x4006e38	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006da3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3839	dwarf2.c	FUNCTION_54	FOR_2
0x4006da7	        0x4883c030	                           add rax, 0x30	      3839	dwarf2.c	FUNCTION_54	FOR_2
0x4006dab	          0x488b00	                    mov rax, qword [rax]	      3839	dwarf2.c	FUNCTION_54	FOR_2
0x4006dae	        0x488945f8	                mov qword [rbp - 8], rax	      3839	dwarf2.c	FUNCTION_54	FOR_2
0x4006db2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006db6	          0x488b00	                    mov rax, qword [rax]	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006db9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006dbd	          0x4889d6	                            mov rsi, rdx	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006dc0	          0x4889c7	                            mov rdi, rax	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006dc3	      0xe800000000	                          call 0x4006dc8	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006dc8	            0x85c0	                           test eax, eax	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006dca	            0x7506	                           jne 0x4006dd2	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006dcc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3841	dwarf2.c	FUNCTION_54	FOR_2	IF_6
0x4006dd0	            0xeb76	                           jmp 0x4006e48	      3841	dwarf2.c	FUNCTION_54	FOR_2	IF_6
0x4006dd2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3843	dwarf2.c	FUNCTION_54	FOR_2
0x4006dd6	        0x4883c030	                           add rax, 0x30	      3843	dwarf2.c	FUNCTION_54	FOR_2
0x4006dda	        0x488b4008	                mov rax, qword [rax + 8]	      3843	dwarf2.c	FUNCTION_54	FOR_2
0x4006dde	        0x488945f8	                mov qword [rbp - 8], rax	      3843	dwarf2.c	FUNCTION_54	FOR_2
0x4006de2	      0x48837df800	                  cmp qword [rbp - 8], 0	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006de7	            0x7420	                            je 0x4006e09	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006de9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006ded	          0x488b00	                    mov rax, qword [rax]	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006df0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006df4	          0x4889d6	                            mov rsi, rdx	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006df7	          0x4889c7	                            mov rdi, rax	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006dfa	      0xe800000000	                          call 0x4006dff	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006dff	            0x85c0	                           test eax, eax	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006e01	            0x7506	                           jne 0x4006e09	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006e03	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3845	dwarf2.c	FUNCTION_54	FOR_2	IF_7
0x4006e07	            0xeb3f	                           jmp 0x4006e48	      3845	dwarf2.c	FUNCTION_54	FOR_2	IF_7
0x4006e09	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006e0d	          0x488b00	                    mov rax, qword [rax]	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006e10	      0xba11000000	                           mov edx, 0x11	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006e15	      0xbe00000000	                              mov esi, 0	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006e1a	          0x4889c7	                            mov rdi, rax	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006e1d	      0xe800000000	                          call 0x4006e22	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006e22	            0x85c0	                           test eax, eax	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006e24	            0x7506	                           jne 0x4006e2c	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006e26	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3848	dwarf2.c	FUNCTION_54	FOR_2	IF_8
0x4006e2a	            0xeb1c	                           jmp 0x4006e48	      3848	dwarf2.c	FUNCTION_54	FOR_2	IF_8
0x4006e2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006e30	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006e34	        0x488945f0	             mov qword [rbp - 0x10], rax	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006e38	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006e3d	     0xf8560ffffff	                           jne 0x4006da3	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006e43	      0xb800000000	                              mov eax, 0	      3851	dwarf2.c	FUNCTION_54
0x4006e48	              0xc9	                                   leave	      3852	dwarf2.c	FUNCTION_54
0x4006e49	              0xc3	                                     ret	      3852	dwarf2.c	FUNCTION_54
line_info_add_file_name	SWITCH,0:ELSE,0:CALL,1:IF,2:DO,0:WHILE,0:functions,0:FOR,0	103
0x4002a06	              0x55	                                push rbp	      1860	dwarf2.c	FUNCTION_33
0x4002a07	          0x4889e5	                            mov rbp, rsp	      1860	dwarf2.c	FUNCTION_33
0x4002a0a	        0x4883ec30	                           sub rsp, 0x30	      1860	dwarf2.c	FUNCTION_33
0x4002a0e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1860	dwarf2.c	FUNCTION_33
0x4002a12	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1860	dwarf2.c	FUNCTION_33
0x4002a16	          0x8955dc	             mov dword [rbp - 0x24], edx	      1860	dwarf2.c	FUNCTION_33
0x4002a19	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1860	dwarf2.c	FUNCTION_33
0x4002a1c	        0x448945d4	             mov dword [rbp - 0x2c], r8d	      1860	dwarf2.c	FUNCTION_33
0x4002a20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a24	          0x8b4808	                mov ecx, dword [rax + 8]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a27	      0xbacdcccccc	                     mov edx, 0xcccccccd	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a2c	            0x89c8	                            mov eax, ecx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a2e	            0xf7e2	                                 mul edx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a30	            0x89d0	                            mov eax, edx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a32	          0xc1e802	                              shr eax, 2	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a35	            0x89c2	                            mov edx, eax	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a37	          0xc1e202	                              shl edx, 2	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a3a	             0x1c2	                            add edx, eax	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a3c	            0x89c8	                            mov eax, ecx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a3e	            0x29d0	                            sub eax, edx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a40	            0x85c0	                           test eax, eax	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a42	            0x755d	                           jne 0x4002aa1	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002a44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1866	dwarf2.c	FUNCTION_33	IF_1
0x4002a48	          0x8b4008	                mov eax, dword [rax + 8]	      1866	dwarf2.c	FUNCTION_33	IF_1
0x4002a4b	          0x83c005	                              add eax, 5	      1866	dwarf2.c	FUNCTION_33	IF_1
0x4002a4e	            0x89c0	                            mov eax, eax	      1866	dwarf2.c	FUNCTION_33	IF_1
0x4002a50	        0x488945f0	             mov qword [rbp - 0x10], rax	      1866	dwarf2.c	FUNCTION_33	IF_1
0x4002a54	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1867	dwarf2.c	FUNCTION_33	IF_1
0x4002a58	          0x4889d0	                            mov rax, rdx	      1867	dwarf2.c	FUNCTION_33	IF_1
0x4002a5b	          0x4801c0	                            add rax, rax	      1867	dwarf2.c	FUNCTION_33	IF_1
0x4002a5e	          0x4801d0	                            add rax, rdx	      1867	dwarf2.c	FUNCTION_33	IF_1
0x4002a61	        0x48c1e003	                              shl rax, 3	      1867	dwarf2.c	FUNCTION_33	IF_1
0x4002a65	        0x488945f0	             mov qword [rbp - 0x10], rax	      1867	dwarf2.c	FUNCTION_33	IF_1
0x4002a69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002a6d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002a71	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002a75	          0x4889d6	                            mov rsi, rdx	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002a78	          0x4889c7	                            mov rdi, rax	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002a7b	      0xe800000000	                          call 0x4002a80	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002a80	        0x488945f8	                mov qword [rbp - 8], rax	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002a84	      0x48837df800	                  cmp qword [rbp - 8], 0	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x4002a89	            0x750a	                           jne 0x4002a95	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x4002a8b	      0xb800000000	                              mov eax, 0	      1871	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x4002a90	      0xe9bf000000	                           jmp 0x4002b54	      1871	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x4002a95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4002a99	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4002a9d	        0x48895028	             mov qword [rax + 0x28], rdx	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4002aa1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1875	dwarf2.c	FUNCTION_33
0x4002aa5	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1875	dwarf2.c	FUNCTION_33
0x4002aa9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1875	dwarf2.c	FUNCTION_33
0x4002aad	          0x8b4008	                mov eax, dword [rax + 8]	      1875	dwarf2.c	FUNCTION_33
0x4002ab0	            0x89c1	                            mov ecx, eax	      1875	dwarf2.c	FUNCTION_33
0x4002ab2	          0x4889c8	                            mov rax, rcx	      1875	dwarf2.c	FUNCTION_33
0x4002ab5	          0x4801c0	                            add rax, rax	      1875	dwarf2.c	FUNCTION_33
0x4002ab8	          0x4801c8	                            add rax, rcx	      1875	dwarf2.c	FUNCTION_33
0x4002abb	        0x48c1e003	                              shl rax, 3	      1875	dwarf2.c	FUNCTION_33
0x4002abf	          0x4801c2	                            add rdx, rax	      1875	dwarf2.c	FUNCTION_33
0x4002ac2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1875	dwarf2.c	FUNCTION_33
0x4002ac6	          0x488902	                    mov qword [rdx], rax	      1875	dwarf2.c	FUNCTION_33
0x4002ac9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1876	dwarf2.c	FUNCTION_33
0x4002acd	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1876	dwarf2.c	FUNCTION_33
0x4002ad1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1876	dwarf2.c	FUNCTION_33
0x4002ad5	          0x8b4008	                mov eax, dword [rax + 8]	      1876	dwarf2.c	FUNCTION_33
0x4002ad8	            0x89c1	                            mov ecx, eax	      1876	dwarf2.c	FUNCTION_33
0x4002ada	          0x4889c8	                            mov rax, rcx	      1876	dwarf2.c	FUNCTION_33
0x4002add	          0x4801c0	                            add rax, rax	      1876	dwarf2.c	FUNCTION_33
0x4002ae0	          0x4801c8	                            add rax, rcx	      1876	dwarf2.c	FUNCTION_33
0x4002ae3	        0x48c1e003	                              shl rax, 3	      1876	dwarf2.c	FUNCTION_33
0x4002ae7	          0x4801c2	                            add rdx, rax	      1876	dwarf2.c	FUNCTION_33
0x4002aea	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1876	dwarf2.c	FUNCTION_33
0x4002aed	          0x894208	                mov dword [rdx + 8], eax	      1876	dwarf2.c	FUNCTION_33
0x4002af0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1877	dwarf2.c	FUNCTION_33
0x4002af4	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1877	dwarf2.c	FUNCTION_33
0x4002af8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1877	dwarf2.c	FUNCTION_33
0x4002afc	          0x8b4008	                mov eax, dword [rax + 8]	      1877	dwarf2.c	FUNCTION_33
0x4002aff	            0x89c1	                            mov ecx, eax	      1877	dwarf2.c	FUNCTION_33
0x4002b01	          0x4889c8	                            mov rax, rcx	      1877	dwarf2.c	FUNCTION_33
0x4002b04	          0x4801c0	                            add rax, rax	      1877	dwarf2.c	FUNCTION_33
0x4002b07	          0x4801c8	                            add rax, rcx	      1877	dwarf2.c	FUNCTION_33
0x4002b0a	        0x48c1e003	                              shl rax, 3	      1877	dwarf2.c	FUNCTION_33
0x4002b0e	          0x4801c2	                            add rdx, rax	      1877	dwarf2.c	FUNCTION_33
0x4002b11	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1877	dwarf2.c	FUNCTION_33
0x4002b14	          0x89420c	              mov dword [rdx + 0xc], eax	      1877	dwarf2.c	FUNCTION_33
0x4002b17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1878	dwarf2.c	FUNCTION_33
0x4002b1b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1878	dwarf2.c	FUNCTION_33
0x4002b1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1878	dwarf2.c	FUNCTION_33
0x4002b23	          0x8b4008	                mov eax, dword [rax + 8]	      1878	dwarf2.c	FUNCTION_33
0x4002b26	            0x89c1	                            mov ecx, eax	      1878	dwarf2.c	FUNCTION_33
0x4002b28	          0x4889c8	                            mov rax, rcx	      1878	dwarf2.c	FUNCTION_33
0x4002b2b	          0x4801c0	                            add rax, rax	      1878	dwarf2.c	FUNCTION_33
0x4002b2e	          0x4801c8	                            add rax, rcx	      1878	dwarf2.c	FUNCTION_33
0x4002b31	        0x48c1e003	                              shl rax, 3	      1878	dwarf2.c	FUNCTION_33
0x4002b35	          0x4801c2	                            add rdx, rax	      1878	dwarf2.c	FUNCTION_33
0x4002b38	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1878	dwarf2.c	FUNCTION_33
0x4002b3b	          0x894210	             mov dword [rdx + 0x10], eax	      1878	dwarf2.c	FUNCTION_33
0x4002b3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1879	dwarf2.c	FUNCTION_33
0x4002b42	          0x8b4008	                mov eax, dword [rax + 8]	      1879	dwarf2.c	FUNCTION_33
0x4002b45	          0x8d5001	                      lea edx, [rax + 1]	      1879	dwarf2.c	FUNCTION_33
0x4002b48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1879	dwarf2.c	FUNCTION_33
0x4002b4c	          0x895008	                mov dword [rax + 8], edx	      1879	dwarf2.c	FUNCTION_33
0x4002b4f	      0xb801000000	                              mov eax, 1	      1880	dwarf2.c	FUNCTION_33
0x4002b54	              0xc9	                                   leave	      1881	dwarf2.c	FUNCTION_33
0x4002b55	              0xc3	                                     ret	      1881	dwarf2.c	FUNCTION_33
lookup_symbol_in_variable_table	SWITCH,0:ELSE,0:CALL,3:IF,2:DO,0:WHILE,0:functions,0:FOR,1	77
0x4004e86	              0x55	                                push rbp	      2773	dwarf2.c	ELSE_1	FUNCTION_42
0x4004e87	          0x4889e5	                            mov rbp, rsp	      2773	dwarf2.c	ELSE_1	FUNCTION_42
0x4004e8a	        0x4883ec50	                           sub rsp, 0x50	      2773	dwarf2.c	ELSE_1	FUNCTION_42
0x4004e8e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2773	dwarf2.c	ELSE_1	FUNCTION_42
0x4004e92	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2773	dwarf2.c	ELSE_1	FUNCTION_42
0x4004e96	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2773	dwarf2.c	ELSE_1	FUNCTION_42
0x4004e9a	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      2773	dwarf2.c	ELSE_1	FUNCTION_42
0x4004e9e	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      2773	dwarf2.c	ELSE_1	FUNCTION_42
0x4004ea2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2774	dwarf2.c	ELSE_1	FUNCTION_42	CALL_1
0x4004ea6	        0x488b4008	                mov rax, qword [rax + 8]	      2774	dwarf2.c	ELSE_1	FUNCTION_42	CALL_1
0x4004eaa	        0x488945f0	             mov qword [rbp - 0x10], rax	      2774	dwarf2.c	ELSE_1	FUNCTION_42	CALL_1
0x4004eae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2775	dwarf2.c	ELSE_1	FUNCTION_42	CALL_2
0x4004eb2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2775	dwarf2.c	ELSE_1	FUNCTION_42	CALL_2
0x4004eb6	        0x488945f8	                mov qword [rbp - 8], rax	      2775	dwarf2.c	ELSE_1	FUNCTION_42	CALL_2
0x4004eba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4004ebe	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4004ec5	        0x488945e8	             mov qword [rbp - 0x18], rax	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4004ec9	            0xeb78	                           jmp 0x4004f43	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4004ecb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2779	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ecf	         0xfb64030	           movzx eax, byte [rax + 0x30] 	      2779	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ed3	          0x83e001	                              and eax, 1	      2779	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ed6	            0x84c0	                             test al, al	      2779	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ed8	            0x755e	                           jne 0x4004f38	      2779	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004eda	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2780	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ede	        0x488b4008	                mov rax, qword [rax + 8]	      2780	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ee2	          0x4885c0	                           test rax, rax	      2780	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ee5	            0x7451	                            je 0x4004f38	      2780	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ee7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2781	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004eeb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2781	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004eef	          0x4885c0	                           test rax, rax	      2781	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ef2	            0x7444	                            je 0x4004f38	      2781	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ef4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2782	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004ef8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2782	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004efc	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2782	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f00	            0x7536	                           jne 0x4004f38	      2782	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f06	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f0a	          0x4885c0	                           test rax, rax	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f0d	            0x740e	                            je 0x4004f1d	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f0f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f13	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f17	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f1b	            0x751b	                           jne 0x4004f38	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004f21	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004f25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004f29	          0x4889d6	                            mov rsi, rdx	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004f2c	          0x4889c7	                            mov rdi, rax	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004f2f	      0xe800000000	                          call 0x4004f34	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004f34	            0x85c0	                           test eax, eax	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004f36	            0x7414	                            je 0x4004f4c	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004f38	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4004f3c	          0x488b00	                    mov rax, qword [rax]	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4004f3f	        0x488945e8	             mov qword [rbp - 0x18], rax	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4004f43	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4004f48	            0x7581	                           jne 0x4004ecb	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4004f4a	            0xeb01	                           jmp 0x4004f4d	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4004f4c	              0x90	                                     nop	      2785	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4004f4d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2787	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f52	            0x7431	                            je 0x4004f85	      2787	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2789	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f58	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2789	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f5c	        0x48895028	             mov qword [rax + 0x28], rdx	      2789	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2790	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f64	        0x488b5008	                mov rdx, qword [rax + 8]	      2790	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f68	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2790	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f6c	          0x488910	                    mov qword [rax], rdx	      2790	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2791	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f73	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2791	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f76	            0x89c2	                            mov edx, eax	      2791	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f78	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2791	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f7c	            0x8910	                    mov dword [rax], edx	      2791	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f7e	      0xb801000000	                              mov eax, 1	      2792	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f83	            0xeb05	                           jmp 0x4004f8a	      2792	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4004f85	      0xb800000000	                              mov eax, 0	      2795	dwarf2.c	ELSE_1	FUNCTION_42
0x4004f8a	              0xc9	                                   leave	      2796	dwarf2.c	ELSE_1	FUNCTION_42
0x4004f8b	              0xc3	                                     ret	      2796	dwarf2.c	ELSE_1	FUNCTION_42
read_attribute	SWITCH,0:ELSE,0:CALL,1:IF,0:DO,0:WHILE,0:functions,0:FOR,0	28
0x4001bd8	              0x55	                                push rbp	      1284	dwarf2.c	FUNCTION_22
0x4001bd9	          0x4889e5	                            mov rbp, rsp	      1284	dwarf2.c	FUNCTION_22
0x4001bdc	        0x4883ec30	                           sub rsp, 0x30	      1284	dwarf2.c	FUNCTION_22
0x4001be0	        0x48897df8	                mov qword [rbp - 8], rdi	      1284	dwarf2.c	FUNCTION_22
0x4001be4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1284	dwarf2.c	FUNCTION_22
0x4001be8	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1284	dwarf2.c	FUNCTION_22
0x4001bec	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1284	dwarf2.c	FUNCTION_22
0x4001bf0	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1284	dwarf2.c	FUNCTION_22
0x4001bf4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1285	dwarf2.c	FUNCTION_22
0x4001bf8	            0x8b10	                    mov edx, dword [rax]	      1285	dwarf2.c	FUNCTION_22
0x4001bfa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1285	dwarf2.c	FUNCTION_22
0x4001bfe	            0x8910	                    mov dword [rax], edx	      1285	dwarf2.c	FUNCTION_22
0x4001c00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c04	        0x488b5008	                mov rdx, qword [rax + 8]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c0c	          0x8b7004	                mov esi, dword [rax + 4]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c0f	        0x4c8b45d8	              mov r8, qword [rbp - 0x28]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c13	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c17	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c1b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c1f	          0x4d89c1	                              mov r9, r8	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c22	          0x4989f8	                             mov r8, rdi	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c25	          0x4889c7	                            mov rdi, rax	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c28	      0xe884f6ffff	           call sym.read_attribute_value	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c2d	        0x488945e0	             mov qword [rbp - 0x20], rax	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4001c31	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1288	dwarf2.c	FUNCTION_22
0x4001c35	              0xc9	                                   leave	      1289	dwarf2.c	FUNCTION_22
0x4001c36	              0xc3	                                     ret	      1289	dwarf2.c	FUNCTION_22
parse_comp_unit	SWITCH,1:ELSE,2:CALL,30:IF,22:DO,0:WHILE,0:functions,0:FOR,1	397
0x4006089	              0x55	                                push rbp	      3337	dwarf2.c	FUNCTION_46
0x400608a	          0x4889e5	                            mov rbp, rsp	      3337	dwarf2.c	FUNCTION_46
0x400608d	    0x4881ecc00000	                           sub rsp, 0xc0	      3337	dwarf2.c	FUNCTION_46
0x4006094	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      3337	dwarf2.c	FUNCTION_46
0x400609b	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      3337	dwarf2.c	FUNCTION_46
0x40060a2	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      3337	dwarf2.c	FUNCTION_46
0x40060a9	    0x898d44ffffff	             mov dword [rbp - 0xbc], ecx	      3337	dwarf2.c	FUNCTION_46
0x40060af	    0x64488b042528	                mov rax, qword fs:[0x28]	      3337	dwarf2.c	FUNCTION_46
0x40060b8	        0x488945f8	                mov qword [rbp - 8], rax	      3337	dwarf2.c	FUNCTION_46
0x40060bc	            0x31c0	                            xor eax, eax	      3337	dwarf2.c	FUNCTION_46
0x40060be	    0x48c745800000	               mov qword [rbp - 0x80], 0	      3340	dwarf2.c	FUNCTION_46
0x40060c6	    0xc78568ffffff	     mov dword [rbp - 0x98], 0xffffffff 	      3342	dwarf2.c	FUNCTION_46
0x40060d0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3347	dwarf2.c	FUNCTION_46
0x40060d7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3347	dwarf2.c	FUNCTION_46
0x40060db	        0x48894588	             mov qword [rbp - 0x78], rax	      3347	dwarf2.c	FUNCTION_46
0x40060df	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      3348	dwarf2.c	FUNCTION_46
0x40060e3	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3348	dwarf2.c	FUNCTION_46
0x40060ea	          0x4801d0	                            add rax, rdx	      3348	dwarf2.c	FUNCTION_46
0x40060ed	        0x488945a8	             mov qword [rbp - 0x58], rax	      3348	dwarf2.c	FUNCTION_46
0x40060f1	    0x48c745900000	               mov qword [rbp - 0x70], 0	      3350	dwarf2.c	FUNCTION_46
0x40060f9	    0x48c745980000	               mov qword [rbp - 0x68], 0	      3351	dwarf2.c	FUNCTION_46
0x4006101	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3352	dwarf2.c	FUNCTION_46
0x4006108	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3352	dwarf2.c	FUNCTION_46
0x400610c	        0x488945b0	             mov qword [rbp - 0x50], rax	      3352	dwarf2.c	FUNCTION_46
0x4006110	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	      3353	dwarf2.c	FUNCTION_46
0x400611a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x400611e	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x4006122	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x4006126	          0x4889ce	                            mov rsi, rcx	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x4006129	          0x4889c7	                            mov rdi, rax	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x400612c	      0xe830a3ffff	                   call sym.read_2_bytes	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x4006131	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x4006137	      0x4883458802	               add qword [rbp - 0x78], 2	      3357	dwarf2.c	FUNCTION_46
0x400613c	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 1	      3358	dwarf2.c	FUNCTION_46	IF_1
0x4006143	            0x7609	                           jbe 0x400614e	      3358	dwarf2.c	FUNCTION_46	IF_1
0x4006145	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 5	      3358	dwarf2.c	FUNCTION_46	IF_1
0x400614c	            0x7644	                           jbe 0x4006192	      3358	dwarf2.c	FUNCTION_46	IF_1
0x400614e	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      3364	dwarf2.c	FUNCTION_46	IF_1	IF_2
0x4006155	            0x7431	                            je 0x4006188	      3364	dwarf2.c	FUNCTION_46	IF_1	IF_2
0x4006157	      0xbe00000000	                              mov esi, 0	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x400615c	      0xbf00000000	                              mov edi, 0	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x4006161	      0xe800000000	                          call 0x4006166	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x4006166	          0x4889c2	                            mov rdx, rax	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x4006169	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x400616f	            0x89c6	                            mov esi, eax	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4006171	          0x4889d7	                            mov rdi, rdx	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4006174	      0xb800000000	                              mov eax, 0	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4006179	      0xe800000000	                          call 0x400617e	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x400617e	      0xbf11000000	                           mov edi, 0x11	      3369	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_4
0x4006183	      0xe800000000	                          call 0x4006188	      3369	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_4
0x4006188	      0xb800000000	                              mov eax, 0	      3371	dwarf2.c	FUNCTION_46	IF_1
0x400618d	      0xe982050000	                           jmp 0x4006714	      3371	dwarf2.c	FUNCTION_46	IF_1
0x4006192	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 4	      3374	dwarf2.c	FUNCTION_46	IF_3
0x4006199	            0x770c	                            ja 0x40061a7	      3374	dwarf2.c	FUNCTION_46	IF_3
0x400619b	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	      3375	dwarf2.c	FUNCTION_46	IF_3
0x40061a5	            0xeb44	                           jmp 0x40061eb	      3375	dwarf2.c	FUNCTION_46	IF_3
0x40061a7	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3378	dwarf2.c	FUNCTION_46	ELSE_1	CALL_5
0x40061ab	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3378	dwarf2.c	FUNCTION_46	ELSE_1	CALL_5
0x40061af	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3378	dwarf2.c	FUNCTION_46	ELSE_1	CALL_5
0x40061b3	          0x4889ce	                            mov rsi, rcx	      3378	dwarf2.c	FUNCTION_46	ELSE_1	CALL_5
0x40061b6	          0x4889c7	                            mov rdi, rax	      3378	dwarf2.c	FUNCTION_46	ELSE_1	CALL_5
0x40061b9	      0xe83ba2ffff	                    call sym.read_1_byte	      3378	dwarf2.c	FUNCTION_46	ELSE_1	CALL_5
0x40061be	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      3378	dwarf2.c	FUNCTION_46	ELSE_1	CALL_5
0x40061c4	      0x4883458801	               add qword [rbp - 0x78], 1	      3379	dwarf2.c	FUNCTION_46	ELSE_1
0x40061c9	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3381	dwarf2.c	FUNCTION_46	ELSE_1	CALL_6
0x40061cd	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3381	dwarf2.c	FUNCTION_46	ELSE_1	CALL_6
0x40061d1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3381	dwarf2.c	FUNCTION_46	ELSE_1	CALL_6
0x40061d5	          0x4889ce	                            mov rsi, rcx	      3381	dwarf2.c	FUNCTION_46	ELSE_1	CALL_6
0x40061d8	          0x4889c7	                            mov rdi, rax	      3381	dwarf2.c	FUNCTION_46	ELSE_1	CALL_6
0x40061db	      0xe819a2ffff	                    call sym.read_1_byte	      3381	dwarf2.c	FUNCTION_46	ELSE_1	CALL_6
0x40061e0	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      3381	dwarf2.c	FUNCTION_46	ELSE_1	CALL_6
0x40061e6	      0x4883458801	               add qword [rbp - 0x78], 1	      3382	dwarf2.c	FUNCTION_46	ELSE_1
0x40061eb	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 4	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40061f2	            0x7418	                            je 0x400620c	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40061f4	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 8	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40061fb	            0x740f	                            je 0x400620c	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40061fd	      0xbe390d0000	                          mov esi, 0xd39	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x4006202	      0xbf00000000	                              mov edi, 0	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x4006207	      0xe800000000	                          call 0x400620c	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x400620c	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 4	      3386	dwarf2.c	FUNCTION_46	IF_4
0x4006213	            0x751f	                           jne 0x4006234	      3386	dwarf2.c	FUNCTION_46	IF_4
0x4006215	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x4006219	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x400621d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x4006221	          0x4889ce	                            mov rsi, rcx	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x4006224	          0x4889c7	                            mov rdi, rax	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x4006227	      0xe875a2ffff	                   call sym.read_4_bytes	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x400622c	            0x89c0	                            mov eax, eax	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x400622e	        0x48894580	             mov qword [rbp - 0x80], rax	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x4006232	            0xeb1b	                           jmp 0x400624f	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x4006234	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x4006238	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x400623c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x4006240	          0x4889ce	                            mov rsi, rcx	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x4006243	          0x4889c7	                            mov rdi, rax	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x4006246	      0xe896a2ffff	                   call sym.read_8_bytes	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x400624b	        0x48894580	             mov qword [rbp - 0x80], rax	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x400624f	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      3390	dwarf2.c	FUNCTION_46
0x4006255	        0x48014588	            add qword [rbp - 0x78], rax 	      3390	dwarf2.c	FUNCTION_46
0x4006259	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 4	      3392	dwarf2.c	FUNCTION_46	IF_5
0x4006260	            0x7722	                            ja 0x4006284	      3392	dwarf2.c	FUNCTION_46	IF_5
0x4006262	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3394	dwarf2.c	FUNCTION_46	IF_5	CALL_10
0x4006266	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3394	dwarf2.c	FUNCTION_46	IF_5	CALL_10
0x400626a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3394	dwarf2.c	FUNCTION_46	IF_5	CALL_10
0x400626e	          0x4889ce	                            mov rsi, rcx	      3394	dwarf2.c	FUNCTION_46	IF_5	CALL_10
0x4006271	          0x4889c7	                            mov rdi, rax	      3394	dwarf2.c	FUNCTION_46	IF_5	CALL_10
0x4006274	      0xe880a1ffff	                    call sym.read_1_byte	      3394	dwarf2.c	FUNCTION_46	IF_5	CALL_10
0x4006279	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      3394	dwarf2.c	FUNCTION_46	IF_5	CALL_10
0x400627f	      0x4883458801	               add qword [rbp - 0x78], 1	      3395	dwarf2.c	FUNCTION_46	IF_5
0x4006284	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 2	      3398	dwarf2.c	FUNCTION_46	IF_6
0x400628b	            0x750f	                           jne 0x400629c	      3398	dwarf2.c	FUNCTION_46	IF_6
0x400628d	      0x4883458808	               add qword [rbp - 0x78], 8	      3401	dwarf2.c	FUNCTION_46	IF_6
0x4006292	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      3404	dwarf2.c	FUNCTION_46	IF_6
0x4006298	        0x48014588	            add qword [rbp - 0x78], rax 	      3404	dwarf2.c	FUNCTION_46	IF_6
0x400629c	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 8	      3407	dwarf2.c	FUNCTION_46	IF_7
0x40062a3	            0x7640	                           jbe 0x40062e5	      3407	dwarf2.c	FUNCTION_46	IF_7
0x40062a5	      0xbe00000000	                              mov esi, 0	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x40062aa	      0xbf00000000	                              mov edi, 0	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x40062af	      0xe800000000	                          call 0x40062b4	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x40062b4	          0x4889c1	                            mov rcx, rax	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x40062b7	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40062bd	      0xba08000000	                              mov edx, 8	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40062c2	            0x89c6	                            mov esi, eax	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40062c4	          0x4889cf	                            mov rdi, rcx	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40062c7	      0xb800000000	                              mov eax, 0	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40062cc	      0xe800000000	                          call 0x40062d1	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40062d1	      0xbf11000000	                           mov edi, 0x11	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x40062d6	      0xe800000000	                          call 0x40062db	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x40062db	      0xb800000000	                              mov eax, 0	      3416	dwarf2.c	FUNCTION_46	IF_7
0x40062e0	      0xe92f040000	                           jmp 0x4006714	      3416	dwarf2.c	FUNCTION_46	IF_7
0x40062e5	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 2	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40062ec	            0x743d	                            je 0x400632b	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40062ee	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 4	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40062f5	            0x7434	                            je 0x400632b	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40062f7	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 8	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40062fe	            0x742b	                            je 0x400632b	      3419	dwarf2.c	FUNCTION_46	IF_8
0x4006300	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x4006306	            0x89c6	                            mov esi, eax	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x4006308	      0xbf00000000	                              mov edi, 0	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x400630d	      0xb800000000	                              mov eax, 0	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x4006312	      0xe800000000	                          call 0x4006317	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x4006317	      0xbf11000000	                           mov edi, 0x11	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x400631c	      0xe800000000	                          call 0x4006321	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x4006321	      0xb800000000	                              mov eax, 0	      3425	dwarf2.c	FUNCTION_46	IF_8
0x4006326	      0xe9e9030000	                           jmp 0x4006714	      3425	dwarf2.c	FUNCTION_46	IF_8
0x400632b	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      3429	dwarf2.c	FUNCTION_46	CALL_16
0x4006332	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      3429	dwarf2.c	FUNCTION_46	CALL_16
0x4006336	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3429	dwarf2.c	FUNCTION_46	CALL_16
0x400633a	          0x4889ce	                            mov rsi, rcx	      3429	dwarf2.c	FUNCTION_46	CALL_16
0x400633d	          0x4889c7	                            mov rdi, rax	      3429	dwarf2.c	FUNCTION_46	CALL_16
0x4006340	      0xe8bfaaffff	                   call sym.read_abbrevs	      3429	dwarf2.c	FUNCTION_46	CALL_16
0x4006345	        0x488945b8	             mov qword [rbp - 0x48], rax	      3429	dwarf2.c	FUNCTION_46	CALL_16
0x4006349	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3430	dwarf2.c	FUNCTION_46	IF_9
0x400634e	            0x750a	                           jne 0x400635a	      3430	dwarf2.c	FUNCTION_46	IF_9
0x4006350	      0xb800000000	                              mov eax, 0	      3431	dwarf2.c	FUNCTION_46	IF_9
0x4006355	      0xe9ba030000	                           jmp 0x4006714	      3431	dwarf2.c	FUNCTION_46	IF_9
0x400635a	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x400635e	    0x488d9564ffff	                   lea rdx, [rbp - 0x9c]	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4006365	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4006369	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x400636d	          0x4989c8	                             mov r8, rcx	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4006370	      0xb900000000	                              mov ecx, 0	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4006375	          0x4889c7	                            mov rdi, rax	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4006378	      0xe800000000	                          call 0x400637d	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x400637d	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4006383	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      3435	dwarf2.c	FUNCTION_46
0x4006389	            0x89c0	                            mov eax, eax	      3435	dwarf2.c	FUNCTION_46
0x400638b	        0x48014588	            add qword [rbp - 0x78], rax 	      3435	dwarf2.c	FUNCTION_46
0x400638f	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      3436	dwarf2.c	FUNCTION_46	IF_10
0x4006396	            0x750a	                           jne 0x40063a2	      3436	dwarf2.c	FUNCTION_46	IF_10
0x4006398	      0xb800000000	                              mov eax, 0	      3442	dwarf2.c	FUNCTION_46	IF_10
0x400639d	      0xe972030000	                           jmp 0x4006714	      3442	dwarf2.c	FUNCTION_46	IF_10
0x40063a2	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3445	dwarf2.c	FUNCTION_46	CALL_18
0x40063a6	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3445	dwarf2.c	FUNCTION_46	CALL_18
0x40063ac	          0x4889d6	                            mov rsi, rdx	      3445	dwarf2.c	FUNCTION_46	CALL_18
0x40063af	            0x89c7	                            mov edi, eax	      3445	dwarf2.c	FUNCTION_46	CALL_18
0x40063b1	      0xe8dca9ffff	                  call sym.lookup_abbrev	      3445	dwarf2.c	FUNCTION_46	CALL_18
0x40063b6	        0x488945c0	             mov qword [rbp - 0x40], rax	      3445	dwarf2.c	FUNCTION_46	CALL_18
0x40063ba	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3446	dwarf2.c	FUNCTION_46	IF_11
0x40063bf	            0x753b	                           jne 0x40063fc	      3446	dwarf2.c	FUNCTION_46	IF_11
0x40063c1	      0xbe00000000	                              mov esi, 0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x40063c6	      0xbf00000000	                              mov edi, 0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x40063cb	      0xe800000000	                          call 0x40063d0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x40063d0	          0x4889c2	                            mov rdx, rax	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x40063d3	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x40063d9	            0x89c6	                            mov esi, eax	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x40063db	          0x4889d7	                            mov rdi, rdx	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x40063de	      0xb800000000	                              mov eax, 0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x40063e3	      0xe800000000	                          call 0x40063e8	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x40063e8	      0xbf11000000	                           mov edi, 0x11	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x40063ed	      0xe800000000	                          call 0x40063f2	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x40063f2	      0xb800000000	                              mov eax, 0	      3451	dwarf2.c	FUNCTION_46	IF_11
0x40063f7	      0xe918030000	                           jmp 0x4006714	      3451	dwarf2.c	FUNCTION_46	IF_11
0x40063fc	    0x48c745c8c000	           mov qword [rbp - 0x38], 0xc0 	      3454	dwarf2.c	FUNCTION_46
0x4006404	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4006408	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x400640c	          0x4889d6	                            mov rsi, rdx	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x400640f	          0x4889c7	                            mov rdi, rax	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4006412	      0xe800000000	                          call 0x4006417	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4006417	        0x488945d0	             mov qword [rbp - 0x30], rax	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x400641b	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3456	dwarf2.c	FUNCTION_46	IF_12
0x4006420	            0x750a	                           jne 0x400642c	      3456	dwarf2.c	FUNCTION_46	IF_12
0x4006422	      0xb800000000	                              mov eax, 0	      3457	dwarf2.c	FUNCTION_46	IF_12
0x4006427	      0xe9e8020000	                           jmp 0x4006714	      3457	dwarf2.c	FUNCTION_46	IF_12
0x400642c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3458	dwarf2.c	FUNCTION_46
0x4006430	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3458	dwarf2.c	FUNCTION_46
0x4006434	        0x48895010	             mov qword [rax + 0x10], rdx	      3458	dwarf2.c	FUNCTION_46
0x4006438	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      3459	dwarf2.c	FUNCTION_46
0x400643e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3459	dwarf2.c	FUNCTION_46
0x4006442	    0x8990a8000000	             mov dword [rax + 0xa8], edx	      3459	dwarf2.c	FUNCTION_46
0x4006448	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      3460	dwarf2.c	FUNCTION_46
0x400644e	            0x89c2	                            mov edx, eax	      3460	dwarf2.c	FUNCTION_46
0x4006450	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3460	dwarf2.c	FUNCTION_46
0x4006454	    0x8890ac000000	               mov byte [rax + 0xac], dl	      3460	dwarf2.c	FUNCTION_46
0x400645a	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      3461	dwarf2.c	FUNCTION_46
0x4006460	            0x89c2	                            mov edx, eax	      3461	dwarf2.c	FUNCTION_46
0x4006462	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3461	dwarf2.c	FUNCTION_46
0x4006466	    0x8890ad000000	               mov byte [rax + 0xad], dl	      3461	dwarf2.c	FUNCTION_46
0x400646c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3462	dwarf2.c	FUNCTION_46
0x4006470	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3462	dwarf2.c	FUNCTION_46
0x4006474	        0x48895038	             mov qword [rax + 0x38], rdx	      3462	dwarf2.c	FUNCTION_46
0x4006478	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3463	dwarf2.c	FUNCTION_46
0x400647c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3463	dwarf2.c	FUNCTION_46
0x4006480	        0x48895070	             mov qword [rax + 0x70], rdx	      3463	dwarf2.c	FUNCTION_46
0x4006484	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3464	dwarf2.c	FUNCTION_46
0x4006488	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      3464	dwarf2.c	FUNCTION_46
0x400648f	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      3464	dwarf2.c	FUNCTION_46
0x4006496	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3465	dwarf2.c	FUNCTION_46
0x400649a	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3465	dwarf2.c	FUNCTION_46
0x40064a1	        0x48895058	             mov qword [rax + 0x58], rdx	      3465	dwarf2.c	FUNCTION_46
0x40064a5	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40064af	      0xe9fe010000	                           jmp 0x40066b2	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40064b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064b8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064bc	    0x8b956cffffff	             mov edx, dword [rbp - 0x94]	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064c2	        0x48c1e204	                              shl rdx, 4	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064c6	        0x488d3410	                    lea rsi, [rax + rdx]	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064ca	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064ce	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064d2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064d6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064da	          0x4989f8	                             mov r8, rdi	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064dd	          0x4889c7	                            mov rdi, rax	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064e0	      0xe8f3b6ffff	                 call sym.read_attribute	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064e5	        0x48894588	             mov qword [rbp - 0x78], rax	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x40064e9	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      3470	dwarf2.c	FUNCTION_46	FOR_1	IF_13
0x40064ee	            0x750a	                           jne 0x40064fa	      3470	dwarf2.c	FUNCTION_46	FOR_1	IF_13
0x40064f0	      0xb800000000	                              mov eax, 0	      3471	dwarf2.c	FUNCTION_46	FOR_1	IF_13
0x40064f5	      0xe91a020000	                           jmp 0x4006714	      3471	dwarf2.c	FUNCTION_46	FOR_1	IF_13
0x40064fa	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40064fd	          0x83f812	                           cmp eax, 0x12	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006500	     0xf84a4000000	                            je 0x40065aa	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006506	          0x83f812	                           cmp eax, 0x12	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006509	            0x7714	                            ja 0x400651f	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400650b	          0x83f810	                           cmp eax, 0x10	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400650e	            0x742f	                            je 0x400653f	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006510	          0x83f810	                           cmp eax, 0x10	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006513	            0x7769	                            ja 0x400657e	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006515	          0x83f803	                              cmp eax, 3	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006518	            0x7441	                            je 0x400655b	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400651a	      0xe98c010000	                           jmp 0x40066ab	      3536	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400651f	          0x83f81b	                           cmp eax, 0x1b	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006522	     0xf84ce000000	                            je 0x40065f6	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006528	          0x83f855	                           cmp eax, 0x55	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400652b	     0xf8498000000	                            je 0x40065c9	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006531	          0x83f813	                           cmp eax, 0x13	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006534	     0xf845b010000	                            je 0x4006695	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400653a	      0xe96c010000	                           jmp 0x40066ab	      3536	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400653f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3478	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006543	    0xc74050010000	               mov dword [rax + 0x50], 1	      3478	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400654a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400654e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006552	        0x48895060	             mov qword [rax + 0x60], rdx	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006556	      0xe950010000	                           jmp 0x40066ab	      3480	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400655b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3483	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14	CALL_24
0x400655e	            0x89c7	                            mov edi, eax	      3483	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14	CALL_24
0x4006560	      0xe81cadffff	                    call sym.is_str_attr	      3483	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14	CALL_24
0x4006565	            0x85c0	                           test eax, eax	      3483	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14	CALL_24
0x4006567	     0xf8437010000	                            je 0x40066a4	      3483	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14	CALL_24
0x400656d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4006571	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4006575	        0x48895030	             mov qword [rax + 0x30], rdx	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4006579	      0xe926010000	                           jmp 0x40066a4	      3485	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400657e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3488	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006582	        0x48894590	             mov qword [rbp - 0x70], rax	      3488	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006586	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3492	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x400658a	          0x8b4004	                mov eax, dword [rax + 4]	      3492	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x400658d	          0x83f811	                           cmp eax, 0x11	      3492	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x4006590	     0xf8511010000	                           jne 0x40066a7	      3492	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x4006596	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3493	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x400659a	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3493	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x400659e	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      3493	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x40065a5	      0xe9fd000000	                           jmp 0x40066a7	      3494	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3497	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065ae	        0x48894598	             mov qword [rbp - 0x68], rax	      3497	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065b2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065b5	          0x83f801	                              cmp eax, 1	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065b8	           0xf95c0	                                setne al	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065bb	           0xfb6c0	                           movzx eax, al	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065be	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065c4	      0xe9e2000000	                           jmp 0x40066ab	      3499	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065c9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40065cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40065d1	        0x488d4818	                   lea rcx, [rax + 0x18]	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40065d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40065d9	          0x4889ce	                            mov rsi, rcx	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40065dc	          0x4889c7	                            mov rdi, rax	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40065df	      0xe859efffff	                 call sym.read_rangelist	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40065e4	            0x85c0	                           test eax, eax	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40065e6	     0xf85be000000	                           jne 0x40066aa	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40065ec	      0xb800000000	                              mov eax, 0	      3503	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16
0x40065f1	      0xe91e010000	                           jmp 0x4006714	      3503	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16
0x40065f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3508	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065fa	        0x488945a0	             mov qword [rbp - 0x60], rax	      3508	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40065fe	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3511	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_26
0x4006601	            0x89c7	                            mov edi, eax	      3511	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_26
0x4006603	      0xe879acffff	                    call sym.is_str_attr	      3511	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_26
0x4006608	            0x85c0	                           test eax, eax	      3511	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_26
0x400660a	            0x7524	                           jne 0x4006630	      3511	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_26
0x400660c	      0xbe00000000	                              mov esi, 0	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4006611	      0xbf00000000	                              mov edi, 0	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4006616	      0xe800000000	                          call 0x400661b	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x400661b	          0x4889c7	                            mov rdi, rax	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x400661e	      0xb800000000	                              mov eax, 0	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4006623	      0xe800000000	                          call 0x4006628	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4006628	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3515	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17
0x4006630	      0x48837da000	               cmp qword [rbp - 0x60], 0	      3518	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18
0x4006635	            0x7450	                            je 0x4006687	      3518	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18
0x4006637	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x400663b	      0xbe3a000000	                           mov esi, 0x3a	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x4006640	          0x4889c7	                            mov rdi, rax	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x4006643	      0xe800000000	                          call 0x4006648	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x4006648	        0x488945d8	             mov qword [rbp - 0x28], rax	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x400664c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006651	            0x7434	                            je 0x4006687	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006653	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006657	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x400665b	            0x742a	                            je 0x4006687	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x400665d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006661	        0x4883e801	                              sub rax, 1	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006665	           0xfb600	                   movzx eax, byte [rax]	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006668	            0x3c2e	                            cmp al, 0x2e	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x400666a	            0x751b	                           jne 0x4006687	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x400666c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006670	        0x4883c001	                              add rax, 1	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006674	           0xfb600	                   movzx eax, byte [rax]	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006677	            0x3c2f	                            cmp al, 0x2f	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006679	            0x750c	                           jne 0x4006687	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x400667b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x400667f	        0x4883c001	                              add rax, 1	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006683	        0x488945a0	             mov qword [rbp - 0x60], rax	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006687	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3527	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400668b	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3527	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400668f	        0x48895048	             mov qword [rax + 0x48], rdx	      3527	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006693	            0xeb16	                           jmp 0x40066ab	      3528	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006695	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006699	            0x89c2	                            mov edx, eax	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400669b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400669f	          0x895040	             mov dword [rax + 0x40], edx	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40066a2	            0xeb07	                           jmp 0x40066ab	      3533	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40066a4	              0x90	                                     nop	      3485	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40066a5	            0xeb04	                           jmp 0x40066ab	      3485	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40066a7	              0x90	                                     nop	      3494	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40066a8	            0xeb01	                           jmp 0x40066ab	      3494	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40066aa	              0x90	                                     nop	      3504	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40066ab	    0x83856cffffff	               add dword [rbp - 0x94], 1	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40066b2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40066b6	          0x8b400c	              mov eax, dword [rax + 0xc]	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40066b9	    0x3b856cffffff	             cmp eax, dword [rbp - 0x94]	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40066bf	     0xf87effdffff	                            ja 0x40064b4	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40066c5	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      3539	dwarf2.c	FUNCTION_46	IF_20
0x40066cc	            0x7408	                            je 0x40066d6	      3539	dwarf2.c	FUNCTION_46	IF_20
0x40066ce	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3540	dwarf2.c	FUNCTION_46	IF_20
0x40066d2	        0x48014598	            add qword [rbp - 0x68], rax 	      3540	dwarf2.c	FUNCTION_46	IF_20
0x40066d6	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      3541	dwarf2.c	FUNCTION_46	IF_21
0x40066db	            0x7427	                            je 0x4006704	      3541	dwarf2.c	FUNCTION_46	IF_21
0x40066dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40066e1	        0x488d7018	                   lea rsi, [rax + 0x18]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40066e5	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40066e9	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40066ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40066f1	          0x4889c7	                            mov rdi, rax	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40066f4	      0xe8f8bbffff	                     call sym.arange_add	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40066f9	            0x85c0	                           test eax, eax	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40066fb	            0x7507	                           jne 0x4006704	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40066fd	      0xb800000000	                              mov eax, 0	      3544	dwarf2.c	FUNCTION_46	IF_21	IF_22
0x4006702	            0xeb10	                           jmp 0x4006714	      3544	dwarf2.c	FUNCTION_46	IF_21	IF_22
0x4006704	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3547	dwarf2.c	FUNCTION_46
0x4006708	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      3547	dwarf2.c	FUNCTION_46
0x400670c	        0x48895068	             mov qword [rax + 0x68], rdx	      3547	dwarf2.c	FUNCTION_46
0x4006710	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3548	dwarf2.c	FUNCTION_46
0x4006714	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3549	dwarf2.c	FUNCTION_46
0x4006718	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3549	dwarf2.c	FUNCTION_46
0x4006721	            0x7405	                            je 0x4006728	      3549	dwarf2.c	FUNCTION_46
0x4006723	      0xe800000000	                          call 0x4006728	      3549	dwarf2.c	FUNCTION_46
0x4006728	              0xc9	                                   leave	      3549	dwarf2.c	FUNCTION_46
0x4006729	              0xc3	                                     ret	      3549	dwarf2.c	FUNCTION_46
new_line_sorts_after	SWITCH,0:ELSE,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:FOR,0	27
0x4001c5f	              0x55	                                push rbp	      1427	dwarf2.c	FUNCTION_24
0x4001c60	          0x4889e5	                            mov rbp, rsp	      1427	dwarf2.c	FUNCTION_24
0x4001c63	        0x48897df8	                mov qword [rbp - 8], rdi	      1427	dwarf2.c	FUNCTION_24
0x4001c67	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1427	dwarf2.c	FUNCTION_24
0x4001c6b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1428	dwarf2.c	FUNCTION_24
0x4001c6f	        0x488b5008	                mov rdx, qword [rax + 8]	      1428	dwarf2.c	FUNCTION_24
0x4001c73	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1428	dwarf2.c	FUNCTION_24
0x4001c77	        0x488b4008	                mov rax, qword [rax + 8]	      1428	dwarf2.c	FUNCTION_24
0x4001c7b	          0x4839c2	                            cmp rdx, rax	      1429	dwarf2.c	FUNCTION_24
0x4001c7e	            0x7729	                            ja 0x4001ca9	      1429	dwarf2.c	FUNCTION_24
0x4001c80	        0x488b45f8	                mov rax, qword [rbp - 8]	      1429	dwarf2.c	FUNCTION_24
0x4001c84	        0x488b5008	                mov rdx, qword [rax + 8]	      1429	dwarf2.c	FUNCTION_24
0x4001c88	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1429	dwarf2.c	FUNCTION_24
0x4001c8c	        0x488b4008	                mov rax, qword [rax + 8]	      1429	dwarf2.c	FUNCTION_24
0x4001c90	          0x4839c2	                            cmp rdx, rax	      1429	dwarf2.c	FUNCTION_24
0x4001c93	            0x751b	                           jne 0x4001cb0	      1429	dwarf2.c	FUNCTION_24
0x4001c95	        0x488b45f8	                mov rax, qword [rbp - 8]	      1430	dwarf2.c	FUNCTION_24
0x4001c99	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4001c9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1430	dwarf2.c	FUNCTION_24
0x4001ca1	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4001ca5	            0x38c2	                              cmp dl, al	      1430	dwarf2.c	FUNCTION_24
0x4001ca7	            0x7607	                           jbe 0x4001cb0	      1430	dwarf2.c	FUNCTION_24
0x4001ca9	      0xb801000000	                              mov eax, 1	      1429	dwarf2.c	FUNCTION_24
0x4001cae	            0xeb05	                           jmp 0x4001cb5	      1429	dwarf2.c	FUNCTION_24
0x4001cb0	      0xb800000000	                              mov eax, 0	      1429	dwarf2.c	FUNCTION_24
0x4001cb5	              0x5d	                                 pop rbp	      1431	dwarf2.c	FUNCTION_24
0x4001cb6	              0xc3	                                     ret	      1431	dwarf2.c	FUNCTION_24
is_str_attr	SWITCH,0:ELSE,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:FOR,0	16
0x4001281	              0x55	                                push rbp	      1076	dwarf2.c	FUNCTION_20
0x4001282	          0x4889e5	                            mov rbp, rsp	      1076	dwarf2.c	FUNCTION_20
0x4001285	          0x897dfc	                mov dword [rbp - 4], edi	      1076	dwarf2.c	FUNCTION_20
0x4001288	        0x837dfc08	                  cmp dword [rbp - 4], 8	      1078	dwarf2.c	FUNCTION_20
0x400128c	            0x7415	                            je 0x40012a3	      1078	dwarf2.c	FUNCTION_20
0x400128e	        0x837dfc0e	                cmp dword [rbp - 4], 0xe	      1077	dwarf2.c	FUNCTION_20
0x4001292	            0x740f	                            je 0x40012a3	      1077	dwarf2.c	FUNCTION_20
0x4001294	        0x837dfc1f	               cmp dword [rbp - 4], 0x1f	      1078	dwarf2.c	FUNCTION_20
0x4001298	            0x7409	                            je 0x40012a3	      1078	dwarf2.c	FUNCTION_20
0x400129a	    0x817dfc211f00	            cmp dword [rbp - 4], 0x1f21 	      1078	dwarf2.c	FUNCTION_20
0x40012a1	            0x7507	                           jne 0x40012aa	      1078	dwarf2.c	FUNCTION_20
0x40012a3	      0xb801000000	                              mov eax, 1	      1078	dwarf2.c	FUNCTION_20
0x40012a8	            0xeb05	                           jmp 0x40012af	      1078	dwarf2.c	FUNCTION_20
0x40012aa	      0xb800000000	                              mov eax, 0	      1078	dwarf2.c	FUNCTION_20
0x40012af	              0x5d	                                 pop rbp	      1079	dwarf2.c	FUNCTION_20
0x40012b0	              0xc3	                                     ret	      1079	dwarf2.c	FUNCTION_20
read_debug_ranges	SWITCH,0:ELSE,0:CALL,1:IF,0:DO,0:WHILE,0:functions,0:FOR,0	25
0x4004787	              0x55	                                push rbp	      2534	dwarf2.c	FUNCTION_37
0x4004788	          0x4889e5	                            mov rbp, rsp	      2534	dwarf2.c	FUNCTION_37
0x400478b	        0x4883ec20	                           sub rsp, 0x20	      2534	dwarf2.c	FUNCTION_37
0x400478f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2534	dwarf2.c	FUNCTION_37
0x4004793	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2535	dwarf2.c	FUNCTION_37
0x4004797	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2535	dwarf2.c	FUNCTION_37
0x400479e	        0x488945f8	                mov qword [rbp - 8], rax	      2535	dwarf2.c	FUNCTION_37
0x40047a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047a6	    0x488db8c80000	                   lea rdi, [rax + 0xc8]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047b1	    0x488d88c00000	                   lea rcx, [rax + 0xc0]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047bc	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047c4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047c8	    0x488db0b00000	                   lea rsi, [rax + 0xb0]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047d3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047d7	          0x4989f9	                             mov r9, rdi	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047da	          0x4989c8	                             mov r8, rcx	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047dd	      0xb900000000	                              mov ecx, 0	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047e2	          0x4889c7	                            mov rdi, rax	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047e5	      0xe812baffff	                   call sym.read_section	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x40047ea	              0xc9	                                   leave	      2541	dwarf2.c	FUNCTION_37
0x40047eb	              0xc3	                                     ret	      2541	dwarf2.c	FUNCTION_37
read_indirect_line_string	SWITCH,0:ELSE,1:CALL,3:IF,5:DO,0:WHILE,0:functions,0:FOR,0	88
0x4000786	              0x55	                                push rbp	       734	dwarf2.c	FUNCTION_14
0x4000787	          0x4889e5	                            mov rbp, rsp	       734	dwarf2.c	FUNCTION_14
0x400078a	        0x4883ec40	                           sub rsp, 0x40	       734	dwarf2.c	FUNCTION_14
0x400078e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       734	dwarf2.c	FUNCTION_14
0x4000792	        0x488975d0	             mov qword [rbp - 0x30], rsi	       734	dwarf2.c	FUNCTION_14
0x4000796	        0x488955c8	             mov qword [rbp - 0x38], rdx	       734	dwarf2.c	FUNCTION_14
0x400079a	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       734	dwarf2.c	FUNCTION_14
0x400079e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       736	dwarf2.c	FUNCTION_14
0x40007a2	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       736	dwarf2.c	FUNCTION_14
0x40007a9	        0x488945f0	             mov qword [rbp - 0x10], rax	       736	dwarf2.c	FUNCTION_14
0x40007ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       739	dwarf2.c	FUNCTION_14	IF_1
0x40007b1	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	       739	dwarf2.c	FUNCTION_14	IF_1
0x40007b8	           0xfb6d0	                           movzx edx, al	       739	dwarf2.c	FUNCTION_14	IF_1
0x40007bb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       739	dwarf2.c	FUNCTION_14	IF_1
0x40007bf	          0x4801d0	                            add rax, rdx	       739	dwarf2.c	FUNCTION_14	IF_1
0x40007c2	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       739	dwarf2.c	FUNCTION_14	IF_1
0x40007c6	            0x7614	                           jbe 0x40007dc	       739	dwarf2.c	FUNCTION_14	IF_1
0x40007c8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       741	dwarf2.c	FUNCTION_14	IF_1
0x40007cc	    0xc70000000000	                      mov dword [rax], 0	       741	dwarf2.c	FUNCTION_14	IF_1
0x40007d2	      0xb800000000	                              mov eax, 0	       742	dwarf2.c	FUNCTION_14	IF_1
0x40007d7	      0xe9fb000000	                           jmp 0x40008d7	       742	dwarf2.c	FUNCTION_14	IF_1
0x40007dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       745	dwarf2.c	FUNCTION_14	IF_2
0x40007e0	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	       745	dwarf2.c	FUNCTION_14	IF_2
0x40007e7	            0x3c04	                               cmp al, 4	       745	dwarf2.c	FUNCTION_14	IF_2
0x40007e9	            0x7523	                           jne 0x400080e	       745	dwarf2.c	FUNCTION_14	IF_2
0x40007eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40007ef	        0x488b4010	            mov rax, qword [rax + 0x10] 	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40007f3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40007f7	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40007fb	          0x4889ce	                            mov rsi, rcx	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40007fe	          0x4889c7	                            mov rdi, rax	       746	dwarf2.c	FUNCTION_14	CALL_1
0x4000801	      0xe89bfcffff	                   call sym.read_4_bytes	       746	dwarf2.c	FUNCTION_14	CALL_1
0x4000806	            0x89c0	                            mov eax, eax	       746	dwarf2.c	FUNCTION_14	CALL_1
0x4000808	        0x488945e8	             mov qword [rbp - 0x18], rax	       746	dwarf2.c	FUNCTION_14	CALL_1
0x400080c	            0xeb1f	                           jmp 0x400082d	       746	dwarf2.c	FUNCTION_14	CALL_1
0x400080e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       748	dwarf2.c	FUNCTION_14	CALL_2
0x4000812	        0x488b4010	            mov rax, qword [rax + 0x10] 	       748	dwarf2.c	FUNCTION_14	CALL_2
0x4000816	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       748	dwarf2.c	FUNCTION_14	CALL_2
0x400081a	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       748	dwarf2.c	FUNCTION_14	CALL_2
0x400081e	          0x4889ce	                            mov rsi, rcx	       748	dwarf2.c	FUNCTION_14	CALL_2
0x4000821	          0x4889c7	                            mov rdi, rax	       748	dwarf2.c	FUNCTION_14	CALL_2
0x4000824	      0xe8b8fcffff	                   call sym.read_8_bytes	       748	dwarf2.c	FUNCTION_14	CALL_2
0x4000829	        0x488945e8	             mov qword [rbp - 0x18], rax	       748	dwarf2.c	FUNCTION_14	CALL_2
0x400082d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       750	dwarf2.c	FUNCTION_14
0x4000831	     0xfb680ad0000	           movzx eax, byte [rax + 0xad] 	       750	dwarf2.c	FUNCTION_14
0x4000838	           0xfb6d0	                           movzx edx, al	       750	dwarf2.c	FUNCTION_14
0x400083b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       750	dwarf2.c	FUNCTION_14
0x400083f	            0x8910	                    mov dword [rax], edx	       750	dwarf2.c	FUNCTION_14
0x4000841	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4000845	    0x4c8d80b80000	                    lea r8, [rax + 0xb8]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400084c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4000850	    0x488db8b00000	                   lea rdi, [rax + 0xb0]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4000857	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400085b	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400085f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4000863	        0x488b4010	            mov rax, qword [rax + 0x10] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4000867	    0x488db0000100	                  lea rsi, [rax + 0x100]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400086e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4000872	        0x488b4010	            mov rax, qword [rax + 0x10] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4000876	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400087a	          0x4d89c1	                              mov r9, r8	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400087d	          0x4989f8	                             mov r8, rdi	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4000880	          0x4889c7	                            mov rdi, rax	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4000883	      0xe874f9ffff	                   call sym.read_section	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4000888	            0x85c0	                           test eax, eax	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400088a	            0x7507	                           jne 0x4000893	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400088c	      0xb800000000	                              mov eax, 0	       756	dwarf2.c	FUNCTION_14	IF_3
0x4000891	            0xeb44	                           jmp 0x40008d7	       756	dwarf2.c	FUNCTION_14	IF_3
0x4000893	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       758	dwarf2.c	FUNCTION_14	IF_4
0x4000897	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       758	dwarf2.c	FUNCTION_14	IF_4
0x400089e	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       758	dwarf2.c	FUNCTION_14	IF_4
0x40008a2	            0x7707	                            ja 0x40008ab	       758	dwarf2.c	FUNCTION_14	IF_4
0x40008a4	      0xb800000000	                              mov eax, 0	       759	dwarf2.c	FUNCTION_14	IF_4
0x40008a9	            0xeb2c	                           jmp 0x40008d7	       759	dwarf2.c	FUNCTION_14	IF_4
0x40008ab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       760	dwarf2.c	FUNCTION_14
0x40008af	    0x488b90b00000	            mov rdx, qword [rax + 0xb0] 	       760	dwarf2.c	FUNCTION_14
0x40008b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       760	dwarf2.c	FUNCTION_14
0x40008ba	          0x4801d0	                            add rax, rdx	       760	dwarf2.c	FUNCTION_14
0x40008bd	        0x488945f8	                mov qword [rbp - 8], rax	       760	dwarf2.c	FUNCTION_14
0x40008c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       761	dwarf2.c	FUNCTION_14	IF_5
0x40008c5	           0xfb600	                   movzx eax, byte [rax]	       761	dwarf2.c	FUNCTION_14	IF_5
0x40008c8	            0x84c0	                             test al, al	       761	dwarf2.c	FUNCTION_14	IF_5
0x40008ca	            0x7507	                           jne 0x40008d3	       761	dwarf2.c	FUNCTION_14	IF_5
0x40008cc	      0xb800000000	                              mov eax, 0	       762	dwarf2.c	FUNCTION_14	IF_5
0x40008d1	            0xeb04	                           jmp 0x40008d7	       762	dwarf2.c	FUNCTION_14	IF_5
0x40008d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       763	dwarf2.c	FUNCTION_14
0x40008d7	              0xc9	                                   leave	       764	dwarf2.c	FUNCTION_14
0x40008d8	              0xc3	                                     ret	       764	dwarf2.c	FUNCTION_14
_bfd_elf_find_function	SWITCH,0:ELSE,0:CALL,8:IF,13:DO,0:WHILE,0:functions,0:FOR,1	179
0x4009080	              0x55	                                push rbp	      4990	dwarf2.c	FUNCTION_71
0x4009081	          0x4889e5	                            mov rbp, rsp	      4990	dwarf2.c	FUNCTION_71
0x4009084	        0x4883c480	             add rsp, 0xffffffffffffff80	      4990	dwarf2.c	FUNCTION_71
0x4009088	        0x48897da8	             mov qword [rbp - 0x58], rdi	      4990	dwarf2.c	FUNCTION_71
0x400908c	        0x488975a0	             mov qword [rbp - 0x60], rsi	      4990	dwarf2.c	FUNCTION_71
0x4009090	        0x48895598	             mov qword [rbp - 0x68], rdx	      4990	dwarf2.c	FUNCTION_71
0x4009094	        0x48894d90	             mov qword [rbp - 0x70], rcx	      4990	dwarf2.c	FUNCTION_71
0x4009098	        0x4c894588	              mov qword [rbp - 0x78], r8	      4990	dwarf2.c	FUNCTION_71
0x400909c	        0x4c894d80	              mov qword [rbp - 0x80], r9	      4990	dwarf2.c	FUNCTION_71
0x40090a0	    0x64488b042528	                mov rax, qword fs:[0x28]	      4990	dwarf2.c	FUNCTION_71
0x40090a9	        0x488945f8	                mov qword [rbp - 8], rax	      4990	dwarf2.c	FUNCTION_71
0x40090ad	            0x31c0	                            xor eax, eax	      4990	dwarf2.c	FUNCTION_71
0x40090af	      0x48837da000	               cmp qword [rbp - 0x60], 0	      4999	dwarf2.c	FUNCTION_71	IF_1
0x40090b4	            0x750a	                           jne 0x40090c0	      4999	dwarf2.c	FUNCTION_71	IF_1
0x40090b6	      0xb800000000	                              mov eax, 0	      5000	dwarf2.c	FUNCTION_71	IF_1
0x40090bb	      0xe97e020000	                           jmp 0x400933e	      5000	dwarf2.c	FUNCTION_71	IF_1
0x40090c0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x40090c4	        0x488b4008	                mov rax, qword [rax + 8]	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x40090c8	          0x8b4008	                mov eax, dword [rax + 8]	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x40090cb	          0x83f805	                              cmp eax, 5	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x40090ce	            0x740a	                            je 0x40090da	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x40090d0	      0xb800000000	                              mov eax, 0	      5003	dwarf2.c	FUNCTION_71	IF_2
0x40090d5	      0xe964020000	                           jmp 0x400933e	      5003	dwarf2.c	FUNCTION_71	IF_2
0x40090da	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x40090de	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x40090e5	    0x488b80380300	           mov rax, qword [rax + 0x338] 	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x40090ec	        0x488945c0	             mov qword [rbp - 0x40], rax	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x40090f0	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      5006	dwarf2.c	FUNCTION_71	IF_3
0x40090f5	            0x753c	                           jne 0x4009133	      5006	dwarf2.c	FUNCTION_71	IF_3
0x40090f7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x40090fb	      0xbe20000000	                           mov esi, 0x20	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x4009100	          0x4889c7	                            mov rdi, rax	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x4009103	      0xe800000000	                          call 0x4009108	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x4009108	        0x488945c0	             mov qword [rbp - 0x40], rax	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x400910c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5009	dwarf2.c	FUNCTION_71	IF_3	CALL_4
0x4009110	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5009	dwarf2.c	FUNCTION_71	IF_3	CALL_4
0x4009117	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      5009	dwarf2.c	FUNCTION_71	IF_3	CALL_4
0x400911b	    0x488990380300	            mov qword [rax + 0x338], rdx	      5009	dwarf2.c	FUNCTION_71	IF_3	CALL_4
0x4009122	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      5010	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4009127	            0x750a	                           jne 0x4009133	      5010	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4009129	      0xb800000000	                              mov eax, 0	      5011	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x400912e	      0xe90b020000	                           jmp 0x400933e	      5011	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4009133	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5013	dwarf2.c	FUNCTION_71	IF_5
0x4009137	          0x488b00	                    mov rax, qword [rax]	      5013	dwarf2.c	FUNCTION_71	IF_5
0x400913a	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      5013	dwarf2.c	FUNCTION_71	IF_5
0x400913e	            0x7540	                           jne 0x4009180	      5013	dwarf2.c	FUNCTION_71	IF_5
0x4009140	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5014	dwarf2.c	FUNCTION_71	IF_5
0x4009144	        0x488b4008	                mov rax, qword [rax + 8]	      5014	dwarf2.c	FUNCTION_71	IF_5
0x4009148	          0x4885c0	                           test rax, rax	      5014	dwarf2.c	FUNCTION_71	IF_5
0x400914b	            0x7433	                            je 0x4009180	      5014	dwarf2.c	FUNCTION_71	IF_5
0x400914d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4009151	        0x488b4008	                mov rax, qword [rax + 8]	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4009155	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4009159	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      5015	dwarf2.c	FUNCTION_71	IF_5
0x400915d	            0x7721	                            ja 0x4009180	      5015	dwarf2.c	FUNCTION_71	IF_5
0x400915f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4009163	        0x488b4008	                mov rax, qword [rax + 8]	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4009167	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5016	dwarf2.c	FUNCTION_71	IF_5
0x400916b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5016	dwarf2.c	FUNCTION_71	IF_5
0x400916f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4009173	          0x4801d0	                            add rax, rdx	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4009176	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      5016	dwarf2.c	FUNCTION_71	IF_5
0x400917a	     0xf8772010000	                            ja 0x40092f2	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4009180	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5030	dwarf2.c	FUNCTION_71	IF_5	CALL_5
0x4009184	        0x488b4008	                mov rax, qword [rax + 8]	      5030	dwarf2.c	FUNCTION_71	IF_5	CALL_5
0x4009188	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      5030	dwarf2.c	FUNCTION_71	IF_5	CALL_5
0x400918f	        0x488945e0	             mov qword [rbp - 0x20], rax	      5030	dwarf2.c	FUNCTION_71	IF_5	CALL_5
0x4009193	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      5032	dwarf2.c	FUNCTION_71	IF_5
0x400919b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      5033	dwarf2.c	FUNCTION_71	IF_5
0x40091a3	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      5034	dwarf2.c	FUNCTION_71	IF_5
0x40091aa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5035	dwarf2.c	FUNCTION_71	IF_5
0x40091ae	    0x48c740100000	               mov qword [rax + 0x10], 0	      5035	dwarf2.c	FUNCTION_71	IF_5
0x40091b6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5036	dwarf2.c	FUNCTION_71	IF_5
0x40091ba	    0x48c740080000	                  mov qword [rax + 8], 0	      5036	dwarf2.c	FUNCTION_71	IF_5
0x40091c2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5037	dwarf2.c	FUNCTION_71	IF_5
0x40091c6	    0x48c740180000	               mov qword [rax + 0x18], 0	      5037	dwarf2.c	FUNCTION_71	IF_5
0x40091ce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5038	dwarf2.c	FUNCTION_71	IF_5
0x40091d2	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      5038	dwarf2.c	FUNCTION_71	IF_5
0x40091d6	          0x488910	                    mov qword [rax], rdx	      5038	dwarf2.c	FUNCTION_71	IF_5
0x40091d9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40091dd	        0x488945d8	             mov qword [rbp - 0x28], rax	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40091e1	      0xe9fc000000	                           jmp 0x40092e2	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40091e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5042	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40091ea	          0x488b00	                    mov rax, qword [rax]	      5042	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40091ed	        0x488945e8	             mov qword [rbp - 0x18], rax	      5042	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40091f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x40091f5	          0x8b4018	            mov eax, dword [rax + 0x18] 	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x40091f8	      0x2500400000	                         and eax, 0x4000	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x40091fd	            0x85c0	                           test eax, eax	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x40091ff	            0x741e	                            je 0x400921f	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x4009201	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5048	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x4009205	        0x488945c8	             mov qword [rbp - 0x38], rax	      5048	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x4009209	        0x837db401	               cmp dword [rbp - 0x4c], 1	      5049	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x400920d	     0xf85c9000000	                           jne 0x40092dc	      5049	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x4009213	    0xc745b4020000	               mov dword [rbp - 0x4c], 2	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x400921a	      0xe9be000000	                           jmp 0x40092dd	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x400921f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4009223	    0x488b80d00200	           mov rax, qword [rax + 0x2d0] 	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x400922a	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x400922e	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4009232	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4009236	          0x4889cf	                            mov rdi, rcx	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4009239	            0xffd0	                                call rax	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x400923b	        0x488945f0	             mov qword [rbp - 0x10], rax	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x400923f	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5055	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009244	     0xf8483000000	                            je 0x40092cd	      5055	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400924a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400924e	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009252	            0x7779	                            ja 0x40092cd	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009254	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5057	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009258	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      5057	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400925c	            0x7718	                            ja 0x4009276	      5057	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400925e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5058	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009262	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      5058	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009266	            0x7565	                           jne 0x40092cd	      5058	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009268	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400926c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009270	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009274	            0x7357	                           jae 0x40092cd	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009276	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5061	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400927a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5061	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400927e	        0x48895008	                mov qword [rax + 8], rdx	      5061	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009282	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5062	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009286	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5062	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400928a	        0x48895018	             mov qword [rax + 0x18], rdx	      5062	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400928e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5063	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4009292	    0x48c740100000	               mov qword [rax + 0x10], 0	      5063	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400929a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5064	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400929e	        0x488945d0	             mov qword [rbp - 0x30], rax	      5064	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x40092a2	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      5065	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x40092a7	            0x7424	                            je 0x40092cd	      5065	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x40092a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5066	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x40092ad	          0x8b4018	            mov eax, dword [rax + 0x18] 	      5066	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x40092b0	          0x83e001	                              and eax, 1	      5066	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x40092b3	            0x85c0	                           test eax, eax	      5066	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x40092b5	            0x7506	                           jne 0x40092bd	      5066	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x40092b7	        0x837db402	               cmp dword [rbp - 0x4c], 2	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x40092bb	            0x7410	                            je 0x40092cd	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x40092bd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x40092c1	        0x488b5008	                mov rdx, qword [rax + 8]	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x40092c5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x40092c9	        0x48895010	             mov qword [rax + 0x10], rdx	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x40092cd	        0x837db400	               cmp dword [rbp - 0x4c], 0	      5070	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x40092d1	            0x750a	                           jne 0x40092dd	      5070	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x40092d3	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x40092da	            0xeb01	                           jmp 0x40092dd	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x40092dc	              0x90	                                     nop	      5051	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x40092dd	      0x488345d808	               add qword [rbp - 0x28], 8	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40092e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40092e6	          0x488b00	                    mov rax, qword [rax]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40092e9	          0x4885c0	                           test rax, rax	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40092ec	     0xf85f4feffff	                           jne 0x40091e6	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40092f2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5075	dwarf2.c	FUNCTION_71	IF_11
0x40092f6	        0x488b4008	                mov rax, qword [rax + 8]	      5075	dwarf2.c	FUNCTION_71	IF_11
0x40092fa	          0x4885c0	                           test rax, rax	      5075	dwarf2.c	FUNCTION_71	IF_11
0x40092fd	            0x7507	                           jne 0x4009306	      5075	dwarf2.c	FUNCTION_71	IF_11
0x40092ff	      0xb800000000	                              mov eax, 0	      5076	dwarf2.c	FUNCTION_71	IF_11
0x4009304	            0xeb38	                           jmp 0x400933e	      5076	dwarf2.c	FUNCTION_71	IF_11
0x4009306	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5078	dwarf2.c	FUNCTION_71	IF_12
0x400930b	            0x740f	                            je 0x400931c	      5078	dwarf2.c	FUNCTION_71	IF_12
0x400930d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5079	dwarf2.c	FUNCTION_71	IF_12
0x4009311	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5079	dwarf2.c	FUNCTION_71	IF_12
0x4009315	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5079	dwarf2.c	FUNCTION_71	IF_12
0x4009319	          0x488910	                    mov qword [rax], rdx	      5079	dwarf2.c	FUNCTION_71	IF_12
0x400931c	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4009321	            0x7413	                            je 0x4009336	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4009323	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4009327	        0x488b4008	                mov rax, qword [rax + 8]	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x400932b	        0x488b5008	                mov rdx, qword [rax + 8]	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x400932f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4009333	          0x488910	                    mov qword [rax], rdx	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4009336	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5083	dwarf2.c	FUNCTION_71
0x400933a	        0x488b4008	                mov rax, qword [rax + 8]	      5083	dwarf2.c	FUNCTION_71
0x400933e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      5084	dwarf2.c	FUNCTION_71
0x4009342	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5084	dwarf2.c	FUNCTION_71
0x400934b	            0x7405	                            je 0x4009352	      5084	dwarf2.c	FUNCTION_71
0x400934d	      0xe800000000	                          call 0x4009352	      5084	dwarf2.c	FUNCTION_71
0x4009352	              0xc9	                                   leave	      5084	dwarf2.c	FUNCTION_71
0x4009353	              0xc3	                                     ret	      5084	dwarf2.c	FUNCTION_71
info_hash_lookup_funcinfo	SWITCH,0:ELSE,0:CALL,3:IF,2:DO,0:WHILE,0:functions,0:FOR,2	94
0x4007330	              0x55	                                push rbp	      4034	dwarf2.c	FUNCTION_58
0x4007331	          0x4889e5	                            mov rbp, rsp	      4034	dwarf2.c	FUNCTION_58
0x4007334	        0x4883ec70	                           sub rsp, 0x70	      4034	dwarf2.c	FUNCTION_58
0x4007338	        0x48897db8	             mov qword [rbp - 0x48], rdi	      4034	dwarf2.c	FUNCTION_58
0x400733c	        0x488975b0	             mov qword [rbp - 0x50], rsi	      4034	dwarf2.c	FUNCTION_58
0x4007340	        0x488955a8	             mov qword [rbp - 0x58], rdx	      4034	dwarf2.c	FUNCTION_58
0x4007344	        0x48894da0	             mov qword [rbp - 0x60], rcx	      4034	dwarf2.c	FUNCTION_58
0x4007348	        0x4c894598	              mov qword [rbp - 0x68], r8	      4034	dwarf2.c	FUNCTION_58
0x400734c	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      4036	dwarf2.c	FUNCTION_58
0x4007354	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4037	dwarf2.c	FUNCTION_58
0x400735c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4040	dwarf2.c	FUNCTION_58	CALL_1
0x4007360	        0x488b4008	                mov rax, qword [rax + 8]	      4040	dwarf2.c	FUNCTION_58	CALL_1
0x4007364	        0x488945e8	             mov qword [rbp - 0x18], rax	      4040	dwarf2.c	FUNCTION_58	CALL_1
0x4007368	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4041	dwarf2.c	FUNCTION_58	CALL_2
0x400736c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4041	dwarf2.c	FUNCTION_58	CALL_2
0x4007370	        0x488945f0	             mov qword [rbp - 0x10], rax	      4041	dwarf2.c	FUNCTION_58	CALL_2
0x4007374	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4007378	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x400737c	          0x4889d6	                            mov rsi, rdx	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x400737f	          0x4889c7	                            mov rdi, rax	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4007382	      0xe82f8effff	         call sym.lookup_info_hash_table	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4007387	        0x488945d8	             mov qword [rbp - 0x28], rax	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x400738b	      0xe9ba000000	                           jmp 0x400744a	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4007390	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4047	dwarf2.c	FUNCTION_58	FOR_1
0x4007394	        0x488b4008	                mov rax, qword [rax + 8]	      4047	dwarf2.c	FUNCTION_58	FOR_1
0x4007398	        0x488945f8	                mov qword [rbp - 8], rax	      4047	dwarf2.c	FUNCTION_58	FOR_1
0x400739c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x40073a0	        0x4883c038	                           add rax, 0x38	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x40073a4	        0x488945e0	             mov qword [rbp - 0x20], rax	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x40073a8	      0xe987000000	                           jmp 0x4007434	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x40073ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073b1	        0x488b4050	            mov rax, qword [rax + 0x50] 	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073b5	          0x4885c0	                           test rax, rax	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073b8	            0x740e	                            je 0x40073c8	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073ba	        0x488b45f8	                mov rax, qword [rbp - 8]	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073be	        0x488b4050	            mov rax, qword [rax + 0x50] 	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073c2	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073c6	            0x7561	                           jne 0x4007429	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073c8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073cc	        0x488b4008	                mov rax, qword [rax + 8]	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073d0	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073d4	            0x7753	                            ja 0x4007429	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073da	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073de	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073e2	            0x7645	                           jbe 0x4007429	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073e4	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073e9	            0x741c	                            je 0x4007407	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073ef	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073f3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073f7	        0x488b4008	                mov rax, qword [rax + 8]	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073fb	          0x4829c2	                            sub rdx, rax	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40073fe	          0x4889d0	                            mov rax, rdx	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4007401	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4007405	            0x7322	                           jae 0x4007429	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4007407	        0x488b45f8	                mov rax, qword [rbp - 8]	      4058	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400740b	        0x488945c8	             mov qword [rbp - 0x38], rax	      4058	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400740f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4059	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4007413	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4059	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4007417	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4059	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400741b	        0x488b4008	                mov rax, qword [rax + 8]	      4059	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400741f	          0x4829c2	                            sub rdx, rax	      4059	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4007422	          0x4889d0	                            mov rax, rdx	      4059	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4007425	        0x488945d0	             mov qword [rbp - 0x30], rax	      4059	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4007429	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4050	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400742d	          0x488b00	                    mov rax, qword [rax]	      4050	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4007430	        0x488945e0	             mov qword [rbp - 0x20], rax	      4050	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4007434	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4007439	     0xf856effffff	                           jne 0x40073ad	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400743f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4045	dwarf2.c	FUNCTION_58	FOR_1
0x4007443	          0x488b00	                    mov rax, qword [rax]	      4045	dwarf2.c	FUNCTION_58	FOR_1
0x4007446	        0x488945d8	             mov qword [rbp - 0x28], rax	      4045	dwarf2.c	FUNCTION_58	FOR_1
0x400744a	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x400744f	     0xf853bffffff	                           jne 0x4007390	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4007455	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4064	dwarf2.c	FUNCTION_58	IF_2
0x400745a	            0x7431	                            je 0x400748d	      4064	dwarf2.c	FUNCTION_58	IF_2
0x400745c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4066	dwarf2.c	FUNCTION_58	IF_2
0x4007460	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4066	dwarf2.c	FUNCTION_58	IF_2
0x4007464	        0x48895050	             mov qword [rax + 0x50], rdx	      4066	dwarf2.c	FUNCTION_58	IF_2
0x4007468	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4067	dwarf2.c	FUNCTION_58	IF_2
0x400746c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4067	dwarf2.c	FUNCTION_58	IF_2
0x4007470	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4067	dwarf2.c	FUNCTION_58	IF_2
0x4007474	          0x488910	                    mov qword [rax], rdx	      4067	dwarf2.c	FUNCTION_58	IF_2
0x4007477	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4068	dwarf2.c	FUNCTION_58	IF_2
0x400747b	          0x8b4024	            mov eax, dword [rax + 0x24] 	      4068	dwarf2.c	FUNCTION_58	IF_2
0x400747e	            0x89c2	                            mov edx, eax	      4068	dwarf2.c	FUNCTION_58	IF_2
0x4007480	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4068	dwarf2.c	FUNCTION_58	IF_2
0x4007484	            0x8910	                    mov dword [rax], edx	      4068	dwarf2.c	FUNCTION_58	IF_2
0x4007486	      0xb801000000	                              mov eax, 1	      4069	dwarf2.c	FUNCTION_58	IF_2
0x400748b	            0xeb05	                           jmp 0x4007492	      4069	dwarf2.c	FUNCTION_58	IF_2
0x400748d	      0xb800000000	                              mov eax, 0	      4072	dwarf2.c	FUNCTION_58
0x4007492	              0xc9	                                   leave	      4073	dwarf2.c	FUNCTION_58
0x4007493	              0xc3	                                     ret	      4073	dwarf2.c	FUNCTION_58
comp_unit_hash_info	SWITCH,0:ELSE,0:CALL,9:IF,4:DO,0:WHILE,0:functions,0:FOR,2	123
0x4006ac1	              0x55	                                push rbp	      3740	dwarf2.c	FUNCTION_53
0x4006ac2	          0x4889e5	                            mov rbp, rsp	      3740	dwarf2.c	FUNCTION_53
0x4006ac5	        0x4883ec40	                           sub rsp, 0x40	      3740	dwarf2.c	FUNCTION_53
0x4006ac9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3740	dwarf2.c	FUNCTION_53
0x4006acd	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3740	dwarf2.c	FUNCTION_53
0x4006ad1	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3740	dwarf2.c	FUNCTION_53
0x4006ad5	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      3740	dwarf2.c	FUNCTION_53
0x4006ad9	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      3743	dwarf2.c	FUNCTION_53
0x4006ae0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4006ae4	    0x8b8010010000	           mov eax, dword [rax + 0x110] 	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4006aea	          0x83f802	                              cmp eax, 2	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4006aed	            0x750f	                           jne 0x4006afe	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4006aef	      0xbea10e0000	                          mov esi, 0xea1	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4006af4	      0xbf00000000	                              mov edi, 0	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4006af9	      0xe800000000	                          call 0x4006afe	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4006afe	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4006b02	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4006b06	          0x4889d6	                            mov rsi, rdx	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4006b09	          0x4889c7	                            mov rdi, rax	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4006b0c	      0xe8cafdffff	call sym.comp_unit_maybe_decode_line_info	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4006b11	            0x85c0	                           test eax, eax	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4006b13	            0x750a	                           jne 0x4006b1f	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4006b15	      0xb800000000	                              mov eax, 0	      3748	dwarf2.c	FUNCTION_53	IF_1
0x4006b1a	      0xe98a010000	                           jmp 0x4006ca9	      3748	dwarf2.c	FUNCTION_53	IF_1
0x4006b1f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4006b23	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4006b29	            0x85c0	                           test eax, eax	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4006b2b	            0x740f	                            je 0x4006b3c	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4006b2d	      0xbea60e0000	                          mov esi, 0xea6	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4006b32	      0xbf00000000	                              mov edi, 0	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4006b37	      0xe800000000	                          call 0x4006b3c	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4006b3c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4006b40	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4006b47	          0x4889c7	                            mov rdi, rax	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4006b4a	      0xe8e8feffff	          call sym.reverse_funcinfo_list	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4006b4f	          0x4889c2	                            mov rdx, rax	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4006b52	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4006b56	    0x488990800000	             mov qword [rax + 0x80], rdx	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4006b5d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4006b61	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4006b68	        0x488945f0	             mov qword [rbp - 0x10], rax	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4006b6c	            0xeb38	                           jmp 0x4006ba6	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4006b6e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4006b72	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4006b76	          0x4885c0	                           test rax, rax	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4006b79	            0x7420	                            je 0x4006b9b	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4006b7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4006b7f	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4006b83	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4006b87	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4006b8b	      0xb900000000	                              mov ecx, 0	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4006b90	          0x4889c7	                            mov rdi, rax	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4006b93	      0xe88a95ffff	         call sym.insert_info_hash_table	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4006b98	          0x8945ec	             mov dword [rbp - 0x14], eax	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4006b9b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3760	dwarf2.c	FUNCTION_53	FOR_1
0x4006b9f	          0x488b00	                    mov rax, qword [rax]	      3760	dwarf2.c	FUNCTION_53	FOR_1
0x4006ba2	        0x488945f0	             mov qword [rbp - 0x10], rax	      3760	dwarf2.c	FUNCTION_53	FOR_1
0x4006ba6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4006bab	            0x7406	                            je 0x4006bb3	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4006bad	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3759	dwarf2.c	FUNCTION_53	FOR_1
0x4006bb1	            0x75bb	                           jne 0x4006b6e	      3759	dwarf2.c	FUNCTION_53	FOR_1
0x4006bb3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4006bb7	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4006bbe	          0x4889c7	                            mov rdi, rax	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4006bc1	      0xe871feffff	          call sym.reverse_funcinfo_list	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4006bc6	          0x4889c2	                            mov rdx, rax	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4006bc9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4006bcd	    0x488990800000	             mov qword [rax + 0x80], rdx	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4006bd4	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3771	dwarf2.c	FUNCTION_53	IF_3
0x4006bd8	            0x750a	                           jne 0x4006be4	      3771	dwarf2.c	FUNCTION_53	IF_3
0x4006bda	      0xb800000000	                              mov eax, 0	      3772	dwarf2.c	FUNCTION_53	IF_3
0x4006bdf	      0xe9c5000000	                           jmp 0x4006ca9	      3772	dwarf2.c	FUNCTION_53	IF_3
0x4006be4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4006be8	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4006bef	          0x4889c7	                            mov rdi, rax	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4006bf2	      0xe885feffff	           call sym.reverse_varinfo_list	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4006bf7	          0x4889c2	                            mov rdx, rax	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4006bfa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4006bfe	    0x488990980000	             mov qword [rax + 0x98], rdx	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4006c05	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4006c09	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4006c10	        0x488945f8	                mov qword [rbp - 8], rax	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4006c14	            0xeb54	                           jmp 0x4006c6a	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4006c16	        0x488b45f8	                mov rax, qword [rbp - 8]	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c1a	         0xfb64030	           movzx eax, byte [rax + 0x30] 	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c1e	          0x83e001	                              and eax, 1	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c21	            0x84c0	                             test al, al	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c23	            0x753a	                           jne 0x4006c5f	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c25	        0x488b45f8	                mov rax, qword [rbp - 8]	      3782	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c29	        0x488b4008	                mov rax, qword [rax + 8]	      3782	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c2d	          0x4885c0	                           test rax, rax	      3782	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c30	            0x742d	                            je 0x4006c5f	      3782	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c32	        0x488b45f8	                mov rax, qword [rbp - 8]	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c36	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c3a	          0x4885c0	                           test rax, rax	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c3d	            0x7420	                            je 0x4006c5f	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4006c3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4006c43	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4006c47	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4006c4b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4006c4f	      0xb900000000	                              mov ecx, 0	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4006c54	          0x4889c7	                            mov rdi, rax	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4006c57	      0xe8c694ffff	         call sym.insert_info_hash_table	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4006c5c	          0x8945ec	             mov dword [rbp - 0x14], eax	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4006c5f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3778	dwarf2.c	FUNCTION_53	FOR_2
0x4006c63	          0x488b00	                    mov rax, qword [rax]	      3778	dwarf2.c	FUNCTION_53	FOR_2
0x4006c66	        0x488945f8	                mov qword [rbp - 8], rax	      3778	dwarf2.c	FUNCTION_53	FOR_2
0x4006c6a	      0x48837df800	                  cmp qword [rbp - 8], 0	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4006c6f	            0x7406	                            je 0x4006c77	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4006c71	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3777	dwarf2.c	FUNCTION_53	FOR_2
0x4006c75	            0x759f	                           jne 0x4006c16	      3777	dwarf2.c	FUNCTION_53	FOR_2
0x4006c77	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4006c7b	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4006c82	          0x4889c7	                            mov rdi, rax	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4006c85	      0xe8f2fdffff	           call sym.reverse_varinfo_list	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4006c8a	          0x4889c2	                            mov rdx, rax	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4006c8d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4006c91	    0x488990980000	             mov qword [rax + 0x98], rdx	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4006c98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3792	dwarf2.c	FUNCTION_53
0x4006c9c	    0xc780b8000000	               mov dword [rax + 0xb8], 1	      3792	dwarf2.c	FUNCTION_53
0x4006ca6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3793	dwarf2.c	FUNCTION_53
0x4006ca9	              0xc9	                                   leave	      3794	dwarf2.c	FUNCTION_53
0x4006caa	              0xc3	                                     ret	      3794	dwarf2.c	FUNCTION_53
comp_unit_maybe_decode_line_info	SWITCH,0:ELSE,0:CALL,2:IF,5:DO,0:WHILE,0:functions,0:FOR,0	57
0x40068db	              0x55	                                push rbp	      3641	dwarf2.c	FUNCTION_49
0x40068dc	          0x4889e5	                            mov rbp, rsp	      3641	dwarf2.c	FUNCTION_49
0x40068df	        0x4883ec10	                           sub rsp, 0x10	      3641	dwarf2.c	FUNCTION_49
0x40068e3	        0x48897df8	                mov qword [rbp - 8], rdi	      3641	dwarf2.c	FUNCTION_49
0x40068e7	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3641	dwarf2.c	FUNCTION_49
0x40068eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3642	dwarf2.c	FUNCTION_49	IF_1
0x40068ef	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3642	dwarf2.c	FUNCTION_49	IF_1
0x40068f2	            0x85c0	                           test eax, eax	      3642	dwarf2.c	FUNCTION_49	IF_1
0x40068f4	            0x740a	                            je 0x4006900	      3642	dwarf2.c	FUNCTION_49	IF_1
0x40068f6	      0xb800000000	                              mov eax, 0	      3643	dwarf2.c	FUNCTION_49	IF_1
0x40068fb	      0xe9a7000000	                           jmp 0x40069a7	      3643	dwarf2.c	FUNCTION_49	IF_1
0x4006900	        0x488b45f8	                mov rax, qword [rbp - 8]	      3645	dwarf2.c	FUNCTION_49	IF_2
0x4006904	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3645	dwarf2.c	FUNCTION_49	IF_2
0x4006908	          0x4885c0	                           test rax, rax	      3645	dwarf2.c	FUNCTION_49	IF_2
0x400690b	     0xf8591000000	                           jne 0x40069a2	      3645	dwarf2.c	FUNCTION_49	IF_2
0x4006911	        0x488b45f8	                mov rax, qword [rbp - 8]	      3647	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4006915	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3647	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4006918	            0x85c0	                           test eax, eax	      3647	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x400691a	            0x7512	                           jne 0x400692e	      3647	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x400691c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3649	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4006920	    0xc74044010000	               mov dword [rax + 0x44], 1	      3649	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4006927	      0xb800000000	                              mov eax, 0	      3650	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x400692c	            0xeb79	                           jmp 0x40069a7	      3650	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x400692e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4006932	        0x488b45f8	                mov rax, qword [rbp - 8]	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4006936	          0x4889d6	                            mov rsi, rdx	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4006939	          0x4889c7	                            mov rdi, rax	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x400693c	      0xe838c6ffff	               call sym.decode_line_info	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4006941	          0x4889c2	                            mov rdx, rax	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4006944	        0x488b45f8	                mov rax, qword [rbp - 8]	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4006948	        0x48895078	             mov qword [rax + 0x78], rdx	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x400694c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3655	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4006950	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3655	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4006954	          0x4885c0	                           test rax, rax	      3655	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4006957	            0x7512	                           jne 0x400696b	      3655	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4006959	        0x488b45f8	                mov rax, qword [rbp - 8]	      3657	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x400695d	    0xc74044010000	               mov dword [rax + 0x44], 1	      3657	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4006964	      0xb800000000	                              mov eax, 0	      3658	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4006969	            0xeb3c	                           jmp 0x40069a7	      3658	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x400696b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x400696f	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4006973	        0x488b45f8	                mov rax, qword [rbp - 8]	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4006977	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x400697b	          0x4839c2	                            cmp rdx, rax	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x400697e	            0x7322	                           jae 0x40069a2	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4006980	        0x488b45f8	                mov rax, qword [rbp - 8]	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4006984	          0x4889c7	                            mov rdi, rax	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4006987	      0xe85cedffff	          call sym.scan_unit_for_symbols	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x400698c	            0x85c0	                           test eax, eax	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x400698e	            0x7512	                           jne 0x40069a2	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4006990	        0x488b45f8	                mov rax, qword [rbp - 8]	      3664	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4006994	    0xc74044010000	               mov dword [rax + 0x44], 1	      3664	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x400699b	      0xb800000000	                              mov eax, 0	      3665	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x40069a0	            0xeb05	                           jmp 0x40069a7	      3665	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x40069a2	      0xb801000000	                              mov eax, 1	      3669	dwarf2.c	FUNCTION_49
0x40069a7	              0xc9	                                   leave	      3670	dwarf2.c	FUNCTION_49
0x40069a8	              0xc3	                                     ret	      3670	dwarf2.c	FUNCTION_49
read_address	SWITCH,2:ELSE,1:CALL,10:IF,3:DO,0:WHILE,0:functions,0:FOR,0	110
0x4000bfe	              0x55	                                push rbp	       877	dwarf2.c	FUNCTION_17
0x4000bff	          0x4889e5	                            mov rbp, rsp	       877	dwarf2.c	FUNCTION_17
0x4000c02	        0x4883ec30	                           sub rsp, 0x30	       877	dwarf2.c	FUNCTION_17
0x4000c06	        0x48897de8	             mov qword [rbp - 0x18], rdi	       877	dwarf2.c	FUNCTION_17
0x4000c0a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       877	dwarf2.c	FUNCTION_17
0x4000c0e	        0x488955d8	             mov qword [rbp - 0x28], rdx	       877	dwarf2.c	FUNCTION_17
0x4000c12	    0xc745fc000000	                  mov dword [rbp - 4], 0	       878	dwarf2.c	FUNCTION_17
0x4000c19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000c1d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000c21	        0x488b4008	                mov rax, qword [rax + 8]	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000c25	          0x8b4008	                mov eax, dword [rax + 8]	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000c28	          0x83f805	                              cmp eax, 5	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000c2b	            0x7523	                           jne 0x4000c50	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000c2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000c31	        0x488b4010	            mov rax, qword [rax + 0x10] 	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000c35	        0x488b4008	                mov rax, qword [rax + 8]	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000c39	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000c40	     0xfb680890300	          movzx eax, byte [rax + 0x389] 	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000c47	          0x83e001	                              and eax, 1	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000c4a	           0xfb6c0	                           movzx eax, al	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000c4d	          0x8945fc	                mov dword [rbp - 4], eax	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000c50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000c54	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000c5b	           0xfb6d0	                           movzx edx, al	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000c5e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000c62	          0x4801d0	                            add rax, rdx	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000c65	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000c69	            0x760a	                           jbe 0x4000c75	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000c6b	      0xb800000000	                              mov eax, 0	       884	dwarf2.c	FUNCTION_17	IF_2
0x4000c70	      0xe91b010000	                           jmp 0x4000d90	       884	dwarf2.c	FUNCTION_17	IF_2
0x4000c75	        0x837dfc00	                  cmp dword [rbp - 4], 0	       886	dwarf2.c	FUNCTION_17	IF_3
0x4000c79	     0xf848d000000	                            je 0x4000d0c	       886	dwarf2.c	FUNCTION_17	IF_3
0x4000c7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000c83	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000c8a	           0xfb6c0	                           movzx eax, al	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000c8d	          0x83f804	                              cmp eax, 4	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000c90	            0x742a	                            je 0x4000cbc	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000c92	          0x83f808	                              cmp eax, 8	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000c95	            0x7407	                            je 0x4000c9e	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000c97	          0x83f802	                              cmp eax, 2	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000c9a	            0x743e	                            je 0x4000cda	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000c9c	            0xeb5a	                           jmp 0x4000cf8	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000c9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000ca2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000ca6	        0x488b4008	                mov rax, qword [rax + 8]	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000caa	        0x488b4028	            mov rax, qword [rax + 0x28] 	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000cae	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000cb2	          0x4889d7	                            mov rdi, rdx	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000cb5	            0xffd0	                                call rax	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000cb7	      0xe9d4000000	                           jmp 0x4000d90	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000cbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000cc0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000cc4	        0x488b4008	                mov rax, qword [rax + 8]	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000cc8	        0x488b4040	            mov rax, qword [rax + 0x40] 	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000ccc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000cd0	          0x4889d7	                            mov rdi, rdx	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000cd3	            0xffd0	                                call rax	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000cd5	      0xe9b6000000	                           jmp 0x4000d90	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000cda	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000cde	        0x488b4010	            mov rax, qword [rax + 0x10] 	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000ce2	        0x488b4008	                mov rax, qword [rax + 8]	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000ce6	        0x488b4058	            mov rax, qword [rax + 0x58] 	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000cea	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000cee	          0x4889d7	                            mov rdi, rdx	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000cf1	            0xffd0	                                call rax	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000cf3	      0xe998000000	                           jmp 0x4000d90	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000cf8	      0xba00000000	                              mov edx, 0	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x4000cfd	      0xbe81030000	                          mov esi, 0x381	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x4000d02	      0xbf00000000	                              mov edi, 0	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x4000d07	      0xe800000000	                          call 0x4000d0c	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x4000d0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d10	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d17	           0xfb6c0	                           movzx eax, al	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d1a	          0x83f804	                              cmp eax, 4	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d1d	            0x7427	                            je 0x4000d46	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d1f	          0x83f808	                              cmp eax, 8	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d22	            0x7407	                            je 0x4000d2b	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d24	          0x83f802	                              cmp eax, 2	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d27	            0x7438	                            je 0x4000d61	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d29	            0xeb51	                           jmp 0x4000d7c	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000d2f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000d33	        0x488b4008	                mov rax, qword [rax + 8]	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000d37	        0x488b4020	            mov rax, qword [rax + 0x20] 	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000d3b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000d3f	          0x4889d7	                            mov rdi, rdx	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000d42	            0xffd0	                                call rax	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000d44	            0xeb4a	                           jmp 0x4000d90	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000d46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000d4a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000d4e	        0x488b4008	                mov rax, qword [rax + 8]	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000d52	        0x488b4038	            mov rax, qword [rax + 0x38] 	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000d56	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000d5a	          0x4889d7	                            mov rdi, rdx	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000d5d	            0xffd0	                                call rax	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000d5f	            0xeb2f	                           jmp 0x4000d90	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000d61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000d65	        0x488b4010	            mov rax, qword [rax + 0x10] 	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000d69	        0x488b4008	                mov rax, qword [rax + 8]	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000d6d	        0x488b4050	            mov rax, qword [rax + 0x50] 	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000d71	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000d75	          0x4889d7	                            mov rdi, rdx	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000d78	            0xffd0	                                call rax	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000d7a	            0xeb14	                           jmp 0x4000d90	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000d7c	      0xba00000000	                              mov edx, 0	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000d81	      0xbe8f030000	                          mov esi, 0x38f	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000d86	      0xbf00000000	                              mov edi, 0	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000d8b	      0xe800000000	                          call 0x4000d90	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000d90	              0xc9	                                   leave	       914	dwarf2.c	FUNCTION_17
0x4000d91	              0xc3	                                     ret	       914	dwarf2.c	FUNCTION_17
read_string	SWITCH,0:ELSE,0:CALL,0:IF,3:DO,0:WHILE,1:functions,0:FOR,0	51
0x400058a	              0x55	                                push rbp	       657	dwarf2.c	FUNCTION_12
0x400058b	          0x4889e5	                            mov rbp, rsp	       657	dwarf2.c	FUNCTION_12
0x400058e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       657	dwarf2.c	FUNCTION_12
0x4000592	        0x488975e0	             mov qword [rbp - 0x20], rsi	       657	dwarf2.c	FUNCTION_12
0x4000596	        0x488955d8	             mov qword [rbp - 0x28], rdx	       657	dwarf2.c	FUNCTION_12
0x400059a	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       657	dwarf2.c	FUNCTION_12
0x400059e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       658	dwarf2.c	FUNCTION_12
0x40005a2	        0x488945f8	                mov qword [rbp - 8], rax	       658	dwarf2.c	FUNCTION_12
0x40005a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       660	dwarf2.c	FUNCTION_12	IF_1
0x40005aa	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       660	dwarf2.c	FUNCTION_12	IF_1
0x40005ae	            0x7211	                            jb 0x40005c1	       660	dwarf2.c	FUNCTION_12	IF_1
0x40005b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       662	dwarf2.c	FUNCTION_12	IF_1
0x40005b4	    0xc70000000000	                      mov dword [rax], 0	       662	dwarf2.c	FUNCTION_12	IF_1
0x40005ba	      0xb800000000	                              mov eax, 0	       663	dwarf2.c	FUNCTION_12	IF_1
0x40005bf	            0xeb70	                           jmp 0x4000631	       663	dwarf2.c	FUNCTION_12	IF_1
0x40005c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       666	dwarf2.c	FUNCTION_12	IF_2
0x40005c5	           0xfb600	                   movzx eax, byte [rax]	       666	dwarf2.c	FUNCTION_12	IF_2
0x40005c8	            0x84c0	                             test al, al	       666	dwarf2.c	FUNCTION_12	IF_2
0x40005ca	            0x7540	                           jne 0x400060c	       666	dwarf2.c	FUNCTION_12	IF_2
0x40005cc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       668	dwarf2.c	FUNCTION_12	IF_2
0x40005d0	    0xc70001000000	                      mov dword [rax], 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x40005d6	      0xb800000000	                              mov eax, 0	       669	dwarf2.c	FUNCTION_12	IF_2
0x40005db	            0xeb54	                           jmp 0x4000631	       669	dwarf2.c	FUNCTION_12	IF_2
0x40005dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40005e1	        0x488d5001	                      lea rdx, [rax + 1]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40005e5	        0x488955e0	             mov qword [rbp - 0x20], rdx	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40005e9	           0xfb600	                   movzx eax, byte [rax]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40005ec	            0x84c0	                             test al, al	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40005ee	            0x751c	                           jne 0x400060c	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40005f0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40005f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40005f8	          0x4829c2	                            sub rdx, rax	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40005fb	          0x4889d0	                            mov rax, rdx	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40005fe	            0x89c2	                            mov edx, eax	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4000600	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4000604	            0x8910	                    mov dword [rax], edx	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4000606	        0x488b45f8	                mov rax, qword [rbp - 8]	       676	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x400060a	            0xeb25	                           jmp 0x4000631	       676	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x400060c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4000610	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4000614	            0x72c7	                            jb 0x40005dd	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4000616	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       679	dwarf2.c	FUNCTION_12
0x400061a	        0x488b45f8	                mov rax, qword [rbp - 8]	       679	dwarf2.c	FUNCTION_12
0x400061e	          0x4829c2	                            sub rdx, rax	       679	dwarf2.c	FUNCTION_12
0x4000621	          0x4889d0	                            mov rax, rdx	       679	dwarf2.c	FUNCTION_12
0x4000624	            0x89c2	                            mov edx, eax	       679	dwarf2.c	FUNCTION_12
0x4000626	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       679	dwarf2.c	FUNCTION_12
0x400062a	            0x8910	                    mov dword [rax], edx	       679	dwarf2.c	FUNCTION_12
0x400062c	      0xb800000000	                              mov eax, 0	       680	dwarf2.c	FUNCTION_12
0x4000631	              0x5d	                                 pop rbp	       681	dwarf2.c	FUNCTION_12
0x4000632	              0xc3	                                     ret	       681	dwarf2.c	FUNCTION_12
concat_filename	SWITCH,0:ELSE,1:CALL,15:IF,11:DO,0:WHILE,0:functions,0:FOR,0	177
0x4002078	              0x55	                                push rbp	      1566	dwarf2.c	FUNCTION_26
0x4002079	          0x4889e5	                            mov rbp, rsp	      1566	dwarf2.c	FUNCTION_26
0x400207c	              0x53	                                push rbx	      1566	dwarf2.c	FUNCTION_26
0x400207d	        0x4883ec48	                           sub rsp, 0x48	      1566	dwarf2.c	FUNCTION_26
0x4002081	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1566	dwarf2.c	FUNCTION_26
0x4002085	          0x8975b4	             mov dword [rbp - 0x4c], esi	      1566	dwarf2.c	FUNCTION_26
0x4002088	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1569	dwarf2.c	FUNCTION_26	IF_1
0x400208d	            0x7411	                            je 0x40020a0	      1569	dwarf2.c	FUNCTION_26	IF_1
0x400208f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1569	dwarf2.c	FUNCTION_26	IF_1
0x4002092	          0x8d50ff	                      lea edx, [rax - 1]	      1569	dwarf2.c	FUNCTION_26	IF_1
0x4002095	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1569	dwarf2.c	FUNCTION_26	IF_1
0x4002099	          0x8b4008	                mov eax, dword [rax + 8]	      1569	dwarf2.c	FUNCTION_26	IF_1
0x400209c	            0x39c2	                            cmp edx, eax	      1569	dwarf2.c	FUNCTION_26	IF_1
0x400209e	            0x7231	                            jb 0x40020d1	      1569	dwarf2.c	FUNCTION_26	IF_1
0x40020a0	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1572	dwarf2.c	FUNCTION_26	IF_1	IF_2
0x40020a4	            0x741c	                            je 0x40020c2	      1572	dwarf2.c	FUNCTION_26	IF_1	IF_2
0x40020a6	      0xbe00000000	                              mov esi, 0	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x40020ab	      0xbf00000000	                              mov edi, 0	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x40020b0	      0xe800000000	                          call 0x40020b5	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x40020b5	          0x4889c7	                            mov rdi, rax	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x40020b8	      0xb800000000	                              mov eax, 0	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x40020bd	      0xe800000000	                          call 0x40020c2	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x40020c2	      0xbf00000000	                              mov edi, 0	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x40020c7	      0xe800000000	                          call 0x40020cc	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x40020cc	      0xe919020000	                           jmp 0x40022ea	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x40020d1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1578	dwarf2.c	FUNCTION_26
0x40020d5	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1578	dwarf2.c	FUNCTION_26
0x40020d9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1578	dwarf2.c	FUNCTION_26
0x40020dc	          0x83e801	                              sub eax, 1	      1578	dwarf2.c	FUNCTION_26
0x40020df	            0x89c1	                            mov ecx, eax	      1578	dwarf2.c	FUNCTION_26
0x40020e1	          0x4889c8	                            mov rax, rcx	      1578	dwarf2.c	FUNCTION_26
0x40020e4	          0x4801c0	                            add rax, rax	      1578	dwarf2.c	FUNCTION_26
0x40020e7	          0x4801c8	                            add rax, rcx	      1578	dwarf2.c	FUNCTION_26
0x40020ea	        0x48c1e003	                              shl rax, 3	      1578	dwarf2.c	FUNCTION_26
0x40020ee	          0x4801d0	                            add rax, rdx	      1578	dwarf2.c	FUNCTION_26
0x40020f1	          0x488b00	                    mov rax, qword [rax]	      1578	dwarf2.c	FUNCTION_26
0x40020f4	        0x488945e0	             mov qword [rbp - 0x20], rax	      1578	dwarf2.c	FUNCTION_26
0x40020f8	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1579	dwarf2.c	FUNCTION_26	IF_3
0x40020fd	            0x750f	                           jne 0x400210e	      1579	dwarf2.c	FUNCTION_26	IF_3
0x40020ff	      0xbf00000000	                              mov edi, 0	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4002104	      0xe800000000	                          call 0x4002109	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4002109	      0xe9dc010000	                           jmp 0x40022ea	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x400210e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1582	dwarf2.c	FUNCTION_26	IF_4	CALL_5
0x4002112	           0xfb600	                   movzx eax, byte [rax]	      1582	dwarf2.c	FUNCTION_26	IF_4	CALL_5
0x4002115	            0x3c2f	                            cmp al, 0x2f	      1582	dwarf2.c	FUNCTION_26	IF_4	CALL_5
0x4002117	     0xf84c1010000	                            je 0x40022de	      1582	dwarf2.c	FUNCTION_26	IF_4	CALL_5
0x400211d	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1584	dwarf2.c	FUNCTION_26	IF_4
0x4002125	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1585	dwarf2.c	FUNCTION_26	IF_4
0x400212d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002131	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002135	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002138	          0x83e801	                              sub eax, 1	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400213b	            0x89c1	                            mov ecx, eax	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400213d	          0x4889c8	                            mov rax, rcx	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002140	          0x4801c0	                            add rax, rax	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002143	          0x4801c8	                            add rax, rcx	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002146	        0x48c1e003	                              shl rax, 3	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400214a	          0x4801d0	                            add rax, rdx	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400214d	          0x8b4008	                mov eax, dword [rax + 8]	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002150	            0x85c0	                           test eax, eax	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002152	            0x7479	                            je 0x40021cd	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002154	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002158	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400215c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400215f	          0x83e801	                              sub eax, 1	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002162	            0x89c1	                            mov ecx, eax	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002164	          0x4889c8	                            mov rax, rcx	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002167	          0x4801c0	                            add rax, rax	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400216a	          0x4801c8	                            add rax, rcx	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400216d	        0x48c1e003	                              shl rax, 3	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002171	          0x4801d0	                            add rax, rdx	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002174	          0x8b5008	                mov edx, dword [rax + 8]	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002177	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400217b	          0x8b400c	              mov eax, dword [rax + 0xc]	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400217e	            0x39c2	                            cmp edx, eax	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002180	            0x774b	                            ja 0x40021cd	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002182	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002186	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400218a	          0x4885c0	                           test rax, rax	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400218d	            0x743e	                            je 0x40021cd	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400218f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002193	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4002197	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400219b	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400219f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021a2	          0x83e801	                              sub eax, 1	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021a5	            0x89c6	                            mov esi, eax	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021a7	          0x4889f0	                            mov rax, rsi	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021aa	          0x4801c0	                            add rax, rax	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021ad	          0x4801f0	                            add rax, rsi	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021b0	        0x48c1e003	                              shl rax, 3	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021b4	          0x4801c8	                            add rax, rcx	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021b7	          0x8b4008	                mov eax, dword [rax + 8]	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021ba	          0x83e801	                              sub eax, 1	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021bd	            0x89c0	                            mov eax, eax	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021bf	        0x48c1e003	                              shl rax, 3	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021c3	          0x4801d0	                            add rax, rdx	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021c6	          0x488b00	                    mov rax, qword [rax]	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021c9	        0x488945d0	             mov qword [rbp - 0x30], rax	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40021cd	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x40021d2	            0x740b	                            je 0x40021df	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x40021d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x40021d8	           0xfb600	                   movzx eax, byte [rax]	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x40021db	            0x3c2f	                            cmp al, 0x2f	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x40021dd	            0x740c	                            je 0x40021eb	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x40021df	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1597	dwarf2.c	FUNCTION_26	IF_4	IF_6
0x40021e3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1597	dwarf2.c	FUNCTION_26	IF_4	IF_6
0x40021e7	        0x488945c8	             mov qword [rbp - 0x38], rax	      1597	dwarf2.c	FUNCTION_26	IF_4	IF_6
0x40021eb	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x40021f0	            0x7510	                           jne 0x4002202	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x40021f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1601	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x40021f6	        0x488945c8	             mov qword [rbp - 0x38], rax	      1601	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x40021fa	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1602	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4002202	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1605	dwarf2.c	FUNCTION_26	IF_4	IF_8
0x4002207	            0x7511	                           jne 0x400221a	      1605	dwarf2.c	FUNCTION_26	IF_4	IF_8
0x4002209	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
0x400220d	          0x4889c7	                            mov rdi, rax	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
0x4002210	      0xe800000000	                          call 0x4002215	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
0x4002215	      0xe9d0000000	                           jmp 0x40022ea	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
0x400221a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400221e	          0x4889c7	                            mov rdi, rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4002221	      0xe800000000	                          call 0x4002226	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4002226	          0x4889c3	                            mov rbx, rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4002229	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400222d	          0x4889c7	                            mov rdi, rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4002230	      0xe800000000	                          call 0x4002235	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4002235	          0x4801d8	                            add rax, rbx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4002238	        0x4883c002	                              add rax, 2	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400223c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4002240	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1610	dwarf2.c	FUNCTION_26	IF_4	IF_9
0x4002245	            0x745c	                            je 0x40022a3	      1610	dwarf2.c	FUNCTION_26	IF_4	IF_9
0x4002247	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x400224b	          0x4889c7	                            mov rdi, rax	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x400224e	      0xe800000000	                          call 0x4002253	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4002253	          0x4889c2	                            mov rdx, rax	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4002256	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x400225a	          0x4801d0	                            add rax, rdx	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x400225d	        0x4883c001	                              add rax, 1	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4002261	        0x488945e8	             mov qword [rbp - 0x18], rax	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4002265	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4002269	          0x4889c7	                            mov rdi, rax	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x400226c	      0xe800000000	                          call 0x4002271	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4002271	        0x488945d8	             mov qword [rbp - 0x28], rax	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4002275	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1614	dwarf2.c	FUNCTION_26	IF_4	IF_9	IF_10
0x400227a	            0x745c	                            je 0x40022d8	      1614	dwarf2.c	FUNCTION_26	IF_4	IF_9	IF_10
0x400227c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1615	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_12
0x4002280	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1615	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_12
0x4002284	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1615	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_12
0x4002288	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1615	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_12
0x400228c	          0x4989f0	                             mov r8, rsi	      1615	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_12
0x400228f	      0xbe00000000	                              mov esi, 0	      1615	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_12
0x4002294	          0x4889c7	                            mov rdi, rax	      1615	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_12
0x4002297	      0xb800000000	                              mov eax, 0	      1615	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_12
0x400229c	      0xe800000000	                          call 0x40022a1	      1615	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_12
0x40022a1	            0xeb35	                           jmp 0x40022d8	      1615	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_12
0x40022a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_13
0x40022a7	          0x4889c7	                            mov rdi, rax	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_13
0x40022aa	      0xe800000000	                          call 0x40022af	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_13
0x40022af	        0x488945d8	             mov qword [rbp - 0x28], rax	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_13
0x40022b3	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1620	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	IF_11
0x40022b8	            0x741e	                            je 0x40022d8	      1620	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	IF_11
0x40022ba	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1621	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_14
0x40022be	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1621	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_14
0x40022c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1621	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_14
0x40022c6	      0xbe00000000	                              mov esi, 0	      1621	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_14
0x40022cb	          0x4889c7	                            mov rdi, rax	      1621	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_14
0x40022ce	      0xb800000000	                              mov eax, 0	      1621	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_14
0x40022d3	      0xe800000000	                          call 0x40022d8	      1621	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_14
0x40022d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1624	dwarf2.c	FUNCTION_26	IF_4
0x40022dc	            0xeb0c	                           jmp 0x40022ea	      1624	dwarf2.c	FUNCTION_26	IF_4
0x40022de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1627	dwarf2.c	FUNCTION_26	CALL_15
0x40022e2	          0x4889c7	                            mov rdi, rax	      1627	dwarf2.c	FUNCTION_26	CALL_15
0x40022e5	      0xe800000000	                          call 0x40022ea	      1627	dwarf2.c	FUNCTION_26	CALL_15
0x40022ea	        0x4883c448	                           add rsp, 0x48	      1628	dwarf2.c	FUNCTION_26
0x40022ee	              0x5b	                                 pop rbx	      1628	dwarf2.c	FUNCTION_26
0x40022ef	              0x5d	                                 pop rbp	      1628	dwarf2.c	FUNCTION_26
0x40022f0	              0xc3	                                     ret	      1628	dwarf2.c	FUNCTION_26
compare_sequences	SWITCH,0:ELSE,0:CALL,0:IF,6:DO,0:WHILE,0:functions,0:FOR,0	67
0x400240a	              0x55	                                push rbp	      1682	dwarf2.c	FUNCTION_28
0x400240b	          0x4889e5	                            mov rbp, rsp	      1682	dwarf2.c	FUNCTION_28
0x400240e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1682	dwarf2.c	FUNCTION_28
0x4002412	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1682	dwarf2.c	FUNCTION_28
0x4002416	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1683	dwarf2.c	FUNCTION_28
0x400241a	        0x488945f0	             mov qword [rbp - 0x10], rax	      1683	dwarf2.c	FUNCTION_28
0x400241e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1684	dwarf2.c	FUNCTION_28
0x4002422	        0x488945f8	                mov qword [rbp - 8], rax	      1684	dwarf2.c	FUNCTION_28
0x4002426	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	dwarf2.c	FUNCTION_28	IF_1
0x400242a	          0x488b10	                    mov rdx, qword [rax]	      1687	dwarf2.c	FUNCTION_28	IF_1
0x400242d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1687	dwarf2.c	FUNCTION_28	IF_1
0x4002431	          0x488b00	                    mov rax, qword [rax]	      1687	dwarf2.c	FUNCTION_28	IF_1
0x4002434	          0x4839c2	                            cmp rdx, rax	      1687	dwarf2.c	FUNCTION_28	IF_1
0x4002437	            0x730a	                           jae 0x4002443	      1687	dwarf2.c	FUNCTION_28	IF_1
0x4002439	      0xb8ffffffff	                     mov eax, 0xffffffff	      1688	dwarf2.c	FUNCTION_28	IF_1
0x400243e	      0xe9b0000000	                           jmp 0x40024f3	      1688	dwarf2.c	FUNCTION_28	IF_1
0x4002443	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1689	dwarf2.c	FUNCTION_28	IF_2
0x4002447	          0x488b10	                    mov rdx, qword [rax]	      1689	dwarf2.c	FUNCTION_28	IF_2
0x400244a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1689	dwarf2.c	FUNCTION_28	IF_2
0x400244e	          0x488b00	                    mov rax, qword [rax]	      1689	dwarf2.c	FUNCTION_28	IF_2
0x4002451	          0x4839c2	                            cmp rdx, rax	      1689	dwarf2.c	FUNCTION_28	IF_2
0x4002454	            0x760a	                           jbe 0x4002460	      1689	dwarf2.c	FUNCTION_28	IF_2
0x4002456	      0xb801000000	                              mov eax, 1	      1690	dwarf2.c	FUNCTION_28	IF_2
0x400245b	      0xe993000000	                           jmp 0x40024f3	      1690	dwarf2.c	FUNCTION_28	IF_2
0x4002460	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1694	dwarf2.c	FUNCTION_28	IF_3
0x4002464	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1694	dwarf2.c	FUNCTION_28	IF_3
0x4002468	        0x488b5008	                mov rdx, qword [rax + 8]	      1694	dwarf2.c	FUNCTION_28	IF_3
0x400246c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1694	dwarf2.c	FUNCTION_28	IF_3
0x4002470	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1694	dwarf2.c	FUNCTION_28	IF_3
0x4002474	        0x488b4008	                mov rax, qword [rax + 8]	      1694	dwarf2.c	FUNCTION_28	IF_3
0x4002478	          0x4839c2	                            cmp rdx, rax	      1694	dwarf2.c	FUNCTION_28	IF_3
0x400247b	            0x7307	                           jae 0x4002484	      1694	dwarf2.c	FUNCTION_28	IF_3
0x400247d	      0xb801000000	                              mov eax, 1	      1695	dwarf2.c	FUNCTION_28	IF_3
0x4002482	            0xeb6f	                           jmp 0x40024f3	      1695	dwarf2.c	FUNCTION_28	IF_3
0x4002484	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1696	dwarf2.c	FUNCTION_28	IF_4
0x4002488	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1696	dwarf2.c	FUNCTION_28	IF_4
0x400248c	        0x488b5008	                mov rdx, qword [rax + 8]	      1696	dwarf2.c	FUNCTION_28	IF_4
0x4002490	        0x488b45f8	                mov rax, qword [rbp - 8]	      1696	dwarf2.c	FUNCTION_28	IF_4
0x4002494	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1696	dwarf2.c	FUNCTION_28	IF_4
0x4002498	        0x488b4008	                mov rax, qword [rax + 8]	      1696	dwarf2.c	FUNCTION_28	IF_4
0x400249c	          0x4839c2	                            cmp rdx, rax	      1696	dwarf2.c	FUNCTION_28	IF_4
0x400249f	            0x7607	                           jbe 0x40024a8	      1696	dwarf2.c	FUNCTION_28	IF_4
0x40024a1	      0xb8ffffffff	                     mov eax, 0xffffffff	      1697	dwarf2.c	FUNCTION_28	IF_4
0x40024a6	            0xeb4b	                           jmp 0x40024f3	      1697	dwarf2.c	FUNCTION_28	IF_4
0x40024a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1699	dwarf2.c	FUNCTION_28	IF_5
0x40024ac	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1699	dwarf2.c	FUNCTION_28	IF_5
0x40024b0	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1699	dwarf2.c	FUNCTION_28	IF_5
0x40024b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1699	dwarf2.c	FUNCTION_28	IF_5
0x40024b8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1699	dwarf2.c	FUNCTION_28	IF_5
0x40024bc	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      1699	dwarf2.c	FUNCTION_28	IF_5
0x40024c0	            0x38c2	                              cmp dl, al	      1699	dwarf2.c	FUNCTION_28	IF_5
0x40024c2	            0x7307	                           jae 0x40024cb	      1699	dwarf2.c	FUNCTION_28	IF_5
0x40024c4	      0xb801000000	                              mov eax, 1	      1700	dwarf2.c	FUNCTION_28	IF_5
0x40024c9	            0xeb28	                           jmp 0x40024f3	      1700	dwarf2.c	FUNCTION_28	IF_5
0x40024cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1701	dwarf2.c	FUNCTION_28	IF_6
0x40024cf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1701	dwarf2.c	FUNCTION_28	IF_6
0x40024d3	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1701	dwarf2.c	FUNCTION_28	IF_6
0x40024d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1701	dwarf2.c	FUNCTION_28	IF_6
0x40024db	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1701	dwarf2.c	FUNCTION_28	IF_6
0x40024df	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      1701	dwarf2.c	FUNCTION_28	IF_6
0x40024e3	            0x38c2	                              cmp dl, al	      1701	dwarf2.c	FUNCTION_28	IF_6
0x40024e5	            0x7607	                           jbe 0x40024ee	      1701	dwarf2.c	FUNCTION_28	IF_6
0x40024e7	      0xb8ffffffff	                     mov eax, 0xffffffff	      1702	dwarf2.c	FUNCTION_28	IF_6
0x40024ec	            0xeb05	                           jmp 0x40024f3	      1702	dwarf2.c	FUNCTION_28	IF_6
0x40024ee	      0xb800000000	                              mov eax, 0	      1704	dwarf2.c	FUNCTION_28
0x40024f3	              0x5d	                                 pop rbp	      1705	dwarf2.c	FUNCTION_28
0x40024f4	              0xc3	                                     ret	      1705	dwarf2.c	FUNCTION_28
comp_unit_find_nearest_line	SWITCH,0:ELSE,0:CALL,4:IF,6:DO,0:WHILE,0:functions,0:FOR,0	88
0x4006790	              0x55	                                push rbp	      3593	dwarf2.c	FUNCTION_48
0x4006791	          0x4889e5	                            mov rbp, rsp	      3593	dwarf2.c	FUNCTION_48
0x4006794	        0x4883ec40	                           sub rsp, 0x40	      3593	dwarf2.c	FUNCTION_48
0x4006798	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3593	dwarf2.c	FUNCTION_48
0x400679c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3593	dwarf2.c	FUNCTION_48
0x40067a0	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3593	dwarf2.c	FUNCTION_48
0x40067a4	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      3593	dwarf2.c	FUNCTION_48
0x40067a8	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      3593	dwarf2.c	FUNCTION_48
0x40067ac	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      3593	dwarf2.c	FUNCTION_48
0x40067b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3596	dwarf2.c	FUNCTION_48	IF_1
0x40067b4	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3596	dwarf2.c	FUNCTION_48	IF_1
0x40067b7	            0x85c0	                           test eax, eax	      3596	dwarf2.c	FUNCTION_48	IF_1
0x40067b9	            0x740a	                            je 0x40067c5	      3596	dwarf2.c	FUNCTION_48	IF_1
0x40067bb	      0xb800000000	                              mov eax, 0	      3597	dwarf2.c	FUNCTION_48	IF_1
0x40067c0	      0xe914010000	                           jmp 0x40068d9	      3597	dwarf2.c	FUNCTION_48	IF_1
0x40067c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3599	dwarf2.c	FUNCTION_48	IF_2
0x40067c9	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3599	dwarf2.c	FUNCTION_48	IF_2
0x40067cd	          0x4885c0	                           test rax, rax	      3599	dwarf2.c	FUNCTION_48	IF_2
0x40067d0	     0xf8594000000	                           jne 0x400686a	      3599	dwarf2.c	FUNCTION_48	IF_2
0x40067d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3601	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x40067da	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3601	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x40067dd	            0x85c0	                           test eax, eax	      3601	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x40067df	            0x7515	                           jne 0x40067f6	      3601	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x40067e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3603	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x40067e5	    0xc74044010000	               mov dword [rax + 0x44], 1	      3603	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x40067ec	      0xb800000000	                              mov eax, 0	      3604	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x40067f1	      0xe9e3000000	                           jmp 0x40068d9	      3604	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x40067f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3607	dwarf2.c	FUNCTION_48	IF_2	CALL_1
0x40067fa	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      3607	dwarf2.c	FUNCTION_48	IF_2	CALL_1
0x40067fe	          0x4889c7	                            mov rdi, rax	      3607	dwarf2.c	FUNCTION_48	IF_2	CALL_1
0x4006801	      0xe873c7ffff	               call sym.decode_line_info	      3607	dwarf2.c	FUNCTION_48	IF_2	CALL_1
0x4006806	          0x4889c2	                            mov rdx, rax	      3607	dwarf2.c	FUNCTION_48	IF_2	CALL_1
0x4006809	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3607	dwarf2.c	FUNCTION_48	IF_2	CALL_1
0x400680d	        0x48895078	             mov qword [rax + 0x78], rdx	      3607	dwarf2.c	FUNCTION_48	IF_2	CALL_1
0x4006811	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3609	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x4006815	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3609	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x4006819	          0x4885c0	                           test rax, rax	      3609	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x400681c	            0x7515	                           jne 0x4006833	      3609	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x400681e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3611	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x4006822	    0xc74044010000	               mov dword [rax + 0x44], 1	      3611	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x4006829	      0xb800000000	                              mov eax, 0	      3612	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x400682e	      0xe9a6000000	                           jmp 0x40068d9	      3612	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x4006833	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3615	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4006837	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      3615	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x400683b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3615	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x400683f	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3615	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4006843	          0x4839c2	                            cmp rdx, rax	      3615	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4006846	            0x7322	                           jae 0x400686a	      3615	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4006848	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3616	dwarf2.c	FUNCTION_48	IF_2	IF_5	CALL_2
0x400684c	          0x4889c7	                            mov rdi, rax	      3616	dwarf2.c	FUNCTION_48	IF_2	IF_5	CALL_2
0x400684f	      0xe894eeffff	          call sym.scan_unit_for_symbols	      3616	dwarf2.c	FUNCTION_48	IF_2	IF_5	CALL_2
0x4006854	            0x85c0	                           test eax, eax	      3616	dwarf2.c	FUNCTION_48	IF_2	IF_5	CALL_2
0x4006856	            0x7512	                           jne 0x400686a	      3616	dwarf2.c	FUNCTION_48	IF_2	IF_5	CALL_2
0x4006858	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3618	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x400685c	    0xc74044010000	               mov dword [rax + 0x44], 1	      3618	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4006863	      0xb800000000	                              mov eax, 0	      3619	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4006868	            0xeb6f	                           jmp 0x40068d9	      3619	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x400686a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3623	dwarf2.c	FUNCTION_48
0x400686e	    0x48c700000000	                      mov qword [rax], 0	      3623	dwarf2.c	FUNCTION_48
0x4006875	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3624	dwarf2.c	FUNCTION_48	CALL_3
0x4006879	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3624	dwarf2.c	FUNCTION_48	CALL_3
0x400687d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3624	dwarf2.c	FUNCTION_48	CALL_3
0x4006881	          0x4889ce	                            mov rsi, rcx	      3624	dwarf2.c	FUNCTION_48	CALL_3
0x4006884	          0x4889c7	                            mov rdi, rax	      3624	dwarf2.c	FUNCTION_48	CALL_3
0x4006887	      0xe8fde1ffff	call sym.lookup_address_in_function_table	      3624	dwarf2.c	FUNCTION_48	CALL_3
0x400688c	          0x8945fc	                mov dword [rbp - 4], eax	      3624	dwarf2.c	FUNCTION_48	CALL_3
0x400688f	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3625	dwarf2.c	FUNCTION_48	IF_6
0x4006893	            0x7421	                            je 0x40068b6	      3625	dwarf2.c	FUNCTION_48	IF_6
0x4006895	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3625	dwarf2.c	FUNCTION_48	IF_6
0x4006899	          0x488b00	                    mov rax, qword [rax]	      3625	dwarf2.c	FUNCTION_48	IF_6
0x400689c	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3625	dwarf2.c	FUNCTION_48	IF_6
0x400689f	          0x83f81d	                           cmp eax, 0x1d	      3625	dwarf2.c	FUNCTION_48	IF_6
0x40068a2	            0x7512	                           jne 0x40068b6	      3625	dwarf2.c	FUNCTION_48	IF_6
0x40068a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3626	dwarf2.c	FUNCTION_48	IF_6
0x40068a8	          0x488b10	                    mov rdx, qword [rax]	      3626	dwarf2.c	FUNCTION_48	IF_6
0x40068ab	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3626	dwarf2.c	FUNCTION_48	IF_6
0x40068af	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      3626	dwarf2.c	FUNCTION_48	IF_6
0x40068b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3628	dwarf2.c	FUNCTION_48	CALL_4
0x40068ba	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3628	dwarf2.c	FUNCTION_48	CALL_4
0x40068be	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      3628	dwarf2.c	FUNCTION_48	CALL_4
0x40068c2	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      3628	dwarf2.c	FUNCTION_48	CALL_4
0x40068c6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3628	dwarf2.c	FUNCTION_48	CALL_4
0x40068ca	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3628	dwarf2.c	FUNCTION_48	CALL_4
0x40068ce	          0x4989f8	                             mov r8, rdi	      3628	dwarf2.c	FUNCTION_48	CALL_4
0x40068d1	          0x4889c7	                            mov rdi, rax	      3628	dwarf2.c	FUNCTION_48	CALL_4
0x40068d4	      0xe861dcffff	call sym.lookup_address_in_line_info_table	      3628	dwarf2.c	FUNCTION_48	CALL_4
0x40068d9	              0xc9	                                   leave	      3632	dwarf2.c	FUNCTION_48
0x40068da	              0xc3	                                     ret	      3632	dwarf2.c	FUNCTION_48
reverse_varinfo_list	SWITCH,0:ELSE,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:FOR,1	20
0x4006a7c	              0x55	                                push rbp	      3718	dwarf2.c	FUNCTION_52
0x4006a7d	          0x4889e5	                            mov rbp, rsp	      3718	dwarf2.c	FUNCTION_52
0x4006a80	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3718	dwarf2.c	FUNCTION_52
0x4006a84	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4006a8c	            0xeb26	                           jmp 0x4006ab4	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4006a8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3724	dwarf2.c	FUNCTION_52	FOR_1
0x4006a92	          0x488b00	                    mov rax, qword [rax]	      3724	dwarf2.c	FUNCTION_52	FOR_1
0x4006a95	        0x488945f8	                mov qword [rbp - 8], rax	      3724	dwarf2.c	FUNCTION_52	FOR_1
0x4006a99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4006a9d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4006aa1	          0x488910	                    mov qword [rax], rdx	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4006aa4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3726	dwarf2.c	FUNCTION_52	FOR_1
0x4006aa8	        0x488945f0	             mov qword [rbp - 0x10], rax	      3726	dwarf2.c	FUNCTION_52	FOR_1
0x4006aac	        0x488b45f8	                mov rax, qword [rbp - 8]	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4006ab0	        0x488945e8	             mov qword [rbp - 0x18], rax	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4006ab4	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4006ab9	            0x75d3	                           jne 0x4006a8e	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4006abb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3728	dwarf2.c	FUNCTION_52
0x4006abf	              0x5d	                                 pop rbp	      3729	dwarf2.c	FUNCTION_52
0x4006ac0	              0xc3	                                     ret	      3729	dwarf2.c	FUNCTION_52
arange_add	SWITCH,0:ELSE,0:CALL,1:IF,5:DO,1:WHILE,0:functions,0:FOR,0	75
0x40022f1	              0x55	                                push rbp	      1633	dwarf2.c	FUNCTION_27
0x40022f2	          0x4889e5	                            mov rbp, rsp	      1633	dwarf2.c	FUNCTION_27
0x40022f5	        0x4883ec30	                           sub rsp, 0x30	      1633	dwarf2.c	FUNCTION_27
0x40022f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1633	dwarf2.c	FUNCTION_27
0x40022fd	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1633	dwarf2.c	FUNCTION_27
0x4002301	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1633	dwarf2.c	FUNCTION_27
0x4002305	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1633	dwarf2.c	FUNCTION_27
0x4002309	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1637	dwarf2.c	FUNCTION_27	IF_1
0x400230d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1637	dwarf2.c	FUNCTION_27	IF_1
0x4002311	            0x750a	                           jne 0x400231d	      1637	dwarf2.c	FUNCTION_27	IF_1
0x4002313	      0xb801000000	                              mov eax, 1	      1638	dwarf2.c	FUNCTION_27	IF_1
0x4002318	      0xe9eb000000	                           jmp 0x4002408	      1638	dwarf2.c	FUNCTION_27	IF_1
0x400231d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4002321	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4002325	          0x4885c0	                           test rax, rax	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4002328	            0x7522	                           jne 0x400234c	      1641	dwarf2.c	FUNCTION_27	IF_2
0x400232a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1643	dwarf2.c	FUNCTION_27	IF_2
0x400232e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1643	dwarf2.c	FUNCTION_27	IF_2
0x4002332	        0x48895008	                mov qword [rax + 8], rdx	      1643	dwarf2.c	FUNCTION_27	IF_2
0x4002336	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1644	dwarf2.c	FUNCTION_27	IF_2
0x400233a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1644	dwarf2.c	FUNCTION_27	IF_2
0x400233e	        0x48895010	             mov qword [rax + 0x10], rdx	      1644	dwarf2.c	FUNCTION_27	IF_2
0x4002342	      0xb801000000	                              mov eax, 1	      1645	dwarf2.c	FUNCTION_27	IF_2
0x4002347	      0xe9bc000000	                           jmp 0x4002408	      1645	dwarf2.c	FUNCTION_27	IF_2
0x400234c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1649	dwarf2.c	FUNCTION_27
0x4002350	        0x488945f8	                mov qword [rbp - 8], rax	      1649	dwarf2.c	FUNCTION_27
0x4002354	        0x488b45f8	                mov rax, qword [rbp - 8]	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4002358	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x400235c	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4002360	            0x7516	                           jne 0x4002378	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4002362	        0x488b45f8	                mov rax, qword [rbp - 8]	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4002366	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x400236a	        0x48895010	             mov qword [rax + 0x10], rdx	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x400236e	      0xb801000000	                              mov eax, 1	      1655	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4002373	      0xe990000000	                           jmp 0x4002408	      1655	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4002378	        0x488b45f8	                mov rax, qword [rbp - 8]	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x400237c	        0x488b4008	                mov rax, qword [rax + 8]	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4002380	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4002384	            0x7513	                           jne 0x4002399	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4002386	        0x488b45f8	                mov rax, qword [rbp - 8]	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x400238a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x400238e	        0x48895008	                mov qword [rax + 8], rdx	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4002392	      0xb801000000	                              mov eax, 1	      1660	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4002397	            0xeb6f	                           jmp 0x4002408	      1660	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4002399	        0x488b45f8	                mov rax, qword [rbp - 8]	      1662	dwarf2.c	FUNCTION_27	DO_1
0x400239d	          0x488b00	                    mov rax, qword [rax]	      1662	dwarf2.c	FUNCTION_27	DO_1
0x40023a0	        0x488945f8	                mov qword [rbp - 8], rax	      1662	dwarf2.c	FUNCTION_27	DO_1
0x40023a4	      0x48837df800	                  cmp qword [rbp - 8], 0	      1664	dwarf2.c	FUNCTION_27
0x40023a9	            0x75a9	                           jne 0x4002354	      1664	dwarf2.c	FUNCTION_27
0x40023ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x40023af	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x40023b3	      0xbe18000000	                           mov esi, 0x18	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x40023b8	          0x4889c7	                            mov rdi, rax	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x40023bb	      0xe800000000	                          call 0x40023c0	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x40023c0	        0x488945f8	                mov qword [rbp - 8], rax	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x40023c4	      0x48837df800	                  cmp qword [rbp - 8], 0	      1669	dwarf2.c	FUNCTION_27	IF_5
0x40023c9	            0x7507	                           jne 0x40023d2	      1669	dwarf2.c	FUNCTION_27	IF_5
0x40023cb	      0xb800000000	                              mov eax, 0	      1670	dwarf2.c	FUNCTION_27	IF_5
0x40023d0	            0xeb36	                           jmp 0x4002408	      1670	dwarf2.c	FUNCTION_27	IF_5
0x40023d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1671	dwarf2.c	FUNCTION_27
0x40023d6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1671	dwarf2.c	FUNCTION_27
0x40023da	        0x48895008	                mov qword [rax + 8], rdx	      1671	dwarf2.c	FUNCTION_27
0x40023de	        0x488b45f8	                mov rax, qword [rbp - 8]	      1672	dwarf2.c	FUNCTION_27
0x40023e2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1672	dwarf2.c	FUNCTION_27
0x40023e6	        0x48895010	             mov qword [rax + 0x10], rdx	      1672	dwarf2.c	FUNCTION_27
0x40023ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1673	dwarf2.c	FUNCTION_27
0x40023ee	          0x488b10	                    mov rdx, qword [rax]	      1673	dwarf2.c	FUNCTION_27
0x40023f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1673	dwarf2.c	FUNCTION_27
0x40023f5	          0x488910	                    mov qword [rax], rdx	      1673	dwarf2.c	FUNCTION_27
0x40023f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1674	dwarf2.c	FUNCTION_27
0x40023fc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1674	dwarf2.c	FUNCTION_27
0x4002400	          0x488910	                    mov qword [rax], rdx	      1674	dwarf2.c	FUNCTION_27
0x4002403	      0xb801000000	                              mov eax, 1	      1675	dwarf2.c	FUNCTION_27
0x4002408	              0xc9	                                   leave	      1676	dwarf2.c	FUNCTION_27
0x4002409	              0xc3	                                     ret	      1676	dwarf2.c	FUNCTION_27
unset_sections	SWITCH,0:ELSE,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:FOR,1	20
0x4006f07	              0x55	                                push rbp	      3882	dwarf2.c	FUNCTION_56
0x4006f08	          0x4889e5	                            mov rbp, rsp	      3882	dwarf2.c	FUNCTION_56
0x4006f0b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3882	dwarf2.c	FUNCTION_56
0x4006f0f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3886	dwarf2.c	FUNCTION_56
0x4006f13	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	      3886	dwarf2.c	FUNCTION_56
0x4006f19	          0x8945f4	              mov dword [rbp - 0xc], eax	      3886	dwarf2.c	FUNCTION_56
0x4006f1c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3887	dwarf2.c	FUNCTION_56
0x4006f20	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      3887	dwarf2.c	FUNCTION_56
0x4006f27	        0x488945f8	                mov qword [rbp - 8], rax	      3887	dwarf2.c	FUNCTION_56
0x4006f2b	            0xeb18	                           jmp 0x4006f45	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006f2d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3889	dwarf2.c	FUNCTION_56	FOR_1
0x4006f31	          0x488b00	                    mov rax, qword [rax]	      3889	dwarf2.c	FUNCTION_56	FOR_1
0x4006f34	    0x48c740280000	               mov qword [rax + 0x28], 0	      3889	dwarf2.c	FUNCTION_56	FOR_1
0x4006f3c	        0x836df401	                sub dword [rbp - 0xc], 1	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006f40	      0x488345f810	               add qword [rbp - 8], 0x10	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006f45	        0x837df400	                cmp dword [rbp - 0xc], 0	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006f49	            0x7fe2	                            jg 0x4006f2d	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006f4b	              0x90	                                     nop	      3890	dwarf2.c	FUNCTION_56
0x4006f4c	              0x5d	                                 pop rbp	      3890	dwarf2.c	FUNCTION_56
0x4006f4d	              0xc3	                                     ret	      3890	dwarf2.c	FUNCTION_56
create_info_hash_table	SWITCH,0:ELSE,0:CALL,3:IF,2:DO,0:WHILE,0:functions,0:FOR,0	30
0x40000ba	              0x55	                                push rbp	       451	dwarf2.c	FUNCTION_2
0x40000bb	          0x4889e5	                            mov rbp, rsp	       451	dwarf2.c	FUNCTION_2
0x40000be	        0x4883ec20	                           sub rsp, 0x20	       451	dwarf2.c	FUNCTION_2
0x40000c2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       451	dwarf2.c	FUNCTION_2
0x40000c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	dwarf2.c	FUNCTION_2
0x40000ca	      0xbe28000000	                           mov esi, 0x28	       454	dwarf2.c	FUNCTION_2
0x40000cf	          0x4889c7	                            mov rdi, rax	       454	dwarf2.c	FUNCTION_2
0x40000d2	      0xe800000000	                          call 0x40000d7	       454	dwarf2.c	FUNCTION_2
0x40000d7	        0x488945f8	                mov qword [rbp - 8], rax	       454	dwarf2.c	FUNCTION_2
0x40000db	      0x48837df800	                  cmp qword [rbp - 8], 0	       456	dwarf2.c	FUNCTION_2	IF_1
0x40000e0	            0x7506	                           jne 0x40000e8	       456	dwarf2.c	FUNCTION_2	IF_1
0x40000e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       457	dwarf2.c	FUNCTION_2	IF_1
0x40000e6	            0xeb38	                           jmp 0x4000120	       457	dwarf2.c	FUNCTION_2	IF_1
0x40000e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40000ec	      0xba20000000	                           mov edx, 0x20	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40000f1	      0xbe00000000	                              mov esi, 0	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40000f6	          0x4889c7	                            mov rdi, rax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40000f9	      0xe800000000	                          call 0x40000fe	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40000fe	            0x85c0	                           test eax, eax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x4000100	            0x751a	                           jne 0x400011c	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x4000102	        0x488b55f8	                mov rdx, qword [rbp - 8]	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x4000106	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x400010a	          0x4889d6	                            mov rsi, rdx	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x400010d	          0x4889c7	                            mov rdi, rax	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x4000110	      0xe800000000	                          call 0x4000115	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x4000115	      0xb800000000	                              mov eax, 0	       463	dwarf2.c	FUNCTION_2	IF_2
0x400011a	            0xeb04	                           jmp 0x4000120	       463	dwarf2.c	FUNCTION_2	IF_2
0x400011c	        0x488b45f8	                mov rax, qword [rbp - 8]	       466	dwarf2.c	FUNCTION_2
0x4000120	              0xc9	                                   leave	       467	dwarf2.c	FUNCTION_2
0x4000121	              0xc3	                                     ret	       467	dwarf2.c	FUNCTION_2
reverse_funcinfo_list	SWITCH,0:ELSE,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:FOR,1	20
0x4006a37	              0x55	                                push rbp	      3703	dwarf2.c	FUNCTION_51
0x4006a38	          0x4889e5	                            mov rbp, rsp	      3703	dwarf2.c	FUNCTION_51
0x4006a3b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3703	dwarf2.c	FUNCTION_51
0x4006a3f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4006a47	            0xeb26	                           jmp 0x4006a6f	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4006a49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3709	dwarf2.c	FUNCTION_51	FOR_1
0x4006a4d	          0x488b00	                    mov rax, qword [rax]	      3709	dwarf2.c	FUNCTION_51	FOR_1
0x4006a50	        0x488945f8	                mov qword [rbp - 8], rax	      3709	dwarf2.c	FUNCTION_51	FOR_1
0x4006a54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4006a58	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4006a5c	          0x488910	                    mov qword [rax], rdx	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4006a5f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3711	dwarf2.c	FUNCTION_51	FOR_1
0x4006a63	        0x488945f0	             mov qword [rbp - 0x10], rax	      3711	dwarf2.c	FUNCTION_51	FOR_1
0x4006a67	        0x488b45f8	                mov rax, qword [rbp - 8]	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4006a6b	        0x488945e8	             mov qword [rbp - 0x18], rax	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4006a6f	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4006a74	            0x75d3	                           jne 0x4006a49	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4006a76	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3713	dwarf2.c	FUNCTION_51
0x4006a7a	              0x5d	                                 pop rbp	      3714	dwarf2.c	FUNCTION_51
0x4006a7b	              0xc3	                                     ret	      3714	dwarf2.c	FUNCTION_51
read_rangelist	SWITCH,0:ELSE,1:CALL,4:IF,7:DO,0:WHILE,0:functions,0:FOR,1	105
0x400553d	              0x55	                                push rbp	      2990	dwarf2.c	FUNCTION_44
0x400553e	          0x4889e5	                            mov rbp, rsp	      2990	dwarf2.c	FUNCTION_44
0x4005541	        0x4883ec50	                           sub rsp, 0x50	      2990	dwarf2.c	FUNCTION_44
0x4005545	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2990	dwarf2.c	FUNCTION_44
0x4005549	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2990	dwarf2.c	FUNCTION_44
0x400554d	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2990	dwarf2.c	FUNCTION_44
0x4005551	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2993	dwarf2.c	FUNCTION_44
0x4005555	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      2993	dwarf2.c	FUNCTION_44
0x400555c	        0x488945e0	             mov qword [rbp - 0x20], rax	      2993	dwarf2.c	FUNCTION_44
0x4005560	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4005564	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2995	dwarf2.c	FUNCTION_44	IF_1
0x400556b	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4005572	          0x4885c0	                           test rax, rax	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4005575	            0x751a	                           jne 0x4005591	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4005577	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x400557b	          0x4889c7	                            mov rdi, rax	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x400557e	      0xe804f2ffff	              call sym.read_debug_ranges	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x4005583	            0x85c0	                           test eax, eax	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x4005585	            0x750a	                           jne 0x4005591	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x4005587	      0xb800000000	                              mov eax, 0	      2998	dwarf2.c	FUNCTION_44	IF_1	IF_2
0x400558c	      0xe955010000	                           jmp 0x40056e6	      2998	dwarf2.c	FUNCTION_44	IF_1	IF_2
0x4005591	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3001	dwarf2.c	FUNCTION_44
0x4005595	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      3001	dwarf2.c	FUNCTION_44
0x400559c	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      3001	dwarf2.c	FUNCTION_44
0x40055a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3001	dwarf2.c	FUNCTION_44
0x40055a7	          0x4801d0	                            add rax, rdx	      3001	dwarf2.c	FUNCTION_44
0x40055aa	        0x488945d8	             mov qword [rbp - 0x28], rax	      3001	dwarf2.c	FUNCTION_44
0x40055ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3002	dwarf2.c	FUNCTION_44	IF_3
0x40055b2	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      3002	dwarf2.c	FUNCTION_44	IF_3
0x40055b9	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      3002	dwarf2.c	FUNCTION_44	IF_3
0x40055c0	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3002	dwarf2.c	FUNCTION_44	IF_3
0x40055c4	            0x760a	                           jbe 0x40055d0	      3002	dwarf2.c	FUNCTION_44	IF_3
0x40055c6	      0xb800000000	                              mov eax, 0	      3003	dwarf2.c	FUNCTION_44	IF_3
0x40055cb	      0xe916010000	                           jmp 0x40056e6	      3003	dwarf2.c	FUNCTION_44	IF_3
0x40055d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3004	dwarf2.c	FUNCTION_44
0x40055d4	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      3004	dwarf2.c	FUNCTION_44
0x40055db	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      3004	dwarf2.c	FUNCTION_44
0x40055e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3004	dwarf2.c	FUNCTION_44
0x40055e6	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      3004	dwarf2.c	FUNCTION_44
0x40055ed	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	      3004	dwarf2.c	FUNCTION_44
0x40055f4	          0x4801d0	                            add rax, rdx	      3004	dwarf2.c	FUNCTION_44
0x40055f7	        0x488945e8	             mov qword [rbp - 0x18], rax	      3004	dwarf2.c	FUNCTION_44
0x40055fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x40055ff	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4005606	           0xfb6c0	                           movzx eax, al	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4005609	             0x1c0	                            add eax, eax	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x400560b	          0x4863d0	                         movsxd rdx, eax	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x400560e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4005612	          0x4801d0	                            add rax, rdx	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4005615	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4005619	            0x760a	                           jbe 0x4005625	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x400561b	      0xb800000000	                              mov eax, 0	      3013	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4005620	      0xe9c1000000	                           jmp 0x40056e6	      3013	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4005625	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x4005629	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x400562d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x4005631	          0x4889ce	                            mov rsi, rcx	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x4005634	          0x4889c7	                            mov rdi, rax	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x4005637	      0xe8c2b5ffff	                   call sym.read_address	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x400563c	        0x488945f0	             mov qword [rbp - 0x10], rax	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x4005640	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x4005644	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x400564b	           0xfb6c0	                           movzx eax, al	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x400564e	        0x480145d8	            add qword [rbp - 0x28], rax 	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x4005652	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x4005656	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x400565a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x400565e	          0x4889ce	                            mov rsi, rcx	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x4005661	          0x4889c7	                            mov rdi, rax	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x4005664	      0xe895b5ffff	                   call sym.read_address	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x4005669	        0x488945f8	                mov qword [rbp - 8], rax	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x400566d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3018	dwarf2.c	FUNCTION_44	FOR_1
0x4005671	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      3018	dwarf2.c	FUNCTION_44	FOR_1
0x4005678	           0xfb6c0	                           movzx eax, al	      3018	dwarf2.c	FUNCTION_44	FOR_1
0x400567b	        0x480145d8	            add qword [rbp - 0x28], rax 	      3018	dwarf2.c	FUNCTION_44	FOR_1
0x400567f	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x4005684	            0x7507	                           jne 0x400568d	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x4005686	      0x48837df800	                  cmp qword [rbp - 8], 0	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x400568b	            0x7453	                            je 0x40056e0	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x400568d	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4005692	            0x7511	                           jne 0x40056a5	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4005694	      0x48837df8ff	 cmp qword [rbp - 8], 0xffffffffffffffff	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4005699	            0x740a	                            je 0x40056a5	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x400569b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3023	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x400569f	        0x488945e0	             mov qword [rbp - 0x20], rax	      3023	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x40056a3	            0xeb36	                           jmp 0x40056db	      3023	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x40056a5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056ad	        0x488d0c02	                    lea rcx, [rdx + rax]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056b1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056b9	          0x4801c2	                            add rdx, rax	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056bc	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056c4	          0x4889c7	                            mov rdi, rax	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056c7	      0xe825ccffff	                     call sym.arange_add	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056cc	            0x85c0	                           test eax, eax	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056ce	     0xf8527ffffff	                           jne 0x40055fb	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40056d4	      0xb800000000	                              mov eax, 0	      3028	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7
0x40056d9	            0xeb0b	                           jmp 0x40056e6	      3028	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7
0x40056db	      0xe91bffffff	                           jmp 0x40055fb	      3030	dwarf2.c	FUNCTION_44	FOR_1
0x40056e0	              0x90	                                     nop	      3021	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x40056e1	      0xb801000000	                              mov eax, 1	      3031	dwarf2.c	FUNCTION_44
0x40056e6	              0xc9	                                   leave	      3032	dwarf2.c	FUNCTION_44
0x40056e7	              0xc3	                                     ret	      3032	dwarf2.c	FUNCTION_44
_bfd_dwarf2_find_nearest_line	SWITCH,0:ELSE,10:CALL,23:IF,40:DO,0:WHILE,1:functions,0:FOR,3	639
0x400818b	              0x55	                                push rbp	      4529	dwarf2.c	FUNCTION_68
0x400818c	          0x4889e5	                            mov rbp, rsp	      4529	dwarf2.c	FUNCTION_68
0x400818f	    0x4881ecf00000	                           sub rsp, 0xf0	      4529	dwarf2.c	FUNCTION_68
0x4008196	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      4529	dwarf2.c	FUNCTION_68
0x400819d	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      4529	dwarf2.c	FUNCTION_68
0x40081a4	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      4529	dwarf2.c	FUNCTION_68
0x40081ab	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	      4529	dwarf2.c	FUNCTION_68
0x40081b2	    0x4c898548ffff	              mov qword [rbp - 0xb8], r8	      4529	dwarf2.c	FUNCTION_68
0x40081b9	    0x4c898d40ffff	              mov qword [rbp - 0xc0], r9	      4529	dwarf2.c	FUNCTION_68
0x40081c0	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      4529	dwarf2.c	FUNCTION_68
0x40081c4	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4529	dwarf2.c	FUNCTION_68
0x40081cb	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      4529	dwarf2.c	FUNCTION_68
0x40081cf	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      4529	dwarf2.c	FUNCTION_68
0x40081d6	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      4529	dwarf2.c	FUNCTION_68
0x40081da	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4529	dwarf2.c	FUNCTION_68
0x40081e1	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      4529	dwarf2.c	FUNCTION_68
0x40081e5	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4529	dwarf2.c	FUNCTION_68
0x40081ec	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      4529	dwarf2.c	FUNCTION_68
0x40081f0	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      4529	dwarf2.c	FUNCTION_68
0x40081f7	    0x64488b042528	                mov rax, qword fs:[0x28]	      4529	dwarf2.c	FUNCTION_68
0x4008200	        0x488945f8	                mov qword [rbp - 8], rax	      4529	dwarf2.c	FUNCTION_68
0x4008204	            0x31c0	                            xor eax, eax	      4529	dwarf2.c	FUNCTION_68
0x4008206	    0x48c745880000	               mov qword [rbp - 0x78], 0	      4542	dwarf2.c	FUNCTION_68
0x400820e	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	      4543	dwarf2.c	FUNCTION_68
0x4008218	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4546	dwarf2.c	FUNCTION_68
0x400821f	    0x48c700000000	                      mov qword [rax], 0	      4546	dwarf2.c	FUNCTION_68
0x4008226	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      4547	dwarf2.c	FUNCTION_68	IF_1
0x400822e	            0x740e	                            je 0x400823e	      4547	dwarf2.c	FUNCTION_68	IF_1
0x4008230	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4548	dwarf2.c	FUNCTION_68	IF_1
0x4008237	    0x48c700000000	                      mov qword [rax], 0	      4548	dwarf2.c	FUNCTION_68	IF_1
0x400823e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4549	dwarf2.c	FUNCTION_68
0x4008245	    0xc70000000000	                      mov dword [rax], 0	      4549	dwarf2.c	FUNCTION_68
0x400824b	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      4550	dwarf2.c	FUNCTION_68	IF_2
0x4008253	            0x740d	                            je 0x4008262	      4550	dwarf2.c	FUNCTION_68	IF_2
0x4008255	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4551	dwarf2.c	FUNCTION_68	IF_2
0x400825c	    0xc70000000000	                      mov dword [rax], 0	      4551	dwarf2.c	FUNCTION_68	IF_2
0x4008262	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4008269	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4555	dwarf2.c	FUNCTION_68	IF_3
0x400826c	          0xc1e805	                              shr eax, 5	      4555	dwarf2.c	FUNCTION_68	IF_3
0x400826f	      0x25ffff0f00	                        and eax, 0xfffff	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4008274	          0x83e042	                           and eax, 0x42	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4008277	            0x85c0	                           test eax, eax	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4008279	           0xf94c0	                                 sete al	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x400827c	           0xfb6f8	                           movzx edi, al	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x400827f	    0x488bb518ffff	             mov rsi, qword [rbp - 0xe8]	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4008286	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x400828d	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4008294	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x400829b	          0x4189f9	                            mov r9d, edi	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x400829e	          0x4989f0	                             mov r8, rsi	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x40082a1	      0xbe00000000	                              mov esi, 0	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x40082a6	          0x4889c7	                            mov rdi, rax	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x40082a9	      0xe800000000	                          call 0x40082ae	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x40082ae	            0x85c0	                           test eax, eax	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x40082b0	            0x750a	                           jne 0x40082bc	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x40082b2	      0xb800000000	                              mov eax, 0	      4556	dwarf2.c	FUNCTION_68	IF_3
0x40082b7	      0xe959090000	                           jmp 0x4008c15	      4556	dwarf2.c	FUNCTION_68	IF_3
0x40082bc	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4558	dwarf2.c	FUNCTION_68
0x40082c3	          0x488b00	                    mov rax, qword [rax]	      4558	dwarf2.c	FUNCTION_68
0x40082c6	        0x488945d8	             mov qword [rbp - 0x28], rax	      4558	dwarf2.c	FUNCTION_68
0x40082ca	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4560	dwarf2.c	FUNCTION_68
0x40082d2	           0xf95c0	                                setne al	      4560	dwarf2.c	FUNCTION_68
0x40082d5	           0xfb6c0	                           movzx eax, al	      4560	dwarf2.c	FUNCTION_68
0x40082d8	          0x894580	             mov dword [rbp - 0x80], eax	      4560	dwarf2.c	FUNCTION_68
0x40082db	        0x837d8000	               cmp dword [rbp - 0x80], 0	      4561	dwarf2.c	FUNCTION_68	IF_4
0x40082df	            0x7453	                            je 0x4008334	      4561	dwarf2.c	FUNCTION_68	IF_4
0x40082e1	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x40082e9	            0x7514	                           jne 0x40082ff	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x40082eb	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x40082f3	            0x750a	                           jne 0x40082ff	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x40082f5	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x40082fd	            0x740f	                            je 0x400830e	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x40082ff	      0xbed3110000	                         mov esi, 0x11d3	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4008304	      0xbf00000000	                              mov edi, 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4008309	      0xe800000000	                          call 0x400830e	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x400830e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4008315	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4008319	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4008320	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4565	dwarf2.c	FUNCTION_68	IF_4
0x4008327	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4565	dwarf2.c	FUNCTION_68	IF_4
0x400832b	        0x488945a0	             mov qword [rbp - 0x60], rax	      4565	dwarf2.c	FUNCTION_68	IF_4
0x400832f	      0xe9ea000000	                           jmp 0x400841e	      4565	dwarf2.c	FUNCTION_68	IF_4
0x4008334	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x400833c	            0x740a	                            je 0x4008348	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x400833e	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4008346	            0x750f	                           jne 0x4008357	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4008348	      0xbed9110000	                         mov esi, 0x11d9	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x400834d	      0xbf00000000	                              mov edi, 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4008352	      0xe800000000	                          call 0x4008357	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4008357	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x400835e	        0x488945a0	             mov qword [rbp - 0x60], rax	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x4008362	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x400836a	     0xf84ae000000	                            je 0x400841e	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4008370	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4008377	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x400837a	          0x83e010	                           and eax, 0x10	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x400837d	            0x85c0	                           test eax, eax	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x400837f	     0xf8599000000	                           jne 0x400841e	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4008385	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x400838c	        0x488945b0	             mov qword [rbp - 0x50], rax	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4008390	            0xeb79	                           jmp 0x400840b	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4008392	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4008396	          0x488b00	                    mov rax, qword [rax]	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4008399	          0x488b00	                    mov rax, qword [rax]	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x400839c	    0x483b8568ffff	             cmp rax, qword [rbp - 0x98]	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083a3	            0x7561	                           jne 0x4008406	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083a5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083a9	          0x488b00	                    mov rax, qword [rax]	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083ac	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083b0	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083b7	            0x754d	                           jne 0x4008406	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083b9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083bd	          0x488b00	                    mov rax, qword [rax]	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083c4	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083cb	            0x7539	                           jne 0x4008406	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083cd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083d1	          0x488b00	                    mov rax, qword [rax]	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083d4	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083d7	      0x2500010000	                          and eax, 0x100	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083dc	            0x85c0	                           test eax, eax	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083de	            0x7526	                           jne 0x4008406	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083e0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4595	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083e4	          0x488b00	                    mov rax, qword [rax]	      4595	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083e7	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4595	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083ee	    0xc74580010000	               mov dword [rbp - 0x80], 1	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40083f5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x40083fc	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x40083ff	          0x83e002	                              and eax, 2	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x4008402	            0x85c0	                           test eax, eax	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x4008404	            0x7517	                           jne 0x400841d	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x4008406	      0x488345b008	               add qword [rbp - 0x50], 8	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x400840b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x400840f	          0x488b00	                    mov rax, qword [rax]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4008412	          0x4885c0	                           test rax, rax	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4008415	     0xf8577ffffff	                           jne 0x4008392	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x400841b	            0xeb01	                           jmp 0x400841e	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x400841d	              0x90	                                     nop	      4600	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x400841e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4605	dwarf2.c	FUNCTION_68	IF_8
0x4008425	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4605	dwarf2.c	FUNCTION_68	IF_8
0x4008429	          0x4885c0	                           test rax, rax	      4605	dwarf2.c	FUNCTION_68	IF_8
0x400842c	            0x7423	                            je 0x4008451	      4605	dwarf2.c	FUNCTION_68	IF_8
0x400842e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4008435	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4008439	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4606	dwarf2.c	FUNCTION_68	IF_8
0x400843d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4008444	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4008448	          0x4801d0	                            add rax, rdx	      4606	dwarf2.c	FUNCTION_68	IF_8
0x400844b	        0x480145a0	            add qword [rbp - 0x60], rax 	      4606	dwarf2.c	FUNCTION_68	IF_8
0x400844f	            0xeb0f	                           jmp 0x4008460	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4008451	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x4008458	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x400845c	        0x480145a0	            add qword [rbp - 0x60], rax 	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x4008460	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4612	dwarf2.c	FUNCTION_68	IF_9
0x4008464	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4612	dwarf2.c	FUNCTION_68	IF_9
0x4008468	          0x4885c0	                           test rax, rax	      4612	dwarf2.c	FUNCTION_68	IF_9
0x400846b	            0x750a	                           jne 0x4008477	      4612	dwarf2.c	FUNCTION_68	IF_9
0x400846d	      0xb800000000	                              mov eax, 0	      4613	dwarf2.c	FUNCTION_68	IF_9
0x4008472	      0xe99e070000	                           jmp 0x4008c15	      4613	dwarf2.c	FUNCTION_68	IF_9
0x4008477	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4615	dwarf2.c	FUNCTION_68
0x400847b	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      4615	dwarf2.c	FUNCTION_68
0x4008486	        0x837d8000	               cmp dword [rbp - 0x80], 0	      4618	dwarf2.c	FUNCTION_68	IF_10
0x400848a	     0xf8430010000	                            je 0x40085c0	      4618	dwarf2.c	FUNCTION_68	IF_10
0x4008490	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x4008494	    0x8b8010010000	           mov eax, dword [rax + 0x110] 	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x400849a	            0x85c0	                           test eax, eax	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x400849c	            0x7516	                           jne 0x40084b4	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x400849e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4624	dwarf2.c	FUNCTION_68	IF_10	CALL_5
0x40084a2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4624	dwarf2.c	FUNCTION_68	IF_10	CALL_5
0x40084a9	          0x4889d6	                            mov rsi, rdx	      4624	dwarf2.c	FUNCTION_68	IF_10	CALL_5
0x40084ac	          0x4889c7	                            mov rdi, rax	      4624	dwarf2.c	FUNCTION_68	IF_10	CALL_5
0x40084af	      0xe852f3ffff	call sym.stash_maybe_enable_info_hash_tables	      4624	dwarf2.c	FUNCTION_68	IF_10	CALL_5
0x40084b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4628	dwarf2.c	FUNCTION_68	IF_10	IF_12
0x40084b8	    0x8b8010010000	           mov eax, dword [rax + 0x110] 	      4628	dwarf2.c	FUNCTION_68	IF_10	IF_12
0x40084be	          0x83f801	                              cmp eax, 1	      4628	dwarf2.c	FUNCTION_68	IF_10	IF_12
0x40084c1	            0x750c	                           jne 0x40084cf	      4628	dwarf2.c	FUNCTION_68	IF_10	IF_12
0x40084c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4629	dwarf2.c	FUNCTION_68	IF_10	CALL_6
0x40084c7	          0x4889c7	                            mov rdi, rax	      4629	dwarf2.c	FUNCTION_68	IF_10	CALL_6
0x40084ca	      0xe891f0ffff	call sym.stash_maybe_update_info_hash_tables	      4629	dwarf2.c	FUNCTION_68	IF_10	CALL_6
0x40084cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4631	dwarf2.c	FUNCTION_68	IF_10	IF_13
0x40084d3	    0x8b8010010000	           mov eax, dword [rax + 0x110] 	      4631	dwarf2.c	FUNCTION_68	IF_10	IF_13
0x40084d9	          0x83f801	                              cmp eax, 1	      4631	dwarf2.c	FUNCTION_68	IF_10	IF_13
0x40084dc	            0x7540	                           jne 0x400851e	      4631	dwarf2.c	FUNCTION_68	IF_10	IF_13
0x40084de	    0x488bbd30ffff	             mov rdi, qword [rbp - 0xd0]	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x40084e5	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x40084ec	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x40084f0	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x40084f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x40084fb	          0x4989f8	                             mov r8, rdi	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x40084fe	          0x4889c7	                            mov rdi, rax	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x4008501	      0xe8d0f3ffff	           call sym.stash_find_line_fast	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x4008506	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x400850c	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      4635	dwarf2.c	FUNCTION_68	IF_10	IF_13	IF_14
0x4008513	     0xf8422020000	                            je 0x400873b	      4635	dwarf2.c	FUNCTION_68	IF_10	IF_13	IF_14
0x4008519	      0xe9cc050000	                           jmp 0x4008aea	      4636	dwarf2.c	FUNCTION_68	IF_10	IF_13	IF_14
0x400851e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4008522	          0x488b00	                    mov rax, qword [rax]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4008525	        0x488945a8	             mov qword [rbp - 0x58], rax	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4008529	      0xe982000000	                           jmp 0x40085b0	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x400852e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4008535	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4008538	          0x83e008	                              and eax, 8	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x400853b	            0x85c0	                           test eax, eax	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x400853d	            0x7424	                            je 0x4008563	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x400853f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4643	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4008543	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4643	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4008547	          0x4885c0	                           test rax, rax	      4643	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x400854a	            0x7417	                            je 0x4008563	      4643	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x400854c	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x4008550	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x4008554	          0x4889d6	                            mov rsi, rdx	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x4008557	          0x4889c7	                            mov rdi, rax	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x400855a	      0xe8cbe1ffff	     call sym.comp_unit_contains_address	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x400855f	            0x85c0	                           test eax, eax	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x4008561	            0x7442	                            je 0x40085a5	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x4008563	        0x4c8b45d8	              mov r8, qword [rbp - 0x28]	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4008567	    0x488bbd30ffff	             mov rdi, qword [rbp - 0xd0]	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x400856e	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4008575	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4008579	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4008580	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4008584	          0x4d89c1	                              mov r9, r8	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4008587	          0x4989f8	                             mov r8, rdi	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x400858a	          0x4889c7	                            mov rdi, rax	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x400858d	      0xe817e4ffff	            call sym.comp_unit_find_line	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4008592	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4008598	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x400859f	     0xf853e050000	                           jne 0x4008ae3	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x40085a5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40085a9	          0x488b00	                    mov rax, qword [rax]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40085ac	        0x488945a8	             mov qword [rbp - 0x58], rax	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40085b0	      0x48837da800	               cmp qword [rbp - 0x58], 0	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40085b5	     0xf8573ffffff	                           jne 0x400852e	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40085bb	      0xe97b010000	                           jmp 0x400873b	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40085c0	    0x48c745b8ffff	mov qword [rbp - 0x48], 0xffffffffffffffff	      4655	dwarf2.c	FUNCTION_68	ELSE_4
0x40085c8	    0x48c745900000	               mov qword [rbp - 0x70], 0	      4656	dwarf2.c	FUNCTION_68	ELSE_4
0x40085d0	    0x48c745980000	               mov qword [rbp - 0x68], 0	      4657	dwarf2.c	FUNCTION_68	ELSE_4
0x40085d8	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      4658	dwarf2.c	FUNCTION_68	ELSE_4
0x40085e2	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      4659	dwarf2.c	FUNCTION_68	ELSE_4
0x40085ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40085f0	          0x488b00	                    mov rax, qword [rax]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40085f3	        0x488945a8	             mov qword [rbp - 0x58], rax	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40085f7	      0xe918010000	                           jmp 0x4008714	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40085fc	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	      4663	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4008604	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4665	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4008608	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4665	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400860c	          0x4885c0	                           test rax, rax	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400860f	            0x7417	                            je 0x4008628	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008611	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x4008615	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x4008619	          0x4889d6	                            mov rsi, rdx	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x400861c	          0x4889c7	                            mov rdi, rax	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x400861f	      0xe806e1ffff	     call sym.comp_unit_contains_address	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x4008624	            0x85c0	                           test eax, eax	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x4008626	            0x7449	                            je 0x4008671	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x4008628	    0x4c8d8578ffff	                    lea r8, [rbp - 0x88]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400862f	    0x488dbd74ffff	                   lea rdi, [rbp - 0x8c]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008636	        0x488d4d98	                   lea rcx, [rbp - 0x68]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400863a	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400863e	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008642	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008646	        0x4883ec08	                              sub rsp, 8	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400864a	          0xff75d8	                 push qword [rbp - 0x28]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400864d	          0x4d89c1	                              mov r9, r8	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008650	          0x4989f8	                             mov r8, rdi	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008653	          0x4889c7	                            mov rdi, rax	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008656	      0xe835e1ffff	    call sym.comp_unit_find_nearest_line	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400865b	        0x4883c410	                           add rsp, 0x10	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400865f	        0x488945c0	             mov qword [rbp - 0x40], rax	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008663	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008668	            0x7407	                            je 0x4008671	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400866a	      0xb801000000	                              mov eax, 1	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400866f	            0xeb05	                           jmp 0x4008676	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008671	      0xb800000000	                              mov eax, 0	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4008676	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      4665	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400867c	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      4673	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17
0x4008683	     0xf8480000000	                            je 0x4008709	      4673	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17
0x4008689	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x400868d	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x4008691	            0x7776	                            ja 0x4008709	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x4008693	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x400869b	            0x7417	                            je 0x40086b4	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x400869d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40086a1	          0x4885c0	                           test rax, rax	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40086a4	            0x740e	                            je 0x40086b4	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40086a6	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4689	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40086aa	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4689	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40086b1	          0x488910	                    mov qword [rax], rdx	      4689	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40086b4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40086b8	          0x4885c0	                           test rax, rax	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40086bb	            0x7408	                            je 0x40086c5	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40086bd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4691	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40086c1	        0x48894588	             mov qword [rbp - 0x78], rax	      4691	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40086c5	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40086cd	            0x7419	                            je 0x40086e8	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40086cf	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40086d5	            0x85c0	                           test eax, eax	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40086d7	            0x740f	                            je 0x40086e8	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40086d9	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      4693	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40086df	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4693	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40086e6	            0x8910	                    mov dword [rax], edx	      4693	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40086e8	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40086ee	            0x85c0	                           test eax, eax	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40086f0	            0x740f	                            je 0x4008701	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40086f2	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40086f8	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40086ff	            0x8910	                    mov dword [rax], edx	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x4008701	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4696	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x4008705	        0x488945b8	             mov qword [rbp - 0x48], rax	      4696	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x4008709	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400870d	          0x488b00	                    mov rax, qword [rax]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4008710	        0x488945a8	             mov qword [rbp - 0x58], rax	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4008714	      0x48837da800	               cmp qword [rbp - 0x58], 0	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4008719	     0xf85ddfeffff	                           jne 0x40085fc	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400871f	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4008726	            0x8b00	                    mov eax, dword [rax]	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4008728	            0x85c0	                           test eax, eax	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x400872a	            0x740f	                            je 0x400873b	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x400872c	    0xc7857cffffff	               mov dword [rbp - 0x84], 1	      4703	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4008736	      0xe9af030000	                           jmp 0x4008aea	      4703	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x400873b	        0x837d3000	               cmp dword [rbp + 0x30], 0	      4711	dwarf2.c	FUNCTION_68	IF_24
0x400873f	            0x7507	                           jne 0x4008748	      4711	dwarf2.c	FUNCTION_68	IF_24
0x4008741	    0xc74530040000	               mov dword [rbp + 0x30], 4	      4712	dwarf2.c	FUNCTION_68	IF_24
0x4008748	        0x837d3004	               cmp dword [rbp + 0x30], 4	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x400874c	     0xf8476030000	                            je 0x4008ac8	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4008752	        0x837d3008	               cmp dword [rbp + 0x30], 8	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4008756	     0xf846c030000	                            je 0x4008ac8	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x400875c	      0xbe69120000	                         mov esi, 0x1269	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4008761	      0xbf00000000	                              mov edi, 0	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4008766	      0xe800000000	                          call 0x400876b	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x400876b	      0xe958030000	                           jmp 0x4008ac8	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4008770	          0x8b4530	            mov eax, dword [rbp + 0x30] 	      4719	dwarf2.c	FUNCTION_68	WHILE_1
0x4008773	          0x894584	             mov dword [rbp - 0x7c], eax	      4719	dwarf2.c	FUNCTION_68	WHILE_1
0x4008776	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4720	dwarf2.c	FUNCTION_68	WHILE_1
0x400877a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4720	dwarf2.c	FUNCTION_68	WHILE_1
0x400877e	        0x488945e0	             mov qword [rbp - 0x20], rax	      4720	dwarf2.c	FUNCTION_68	WHILE_1
0x4008782	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x4008786	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x400878a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x400878e	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x4008792	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x4008796	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x400879a	          0x4889ce	                            mov rsi, rcx	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x400879d	          0x4889c7	                            mov rdi, rax	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x40087a0	      0xe8fc7cffff	                   call sym.read_4_bytes	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x40087a5	            0x89c0	                            mov eax, eax	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x40087a7	        0x488945c8	             mov qword [rbp - 0x38], rax	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x40087ab	      0xb8ffffffff	                     mov eax, 0xffffffff	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40087b0	        0x483945c8	            cmp qword [rbp - 0x38], rax 	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40087b4	            0x754b	                           jne 0x4008801	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40087b6	    0xc74584080000	               mov dword [rbp - 0x7c], 8	      4727	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40087bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087c1	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087c9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087cd	        0x488d4804	                      lea rcx, [rax + 4]	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087d5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087d9	          0x4889ce	                            mov rsi, rcx	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087dc	          0x4889c7	                            mov rdi, rax	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087df	      0xe8fd7cffff	                   call sym.read_8_bytes	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087e4	        0x488945c8	             mov qword [rbp - 0x38], rax	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x40087e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4729	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40087ec	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4729	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40087f0	        0x488d500c	                    lea rdx, [rax + 0xc]	      4729	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40087f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4729	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40087f8	        0x48895018	             mov qword [rax + 0x18], rdx	      4729	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40087fc	      0xe988000000	                           jmp 0x4008889	      4729	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x4008801	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4734	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4008806	            0x754a	                           jne 0x4008852	      4734	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4008808	    0xc74584080000	               mov dword [rbp - 0x7c], 8	      4736	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x400880f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x4008813	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x4008817	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x400881b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x400881f	        0x488d4804	                      lea rcx, [rax + 4]	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x4008823	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x4008827	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x400882b	          0x4889ce	                            mov rsi, rcx	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x400882e	          0x4889c7	                            mov rdi, rax	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x4008831	      0xe86b7cffff	                   call sym.read_4_bytes	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x4008836	            0x89c0	                            mov eax, eax	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x4008838	        0x488945c8	             mov qword [rbp - 0x38], rax	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x400883c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4008840	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4008844	        0x488d5008	                      lea rdx, [rax + 8]	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4008848	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x400884c	        0x48895018	             mov qword [rax + 0x18], rdx	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4008850	            0xeb37	                           jmp 0x4008889	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4008852	        0x837d3008	               cmp dword [rbp + 0x30], 8	      4749	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4008856	            0x751d	                           jne 0x4008875	      4749	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4008858	    0xc74584040000	               mov dword [rbp - 0x7c], 4	      4751	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x400885f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4008863	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4008867	        0x488d5004	                      lea rdx, [rax + 4]	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x400886b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x400886f	        0x48895018	             mov qword [rax + 0x18], rdx	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4008873	            0xeb14	                           jmp 0x4008889	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4008875	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x4008879	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x400887d	        0x488d5004	                      lea rdx, [rax + 4]	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x4008881	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x4008885	        0x48895018	             mov qword [rax + 0x18], rdx	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x4008889	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x400888e	     0xf8434020000	                            je 0x4008ac8	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4008894	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x4008898	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x400889c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40088a0	          0x4801c2	                            add rdx, rax	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40088a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40088a7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40088ab	          0x4839c2	                            cmp rdx, rax	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40088ae	            0x760a	                           jbe 0x40088ba	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40088b0	      0xb800000000	                              mov eax, 0	      4763	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40088b5	      0xe95b030000	                           jmp 0x4008c15	      4763	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40088ba	          0x8b4d84	             mov ecx, dword [rbp - 0x7c]	      4765	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	CALL_16
0x40088bd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4765	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	CALL_16
0x40088c1	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      4765	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	CALL_16
0x40088c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4765	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	CALL_16
0x40088c9	          0x4889c7	                            mov rdi, rax	      4765	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	CALL_16
0x40088cc	      0xe8b8d7ffff	                call sym.parse_comp_unit	      4765	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	CALL_16
0x40088d1	        0x488945a8	             mov qword [rbp - 0x58], rax	      4765	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	CALL_16
0x40088d5	      0x48837da800	               cmp qword [rbp - 0x58], 0	      4767	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_30
0x40088da	     0xf8406020000	                            je 0x4008ae6	      4767	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_30
0x40088e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4772	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x40088e4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4772	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x40088e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4772	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x40088ec	          0x4801d0	                            add rax, rdx	      4772	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x40088ef	        0x488945e8	             mov qword [rbp - 0x18], rax	      4772	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x40088f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x40088f7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x40088fb	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x40088ff	            0x760f	                           jbe 0x4008910	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4008901	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x400890b	      0xe9da010000	                           jmp 0x4008aea	      4778	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4008910	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4781	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_8
0x4008914	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4781	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_8
0x4008918	        0x48895018	             mov qword [rax + 0x18], rdx	      4781	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_8
0x400891c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4008920	          0x488b00	                    mov rax, qword [rax]	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4008923	          0x4885c0	                           test rax, rax	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4008926	            0x7411	                            je 0x4008939	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4008928	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4784	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x400892c	          0x488b00	                    mov rax, qword [rax]	      4784	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x400892f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4784	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4008933	        0x48895008	                mov qword [rax + 8], rdx	      4784	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4008937	            0xeb0c	                           jmp 0x4008945	      4784	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4008939	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4786	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_9
0x400893d	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4786	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_9
0x4008941	        0x48895008	                mov qword [rax + 8], rdx	      4786	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_9
0x4008945	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4788	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4008949	          0x488b10	                    mov rdx, qword [rax]	      4788	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x400894c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4788	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4008950	          0x488910	                    mov qword [rax], rdx	      4788	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4008953	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4789	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4008957	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4789	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x400895b	          0x488910	                    mov qword [rax], rdx	      4789	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x400895e	        0x837d8000	               cmp dword [rbp - 0x80], 0	      4796	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4008962	            0x747c	                            je 0x40089e0	      4796	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4008964	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4797	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x400896b	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4797	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x400896e	          0x83e008	                              and eax, 8	      4797	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4008971	            0x85c0	                           test eax, eax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4008973	            0x7424	                            je 0x4008999	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4008975	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4798	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4008979	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4798	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x400897d	          0x4885c0	                           test rax, rax	      4798	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4008980	            0x7417	                            je 0x4008999	      4798	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4008982	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4008986	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x400898a	          0x4889d6	                            mov rsi, rdx	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x400898d	          0x4889c7	                            mov rdi, rax	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4008990	      0xe895ddffff	     call sym.comp_unit_contains_address	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4008995	            0x85c0	                           test eax, eax	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4008997	            0x743a	                            je 0x40089d3	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4008999	        0x4c8b45d8	              mov r8, qword [rbp - 0x28]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400899d	    0x488bbd30ffff	             mov rdi, qword [rbp - 0xd0]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089a4	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089ab	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089af	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089b6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089ba	          0x4d89c1	                              mov r9, r8	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089bd	          0x4989f8	                             mov r8, rdi	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089c0	          0x4889c7	                            mov rdi, rax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089c3	      0xe8e1dfffff	            call sym.comp_unit_find_line	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089c8	            0x85c0	                           test eax, eax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089ca	            0x7407	                            je 0x40089d3	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089cc	      0xb801000000	                              mov eax, 1	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089d1	            0xeb05	                           jmp 0x40089d8	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089d3	      0xb800000000	                              mov eax, 0	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40089d8	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      4797	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x40089de	            0xeb75	                           jmp 0x4008a55	      4797	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x40089e0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4805	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10
0x40089e4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4805	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10
0x40089e8	          0x4885c0	                           test rax, rax	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x40089eb	            0x7417	                            je 0x4008a04	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x40089ed	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x40089f1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x40089f5	          0x4889d6	                            mov rsi, rdx	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x40089f8	          0x4889c7	                            mov rdi, rax	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x40089fb	      0xe82addffff	     call sym.comp_unit_contains_address	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x4008a00	            0x85c0	                           test eax, eax	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x4008a02	            0x7446	                            je 0x4008a4a	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x4008a04	    0x4c8b8528ffff	              mov r8, qword [rbp - 0xd8]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a0b	    0x488bbd30ffff	             mov rdi, qword [rbp - 0xd0]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a12	        0x488d4d88	                   lea rcx, [rbp - 0x78]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a16	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a1d	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a21	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a25	        0x4883ec08	                              sub rsp, 8	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a29	          0xff75d8	                 push qword [rbp - 0x28]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a2c	          0x4d89c1	                              mov r9, r8	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a2f	          0x4989f8	                             mov r8, rdi	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a32	          0x4889c7	                            mov rdi, rax	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a35	      0xe856ddffff	    call sym.comp_unit_find_nearest_line	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a3a	        0x4883c410	                           add rsp, 0x10	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a3e	          0x4885c0	                           test rax, rax	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a41	            0x7407	                            je 0x4008a4a	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a43	      0xb801000000	                              mov eax, 1	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a48	            0xeb05	                           jmp 0x4008a4f	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a4a	      0xb800000000	                              mov eax, 0	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4008a4f	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      4805	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10
0x4008a55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a59	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a5d	          0x4889c2	                            mov rdx, rax	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a64	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a68	          0x4829c2	                            sub rdx, rax	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a6b	          0x4889d0	                            mov rax, rdx	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a6e	          0x4889c2	                            mov rdx, rax	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a71	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4815	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a75	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4815	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a79	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4815	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a7d	          0x4839c2	                            cmp rdx, rax	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a80	            0x753d	                           jne 0x4008abf	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008a82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008a86	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008a8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008a8e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008a92	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008a99	          0x4889ce	                            mov rsi, rcx	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008a9c	          0x4889c7	                            mov rdi, rax	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008a9f	      0xe807e2ffff	                call sym.find_debug_info	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008aa4	          0x4889c2	                            mov rdx, rax	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008aa7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008aab	        0x48895038	             mov qword [rax + 0x38], rdx	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4008aaf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008ab3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008ab7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008abb	        0x48895040	             mov qword [rax + 0x40], rdx	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4008abf	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x4008ac6	            0x7521	                           jne 0x4008ae9	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x4008ac8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4008acc	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4008ad0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4008ad4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4008ad8	          0x4839c2	                            cmp rdx, rax	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4008adb	     0xf828ffcffff	                            jb 0x4008770	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4008ae1	            0xeb07	                           jmp 0x4008aea	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4008ae3	              0x90	                                     nop	      4649	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x4008ae4	            0xeb04	                           jmp 0x4008aea	      4649	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x4008ae6	              0x90	                                     nop	      4770	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_30
0x4008ae7	            0xeb01	                           jmp 0x4008aea	      4770	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_30
0x4008ae9	              0x90	                                     nop	      4823	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x4008aea	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4008aee	          0x4885c0	                           test rax, rax	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4008af1	     0xf84f3000000	                            je 0x4008bea	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4008af7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008afb	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008afe	            0x85c0	                           test eax, eax	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008b00	     0xf85d2000000	                           jne 0x4008bd8	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008b06	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4836	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008b0d	          0x488b00	                    mov rax, qword [rax]	      4836	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008b10	          0x4885c0	                           test rax, rax	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b13	            0x7509	                           jne 0x4008b1e	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b15	    0x488bbd40ffff	             mov rdi, qword [rbp - 0xc0]	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b1c	            0xeb05	                           jmp 0x4008b23	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b1e	      0xbf00000000	                              mov edi, 0	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b23	    0x4c8b8538ffff	              mov r8, qword [rbp - 0xc8]	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b2a	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b31	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b38	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b3f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b46	          0x4d89c1	                              mov r9, r8	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b49	          0x4989f8	                             mov r8, rdi	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b4c	          0x4889c7	                            mov rdi, rax	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b4f	      0xe800000000	                          call 0x4008b54	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b54	        0x488945f0	             mov qword [rbp - 0x10], rax	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4008b58	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4838	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008b5f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4838	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008b63	        0x488945d0	             mov qword [rbp - 0x30], rax	      4838	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008b67	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b6e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b72	          0x4885c0	                           test rax, rax	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b75	            0x7421	                            je 0x4008b98	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b77	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b7e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b82	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b86	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b8d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b91	          0x4801d0	                            add rax, rdx	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b94	        0x488945d0	             mov qword [rbp - 0x30], rax	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4008b98	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4841	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008b9d	            0x742e	                            je 0x4008bcd	      4841	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008b9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008ba3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008ba7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008bab	          0x4801c2	                            add rdx, rax	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008bae	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008bb2	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008bb6	          0x4839c2	                            cmp rdx, rax	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008bb9	            0x7512	                           jne 0x4008bcd	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008bbb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008bbf	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008bc6	          0x488b12	                    mov rdx, qword [rdx]	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008bc9	        0x48895030	             mov qword [rax + 0x30], rdx	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4008bcd	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4846	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008bd1	    0xc7402c010000	               mov dword [rax + 0x2c], 1	      4846	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4008bd8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4008bdc	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4008be0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4008be7	          0x488910	                    mov qword [rax], rdx	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4008bea	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4008bf1	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4008bf4	          0xc1e805	                              shr eax, 5	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4008bf7	      0x25ffff0f00	                        and eax, 0xfffff	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4008bfc	          0x83e042	                           and eax, 0x42	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4008bff	            0x85c0	                           test eax, eax	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4008c01	            0x750c	                           jne 0x4008c0f	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4008c03	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4851	dwarf2.c	FUNCTION_68	CALL_23
0x4008c07	          0x4889c7	                            mov rdi, rax	      4851	dwarf2.c	FUNCTION_68	CALL_23
0x4008c0a	      0xe8f8e2ffff	                 call sym.unset_sections	      4851	dwarf2.c	FUNCTION_68	CALL_23
0x4008c0f	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      4853	dwarf2.c	FUNCTION_68
0x4008c15	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4854	dwarf2.c	FUNCTION_68
0x4008c19	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4854	dwarf2.c	FUNCTION_68
0x4008c22	            0x7405	                            je 0x4008c29	      4854	dwarf2.c	FUNCTION_68
0x4008c24	      0xe800000000	                          call 0x4008c29	      4854	dwarf2.c	FUNCTION_68
0x4008c29	              0xc9	                                   leave	      4854	dwarf2.c	FUNCTION_68
0x4008c2a	              0xc3	                                     ret	      4854	dwarf2.c	FUNCTION_68
read_2_bytes	SWITCH,0:ELSE,0:CALL,1:IF,1:DO,0:WHILE,0:functions,0:FOR,0	20
0x4000461	              0x55	                                push rbp	       603	dwarf2.c	FUNCTION_8
0x4000462	          0x4889e5	                            mov rbp, rsp	       603	dwarf2.c	FUNCTION_8
0x4000465	        0x4883ec20	                           sub rsp, 0x20	       603	dwarf2.c	FUNCTION_8
0x4000469	        0x48897df8	                mov qword [rbp - 8], rdi	       603	dwarf2.c	FUNCTION_8
0x400046d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       603	dwarf2.c	FUNCTION_8
0x4000471	        0x488955e8	             mov qword [rbp - 0x18], rdx	       603	dwarf2.c	FUNCTION_8
0x4000475	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       604	dwarf2.c	FUNCTION_8	IF_1
0x4000479	        0x4883c002	                              add rax, 2	       604	dwarf2.c	FUNCTION_8	IF_1
0x400047d	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       604	dwarf2.c	FUNCTION_8	IF_1
0x4000481	            0x7607	                           jbe 0x400048a	       604	dwarf2.c	FUNCTION_8	IF_1
0x4000483	      0xb800000000	                              mov eax, 0	       605	dwarf2.c	FUNCTION_8	IF_1
0x4000488	            0xeb15	                           jmp 0x400049f	       605	dwarf2.c	FUNCTION_8	IF_1
0x400048a	        0x488b45f8	                mov rax, qword [rbp - 8]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400048e	        0x488b4008	                mov rax, qword [rax + 8]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4000492	        0x488b4050	            mov rax, qword [rax + 0x50] 	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4000496	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400049a	          0x4889d7	                            mov rdi, rdx	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400049d	            0xffd0	                                call rax	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400049f	              0xc9	                                   leave	       607	dwarf2.c	FUNCTION_8
0x40004a0	              0xc3	                                     ret	       607	dwarf2.c	FUNCTION_8
decode_line_info	SWITCH,2:ELSE,8:CALL,81:IF,42:DO,0:WHILE,5:functions,0:FOR,2	1164
0x4002f79	              0x55	                                push rbp	      2012	dwarf2.c	FUNCTION_35
0x4002f7a	          0x4889e5	                            mov rbp, rsp	      2012	dwarf2.c	FUNCTION_35
0x4002f7d	            0x4154	                                push r12	      2012	dwarf2.c	FUNCTION_35
0x4002f7f	              0x53	                                push rbx	      2012	dwarf2.c	FUNCTION_35
0x4002f80	    0x4881ec100100	                          sub rsp, 0x110	      2012	dwarf2.c	FUNCTION_35
0x4002f87	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      2012	dwarf2.c	FUNCTION_35
0x4002f8e	    0x4889b5e0feff	            mov qword [rbp - 0x120], rsi	      2012	dwarf2.c	FUNCTION_35
0x4002f95	    0x64488b042528	                mov rax, qword fs:[0x28]	      2012	dwarf2.c	FUNCTION_35
0x4002f9e	        0x488945e8	             mov qword [rbp - 0x18], rax	      2012	dwarf2.c	FUNCTION_35
0x4002fa2	            0x31c0	                            xor eax, eax	      2012	dwarf2.c	FUNCTION_35
0x4002fa4	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2013	dwarf2.c	FUNCTION_35
0x4002fab	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2013	dwarf2.c	FUNCTION_35
0x4002faf	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2013	dwarf2.c	FUNCTION_35
0x4002fb6	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002fbd	    0x4c8d80980000	                    lea r8, [rax + 0x98]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002fc4	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002fcb	    0x488db8900000	                   lea rdi, [rax + 0x90]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002fd2	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002fd9	        0x488b4860	            mov rcx, qword [rax + 0x60] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002fdd	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002fe4	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002fe8	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002fef	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002ff3	        0x488d7050	                   lea rsi, [rax + 0x50]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002ff7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4002ffe	          0x4d89c1	                              mov r9, r8	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4003001	          0x4989f8	                             mov r8, rdi	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4003004	          0x4889c7	                            mov rdi, rax	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4003007	      0xe8f0d1ffff	                   call sym.read_section	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x400300c	            0x85c0	                           test eax, eax	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x400300e	            0x750a	                           jne 0x400301a	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4003010	      0xb800000000	                              mov eax, 0	      2027	dwarf2.c	FUNCTION_35	IF_1
0x4003015	      0xe903150000	                           jmp 0x400451d	      2027	dwarf2.c	FUNCTION_35	IF_1
0x400301a	    0x48c78570ffff	           mov qword [rbp - 0x90], 0x40 	      2029	dwarf2.c	FUNCTION_35
0x4003025	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x400302c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4003033	          0x4889d6	                            mov rsi, rdx	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4003036	          0x4889c7	                            mov rdi, rax	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4003039	      0xe800000000	                          call 0x400303e	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x400303e	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4003045	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      2031	dwarf2.c	FUNCTION_35	IF_2
0x400304d	            0x750a	                           jne 0x4003059	      2031	dwarf2.c	FUNCTION_35	IF_2
0x400304f	      0xb800000000	                              mov eax, 0	      2032	dwarf2.c	FUNCTION_35	IF_2
0x4003054	      0xe9c4140000	                           jmp 0x400451d	      2032	dwarf2.c	FUNCTION_35	IF_2
0x4003059	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2033	dwarf2.c	FUNCTION_35
0x4003060	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      2033	dwarf2.c	FUNCTION_35
0x4003067	          0x488910	                    mov qword [rax], rdx	      2033	dwarf2.c	FUNCTION_35
0x400306a	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2034	dwarf2.c	FUNCTION_35
0x4003071	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2034	dwarf2.c	FUNCTION_35
0x4003075	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2034	dwarf2.c	FUNCTION_35
0x400307c	        0x48895018	             mov qword [rax + 0x18], rdx	      2034	dwarf2.c	FUNCTION_35
0x4003080	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2036	dwarf2.c	FUNCTION_35
0x4003087	    0xc74008000000	                  mov dword [rax + 8], 0	      2036	dwarf2.c	FUNCTION_35
0x400308e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2037	dwarf2.c	FUNCTION_35
0x4003095	    0x48c740280000	               mov qword [rax + 0x28], 0	      2037	dwarf2.c	FUNCTION_35
0x400309d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2039	dwarf2.c	FUNCTION_35
0x40030a4	    0xc7400c000000	                mov dword [rax + 0xc], 0	      2039	dwarf2.c	FUNCTION_35
0x40030ab	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2040	dwarf2.c	FUNCTION_35
0x40030b2	    0x48c740200000	               mov qword [rax + 0x20], 0	      2040	dwarf2.c	FUNCTION_35
0x40030ba	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2042	dwarf2.c	FUNCTION_35
0x40030c1	    0xc74010000000	               mov dword [rax + 0x10], 0	      2042	dwarf2.c	FUNCTION_35
0x40030c8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2043	dwarf2.c	FUNCTION_35
0x40030cf	    0x48c740300000	               mov qword [rax + 0x30], 0	      2043	dwarf2.c	FUNCTION_35
0x40030d7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2045	dwarf2.c	FUNCTION_35
0x40030de	    0x48c740380000	               mov qword [rax + 0x38], 0	      2045	dwarf2.c	FUNCTION_35
0x40030e6	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      2047	dwarf2.c	FUNCTION_35	IF_3
0x40030ed	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2047	dwarf2.c	FUNCTION_35	IF_3
0x40030f4	        0x4883f80f	                            cmp rax, 0xf	      2047	dwarf2.c	FUNCTION_35	IF_3
0x40030f8	            0x7744	                            ja 0x400313e	      2047	dwarf2.c	FUNCTION_35	IF_3
0x40030fa	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      2051	dwarf2.c	FUNCTION_35	IF_3
0x4003101	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2051	dwarf2.c	FUNCTION_35	IF_3
0x4003108	          0x4889c3	                            mov rbx, rax	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x400310b	      0xbe00000000	                              mov esi, 0	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4003110	      0xbf00000000	                              mov edi, 0	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4003115	      0xe800000000	                          call 0x400311a	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x400311a	          0x4889de	                            mov rsi, rbx	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x400311d	          0x4889c7	                            mov rdi, rax	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4003120	      0xb800000000	                              mov eax, 0	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4003125	      0xe800000000	                          call 0x400312a	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x400312a	      0xbf11000000	                           mov edi, 0x11	      2052	dwarf2.c	FUNCTION_35	IF_3	CALL_5
0x400312f	      0xe800000000	                          call 0x4003134	      2052	dwarf2.c	FUNCTION_35	IF_3	CALL_5
0x4003134	      0xb800000000	                              mov eax, 0	      2053	dwarf2.c	FUNCTION_35	IF_3
0x4003139	      0xe9df130000	                           jmp 0x400451d	      2053	dwarf2.c	FUNCTION_35	IF_3
0x400313e	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      2055	dwarf2.c	FUNCTION_35
0x4003145	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      2055	dwarf2.c	FUNCTION_35
0x400314c	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2055	dwarf2.c	FUNCTION_35
0x4003153	        0x488b4060	            mov rax, qword [rax + 0x60] 	      2055	dwarf2.c	FUNCTION_35
0x4003157	          0x4801d0	                            add rax, rdx	      2055	dwarf2.c	FUNCTION_35
0x400315a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2055	dwarf2.c	FUNCTION_35
0x4003161	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      2056	dwarf2.c	FUNCTION_35
0x4003168	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      2056	dwarf2.c	FUNCTION_35
0x400316f	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      2056	dwarf2.c	FUNCTION_35
0x4003176	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2056	dwarf2.c	FUNCTION_35
0x400317d	          0x4801d0	                            add rax, rdx	      2056	dwarf2.c	FUNCTION_35
0x4003180	        0x48894580	             mov qword [rbp - 0x80], rax	      2056	dwarf2.c	FUNCTION_35
0x4003184	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x400318b	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x400318f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x4003196	          0x4889ce	                            mov rsi, rcx	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x4003199	          0x4889c7	                            mov rdi, rax	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x400319c	      0xe800d3ffff	                   call sym.read_4_bytes	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x40031a1	            0x89c0	                            mov eax, eax	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x40031a3	        0x488945b0	             mov qword [rbp - 0x50], rax	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x40031a7	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2060	dwarf2.c	FUNCTION_35
0x40031ae	        0x4883c004	                              add rax, 4	      2060	dwarf2.c	FUNCTION_35
0x40031b2	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2060	dwarf2.c	FUNCTION_35
0x40031b9	    0xc78504ffffff	               mov dword [rbp - 0xfc], 4	      2061	dwarf2.c	FUNCTION_35
0x40031c3	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2062	dwarf2.c	FUNCTION_35	IF_4
0x40031c7	      0xb8ffffffff	                     mov eax, 0xffffffff	      2062	dwarf2.c	FUNCTION_35	IF_4
0x40031cc	          0x4839c2	                            cmp rdx, rax	      2062	dwarf2.c	FUNCTION_35	IF_4
0x40031cf	            0x753f	                           jne 0x4003210	      2062	dwarf2.c	FUNCTION_35	IF_4
0x40031d1	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x40031d8	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x40031dc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x40031e3	          0x4889ce	                            mov rsi, rcx	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x40031e6	          0x4889c7	                            mov rdi, rax	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x40031e9	      0xe8f3d2ffff	                   call sym.read_8_bytes	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x40031ee	        0x488945b0	             mov qword [rbp - 0x50], rax	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x40031f2	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2065	dwarf2.c	FUNCTION_35	IF_4
0x40031f9	        0x4883c008	                              add rax, 8	      2065	dwarf2.c	FUNCTION_35	IF_4
0x40031fd	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2065	dwarf2.c	FUNCTION_35	IF_4
0x4003204	    0xc78504ffffff	               mov dword [rbp - 0xfc], 8	      2066	dwarf2.c	FUNCTION_35	IF_4
0x400320e	            0xeb5a	                           jmp 0x400326a	      2066	dwarf2.c	FUNCTION_35	IF_4
0x4003210	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4003214	          0x4885c0	                           test rax, rax	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4003217	            0x7551	                           jne 0x400326a	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4003219	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4003220	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4003227	            0x3c08	                               cmp al, 8	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4003229	            0x753f	                           jne 0x400326a	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x400322b	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x4003232	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x4003236	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x400323d	          0x4889ce	                            mov rsi, rcx	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x4003240	          0x4889c7	                            mov rdi, rax	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x4003243	      0xe859d2ffff	                   call sym.read_4_bytes	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x4003248	            0x89c0	                            mov eax, eax	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x400324a	        0x488945b0	             mov qword [rbp - 0x50], rax	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x400324e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4003255	        0x4883c004	                              add rax, 4	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4003259	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4003260	    0xc78504ffffff	               mov dword [rbp - 0xfc], 8	      2073	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x400326a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2076	dwarf2.c	FUNCTION_35	IF_6
0x400326e	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2076	dwarf2.c	FUNCTION_35	IF_6
0x4003272	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2076	dwarf2.c	FUNCTION_35	IF_6
0x4003279	          0x4829ca	                            sub rdx, rcx	      2076	dwarf2.c	FUNCTION_35	IF_6
0x400327c	          0x4839d0	                            cmp rax, rdx	      2076	dwarf2.c	FUNCTION_35	IF_6
0x400327f	            0x764b	                           jbe 0x40032cc	      2076	dwarf2.c	FUNCTION_35	IF_6
0x4003281	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2082	dwarf2.c	FUNCTION_35	IF_6
0x4003285	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2082	dwarf2.c	FUNCTION_35	IF_6
0x400328c	          0x4829d0	                            sub rax, rdx	      2082	dwarf2.c	FUNCTION_35	IF_6
0x400328f	          0x4989c4	                            mov r12, rax	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4003292	        0x488b5db0	             mov rbx, qword [rbp - 0x50]	      2082	dwarf2.c	FUNCTION_35	IF_6
0x4003296	      0xbe00000000	                              mov esi, 0	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x400329b	      0xbf00000000	                              mov edi, 0	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x40032a0	      0xe800000000	                          call 0x40032a5	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x40032a5	          0x4c89e2	                            mov rdx, r12	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x40032a8	          0x4889de	                            mov rsi, rbx	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x40032ab	          0x4889c7	                            mov rdi, rax	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x40032ae	      0xb800000000	                              mov eax, 0	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x40032b3	      0xe800000000	                          call 0x40032b8	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x40032b8	      0xbf11000000	                           mov edi, 0x11	      2083	dwarf2.c	FUNCTION_35	IF_6	CALL_11
0x40032bd	      0xe800000000	                          call 0x40032c2	      2083	dwarf2.c	FUNCTION_35	IF_6	CALL_11
0x40032c2	      0xb800000000	                              mov eax, 0	      2084	dwarf2.c	FUNCTION_35	IF_6
0x40032c7	      0xe951120000	                           jmp 0x400451d	      2084	dwarf2.c	FUNCTION_35	IF_6
0x40032cc	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2087	dwarf2.c	FUNCTION_35
0x40032d3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2087	dwarf2.c	FUNCTION_35
0x40032d7	          0x4801d0	                            add rax, rdx	      2087	dwarf2.c	FUNCTION_35
0x40032da	        0x48894580	             mov qword [rbp - 0x80], rax	      2087	dwarf2.c	FUNCTION_35
0x40032de	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x40032e5	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x40032e9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x40032f0	          0x4889ce	                            mov rsi, rcx	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x40032f3	          0x4889c7	                            mov rdi, rax	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x40032f6	      0xe866d1ffff	                   call sym.read_2_bytes	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x40032fb	        0x668945b8	               mov word [rbp - 0x48], ax	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x40032ff	         0xfb745b8	            movzx eax, word [rbp - 0x48]	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4003303	        0x6683f801	                               cmp ax, 1	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4003307	            0x760a	                           jbe 0x4003313	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4003309	         0xfb745b8	            movzx eax, word [rbp - 0x48]	      2090	dwarf2.c	FUNCTION_35	IF_7
0x400330d	        0x6683f805	                               cmp ax, 5	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4003311	            0x7639	                           jbe 0x400334c	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4003313	         0xfb745b8	            movzx eax, word [rbp - 0x48]	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x4003317	           0xfb7d8	                           movzx ebx, ax	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x400331a	      0xbe00000000	                              mov esi, 0	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x400331f	      0xbf00000000	                              mov edi, 0	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x4003324	      0xe800000000	                          call 0x4003329	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x4003329	            0x89de	                            mov esi, ebx	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x400332b	          0x4889c7	                            mov rdi, rax	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x400332e	      0xb800000000	                              mov eax, 0	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x4003333	      0xe800000000	                          call 0x4003338	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x4003338	      0xbf11000000	                           mov edi, 0x11	      2094	dwarf2.c	FUNCTION_35	IF_7	CALL_15
0x400333d	      0xe800000000	                          call 0x4003342	      2094	dwarf2.c	FUNCTION_35	IF_7	CALL_15
0x4003342	      0xb800000000	                              mov eax, 0	      2095	dwarf2.c	FUNCTION_35	IF_7
0x4003347	      0xe9d1110000	                           jmp 0x400451d	      2095	dwarf2.c	FUNCTION_35	IF_7
0x400334c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2097	dwarf2.c	FUNCTION_35
0x4003353	        0x4883c002	                              add rax, 2	      2097	dwarf2.c	FUNCTION_35
0x4003357	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2097	dwarf2.c	FUNCTION_35
0x400335e	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4003365	    0x8b8d04ffffff	             mov ecx, dword [rbp - 0xfc]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400336b	         0xfb745b8	            movzx eax, word [rbp - 0x48]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400336f	        0x6683f804	                               cmp ax, 4	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4003373	            0x7718	                            ja 0x400338d	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4003375	         0xfb745b8	            movzx eax, word [rbp - 0x48]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4003379	        0x6683f803	                               cmp ax, 3	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400337d	            0x7607	                           jbe 0x4003386	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400337f	      0xb806000000	                              mov eax, 6	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4003384	            0xeb0c	                           jmp 0x4003392	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4003386	      0xb805000000	                              mov eax, 5	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400338b	            0xeb05	                           jmp 0x4003392	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400338d	      0xb808000000	                              mov eax, 8	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4003392	          0x4801c8	                            add rax, rcx	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4003395	          0x4801d0	                            add rax, rdx	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4003398	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400339c	            0x7230	                            jb 0x40033ce	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400339e	      0xbe00000000	                              mov esi, 0	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x40033a3	      0xbf00000000	                              mov edi, 0	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x40033a8	      0xe800000000	                          call 0x40033ad	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x40033ad	          0x4889c7	                            mov rdi, rax	      2102	dwarf2.c	FUNCTION_35	IF_8	CALL_16
0x40033b0	      0xb800000000	                              mov eax, 0	      2102	dwarf2.c	FUNCTION_35	IF_8	CALL_16
0x40033b5	      0xe800000000	                          call 0x40033ba	      2102	dwarf2.c	FUNCTION_35	IF_8	CALL_16
0x40033ba	      0xbf11000000	                           mov edi, 0x11	      2104	dwarf2.c	FUNCTION_35	IF_8	CALL_18
0x40033bf	      0xe800000000	                          call 0x40033c4	      2104	dwarf2.c	FUNCTION_35	IF_8	CALL_18
0x40033c4	      0xb800000000	                              mov eax, 0	      2105	dwarf2.c	FUNCTION_35	IF_8
0x40033c9	      0xe94f110000	                           jmp 0x400451d	      2105	dwarf2.c	FUNCTION_35	IF_8
0x40033ce	         0xfb745b8	            movzx eax, word [rbp - 0x48]	      2108	dwarf2.c	FUNCTION_35	IF_9
0x40033d2	        0x6683f804	                               cmp ax, 4	      2108	dwarf2.c	FUNCTION_35	IF_9
0x40033d6	     0xf86a8000000	                           jbe 0x4003484	      2108	dwarf2.c	FUNCTION_35	IF_9
0x40033dc	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2113	dwarf2.c	FUNCTION_35	IF_9	CALL_19
0x40033e3	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2113	dwarf2.c	FUNCTION_35	IF_9	CALL_19
0x40033e7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2113	dwarf2.c	FUNCTION_35	IF_9	CALL_19
0x40033ee	          0x4889ce	                            mov rsi, rcx	      2113	dwarf2.c	FUNCTION_35	IF_9	CALL_19
0x40033f1	          0x4889c7	                            mov rdi, rax	      2113	dwarf2.c	FUNCTION_35	IF_9	CALL_19
0x40033f4	      0xe800d0ffff	                    call sym.read_1_byte	      2113	dwarf2.c	FUNCTION_35	IF_9	CALL_19
0x40033f9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2114	dwarf2.c	FUNCTION_35	IF_9
0x4003400	        0x4883c001	                              add rax, 1	      2114	dwarf2.c	FUNCTION_35	IF_9
0x4003404	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2114	dwarf2.c	FUNCTION_35	IF_9
0x400340b	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2116	dwarf2.c	FUNCTION_35	IF_9	CALL_20
0x4003412	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2116	dwarf2.c	FUNCTION_35	IF_9	CALL_20
0x4003416	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2116	dwarf2.c	FUNCTION_35	IF_9	CALL_20
0x400341d	          0x4889ce	                            mov rsi, rcx	      2116	dwarf2.c	FUNCTION_35	IF_9	CALL_20
0x4003420	          0x4889c7	                            mov rdi, rax	      2116	dwarf2.c	FUNCTION_35	IF_9	CALL_20
0x4003423	      0xe8d1cfffff	                    call sym.read_1_byte	      2116	dwarf2.c	FUNCTION_35	IF_9	CALL_20
0x4003428	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      2116	dwarf2.c	FUNCTION_35	IF_9	CALL_20
0x400342e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2117	dwarf2.c	FUNCTION_35	IF_9
0x4003435	        0x4883c001	                              add rax, 1	      2117	dwarf2.c	FUNCTION_35	IF_9
0x4003439	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2117	dwarf2.c	FUNCTION_35	IF_9
0x4003440	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2118	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4003447	            0x743b	                            je 0x4003484	      2118	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4003449	      0xbe00000000	                              mov esi, 0	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x400344e	      0xbf00000000	                              mov edi, 0	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x4003453	      0xe800000000	                          call 0x4003458	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x4003458	          0x4889c2	                            mov rdx, rax	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x400345b	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4003461	            0x89c6	                            mov esi, eax	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4003463	          0x4889d7	                            mov rdi, rdx	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4003466	      0xb800000000	                              mov eax, 0	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x400346b	      0xe800000000	                          call 0x4003470	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4003470	      0xbf11000000	                           mov edi, 0x11	      2123	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_23
0x4003475	      0xe800000000	                          call 0x400347a	      2123	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_23
0x400347a	      0xb800000000	                              mov eax, 0	      2124	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x400347f	      0xe999100000	                           jmp 0x400451d	      2124	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4003484	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 4	      2128	dwarf2.c	FUNCTION_35	IF_11
0x400348b	            0x7525	                           jne 0x40034b2	      2128	dwarf2.c	FUNCTION_35	IF_11
0x400348d	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x4003494	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x4003498	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x400349f	          0x4889ce	                            mov rsi, rcx	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x40034a2	          0x4889c7	                            mov rdi, rax	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x40034a5	      0xe8f7cfffff	                   call sym.read_4_bytes	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x40034aa	            0x89c0	                            mov eax, eax	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x40034ac	        0x488945c0	             mov qword [rbp - 0x40], rax	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x40034b0	            0xeb21	                           jmp 0x40034d3	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x40034b2	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40034b9	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40034bd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40034c4	          0x4889ce	                            mov rsi, rcx	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40034c7	          0x4889c7	                            mov rdi, rax	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40034ca	      0xe812d0ffff	                   call sym.read_8_bytes	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40034cf	        0x488945c0	             mov qword [rbp - 0x40], rax	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40034d3	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2132	dwarf2.c	FUNCTION_35
0x40034da	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2132	dwarf2.c	FUNCTION_35
0x40034e0	          0x4801d0	                            add rax, rdx	      2132	dwarf2.c	FUNCTION_35
0x40034e3	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2132	dwarf2.c	FUNCTION_35
0x40034ea	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2134	dwarf2.c	FUNCTION_35	CALL_26
0x40034f1	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2134	dwarf2.c	FUNCTION_35	CALL_26
0x40034f5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2134	dwarf2.c	FUNCTION_35	CALL_26
0x40034fc	          0x4889ce	                            mov rsi, rcx	      2134	dwarf2.c	FUNCTION_35	CALL_26
0x40034ff	          0x4889c7	                            mov rdi, rax	      2134	dwarf2.c	FUNCTION_35	CALL_26
0x4003502	      0xe8f2ceffff	                    call sym.read_1_byte	      2134	dwarf2.c	FUNCTION_35	CALL_26
0x4003507	          0x8845c8	               mov byte [rbp - 0x38], al	      2134	dwarf2.c	FUNCTION_35	CALL_26
0x400350a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2135	dwarf2.c	FUNCTION_35
0x4003511	        0x4883c001	                              add rax, 1	      2135	dwarf2.c	FUNCTION_35
0x4003515	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2135	dwarf2.c	FUNCTION_35
0x400351c	         0xfb745b8	            movzx eax, word [rbp - 0x48]	      2137	dwarf2.c	FUNCTION_35	IF_12
0x4003520	        0x6683f803	                               cmp ax, 3	      2137	dwarf2.c	FUNCTION_35	IF_12
0x4003524	            0x7634	                           jbe 0x400355a	      2137	dwarf2.c	FUNCTION_35	IF_12
0x4003526	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2139	dwarf2.c	FUNCTION_35	IF_12	CALL_27
0x400352d	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2139	dwarf2.c	FUNCTION_35	IF_12	CALL_27
0x4003531	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2139	dwarf2.c	FUNCTION_35	IF_12	CALL_27
0x4003538	          0x4889ce	                            mov rsi, rcx	      2139	dwarf2.c	FUNCTION_35	IF_12	CALL_27
0x400353b	          0x4889c7	                            mov rdi, rax	      2139	dwarf2.c	FUNCTION_35	IF_12	CALL_27
0x400353e	      0xe8b6ceffff	                    call sym.read_1_byte	      2139	dwarf2.c	FUNCTION_35	IF_12	CALL_27
0x4003543	          0x8845c9	               mov byte [rbp - 0x37], al	      2139	dwarf2.c	FUNCTION_35	IF_12	CALL_27
0x4003546	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2140	dwarf2.c	FUNCTION_35	IF_12
0x400354d	        0x4883c001	                              add rax, 1	      2140	dwarf2.c	FUNCTION_35	IF_12
0x4003551	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2140	dwarf2.c	FUNCTION_35	IF_12
0x4003558	            0xeb04	                           jmp 0x400355e	      2140	dwarf2.c	FUNCTION_35	IF_12
0x400355a	        0xc645c901	                mov byte [rbp - 0x37], 1	      2143	dwarf2.c	FUNCTION_35	ELSE_3
0x400355e	         0xfb645c9	            movzx eax, byte [rbp - 0x37]	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x4003562	            0x84c0	                             test al, al	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x4003564	            0x7530	                           jne 0x4003596	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x4003566	      0xbe00000000	                              mov esi, 0	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x400356b	      0xbf00000000	                              mov edi, 0	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x4003570	      0xe800000000	                          call 0x4003575	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x4003575	          0x4889c7	                            mov rdi, rax	      2147	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_28
0x4003578	      0xb800000000	                              mov eax, 0	      2147	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_28
0x400357d	      0xe800000000	                          call 0x4003582	      2147	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_28
0x4003582	      0xbf11000000	                           mov edi, 0x11	      2149	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_30
0x4003587	      0xe800000000	                          call 0x400358c	      2149	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_30
0x400358c	      0xb800000000	                              mov eax, 0	      2150	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x4003591	      0xe9870f0000	                           jmp 0x400451d	      2150	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x4003596	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2153	dwarf2.c	FUNCTION_35	CALL_31
0x400359d	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2153	dwarf2.c	FUNCTION_35	CALL_31
0x40035a1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2153	dwarf2.c	FUNCTION_35	CALL_31
0x40035a8	          0x4889ce	                            mov rsi, rcx	      2153	dwarf2.c	FUNCTION_35	CALL_31
0x40035ab	          0x4889c7	                            mov rdi, rax	      2153	dwarf2.c	FUNCTION_35	CALL_31
0x40035ae	      0xe846ceffff	                    call sym.read_1_byte	      2153	dwarf2.c	FUNCTION_35	CALL_31
0x40035b3	          0x8845ca	               mov byte [rbp - 0x36], al	      2153	dwarf2.c	FUNCTION_35	CALL_31
0x40035b6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2154	dwarf2.c	FUNCTION_35
0x40035bd	        0x4883c001	                              add rax, 1	      2154	dwarf2.c	FUNCTION_35
0x40035c1	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2154	dwarf2.c	FUNCTION_35
0x40035c8	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2156	dwarf2.c	FUNCTION_35	CALL_32
0x40035cf	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2156	dwarf2.c	FUNCTION_35	CALL_32
0x40035d3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2156	dwarf2.c	FUNCTION_35	CALL_32
0x40035da	          0x4889ce	                            mov rsi, rcx	      2156	dwarf2.c	FUNCTION_35	CALL_32
0x40035dd	          0x4889c7	                            mov rdi, rax	      2156	dwarf2.c	FUNCTION_35	CALL_32
0x40035e0	      0xe845ceffff	             call sym.read_1_signed_byte	      2156	dwarf2.c	FUNCTION_35	CALL_32
0x40035e5	          0x8945cc	             mov dword [rbp - 0x34], eax	      2156	dwarf2.c	FUNCTION_35	CALL_32
0x40035e8	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2157	dwarf2.c	FUNCTION_35
0x40035ef	        0x4883c001	                              add rax, 1	      2157	dwarf2.c	FUNCTION_35
0x40035f3	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2157	dwarf2.c	FUNCTION_35
0x40035fa	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2159	dwarf2.c	FUNCTION_35	CALL_33
0x4003601	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2159	dwarf2.c	FUNCTION_35	CALL_33
0x4003605	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2159	dwarf2.c	FUNCTION_35	CALL_33
0x400360c	          0x4889ce	                            mov rsi, rcx	      2159	dwarf2.c	FUNCTION_35	CALL_33
0x400360f	          0x4889c7	                            mov rdi, rax	      2159	dwarf2.c	FUNCTION_35	CALL_33
0x4003612	      0xe8e2cdffff	                    call sym.read_1_byte	      2159	dwarf2.c	FUNCTION_35	CALL_33
0x4003617	          0x8845d0	               mov byte [rbp - 0x30], al	      2159	dwarf2.c	FUNCTION_35	CALL_33
0x400361a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2160	dwarf2.c	FUNCTION_35
0x4003621	        0x4883c001	                              add rax, 1	      2160	dwarf2.c	FUNCTION_35
0x4003625	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2160	dwarf2.c	FUNCTION_35
0x400362c	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x4003633	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x4003637	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x400363e	          0x4889ce	                            mov rsi, rcx	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x4003641	          0x4889c7	                            mov rdi, rax	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x4003644	      0xe8b0cdffff	                    call sym.read_1_byte	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x4003649	          0x8845d1	               mov byte [rbp - 0x2f], al	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x400364c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2163	dwarf2.c	FUNCTION_35
0x4003653	        0x4883c001	                              add rax, 1	      2163	dwarf2.c	FUNCTION_35
0x4003657	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2163	dwarf2.c	FUNCTION_35
0x400365e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4003665	         0xfb655d1	            movzx edx, byte [rbp - 0x2f]	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4003669	           0xfb6d2	                           movzx edx, dl	      2165	dwarf2.c	FUNCTION_35	IF_14
0x400366c	        0x4883ea01	                              sub rdx, 1	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4003670	          0x4801d0	                            add rax, rdx	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4003673	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4003677	            0x7230	                            jb 0x40036a9	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4003679	      0xbe00000000	                              mov esi, 0	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x400367e	      0xbf00000000	                              mov edi, 0	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4003683	      0xe800000000	                          call 0x4003688	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4003688	          0x4889c7	                            mov rdi, rax	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x400368b	      0xb800000000	                              mov eax, 0	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4003690	      0xe800000000	                          call 0x4003695	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4003695	      0xbf11000000	                           mov edi, 0x11	      2168	dwarf2.c	FUNCTION_35	IF_14	CALL_37
0x400369a	      0xe800000000	                          call 0x400369f	      2168	dwarf2.c	FUNCTION_35	IF_14	CALL_37
0x400369f	      0xb800000000	                              mov eax, 0	      2169	dwarf2.c	FUNCTION_35	IF_14
0x40036a4	      0xe9740e0000	                           jmp 0x400451d	      2169	dwarf2.c	FUNCTION_35	IF_14
0x40036a9	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      2172	dwarf2.c	FUNCTION_35
0x40036ad	           0xfb6c0	                           movzx eax, al	      2172	dwarf2.c	FUNCTION_35
0x40036b0	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2172	dwarf2.c	FUNCTION_35
0x40036b7	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x40036be	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x40036c5	          0x4889d6	                            mov rsi, rdx	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x40036c8	          0x4889c7	                            mov rdi, rax	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x40036cb	      0xe800000000	                          call 0x40036d0	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x40036d0	        0x488945d8	             mov qword [rbp - 0x28], rax	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x40036d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2175	dwarf2.c	FUNCTION_35
0x40036d8	          0xc60001	                       mov byte [rax], 1	      2175	dwarf2.c	FUNCTION_35
0x40036db	    0xc78500ffffff	              mov dword [rbp - 0x100], 1	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x40036e5	            0xeb46	                           jmp 0x400372d	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x40036e7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x40036eb	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x40036f1	        0x488d1c02	                    lea rbx, [rdx + rax]	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x40036f5	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x40036fc	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x4003700	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x4003707	          0x4889ce	                            mov rsi, rcx	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x400370a	          0x4889c7	                            mov rdi, rax	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x400370d	      0xe8e7ccffff	                    call sym.read_1_byte	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x4003712	            0x8803	                      mov byte [rbx], al	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x4003714	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2180	dwarf2.c	FUNCTION_35	FOR_1
0x400371b	        0x4883c001	                              add rax, 1	      2180	dwarf2.c	FUNCTION_35	FOR_1
0x400371f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2180	dwarf2.c	FUNCTION_35	FOR_1
0x4003726	    0x838500ffffff	              add dword [rbp - 0x100], 1	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400372d	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4003731	           0xfb6c0	                           movzx eax, al	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4003734	    0x3b8500ffffff	            cmp eax, dword [rbp - 0x100]	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400373a	            0x77ab	                            ja 0x40036e7	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400373c	         0xfb745b8	            movzx eax, word [rbp - 0x48]	      2183	dwarf2.c	FUNCTION_35	IF_15
0x4003740	        0x6683f804	                               cmp ax, 4	      2183	dwarf2.c	FUNCTION_35	IF_15
0x4003744	     0xf869a000000	                           jbe 0x40037e4	      2183	dwarf2.c	FUNCTION_35	IF_15
0x400374a	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4003751	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4003755	    0x488db540ffff	                   lea rsi, [rbp - 0xc0]	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x400375c	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4003763	    0x41b800000000	                              mov r8d, 0	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4003769	          0x4889c7	                            mov rdi, rax	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x400376c	      0xe8e5f3ffff	         call sym.read_formatted_entries	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4003771	            0x85c0	                           test eax, eax	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4003773	     0xf84080d0000	                            je 0x4004481	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4003779	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4003780	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4003784	    0x488db540ffff	                   lea rsi, [rbp - 0xc0]	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x400378b	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4003792	    0x41b800000000	                              mov r8d, 0	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4003798	          0x4889c7	                            mov rdi, rax	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x400379b	      0xe8b6f3ffff	         call sym.read_formatted_entries	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x40037a0	            0x85c0	                           test eax, eax	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x40037a2	     0xf85a90c0000	                           jne 0x4004451	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x40037a8	      0xe9de0c0000	                           jmp 0x400448b	      2193	dwarf2.c	FUNCTION_35	IF_15	IF_17
0x40037ad	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x40037b4	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x40037ba	            0x89d2	                            mov edx, edx	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x40037bc	          0x4801d0	                            add rax, rdx	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x40037bf	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x40037c6	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40037ca	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40037d1	          0x4889d6	                            mov rsi, rdx	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40037d4	          0x4889c7	                            mov rdi, rax	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40037d7	      0xe84cf1ffff	      call sym.line_info_add_include_dir	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40037dc	            0x85c0	                           test eax, eax	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40037de	     0xf84a00c0000	                            je 0x4004484	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40037e4	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40037eb	    0x488d8dfcfeff	                  lea rcx, [rbp - 0x104]	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40037f2	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40037f6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40037fd	          0x4889c7	                            mov rdi, rax	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x4003800	      0xe885cdffff	                    call sym.read_string	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x4003805	        0x48894588	             mov qword [rbp - 0x78], rax	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x4003809	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x400380e	            0x759d	                           jne 0x40037ad	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x4003810	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x4003817	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x400381d	            0x89d2	                            mov edx, edx	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x400381f	          0x4801d0	                            add rax, rdx	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x4003822	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x4003829	      0xe921010000	                           jmp 0x400394f	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x400382e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4003835	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400383b	            0x89d2	                            mov edx, edx	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400383d	          0x4801d0	                            add rax, rdx	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4003840	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4003847	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x400384e	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4003852	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4003859	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4003860	          0x4989c8	                             mov r8, rcx	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4003863	      0xb900000000	                              mov ecx, 0	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4003868	          0x4889c7	                            mov rdi, rax	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x400386b	      0xe800000000	                          call 0x4003870	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4003870	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4003876	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400387d	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4003883	            0x89d2	                            mov edx, edx	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4003885	          0x4801d0	                            add rax, rdx	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4003888	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400388f	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4003896	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x400389a	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x40038a1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x40038a8	          0x4989c8	                             mov r8, rcx	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x40038ab	      0xb900000000	                              mov ecx, 0	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x40038b0	          0x4889c7	                            mov rdi, rax	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x40038b3	      0xe800000000	                          call 0x40038b8	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x40038b8	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x40038be	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x40038c5	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x40038cb	            0x89d2	                            mov edx, edx	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x40038cd	          0x4801d0	                            add rax, rdx	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x40038d0	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x40038d7	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x40038de	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x40038e2	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x40038e9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x40038f0	          0x4989c8	                             mov r8, rcx	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x40038f3	      0xb900000000	                              mov ecx, 0	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x40038f8	          0x4889c7	                            mov rdi, rax	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x40038fb	      0xe800000000	                          call 0x4003900	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4003900	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4003906	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400390d	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4003913	            0x89d2	                            mov edx, edx	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4003915	          0x4801d0	                            add rax, rdx	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4003918	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400391f	    0x8bbd28ffffff	             mov edi, dword [rbp - 0xd8]	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4003925	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x400392b	    0x8b9520ffffff	             mov edx, dword [rbp - 0xe0]	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4003931	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4003935	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x400393c	          0x4189f8	                            mov r8d, edi	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x400393f	          0x4889c7	                            mov rdi, rax	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4003942	      0xe8bff0ffff	        call sym.line_info_add_file_name	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4003947	            0x85c0	                           test eax, eax	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4003949	     0xf84380b0000	                            je 0x4004487	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x400394f	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x4003956	    0x488d8dfcfeff	                  lea rcx, [rbp - 0x104]	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x400395d	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x4003961	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x4003968	          0x4889c7	                            mov rdi, rax	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x400396b	      0xe81accffff	                    call sym.read_string	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x4003970	        0x48894590	             mov qword [rbp - 0x70], rax	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x4003974	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x4003979	     0xf85affeffff	                           jne 0x400382e	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x400397f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2226	dwarf2.c	FUNCTION_35	ELSE_4
0x4003986	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2226	dwarf2.c	FUNCTION_35	ELSE_4
0x400398c	            0x89d2	                            mov edx, edx	      2226	dwarf2.c	FUNCTION_35	ELSE_4
0x400398e	          0x4801d0	                            add rax, rdx	      2226	dwarf2.c	FUNCTION_35	ELSE_4
0x4003991	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2226	dwarf2.c	FUNCTION_35	ELSE_4
0x4003998	      0xe9b40a0000	                           jmp 0x4004451	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x400399d	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      2233	dwarf2.c	FUNCTION_35	WHILE_3
0x40039a8	    0xc685f8feffff	               mov byte [rbp - 0x108], 0	      2234	dwarf2.c	FUNCTION_35	WHILE_3
0x40039af	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039b6	          0x8b4008	                mov eax, dword [rax + 8]	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039b9	            0x85c0	                           test eax, eax	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039bb	            0x7416	                            je 0x40039d3	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039bd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039c4	      0xbe01000000	                              mov esi, 1	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039c9	          0x4889c7	                            mov rdi, rax	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039cc	      0xe8a7e6ffff	                call sym.concat_filename	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039d1	            0xeb05	                           jmp 0x40039d8	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039d3	      0xb800000000	                              mov eax, 0	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039d8	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x40039df	    0xc78508ffffff	               mov dword [rbp - 0xf8], 1	      2236	dwarf2.c	FUNCTION_35	WHILE_3
0x40039e9	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      2237	dwarf2.c	FUNCTION_35	WHILE_3
0x40039f3	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	      2238	dwarf2.c	FUNCTION_35	WHILE_3
0x40039fd	         0xfb645ca	            movzx eax, byte [rbp - 0x36]	      2239	dwarf2.c	FUNCTION_35	WHILE_3
0x4003a01	           0xfb6c0	                           movzx eax, al	      2239	dwarf2.c	FUNCTION_35	WHILE_3
0x4003a04	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      2239	dwarf2.c	FUNCTION_35	WHILE_3
0x4003a0a	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      2240	dwarf2.c	FUNCTION_35	WHILE_3
0x4003a14	    0x48c78558ffff	mov qword [rbp - 0xa8], 0xffffffffffffffff	      2247	dwarf2.c	FUNCTION_35	WHILE_3
0x4003a1f	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      2248	dwarf2.c	FUNCTION_35	WHILE_3
0x4003a2a	      0xe9ef090000	                           jmp 0x400441e	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4003a2f	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2253	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	CALL_50
0x4003a36	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2253	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	CALL_50
0x4003a3a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2253	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	CALL_50
0x4003a41	          0x4889ce	                            mov rsi, rcx	      2253	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	CALL_50
0x4003a44	          0x4889c7	                            mov rdi, rax	      2253	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	CALL_50
0x4003a47	      0xe8adc9ffff	                    call sym.read_1_byte	      2253	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	CALL_50
0x4003a4c	    0x8885f9feffff	              mov byte [rbp - 0x107], al	      2253	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	CALL_50
0x4003a52	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2254	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4003a59	        0x4883c001	                              add rax, 1	      2254	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4003a5d	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2254	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4003a64	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003a68	    0x3a85f9feffff	              cmp al, byte [rbp - 0x107]	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003a6e	     0xf8771010000	                            ja 0x4003be5	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003a74	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      2259	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003a78	     0xfb695f9feff	           movzx edx, byte [rbp - 0x107]	      2259	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003a7f	            0x29c2	                            sub edx, eax	      2259	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003a81	            0x89d0	                            mov eax, edx	      2259	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003a83	    0x8885fafeffff	              mov byte [rbp - 0x106], al	      2259	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003a89	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x4003a8d	            0x84c0	                             test al, al	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x4003a8f	     0xf8428050000	                            je 0x4003fbd	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x4003a95	         0xfb645c9	            movzx eax, byte [rbp - 0x37]	      2262	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003a99	            0x3c01	                               cmp al, 1	      2262	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003a9b	            0x7528	                           jne 0x4003ac5	      2262	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003a9d	         0xfb655d0	            movzx edx, byte [rbp - 0x30]	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003aa1	     0xfb685fafeff	           movzx eax, byte [rbp - 0x106]	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003aa8	           0xfb6c0	                           movzx eax, al	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003aab	            0xf6f2	                                  div dl	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003aad	           0xfb6d0	                           movzx edx, al	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003ab0	         0xfb645c8	            movzx eax, byte [rbp - 0x38]	      2264	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003ab4	           0xfb6c0	                           movzx eax, al	      2264	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003ab7	           0xfafc2	                           imul eax, edx	      2264	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003aba	            0x4898	                                    cdqe	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003abc	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003ac3	            0xeb69	                           jmp 0x4003b2e	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4003ac5	     0xfb695f8feff	           movzx edx, byte [rbp - 0x108]	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003acc	         0xfb64dd0	            movzx ecx, byte [rbp - 0x30]	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003ad0	     0xfb685fafeff	           movzx eax, byte [rbp - 0x106]	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003ad7	           0xfb6c0	                           movzx eax, al	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003ada	            0xf6f1	                                  div cl	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003adc	           0xfb6c0	                           movzx eax, al	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003adf	             0x1d0	                            add eax, edx	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003ae1	         0xfb655c9	            movzx edx, byte [rbp - 0x37]	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003ae5	           0xfb6da	                           movzx ebx, dl	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003ae8	              0x99	                                     cdq	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003ae9	            0xf7fb	                                idiv ebx	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003aeb	            0x89c2	                            mov edx, eax	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003aed	         0xfb645c8	            movzx eax, byte [rbp - 0x38]	      2269	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003af1	           0xfb6c0	                           movzx eax, al	      2269	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003af4	           0xfafc2	                           imul eax, edx	      2269	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003af7	            0x4898	                                    cdqe	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003af9	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b00	     0xfb695f8feff	           movzx edx, byte [rbp - 0x108]	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b07	         0xfb64dd0	            movzx ecx, byte [rbp - 0x30]	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b0b	     0xfb685fafeff	           movzx eax, byte [rbp - 0x106]	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b12	           0xfb6c0	                           movzx eax, al	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b15	            0xf6f1	                                  div cl	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b17	           0xfb6c0	                           movzx eax, al	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b1a	             0x1d0	                            add eax, edx	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b1c	         0xfb655c9	            movzx edx, byte [rbp - 0x37]	      2271	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b20	           0xfb6ca	                           movzx ecx, dl	      2271	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b23	              0x99	                                     cdq	      2271	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b24	            0xf7f9	                                idiv ecx	      2271	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b26	            0x89d0	                            mov eax, edx	      2271	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b28	    0x8885f8feffff	              mov byte [rbp - 0x108], al	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4003b2e	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003b31	         0xfb64dd0	            movzx ecx, byte [rbp - 0x30]	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003b35	     0xfb685fafeff	           movzx eax, byte [rbp - 0x106]	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003b3c	           0xfb6c0	                           movzx eax, al	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003b3f	            0xf6f1	                                  div cl	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003b41	           0xfb6c4	                           movzx eax, ah	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003b44	           0xfb6c0	                           movzx eax, al	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003b47	             0x1d0	                            add eax, edx	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003b49	     0x18508ffffff	             add dword [rbp - 0xf8], eax	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003b4f	     0xfb695f8feff	           movzx edx, byte [rbp - 0x108]	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b56	    0x448b8d0cffff	             mov r9d, dword [rbp - 0xf4]	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b5d	    0x448b8508ffff	             mov r8d, dword [rbp - 0xf8]	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b64	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b6b	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b72	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b79	            0x6a00	                                  push 0	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b7b	    0x8bbd10ffffff	             mov edi, dword [rbp - 0xf0]	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b81	              0x57	                                push rdi	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b82	          0x4889c7	                            mov rdi, rax	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b85	      0xe82de1ffff	                  call sym.add_line_info	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b8a	        0x4883c410	                           add rsp, 0x10	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b8e	            0x85c0	                           test eax, eax	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b90	     0xf842a040000	                            je 0x4003fc0	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4003b96	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	      2278	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4003ba0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2279	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_24
0x4003ba7	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	      2279	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_24
0x4003bae	            0x730e	                           jae 0x4003bbe	      2279	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_24
0x4003bb0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2280	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_24
0x4003bb7	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2280	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_24
0x4003bbe	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2281	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_25
0x4003bc5	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      2281	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_25
0x4003bcc	     0xf864c080000	                           jbe 0x400441e	      2281	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_25
0x4003bd2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2282	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_25
0x4003bd9	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2282	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_25
0x4003be0	      0xe939080000	                           jmp 0x400441e	      2282	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_25
0x4003be5	     0xfb685f9feff	           movzx eax, byte [rbp - 0x107]	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003bec	          0x83f809	                              cmp eax, 9	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003bef	     0xf87b7070000	                            ja 0x40043ac	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003bf5	            0x89c0	                            mov eax, eax	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003bf7	    0x488b04c50000	                  mov rax, qword [rax*8]	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003bff	            0xffe0	                                 jmp rax	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003c01	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4003c08	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4003c0c	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4003c13	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4003c1a	          0x4989c8	                             mov r8, rcx	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4003c1d	      0xb900000000	                              mov ecx, 0	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4003c22	          0x4889c7	                            mov rdi, rax	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4003c25	      0xe800000000	                          call 0x4003c2a	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4003c2a	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4003c30	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003c37	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003c3d	            0x89d2	                            mov edx, edx	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003c3f	          0x4801d0	                            add rax, rdx	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003c42	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003c49	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2290	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_53
0x4003c50	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2290	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_53
0x4003c54	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2290	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_53
0x4003c5b	          0x4889ce	                            mov rsi, rcx	      2290	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_53
0x4003c5e	          0x4889c7	                            mov rdi, rax	      2290	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_53
0x4003c61	      0xe893c7ffff	                    call sym.read_1_byte	      2290	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_53
0x4003c66	    0x8885fbfeffff	              mov byte [rbp - 0x105], al	      2290	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_53
0x4003c6c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2291	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003c73	        0x4883c001	                              add rax, 1	      2291	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003c77	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2291	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003c7e	     0xfb685fbfeff	           movzx eax, byte [rbp - 0x105]	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003c85	          0x83f803	                              cmp eax, 3	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003c88	     0xf8454010000	                            je 0x4003de2	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003c8e	          0x83f803	                              cmp eax, 3	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003c91	            0x7f13	                            jg 0x4003ca6	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003c93	          0x83f801	                              cmp eax, 1	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003c96	            0x7427	                            je 0x4003cbf	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003c98	          0x83f802	                              cmp eax, 2	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003c9b	     0xf84ef000000	                            je 0x4003d90	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ca1	      0xe9ef020000	                           jmp 0x4003f95	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ca6	          0x83f804	                              cmp eax, 4	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ca9	     0xf847e020000	                            je 0x4003f2d	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003caf	      0x3d80000000	                           cmp eax, 0x80	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003cb4	     0xf84bd020000	                            je 0x4003f77	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003cba	      0xe9d6020000	                           jmp 0x4003f95	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003cbf	    0xc78518ffffff	               mov dword [rbp - 0xe8], 1	      2296	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003cc9	     0xfb695f8feff	           movzx edx, byte [rbp - 0x108]	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003cd0	    0x448b8d0cffff	             mov r9d, dword [rbp - 0xf4]	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003cd7	    0x448b8508ffff	             mov r8d, dword [rbp - 0xf8]	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003cde	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003ce5	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003cec	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003cf3	    0x8bbd18ffffff	             mov edi, dword [rbp - 0xe8]	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003cf9	              0x57	                                push rdi	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003cfa	    0x8bbd10ffffff	             mov edi, dword [rbp - 0xf0]	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003d00	              0x57	                                push rdi	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003d01	          0x4889c7	                            mov rdi, rax	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003d04	      0xe8aedfffff	                  call sym.add_line_info	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003d09	        0x4883c410	                           add rsp, 0x10	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003d0d	            0x85c0	                           test eax, eax	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003d0f	     0xf84ae020000	                            je 0x4003fc3	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4003d15	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	      2300	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003d1f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2301	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_27
0x4003d26	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	      2301	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_27
0x4003d2d	            0x730e	                           jae 0x4003d3d	      2301	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_27
0x4003d2f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2302	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_27
0x4003d36	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2302	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_27
0x4003d3d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2303	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_28
0x4003d44	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      2303	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_28
0x4003d4b	            0x760e	                           jbe 0x4003d5b	      2303	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_28
0x4003d4d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2304	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_28
0x4003d54	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2304	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_28
0x4003d5b	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4003d62	        0x488d7018	                   lea rsi, [rax + 0x18]	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4003d66	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4003d6d	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4003d74	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4003d7b	          0x4889c7	                            mov rdi, rax	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4003d7e	      0xe86ee5ffff	                     call sym.arange_add	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4003d83	            0x85c0	                           test eax, eax	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4003d85	     0xf8561020000	                           jne 0x4003fec	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4003d8b	      0xe93a020000	                           jmp 0x4003fca	      2306	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29
0x4003d90	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4003d97	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4003d9b	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4003da2	          0x4889ce	                            mov rsi, rcx	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4003da5	          0x4889c7	                            mov rdi, rax	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4003da8	      0xe851ceffff	                   call sym.read_address	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4003dad	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4003db4	    0xc685f8feffff	               mov byte [rbp - 0x108], 0	      2310	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003dbb	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003dc2	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003dc9	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003dd0	           0xfb6c0	                           movzx eax, al	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003dd3	          0x4801d0	                            add rax, rdx	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003dd6	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ddd	      0xe911020000	                           jmp 0x4003ff3	      2312	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003de2	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x4003de9	    0x488d8dfcfeff	                  lea rcx, [rbp - 0x104]	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x4003df0	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x4003df4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x4003dfb	          0x4889c7	                            mov rdi, rax	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x4003dfe	      0xe887c7ffff	                    call sym.read_string	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x4003e03	        0x48894590	             mov qword [rbp - 0x70], rax	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x4003e07	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e0e	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e14	            0x89d2	                            mov edx, edx	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e16	          0x4801d0	                            add rax, rdx	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e19	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e20	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4003e27	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4003e2b	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4003e32	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4003e39	          0x4989c8	                             mov r8, rcx	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4003e3c	      0xb900000000	                              mov ecx, 0	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4003e41	          0x4889c7	                            mov rdi, rax	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4003e44	      0xe800000000	                          call 0x4003e49	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4003e49	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4003e4f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e56	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e5c	            0x89d2	                            mov edx, edx	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e5e	          0x4801d0	                            add rax, rdx	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e61	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e68	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4003e6f	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4003e73	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4003e7a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4003e81	          0x4989c8	                             mov r8, rcx	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4003e84	      0xb900000000	                              mov ecx, 0	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4003e89	          0x4889c7	                            mov rdi, rax	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4003e8c	      0xe800000000	                          call 0x4003e91	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4003e91	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4003e97	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003e9e	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ea4	            0x89d2	                            mov edx, edx	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ea6	          0x4801d0	                            add rax, rdx	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ea9	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003eb0	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4003eb7	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4003ebb	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4003ec2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4003ec9	          0x4989c8	                             mov r8, rcx	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4003ecc	      0xb900000000	                              mov ecx, 0	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4003ed1	          0x4889c7	                            mov rdi, rax	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4003ed4	      0xe800000000	                          call 0x4003ed9	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4003ed9	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4003edf	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ee6	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003eec	            0x89d2	                            mov edx, edx	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003eee	          0x4801d0	                            add rax, rdx	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ef1	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ef8	    0x8bbd38ffffff	             mov edi, dword [rbp - 0xc8]	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4003efe	    0x8b8d34ffffff	             mov ecx, dword [rbp - 0xcc]	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4003f04	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4003f0a	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4003f0e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4003f15	          0x4189f8	                            mov r8d, edi	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4003f18	          0x4889c7	                            mov rdi, rax	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4003f1b	      0xe8e6eaffff	        call sym.line_info_add_file_name	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4003f20	            0x85c0	                           test eax, eax	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4003f22	     0xf85ca000000	                           jne 0x4003ff2	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4003f28	      0xe99d000000	                           jmp 0x4003fca	      2327	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30
0x4003f2d	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4003f34	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4003f38	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4003f3f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4003f46	          0x4989c8	                             mov r8, rcx	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4003f49	      0xb900000000	                              mov ecx, 0	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4003f4e	          0x4889c7	                            mov rdi, rax	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4003f51	      0xe800000000	                          call 0x4003f56	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4003f56	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      2330	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f5c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f63	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f69	            0x89d2	                            mov edx, edx	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f6b	          0x4801d0	                            add rax, rdx	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f6e	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f75	            0xeb7c	                           jmp 0x4003ff3	      2334	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f77	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f7e	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f84	          0x83ea01	                              sub edx, 1	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f87	            0x89d2	                            mov edx, edx	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f89	          0x4801d0	                            add rax, rdx	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f8c	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f93	            0xeb5e	                           jmp 0x4003ff3	      2337	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003f95	      0xbe00000000	                              mov esi, 0	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x4003f9a	      0xbf00000000	                              mov edi, 0	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x4003f9f	      0xe800000000	                          call 0x4003fa4	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x4003fa4	          0x4889c7	                            mov rdi, rax	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x4003fa7	      0xb800000000	                              mov eax, 0	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x4003fac	      0xe800000000	                          call 0x4003fb1	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x4003fb1	      0xbf11000000	                           mov edi, 0x11	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x4003fb6	      0xe800000000	                          call 0x4003fbb	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x4003fbb	            0xeb0d	                           jmp 0x4003fca	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x4003fbd	              0x90	                                     nop	      2261	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x4003fbe	            0xeb0a	                           jmp 0x4003fca	      2261	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x4003fc0	              0x90	                                     nop	      2277	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23
0x4003fc1	            0xeb07	                           jmp 0x4003fca	      2277	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23
0x4003fc3	              0x90	                                     nop	      2299	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26
0x4003fc4	            0xeb04	                           jmp 0x4003fca	      2299	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26
0x4003fc6	              0x90	                                     nop	      2351	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32
0x4003fc7	            0xeb01	                           jmp 0x4003fca	      2351	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32
0x4003fc9	              0x90	                                     nop	      2406	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x4003fca	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x4003fd2	     0xf84b2040000	                            je 0x400448a	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x4003fd8	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4003fdf	          0x4889c7	                            mov rdi, rax	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4003fe2	      0xe800000000	                          call 0x4003fe7	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4003fe7	      0xe99e040000	                           jmp 0x400448a	      2345	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003fec	              0x90	                                     nop	      2307	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003fed	      0xe92c040000	                           jmp 0x400441e	      2307	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ff2	              0x90	                                     nop	      2328	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4003ff3	      0xe926040000	                           jmp 0x400441e	      2347	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4003ff8	     0xfb695f8feff	           movzx edx, byte [rbp - 0x108]	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4003fff	    0x448b8d0cffff	             mov r9d, dword [rbp - 0xf4]	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4004006	    0x448b8508ffff	             mov r8d, dword [rbp - 0xf8]	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400400d	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4004014	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400401b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4004022	            0x6a00	                                  push 0	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4004024	    0x8bbd10ffffff	             mov edi, dword [rbp - 0xf0]	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400402a	              0x57	                                push rdi	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400402b	          0x4889c7	                            mov rdi, rax	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400402e	      0xe884dcffff	                  call sym.add_line_info	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4004033	        0x4883c410	                           add rsp, 0x10	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4004037	            0x85c0	                           test eax, eax	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4004039	            0x748b	                            je 0x4003fc6	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400403b	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004045	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2353	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_33
0x400404c	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	      2353	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_33
0x4004053	            0x730e	                           jae 0x4004063	      2353	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_33
0x4004055	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2354	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_33
0x400405c	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2354	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_33
0x4004063	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2355	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_34
0x400406a	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      2355	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_34
0x4004071	     0xf86a7030000	                           jbe 0x400441e	      2355	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_34
0x4004077	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2356	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_34
0x400407e	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2356	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_34
0x4004085	      0xe994030000	                           jmp 0x400441e	      2357	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400408a	         0xfb645c9	            movzx eax, byte [rbp - 0x37]	      2359	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x400408e	            0x3c01	                               cmp al, 1	      2359	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4004090	            0x7540	                           jne 0x40040d2	      2359	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4004092	         0xfb645c8	            movzx eax, byte [rbp - 0x38]	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4004096	           0xfb6d8	                           movzx ebx, al	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4004099	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x40040a0	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x40040a4	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x40040ab	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x40040b2	          0x4989c8	                             mov r8, rcx	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x40040b5	      0xb900000000	                              mov ecx, 0	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x40040ba	          0x4889c7	                            mov rdi, rax	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x40040bd	      0xe800000000	                          call 0x40040c2	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x40040c2	        0x480fafc3	                           imul rax, rbx	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x40040c6	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x40040cd	      0xe985000000	                           jmp 0x4004157	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x40040d2	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40040d9	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40040dd	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40040e4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40040eb	          0x4989c8	                             mov r8, rcx	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40040ee	      0xb900000000	                              mov ecx, 0	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40040f3	          0x4889c7	                            mov rdi, rax	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40040f6	      0xe800000000	                          call 0x40040fb	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40040fb	        0x48894598	             mov qword [rbp - 0x68], rax	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40040ff	     0xfb695f8feff	           movzx edx, byte [rbp - 0x108]	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004106	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400410a	          0x4801d0	                            add rax, rdx	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400410d	         0xfb655c9	            movzx edx, byte [rbp - 0x37]	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004111	           0xfb6da	                           movzx ebx, dl	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004114	      0xba00000000	                              mov edx, 0	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004119	          0x48f7f3	                                 div rbx	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400411c	          0x4889c2	                            mov rdx, rax	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400411f	         0xfb645c8	            movzx eax, byte [rbp - 0x38]	      2370	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004123	           0xfb6c0	                           movzx eax, al	      2370	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004126	        0x480fafc2	                           imul rax, rdx	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400412a	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004131	     0xfb695f8feff	           movzx edx, byte [rbp - 0x108]	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004138	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400413c	          0x4801d0	                            add rax, rdx	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400413f	         0xfb655c9	            movzx edx, byte [rbp - 0x37]	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004143	           0xfb6ca	                           movzx ecx, dl	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004146	      0xba00000000	                              mov edx, 0	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400414b	          0x48f7f1	                                 div rcx	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400414e	          0x4889d0	                            mov rax, rdx	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004151	    0x8885f8feffff	              mov byte [rbp - 0x108], al	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4004157	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2373	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400415e	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2373	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004164	            0x89d2	                            mov edx, edx	      2373	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004166	          0x4801d0	                            add rax, rdx	      2373	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004169	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2373	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004170	      0xe9a9020000	                           jmp 0x400441e	      2374	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004175	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x400417c	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x4004180	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x4004187	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x400418e	          0x4989c8	                             mov r8, rcx	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x4004191	      0xb901000000	                              mov ecx, 1	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x4004196	          0x4889c7	                            mov rdi, rax	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x4004199	      0xe800000000	                          call 0x400419e	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x400419e	     0x18508ffffff	             add dword [rbp - 0xf8], eax	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40041a4	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40041ab	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40041b1	            0x89d2	                            mov edx, edx	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40041b3	          0x4801d0	                            add rax, rdx	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40041b6	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40041bd	      0xe95c020000	                           jmp 0x400441e	      2379	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40041c2	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40041c9	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40041cd	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40041d4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40041db	          0x4989c8	                             mov r8, rcx	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40041de	      0xb900000000	                              mov ecx, 0	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40041e3	          0x4889c7	                            mov rdi, rax	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40041e6	      0xe800000000	                          call 0x40041eb	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40041eb	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40041f1	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40041f8	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40041fe	            0x89d2	                            mov edx, edx	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004200	          0x4801d0	                            add rax, rdx	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004203	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400420a	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x4004212	            0x740f	                            je 0x4004223	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x4004214	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x400421b	          0x4889c7	                            mov rdi, rax	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x400421e	      0xe800000000	                          call 0x4004223	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x4004223	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4004229	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4004230	            0x89d6	                            mov esi, edx	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4004232	          0x4889c7	                            mov rdi, rax	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4004235	      0xe83edeffff	                call sym.concat_filename	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x400423a	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4004241	      0xe9d8010000	                           jmp 0x400441e	      2392	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004246	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x400424d	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4004251	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4004258	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x400425f	          0x4989c8	                             mov r8, rcx	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4004262	      0xb900000000	                              mov ecx, 0	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4004267	          0x4889c7	                            mov rdi, rax	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x400426a	      0xe800000000	                          call 0x400426f	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x400426f	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4004275	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400427c	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004282	            0x89d2	                            mov edx, edx	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004284	          0x4801d0	                            add rax, rdx	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004287	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400428e	      0xe98b010000	                           jmp 0x400441e	      2398	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004293	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	      2400	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400429a	           0xf94c0	                                 sete al	      2400	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400429d	           0xfb6c0	                           movzx eax, al	      2400	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40042a0	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      2400	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40042a6	      0xe973010000	                           jmp 0x400441e	      2401	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40042ab	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x40042af	            0x84c0	                             test al, al	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x40042b1	     0xf8412fdffff	                            je 0x4003fc9	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x40042b7	         0xfb645c9	            movzx eax, byte [rbp - 0x37]	      2407	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042bb	            0x3c01	                               cmp al, 1	      2407	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042bd	            0x7532	                           jne 0x40042f1	      2407	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042bf	         0xfb645c8	            movzx eax, byte [rbp - 0x38]	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042c3	           0xfb6c8	                           movzx ecx, al	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042c6	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042ca	           0xfb6c0	                           movzx eax, al	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042cd	      0xbaff000000	                           mov edx, 0xff	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042d2	            0x29c2	                            sub edx, eax	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042d4	            0x89d0	                            mov eax, edx	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042d6	         0xfb655d0	            movzx edx, byte [rbp - 0x30]	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042da	           0xfb6da	                           movzx ebx, dl	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042dd	              0x99	                                     cdq	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042de	            0xf7fb	                                idiv ebx	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042e0	           0xfafc1	                           imul eax, ecx	      2409	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042e3	            0x4898	                                    cdqe	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042e5	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042ec	      0xe92d010000	                           jmp 0x400441e	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40042f1	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40042f5	           0xfb6c0	                           movzx eax, al	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40042f8	      0xbaff000000	                           mov edx, 0xff	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40042fd	            0x29c2	                            sub edx, eax	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40042ff	            0x89d0	                            mov eax, edx	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004301	         0xfb655d0	            movzx edx, byte [rbp - 0x30]	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004305	           0xfb6da	                           movzx ebx, dl	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004308	              0x99	                                     cdq	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004309	            0xf7fb	                                idiv ebx	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400430b	            0x4898	                                    cdqe	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400430d	        0x488945a0	             mov qword [rbp - 0x60], rax	      2412	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004311	         0xfb645c8	            movzx eax, byte [rbp - 0x38]	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004315	           0xfb6c8	                           movzx ecx, al	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004318	     0xfb695f8feff	           movzx edx, byte [rbp - 0x108]	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400431f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004323	          0x4801d0	                            add rax, rdx	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004326	         0xfb655c9	            movzx edx, byte [rbp - 0x37]	      2415	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400432a	           0xfb6da	                           movzx ebx, dl	      2415	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400432d	      0xba00000000	                              mov edx, 0	      2415	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004332	          0x48f7f3	                                 div rbx	      2415	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004335	        0x480fafc1	                           imul rax, rcx	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004339	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004340	     0xfb695f8feff	           movzx edx, byte [rbp - 0x108]	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004347	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400434b	          0x4801d0	                            add rax, rdx	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400434e	         0xfb655c9	            movzx edx, byte [rbp - 0x37]	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004352	           0xfb6ca	                           movzx ecx, dl	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004355	      0xba00000000	                              mov edx, 0	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400435a	          0x48f7f1	                                 div rcx	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400435d	          0x4889d0	                            mov rax, rdx	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004360	    0x8885f8feffff	              mov byte [rbp - 0x108], al	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4004366	      0xe9b3000000	                           jmp 0x400441e	      2418	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400436b	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4004372	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4004376	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x400437d	          0x4889ce	                            mov rsi, rcx	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4004380	          0x4889c7	                            mov rdi, rax	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4004383	      0xe8d9c0ffff	                   call sym.read_2_bytes	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4004388	            0x89c0	                            mov eax, eax	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x400438a	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4004391	    0xc685f8feffff	               mov byte [rbp - 0x108], 0	      2421	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4004398	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2422	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400439f	        0x4883c002	                              add rax, 2	      2422	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40043a3	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2422	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40043aa	            0xeb72	                           jmp 0x400441e	      2423	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40043ac	    0xc78500ffffff	              mov dword [rbp - 0x100], 0	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40043b6	            0xeb49	                           jmp 0x4004401	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40043b8	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40043bf	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40043c3	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40043ca	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40043d1	          0x4989c8	                             mov r8, rcx	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40043d4	      0xb900000000	                              mov ecx, 0	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40043d9	          0x4889c7	                            mov rdi, rax	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40043dc	      0xe800000000	                          call 0x40043e1	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40043e1	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40043e8	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40043ee	            0x89d2	                            mov edx, edx	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40043f0	          0x4801d0	                            add rax, rdx	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40043f3	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40043fa	    0x838500ffffff	              add dword [rbp - 0x100], 1	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4004401	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4004405	     0xfb685f9feff	           movzx eax, byte [rbp - 0x107]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400440c	          0x4801d0	                            add rax, rdx	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400440f	           0xfb600	                   movzx eax, byte [rax]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4004412	           0xfb6c0	                           movzx eax, al	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4004415	    0x3b8500ffffff	            cmp eax, dword [rbp - 0x100]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400441b	            0x779b	                            ja 0x40043b8	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400441d	              0x90	                                     nop	      2432	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400441e	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4004425	            0x7511	                           jne 0x4004438	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4004427	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x400442e	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4004432	     0xf82f7f5ffff	                            jb 0x4003a2f	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4004438	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4004440	            0x740f	                            je 0x4004451	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4004442	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4004449	          0x4889c7	                            mov rdi, rax	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x400444c	      0xe800000000	                          call 0x4004451	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4004451	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4004458	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x400445c	     0xf823bf5ffff	                            jb 0x400399d	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4004462	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2440	dwarf2.c	FUNCTION_35	IF_40	CALL_78
0x4004469	          0x4889c7	                            mov rdi, rax	      2440	dwarf2.c	FUNCTION_35	IF_40	CALL_78
0x400446c	      0xe88fe1ffff	            call sym.sort_line_sequences	      2440	dwarf2.c	FUNCTION_35	IF_40	CALL_78
0x4004471	            0x85c0	                           test eax, eax	      2440	dwarf2.c	FUNCTION_35	IF_40	CALL_78
0x4004473	            0x744d	                            je 0x40044c2	      2440	dwarf2.c	FUNCTION_35	IF_40	CALL_78
0x4004475	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2441	dwarf2.c	FUNCTION_35	IF_40
0x400447c	      0xe99c000000	                           jmp 0x400451d	      2441	dwarf2.c	FUNCTION_35	IF_40
0x4004481	              0x90	                                     nop	      2188	dwarf2.c	FUNCTION_35	IF_15	IF_16
0x4004482	            0xeb3e	                           jmp 0x40044c2	      2188	dwarf2.c	FUNCTION_35	IF_15	IF_16
0x4004484	              0x90	                                     nop	      2203	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18
0x4004485	            0xeb3b	                           jmp 0x40044c2	      2203	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18
0x4004487	              0x90	                                     nop	      2223	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19
0x4004488	            0xeb38	                           jmp 0x40044c2	      2223	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19
0x400448a	              0x90	                                     nop	      2345	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x400448b	            0xeb35	                           jmp 0x40044c2	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x400448d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2446	dwarf2.c	FUNCTION_35	WHILE_5
0x4004494	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2446	dwarf2.c	FUNCTION_35	WHILE_5
0x4004498	        0x488945a8	             mov qword [rbp - 0x58], rax	      2446	dwarf2.c	FUNCTION_35	WHILE_5
0x400449c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x40044a3	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x40044a7	        0x488b5008	                mov rdx, qword [rax + 8]	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x40044ab	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x40044b2	        0x48895030	             mov qword [rax + 0x30], rdx	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x40044b6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2448	dwarf2.c	FUNCTION_35	WHILE_5	CALL_79
0x40044ba	          0x4889c7	                            mov rdi, rax	      2448	dwarf2.c	FUNCTION_35	WHILE_5	CALL_79
0x40044bd	      0xe800000000	                          call 0x40044c2	      2448	dwarf2.c	FUNCTION_35	WHILE_5	CALL_79
0x40044c2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x40044c9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x40044cd	          0x4885c0	                           test rax, rax	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x40044d0	            0x75bb	                           jne 0x400448d	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x40044d2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2450	dwarf2.c	FUNCTION_35	IF_41
0x40044d9	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2450	dwarf2.c	FUNCTION_35	IF_41
0x40044dd	          0x4885c0	                           test rax, rax	      2450	dwarf2.c	FUNCTION_35	IF_41
0x40044e0	            0x7413	                            je 0x40044f5	      2450	dwarf2.c	FUNCTION_35	IF_41
0x40044e2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2451	dwarf2.c	FUNCTION_35	CALL_80
0x40044e9	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2451	dwarf2.c	FUNCTION_35	CALL_80
0x40044ed	          0x4889c7	                            mov rdi, rax	      2451	dwarf2.c	FUNCTION_35	CALL_80
0x40044f0	      0xe800000000	                          call 0x40044f5	      2451	dwarf2.c	FUNCTION_35	CALL_80
0x40044f5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2452	dwarf2.c	FUNCTION_35	IF_42
0x40044fc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4004500	          0x4885c0	                           test rax, rax	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4004503	            0x7413	                            je 0x4004518	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4004505	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2453	dwarf2.c	FUNCTION_35	CALL_81
0x400450c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2453	dwarf2.c	FUNCTION_35	CALL_81
0x4004510	          0x4889c7	                            mov rdi, rax	      2453	dwarf2.c	FUNCTION_35	CALL_81
0x4004513	      0xe800000000	                          call 0x4004518	      2453	dwarf2.c	FUNCTION_35	CALL_81
0x4004518	      0xb800000000	                              mov eax, 0	      2454	dwarf2.c	FUNCTION_35
0x400451d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2455	dwarf2.c	FUNCTION_35
0x4004521	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2455	dwarf2.c	FUNCTION_35
0x400452a	            0x7405	                            je 0x4004531	      2455	dwarf2.c	FUNCTION_35
0x400452c	      0xe800000000	                          call 0x4004531	      2455	dwarf2.c	FUNCTION_35
0x4004531	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      2455	dwarf2.c	FUNCTION_35
0x4004535	              0x5b	                                 pop rbx	      2455	dwarf2.c	FUNCTION_35
0x4004536	            0x415c	                                 pop r12	      2455	dwarf2.c	FUNCTION_35
0x4004538	              0x5d	                                 pop rbp	      2455	dwarf2.c	FUNCTION_35
0x4004539	              0xc3	                                     ret	      2455	dwarf2.c	FUNCTION_35
line_info_add_include_dir	SWITCH,0:ELSE,0:CALL,1:IF,2:DO,0:WHILE,0:functions,0:FOR,0	54
0x4002928	              0x55	                                push rbp	      1826	dwarf2.c	FUNCTION_31
0x4002929	          0x4889e5	                            mov rbp, rsp	      1826	dwarf2.c	FUNCTION_31
0x400292c	        0x4883ec20	                           sub rsp, 0x20	      1826	dwarf2.c	FUNCTION_31
0x4002930	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1826	dwarf2.c	FUNCTION_31
0x4002934	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1826	dwarf2.c	FUNCTION_31
0x4002938	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400293c	          0x8b480c	              mov ecx, dword [rax + 0xc]	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400293f	      0xbacdcccccc	                     mov edx, 0xcccccccd	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002944	            0x89c8	                            mov eax, ecx	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002946	            0xf7e2	                                 mul edx	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002948	            0x89d0	                            mov eax, edx	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400294a	          0xc1e802	                              shr eax, 2	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400294d	            0x89c2	                            mov edx, eax	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400294f	          0xc1e202	                              shl edx, 2	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002952	             0x1c2	                            add edx, eax	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002954	            0x89c8	                            mov eax, ecx	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002956	            0x29d0	                            sub eax, edx	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002958	            0x85c0	                           test eax, eax	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400295a	            0x754a	                           jne 0x40029a6	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400295c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1832	dwarf2.c	FUNCTION_31	IF_1
0x4002960	          0x8b400c	              mov eax, dword [rax + 0xc]	      1832	dwarf2.c	FUNCTION_31	IF_1
0x4002963	          0x83c005	                              add eax, 5	      1832	dwarf2.c	FUNCTION_31	IF_1
0x4002966	            0x89c0	                            mov eax, eax	      1832	dwarf2.c	FUNCTION_31	IF_1
0x4002968	        0x488945f0	             mov qword [rbp - 0x10], rax	      1832	dwarf2.c	FUNCTION_31	IF_1
0x400296c	      0x48c165f003	               shl qword [rbp - 0x10], 3	      1833	dwarf2.c	FUNCTION_31	IF_1
0x4002971	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x4002975	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x4002979	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x400297d	          0x4889d6	                            mov rsi, rdx	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x4002980	          0x4889c7	                            mov rdi, rax	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x4002983	      0xe800000000	                          call 0x4002988	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x4002988	        0x488945f8	                mov qword [rbp - 8], rax	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x400298c	      0x48837df800	                  cmp qword [rbp - 8], 0	      1836	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x4002991	            0x7507	                           jne 0x400299a	      1836	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x4002993	      0xb800000000	                              mov eax, 0	      1837	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x4002998	            0xeb3b	                           jmp 0x40029d5	      1837	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x400299a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1838	dwarf2.c	FUNCTION_31	IF_1
0x400299e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1838	dwarf2.c	FUNCTION_31	IF_1
0x40029a2	        0x48895020	             mov qword [rax + 0x20], rdx	      1838	dwarf2.c	FUNCTION_31	IF_1
0x40029a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1841	dwarf2.c	FUNCTION_31
0x40029aa	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      1841	dwarf2.c	FUNCTION_31
0x40029ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1841	dwarf2.c	FUNCTION_31
0x40029b2	          0x8b400c	              mov eax, dword [rax + 0xc]	      1841	dwarf2.c	FUNCTION_31
0x40029b5	          0x8d4801	                      lea ecx, [rax + 1]	      1841	dwarf2.c	FUNCTION_31
0x40029b8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1841	dwarf2.c	FUNCTION_31
0x40029bc	          0x894a0c	              mov dword [rdx + 0xc], ecx	      1841	dwarf2.c	FUNCTION_31
0x40029bf	            0x89c0	                            mov eax, eax	      1841	dwarf2.c	FUNCTION_31
0x40029c1	        0x48c1e003	                              shl rax, 3	      1841	dwarf2.c	FUNCTION_31
0x40029c5	        0x488d1406	                    lea rdx, [rsi + rax]	      1841	dwarf2.c	FUNCTION_31
0x40029c9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1841	dwarf2.c	FUNCTION_31
0x40029cd	          0x488902	                    mov qword [rdx], rax	      1841	dwarf2.c	FUNCTION_31
0x40029d0	      0xb801000000	                              mov eax, 1	      1842	dwarf2.c	FUNCTION_31
0x40029d5	              0xc9	                                   leave	      1843	dwarf2.c	FUNCTION_31
0x40029d6	              0xc3	                                     ret	      1843	dwarf2.c	FUNCTION_31
stash_find_line_fast	SWITCH,0:ELSE,0:CALL,3:IF,1:DO,0:WHILE,0:functions,0:FOR,0	41
0x40078d6	              0x55	                                push rbp	      4240	dwarf2.c	FUNCTION_63
0x40078d7	          0x4889e5	                            mov rbp, rsp	      4240	dwarf2.c	FUNCTION_63
0x40078da	        0x4883ec30	                           sub rsp, 0x30	      4240	dwarf2.c	FUNCTION_63
0x40078de	        0x48897df8	                mov qword [rbp - 8], rdi	      4240	dwarf2.c	FUNCTION_63
0x40078e2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4240	dwarf2.c	FUNCTION_63
0x40078e6	        0x488955e8	             mov qword [rbp - 0x18], rdx	      4240	dwarf2.c	FUNCTION_63
0x40078ea	        0x48894de0	             mov qword [rbp - 0x20], rcx	      4240	dwarf2.c	FUNCTION_63
0x40078ee	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      4240	dwarf2.c	FUNCTION_63
0x40078f2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4241	dwarf2.c	FUNCTION_63	CALL_1
0x40078f6	    0x8b8010010000	           mov eax, dword [rax + 0x110] 	      4241	dwarf2.c	FUNCTION_63	CALL_1
0x40078fc	          0x83f801	                              cmp eax, 1	      4241	dwarf2.c	FUNCTION_63	CALL_1
0x40078ff	            0x740f	                            je 0x4007910	      4241	dwarf2.c	FUNCTION_63	CALL_1
0x4007901	      0xbe91100000	                         mov esi, 0x1091	      4241	dwarf2.c	FUNCTION_63	CALL_1
0x4007906	      0xbf00000000	                              mov edi, 0	      4241	dwarf2.c	FUNCTION_63	CALL_1
0x400790b	      0xe800000000	                          call 0x4007910	      4241	dwarf2.c	FUNCTION_63	CALL_1
0x4007910	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4243	dwarf2.c	FUNCTION_63	IF_1
0x4007914	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4243	dwarf2.c	FUNCTION_63	IF_1
0x4007917	          0x83e008	                              and eax, 8	      4243	dwarf2.c	FUNCTION_63	IF_1
0x400791a	            0x85c0	                           test eax, eax	      4243	dwarf2.c	FUNCTION_63	IF_1
0x400791c	            0x7428	                            je 0x4007946	      4243	dwarf2.c	FUNCTION_63	IF_1
0x400791e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4244	dwarf2.c	FUNCTION_63	IF_1	CALL_2
0x4007922	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      4244	dwarf2.c	FUNCTION_63	IF_1	CALL_2
0x4007929	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      4244	dwarf2.c	FUNCTION_63	IF_1	CALL_2
0x400792d	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4244	dwarf2.c	FUNCTION_63	IF_1	CALL_2
0x4007931	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4244	dwarf2.c	FUNCTION_63	IF_1	CALL_2
0x4007935	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      4244	dwarf2.c	FUNCTION_63	IF_1	CALL_2
0x4007939	          0x4989f8	                             mov r8, rdi	      4244	dwarf2.c	FUNCTION_63	IF_1	CALL_2
0x400793c	          0x4889c7	                            mov rdi, rax	      4244	dwarf2.c	FUNCTION_63	IF_1	CALL_2
0x400793f	      0xe8ecf9ffff	      call sym.info_hash_lookup_funcinfo	      4244	dwarf2.c	FUNCTION_63	IF_1	CALL_2
0x4007944	            0xeb26	                           jmp 0x400796c	      4244	dwarf2.c	FUNCTION_63	IF_1	CALL_2
0x4007946	        0x488b45f8	                mov rax, qword [rbp - 8]	      4246	dwarf2.c	FUNCTION_63	CALL_3
0x400794a	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      4246	dwarf2.c	FUNCTION_63	CALL_3
0x4007951	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      4246	dwarf2.c	FUNCTION_63	CALL_3
0x4007955	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4246	dwarf2.c	FUNCTION_63	CALL_3
0x4007959	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4246	dwarf2.c	FUNCTION_63	CALL_3
0x400795d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      4246	dwarf2.c	FUNCTION_63	CALL_3
0x4007961	          0x4989f8	                             mov r8, rdi	      4246	dwarf2.c	FUNCTION_63	CALL_3
0x4007964	          0x4889c7	                            mov rdi, rax	      4246	dwarf2.c	FUNCTION_63	CALL_3
0x4007967	      0xe828fbffff	       call sym.info_hash_lookup_varinfo	      4246	dwarf2.c	FUNCTION_63	CALL_3
0x400796c	              0xc9	                                   leave	      4248	dwarf2.c	FUNCTION_63
0x400796d	              0xc3	                                     ret	      4248	dwarf2.c	FUNCTION_63
comp_unit_find_line	SWITCH,0:ELSE,0:CALL,3:IF,2:DO,0:WHILE,0:functions,0:FOR,0	42
0x40069a9	              0x55	                                push rbp	      3687	dwarf2.c	FUNCTION_50
0x40069aa	          0x4889e5	                            mov rbp, rsp	      3687	dwarf2.c	FUNCTION_50
0x40069ad	        0x4883ec30	                           sub rsp, 0x30	      3687	dwarf2.c	FUNCTION_50
0x40069b1	        0x48897df8	                mov qword [rbp - 8], rdi	      3687	dwarf2.c	FUNCTION_50
0x40069b5	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3687	dwarf2.c	FUNCTION_50
0x40069b9	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3687	dwarf2.c	FUNCTION_50
0x40069bd	        0x48894de0	             mov qword [rbp - 0x20], rcx	      3687	dwarf2.c	FUNCTION_50
0x40069c1	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      3687	dwarf2.c	FUNCTION_50
0x40069c5	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      3687	dwarf2.c	FUNCTION_50
0x40069c9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x40069cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x40069d1	          0x4889d6	                            mov rsi, rdx	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x40069d4	          0x4889c7	                            mov rdi, rax	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x40069d7	      0xe8fffeffff	call sym.comp_unit_maybe_decode_line_info	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x40069dc	            0x85c0	                           test eax, eax	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x40069de	            0x7507	                           jne 0x40069e7	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x40069e0	      0xb800000000	                              mov eax, 0	      3689	dwarf2.c	FUNCTION_50	IF_1
0x40069e5	            0xeb4e	                           jmp 0x4006a35	      3689	dwarf2.c	FUNCTION_50	IF_1
0x40069e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3691	dwarf2.c	FUNCTION_50	IF_2
0x40069eb	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3691	dwarf2.c	FUNCTION_50	IF_2
0x40069ee	          0x83e008	                              and eax, 8	      3691	dwarf2.c	FUNCTION_50	IF_2
0x40069f1	            0x85c0	                           test eax, eax	      3691	dwarf2.c	FUNCTION_50	IF_2
0x40069f3	            0x7421	                            je 0x4006a16	      3691	dwarf2.c	FUNCTION_50	IF_2
0x40069f5	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      3692	dwarf2.c	FUNCTION_50	IF_2	CALL_2
0x40069f9	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3692	dwarf2.c	FUNCTION_50	IF_2	CALL_2
0x40069fd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3692	dwarf2.c	FUNCTION_50	IF_2	CALL_2
0x4006a01	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      3692	dwarf2.c	FUNCTION_50	IF_2	CALL_2
0x4006a05	        0x488b45f8	                mov rax, qword [rbp - 8]	      3692	dwarf2.c	FUNCTION_50	IF_2	CALL_2
0x4006a09	          0x4989f8	                             mov r8, rdi	      3692	dwarf2.c	FUNCTION_50	IF_2	CALL_2
0x4006a0c	          0x4889c7	                            mov rdi, rax	      3692	dwarf2.c	FUNCTION_50	IF_2	CALL_2
0x4006a0f	      0xe8f6e2ffff	call sym.lookup_symbol_in_function_table	      3692	dwarf2.c	FUNCTION_50	IF_2	CALL_2
0x4006a14	            0xeb1f	                           jmp 0x4006a35	      3692	dwarf2.c	FUNCTION_50	IF_2	CALL_2
0x4006a16	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      3696	dwarf2.c	FUNCTION_50	CALL_3
0x4006a1a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3696	dwarf2.c	FUNCTION_50	CALL_3
0x4006a1e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3696	dwarf2.c	FUNCTION_50	CALL_3
0x4006a22	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      3696	dwarf2.c	FUNCTION_50	CALL_3
0x4006a26	        0x488b45f8	                mov rax, qword [rbp - 8]	      3696	dwarf2.c	FUNCTION_50	CALL_3
0x4006a2a	          0x4989f8	                             mov r8, rdi	      3696	dwarf2.c	FUNCTION_50	CALL_3
0x4006a2d	          0x4889c7	                            mov rdi, rax	      3696	dwarf2.c	FUNCTION_50	CALL_3
0x4006a30	      0xe851e4ffff	call sym.lookup_symbol_in_variable_table	      3696	dwarf2.c	FUNCTION_50	CALL_3
0x4006a35	              0xc9	                                   leave	      3699	dwarf2.c	FUNCTION_50
0x4006a36	              0xc3	                                     ret	      3699	dwarf2.c	FUNCTION_50
_bfd_dwarf2_slurp_debug_info	SWITCH,0:ELSE,2:CALL,25:IF,18:DO,0:WHILE,0:functions,0:FOR,2	325
0x4007b17	              0x55	                                push rbp	      4311	dwarf2.c	FUNCTION_66
0x4007b18	          0x4889e5	                            mov rbp, rsp	      4311	dwarf2.c	FUNCTION_66
0x4007b1b	        0x4883ec70	                           sub rsp, 0x70	      4311	dwarf2.c	FUNCTION_66
0x4007b1f	        0x48897db8	             mov qword [rbp - 0x48], rdi	      4311	dwarf2.c	FUNCTION_66
0x4007b23	        0x488975b0	             mov qword [rbp - 0x50], rsi	      4311	dwarf2.c	FUNCTION_66
0x4007b27	        0x488955a8	             mov qword [rbp - 0x58], rdx	      4311	dwarf2.c	FUNCTION_66
0x4007b2b	        0x48894da0	             mov qword [rbp - 0x60], rcx	      4311	dwarf2.c	FUNCTION_66
0x4007b2f	        0x4c894598	              mov qword [rbp - 0x68], r8	      4311	dwarf2.c	FUNCTION_66
0x4007b33	        0x44894d94	             mov dword [rbp - 0x6c], r9d	      4311	dwarf2.c	FUNCTION_66
0x4007b37	    0x64488b042528	                mov rax, qword fs:[0x28]	      4311	dwarf2.c	FUNCTION_66
0x4007b40	        0x488945f8	                mov qword [rbp - 8], rax	      4311	dwarf2.c	FUNCTION_66
0x4007b44	            0x31c0	                            xor eax, eax	      4311	dwarf2.c	FUNCTION_66
0x4007b46	    0x48c745e81801	          mov qword [rbp - 0x18], 0x118 	      4312	dwarf2.c	FUNCTION_66
0x4007b4e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4315	dwarf2.c	FUNCTION_66
0x4007b52	          0x488b00	                    mov rax, qword [rax]	      4315	dwarf2.c	FUNCTION_66
0x4007b55	        0x488945d8	             mov qword [rbp - 0x28], rax	      4315	dwarf2.c	FUNCTION_66
0x4007b59	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4317	dwarf2.c	FUNCTION_66	IF_1
0x4007b5e	     0xf8497000000	                            je 0x4007bfb	      4317	dwarf2.c	FUNCTION_66	IF_1
0x4007b64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x4007b68	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x4007b6c	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x4007b70	            0x755f	                           jne 0x4007bd1	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x4007b72	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4320	dwarf2.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4007b76	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4320	dwarf2.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4007b7a	          0x4889d6	                            mov rsi, rdx	      4320	dwarf2.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4007b7d	          0x4889c7	                            mov rdi, rax	      4320	dwarf2.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4007b80	      0xe8edfeffff	               call sym.section_vma_same	      4320	dwarf2.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4007b85	            0x85c0	                           test eax, eax	      4320	dwarf2.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4007b87	            0x7448	                            je 0x4007bd1	      4320	dwarf2.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4007b89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4007b8d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4007b91	          0x4885c0	                           test rax, rax	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4007b94	            0x7431	                            je 0x4007bc7	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4007b96	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4007b9a	            0x7421	                            je 0x4007bbd	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4007b9c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4007ba0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4007ba4	          0x4889d6	                            mov rsi, rdx	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4007ba7	          0x4889c7	                            mov rdi, rax	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4007baa	      0xe89ff3ffff	                 call sym.place_sections	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4007baf	            0x85c0	                           test eax, eax	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4007bb1	            0x750a	                           jne 0x4007bbd	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4007bb3	      0xb800000000	                              mov eax, 0	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4007bb8	      0xe935040000	                           jmp 0x4007ff2	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4007bbd	      0xb801000000	                              mov eax, 1	      4328	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4007bc2	      0xe92b040000	                           jmp 0x4007ff2	      4328	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4007bc7	      0xb800000000	                              mov eax, 0	      4331	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x4007bcc	      0xe921040000	                           jmp 0x4007ff2	      4331	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x4007bd1	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x4007bd5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x4007bd9	          0x4889d6	                            mov rsi, rdx	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x4007bdc	          0x4889c7	                            mov rdi, rax	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x4007bdf	      0xe800000000	                          call 0x4007be4	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x4007be4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4334	dwarf2.c	FUNCTION_66	IF_1	CALL_4
0x4007be8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4334	dwarf2.c	FUNCTION_66	IF_1	CALL_4
0x4007bec	      0xbe00000000	                              mov esi, 0	      4334	dwarf2.c	FUNCTION_66	IF_1	CALL_4
0x4007bf1	          0x4889c7	                            mov rdi, rax	      4334	dwarf2.c	FUNCTION_66	IF_1	CALL_4
0x4007bf4	      0xe800000000	                          call 0x4007bf9	      4334	dwarf2.c	FUNCTION_66	IF_1	CALL_4
0x4007bf9	            0xeb28	                           jmp 0x4007c23	      4334	dwarf2.c	FUNCTION_66	IF_1	CALL_4
0x4007bfb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4007bff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4007c03	          0x4889d6	                            mov rsi, rdx	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4007c06	          0x4889c7	                            mov rdi, rax	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4007c09	      0xe800000000	                          call 0x4007c0e	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4007c0e	        0x488945d8	             mov qword [rbp - 0x28], rax	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4007c12	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4339	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x4007c17	            0x750a	                           jne 0x4007c23	      4339	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x4007c19	      0xb800000000	                              mov eax, 0	      4340	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x4007c1e	      0xe9cf030000	                           jmp 0x4007ff2	      4340	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x4007c23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4342	dwarf2.c	FUNCTION_66
0x4007c27	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4342	dwarf2.c	FUNCTION_66
0x4007c2b	        0x48895028	             mov qword [rax + 0x28], rdx	      4342	dwarf2.c	FUNCTION_66
0x4007c2f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4343	dwarf2.c	FUNCTION_66
0x4007c33	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4343	dwarf2.c	FUNCTION_66
0x4007c37	        0x48895010	             mov qword [rax + 0x10], rdx	      4343	dwarf2.c	FUNCTION_66
0x4007c3b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4344	dwarf2.c	FUNCTION_66
0x4007c3f	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4344	dwarf2.c	FUNCTION_66
0x4007c43	        0x48895078	             mov qword [rax + 0x78], rdx	      4344	dwarf2.c	FUNCTION_66
0x4007c47	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4345	dwarf2.c	FUNCTION_66	IF_6	CALL_6
0x4007c4b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4345	dwarf2.c	FUNCTION_66	IF_6	CALL_6
0x4007c4f	          0x4889d6	                            mov rsi, rdx	      4345	dwarf2.c	FUNCTION_66	IF_6	CALL_6
0x4007c52	          0x4889c7	                            mov rdi, rax	      4345	dwarf2.c	FUNCTION_66	IF_6	CALL_6
0x4007c55	      0xe814fdffff	               call sym.save_section_vma	      4345	dwarf2.c	FUNCTION_66	IF_6	CALL_6
0x4007c5a	            0x85c0	                           test eax, eax	      4345	dwarf2.c	FUNCTION_66	IF_6	CALL_6
0x4007c5c	            0x750a	                           jne 0x4007c68	      4345	dwarf2.c	FUNCTION_66	IF_6	CALL_6
0x4007c5e	      0xb800000000	                              mov eax, 0	      4346	dwarf2.c	FUNCTION_66	IF_6
0x4007c63	      0xe98a030000	                           jmp 0x4007ff2	      4346	dwarf2.c	FUNCTION_66	IF_6
0x4007c68	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4348	dwarf2.c	FUNCTION_66
0x4007c6c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4348	dwarf2.c	FUNCTION_66
0x4007c70	          0x488910	                    mov qword [rax], rdx	      4348	dwarf2.c	FUNCTION_66
0x4007c73	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4350	dwarf2.c	FUNCTION_66	IF_7
0x4007c78	            0x7508	                           jne 0x4007c82	      4350	dwarf2.c	FUNCTION_66	IF_7
0x4007c7a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4351	dwarf2.c	FUNCTION_66	IF_7
0x4007c7e	        0x488945b0	             mov qword [rbp - 0x50], rax	      4351	dwarf2.c	FUNCTION_66	IF_7
0x4007c82	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4007c86	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4007c8a	      0xba00000000	                              mov edx, 0	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4007c8f	          0x4889ce	                            mov rsi, rcx	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4007c92	          0x4889c7	                            mov rdi, rax	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4007c95	      0xe811f0ffff	                call sym.find_debug_info	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4007c9a	        0x488945d0	             mov qword [rbp - 0x30], rax	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4007c9e	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4007ca3	     0xf8537010000	                           jne 0x4007de0	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4007ca9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4007cad	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4007cb1	     0xf8529010000	                           jne 0x4007de0	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4007cb7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4007cbb	      0xbe00000000	                              mov esi, 0	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4007cc0	          0x4889c7	                            mov rdi, rax	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4007cc3	      0xe800000000	                          call 0x4007cc8	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4007cc8	        0x488945e0	             mov qword [rbp - 0x20], rax	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4007ccc	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4359	dwarf2.c	FUNCTION_66	IF_8	IF_9
0x4007cd1	            0x7515	                           jne 0x4007ce8	      4359	dwarf2.c	FUNCTION_66	IF_8	IF_9
0x4007cd3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4007cd7	      0xbe00000000	                              mov esi, 0	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4007cdc	          0x4889c7	                            mov rdi, rax	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4007cdf	      0xe800000000	                          call 0x4007ce4	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4007ce4	        0x488945e0	             mov qword [rbp - 0x20], rax	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4007ce8	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4007ced	            0x750a	                           jne 0x4007cf9	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4007cef	      0xb800000000	                              mov eax, 0	      4367	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4007cf4	      0xe9f9020000	                           jmp 0x4007ff2	      4367	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4007cf9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4007cfd	      0xbe00000000	                              mov esi, 0	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4007d02	          0x4889c7	                            mov rdi, rax	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4007d05	      0xe800000000	                          call 0x4007d0a	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4007d0a	        0x488945b0	             mov qword [rbp - 0x50], rax	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4007d0e	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4007d13	            0x7479	                            je 0x4007d8e	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4007d15	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d19	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d1c	          0xc1e805	                              shr eax, 5	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d1f	      0x25ffff0f00	                        and eax, 0xfffff	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d24	          0x80cc80	                             or ah, 0x80	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d27	            0x89c2	                            mov edx, eax	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d29	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d2d	    0x81e2ffff0f00	                        and edx, 0xfffff	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d33	            0x89d1	                            mov ecx, edx	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d35	          0xc1e105	                              shl ecx, 5	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d38	          0x8b5044	            mov edx, dword [rax + 0x44] 	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d3b	    0x81e21f0000fe	                     and edx, 0xfe00001f	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d41	             0x9ca	                             or edx, ecx	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d43	          0x895044	             mov dword [rax + 0x44], edx	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d46	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x4007d4a	      0xbe01000000	                              mov esi, 1	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x4007d4f	          0x4889c7	                            mov rdi, rax	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x4007d52	      0xe800000000	                          call 0x4007d57	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x4007d57	            0x85c0	                           test eax, eax	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d59	            0x7433	                            je 0x4007d8e	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007d5b	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4007d5f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4007d63	      0xba00000000	                              mov edx, 0	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4007d68	          0x4889ce	                            mov rsi, rcx	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4007d6b	          0x4889c7	                            mov rdi, rax	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4007d6e	      0xe838efffff	                call sym.find_debug_info	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4007d73	        0x488945d0	             mov qword [rbp - 0x30], rax	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4007d77	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4007d7c	            0x7410	                            je 0x4007d8e	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4007d7e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4007d82	          0x4889c7	                            mov rdi, rax	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4007d85	      0xe800000000	                          call 0x4007d8a	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4007d8a	            0x85c0	                           test eax, eax	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4007d8c	            0x7529	                           jne 0x4007db7	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4007d8e	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4377	dwarf2.c	FUNCTION_66	IF_8	IF_11	IF_12
0x4007d93	            0x740c	                            je 0x4007da1	      4377	dwarf2.c	FUNCTION_66	IF_8	IF_11	IF_12
0x4007d95	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4378	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_14
0x4007d99	          0x4889c7	                            mov rdi, rax	      4378	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_14
0x4007d9c	      0xe800000000	                          call 0x4007da1	      4378	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_14
0x4007da1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4380	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_15
0x4007da5	          0x4889c7	                            mov rdi, rax	      4380	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_15
0x4007da8	      0xe800000000	                          call 0x4007dad	      4380	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_15
0x4007dad	      0xb800000000	                              mov eax, 0	      4381	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007db2	      0xe93b020000	                           jmp 0x4007ff2	      4381	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4007db7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4384	dwarf2.c	FUNCTION_66	IF_8	CALL_16
0x4007dbb	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      4384	dwarf2.c	FUNCTION_66	IF_8	CALL_16
0x4007dc2	        0x488945a0	             mov qword [rbp - 0x60], rax	      4384	dwarf2.c	FUNCTION_66	IF_8	CALL_16
0x4007dc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4385	dwarf2.c	FUNCTION_66	IF_8
0x4007dca	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4385	dwarf2.c	FUNCTION_66	IF_8
0x4007dce	        0x48895078	             mov qword [rax + 0x78], rdx	      4385	dwarf2.c	FUNCTION_66	IF_8
0x4007dd2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4386	dwarf2.c	FUNCTION_66	IF_8
0x4007dd6	    0xc78014010000	              mov dword [rax + 0x114], 1	      4386	dwarf2.c	FUNCTION_66	IF_8
0x4007de0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4388	dwarf2.c	FUNCTION_66
0x4007de4	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4388	dwarf2.c	FUNCTION_66
0x4007de8	        0x48895030	             mov qword [rax + 0x30], rdx	      4388	dwarf2.c	FUNCTION_66
0x4007dec	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      4390	dwarf2.c	FUNCTION_66	IF_13
0x4007df0	            0x7421	                            je 0x4007e13	      4390	dwarf2.c	FUNCTION_66	IF_13
0x4007df2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4007df6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4007dfa	          0x4889d6	                            mov rsi, rdx	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4007dfd	          0x4889c7	                            mov rdi, rax	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4007e00	      0xe849f1ffff	                 call sym.place_sections	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4007e05	            0x85c0	                           test eax, eax	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4007e07	            0x750a	                           jne 0x4007e13	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4007e09	      0xb800000000	                              mov eax, 0	      4392	dwarf2.c	FUNCTION_66	IF_13
0x4007e0e	      0xe9df010000	                           jmp 0x4007ff2	      4392	dwarf2.c	FUNCTION_66	IF_13
0x4007e13	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4007e17	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4007e1b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4007e1f	          0x4889ce	                            mov rsi, rcx	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4007e22	          0x4889c7	                            mov rdi, rax	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4007e25	      0xe881eeffff	                call sym.find_debug_info	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4007e2a	          0x4885c0	                           test rax, rax	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4007e2d	            0x7551	                           jne 0x4007e80	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4007e2f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4408	dwarf2.c	FUNCTION_66	IF_14
0x4007e33	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4408	dwarf2.c	FUNCTION_66	IF_14
0x4007e37	        0x488945c8	             mov qword [rbp - 0x38], rax	      4408	dwarf2.c	FUNCTION_66	IF_14
0x4007e3b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e3f	        0x488d7870	                   lea rdi, [rax + 0x70]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e43	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e47	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e4b	        0x488d7030	                   lea rsi, [rax + 0x30]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e4f	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e53	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e57	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e5b	          0x4989c9	                             mov r9, rcx	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e5e	          0x4989f8	                             mov r8, rdi	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e61	      0xb900000000	                              mov ecx, 0	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e66	          0x4889c7	                            mov rdi, rax	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e69	      0xe88e83ffff	                   call sym.read_section	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e6e	            0x85c0	                           test eax, eax	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e70	     0xf851d010000	                           jne 0x4007f93	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4007e76	      0xb800000000	                              mov eax, 0	      4412	dwarf2.c	FUNCTION_66	IF_14	IF_15
0x4007e7b	      0xe972010000	                           jmp 0x4007ff2	      4412	dwarf2.c	FUNCTION_66	IF_14	IF_15
0x4007e80	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4007e88	            0xeb2e	                           jmp 0x4007eb8	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4007e8a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4007e8e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4007e92	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4007e96	          0x4801d0	                            add rax, rdx	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4007e99	        0x488945c8	             mov qword [rbp - 0x38], rax	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4007e9d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4007ea1	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4007ea5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4007ea9	          0x4889ce	                            mov rsi, rcx	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4007eac	          0x4889c7	                            mov rdi, rax	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4007eaf	      0xe8f7edffff	                call sym.find_debug_info	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4007eb4	        0x488945d0	             mov qword [rbp - 0x30], rax	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4007eb8	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4007ebd	            0x75cb	                           jne 0x4007e8a	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4007ebf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x4007ec3	          0x4889c7	                            mov rdi, rax	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x4007ec6	      0xe800000000	                          call 0x4007ecb	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x4007ecb	          0x4889c2	                            mov rdx, rax	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x4007ece	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x4007ed2	        0x48895070	             mov qword [rax + 0x70], rdx	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x4007ed6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4007eda	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4007ede	          0x4885c0	                           test rax, rax	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4007ee1	            0x750a	                           jne 0x4007eed	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4007ee3	      0xb800000000	                              mov eax, 0	      4424	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4007ee8	      0xe905010000	                           jmp 0x4007ff2	      4424	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4007eed	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      4426	dwarf2.c	FUNCTION_66	ELSE_2
0x4007ef5	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4007ef9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4007efd	      0xba00000000	                              mov edx, 0	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4007f02	          0x4889ce	                            mov rsi, rcx	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4007f05	          0x4889c7	                            mov rdi, rax	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4007f08	      0xe89eedffff	                call sym.find_debug_info	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4007f0d	        0x488945d0	             mov qword [rbp - 0x30], rax	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4007f11	            0xeb79	                           jmp 0x4007f8c	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4007f13	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4433	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4007f17	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4433	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4007f1b	        0x488945f0	             mov qword [rbp - 0x10], rax	      4433	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4007f1f	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4434	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_17
0x4007f24	            0x744a	                            je 0x4007f70	      4434	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_17
0x4007f26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4438	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18
0x4007f2a	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      4438	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18
0x4007f2e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f32	        0x488d3c02	                    lea rdi, [rdx + rax]	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f36	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f3a	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f3e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f42	          0x4889d1	                            mov rcx, rdx	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f45	          0x4889fa	                            mov rdx, rdi	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f48	          0x4889c7	                            mov rdi, rax	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f4b	      0xe800000000	                          call 0x4007f50	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f50	          0x4885c0	                           test rax, rax	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f53	            0x750a	                           jne 0x4007f5f	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4007f55	      0xb800000000	                              mov eax, 0	      4440	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18
0x4007f5a	      0xe993000000	                           jmp 0x4007ff2	      4440	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18
0x4007f5f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4007f63	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4007f67	          0x4801d0	                            add rax, rdx	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4007f6a	        0x488945c8	             mov qword [rbp - 0x38], rax	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4007f6e	            0xeb01	                           jmp 0x4007f71	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4007f70	              0x90	                                     nop	      4435	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_17
0x4007f71	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4007f75	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4007f79	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4007f7d	          0x4889ce	                            mov rsi, rcx	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4007f80	          0x4889c7	                            mov rdi, rax	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4007f83	      0xe823edffff	                call sym.find_debug_info	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4007f88	        0x488945d0	             mov qword [rbp - 0x30], rax	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4007f8c	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4007f91	            0x7580	                           jne 0x4007f13	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4007f93	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4446	dwarf2.c	FUNCTION_66
0x4007f97	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      4446	dwarf2.c	FUNCTION_66
0x4007f9b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4446	dwarf2.c	FUNCTION_66
0x4007f9f	        0x48895018	             mov qword [rax + 0x18], rdx	      4446	dwarf2.c	FUNCTION_66
0x4007fa3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4447	dwarf2.c	FUNCTION_66
0x4007fa7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4447	dwarf2.c	FUNCTION_66
0x4007fab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4447	dwarf2.c	FUNCTION_66
0x4007faf	          0x4801c2	                            add rdx, rax	      4447	dwarf2.c	FUNCTION_66
0x4007fb2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4447	dwarf2.c	FUNCTION_66
0x4007fb6	        0x48895020	             mov qword [rax + 0x20], rdx	      4447	dwarf2.c	FUNCTION_66
0x4007fba	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4007fbe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4007fc2	      0xba00000000	                              mov edx, 0	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4007fc7	          0x4889ce	                            mov rsi, rcx	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4007fca	          0x4889c7	                            mov rdi, rax	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4007fcd	      0xe8d9ecffff	                call sym.find_debug_info	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4007fd2	          0x4889c2	                            mov rdx, rax	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4007fd5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4007fd9	        0x48895038	             mov qword [rax + 0x38], rdx	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4007fdd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4449	dwarf2.c	FUNCTION_66
0x4007fe1	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4449	dwarf2.c	FUNCTION_66
0x4007fe5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4449	dwarf2.c	FUNCTION_66
0x4007fe9	        0x48895040	             mov qword [rax + 0x40], rdx	      4449	dwarf2.c	FUNCTION_66
0x4007fed	      0xb801000000	                              mov eax, 1	      4450	dwarf2.c	FUNCTION_66
0x4007ff2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4451	dwarf2.c	FUNCTION_66
0x4007ff6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4451	dwarf2.c	FUNCTION_66
0x4007fff	            0x7405	                            je 0x4008006	      4451	dwarf2.c	FUNCTION_66
0x4008001	      0xe800000000	                          call 0x4008006	      4451	dwarf2.c	FUNCTION_66
0x4008006	              0xc9	                                   leave	      4451	dwarf2.c	FUNCTION_66
0x4008007	              0xc3	                                     ret	      4451	dwarf2.c	FUNCTION_66
comp_unit_contains_address	SWITCH,0:ELSE,0:CALL,0:IF,2:DO,1:WHILE,0:functions,0:FOR,0	31
0x400672a	              0x55	                                push rbp	      3559	dwarf2.c	FUNCTION_47
0x400672b	          0x4889e5	                            mov rbp, rsp	      3559	dwarf2.c	FUNCTION_47
0x400672e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3559	dwarf2.c	FUNCTION_47
0x4006732	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3559	dwarf2.c	FUNCTION_47
0x4006736	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3562	dwarf2.c	FUNCTION_47	IF_1
0x400673a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x400673d	            0x85c0	                           test eax, eax	      3562	dwarf2.c	FUNCTION_47	IF_1
0x400673f	            0x7407	                            je 0x4006748	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006741	      0xb800000000	                              mov eax, 0	      3563	dwarf2.c	FUNCTION_47	IF_1
0x4006746	            0xeb46	                           jmp 0x400678e	      3563	dwarf2.c	FUNCTION_47	IF_1
0x4006748	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3565	dwarf2.c	FUNCTION_47
0x400674c	        0x4883c018	                           add rax, 0x18	      3565	dwarf2.c	FUNCTION_47
0x4006750	        0x488945f8	                mov qword [rbp - 8], rax	      3565	dwarf2.c	FUNCTION_47
0x4006754	        0x488b45f8	                mov rax, qword [rbp - 8]	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4006758	        0x488b4008	                mov rax, qword [rax + 8]	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x400675c	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4006760	            0x7715	                            ja 0x4006777	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4006762	        0x488b45f8	                mov rax, qword [rbp - 8]	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4006766	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x400676a	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x400676e	            0x7607	                           jbe 0x4006777	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4006770	      0xb801000000	                              mov eax, 1	      3569	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4006775	            0xeb17	                           jmp 0x400678e	      3569	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4006777	        0x488b45f8	                mov rax, qword [rbp - 8]	      3570	dwarf2.c	FUNCTION_47	DO_1
0x400677b	          0x488b00	                    mov rax, qword [rax]	      3570	dwarf2.c	FUNCTION_47	DO_1
0x400677e	        0x488945f8	                mov qword [rbp - 8], rax	      3570	dwarf2.c	FUNCTION_47	DO_1
0x4006782	      0x48837df800	                  cmp qword [rbp - 8], 0	      3572	dwarf2.c	FUNCTION_47
0x4006787	            0x75cb	                           jne 0x4006754	      3572	dwarf2.c	FUNCTION_47
0x4006789	      0xb800000000	                              mov eax, 0	      3574	dwarf2.c	FUNCTION_47
0x400678e	              0x5d	                                 pop rbp	      3575	dwarf2.c	FUNCTION_47
0x400678f	              0xc3	                                     ret	      3575	dwarf2.c	FUNCTION_47
