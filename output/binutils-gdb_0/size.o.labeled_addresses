print_sysv_format	IF,6:DO,0:ELSE,0:FOR,0:CALL,13:SWITCH,0:functions,0:WHILE,0	104
0x4000ea8	              0x55	                                push rbp	       565	size.c	FUNCTION_14
0x4000ea9	          0x4889e5	                            mov rbp, rsp	       565	size.c	FUNCTION_14
0x4000eac	        0x4883ec10	                           sub rsp, 0x10	       565	size.c	FUNCTION_14
0x4000eb0	        0x48897df8	                mov qword [rbp - 8], rdi	       565	size.c	FUNCTION_14
0x4000eb4	    0x48c705000000	               mov qword [0x04000ebf], 0	       567	size.c	FUNCTION_14
0x4000ebf	    0x48c705000000	               mov qword [0x04000eca], 0	       568	size.c	FUNCTION_14
0x4000eca	    0xc70500000000	               mov dword [0x04000ed4], 0	       569	size.c	FUNCTION_14
0x4000ed4	        0x488b45f8	                mov rax, qword [rbp - 8]	       570	size.c	FUNCTION_14	CALL_1
0x4000ed8	      0xba00000000	                              mov edx, 0	       570	size.c	FUNCTION_14	CALL_1
0x4000edd	      0xbe00000000	                              mov esi, 0	       570	size.c	FUNCTION_14	CALL_1
0x4000ee2	          0x4889c7	                            mov rdi, rax	       570	size.c	FUNCTION_14	CALL_1
0x4000ee5	      0xe800000000	                          call 0x4000eea	       570	size.c	FUNCTION_14	CALL_1
0x4000eea	    0x8b0500000000	            mov eax, dword [0x04000ef0] 	       571	size.c	FUNCTION_14	IF_1
0x4000ef0	            0x85c0	                           test eax, eax	       571	size.c	FUNCTION_14	IF_1
0x4000ef2	            0x742d	                            je 0x4000f21	       571	size.c	FUNCTION_14	IF_1
0x4000ef4	    0x8b0500000000	            mov eax, dword [0x04000efa] 	       573	size.c	FUNCTION_14	IF_1	IF_2
0x4000efa	          0x83f804	                              cmp eax, 4	       573	size.c	FUNCTION_14	IF_1	IF_2
0x4000efd	            0x7f0a	                            jg 0x4000f09	       573	size.c	FUNCTION_14	IF_1	IF_2
0x4000eff	    0xc70500000000	               mov dword [0x04000f09], 5	       574	size.c	FUNCTION_14	IF_1	IF_2
0x4000f09	    0x488b15000000	            mov rdx, qword [0x04000f10] 	       575	size.c	FUNCTION_14	IF_1
0x4000f10	    0x488b05000000	            mov rax, qword [0x04000f17] 	       575	size.c	FUNCTION_14	IF_1
0x4000f17	          0x4801d0	                            add rax, rdx	       575	size.c	FUNCTION_14	IF_1
0x4000f1a	    0x488905000000	            mov qword [0x04000f21], rax 	       575	size.c	FUNCTION_14	IF_1
0x4000f21	    0x488b05000000	            mov rax, qword [0x04000f28] 	       578	size.c	FUNCTION_14	CALL_2
0x4000f28	          0x4889c7	                            mov rdi, rax	       578	size.c	FUNCTION_14	CALL_2
0x4000f2b	      0xe87bfaffff	                    call sym.size_number	       578	size.c	FUNCTION_14	CALL_2
0x4000f30	    0x890500000000	            mov dword [0x04000f36], eax 	       578	size.c	FUNCTION_14	CALL_2
0x4000f36	    0x8b0500000000	            mov eax, dword [0x04000f3c] 	       580	size.c	FUNCTION_14	IF_3
0x4000f3c	          0x83f803	                              cmp eax, 3	       580	size.c	FUNCTION_14	IF_3
0x4000f3f	            0x770a	                            ja 0x4000f4b	       580	size.c	FUNCTION_14	IF_3
0x4000f41	    0xc70500000000	               mov dword [0x04000f4b], 4	       581	size.c	FUNCTION_14	IF_3
0x4000f4b	    0x488b05000000	            mov rax, qword [0x04000f52] 	       583	size.c	FUNCTION_14	CALL_3
0x4000f52	          0x4889c7	                            mov rdi, rax	       583	size.c	FUNCTION_14	CALL_3
0x4000f55	      0xe851faffff	                    call sym.size_number	       583	size.c	FUNCTION_14	CALL_3
0x4000f5a	    0x890500000000	            mov dword [0x04000f60], eax 	       583	size.c	FUNCTION_14	CALL_3
0x4000f60	    0x8b0500000000	            mov eax, dword [0x04000f66] 	       584	size.c	FUNCTION_14	IF_4
0x4000f66	          0x83f803	                              cmp eax, 3	       584	size.c	FUNCTION_14	IF_4
0x4000f69	            0x770a	                            ja 0x4000f75	       584	size.c	FUNCTION_14	IF_4
0x4000f6b	    0xc70500000000	               mov dword [0x04000f75], 4	       585	size.c	FUNCTION_14	IF_4
0x4000f75	    0x48c705000000	               mov qword [0x04000f80], 0	       587	size.c	FUNCTION_14
0x4000f80	        0x488b45f8	                mov rax, qword [rbp - 8]	       588	size.c	FUNCTION_14	CALL_5
0x4000f84	          0x488b00	                    mov rax, qword [rax]	       588	size.c	FUNCTION_14	CALL_5
0x4000f87	          0x4889c6	                            mov rsi, rax	       588	size.c	FUNCTION_14	CALL_5
0x4000f8a	      0xbf00000000	                              mov edi, 0	       588	size.c	FUNCTION_14	CALL_5
0x4000f8f	      0xb800000000	                              mov eax, 0	       588	size.c	FUNCTION_14	CALL_5
0x4000f94	      0xe800000000	                          call 0x4000f99	       588	size.c	FUNCTION_14	CALL_5
0x4000f99	        0x488b45f8	                mov rax, qword [rbp - 8]	       590	size.c	FUNCTION_14	IF_5
0x4000f9d	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       590	size.c	FUNCTION_14	IF_5
0x4000fa4	          0x4885c0	                           test rax, rax	       590	size.c	FUNCTION_14	IF_5
0x4000fa7	            0x7420	                            je 0x4000fc9	       590	size.c	FUNCTION_14	IF_5
0x4000fa9	        0x488b45f8	                mov rax, qword [rbp - 8]	       591	size.c	FUNCTION_14	CALL_7
0x4000fad	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       591	size.c	FUNCTION_14	CALL_7
0x4000fb4	          0x488b00	                    mov rax, qword [rax]	       591	size.c	FUNCTION_14	CALL_7
0x4000fb7	          0x4889c6	                            mov rsi, rax	       591	size.c	FUNCTION_14	CALL_7
0x4000fba	      0xbf00000000	                              mov edi, 0	       591	size.c	FUNCTION_14	CALL_7
0x4000fbf	      0xb800000000	                              mov eax, 0	       591	size.c	FUNCTION_14	CALL_7
0x4000fc4	      0xe800000000	                          call 0x4000fc9	       591	size.c	FUNCTION_14	CALL_7
0x4000fc9	    0x8b0d00000000	            mov ecx, dword [0x04000fcf] 	       593	size.c	FUNCTION_14	CALL_8
0x4000fcf	    0x8b1500000000	            mov edx, dword [0x04000fd5] 	       593	size.c	FUNCTION_14	CALL_8
0x4000fd5	    0x8b0500000000	            mov eax, dword [0x04000fdb] 	       593	size.c	FUNCTION_14	CALL_8
0x4000fdb	        0x4883ec08	                              sub rsp, 8	       593	size.c	FUNCTION_14	CALL_8
0x4000fdf	      0x6800000000	                                  push 0	       593	size.c	FUNCTION_14	CALL_8
0x4000fe4	          0x4189c9	                            mov r9d, ecx	       593	size.c	FUNCTION_14	CALL_8
0x4000fe7	    0x41b800000000	                              mov r8d, 0	       593	size.c	FUNCTION_14	CALL_8
0x4000fed	            0x89d1	                            mov ecx, edx	       593	size.c	FUNCTION_14	CALL_8
0x4000fef	      0xba00000000	                              mov edx, 0	       593	size.c	FUNCTION_14	CALL_8
0x4000ff4	            0x89c6	                            mov esi, eax	       593	size.c	FUNCTION_14	CALL_8
0x4000ff6	      0xbf00000000	                              mov edi, 0	       593	size.c	FUNCTION_14	CALL_8
0x4000ffb	      0xb800000000	                              mov eax, 0	       593	size.c	FUNCTION_14	CALL_8
0x4001000	      0xe800000000	                          call 0x4001005	       593	size.c	FUNCTION_14	CALL_8
0x4001005	        0x4883c410	                           add rsp, 0x10	       593	size.c	FUNCTION_14	CALL_8
0x4001009	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	size.c	FUNCTION_14	CALL_9
0x400100d	      0xba00000000	                              mov edx, 0	       596	size.c	FUNCTION_14	CALL_9
0x4001012	      0xbe00000000	                              mov esi, 0	       596	size.c	FUNCTION_14	CALL_9
0x4001017	          0x4889c7	                            mov rdi, rax	       596	size.c	FUNCTION_14	CALL_9
0x400101a	      0xe800000000	                          call 0x400101f	       596	size.c	FUNCTION_14	CALL_9
0x400101f	    0x8b0500000000	            mov eax, dword [0x04001025] 	       597	size.c	FUNCTION_14	IF_6
0x4001025	            0x85c0	                           test eax, eax	       597	size.c	FUNCTION_14	IF_6
0x4001027	            0x7431	                            je 0x400105a	       597	size.c	FUNCTION_14	IF_6
0x4001029	    0x488b15000000	            mov rdx, qword [0x04001030] 	       599	size.c	FUNCTION_14	IF_6
0x4001030	    0x488b05000000	            mov rax, qword [0x04001037] 	       599	size.c	FUNCTION_14	IF_6
0x4001037	          0x4801d0	                            add rax, rdx	       599	size.c	FUNCTION_14	IF_6
0x400103a	    0x488905000000	            mov qword [0x04001041], rax 	       599	size.c	FUNCTION_14	IF_6
0x4001041	    0x488b05000000	            mov rax, qword [0x04001048] 	       600	size.c	FUNCTION_14	IF_6	CALL_10
0x4001048	      0xba00000000	                              mov edx, 0	       600	size.c	FUNCTION_14	IF_6	CALL_10
0x400104d	          0x4889c6	                            mov rsi, rax	       600	size.c	FUNCTION_14	IF_6	CALL_10
0x4001050	      0xbf00000000	                              mov edi, 0	       600	size.c	FUNCTION_14	IF_6	CALL_10
0x4001055	      0xe861fdffff	                  call sym.sysv_one_line	       600	size.c	FUNCTION_14	IF_6	CALL_10
0x400105a	    0x8b0500000000	            mov eax, dword [0x04001060] 	       603	size.c	FUNCTION_14	CALL_11
0x4001060	      0xba00000000	                              mov edx, 0	       603	size.c	FUNCTION_14	CALL_11
0x4001065	            0x89c6	                            mov esi, eax	       603	size.c	FUNCTION_14	CALL_11
0x4001067	      0xbf00000000	                              mov edi, 0	       603	size.c	FUNCTION_14	CALL_11
0x400106c	      0xb800000000	                              mov eax, 0	       603	size.c	FUNCTION_14	CALL_11
0x4001071	      0xe800000000	                          call 0x4001076	       603	size.c	FUNCTION_14	CALL_11
0x4001076	    0x488b15000000	            mov rdx, qword [0x0400107d] 	       604	size.c	FUNCTION_14	CALL_12
0x400107d	    0x8b0500000000	            mov eax, dword [0x04001083] 	       604	size.c	FUNCTION_14	CALL_12
0x4001083	          0x4889d6	                            mov rsi, rdx	       604	size.c	FUNCTION_14	CALL_12
0x4001086	            0x89c7	                            mov edi, eax	       604	size.c	FUNCTION_14	CALL_12
0x4001088	      0xe89bf9ffff	                  call sym.rprint_number	       604	size.c	FUNCTION_14	CALL_12
0x400108d	      0xbf00000000	                              mov edi, 0	       605	size.c	FUNCTION_14	CALL_13
0x4001092	      0xe800000000	                          call 0x4001097	       605	size.c	FUNCTION_14	CALL_13
0x4001097	              0x90	                                     nop	       606	size.c	FUNCTION_14
0x4001098	              0xc9	                                   leave	       606	size.c	FUNCTION_14
0x4001099	              0xc3	                                     ret	       606	size.c	FUNCTION_14
sysv_one_line	IF,0:DO,0:ELSE,0:FOR,0:CALL,5:SWITCH,0:functions,0:WHILE,0	30
0x4000dbb	              0x55	                                push rbp	       537	size.c	FUNCTION_12
0x4000dbc	          0x4889e5	                            mov rbp, rsp	       537	size.c	FUNCTION_12
0x4000dbf	        0x4883ec20	                           sub rsp, 0x20	       537	size.c	FUNCTION_12
0x4000dc3	        0x48897df8	                mov qword [rbp - 8], rdi	       537	size.c	FUNCTION_12
0x4000dc7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       537	size.c	FUNCTION_12
0x4000dcb	        0x488955e8	             mov qword [rbp - 0x18], rdx	       537	size.c	FUNCTION_12
0x4000dcf	    0x8b0500000000	            mov eax, dword [0x04000dd5] 	       538	size.c	FUNCTION_12	CALL_1
0x4000dd5	        0x488b55f8	                mov rdx, qword [rbp - 8]	       538	size.c	FUNCTION_12	CALL_1
0x4000dd9	            0x89c6	                            mov esi, eax	       538	size.c	FUNCTION_12	CALL_1
0x4000ddb	      0xbf00000000	                              mov edi, 0	       538	size.c	FUNCTION_12	CALL_1
0x4000de0	      0xb800000000	                              mov eax, 0	       538	size.c	FUNCTION_12	CALL_1
0x4000de5	      0xe800000000	                          call 0x4000dea	       538	size.c	FUNCTION_12	CALL_1
0x4000dea	    0x8b0500000000	            mov eax, dword [0x04000df0] 	       539	size.c	FUNCTION_12	CALL_2
0x4000df0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       539	size.c	FUNCTION_12	CALL_2
0x4000df4	          0x4889d6	                            mov rsi, rdx	       539	size.c	FUNCTION_12	CALL_2
0x4000df7	            0x89c7	                            mov edi, eax	       539	size.c	FUNCTION_12	CALL_2
0x4000df9	      0xe82afcffff	                  call sym.rprint_number	       539	size.c	FUNCTION_12	CALL_2
0x4000dfe	      0xbf00000000	                              mov edi, 0	       540	size.c	FUNCTION_12	CALL_3
0x4000e03	      0xb800000000	                              mov eax, 0	       540	size.c	FUNCTION_12	CALL_3
0x4000e08	      0xe800000000	                          call 0x4000e0d	       540	size.c	FUNCTION_12	CALL_3
0x4000e0d	    0x8b0500000000	            mov eax, dword [0x04000e13] 	       541	size.c	FUNCTION_12	CALL_4
0x4000e13	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       541	size.c	FUNCTION_12	CALL_4
0x4000e17	          0x4889d6	                            mov rsi, rdx	       541	size.c	FUNCTION_12	CALL_4
0x4000e1a	            0x89c7	                            mov edi, eax	       541	size.c	FUNCTION_12	CALL_4
0x4000e1c	      0xe807fcffff	                  call sym.rprint_number	       541	size.c	FUNCTION_12	CALL_4
0x4000e21	      0xbf0a000000	                            mov edi, 0xa	       542	size.c	FUNCTION_12	CALL_5
0x4000e26	      0xe800000000	                          call 0x4000e2b	       542	size.c	FUNCTION_12	CALL_5
0x4000e2b	              0x90	                                     nop	       543	size.c	FUNCTION_12
0x4000e2c	              0xc9	                                   leave	       543	size.c	FUNCTION_12
0x4000e2d	              0xc3	                                     ret	       543	size.c	FUNCTION_12
main	IF,4:DO,0:ELSE,1:FOR,1:CALL,30:SWITCH,3:functions,0:WHILE,1	255
0x4000138	              0x55	                                push rbp	       121	size.c	FOR_1	FUNCTION_2
0x4000139	          0x4889e5	                            mov rbp, rsp	       121	size.c	FOR_1	FUNCTION_2
0x400013c	              0x53	                                push rbx	       121	size.c	FOR_1	FUNCTION_2
0x400013d	        0x4883ec28	                           sub rsp, 0x28	       121	size.c	FOR_1	FUNCTION_2
0x4000141	          0x897ddc	             mov dword [rbp - 0x24], edi	       121	size.c	FOR_1	FUNCTION_2
0x4000144	        0x488975d0	             mov qword [rbp - 0x30], rsi	       121	size.c	FOR_1	FUNCTION_2
0x4000148	      0xbe00000000	                              mov esi, 0	       126	size.c	FOR_1	FUNCTION_2	CALL_1
0x400014d	      0xbf05000000	                              mov edi, 5	       126	size.c	FOR_1	FUNCTION_2	CALL_1
0x4000152	      0xe800000000	                          call 0x4000157	       126	size.c	FOR_1	FUNCTION_2	CALL_1
0x4000157	      0xbe00000000	                              mov esi, 0	       129	size.c	FOR_1	FUNCTION_2	CALL_2
0x400015c	      0xbf00000000	                              mov edi, 0	       129	size.c	FOR_1	FUNCTION_2	CALL_2
0x4000161	      0xe800000000	                          call 0x4000166	       129	size.c	FOR_1	FUNCTION_2	CALL_2
0x4000166	      0xbe00000000	                              mov esi, 0	       131	size.c	FOR_1	FUNCTION_2	CALL_3
0x400016b	      0xbf00000000	                              mov edi, 0	       131	size.c	FOR_1	FUNCTION_2	CALL_3
0x4000170	      0xe800000000	                          call 0x4000175	       131	size.c	FOR_1	FUNCTION_2	CALL_3
0x4000175	      0xbf00000000	                              mov edi, 0	       132	size.c	FOR_1	FUNCTION_2	CALL_4
0x400017a	      0xe800000000	                          call 0x400017f	       132	size.c	FOR_1	FUNCTION_2	CALL_4
0x400017f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       134	size.c	FOR_1	FUNCTION_2
0x4000183	          0x488b00	                    mov rax, qword [rax]	       134	size.c	FOR_1	FUNCTION_2
0x4000186	    0x488905000000	            mov qword [0x0400018d], rax 	       134	size.c	FOR_1	FUNCTION_2
0x400018d	    0x488b05000000	            mov rax, qword [0x04000194] 	       135	size.c	FOR_1	FUNCTION_2	CALL_5
0x4000194	          0x4889c7	                            mov rdi, rax	       135	size.c	FOR_1	FUNCTION_2	CALL_5
0x4000197	      0xe800000000	                          call 0x400019c	       135	size.c	FOR_1	FUNCTION_2	CALL_5
0x400019c	    0x488b05000000	            mov rax, qword [0x040001a3] 	       136	size.c	FOR_1	FUNCTION_2	CALL_6
0x40001a3	          0x4889c7	                            mov rdi, rax	       136	size.c	FOR_1	FUNCTION_2	CALL_6
0x40001a6	      0xe800000000	                          call 0x40001ab	       136	size.c	FOR_1	FUNCTION_2	CALL_6
0x40001ab	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       138	size.c	FOR_1	FUNCTION_2	CALL_7
0x40001af	        0x488d45dc	                   lea rax, [rbp - 0x24]	       138	size.c	FOR_1	FUNCTION_2	CALL_7
0x40001b3	          0x4889d6	                            mov rsi, rdx	       138	size.c	FOR_1	FUNCTION_2	CALL_7
0x40001b6	          0x4889c7	                            mov rdi, rax	       138	size.c	FOR_1	FUNCTION_2	CALL_7
0x40001b9	      0xe800000000	                          call 0x40001be	       138	size.c	FOR_1	FUNCTION_2	CALL_7
0x40001be	      0xe800000000	                          call 0x40001c3	       140	size.c	FOR_1	FUNCTION_2	CALL_8
0x40001c3	      0xe800000000	                          call 0x40001c8	       141	size.c	FOR_1	FUNCTION_2	CALL_9
0x40001c8	      0xe935020000	                           jmp 0x4000402	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x40001cd	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001d0	          0x83f866	                           cmp eax, 0x66	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001d3	     0xf8429020000	                            je 0x4000402	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001d9	          0x83f866	                           cmp eax, 0x66	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001dc	            0x7f47	                            jg 0x4000225	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001de	          0x83f842	                           cmp eax, 0x42	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001e1	     0xf84bf010000	                            je 0x40003a6	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001e7	          0x83f842	                           cmp eax, 0x42	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001ea	            0x7f19	                            jg 0x4000205	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001ec	          0x83f83f	                           cmp eax, 0x3f	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001ef	     0xf84f9010000	                            je 0x40003ee	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001f5	          0x83f841	                           cmp eax, 0x41	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001f8	     0xf849c010000	                            je 0x400039a	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40001fe	            0x85c0	                           test eax, eax	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000200	      0xe9fd010000	                           jmp 0x4000402	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000205	          0x83f856	                           cmp eax, 0x56	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000208	     0xf84a4010000	                            je 0x40003b2	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400020e	          0x83f864	                           cmp eax, 0x64	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000211	     0xf84a7010000	                            je 0x40003be	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000217	          0x83f848	                           cmp eax, 0x48	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400021a	     0xf84ce010000	                            je 0x40003ee	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000220	      0xe9dd010000	                           jmp 0x4000402	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000225	          0x83f876	                           cmp eax, 0x76	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000228	     0xf8484010000	                            je 0x40003b2	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400022e	          0x83f876	                           cmp eax, 0x76	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000231	            0x7f20	                            jg 0x4000253	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000233	          0x83f86f	                           cmp eax, 0x6f	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000236	     0xf849a010000	                            je 0x40003d6	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400023c	          0x83f874	                           cmp eax, 0x74	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400023f	     0xf849d010000	                            je 0x40003e2	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000245	          0x83f868	                           cmp eax, 0x68	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000248	     0xf84a0010000	                            je 0x40003ee	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400024e	      0xe9af010000	                           jmp 0x4000402	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000253	      0x3dc8000000	                           cmp eax, 0xc8	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000258	            0x7430	                            je 0x400028a	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400025a	      0x3dc8000000	                           cmp eax, 0xc8	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400025f	            0x7f0e	                            jg 0x400026f	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000261	          0x83f878	                           cmp eax, 0x78	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000264	     0xf8460010000	                            je 0x40003ca	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400026a	      0xe993010000	                           jmp 0x4000402	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400026f	      0x3dc9000000	                           cmp eax, 0xc9	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000274	     0xf849f000000	                            je 0x4000319	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400027a	      0x3dca000000	                           cmp eax, 0xca	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400027f	     0xf8481000000	                            je 0x4000306	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000285	      0xe978010000	                           jmp 0x4000402	       145	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400028a	    0x488b05000000	            mov rax, qword [0x04000291] 	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x4000291	           0xfb600	                   movzx eax, byte [rax]	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x4000294	           0xfbec0	                           movsx eax, al	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x4000297	          0x83f853	                           cmp eax, 0x53	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x400029a	            0x7424	                            je 0x40002c0	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x400029c	          0x83f853	                           cmp eax, 0x53	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x400029f	            0x7f07	                            jg 0x40002a8	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002a1	          0x83f842	                           cmp eax, 0x42	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002a4	            0x740e	                            je 0x40002b4	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002a6	            0xeb24	                           jmp 0x40002cc	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002a8	          0x83f862	                           cmp eax, 0x62	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002ab	            0x7407	                            je 0x40002b4	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002ad	          0x83f873	                           cmp eax, 0x73	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002b0	            0x740e	                            je 0x40002c0	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002b2	            0xeb18	                           jmp 0x40002cc	       148	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002b4	    0xc70500000000	               mov dword [0x040002be], 1	       152	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002be	            0xeb41	                           jmp 0x4000301	       153	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002c0	    0xc70500000000	               mov dword [0x040002ca], 0	       156	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002ca	            0xeb35	                           jmp 0x4000301	       157	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2
0x40002cc	    0x488b1d000000	            mov rbx, qword [0x040002d3] 	       159	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40002d3	      0xbf00000000	                              mov edi, 0	       159	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40002d8	      0xe800000000	                          call 0x40002dd	       159	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40002dd	          0x4889de	                            mov rsi, rbx	       159	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40002e0	          0x4889c7	                            mov rdi, rax	       159	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40002e3	      0xb800000000	                              mov eax, 0	       159	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40002e8	      0xe800000000	                          call 0x40002ed	       159	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40002ed	    0x488b05000000	            mov rax, qword [0x040002f4] 	       160	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_13
0x40002f4	      0xbe01000000	                              mov esi, 1	       160	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_13
0x40002f9	          0x4889c7	                            mov rdi, rax	       160	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_13
0x40002fc	      0xe83ffdffff	                          call sym.usage	       160	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_2	CALL_13
0x4000301	      0xe9fc000000	                           jmp 0x4000402	       162	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000306	    0x488b05000000	            mov rax, qword [0x0400030d] 	       165	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400030d	    0x488905000000	            mov qword [0x04000314], rax 	       165	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000314	      0xe9e9000000	                           jmp 0x4000402	       166	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000319	    0x488b05000000	            mov rax, qword [0x04000320] 	       172	size.c	FUNCTION_2	WHILE_1	SWITCH_1	CALL_15
0x4000320	          0x4889c7	                            mov rdi, rax	       172	size.c	FUNCTION_2	WHILE_1	SWITCH_1	CALL_15
0x4000323	      0xe800000000	                          call 0x4000328	       172	size.c	FUNCTION_2	WHILE_1	SWITCH_1	CALL_15
0x4000328	          0x8945e4	             mov dword [rbp - 0x1c], eax	       172	size.c	FUNCTION_2	WHILE_1	SWITCH_1	CALL_15
0x400032b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       174	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x400032e	          0x83f80a	                            cmp eax, 0xa	       174	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x4000331	            0x740c	                            je 0x400033f	       174	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x4000333	          0x83f810	                           cmp eax, 0x10	       174	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x4000336	            0x741f	                            je 0x4000357	       174	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x4000338	          0x83f808	                              cmp eax, 8	       174	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x400033b	            0x740e	                            je 0x400034b	       174	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x400033d	            0xeb24	                           jmp 0x4000363	       174	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x400033f	    0xc70500000000	               mov dword [0x04000349], 0	       177	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x4000349	            0xeb4d	                           jmp 0x4000398	       178	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x400034b	    0xc70500000000	               mov dword [0x04000355], 1	       180	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x4000355	            0xeb41	                           jmp 0x4000398	       181	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x4000357	    0xc70500000000	               mov dword [0x04000361], 2	       183	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x4000361	            0xeb35	                           jmp 0x4000398	       184	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3
0x4000363	    0x488b1d000000	            mov rbx, qword [0x0400036a] 	       186	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400036a	      0xbf00000000	                              mov edi, 0	       186	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400036f	      0xe800000000	                          call 0x4000374	       186	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4000374	          0x4889de	                            mov rsi, rbx	       186	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4000377	          0x4889c7	                            mov rdi, rax	       186	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400037a	      0xb800000000	                              mov eax, 0	       186	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400037f	      0xe800000000	                          call 0x4000384	       186	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4000384	    0x488b05000000	            mov rax, qword [0x0400038b] 	       187	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x400038b	      0xbe01000000	                              mov esi, 1	       187	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x4000390	          0x4889c7	                            mov rdi, rax	       187	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x4000393	      0xe8a8fcffff	                          call sym.usage	       187	size.c	FUNCTION_2	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x4000398	            0xeb68	                           jmp 0x4000402	       189	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400039a	    0xc70500000000	               mov dword [0x040003a4], 0	       192	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003a4	            0xeb5c	                           jmp 0x4000402	       193	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003a6	    0xc70500000000	               mov dword [0x040003b0], 1	       195	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003b0	            0xeb50	                           jmp 0x4000402	       196	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003b2	    0xc70500000000	               mov dword [0x040003bc], 1	       199	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003bc	            0xeb44	                           jmp 0x4000402	       200	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003be	    0xc70500000000	               mov dword [0x040003c8], 0	       202	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003c8	            0xeb38	                           jmp 0x4000402	       203	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003ca	    0xc70500000000	               mov dword [0x040003d4], 2	       205	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003d4	            0xeb2c	                           jmp 0x4000402	       206	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003d6	    0xc70500000000	               mov dword [0x040003e0], 1	       208	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003e0	            0xeb20	                           jmp 0x4000402	       209	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003e2	    0xc70500000000	               mov dword [0x040003ec], 1	       211	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003ec	            0xeb14	                           jmp 0x4000402	       212	size.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40003ee	    0x488b05000000	            mov rax, qword [0x040003f5] 	       228	size.c	FUNCTION_2	WHILE_1	SWITCH_1	CALL_19
0x40003f5	      0xbe01000000	                              mov esi, 1	       228	size.c	FUNCTION_2	WHILE_1	SWITCH_1	CALL_19
0x40003fa	          0x4889c7	                            mov rdi, rax	       228	size.c	FUNCTION_2	WHILE_1	SWITCH_1	CALL_19
0x40003fd	      0xe83efcffff	                          call sym.usage	       228	size.c	FUNCTION_2	WHILE_1	SWITCH_1	CALL_19
0x4000402	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x4000406	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x4000409	    0x41b800000000	                              mov r8d, 0	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x400040f	      0xb900000000	                              mov ecx, 0	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x4000414	      0xba00000000	                              mov edx, 0	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x4000419	            0x89c7	                            mov edi, eax	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x400041b	      0xe800000000	                          call 0x4000420	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x4000420	          0x8945e0	             mov dword [rbp - 0x20], eax	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x4000423	        0x837de0ff	cmp dword [rbp - 0x20], 0xffffffffffffffff	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x4000427	     0xf85a0fdffff	                           jne 0x40001cd	       143	size.c	FUNCTION_2	WHILE_1	CALL_10
0x400042d	    0x8b0500000000	            mov eax, dword [0x04000433] 	       231	size.c	FUNCTION_2	IF_1
0x4000433	            0x85c0	                           test eax, eax	       231	size.c	FUNCTION_2	IF_1
0x4000435	            0x740a	                            je 0x4000441	       231	size.c	FUNCTION_2	IF_1
0x4000437	      0xbf00000000	                              mov edi, 0	       232	size.c	FUNCTION_2	CALL_20
0x400043c	      0xe800000000	                          call 0x4000441	       232	size.c	FUNCTION_2	CALL_20
0x4000441	    0x8b0500000000	            mov eax, dword [0x04000447] 	       233	size.c	FUNCTION_2	IF_2
0x4000447	            0x85c0	                           test eax, eax	       233	size.c	FUNCTION_2	IF_2
0x4000449	            0x7414	                            je 0x400045f	       233	size.c	FUNCTION_2	IF_2
0x400044b	    0x488b05000000	            mov rax, qword [0x04000452] 	       234	size.c	FUNCTION_2	CALL_21
0x4000452	      0xbe00000000	                              mov esi, 0	       234	size.c	FUNCTION_2	CALL_21
0x4000457	          0x4889c7	                            mov rdi, rax	       234	size.c	FUNCTION_2	CALL_21
0x400045a	      0xe8e1fbffff	                          call sym.usage	       234	size.c	FUNCTION_2	CALL_21
0x400045f	    0x8b1500000000	            mov edx, dword [0x04000465] 	       236	size.c	FUNCTION_2	IF_3
0x4000465	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       236	size.c	FUNCTION_2	IF_3
0x4000468	            0x39c2	                            cmp edx, eax	       236	size.c	FUNCTION_2	IF_3
0x400046a	            0x7533	                           jne 0x400049f	       236	size.c	FUNCTION_2	IF_3
0x400046c	      0xbf00000000	                              mov edi, 0	       237	size.c	FUNCTION_2	CALL_22
0x4000471	      0xe878040000	                   call sym.display_file	       237	size.c	FUNCTION_2	CALL_22
0x4000476	            0xeb34	                           jmp 0x40004ac	       237	size.c	FUNCTION_2	CALL_22
0x4000478	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       240	size.c	FUNCTION_2	ELSE_1	FOR_1
0x400047c	    0x8b0500000000	            mov eax, dword [0x04000482] 	       240	size.c	FUNCTION_2	ELSE_1	FOR_1
0x4000482	          0x8d5001	                      lea edx, [rax + 1]	       240	size.c	FUNCTION_2	ELSE_1	FOR_1
0x4000485	    0x891500000000	            mov dword [0x0400048b], edx 	       240	size.c	FUNCTION_2	ELSE_1	FOR_1
0x400048b	            0x4898	                                    cdqe	       240	size.c	FUNCTION_2	ELSE_1	FOR_1
0x400048d	        0x48c1e003	                              shl rax, 3	       240	size.c	FUNCTION_2	ELSE_1	FOR_1
0x4000491	          0x4801c8	                            add rax, rcx	       240	size.c	FUNCTION_2	ELSE_1	FOR_1
0x4000494	          0x488b00	                    mov rax, qword [rax]	       240	size.c	FUNCTION_2	ELSE_1	FOR_1
0x4000497	          0x4889c7	                            mov rdi, rax	       240	size.c	FUNCTION_2	ELSE_1	FOR_1
0x400049a	      0xe84f040000	                   call sym.display_file	       240	size.c	FUNCTION_2	ELSE_1	FOR_1
0x400049f	    0x8b1500000000	            mov edx, dword [0x040004a5] 	       239	size.c	FUNCTION_2	ELSE_1	FOR_1
0x40004a5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       239	size.c	FUNCTION_2	ELSE_1	FOR_1
0x40004a8	            0x39c2	                            cmp edx, eax	       239	size.c	FUNCTION_2	ELSE_1	FOR_1
0x40004aa	            0x7ccc	                            jl 0x4000478	       239	size.c	FUNCTION_2	ELSE_1	FOR_1
0x40004ac	    0x8b0500000000	            mov eax, dword [0x040004b2] 	       242	size.c	FUNCTION_2	IF_4
0x40004b2	            0x85c0	                           test eax, eax	       242	size.c	FUNCTION_2	IF_4
0x40004b4	     0xf84ca000000	                            je 0x4000584	       242	size.c	FUNCTION_2	IF_4
0x40004ba	    0x8b0500000000	            mov eax, dword [0x040004c0] 	       242	size.c	FUNCTION_2	IF_4
0x40004c0	            0x85c0	                           test eax, eax	       242	size.c	FUNCTION_2	IF_4
0x40004c2	     0xf84bc000000	                            je 0x4000584	       242	size.c	FUNCTION_2	IF_4
0x40004c8	    0x488b15000000	            mov rdx, qword [0x040004cf] 	       244	size.c	FUNCTION_2	IF_4
0x40004cf	    0x488b05000000	            mov rax, qword [0x040004d6] 	       244	size.c	FUNCTION_2	IF_4
0x40004d6	          0x4801c2	                            add rdx, rax	       244	size.c	FUNCTION_2	IF_4
0x40004d9	    0x488b05000000	            mov rax, qword [0x040004e0] 	       244	size.c	FUNCTION_2	IF_4
0x40004e0	          0x4801d0	                            add rax, rdx	       244	size.c	FUNCTION_2	IF_4
0x40004e3	        0x488945e8	             mov qword [rbp - 0x18], rax	       244	size.c	FUNCTION_2	IF_4
0x40004e7	    0x488b05000000	            mov rax, qword [0x040004ee] 	       246	size.c	FUNCTION_2	IF_4	CALL_24
0x40004ee	          0x4889c6	                            mov rsi, rax	       246	size.c	FUNCTION_2	IF_4	CALL_24
0x40004f1	      0xbf07000000	                              mov edi, 7	       246	size.c	FUNCTION_2	IF_4	CALL_24
0x40004f6	      0xe82d050000	                  call sym.rprint_number	       246	size.c	FUNCTION_2	IF_4	CALL_24
0x40004fb	      0xbf09000000	                              mov edi, 9	       247	size.c	FUNCTION_2	IF_4	CALL_25
0x4000500	      0xe800000000	                          call 0x4000505	       247	size.c	FUNCTION_2	IF_4	CALL_25
0x4000505	    0x488b05000000	            mov rax, qword [0x0400050c] 	       248	size.c	FUNCTION_2	IF_4	CALL_26
0x400050c	          0x4889c6	                            mov rsi, rax	       248	size.c	FUNCTION_2	IF_4	CALL_26
0x400050f	      0xbf07000000	                              mov edi, 7	       248	size.c	FUNCTION_2	IF_4	CALL_26
0x4000514	      0xe80f050000	                  call sym.rprint_number	       248	size.c	FUNCTION_2	IF_4	CALL_26
0x4000519	      0xbf09000000	                              mov edi, 9	       249	size.c	FUNCTION_2	IF_4	CALL_27
0x400051e	      0xe800000000	                          call 0x4000523	       249	size.c	FUNCTION_2	IF_4	CALL_27
0x4000523	    0x488b05000000	            mov rax, qword [0x0400052a] 	       250	size.c	FUNCTION_2	IF_4	CALL_28
0x400052a	          0x4889c6	                            mov rsi, rax	       250	size.c	FUNCTION_2	IF_4	CALL_28
0x400052d	      0xbf07000000	                              mov edi, 7	       250	size.c	FUNCTION_2	IF_4	CALL_28
0x4000532	      0xe8f1040000	                  call sym.rprint_number	       250	size.c	FUNCTION_2	IF_4	CALL_28
0x4000537	    0x8b0500000000	            mov eax, dword [0x0400053d] 	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x400053d	          0x83f801	                              cmp eax, 1	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x4000540	            0x7507	                           jne 0x4000549	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x4000542	      0xb900000000	                              mov ecx, 0	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x4000547	            0xeb05	                           jmp 0x400054e	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x4000549	      0xb900000000	                              mov ecx, 0	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x400054e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x4000552	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x4000556	          0x4889c6	                            mov rsi, rax	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x4000559	          0x4889cf	                            mov rdi, rcx	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x400055c	      0xb800000000	                              mov eax, 0	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x4000561	      0xe800000000	                          call 0x4000566	       251	size.c	FUNCTION_2	IF_4	CALL_29
0x4000566	    0x488b05000000	            mov rax, qword [0x0400056d] 	       253	size.c	FUNCTION_2	IF_4	CALL_30
0x400056d	          0x4889c1	                            mov rcx, rax	       253	size.c	FUNCTION_2	IF_4	CALL_30
0x4000570	      0xba09000000	                              mov edx, 9	       253	size.c	FUNCTION_2	IF_4	CALL_30
0x4000575	      0xbe01000000	                              mov esi, 1	       253	size.c	FUNCTION_2	IF_4	CALL_30
0x400057a	      0xbf00000000	                              mov edi, 0	       253	size.c	FUNCTION_2	IF_4	CALL_30
0x400057f	      0xe800000000	                          call 0x4000584	       253	size.c	FUNCTION_2	IF_4	CALL_30
0x4000584	    0x8b0500000000	            mov eax, dword [0x0400058a] 	       256	size.c	FUNCTION_2
0x400058a	        0x4883c428	                           add rsp, 0x28	       257	size.c	FUNCTION_2
0x400058e	              0x5b	                                 pop rbx	       257	size.c	FUNCTION_2
0x400058f	              0x5d	                                 pop rbp	       257	size.c	FUNCTION_2
0x4000590	              0xc3	                                     ret	       257	size.c	FUNCTION_2
display_archive	IF,5:DO,0:ELSE,0:FOR,1:CALL,8:SWITCH,0:functions,0:WHILE,0	49
0x4000839	              0x55	                                push rbp	       347	size.c	FUNCTION_5
0x400083a	          0x4889e5	                            mov rbp, rsp	       347	size.c	FUNCTION_5
0x400083d	        0x4883ec20	                           sub rsp, 0x20	       347	size.c	FUNCTION_5
0x4000841	        0x48897de8	             mov qword [rbp - 0x18], rdi	       347	size.c	FUNCTION_5
0x4000845	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       348	size.c	FUNCTION_5
0x400084d	    0x48c745f80000	                  mov qword [rbp - 8], 0	       349	size.c	FUNCTION_5
0x4000855	      0xbf00000000	                              mov edi, 0	       353	size.c	FUNCTION_5	FOR_1	CALL_1
0x400085a	      0xe800000000	                          call 0x400085f	       353	size.c	FUNCTION_5	FOR_1	CALL_1
0x400085f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       355	size.c	FUNCTION_5	FOR_1	CALL_2
0x4000863	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       355	size.c	FUNCTION_5	FOR_1	CALL_2
0x4000867	          0x4889d6	                            mov rsi, rdx	       355	size.c	FUNCTION_5	FOR_1	CALL_2
0x400086a	          0x4889c7	                            mov rdi, rax	       355	size.c	FUNCTION_5	FOR_1	CALL_2
0x400086d	      0xe800000000	                          call 0x4000872	       355	size.c	FUNCTION_5	FOR_1	CALL_2
0x4000872	        0x488945f0	             mov qword [rbp - 0x10], rax	       355	size.c	FUNCTION_5	FOR_1	CALL_2
0x4000876	      0x48837df000	               cmp qword [rbp - 0x10], 0	       356	size.c	FUNCTION_5	FOR_1	IF_1
0x400087b	            0x7525	                           jne 0x40008a2	       356	size.c	FUNCTION_5	FOR_1	IF_1
0x400087d	      0xe800000000	                          call 0x4000882	       358	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000882	          0x83f809	                              cmp eax, 9	       358	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000885	            0x744e	                            je 0x40008d5	       358	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000887	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       360	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x400088b	          0x488b00	                    mov rax, qword [rax]	       360	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x400088e	          0x4889c7	                            mov rdi, rax	       360	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000891	      0xe800000000	                          call 0x4000896	       360	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000896	    0xc70500000000	               mov dword [0x040008a0], 2	       361	size.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x40008a0	            0xeb33	                           jmp 0x40008d5	       363	size.c	FUNCTION_5	FOR_1	IF_1
0x40008a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       366	size.c	FUNCTION_5	FOR_1	CALL_6
0x40008a6	          0x4889c7	                            mov rdi, rax	       366	size.c	FUNCTION_5	FOR_1	CALL_6
0x40008a9	      0xe813feffff	                    call sym.display_bfd	       366	size.c	FUNCTION_5	FOR_1	CALL_6
0x40008ae	      0x48837df800	                  cmp qword [rbp - 8], 0	       368	size.c	FUNCTION_5	FOR_1	IF_3
0x40008b3	            0x7416	                            je 0x40008cb	       368	size.c	FUNCTION_5	FOR_1	IF_3
0x40008b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	size.c	FUNCTION_5	FOR_1	IF_3	CALL_7
0x40008b9	          0x4889c7	                            mov rdi, rax	       370	size.c	FUNCTION_5	FOR_1	IF_3	CALL_7
0x40008bc	      0xe800000000	                          call 0x40008c1	       370	size.c	FUNCTION_5	FOR_1	IF_3	CALL_7
0x40008c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	size.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x40008c5	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       373	size.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x40008c9	            0x7420	                            je 0x40008eb	       373	size.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x40008cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       377	size.c	FUNCTION_5	FOR_1
0x40008cf	        0x488945f8	                mov qword [rbp - 8], rax	       377	size.c	FUNCTION_5	FOR_1
0x40008d3	            0xeb80	                           jmp 0x4000855	       378	size.c	FUNCTION_5	FOR_1
0x40008d5	              0x90	                                     nop	       363	size.c	FUNCTION_5	FOR_1	IF_1
0x40008d6	      0x48837df800	                  cmp qword [rbp - 8], 0	       380	size.c	FUNCTION_5	IF_5
0x40008db	            0x740f	                            je 0x40008ec	       380	size.c	FUNCTION_5	IF_5
0x40008dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       381	size.c	FUNCTION_5	CALL_8
0x40008e1	          0x4889c7	                            mov rdi, rax	       381	size.c	FUNCTION_5	CALL_8
0x40008e4	      0xe800000000	                          call 0x40008e9	       381	size.c	FUNCTION_5	CALL_8
0x40008e9	            0xeb01	                           jmp 0x40008ec	       381	size.c	FUNCTION_5	CALL_8
0x40008eb	              0x90	                                     nop	       374	size.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x40008ec	              0xc9	                                   leave	       382	size.c	FUNCTION_5
0x40008ed	              0xc3	                                     ret	       382	size.c	FUNCTION_5
print_berkeley_format	IF,3:DO,0:ELSE,0:FOR,0:CALL,12:SWITCH,0:functions,0:WHILE,0	98
0x4000b4d	              0x55	                                push rbp	       468	size.c	ELSE_2	FUNCTION_10
0x4000b4e	          0x4889e5	                            mov rbp, rsp	       468	size.c	ELSE_2	FUNCTION_10
0x4000b51	        0x4883ec20	                           sub rsp, 0x20	       468	size.c	ELSE_2	FUNCTION_10
0x4000b55	        0x48897de8	             mov qword [rbp - 0x18], rdi	       468	size.c	ELSE_2	FUNCTION_10
0x4000b59	    0x48c705000000	               mov qword [0x04000b64], 0	       472	size.c	ELSE_2	FUNCTION_10
0x4000b64	    0x48c705000000	               mov qword [0x04000b6f], 0	       473	size.c	ELSE_2	FUNCTION_10
0x4000b6f	    0x48c705000000	               mov qword [0x04000b7a], 0	       474	size.c	ELSE_2	FUNCTION_10
0x4000b7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       476	size.c	ELSE_2	FUNCTION_10	CALL_1
0x4000b7e	      0xba00000000	                              mov edx, 0	       476	size.c	ELSE_2	FUNCTION_10	CALL_1
0x4000b83	      0xbe00000000	                              mov esi, 0	       476	size.c	ELSE_2	FUNCTION_10	CALL_1
0x4000b88	          0x4889c7	                            mov rdi, rax	       476	size.c	ELSE_2	FUNCTION_10	CALL_1
0x4000b8b	      0xe800000000	                          call 0x4000b90	       476	size.c	ELSE_2	FUNCTION_10	CALL_1
0x4000b90	    0x488b15000000	            mov rdx, qword [0x04000b97] 	       478	size.c	ELSE_2	FUNCTION_10
0x4000b97	    0x488b05000000	            mov rax, qword [0x04000b9e] 	       478	size.c	ELSE_2	FUNCTION_10
0x4000b9e	          0x4801d0	                            add rax, rdx	       478	size.c	ELSE_2	FUNCTION_10
0x4000ba1	    0x488905000000	            mov qword [0x04000ba8], rax 	       478	size.c	ELSE_2	FUNCTION_10
0x4000ba8	    0x8b0500000000	            mov eax, dword [0x04000bae] 	       479	size.c	ELSE_2	FUNCTION_10	IF_1
0x4000bae	          0x8d5001	                      lea edx, [rax + 1]	       479	size.c	ELSE_2	FUNCTION_10	IF_1
0x4000bb1	    0x891500000000	            mov dword [0x04000bb7], edx 	       479	size.c	ELSE_2	FUNCTION_10	IF_1
0x4000bb7	            0x85c0	                           test eax, eax	       479	size.c	ELSE_2	FUNCTION_10	IF_1
0x4000bb9	            0x751f	                           jne 0x4000bda	       479	size.c	ELSE_2	FUNCTION_10	IF_1
0x4000bbb	    0x8b0500000000	            mov eax, dword [0x04000bc1] 	       480	size.c	ELSE_2	FUNCTION_10	IF_1	CALL_2
0x4000bc1	          0x83f801	                              cmp eax, 1	       480	size.c	ELSE_2	FUNCTION_10	IF_1	CALL_2
0x4000bc4	            0x7507	                           jne 0x4000bcd	       480	size.c	ELSE_2	FUNCTION_10	IF_1	CALL_2
0x4000bc6	      0xb800000000	                              mov eax, 0	       480	size.c	ELSE_2	FUNCTION_10	IF_1	CALL_2
0x4000bcb	            0xeb05	                           jmp 0x4000bd2	       480	size.c	ELSE_2	FUNCTION_10	IF_1	CALL_2
0x4000bcd	      0xb800000000	                              mov eax, 0	       480	size.c	ELSE_2	FUNCTION_10	IF_1	CALL_2
0x4000bd2	          0x4889c7	                            mov rdi, rax	       480	size.c	ELSE_2	FUNCTION_10	IF_1	CALL_2
0x4000bd5	      0xe800000000	                          call 0x4000bda	       480	size.c	ELSE_2	FUNCTION_10	IF_1	CALL_2
0x4000bda	    0x488b15000000	            mov rdx, qword [0x04000be1] 	       483	size.c	ELSE_2	FUNCTION_10
0x4000be1	    0x488b05000000	            mov rax, qword [0x04000be8] 	       483	size.c	ELSE_2	FUNCTION_10
0x4000be8	          0x4801c2	                            add rdx, rax	       483	size.c	ELSE_2	FUNCTION_10
0x4000beb	    0x488b05000000	            mov rax, qword [0x04000bf2] 	       483	size.c	ELSE_2	FUNCTION_10
0x4000bf2	          0x4801d0	                            add rax, rdx	       483	size.c	ELSE_2	FUNCTION_10
0x4000bf5	        0x488945f8	                mov qword [rbp - 8], rax	       483	size.c	ELSE_2	FUNCTION_10
0x4000bf9	    0x8b0500000000	            mov eax, dword [0x04000bff] 	       485	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000bff	            0x85c0	                           test eax, eax	       485	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c01	            0x7448	                            je 0x4000c4b	       485	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c03	    0x488b15000000	            mov rdx, qword [0x04000c0a] 	       487	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c0a	    0x488b05000000	            mov rax, qword [0x04000c11] 	       487	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c11	          0x4801d0	                            add rax, rdx	       487	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c14	    0x488905000000	            mov qword [0x04000c1b], rax 	       487	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c1b	    0x488b15000000	            mov rdx, qword [0x04000c22] 	       488	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c22	    0x488b05000000	            mov rax, qword [0x04000c29] 	       488	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c29	          0x4801d0	                            add rax, rdx	       488	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c2c	    0x488905000000	            mov qword [0x04000c33], rax 	       488	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c33	    0x488b15000000	            mov rdx, qword [0x04000c3a] 	       489	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c3a	    0x488b05000000	            mov rax, qword [0x04000c41] 	       489	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c41	          0x4801d0	                            add rax, rdx	       489	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c44	    0x488905000000	            mov qword [0x04000c4b], rax 	       489	size.c	ELSE_2	FUNCTION_10	IF_2
0x4000c4b	    0x488b05000000	            mov rax, qword [0x04000c52] 	       492	size.c	ELSE_2	FUNCTION_10	CALL_3
0x4000c52	          0x4889c6	                            mov rsi, rax	       492	size.c	ELSE_2	FUNCTION_10	CALL_3
0x4000c55	      0xbf07000000	                              mov edi, 7	       492	size.c	ELSE_2	FUNCTION_10	CALL_3
0x4000c5a	      0xe8c9fdffff	                  call sym.rprint_number	       492	size.c	ELSE_2	FUNCTION_10	CALL_3
0x4000c5f	      0xbf09000000	                              mov edi, 9	       493	size.c	ELSE_2	FUNCTION_10	CALL_4
0x4000c64	      0xe800000000	                          call 0x4000c69	       493	size.c	ELSE_2	FUNCTION_10	CALL_4
0x4000c69	    0x488b05000000	            mov rax, qword [0x04000c70] 	       494	size.c	ELSE_2	FUNCTION_10	CALL_5
0x4000c70	          0x4889c6	                            mov rsi, rax	       494	size.c	ELSE_2	FUNCTION_10	CALL_5
0x4000c73	      0xbf07000000	                              mov edi, 7	       494	size.c	ELSE_2	FUNCTION_10	CALL_5
0x4000c78	      0xe8abfdffff	                  call sym.rprint_number	       494	size.c	ELSE_2	FUNCTION_10	CALL_5
0x4000c7d	      0xbf09000000	                              mov edi, 9	       495	size.c	ELSE_2	FUNCTION_10	CALL_6
0x4000c82	      0xe800000000	                          call 0x4000c87	       495	size.c	ELSE_2	FUNCTION_10	CALL_6
0x4000c87	    0x488b05000000	            mov rax, qword [0x04000c8e] 	       496	size.c	ELSE_2	FUNCTION_10	CALL_7
0x4000c8e	          0x4889c6	                            mov rsi, rax	       496	size.c	ELSE_2	FUNCTION_10	CALL_7
0x4000c91	      0xbf07000000	                              mov edi, 7	       496	size.c	ELSE_2	FUNCTION_10	CALL_7
0x4000c96	      0xe88dfdffff	                  call sym.rprint_number	       496	size.c	ELSE_2	FUNCTION_10	CALL_7
0x4000c9b	    0x8b0500000000	            mov eax, dword [0x04000ca1] 	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000ca1	          0x83f801	                              cmp eax, 1	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000ca4	            0x7507	                           jne 0x4000cad	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000ca6	      0xb900000000	                              mov ecx, 0	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000cab	            0xeb05	                           jmp 0x4000cb2	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000cad	      0xb900000000	                              mov ecx, 0	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000cb2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000cb6	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000cba	          0x4889c6	                            mov rsi, rax	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000cbd	          0x4889cf	                            mov rdi, rcx	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000cc0	      0xb800000000	                              mov eax, 0	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000cc5	      0xe800000000	                          call 0x4000cca	       497	size.c	ELSE_2	FUNCTION_10	CALL_8
0x4000cca	    0x488b15000000	            mov rdx, qword [0x04000cd1] 	       500	size.c	ELSE_2	FUNCTION_10	CALL_10
0x4000cd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	size.c	ELSE_2	FUNCTION_10	CALL_10
0x4000cd5	          0x488b00	                    mov rax, qword [rax]	       500	size.c	ELSE_2	FUNCTION_10	CALL_10
0x4000cd8	          0x4889d6	                            mov rsi, rdx	       500	size.c	ELSE_2	FUNCTION_10	CALL_10
0x4000cdb	          0x4889c7	                            mov rdi, rax	       500	size.c	ELSE_2	FUNCTION_10	CALL_10
0x4000cde	      0xe800000000	                          call 0x4000ce3	       500	size.c	ELSE_2	FUNCTION_10	CALL_10
0x4000ce3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	size.c	ELSE_2	FUNCTION_10	IF_3
0x4000ce7	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       502	size.c	ELSE_2	FUNCTION_10	IF_3
0x4000cee	          0x4885c0	                           test rax, rax	       502	size.c	ELSE_2	FUNCTION_10	IF_3
0x4000cf1	            0x7420	                            je 0x4000d13	       502	size.c	ELSE_2	FUNCTION_10	IF_3
0x4000cf3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       503	size.c	ELSE_2	FUNCTION_10	CALL_12
0x4000cf7	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       503	size.c	ELSE_2	FUNCTION_10	CALL_12
0x4000cfe	          0x488b00	                    mov rax, qword [rax]	       503	size.c	ELSE_2	FUNCTION_10	CALL_12
0x4000d01	          0x4889c6	                            mov rsi, rax	       503	size.c	ELSE_2	FUNCTION_10	CALL_12
0x4000d04	      0xbf00000000	                              mov edi, 0	       503	size.c	ELSE_2	FUNCTION_10	CALL_12
0x4000d09	      0xb800000000	                              mov eax, 0	       503	size.c	ELSE_2	FUNCTION_10	CALL_12
0x4000d0e	      0xe800000000	                          call 0x4000d13	       503	size.c	ELSE_2	FUNCTION_10	CALL_12
0x4000d13	              0x90	                                     nop	       504	size.c	ELSE_2	FUNCTION_10
0x4000d14	              0xc9	                                   leave	       504	size.c	ELSE_2	FUNCTION_10
0x4000d15	              0xc3	                                     ret	       504	size.c	ELSE_2	FUNCTION_10
display_file	IF,4:DO,0:ELSE,1:FOR,0:CALL,8:SWITCH,0:functions,0:WHILE,0	49
0x40008ee	              0x55	                                push rbp	       386	size.c	FUNCTION_6
0x40008ef	          0x4889e5	                            mov rbp, rsp	       386	size.c	FUNCTION_6
0x40008f2	        0x4883ec20	                           sub rsp, 0x20	       386	size.c	FUNCTION_6
0x40008f6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       386	size.c	FUNCTION_6
0x40008fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       389	size.c	FUNCTION_6	IF_1	CALL_1
0x40008fe	          0x4889c7	                            mov rdi, rax	       389	size.c	FUNCTION_6	IF_1	CALL_1
0x4000901	      0xe800000000	                          call 0x4000906	       389	size.c	FUNCTION_6	IF_1	CALL_1
0x4000906	          0x4885c0	                           test rax, rax	       389	size.c	FUNCTION_6	IF_1	CALL_1
0x4000909	            0x7f0f	                            jg 0x400091a	       389	size.c	FUNCTION_6	IF_1	CALL_1
0x400090b	    0xc70500000000	               mov dword [0x04000915], 1	       391	size.c	FUNCTION_6	IF_1
0x4000915	      0xe98f000000	                           jmp 0x40009a9	       392	size.c	FUNCTION_6	IF_1
0x400091a	    0x488b15000000	            mov rdx, qword [0x04000921] 	       395	size.c	FUNCTION_6	CALL_2
0x4000921	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	size.c	FUNCTION_6	CALL_2
0x4000925	          0x4889d6	                            mov rsi, rdx	       395	size.c	FUNCTION_6	CALL_2
0x4000928	          0x4889c7	                            mov rdi, rax	       395	size.c	FUNCTION_6	CALL_2
0x400092b	      0xe800000000	                          call 0x4000930	       395	size.c	FUNCTION_6	CALL_2
0x4000930	        0x488945f8	                mov qword [rbp - 8], rax	       395	size.c	FUNCTION_6	CALL_2
0x4000934	      0x48837df800	                  cmp qword [rbp - 8], 0	       396	size.c	FUNCTION_6	IF_2
0x4000939	            0x7518	                           jne 0x4000953	       396	size.c	FUNCTION_6	IF_2
0x400093b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       398	size.c	FUNCTION_6	IF_2	CALL_3
0x400093f	          0x4889c7	                            mov rdi, rax	       398	size.c	FUNCTION_6	IF_2	CALL_3
0x4000942	      0xe800000000	                          call 0x4000947	       398	size.c	FUNCTION_6	IF_2	CALL_3
0x4000947	    0xc70500000000	               mov dword [0x04000951], 1	       399	size.c	FUNCTION_6	IF_2
0x4000951	            0xeb56	                           jmp 0x40009a9	       400	size.c	FUNCTION_6	IF_2
0x4000953	        0x488b45f8	                mov rax, qword [rbp - 8]	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x4000957	      0xbe02000000	                              mov esi, 2	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x400095c	          0x4889c7	                            mov rdi, rax	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x400095f	      0xe800000000	                          call 0x4000964	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x4000964	            0x85c0	                           test eax, eax	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x4000966	            0x740e	                            je 0x4000976	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x4000968	        0x488b45f8	                mov rax, qword [rbp - 8]	       404	size.c	FUNCTION_6	CALL_5
0x400096c	          0x4889c7	                            mov rdi, rax	       404	size.c	FUNCTION_6	CALL_5
0x400096f	      0xe8c5feffff	                call sym.display_archive	       404	size.c	FUNCTION_6	CALL_5
0x4000974	            0xeb0c	                           jmp 0x4000982	       404	size.c	FUNCTION_6	CALL_5
0x4000976	        0x488b45f8	                mov rax, qword [rbp - 8]	       406	size.c	FUNCTION_6	CALL_6
0x400097a	          0x4889c7	                            mov rdi, rax	       406	size.c	FUNCTION_6	CALL_6
0x400097d	      0xe83ffdffff	                    call sym.display_bfd	       406	size.c	FUNCTION_6	CALL_6
0x4000982	        0x488b45f8	                mov rax, qword [rbp - 8]	       408	size.c	FUNCTION_6	IF_4	CALL_7
0x4000986	          0x4889c7	                            mov rdi, rax	       408	size.c	FUNCTION_6	IF_4	CALL_7
0x4000989	      0xe800000000	                          call 0x400098e	       408	size.c	FUNCTION_6	IF_4	CALL_7
0x400098e	            0x85c0	                           test eax, eax	       408	size.c	FUNCTION_6	IF_4	CALL_7
0x4000990	            0x7517	                           jne 0x40009a9	       408	size.c	FUNCTION_6	IF_4	CALL_7
0x4000992	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       410	size.c	FUNCTION_6	IF_4	CALL_8
0x4000996	          0x4889c7	                            mov rdi, rax	       410	size.c	FUNCTION_6	IF_4	CALL_8
0x4000999	      0xe800000000	                          call 0x400099e	       410	size.c	FUNCTION_6	IF_4	CALL_8
0x400099e	    0xc70500000000	               mov dword [0x040009a8], 1	       411	size.c	FUNCTION_6	IF_4
0x40009a8	              0x90	                                     nop	       412	size.c	FUNCTION_6	IF_4
0x40009a9	              0xc9	                                   leave	       414	size.c	FUNCTION_6
0x40009aa	              0xc3	                                     ret	       414	size.c	FUNCTION_6
rprint_number	IF,0:DO,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:functions,0:WHILE,0	38
0x4000a28	              0x55	                                push rbp	       431	size.c	FUNCTION_8
0x4000a29	          0x4889e5	                            mov rbp, rsp	       431	size.c	FUNCTION_8
0x4000a2c	        0x4883ec40	                           sub rsp, 0x40	       431	size.c	FUNCTION_8
0x4000a30	          0x897dcc	             mov dword [rbp - 0x34], edi	       431	size.c	FUNCTION_8
0x4000a33	        0x488975c0	             mov qword [rbp - 0x40], rsi	       431	size.c	FUNCTION_8
0x4000a37	    0x64488b042528	                mov rax, qword fs:[0x28]	       431	size.c	FUNCTION_8
0x4000a40	        0x488945f8	                mov qword [rbp - 8], rax	       431	size.c	FUNCTION_8
0x4000a44	            0x31c0	                            xor eax, eax	       431	size.c	FUNCTION_8
0x4000a46	    0x8b0500000000	            mov eax, dword [0x04000a4c] 	       435	size.c	FUNCTION_8
0x4000a4c	            0x85c0	                           test eax, eax	       434	size.c	FUNCTION_8	CALL_1
0x4000a4e	            0x7419	                            je 0x4000a69	       434	size.c	FUNCTION_8	CALL_1
0x4000a50	    0x8b0500000000	            mov eax, dword [0x04000a56] 	       436	size.c	FUNCTION_8
0x4000a56	          0x83f801	                              cmp eax, 1	       435	size.c	FUNCTION_8
0x4000a59	            0x7507	                           jne 0x4000a62	       435	size.c	FUNCTION_8
0x4000a5b	      0xb800000000	                              mov eax, 0	       435	size.c	FUNCTION_8
0x4000a60	            0xeb0c	                           jmp 0x4000a6e	       435	size.c	FUNCTION_8
0x4000a62	      0xb800000000	                              mov eax, 0	       435	size.c	FUNCTION_8
0x4000a67	            0xeb05	                           jmp 0x4000a6e	       435	size.c	FUNCTION_8
0x4000a69	      0xb800000000	                              mov eax, 0	       434	size.c	FUNCTION_8	CALL_1
0x4000a6e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       434	size.c	FUNCTION_8	CALL_1
0x4000a72	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       434	size.c	FUNCTION_8	CALL_1
0x4000a76	          0x4889c6	                            mov rsi, rax	       434	size.c	FUNCTION_8	CALL_1
0x4000a79	          0x4889cf	                            mov rdi, rcx	       434	size.c	FUNCTION_8	CALL_1
0x4000a7c	      0xb800000000	                              mov eax, 0	       434	size.c	FUNCTION_8	CALL_1
0x4000a81	      0xe800000000	                          call 0x4000a86	       434	size.c	FUNCTION_8	CALL_1
0x4000a86	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       439	size.c	FUNCTION_8	CALL_2
0x4000a8a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       439	size.c	FUNCTION_8	CALL_2
0x4000a8d	            0x89c6	                            mov esi, eax	       439	size.c	FUNCTION_8	CALL_2
0x4000a8f	      0xbf00000000	                              mov edi, 0	       439	size.c	FUNCTION_8	CALL_2
0x4000a94	      0xb800000000	                              mov eax, 0	       439	size.c	FUNCTION_8	CALL_2
0x4000a99	      0xe800000000	                          call 0x4000a9e	       439	size.c	FUNCTION_8	CALL_2
0x4000a9e	              0x90	                                     nop	       440	size.c	FUNCTION_8
0x4000a9f	        0x488b45f8	                mov rax, qword [rbp - 8]	       440	size.c	FUNCTION_8
0x4000aa3	    0x644833042528	                xor rax, qword fs:[0x28]	       440	size.c	FUNCTION_8
0x4000aac	            0x7405	                            je 0x4000ab3	       440	size.c	FUNCTION_8
0x4000aae	      0xe800000000	                          call 0x4000ab3	       440	size.c	FUNCTION_8
0x4000ab3	              0xc9	                                   leave	       440	size.c	FUNCTION_8
0x4000ab4	              0xc3	                                     ret	       440	size.c	FUNCTION_8
berkeley_sum	IF,3:DO,0:ELSE,2:FOR,0:CALL,2:SWITCH,0:functions,0:WHILE,0	45
0x4000ab5	              0x55	                                push rbp	       449	size.c	FUNCTION_9
0x4000ab6	          0x4889e5	                            mov rbp, rsp	       449	size.c	FUNCTION_9
0x4000ab9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       449	size.c	FUNCTION_9
0x4000abd	        0x488975e0	             mov qword [rbp - 0x20], rsi	       449	size.c	FUNCTION_9
0x4000ac1	        0x488955d8	             mov qword [rbp - 0x28], rdx	       449	size.c	FUNCTION_9
0x4000ac5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       453	size.c	FUNCTION_9	CALL_1
0x4000ac9	          0x8b4020	            mov eax, dword [rax + 0x20] 	       453	size.c	FUNCTION_9	CALL_1
0x4000acc	          0x8945f4	              mov dword [rbp - 0xc], eax	       453	size.c	FUNCTION_9	CALL_1
0x4000acf	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       454	size.c	FUNCTION_9	IF_1
0x4000ad2	          0x83e001	                              and eax, 1	       454	size.c	FUNCTION_9	IF_1
0x4000ad5	            0x85c0	                           test eax, eax	       454	size.c	FUNCTION_9	IF_1
0x4000ad7	            0x7471	                            je 0x4000b4a	       454	size.c	FUNCTION_9	IF_1
0x4000ad9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	size.c	FUNCTION_9	CALL_2
0x4000add	        0x488b4038	            mov rax, qword [rax + 0x38] 	       457	size.c	FUNCTION_9	CALL_2
0x4000ae1	        0x488945f8	                mov qword [rbp - 8], rax	       457	size.c	FUNCTION_9	CALL_2
0x4000ae5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       458	size.c	FUNCTION_9	IF_2
0x4000ae8	          0x83e010	                           and eax, 0x10	       458	size.c	FUNCTION_9	IF_2
0x4000aeb	            0x85c0	                           test eax, eax	       458	size.c	FUNCTION_9	IF_2
0x4000aed	            0x750a	                           jne 0x4000af9	       458	size.c	FUNCTION_9	IF_2
0x4000aef	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       458	size.c	FUNCTION_9	IF_2
0x4000af2	          0x83e008	                              and eax, 8	       458	size.c	FUNCTION_9	IF_2
0x4000af5	            0x85c0	                           test eax, eax	       458	size.c	FUNCTION_9	IF_2
0x4000af7	            0x7417	                            je 0x4000b10	       458	size.c	FUNCTION_9	IF_2
0x4000af9	    0x488b15000000	            mov rdx, qword [0x04000b00] 	       459	size.c	FUNCTION_9	IF_2
0x4000b00	        0x488b45f8	                mov rax, qword [rbp - 8]	       459	size.c	FUNCTION_9	IF_2
0x4000b04	          0x4801d0	                            add rax, rdx	       459	size.c	FUNCTION_9	IF_2
0x4000b07	    0x488905000000	            mov qword [0x04000b0e], rax 	       459	size.c	FUNCTION_9	IF_2
0x4000b0e	            0xeb3b	                           jmp 0x4000b4b	       459	size.c	FUNCTION_9	IF_2
0x4000b10	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000b13	      0x2500010000	                          and eax, 0x100	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000b18	            0x85c0	                           test eax, eax	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000b1a	            0x7417	                            je 0x4000b33	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000b1c	    0x488b15000000	            mov rdx, qword [0x04000b23] 	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000b23	        0x488b45f8	                mov rax, qword [rbp - 8]	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000b27	          0x4801d0	                            add rax, rdx	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000b2a	    0x488905000000	            mov qword [0x04000b31], rax 	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000b31	            0xeb18	                           jmp 0x4000b4b	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000b33	    0x488b15000000	            mov rdx, qword [0x04000b3a] 	       463	size.c	FUNCTION_9	ELSE_2
0x4000b3a	        0x488b45f8	                mov rax, qword [rbp - 8]	       463	size.c	FUNCTION_9	ELSE_2
0x4000b3e	          0x4801d0	                            add rax, rdx	       463	size.c	FUNCTION_9	ELSE_2
0x4000b41	    0x488905000000	            mov qword [0x04000b48], rax 	       463	size.c	FUNCTION_9	ELSE_2
0x4000b48	            0xeb01	                           jmp 0x4000b4b	       463	size.c	FUNCTION_9	ELSE_2
0x4000b4a	              0x90	                                     nop	       455	size.c	FUNCTION_9	IF_1
0x4000b4b	              0x5d	                                 pop rbp	       464	size.c	FUNCTION_9	ELSE_2
0x4000b4c	              0xc3	                                     ret	       464	size.c	FUNCTION_9	ELSE_2
sysv_internal_sizer	IF,3:DO,0:ELSE,0:FOR,0:CALL,8:SWITCH,0:functions,0:WHILE,0	43
0x4000d16	              0x55	                                push rbp	       516	size.c	FUNCTION_11
0x4000d17	          0x4889e5	                            mov rbp, rsp	       516	size.c	FUNCTION_11
0x4000d1a	        0x4883ec30	                           sub rsp, 0x30	       516	size.c	FUNCTION_11
0x4000d1e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       516	size.c	FUNCTION_11
0x4000d22	        0x488975e0	             mov qword [rbp - 0x20], rsi	       516	size.c	FUNCTION_11
0x4000d26	        0x488955d8	             mov qword [rbp - 0x28], rdx	       516	size.c	FUNCTION_11
0x4000d2a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       517	size.c	FUNCTION_11	CALL_1
0x4000d2e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       517	size.c	FUNCTION_11	CALL_1
0x4000d32	        0x488945f8	                mov qword [rbp - 8], rax	       517	size.c	FUNCTION_11	CALL_1
0x4000d36	    0x48817de00000	               cmp qword [rbp - 0x20], 0	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000d3e	            0x7478	                            je 0x4000db8	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000d40	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       520	size.c	FUNCTION_11	IF_1	CALL_3
0x4000d44	          0x8b4020	            mov eax, dword [rax + 0x20] 	       520	size.c	FUNCTION_11	IF_1	CALL_3
0x4000d47	      0x2500100000	                         and eax, 0x1000	       520	size.c	FUNCTION_11	IF_1	CALL_3
0x4000d4c	            0x85c0	                           test eax, eax	       520	size.c	FUNCTION_11	IF_1	CALL_3
0x4000d4e	            0x7568	                           jne 0x4000db8	       520	size.c	FUNCTION_11	IF_1	CALL_3
0x4000d50	    0x48817de00000	               cmp qword [rbp - 0x20], 0	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000d58	            0x745e	                            je 0x4000db8	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000d5a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000d5e	          0x488b00	                    mov rax, qword [rax]	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000d61	          0x4889c7	                            mov rdi, rax	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000d64	      0xe800000000	                          call 0x4000d69	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000d69	          0x8945f4	              mov dword [rbp - 0xc], eax	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000d6c	    0x8b0500000000	            mov eax, dword [0x04000d72] 	       525	size.c	FUNCTION_11	IF_1	IF_2
0x4000d72	          0x3945f4	              cmp dword [rbp - 0xc], eax	       525	size.c	FUNCTION_11	IF_1	IF_2
0x4000d75	            0x7e09	                           jle 0x4000d80	       525	size.c	FUNCTION_11	IF_1	IF_2
0x4000d77	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       526	size.c	FUNCTION_11	IF_1	IF_2
0x4000d7a	    0x890500000000	            mov dword [0x04000d80], eax 	       526	size.c	FUNCTION_11	IF_1	IF_2
0x4000d80	    0x488b15000000	            mov rdx, qword [0x04000d87] 	       528	size.c	FUNCTION_11	IF_1
0x4000d87	        0x488b45f8	                mov rax, qword [rbp - 8]	       528	size.c	FUNCTION_11	IF_1
0x4000d8b	          0x4801d0	                            add rax, rdx	       528	size.c	FUNCTION_11	IF_1
0x4000d8e	    0x488905000000	            mov qword [0x04000d95], rax 	       528	size.c	FUNCTION_11	IF_1
0x4000d95	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x4000d99	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x4000d9d	    0x488b05000000	            mov rax, qword [0x04000da4] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x4000da4	          0x4839c2	                            cmp rdx, rax	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x4000da7	            0x760f	                           jbe 0x4000db8	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x4000da9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       531	size.c	FUNCTION_11	IF_1	CALL_8
0x4000dad	        0x488b4028	            mov rax, qword [rax + 0x28] 	       531	size.c	FUNCTION_11	IF_1	CALL_8
0x4000db1	    0x488905000000	            mov qword [0x04000db8], rax 	       531	size.c	FUNCTION_11	IF_1	CALL_8
0x4000db8	              0x90	                                     nop	       533	size.c	FUNCTION_11
0x4000db9	              0xc9	                                   leave	       533	size.c	FUNCTION_11
0x4000dba	              0xc3	                                     ret	       533	size.c	FUNCTION_11
usage	IF,1:DO,0:ELSE,0:FOR,1:CALL,14:SWITCH,0:functions,0:WHILE,0	63
0x4000040	              0x55	                                push rbp	        75	size.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        75	size.c	FUNCTION_1
0x4000044	              0x53	                                push rbx	        75	size.c	FUNCTION_1
0x4000045	        0x4883ec18	                           sub rsp, 0x18	        75	size.c	FUNCTION_1
0x4000049	        0x48897de8	             mov qword [rbp - 0x18], rdi	        75	size.c	FUNCTION_1
0x400004d	          0x8975e4	             mov dword [rbp - 0x1c], esi	        75	size.c	FUNCTION_1
0x4000050	    0x488b1d000000	            mov rbx, qword [0x04000057] 	        76	size.c	FUNCTION_1	CALL_2
0x4000057	      0xbf00000000	                              mov edi, 0	        76	size.c	FUNCTION_1	CALL_2
0x400005c	      0xe800000000	                          call 0x4000061	        76	size.c	FUNCTION_1	CALL_2
0x4000061	          0x4889c1	                            mov rcx, rax	        76	size.c	FUNCTION_1	CALL_2
0x4000064	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        76	size.c	FUNCTION_1	CALL_2
0x4000068	          0x4889da	                            mov rdx, rbx	        76	size.c	FUNCTION_1	CALL_2
0x400006b	          0x4889ce	                            mov rsi, rcx	        76	size.c	FUNCTION_1	CALL_2
0x400006e	          0x4889c7	                            mov rdi, rax	        76	size.c	FUNCTION_1	CALL_2
0x4000071	      0xb800000000	                              mov eax, 0	        76	size.c	FUNCTION_1	CALL_2
0x4000076	      0xe800000000	                          call 0x400007b	        76	size.c	FUNCTION_1	CALL_2
0x400007b	      0xbf00000000	                              mov edi, 0	        77	size.c	FUNCTION_1	CALL_4
0x4000080	      0xe800000000	                          call 0x4000085	        77	size.c	FUNCTION_1	CALL_4
0x4000085	          0x4889c2	                            mov rdx, rax	        77	size.c	FUNCTION_1	CALL_4
0x4000088	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        77	size.c	FUNCTION_1	CALL_4
0x400008c	          0x4889d6	                            mov rsi, rdx	        77	size.c	FUNCTION_1	CALL_4
0x400008f	          0x4889c7	                            mov rdi, rax	        77	size.c	FUNCTION_1	CALL_4
0x4000092	      0xb800000000	                              mov eax, 0	        77	size.c	FUNCTION_1	CALL_4
0x4000097	      0xe800000000	                          call 0x400009c	        77	size.c	FUNCTION_1	CALL_4
0x400009c	      0xbf00000000	                              mov edi, 0	        78	size.c	FUNCTION_1	CALL_6
0x40000a1	      0xe800000000	                          call 0x40000a6	        78	size.c	FUNCTION_1	CALL_6
0x40000a6	          0x4889c2	                            mov rdx, rax	        78	size.c	FUNCTION_1	CALL_6
0x40000a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        78	size.c	FUNCTION_1	CALL_6
0x40000ad	          0x4889d6	                            mov rsi, rdx	        78	size.c	FUNCTION_1	CALL_6
0x40000b0	          0x4889c7	                            mov rdi, rax	        78	size.c	FUNCTION_1	CALL_6
0x40000b3	      0xb800000000	                              mov eax, 0	        78	size.c	FUNCTION_1	CALL_6
0x40000b8	      0xe800000000	                          call 0x40000bd	        78	size.c	FUNCTION_1	CALL_6
0x40000bd	      0xbf00000000	                              mov edi, 0	        79	size.c	FUNCTION_1	CALL_8
0x40000c2	      0xe800000000	                          call 0x40000c7	        79	size.c	FUNCTION_1	CALL_8
0x40000c7	          0x4889c1	                            mov rcx, rax	        79	size.c	FUNCTION_1	CALL_8
0x40000ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        79	size.c	FUNCTION_1	CALL_8
0x40000ce	      0xba00000000	                              mov edx, 0	        79	size.c	FUNCTION_1	CALL_8
0x40000d3	          0x4889ce	                            mov rsi, rcx	        79	size.c	FUNCTION_1	CALL_8
0x40000d6	          0x4889c7	                            mov rdi, rax	        79	size.c	FUNCTION_1	CALL_8
0x40000d9	      0xb800000000	                              mov eax, 0	        79	size.c	FUNCTION_1	CALL_8
0x40000de	      0xe800000000	                          call 0x40000e3	        79	size.c	FUNCTION_1	CALL_8
0x40000e3	    0x488b05000000	            mov rax, qword [0x040000ea] 	        95	size.c	FUNCTION_1	FOR_1	CALL_11
0x40000ea	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        95	size.c	FUNCTION_1	FOR_1	CALL_11
0x40000ee	          0x4889d6	                            mov rsi, rdx	        95	size.c	FUNCTION_1	FOR_1	CALL_11
0x40000f1	          0x4889c7	                            mov rdi, rax	        95	size.c	FUNCTION_1	FOR_1	CALL_11
0x40000f4	      0xe800000000	                          call 0x40000f9	        95	size.c	FUNCTION_1	FOR_1	CALL_11
0x40000f9	      0xb83c000000	                           mov eax, 0x3c	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x40000fe	            0x84c0	                             test al, al	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000100	            0x742c	                            je 0x400012e	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000102	        0x837de400	               cmp dword [rbp - 0x1c], 0	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000106	            0x7526	                           jne 0x400012e	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000108	      0xbf00000000	                              mov edi, 0	        97	size.c	FUNCTION_1	FOR_1	CALL_13
0x400010d	      0xe800000000	                          call 0x4000112	        97	size.c	FUNCTION_1	FOR_1	CALL_13
0x4000112	          0x4889c1	                            mov rcx, rax	        97	size.c	FUNCTION_1	FOR_1	CALL_13
0x4000115	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	size.c	FUNCTION_1	FOR_1	CALL_13
0x4000119	      0xba00000000	                              mov edx, 0	        97	size.c	FUNCTION_1	FOR_1	CALL_13
0x400011e	          0x4889ce	                            mov rsi, rcx	        97	size.c	FUNCTION_1	FOR_1	CALL_13
0x4000121	          0x4889c7	                            mov rdi, rax	        97	size.c	FUNCTION_1	FOR_1	CALL_13
0x4000124	      0xb800000000	                              mov eax, 0	        97	size.c	FUNCTION_1	FOR_1	CALL_13
0x4000129	      0xe800000000	                          call 0x400012e	        97	size.c	FUNCTION_1	FOR_1	CALL_13
0x400012e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        98	size.c	FUNCTION_1	FOR_1	CALL_14
0x4000131	            0x89c7	                            mov edi, eax	        98	size.c	FUNCTION_1	FOR_1	CALL_14
0x4000133	      0xe800000000	                           call sym.main	        98	size.c	FUNCTION_1	FOR_1	CALL_14
size_number	IF,0:DO,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:functions,0:WHILE,0	33
0x40009ab	              0x55	                                push rbp	       418	size.c	FUNCTION_7
0x40009ac	          0x4889e5	                            mov rbp, rsp	       418	size.c	FUNCTION_7
0x40009af	        0x4883ec40	                           sub rsp, 0x40	       418	size.c	FUNCTION_7
0x40009b3	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       418	size.c	FUNCTION_7
0x40009b7	    0x64488b042528	                mov rax, qword fs:[0x28]	       418	size.c	FUNCTION_7
0x40009c0	        0x488945f8	                mov qword [rbp - 8], rax	       418	size.c	FUNCTION_7
0x40009c4	            0x31c0	                            xor eax, eax	       418	size.c	FUNCTION_7
0x40009c6	    0x8b0500000000	            mov eax, dword [0x040009cc] 	       422	size.c	FUNCTION_7
0x40009cc	            0x85c0	                           test eax, eax	       421	size.c	FUNCTION_7	CALL_1
0x40009ce	            0x7419	                            je 0x40009e9	       421	size.c	FUNCTION_7	CALL_1
0x40009d0	    0x8b0500000000	            mov eax, dword [0x040009d6] 	       423	size.c	FUNCTION_7
0x40009d6	          0x83f801	                              cmp eax, 1	       422	size.c	FUNCTION_7
0x40009d9	            0x7507	                           jne 0x40009e2	       422	size.c	FUNCTION_7
0x40009db	      0xb800000000	                              mov eax, 0	       422	size.c	FUNCTION_7
0x40009e0	            0xeb0c	                           jmp 0x40009ee	       422	size.c	FUNCTION_7
0x40009e2	      0xb800000000	                              mov eax, 0	       422	size.c	FUNCTION_7
0x40009e7	            0xeb05	                           jmp 0x40009ee	       422	size.c	FUNCTION_7
0x40009e9	      0xb800000000	                              mov eax, 0	       421	size.c	FUNCTION_7	CALL_1
0x40009ee	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       421	size.c	FUNCTION_7	CALL_1
0x40009f2	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       421	size.c	FUNCTION_7	CALL_1
0x40009f6	          0x4889c6	                            mov rsi, rax	       421	size.c	FUNCTION_7	CALL_1
0x40009f9	          0x4889cf	                            mov rdi, rcx	       421	size.c	FUNCTION_7	CALL_1
0x40009fc	      0xb800000000	                              mov eax, 0	       421	size.c	FUNCTION_7	CALL_1
0x4000a01	      0xe800000000	                          call 0x4000a06	       421	size.c	FUNCTION_7	CALL_1
0x4000a06	        0x488d45d0	                   lea rax, [rbp - 0x30]	       426	size.c	FUNCTION_7	CALL_2
0x4000a0a	          0x4889c7	                            mov rdi, rax	       426	size.c	FUNCTION_7	CALL_2
0x4000a0d	      0xe800000000	                          call 0x4000a12	       426	size.c	FUNCTION_7	CALL_2
0x4000a12	        0x488b75f8	                mov rsi, qword [rbp - 8]	       427	size.c	FUNCTION_7
0x4000a16	    0x644833342528	                xor rsi, qword fs:[0x28]	       427	size.c	FUNCTION_7
0x4000a1f	            0x7405	                            je 0x4000a26	       427	size.c	FUNCTION_7
0x4000a21	      0xe800000000	                          call 0x4000a26	       427	size.c	FUNCTION_7
0x4000a26	              0xc9	                                   leave	       427	size.c	FUNCTION_7
0x4000a27	              0xc3	                                     ret	       427	size.c	FUNCTION_7
print_sizes	IF,2:DO,0:ELSE,1:FOR,0:CALL,3:SWITCH,0:functions,0:WHILE,0	23
0x400109a	              0x55	                                push rbp	       610	size.c	FUNCTION_15
0x400109b	          0x4889e5	                            mov rbp, rsp	       610	size.c	FUNCTION_15
0x400109e	        0x4883ec10	                           sub rsp, 0x10	       610	size.c	FUNCTION_15
0x40010a2	        0x48897df8	                mov qword [rbp - 8], rdi	       610	size.c	FUNCTION_15
0x40010a6	    0x8b0500000000	            mov eax, dword [0x040010ac] 	       611	size.c	FUNCTION_15	IF_1
0x40010ac	            0x85c0	                           test eax, eax	       611	size.c	FUNCTION_15	IF_1
0x40010ae	            0x740c	                            je 0x40010bc	       611	size.c	FUNCTION_15	IF_1
0x40010b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	size.c	FUNCTION_15	CALL_1
0x40010b4	          0x4889c7	                            mov rdi, rax	       612	size.c	FUNCTION_15	CALL_1
0x40010b7	      0xe8d5f4ffff	          call sym.calculate_common_size	       612	size.c	FUNCTION_15	CALL_1
0x40010bc	    0x8b0500000000	            mov eax, dword [0x040010c2] 	       613	size.c	FUNCTION_15	IF_2
0x40010c2	            0x85c0	                           test eax, eax	       613	size.c	FUNCTION_15	IF_2
0x40010c4	            0x740e	                            je 0x40010d4	       613	size.c	FUNCTION_15	IF_2
0x40010c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       614	size.c	FUNCTION_15	CALL_2
0x40010ca	          0x4889c7	                            mov rdi, rax	       614	size.c	FUNCTION_15	CALL_2
0x40010cd	      0xe87bfaffff	          call sym.print_berkeley_format	       614	size.c	FUNCTION_15	CALL_2
0x40010d2	            0xeb0c	                           jmp 0x40010e0	       617	size.c	FUNCTION_15
0x40010d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       616	size.c	FUNCTION_15	CALL_3
0x40010d8	          0x4889c7	                            mov rdi, rax	       616	size.c	FUNCTION_15	CALL_3
0x40010db	      0xe8c8fdffff	              call sym.print_sysv_format	       616	size.c	FUNCTION_15	CALL_3
0x40010e0	              0x90	                                     nop	       617	size.c	FUNCTION_15
0x40010e1	              0xc9	                                   leave	       617	size.c	FUNCTION_15
0x40010e2	              0xc3	                                     ret	       617	size.c	FUNCTION_15
display_bfd	IF,6:DO,0:ELSE,0:FOR,0:CALL,20:SWITCH,0:functions,0:WHILE,0	93
0x40006c1	              0x55	                                push rbp	       296	size.c	FUNCTION_4
0x40006c2	          0x4889e5	                            mov rbp, rsp	       296	size.c	FUNCTION_4
0x40006c5	        0x4883ec30	                           sub rsp, 0x30	       296	size.c	FUNCTION_4
0x40006c9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       296	size.c	FUNCTION_4
0x40006cd	    0x64488b042528	                mov rax, qword fs:[0x28]	       296	size.c	FUNCTION_4
0x40006d6	        0x488945f8	                mov qword [rbp - 8], rax	       296	size.c	FUNCTION_4
0x40006da	            0x31c0	                            xor eax, eax	       296	size.c	FUNCTION_4
0x40006dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x40006e0	      0xbe02000000	                              mov esi, 2	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x40006e5	          0x4889c7	                            mov rdi, rax	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x40006e8	      0xe800000000	                          call 0x40006ed	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x40006ed	            0x85c0	                           test eax, eax	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x40006ef	     0xf852d010000	                           jne 0x4000822	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x40006f5	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x40006f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x40006fd	      0xbe01000000	                              mov esi, 1	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x4000702	          0x4889c7	                            mov rdi, rax	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x4000705	      0xe800000000	                          call 0x400070a	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x400070a	            0x85c0	                           test eax, eax	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x400070c	            0x741b	                            je 0x4000729	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x400070e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       305	size.c	FUNCTION_4	IF_2	CALL_3
0x4000712	          0x4889c7	                            mov rdi, rax	       305	size.c	FUNCTION_4	IF_2	CALL_3
0x4000715	      0xe880090000	                    call sym.print_sizes	       305	size.c	FUNCTION_4	IF_2	CALL_3
0x400071a	      0xbf0a000000	                            mov edi, 0xa	       306	size.c	FUNCTION_4	IF_2	CALL_4
0x400071f	      0xe800000000	                          call 0x4000724	       306	size.c	FUNCTION_4	IF_2	CALL_4
0x4000724	      0xe9fa000000	                           jmp 0x4000823	       307	size.c	FUNCTION_4	IF_2
0x4000729	      0xe800000000	                          call 0x400072e	       310	size.c	FUNCTION_4	IF_3	CALL_5
0x400072e	          0x83f80d	                            cmp eax, 0xd	       310	size.c	FUNCTION_4	IF_3	CALL_5
0x4000731	            0x7536	                           jne 0x4000769	       310	size.c	FUNCTION_4	IF_3	CALL_5
0x4000733	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       312	size.c	FUNCTION_4	IF_3	CALL_7
0x4000737	          0x488b00	                    mov rax, qword [rax]	       312	size.c	FUNCTION_4	IF_3	CALL_7
0x400073a	          0x4889c7	                            mov rdi, rax	       312	size.c	FUNCTION_4	IF_3	CALL_7
0x400073d	      0xe800000000	                          call 0x4000742	       312	size.c	FUNCTION_4	IF_3	CALL_7
0x4000742	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       313	size.c	FUNCTION_4	IF_3	CALL_8
0x4000746	          0x4889c7	                            mov rdi, rax	       313	size.c	FUNCTION_4	IF_3	CALL_8
0x4000749	      0xe800000000	                          call 0x400074e	       313	size.c	FUNCTION_4	IF_3	CALL_8
0x400074e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       314	size.c	FUNCTION_4	IF_3	CALL_9
0x4000752	          0x4889c7	                            mov rdi, rax	       314	size.c	FUNCTION_4	IF_3	CALL_9
0x4000755	      0xe800000000	                          call 0x400075a	       314	size.c	FUNCTION_4	IF_3	CALL_9
0x400075a	    0xc70500000000	               mov dword [0x04000764], 3	       315	size.c	FUNCTION_4	IF_3
0x4000764	      0xe9ba000000	                           jmp 0x4000823	       316	size.c	FUNCTION_4	IF_3
0x4000769	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       319	size.c	FUNCTION_4	IF_4	CALL_10
0x400076d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       319	size.c	FUNCTION_4	IF_4	CALL_10
0x4000771	      0xbe03000000	                              mov esi, 3	       319	size.c	FUNCTION_4	IF_4	CALL_10
0x4000776	          0x4889c7	                            mov rdi, rax	       319	size.c	FUNCTION_4	IF_4	CALL_10
0x4000779	      0xe800000000	                          call 0x400077e	       319	size.c	FUNCTION_4	IF_4	CALL_10
0x400077e	            0x85c0	                           test eax, eax	       319	size.c	FUNCTION_4	IF_4	CALL_10
0x4000780	            0x7463	                            je 0x40007e5	       319	size.c	FUNCTION_4	IF_4	CALL_10
0x4000782	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       323	size.c	FUNCTION_4	IF_4	CALL_11
0x4000786	          0x4889c7	                            mov rdi, rax	       323	size.c	FUNCTION_4	IF_4	CALL_11
0x4000789	      0xe80c090000	                    call sym.print_sizes	       323	size.c	FUNCTION_4	IF_4	CALL_11
0x400078e	    0x488b05000000	            mov rax, qword [0x04000795] 	       324	size.c	FUNCTION_4	IF_4	CALL_12
0x4000795	          0x4889c1	                            mov rcx, rax	       324	size.c	FUNCTION_4	IF_4	CALL_12
0x4000798	      0xba0b000000	                            mov edx, 0xb	       324	size.c	FUNCTION_4	IF_4	CALL_12
0x400079d	      0xbe01000000	                              mov esi, 1	       324	size.c	FUNCTION_4	IF_4	CALL_12
0x40007a2	      0xbf00000000	                              mov edi, 0	       324	size.c	FUNCTION_4	IF_4	CALL_12
0x40007a7	      0xe800000000	                          call 0x40007ac	       324	size.c	FUNCTION_4	IF_4	CALL_12
0x40007ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       326	size.c	FUNCTION_4	IF_4	CALL_13
0x40007b0	          0x4889c7	                            mov rdi, rax	       326	size.c	FUNCTION_4	IF_4	CALL_13
0x40007b3	      0xe800000000	                          call 0x40007b8	       326	size.c	FUNCTION_4	IF_4	CALL_13
0x40007b8	        0x488945f0	             mov qword [rbp - 0x10], rax	       326	size.c	FUNCTION_4	IF_4	CALL_13
0x40007bc	      0x48837df000	               cmp qword [rbp - 0x10], 0	       327	size.c	FUNCTION_4	IF_4	IF_5
0x40007c1	            0x7416	                            je 0x40007d9	       327	size.c	FUNCTION_4	IF_4	IF_5
0x40007c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       328	size.c	FUNCTION_4	IF_4	CALL_14
0x40007c7	          0x4889c6	                            mov rsi, rax	       328	size.c	FUNCTION_4	IF_4	CALL_14
0x40007ca	      0xbf00000000	                              mov edi, 0	       328	size.c	FUNCTION_4	IF_4	CALL_14
0x40007cf	      0xb800000000	                              mov eax, 0	       328	size.c	FUNCTION_4	IF_4	CALL_14
0x40007d4	      0xe800000000	                          call 0x40007d9	       328	size.c	FUNCTION_4	IF_4	CALL_14
0x40007d9	      0xbf00000000	                              mov edi, 0	       330	size.c	FUNCTION_4	IF_4	CALL_15
0x40007de	      0xe800000000	                          call 0x40007e3	       330	size.c	FUNCTION_4	IF_4	CALL_15
0x40007e3	            0xeb3e	                           jmp 0x4000823	       331	size.c	FUNCTION_4	IF_4
0x40007e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       334	size.c	FUNCTION_4	CALL_17
0x40007e9	          0x488b00	                    mov rax, qword [rax]	       334	size.c	FUNCTION_4	CALL_17
0x40007ec	          0x4889c7	                            mov rdi, rax	       334	size.c	FUNCTION_4	CALL_17
0x40007ef	      0xe800000000	                          call 0x40007f4	       334	size.c	FUNCTION_4	CALL_17
0x40007f4	      0xe800000000	                          call 0x40007f9	       336	size.c	FUNCTION_4	IF_6	CALL_18
0x40007f9	          0x83f80d	                            cmp eax, 0xd	       336	size.c	FUNCTION_4	IF_6	CALL_18
0x40007fc	            0x7518	                           jne 0x4000816	       336	size.c	FUNCTION_4	IF_6	CALL_18
0x40007fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       338	size.c	FUNCTION_4	IF_6	CALL_19
0x4000802	          0x4889c7	                            mov rdi, rax	       338	size.c	FUNCTION_4	IF_6	CALL_19
0x4000805	      0xe800000000	                          call 0x400080a	       338	size.c	FUNCTION_4	IF_6	CALL_19
0x400080a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       339	size.c	FUNCTION_4	IF_6	CALL_20
0x400080e	          0x4889c7	                            mov rdi, rax	       339	size.c	FUNCTION_4	IF_6	CALL_20
0x4000811	      0xe800000000	                          call 0x4000816	       339	size.c	FUNCTION_4	IF_6	CALL_20
0x4000816	    0xc70500000000	               mov dword [0x04000820], 3	       342	size.c	FUNCTION_4
0x4000820	            0xeb01	                           jmp 0x4000823	       342	size.c	FUNCTION_4
0x4000822	              0x90	                                     nop	       301	size.c	FUNCTION_4	IF_1
0x4000823	        0x488b45f8	                mov rax, qword [rbp - 8]	       343	size.c	FUNCTION_4
0x4000827	    0x644833042528	                xor rax, qword fs:[0x28]	       343	size.c	FUNCTION_4
0x4000830	            0x7405	                            je 0x4000837	       343	size.c	FUNCTION_4
0x4000832	      0xe800000000	                          call 0x4000837	       343	size.c	FUNCTION_4
0x4000837	              0xc9	                                   leave	       343	size.c	FUNCTION_4
0x4000838	              0xc3	                                     ret	       343	size.c	FUNCTION_4
calculate_common_size	IF,5:DO,0:ELSE,0:FOR,0:CALL,10:SWITCH,0:functions,0:WHILE,1	79
0x4000591	              0x55	                                push rbp	       263	size.c	FUNCTION_3
0x4000592	          0x4889e5	                            mov rbp, rsp	       263	size.c	FUNCTION_3
0x4000595	        0x4883ec30	                           sub rsp, 0x30	       263	size.c	FUNCTION_3
0x4000599	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       263	size.c	FUNCTION_3
0x400059d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       264	size.c	FUNCTION_3
0x40005a5	    0x48c705000000	               mov qword [0x040005b0], 0	       267	size.c	FUNCTION_3
0x40005b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       268	size.c	FUNCTION_3	IF_1	CALL_1
0x40005b4	          0x8b4044	            mov eax, dword [rax + 0x44] 	       268	size.c	FUNCTION_3	IF_1	CALL_1
0x40005b7	          0xc1e805	                              shr eax, 5	       268	size.c	FUNCTION_3	IF_1	CALL_1
0x40005ba	      0x25ffff0f00	                        and eax, 0xfffff	       268	size.c	FUNCTION_3	IF_1	CALL_1
0x40005bf	          0x83e052	                           and eax, 0x52	       268	size.c	FUNCTION_3	IF_1	CALL_1
0x40005c2	          0x83f810	                           cmp eax, 0x10	       268	size.c	FUNCTION_3	IF_1	CALL_1
0x40005c5	     0xf85f3000000	                           jne 0x40006be	       268	size.c	FUNCTION_3	IF_1	CALL_1
0x40005cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	size.c	FUNCTION_3	CALL_2
0x40005cf	        0x488b4008	                mov rax, qword [rax + 8]	       271	size.c	FUNCTION_3	CALL_2
0x40005d3	    0x488b80f00100	           mov rax, qword [rax + 0x1f0] 	       271	size.c	FUNCTION_3	CALL_2
0x40005da	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       271	size.c	FUNCTION_3	CALL_2
0x40005de	          0x4889d7	                            mov rdi, rdx	       271	size.c	FUNCTION_3	CALL_2
0x40005e1	            0xffd0	                                call rax	       271	size.c	FUNCTION_3	CALL_2
0x40005e3	        0x488945f0	             mov qword [rbp - 0x10], rax	       271	size.c	FUNCTION_3	CALL_2
0x40005e7	      0x48837df000	               cmp qword [rbp - 0x10], 0	       272	size.c	FUNCTION_3	IF_2
0x40005ec	            0x790f	                           jns 0x40005fd	       272	size.c	FUNCTION_3	IF_2
0x40005ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       273	size.c	FUNCTION_3	CALL_4
0x40005f2	          0x488b00	                    mov rax, qword [rax]	       273	size.c	FUNCTION_3	CALL_4
0x40005f5	          0x4889c7	                            mov rdi, rax	       273	size.c	FUNCTION_3	CALL_4
0x40005f8	      0xe800000000	                          call 0x40005fd	       273	size.c	FUNCTION_3	CALL_4
0x40005fd	      0x48837df000	               cmp qword [rbp - 0x10], 0	       274	size.c	FUNCTION_3	IF_3
0x4000602	            0x7410	                            je 0x4000614	       274	size.c	FUNCTION_3	IF_3
0x4000604	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       275	size.c	FUNCTION_3	CALL_5
0x4000608	          0x4889c7	                            mov rdi, rax	       275	size.c	FUNCTION_3	CALL_5
0x400060b	      0xe800000000	                          call 0x4000610	       275	size.c	FUNCTION_3	CALL_5
0x4000610	        0x488945e0	             mov qword [rbp - 0x20], rax	       275	size.c	FUNCTION_3	CALL_5
0x4000614	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       277	size.c	FUNCTION_3	CALL_6
0x4000618	        0x488b4008	                mov rax, qword [rax + 8]	       277	size.c	FUNCTION_3	CALL_6
0x400061c	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	       277	size.c	FUNCTION_3	CALL_6
0x4000623	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       277	size.c	FUNCTION_3	CALL_6
0x4000627	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       277	size.c	FUNCTION_3	CALL_6
0x400062b	          0x4889ce	                            mov rsi, rcx	       277	size.c	FUNCTION_3	CALL_6
0x400062e	          0x4889d7	                            mov rdi, rdx	       277	size.c	FUNCTION_3	CALL_6
0x4000631	            0xffd0	                                call rax	       277	size.c	FUNCTION_3	CALL_6
0x4000633	        0x488945e8	             mov qword [rbp - 0x18], rax	       277	size.c	FUNCTION_3	CALL_6
0x4000637	      0x48837de800	               cmp qword [rbp - 0x18], 0	       278	size.c	FUNCTION_3	IF_4
0x400063c	            0x7966	                           jns 0x40006a4	       278	size.c	FUNCTION_3	IF_4
0x400063e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       279	size.c	FUNCTION_3	CALL_8
0x4000642	          0x488b00	                    mov rax, qword [rax]	       279	size.c	FUNCTION_3	CALL_8
0x4000645	          0x4889c7	                            mov rdi, rax	       279	size.c	FUNCTION_3	CALL_8
0x4000648	      0xe800000000	                          call 0x400064d	       279	size.c	FUNCTION_3	CALL_8
0x400064d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       283	size.c	FUNCTION_3	WHILE_1
0x4000651	    0x488d14c50000	                        lea rdx, [rax*8]	       283	size.c	FUNCTION_3	WHILE_1
0x4000659	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       283	size.c	FUNCTION_3	WHILE_1
0x400065d	          0x4801d0	                            add rax, rdx	       283	size.c	FUNCTION_3	WHILE_1
0x4000660	          0x488b00	                    mov rax, qword [rax]	       283	size.c	FUNCTION_3	WHILE_1
0x4000663	        0x488945f8	                mov qword [rbp - 8], rax	       283	size.c	FUNCTION_3	WHILE_1
0x4000667	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	size.c	FUNCTION_3	WHILE_1	IF_5	CALL_9
0x400066b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       285	size.c	FUNCTION_3	WHILE_1	IF_5	CALL_9
0x400066f	          0x8b4020	            mov eax, dword [rax + 0x20] 	       285	size.c	FUNCTION_3	WHILE_1	IF_5	CALL_9
0x4000672	      0x2500100000	                         and eax, 0x1000	       285	size.c	FUNCTION_3	WHILE_1	IF_5	CALL_9
0x4000677	            0x85c0	                           test eax, eax	       285	size.c	FUNCTION_3	WHILE_1	IF_5	CALL_9
0x4000679	            0x7429	                            je 0x40006a4	       285	size.c	FUNCTION_3	WHILE_1	IF_5	CALL_9
0x400067b	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	size.c	FUNCTION_3	WHILE_1	IF_5
0x400067f	          0x8b4018	            mov eax, dword [rax + 0x18] 	       286	size.c	FUNCTION_3	WHILE_1	IF_5
0x4000682	      0x2500010000	                          and eax, 0x100	       286	size.c	FUNCTION_3	WHILE_1	IF_5
0x4000687	            0x85c0	                           test eax, eax	       286	size.c	FUNCTION_3	WHILE_1	IF_5
0x4000689	            0x7519	                           jne 0x40006a4	       286	size.c	FUNCTION_3	WHILE_1	IF_5
0x400068b	        0x488b45f8	                mov rax, qword [rbp - 8]	       287	size.c	FUNCTION_3	WHILE_1	IF_5
0x400068f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       287	size.c	FUNCTION_3	WHILE_1	IF_5
0x4000693	    0x488b05000000	            mov rax, qword [0x0400069a] 	       287	size.c	FUNCTION_3	WHILE_1	IF_5
0x400069a	          0x4801d0	                            add rax, rdx	       287	size.c	FUNCTION_3	WHILE_1	IF_5
0x400069d	    0x488905000000	            mov qword [0x040006a4], rax 	       287	size.c	FUNCTION_3	WHILE_1	IF_5
0x40006a4	      0x48836de801	               sub qword [rbp - 0x18], 1	       281	size.c	FUNCTION_3	WHILE_1
0x40006a9	      0x48837de800	               cmp qword [rbp - 0x18], 0	       281	size.c	FUNCTION_3	WHILE_1
0x40006ae	            0x799d	                           jns 0x400064d	       281	size.c	FUNCTION_3	WHILE_1
0x40006b0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       289	size.c	FUNCTION_3	CALL_10
0x40006b4	          0x4889c7	                            mov rdi, rax	       289	size.c	FUNCTION_3	CALL_10
0x40006b7	      0xe800000000	                          call 0x40006bc	       289	size.c	FUNCTION_3	CALL_10
0x40006bc	            0xeb01	                           jmp 0x40006bf	       289	size.c	FUNCTION_3	CALL_10
0x40006be	              0x90	                                     nop	       269	size.c	FUNCTION_3	IF_1
0x40006bf	              0xc9	                                   leave	       290	size.c	FUNCTION_3
0x40006c0	              0xc3	                                     ret	       290	size.c	FUNCTION_3
sysv_internal_printer	IF,1:DO,0:ELSE,0:FOR,0:CALL,7:SWITCH,0:functions,0:WHILE,0	33
0x4000e2e	              0x55	                                push rbp	       548	size.c	FUNCTION_13
0x4000e2f	          0x4889e5	                            mov rbp, rsp	       548	size.c	FUNCTION_13
0x4000e32	        0x4883ec30	                           sub rsp, 0x30	       548	size.c	FUNCTION_13
0x4000e36	        0x48897de8	             mov qword [rbp - 0x18], rdi	       548	size.c	FUNCTION_13
0x4000e3a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       548	size.c	FUNCTION_13
0x4000e3e	        0x488955d8	             mov qword [rbp - 0x28], rdx	       548	size.c	FUNCTION_13
0x4000e42	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       549	size.c	FUNCTION_13	CALL_1
0x4000e46	        0x488b4038	            mov rax, qword [rax + 0x38] 	       549	size.c	FUNCTION_13	CALL_1
0x4000e4a	        0x488945f8	                mov qword [rbp - 8], rax	       549	size.c	FUNCTION_13	CALL_1
0x4000e4e	    0x48817de00000	               cmp qword [rbp - 0x20], 0	       551	size.c	FUNCTION_13	IF_1	CALL_2
0x4000e56	            0x744d	                            je 0x4000ea5	       551	size.c	FUNCTION_13	IF_1	CALL_2
0x4000e58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       552	size.c	FUNCTION_13	IF_1	CALL_3
0x4000e5c	          0x8b4020	            mov eax, dword [rax + 0x20] 	       552	size.c	FUNCTION_13	IF_1	CALL_3
0x4000e5f	      0x2500100000	                         and eax, 0x1000	       552	size.c	FUNCTION_13	IF_1	CALL_3
0x4000e64	            0x85c0	                           test eax, eax	       552	size.c	FUNCTION_13	IF_1	CALL_3
0x4000e66	            0x753d	                           jne 0x4000ea5	       552	size.c	FUNCTION_13	IF_1	CALL_3
0x4000e68	    0x48817de00000	               cmp qword [rbp - 0x20], 0	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000e70	            0x7433	                            je 0x4000ea5	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000e72	    0x488b15000000	            mov rdx, qword [0x04000e79] 	       555	size.c	FUNCTION_13	IF_1
0x4000e79	        0x488b45f8	                mov rax, qword [rbp - 8]	       555	size.c	FUNCTION_13	IF_1
0x4000e7d	          0x4801d0	                            add rax, rdx	       555	size.c	FUNCTION_13	IF_1
0x4000e80	    0x488905000000	            mov qword [0x04000e87], rax 	       555	size.c	FUNCTION_13	IF_1
0x4000e87	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x4000e8b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x4000e8f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x4000e93	          0x488b00	                    mov rax, qword [rax]	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x4000e96	        0x488b4df8	                mov rcx, qword [rbp - 8]	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x4000e9a	          0x4889ce	                            mov rsi, rcx	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x4000e9d	          0x4889c7	                            mov rdi, rax	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x4000ea0	      0xe816ffffff	                  call sym.sysv_one_line	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x4000ea5	              0x90	                                     nop	       561	size.c	FUNCTION_13
0x4000ea6	              0xc9	                                   leave	       561	size.c	FUNCTION_13
0x4000ea7	              0xc3	                                     ret	       561	size.c	FUNCTION_13
