bfd_preserve_restore	functions,0:DO,0:ELSE,0:CALL,2:IF,0:FOR,0:WHILE,0:SWITCH,0	71
0x4000204	              0x55	                                push rbp	       156	format.c	FUNCTION_4
0x4000205	          0x4889e5	                            mov rbp, rsp	       156	format.c	FUNCTION_4
0x4000208	        0x4883ec10	                           sub rsp, 0x10	       156	format.c	FUNCTION_4
0x400020c	        0x48897df8	                mov qword [rbp - 8], rdi	       156	format.c	FUNCTION_4
0x4000210	        0x488975f0	             mov qword [rbp - 0x10], rsi	       156	format.c	FUNCTION_4
0x4000214	        0x488b45f8	                mov rax, qword [rbp - 8]	       157	format.c	FUNCTION_4	CALL_1
0x4000218	        0x4883c068	                           add rax, 0x68	       157	format.c	FUNCTION_4	CALL_1
0x400021c	          0x4889c7	                            mov rdi, rax	       157	format.c	FUNCTION_4	CALL_1
0x400021f	      0xe800000000	                          call 0x4000224	       157	format.c	FUNCTION_4	CALL_1
0x4000224	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       159	format.c	FUNCTION_4
0x4000228	        0x488b5008	                mov rdx, qword [rax + 8]	       159	format.c	FUNCTION_4
0x400022c	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	format.c	FUNCTION_4
0x4000230	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       159	format.c	FUNCTION_4
0x4000237	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       160	format.c	FUNCTION_4
0x400023b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       160	format.c	FUNCTION_4
0x400023f	        0x488b45f8	                mov rax, qword [rbp - 8]	       160	format.c	FUNCTION_4
0x4000243	    0x488990c00000	             mov qword [rax + 0xc0], rdx	       160	format.c	FUNCTION_4
0x400024a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       161	format.c	FUNCTION_4
0x400024e	          0x8b4010	            mov eax, dword [rax + 0x10] 	       161	format.c	FUNCTION_4
0x4000251	      0x25ffff0f00	                        and eax, 0xfffff	       161	format.c	FUNCTION_4
0x4000256	            0x89c2	                            mov edx, eax	       161	format.c	FUNCTION_4
0x4000258	        0x488b45f8	                mov rax, qword [rbp - 8]	       161	format.c	FUNCTION_4
0x400025c	    0x81e2ffff0f00	                        and edx, 0xfffff	       161	format.c	FUNCTION_4
0x4000262	            0x89d1	                            mov ecx, edx	       161	format.c	FUNCTION_4
0x4000264	          0xc1e105	                              shl ecx, 5	       161	format.c	FUNCTION_4
0x4000267	          0x8b5044	            mov edx, dword [rax + 0x44] 	       161	format.c	FUNCTION_4
0x400026a	    0x81e21f0000fe	                     and edx, 0xfe00001f	       161	format.c	FUNCTION_4
0x4000270	             0x9ca	                             or edx, ecx	       161	format.c	FUNCTION_4
0x4000272	          0x895044	             mov dword [rax + 0x44], edx	       161	format.c	FUNCTION_4
0x4000275	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	format.c	FUNCTION_4
0x4000279	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       162	format.c	FUNCTION_4
0x400027d	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	       162	format.c	FUNCTION_4
0x4000281	        0x48894868	             mov qword [rax + 0x68], rcx	       162	format.c	FUNCTION_4
0x4000285	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	       162	format.c	FUNCTION_4
0x4000289	        0x48894870	             mov qword [rax + 0x70], rcx	       162	format.c	FUNCTION_4
0x400028d	        0x488b4a48	            mov rcx, qword [rdx + 0x48] 	       162	format.c	FUNCTION_4
0x4000291	        0x48894878	             mov qword [rax + 0x78], rcx	       162	format.c	FUNCTION_4
0x4000295	        0x488b4a50	            mov rcx, qword [rdx + 0x50] 	       162	format.c	FUNCTION_4
0x4000299	    0x488988800000	             mov qword [rax + 0x80], rcx	       162	format.c	FUNCTION_4
0x40002a0	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	       162	format.c	FUNCTION_4
0x40002a4	    0x488990880000	             mov qword [rax + 0x88], rdx	       162	format.c	FUNCTION_4
0x40002ab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       163	format.c	FUNCTION_4
0x40002af	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       163	format.c	FUNCTION_4
0x40002b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       163	format.c	FUNCTION_4
0x40002b7	    0x488990900000	             mov qword [rax + 0x90], rdx	       163	format.c	FUNCTION_4
0x40002be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       164	format.c	FUNCTION_4
0x40002c2	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       164	format.c	FUNCTION_4
0x40002c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	format.c	FUNCTION_4
0x40002ca	    0x488990980000	             mov qword [rax + 0x98], rdx	       164	format.c	FUNCTION_4
0x40002d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       165	format.c	FUNCTION_4
0x40002d5	          0x8b5030	            mov edx, dword [rax + 0x30] 	       165	format.c	FUNCTION_4
0x40002d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	format.c	FUNCTION_4
0x40002dc	    0x8990a0000000	             mov dword [rax + 0xa0], edx	       165	format.c	FUNCTION_4
0x40002e2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	format.c	FUNCTION_4
0x40002e6	          0x8b4034	            mov eax, dword [rax + 0x34] 	       166	format.c	FUNCTION_4
0x40002e9	    0x890500000000	            mov dword [0x040002ef], eax 	       166	format.c	FUNCTION_4
0x40002ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	format.c	FUNCTION_4
0x40002f3	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       167	format.c	FUNCTION_4
0x40002f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       167	format.c	FUNCTION_4
0x40002fb	    0x488990100100	            mov qword [rax + 0x110], rdx	       167	format.c	FUNCTION_4
0x4000302	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       171	format.c	FUNCTION_4	CALL_2
0x4000306	          0x488b10	                    mov rdx, qword [rax]	       171	format.c	FUNCTION_4	CALL_2
0x4000309	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	format.c	FUNCTION_4	CALL_2
0x400030d	          0x4889d6	                            mov rsi, rdx	       171	format.c	FUNCTION_4	CALL_2
0x4000310	          0x4889c7	                            mov rdi, rax	       171	format.c	FUNCTION_4	CALL_2
0x4000313	      0xe800000000	                          call 0x4000318	       171	format.c	FUNCTION_4	CALL_2
0x4000318	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       172	format.c	FUNCTION_4
0x400031c	    0x48c700000000	                      mov qword [rax], 0	       172	format.c	FUNCTION_4
0x4000323	              0x90	                                     nop	       173	format.c	FUNCTION_4
0x4000324	              0xc9	                                   leave	       173	format.c	FUNCTION_4
0x4000325	              0xc3	                                     ret	       173	format.c	FUNCTION_4
bfd_format_string	functions,0:DO,0:ELSE,0:CALL,0:IF,1:FOR,0:WHILE,0:SWITCH,1	27
0x4000db5	              0x55	                                push rbp	       566	format.c	FUNCTION_8
0x4000db6	          0x4889e5	                            mov rbp, rsp	       566	format.c	FUNCTION_8
0x4000db9	          0x897dfc	                mov dword [rbp - 4], edi	       566	format.c	FUNCTION_8
0x4000dbc	          0x8b45fc	                mov eax, dword [rbp - 4]	       567	format.c	FUNCTION_8	IF_1
0x4000dbf	            0x85c0	                           test eax, eax	       567	format.c	FUNCTION_8	IF_1
0x4000dc1	            0x7808	                            js 0x4000dcb	       567	format.c	FUNCTION_8	IF_1
0x4000dc3	          0x8b45fc	                mov eax, dword [rbp - 4]	       568	format.c	FUNCTION_8	IF_1
0x4000dc6	          0x83f803	                              cmp eax, 3	       568	format.c	FUNCTION_8	IF_1
0x4000dc9	            0x7e07	                           jle 0x4000dd2	       568	format.c	FUNCTION_8	IF_1
0x4000dcb	      0xb800000000	                              mov eax, 0	       569	format.c	FUNCTION_8	IF_1
0x4000dd0	            0xeb2c	                           jmp 0x4000dfe	       569	format.c	FUNCTION_8	IF_1
0x4000dd2	          0x8b45fc	                mov eax, dword [rbp - 4]	       571	format.c	FUNCTION_8	SWITCH_1
0x4000dd5	          0x83f802	                              cmp eax, 2	       571	format.c	FUNCTION_8	SWITCH_1
0x4000dd8	            0x7411	                            je 0x4000deb	       571	format.c	FUNCTION_8	SWITCH_1
0x4000dda	          0x83f803	                              cmp eax, 3	       571	format.c	FUNCTION_8	SWITCH_1
0x4000ddd	            0x7413	                            je 0x4000df2	       571	format.c	FUNCTION_8	SWITCH_1
0x4000ddf	          0x83f801	                              cmp eax, 1	       571	format.c	FUNCTION_8	SWITCH_1
0x4000de2	            0x7515	                           jne 0x4000df9	       571	format.c	FUNCTION_8	SWITCH_1
0x4000de4	      0xb800000000	                              mov eax, 0	       574	format.c	FUNCTION_8	SWITCH_1
0x4000de9	            0xeb13	                           jmp 0x4000dfe	       574	format.c	FUNCTION_8	SWITCH_1
0x4000deb	      0xb800000000	                              mov eax, 0	       576	format.c	FUNCTION_8	SWITCH_1
0x4000df0	            0xeb0c	                           jmp 0x4000dfe	       576	format.c	FUNCTION_8	SWITCH_1
0x4000df2	      0xb800000000	                              mov eax, 0	       578	format.c	FUNCTION_8	SWITCH_1
0x4000df7	            0xeb05	                           jmp 0x4000dfe	       578	format.c	FUNCTION_8	SWITCH_1
0x4000df9	      0xb800000000	                              mov eax, 0	       580	format.c	FUNCTION_8	SWITCH_1
0x4000dfe	              0x5d	                                 pop rbp	       582	format.c	FUNCTION_8
0x4000dff	              0xc3	                                     ret	       582	format.c	FUNCTION_8
bfd_reinit	functions,0:DO,0:ELSE,0:CALL,1:IF,0:FOR,0:WHILE,0:SWITCH,0	31
0x400018c	              0x55	                                push rbp	       144	format.c	FUNCTION_3
0x400018d	          0x4889e5	                            mov rbp, rsp	       144	format.c	FUNCTION_3
0x4000190	        0x4883ec10	                           sub rsp, 0x10	       144	format.c	FUNCTION_3
0x4000194	        0x48897df8	                mov qword [rbp - 8], rdi	       144	format.c	FUNCTION_3
0x4000198	          0x8975f4	              mov dword [rbp - 0xc], esi	       144	format.c	FUNCTION_3
0x400019b	        0x488b45f8	                mov rax, qword [rbp - 8]	       145	format.c	FUNCTION_3
0x400019f	    0x48c780f80000	               mov qword [rax + 0xf8], 0	       145	format.c	FUNCTION_3
0x40001aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       146	format.c	FUNCTION_3
0x40001ae	    0x48c780c00000	               mov qword [rax + 0xc0], 0	       146	format.c	FUNCTION_3
0x40001b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	format.c	FUNCTION_3
0x40001bd	          0x8b4044	            mov eax, dword [rax + 0x44] 	       147	format.c	FUNCTION_3
0x40001c0	          0xc1e805	                              shr eax, 5	       147	format.c	FUNCTION_3
0x40001c3	      0x25ffff0f00	                        and eax, 0xfffff	       147	format.c	FUNCTION_3
0x40001c8	      0x2500d80f00	                        and eax, 0xfd800	       147	format.c	FUNCTION_3
0x40001cd	            0x89c2	                            mov edx, eax	       147	format.c	FUNCTION_3
0x40001cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	format.c	FUNCTION_3
0x40001d3	    0x81e2ffff0f00	                        and edx, 0xfffff	       147	format.c	FUNCTION_3
0x40001d9	            0x89d1	                            mov ecx, edx	       147	format.c	FUNCTION_3
0x40001db	          0xc1e105	                              shl ecx, 5	       147	format.c	FUNCTION_3
0x40001de	          0x8b5044	            mov edx, dword [rax + 0x44] 	       147	format.c	FUNCTION_3
0x40001e1	    0x81e21f0000fe	                     and edx, 0xfe00001f	       147	format.c	FUNCTION_3
0x40001e7	             0x9ca	                             or edx, ecx	       147	format.c	FUNCTION_3
0x40001e9	          0x895044	             mov dword [rax + 0x44], edx	       147	format.c	FUNCTION_3
0x40001ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	format.c	FUNCTION_3	CALL_1
0x40001f0	          0x4889c7	                            mov rdi, rax	       148	format.c	FUNCTION_3	CALL_1
0x40001f3	      0xe800000000	                          call 0x40001f8	       148	format.c	FUNCTION_3	CALL_1
0x40001f8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       149	format.c	FUNCTION_3
0x40001fb	    0x890500000000	            mov dword [0x04000201], eax 	       149	format.c	FUNCTION_3
0x4000201	              0x90	                                     nop	       150	format.c	FUNCTION_3
0x4000202	              0xc9	                                   leave	       150	format.c	FUNCTION_3
0x4000203	              0xc3	                                     ret	       150	format.c	FUNCTION_3
bfd_set_format	functions,0:DO,0:ELSE,0:CALL,3:IF,3:FOR,0:WHILE,0:SWITCH,0	70
0x4000cd6	              0x55	                                push rbp	       528	format.c	FUNCTION_7
0x4000cd7	          0x4889e5	                            mov rbp, rsp	       528	format.c	FUNCTION_7
0x4000cda	        0x4883ec10	                           sub rsp, 0x10	       528	format.c	FUNCTION_7
0x4000cde	        0x48897df8	                mov qword [rbp - 8], rdi	       528	format.c	FUNCTION_7
0x4000ce2	          0x8975f4	              mov dword [rbp - 0xc], esi	       528	format.c	FUNCTION_7
0x4000ce5	        0x488b45f8	                mov rax, qword [rbp - 8]	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000ce9	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000ced	          0x83e018	                           and eax, 0x18	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000cf0	            0x3c08	                               cmp al, 8	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000cf2	            0x741e	                            je 0x4000d12	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000cf4	        0x488b45f8	                mov rax, qword [rbp - 8]	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000cf8	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000cfc	          0x83e018	                           and eax, 0x18	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000cff	            0x3c18	                            cmp al, 0x18	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000d01	            0x740f	                            je 0x4000d12	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000d03	        0x488b45f8	                mov rax, qword [rbp - 8]	       530	format.c	FUNCTION_7	IF_1
0x4000d07	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       530	format.c	FUNCTION_7	IF_1
0x4000d0b	          0x83e007	                              and eax, 7	       530	format.c	FUNCTION_7	IF_1
0x4000d0e	            0x3c03	                               cmp al, 3	       530	format.c	FUNCTION_7	IF_1
0x4000d10	            0x7614	                           jbe 0x4000d26	       530	format.c	FUNCTION_7	IF_1
0x4000d12	      0xbf05000000	                              mov edi, 5	       532	format.c	FUNCTION_7	IF_1	CALL_2
0x4000d17	      0xe800000000	                          call 0x4000d1c	       532	format.c	FUNCTION_7	IF_1	CALL_2
0x4000d1c	      0xb800000000	                              mov eax, 0	       533	format.c	FUNCTION_7	IF_1
0x4000d21	      0xe98d000000	                           jmp 0x4000db3	       533	format.c	FUNCTION_7	IF_1
0x4000d26	        0x488b45f8	                mov rax, qword [rbp - 8]	       536	format.c	FUNCTION_7	IF_2
0x4000d2a	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       536	format.c	FUNCTION_7	IF_2
0x4000d2e	          0x83e007	                              and eax, 7	       536	format.c	FUNCTION_7	IF_2
0x4000d31	            0x84c0	                             test al, al	       536	format.c	FUNCTION_7	IF_2
0x4000d33	            0x7419	                            je 0x4000d4e	       536	format.c	FUNCTION_7	IF_2
0x4000d35	        0x488b45f8	                mov rax, qword [rbp - 8]	       537	format.c	FUNCTION_7	IF_2
0x4000d39	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       537	format.c	FUNCTION_7	IF_2
0x4000d3d	          0x83e007	                              and eax, 7	       537	format.c	FUNCTION_7	IF_2
0x4000d40	           0xfb6c0	                           movzx eax, al	       537	format.c	FUNCTION_7	IF_2
0x4000d43	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       537	format.c	FUNCTION_7	IF_2
0x4000d46	           0xf94c0	                                 sete al	       537	format.c	FUNCTION_7	IF_2
0x4000d49	           0xfb6c0	                           movzx eax, al	       537	format.c	FUNCTION_7	IF_2
0x4000d4c	            0xeb65	                           jmp 0x4000db3	       537	format.c	FUNCTION_7	IF_2
0x4000d4e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       540	format.c	FUNCTION_7
0x4000d51	          0x83e007	                              and eax, 7	       540	format.c	FUNCTION_7
0x4000d54	            0x89c2	                            mov edx, eax	       540	format.c	FUNCTION_7
0x4000d56	        0x488b45f8	                mov rax, qword [rbp - 8]	       540	format.c	FUNCTION_7
0x4000d5a	            0x89d1	                            mov ecx, edx	       540	format.c	FUNCTION_7
0x4000d5c	          0x83e107	                              and ecx, 7	       540	format.c	FUNCTION_7
0x4000d5f	         0xfb65044	           movzx edx, byte [rax + 0x44] 	       540	format.c	FUNCTION_7
0x4000d63	          0x83e2f8	                     and edx, 0xfffffff8	       540	format.c	FUNCTION_7
0x4000d66	             0x9ca	                             or edx, ecx	       540	format.c	FUNCTION_7
0x4000d68	          0x885044	               mov byte [rax + 0x44], dl	       540	format.c	FUNCTION_7
0x4000d6b	        0x488b45f8	                mov rax, qword [rbp - 8]	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d6f	        0x488b4008	                mov rax, qword [rax + 8]	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d73	        0x488b55f8	                mov rdx, qword [rbp - 8]	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d77	         0xfb65244	           movzx edx, byte [rdx + 0x44] 	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d7b	          0x83e207	                              and edx, 7	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d7e	           0xfb6d2	                           movzx edx, dl	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d81	          0x4863d2	                         movsxd rdx, edx	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d84	        0x4883c21a	                           add rdx, 0x1a	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d88	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d8c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d90	          0x4889d7	                            mov rdi, rdx	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d93	            0xffd0	                                call rax	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d95	            0x85c0	                           test eax, eax	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d97	            0x7515	                           jne 0x4000dae	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x4000d99	        0x488b45f8	                mov rax, qword [rbp - 8]	       544	format.c	FUNCTION_7	IF_3
0x4000d9d	         0xfb65044	           movzx edx, byte [rax + 0x44] 	       544	format.c	FUNCTION_7	IF_3
0x4000da1	          0x83e2f8	                     and edx, 0xfffffff8	       544	format.c	FUNCTION_7	IF_3
0x4000da4	          0x885044	               mov byte [rax + 0x44], dl	       544	format.c	FUNCTION_7	IF_3
0x4000da7	      0xb800000000	                              mov eax, 0	       545	format.c	FUNCTION_7	IF_3
0x4000dac	            0xeb05	                           jmp 0x4000db3	       545	format.c	FUNCTION_7	IF_3
0x4000dae	      0xb801000000	                              mov eax, 1	       548	format.c	FUNCTION_7
0x4000db3	              0xc9	                                   leave	       549	format.c	FUNCTION_7
0x4000db4	              0xc3	                                     ret	       549	format.c	FUNCTION_7
bfd_preserve_save	functions,0:DO,0:ELSE,0:CALL,2:IF,1:FOR,0:WHILE,0:SWITCH,0	72
0x4000067	              0x55	                                push rbp	       122	format.c	FUNCTION_2
0x4000068	          0x4889e5	                            mov rbp, rsp	       122	format.c	FUNCTION_2
0x400006b	        0x4883ec10	                           sub rsp, 0x10	       122	format.c	FUNCTION_2
0x400006f	        0x48897df8	                mov qword [rbp - 8], rdi	       122	format.c	FUNCTION_2
0x4000073	        0x488975f0	             mov qword [rbp - 0x10], rsi	       122	format.c	FUNCTION_2
0x4000077	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	format.c	FUNCTION_2
0x400007b	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	       123	format.c	FUNCTION_2
0x4000082	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       123	format.c	FUNCTION_2
0x4000086	        0x48895008	                mov qword [rax + 8], rdx	       123	format.c	FUNCTION_2
0x400008a	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	format.c	FUNCTION_2
0x400008e	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	       124	format.c	FUNCTION_2
0x4000095	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	format.c	FUNCTION_2
0x4000099	        0x48895018	             mov qword [rax + 0x18], rdx	       124	format.c	FUNCTION_2
0x400009d	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	format.c	FUNCTION_2
0x40000a1	          0x8b4044	            mov eax, dword [rax + 0x44] 	       125	format.c	FUNCTION_2
0x40000a4	          0xc1e805	                              shr eax, 5	       125	format.c	FUNCTION_2
0x40000a7	      0x25ffff0f00	                        and eax, 0xfffff	       125	format.c	FUNCTION_2
0x40000ac	            0x89c2	                            mov edx, eax	       125	format.c	FUNCTION_2
0x40000ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       125	format.c	FUNCTION_2
0x40000b2	          0x895010	             mov dword [rax + 0x10], edx	       125	format.c	FUNCTION_2
0x40000b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	format.c	FUNCTION_2
0x40000b9	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	       126	format.c	FUNCTION_2
0x40000c0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       126	format.c	FUNCTION_2
0x40000c4	        0x48895020	             mov qword [rax + 0x20], rdx	       126	format.c	FUNCTION_2
0x40000c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	format.c	FUNCTION_2
0x40000cc	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       127	format.c	FUNCTION_2
0x40000d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       127	format.c	FUNCTION_2
0x40000d7	        0x48895028	             mov qword [rax + 0x28], rdx	       127	format.c	FUNCTION_2
0x40000db	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	format.c	FUNCTION_2
0x40000df	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	       128	format.c	FUNCTION_2
0x40000e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       128	format.c	FUNCTION_2
0x40000e9	          0x895030	             mov dword [rax + 0x30], edx	       128	format.c	FUNCTION_2
0x40000ec	    0x8b1500000000	            mov edx, dword [0x040000f2] 	       129	format.c	FUNCTION_2
0x40000f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       129	format.c	FUNCTION_2
0x40000f6	          0x895034	             mov dword [rax + 0x34], edx	       129	format.c	FUNCTION_2
0x40000f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       130	format.c	FUNCTION_2
0x40000fd	        0x488b55f8	                mov rdx, qword [rbp - 8]	       130	format.c	FUNCTION_2
0x4000101	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	       130	format.c	FUNCTION_2
0x4000105	        0x48894838	             mov qword [rax + 0x38], rcx	       130	format.c	FUNCTION_2
0x4000109	        0x488b4a70	            mov rcx, qword [rdx + 0x70] 	       130	format.c	FUNCTION_2
0x400010d	        0x48894840	             mov qword [rax + 0x40], rcx	       130	format.c	FUNCTION_2
0x4000111	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	       130	format.c	FUNCTION_2
0x4000115	        0x48894848	             mov qword [rax + 0x48], rcx	       130	format.c	FUNCTION_2
0x4000119	    0x488b8a800000	            mov rcx, qword [rdx + 0x80] 	       130	format.c	FUNCTION_2
0x4000120	        0x48894850	             mov qword [rax + 0x50], rcx	       130	format.c	FUNCTION_2
0x4000124	    0x488b92880000	            mov rdx, qword [rdx + 0x88] 	       130	format.c	FUNCTION_2
0x400012b	        0x48895058	             mov qword [rax + 0x58], rdx	       130	format.c	FUNCTION_2
0x400012f	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	format.c	FUNCTION_2	CALL_1
0x4000133	      0xbe01000000	                              mov esi, 1	       131	format.c	FUNCTION_2	CALL_1
0x4000138	          0x4889c7	                            mov rdi, rax	       131	format.c	FUNCTION_2	CALL_1
0x400013b	      0xe800000000	                          call 0x4000140	       131	format.c	FUNCTION_2	CALL_1
0x4000140	          0x4889c2	                            mov rdx, rax	       131	format.c	FUNCTION_2	CALL_1
0x4000143	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       131	format.c	FUNCTION_2	CALL_1
0x4000147	          0x488910	                    mov qword [rax], rdx	       131	format.c	FUNCTION_2	CALL_1
0x400014a	        0x488b45f8	                mov rax, qword [rbp - 8]	       132	format.c	FUNCTION_2
0x400014e	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	       132	format.c	FUNCTION_2
0x4000155	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       132	format.c	FUNCTION_2
0x4000159	        0x48895060	             mov qword [rax + 0x60], rdx	       132	format.c	FUNCTION_2
0x400015d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       133	format.c	FUNCTION_2	IF_1
0x4000161	          0x488b00	                    mov rax, qword [rax]	       133	format.c	FUNCTION_2	IF_1
0x4000164	          0x4885c0	                           test rax, rax	       133	format.c	FUNCTION_2	IF_1
0x4000167	            0x7507	                           jne 0x4000170	       133	format.c	FUNCTION_2	IF_1
0x4000169	      0xb800000000	                              mov eax, 0	       134	format.c	FUNCTION_2	IF_1
0x400016e	            0xeb1a	                           jmp 0x400018a	       134	format.c	FUNCTION_2	IF_1
0x4000170	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	format.c	FUNCTION_2	CALL_2
0x4000174	        0x4883c068	                           add rax, 0x68	       136	format.c	FUNCTION_2	CALL_2
0x4000178	      0xba30010000	                          mov edx, 0x130	       136	format.c	FUNCTION_2	CALL_2
0x400017d	      0xbe00000000	                              mov esi, 0	       136	format.c	FUNCTION_2	CALL_2
0x4000182	          0x4889c7	                            mov rdi, rax	       136	format.c	FUNCTION_2	CALL_2
0x4000185	      0xe800000000	                          call 0x400018a	       136	format.c	FUNCTION_2	CALL_2
0x400018a	              0xc9	                                   leave	       138	format.c	FUNCTION_2
0x400018b	              0xc3	                                     ret	       138	format.c	FUNCTION_2
bfd_preserve_finish	functions,0:DO,0:ELSE,0:CALL,1:IF,0:FOR,0:WHILE,0:SWITCH,0	14
0x4000326	              0x55	                                push rbp	       180	format.c	FUNCTION_5
0x4000327	          0x4889e5	                            mov rbp, rsp	       180	format.c	FUNCTION_5
0x400032a	        0x4883ec10	                           sub rsp, 0x10	       180	format.c	FUNCTION_5
0x400032e	        0x48897df8	                mov qword [rbp - 8], rdi	       180	format.c	FUNCTION_5
0x4000332	        0x488975f0	             mov qword [rbp - 0x10], rsi	       180	format.c	FUNCTION_5
0x4000336	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       185	format.c	FUNCTION_5	CALL_1
0x400033a	        0x4883c038	                           add rax, 0x38	       185	format.c	FUNCTION_5	CALL_1
0x400033e	          0x4889c7	                            mov rdi, rax	       185	format.c	FUNCTION_5	CALL_1
0x4000341	      0xe800000000	                          call 0x4000346	       185	format.c	FUNCTION_5	CALL_1
0x4000346	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       186	format.c	FUNCTION_5
0x400034a	    0x48c700000000	                      mov qword [rax], 0	       186	format.c	FUNCTION_5
0x4000351	              0x90	                                     nop	       187	format.c	FUNCTION_5
0x4000352	              0xc9	                                   leave	       187	format.c	FUNCTION_5
0x4000353	              0xc3	                                     ret	       187	format.c	FUNCTION_5
bfd_check_format_matches	functions,0:DO,0:ELSE,3:CALL,25:IF,42:FOR,2:WHILE,3:SWITCH,0	508
0x4000354	              0x55	                                push rbp	       211	format.c	FUNCTION_6
0x4000355	          0x4889e5	                            mov rbp, rsp	       211	format.c	FUNCTION_6
0x4000358	    0x4881ec000100	                          sub rsp, 0x100	       211	format.c	FUNCTION_6
0x400035f	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       211	format.c	FUNCTION_6
0x4000366	    0x89b514ffffff	             mov dword [rbp - 0xec], esi	       211	format.c	FUNCTION_6
0x400036c	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       211	format.c	FUNCTION_6
0x4000373	    0x64488b042528	                mov rax, qword fs:[0x28]	       211	format.c	FUNCTION_6
0x400037c	        0x488945f8	                mov qword [rbp - 8], rax	       211	format.c	FUNCTION_6
0x4000380	            0x31c0	                            xor eax, eax	       211	format.c	FUNCTION_6
0x4000382	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       217	format.c	FUNCTION_6
0x400038d	    0x8b0500000000	            mov eax, dword [0x04000393] 	       221	format.c	FUNCTION_6
0x4000393	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       221	format.c	FUNCTION_6
0x4000399	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	       224	format.c	FUNCTION_6	IF_1
0x40003a1	            0x740e	                            je 0x40003b1	       224	format.c	FUNCTION_6	IF_1
0x40003a3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       225	format.c	FUNCTION_6	IF_1
0x40003aa	    0x48c700000000	                      mov qword [rax], 0	       225	format.c	FUNCTION_6	IF_1
0x40003b1	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x40003b8	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x40003bc	          0x83e018	                           and eax, 0x18	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x40003bf	            0x3c08	                               cmp al, 8	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x40003c1	            0x7412	                            je 0x40003d5	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x40003c3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x40003ca	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x40003ce	          0x83e018	                           and eax, 0x18	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x40003d1	            0x3c18	                            cmp al, 0x18	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x40003d3	            0x7512	                           jne 0x40003e7	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x40003d5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       228	format.c	FUNCTION_6	IF_2
0x40003dc	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       228	format.c	FUNCTION_6	IF_2
0x40003e0	          0x83e007	                              and eax, 7	       228	format.c	FUNCTION_6	IF_2
0x40003e3	            0x3c03	                               cmp al, 3	       228	format.c	FUNCTION_6	IF_2
0x40003e5	            0x7614	                           jbe 0x40003fb	       228	format.c	FUNCTION_6	IF_2
0x40003e7	      0xbf05000000	                              mov edi, 5	       230	format.c	FUNCTION_6	IF_2	CALL_2
0x40003ec	      0xe800000000	                          call 0x40003f1	       230	format.c	FUNCTION_6	IF_2	CALL_2
0x40003f1	      0xb800000000	                              mov eax, 0	       231	format.c	FUNCTION_6	IF_2
0x40003f6	      0xe9c5080000	                           jmp 0x4000cc0	       231	format.c	FUNCTION_6	IF_2
0x40003fb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       234	format.c	FUNCTION_6	IF_3
0x4000402	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       234	format.c	FUNCTION_6	IF_3
0x4000406	          0x83e007	                              and eax, 7	       234	format.c	FUNCTION_6	IF_3
0x4000409	            0x84c0	                             test al, al	       234	format.c	FUNCTION_6	IF_3
0x400040b	            0x7422	                            je 0x400042f	       234	format.c	FUNCTION_6	IF_3
0x400040d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       235	format.c	FUNCTION_6	IF_3
0x4000414	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       235	format.c	FUNCTION_6	IF_3
0x4000418	          0x83e007	                              and eax, 7	       235	format.c	FUNCTION_6	IF_3
0x400041b	           0xfb6c0	                           movzx eax, al	       235	format.c	FUNCTION_6	IF_3
0x400041e	    0x3b8514ffffff	             cmp eax, dword [rbp - 0xec]	       235	format.c	FUNCTION_6	IF_3
0x4000424	           0xf94c0	                                 sete al	       235	format.c	FUNCTION_6	IF_3
0x4000427	           0xfb6c0	                           movzx eax, al	       235	format.c	FUNCTION_6	IF_3
0x400042a	      0xe991080000	                           jmp 0x4000cc0	       235	format.c	FUNCTION_6	IF_3
0x400042f	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	       237	format.c	FUNCTION_6	IF_4
0x4000437	            0x750f	                           jne 0x4000448	       237	format.c	FUNCTION_6	IF_4
0x4000439	    0x488b05000000	            mov rax, qword [0x04000440] 	       237	format.c	FUNCTION_6	IF_4
0x4000440	          0x488b00	                    mov rax, qword [rax]	       237	format.c	FUNCTION_6	IF_4
0x4000443	          0x4885c0	                           test rax, rax	       237	format.c	FUNCTION_6	IF_4
0x4000446	            0x743c	                            je 0x4000484	       237	format.c	FUNCTION_6	IF_4
0x4000448	    0x488b05000000	            mov rax, qword [0x0400044f] 	       241	format.c	FUNCTION_6	IF_4
0x400044f	        0x48c1e004	                              shl rax, 4	       241	format.c	FUNCTION_6	IF_4
0x4000453	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       241	format.c	FUNCTION_6	IF_4
0x400045a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x4000461	          0x4889c7	                            mov rdi, rax	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x4000464	      0xe800000000	                          call 0x4000469	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x4000469	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x4000470	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       243	format.c	FUNCTION_6	IF_4	IF_5
0x4000478	            0x750a	                           jne 0x4000484	       243	format.c	FUNCTION_6	IF_4	IF_5
0x400047a	      0xb800000000	                              mov eax, 0	       244	format.c	FUNCTION_6	IF_4	IF_5
0x400047f	      0xe93c080000	                           jmp 0x4000cc0	       244	format.c	FUNCTION_6	IF_4	IF_5
0x4000484	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       248	format.c	FUNCTION_6
0x400048a	          0x83e007	                              and eax, 7	       248	format.c	FUNCTION_6
0x400048d	            0x89c2	                            mov edx, eax	       248	format.c	FUNCTION_6
0x400048f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       248	format.c	FUNCTION_6
0x4000496	            0x89d1	                            mov ecx, edx	       248	format.c	FUNCTION_6
0x4000498	          0x83e107	                              and ecx, 7	       248	format.c	FUNCTION_6
0x400049b	         0xfb65044	           movzx edx, byte [rax + 0x44] 	       248	format.c	FUNCTION_6
0x400049f	          0x83e2f8	                     and edx, 0xfffffff8	       248	format.c	FUNCTION_6
0x40004a2	             0x9ca	                             or edx, ecx	       248	format.c	FUNCTION_6
0x40004a4	          0x885044	               mov byte [rax + 0x44], dl	       248	format.c	FUNCTION_6
0x40004a7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       249	format.c	FUNCTION_6
0x40004ae	        0x488b4008	                mov rax, qword [rax + 8]	       249	format.c	FUNCTION_6
0x40004b2	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       249	format.c	FUNCTION_6
0x40004b9	    0x48c745900000	               mov qword [rbp - 0x70], 0	       250	format.c	FUNCTION_6
0x40004c1	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       253	format.c	FUNCTION_6	IF_6
0x40004c8	         0xfb64047	           movzx eax, byte [rax + 0x47] 	       253	format.c	FUNCTION_6	IF_6
0x40004cc	          0x83e004	                              and eax, 4	       253	format.c	FUNCTION_6	IF_6
0x40004cf	            0x84c0	                             test al, al	       253	format.c	FUNCTION_6	IF_6
0x40004d1	     0xf8583000000	                           jne 0x400055a	       253	format.c	FUNCTION_6	IF_6
0x40004d7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40004de	      0xba00000000	                              mov edx, 0	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40004e3	      0xbe00000000	                              mov esi, 0	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40004e8	          0x4889c7	                            mov rdi, rax	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40004eb	      0xe800000000	                          call 0x40004f0	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40004f0	            0x85c0	                           test eax, eax	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40004f2	     0xf8590060000	                           jne 0x4000b88	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40004f8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x40004ff	        0x488b4008	                mov rax, qword [rax + 8]	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x4000503	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x400050a	         0xfb65244	           movzx edx, byte [rdx + 0x44] 	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x400050e	          0x83e207	                              and edx, 7	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x4000511	           0xfb6d2	                           movzx edx, dl	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x4000514	          0x4863d2	                         movsxd rdx, edx	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x4000517	        0x4883c216	                           add rdx, 0x16	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x400051b	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x400051f	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x4000526	          0x4889d7	                            mov rdi, rdx	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x4000529	            0xffd0	                                call rax	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x400052b	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x4000532	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	       260	format.c	FUNCTION_6	IF_6	IF_8
0x400053a	     0xf85e6050000	                           jne 0x4000b26	       260	format.c	FUNCTION_6	IF_6	IF_8
0x4000540	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 2	       275	format.c	FUNCTION_6	IF_6	IF_9
0x4000547	            0x7511	                           jne 0x400055a	       275	format.c	FUNCTION_6	IF_6	IF_9
0x4000549	    0x4881bd78ffff	               cmp qword [rbp - 0x88], 0	       275	format.c	FUNCTION_6	IF_6	IF_9
0x4000554	     0xf8421060000	                            je 0x4000b7b	       275	format.c	FUNCTION_6	IF_6	IF_9
0x400055a	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       281	format.c	FUNCTION_6
0x4000565	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       282	format.c	FUNCTION_6
0x4000570	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       283	format.c	FUNCTION_6
0x400057b	    0xc78528ffffff	          mov dword [rbp - 0xd8], 0x100 	       284	format.c	FUNCTION_6
0x4000585	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	       285	format.c	FUNCTION_6
0x400058f	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	       286	format.c	FUNCTION_6
0x4000599	    0x488b05000000	            mov rax, qword [0x040005a0] 	       287	format.c	FUNCTION_6
0x40005a0	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       287	format.c	FUNCTION_6
0x40005a6	    0x488b05000000	            mov rax, qword [0x040005ad] 	       289	format.c	FUNCTION_6	FOR_1
0x40005ad	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       289	format.c	FUNCTION_6	FOR_1
0x40005b4	      0xe98c020000	                           jmp 0x4000845	       289	format.c	FUNCTION_6	FOR_1
0x40005b9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       294	format.c	FUNCTION_6	FOR_1	IF_10
0x40005c0	          0x488b00	                    mov rax, qword [rax]	       294	format.c	FUNCTION_6	FOR_1	IF_10
0x40005c3	    0x483d00000000	                              cmp rax, 0	       294	format.c	FUNCTION_6	FOR_1	IF_10
0x40005c9	     0xf846d020000	                            je 0x400083c	       294	format.c	FUNCTION_6	FOR_1	IF_10
0x40005cf	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40005d6	         0xfb64047	           movzx eax, byte [rax + 0x47] 	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40005da	          0x83e004	                              and eax, 4	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40005dd	            0x84c0	                             test al, al	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40005df	            0x7517	                           jne 0x40005f8	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40005e1	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40005e8	          0x488b00	                    mov rax, qword [rax]	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40005eb	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40005f2	     0xf8444020000	                            je 0x400083c	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40005f8	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	       301	format.c	FUNCTION_6	FOR_1	CALL_6
0x40005fe	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       301	format.c	FUNCTION_6	FOR_1	CALL_6
0x4000605	            0x89d6	                            mov esi, edx	       301	format.c	FUNCTION_6	FOR_1	CALL_6
0x4000607	          0x4889c7	                            mov rdi, rax	       301	format.c	FUNCTION_6	FOR_1	CALL_6
0x400060a	      0xe87dfbffff	                     call sym.bfd_reinit	       301	format.c	FUNCTION_6	FOR_1	CALL_6
0x400060f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       304	format.c	FUNCTION_6	FOR_1
0x4000616	          0x488b10	                    mov rdx, qword [rax]	       304	format.c	FUNCTION_6	FOR_1
0x4000619	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       304	format.c	FUNCTION_6	FOR_1
0x4000620	        0x48895008	                mov qword [rax + 8], rdx	       304	format.c	FUNCTION_6	FOR_1
0x4000624	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x400062b	      0xba00000000	                              mov edx, 0	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x4000630	      0xbe00000000	                              mov esi, 0	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x4000635	          0x4889c7	                            mov rdi, rax	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x4000638	      0xe800000000	                          call 0x400063d	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x400063d	            0x85c0	                           test eax, eax	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x400063f	     0xf8546050000	                           jne 0x4000b8b	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x4000645	      0xbf03000000	                              mov edi, 3	       313	format.c	FUNCTION_6	FOR_1	CALL_8
0x400064a	      0xe800000000	                          call 0x400064f	       313	format.c	FUNCTION_6	FOR_1	CALL_8
0x400064f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000656	        0x488b4008	                mov rax, qword [rax + 8]	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x400065a	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000661	         0xfb65244	           movzx edx, byte [rdx + 0x44] 	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000665	          0x83e207	                              and edx, 7	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000668	           0xfb6d2	                           movzx edx, dl	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x400066b	          0x4863d2	                         movsxd rdx, edx	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x400066e	        0x4883c216	                           add rdx, 0x16	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000672	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000676	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x400067d	          0x4889d7	                            mov rdi, rdx	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000680	            0xffd0	                                call rax	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000682	        0x48894580	             mov qword [rbp - 0x80], rax	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000686	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       316	format.c	FUNCTION_6	FOR_1	IF_12
0x400068b	     0xf849b010000	                            je 0x400082c	       316	format.c	FUNCTION_6	FOR_1	IF_12
0x4000691	        0x488b4580	             mov rax, qword [rbp - 0x80]	       318	format.c	FUNCTION_6	FOR_1	IF_12
0x4000695	         0xfb6401f	           movzx eax, byte [rax + 0x1f] 	       318	format.c	FUNCTION_6	FOR_1	IF_12
0x4000699	           0xfb6c0	                           movzx eax, al	       318	format.c	FUNCTION_6	FOR_1	IF_12
0x400069c	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	       318	format.c	FUNCTION_6	FOR_1	IF_12
0x40006a2	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       324	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x40006a9	          0x488b00	                    mov rax, qword [rax]	       324	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x40006ac	    0x483d00000000	                              cmp rax, 0	       324	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x40006b2	            0x7517	                           jne 0x40006cb	       324	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x40006b4	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x40006bb	          0x488b00	                    mov rax, qword [rax]	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x40006be	         0xfb6401f	           movzx eax, byte [rax + 0x1f] 	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x40006c2	           0xfb6c0	                           movzx eax, al	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x40006c5	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x40006cb	        0x488b4580	             mov rax, qword [rbp - 0x80]	       328	format.c	FUNCTION_6	FOR_1	IF_12
0x40006cf	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       328	format.c	FUNCTION_6	FOR_1	IF_12
0x40006d6	        0x488b4590	             mov rax, qword [rbp - 0x70]	       329	format.c	FUNCTION_6	FOR_1	IF_12	IF_14
0x40006da	          0x4885c0	                           test rax, rax	       329	format.c	FUNCTION_6	FOR_1	IF_12	IF_14
0x40006dd	            0x7416	                            je 0x40006f5	       329	format.c	FUNCTION_6	FOR_1	IF_12	IF_14
0x40006df	        0x488d5590	                   lea rdx, [rbp - 0x70]	       330	format.c	FUNCTION_6	FOR_1	IF_12	CALL_10
0x40006e3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       330	format.c	FUNCTION_6	FOR_1	IF_12	CALL_10
0x40006ea	          0x4889d6	                            mov rsi, rdx	       330	format.c	FUNCTION_6	FOR_1	IF_12	CALL_10
0x40006ed	          0x4889c7	                            mov rdi, rax	       330	format.c	FUNCTION_6	FOR_1	IF_12	CALL_10
0x40006f0	      0xe831fcffff	            call sym.bfd_preserve_finish	       330	format.c	FUNCTION_6	FOR_1	IF_12	CALL_10
0x40006f5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x40006fc	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x4000700	          0x83e007	                              and eax, 7	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x4000703	            0x3c02	                               cmp al, 2	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x4000705	            0x7524	                           jne 0x400072b	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x4000707	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       333	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_11
0x400070e	         0xfb64047	           movzx eax, byte [rax + 0x47] 	       333	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_11
0x4000712	          0x83e080	                     and eax, 0xffffff80	       333	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_11
0x4000715	            0x84c0	                             test al, al	       333	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_11
0x4000717	     0xf8497000000	                            je 0x40007b4	       333	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_11
0x400071d	      0xe800000000	                          call 0x4000722	       334	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_12
0x4000722	          0x83f804	                              cmp eax, 4	       334	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_12
0x4000725	     0xf8489000000	                            je 0x40007b4	       334	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_12
0x400072b	    0x488b05000000	            mov rax, qword [0x04000732] 	       339	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_16
0x4000732	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       339	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_16
0x4000736	     0xf84ed030000	                            je 0x4000b29	       339	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_16
0x400073c	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       342	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x4000744	            0x7421	                            je 0x4000767	       342	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x4000746	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x400074c	            0x4898	                                    cdqe	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x400074e	    0x488d14c50000	                        lea rdx, [rax*8]	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x4000756	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x400075d	          0x4801c2	                            add rdx, rax	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x4000760	        0x488b4580	             mov rax, qword [rbp - 0x80]	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x4000764	          0x488902	                    mov qword [rdx], rax	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x4000767	    0x838520ffffff	               add dword [rbp - 0xe0], 1	       344	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x400076e	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x4000774	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x400077a	            0x7d16	                           jge 0x4000792	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x400077c	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       348	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x4000782	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	       348	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x4000788	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	       349	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x4000792	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x4000798	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x400079e	            0x7f6d	                            jg 0x400080d	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40007a0	        0x488b4580	             mov rax, qword [rbp - 0x80]	       354	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40007a4	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       354	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40007ab	    0x838524ffffff	               add dword [rbp - 0xdc], 1	       355	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40007b2	            0xeb59	                           jmp 0x400080d	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40007b4	    0x488b05000000	            mov rax, qword [0x040007bb] 	       363	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40007bb	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	       363	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40007c2	            0x7411	                            je 0x40007d5	       363	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40007c4	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       364	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40007cb	          0x488b00	                    mov rax, qword [rax]	       364	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40007ce	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       364	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40007d5	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       365	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40007dd	            0x7427	                            je 0x4000806	       365	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40007df	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40007e5	            0x4898	                                    cdqe	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40007e7	    0x488d14c50000	                        lea rdx, [rax*8]	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40007ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40007f6	          0x4801c2	                            add rdx, rax	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40007f9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x4000800	          0x488b00	                    mov rax, qword [rax]	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x4000803	          0x488902	                    mov qword [rdx], rax	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x4000806	    0x83852cffffff	               add dword [rbp - 0xd4], 1	       367	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1
0x400080d	        0x488d5590	                   lea rdx, [rbp - 0x70]	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x4000811	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x4000818	          0x4889d6	                            mov rsi, rdx	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x400081b	          0x4889c7	                            mov rdi, rax	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x400081e	      0xe844f8ffff	              call sym.bfd_preserve_save	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x4000823	            0x85c0	                           test eax, eax	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x4000825	            0x7516	                           jne 0x400083d	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x4000827	      0xe966030000	                           jmp 0x4000b92	       371	format.c	FUNCTION_6	FOR_1	IF_12	IF_22
0x400082c	      0xe800000000	                          call 0x4000831	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x4000831	          0x83f803	                              cmp eax, 3	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x4000834	     0xf8554030000	                           jne 0x4000b8e	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x400083a	            0xeb01	                           jmp 0x400083d	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x400083c	              0x90	                                     nop	       296	format.c	FUNCTION_6	FOR_1	IF_10
0x400083d	    0x48838540ffff	               add qword [rbp - 0xc0], 8	       289	format.c	FUNCTION_6	FOR_1
0x4000845	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       289	format.c	FUNCTION_6	FOR_1
0x400084c	          0x488b00	                    mov rax, qword [rax]	       289	format.c	FUNCTION_6	FOR_1
0x400084f	          0x4885c0	                           test rax, rax	       289	format.c	FUNCTION_6	FOR_1
0x4000852	     0xf8561fdffff	                           jne 0x40005b9	       289	format.c	FUNCTION_6	FOR_1
0x4000858	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 1	       377	format.c	FUNCTION_6	IF_24
0x400085f	            0x750a	                           jne 0x400086b	       377	format.c	FUNCTION_6	IF_24
0x4000861	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	       378	format.c	FUNCTION_6	IF_24
0x400086b	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	       380	format.c	FUNCTION_6	IF_25
0x4000872	     0xf858d000000	                           jne 0x4000905	       380	format.c	FUNCTION_6	IF_25
0x4000878	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       383	format.c	FUNCTION_6	IF_25
0x400087f	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       383	format.c	FUNCTION_6	IF_25
0x4000886	    0x488b05000000	            mov rax, qword [0x0400088d] 	       385	format.c	FUNCTION_6	IF_25	IF_26
0x400088d	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       385	format.c	FUNCTION_6	IF_25	IF_26
0x4000894	            0x750c	                           jne 0x40008a2	       385	format.c	FUNCTION_6	IF_25	IF_26
0x4000896	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	       387	format.c	FUNCTION_6	IF_25	IF_26
0x40008a0	            0xeb63	                           jmp 0x4000905	       387	format.c	FUNCTION_6	IF_25	IF_26
0x40008a2	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x40008a8	    0x488b15000000	            mov rdx, qword [0x040008af] 	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x40008af	            0x29d0	                            sub eax, edx	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x40008b1	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x40008b7	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x40008bf	            0x7444	                            je 0x4000905	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x40008c1	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 1	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x40008c8	            0x7e3b	                           jle 0x4000905	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x40008ca	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       394	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27	CALL_15
0x40008d0	            0x4898	                                    cdqe	       394	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27	CALL_15
0x40008d2	    0x488d14c50000	                        lea rdx, [rax*8]	       394	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27	CALL_15
0x40008da	    0x488b05000000	            mov rax, qword [0x040008e1] 	       394	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27	CALL_15
0x40008e1	    0x488d0cc50000	                        lea rcx, [rax*8]	       395	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x40008e9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       395	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x40008f0	          0x4801c1	                            add rcx, rax	       395	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x40008f3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       394	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27	CALL_15
0x40008fa	          0x4889ce	                            mov rsi, rcx	       394	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27	CALL_15
0x40008fd	          0x4889c7	                            mov rdi, rax	       394	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27	CALL_15
0x4000900	      0xe800000000	                          call 0x4000905	       394	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27	CALL_15
0x4000905	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 1	       403	format.c	FUNCTION_6	IF_28
0x400090c	     0xf8eac000000	                           jle 0x40009be	       403	format.c	FUNCTION_6	IF_28
0x4000912	    0x488b05000000	            mov rax, qword [0x04000919] 	       405	format.c	FUNCTION_6	IF_28
0x4000919	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       405	format.c	FUNCTION_6	IF_28
0x4000920	            0xeb72	                           jmp 0x4000994	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x4000922	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       409	format.c	FUNCTION_6	IF_28	WHILE_1
0x4000928	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	       409	format.c	FUNCTION_6	IF_28	WHILE_1
0x400092e	            0xeb3c	                           jmp 0x400096c	       411	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2
0x4000930	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000936	            0x4898	                                    cdqe	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000938	    0x488d14c50000	                        lea rdx, [rax*8]	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000940	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000947	          0x4801d0	                            add rax, rdx	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x400094a	          0x488b00	                    mov rax, qword [rax]	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x400094d	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000954	            0x7516	                           jne 0x400096c	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000956	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x400095d	         0xfb6401f	           movzx eax, byte [rax + 0x1f] 	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000961	           0xfb6c0	                           movzx eax, al	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000964	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x400096a	            0x7e12	                           jle 0x400097e	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x400096c	    0x83ad34ffffff	               sub dword [rbp - 0xcc], 1	       411	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2
0x4000973	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	       411	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2
0x400097a	            0x79b4	                           jns 0x4000930	       411	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2
0x400097c	            0xeb01	                           jmp 0x400097f	       411	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2
0x400097e	              0x90	                                     nop	       414	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x400097f	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	       416	format.c	FUNCTION_6	IF_28	WHILE_1	IF_30
0x4000986	            0x780c	                            js 0x4000994	       416	format.c	FUNCTION_6	IF_28	WHILE_1	IF_30
0x4000988	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	       418	format.c	FUNCTION_6	IF_28	WHILE_1	IF_30
0x4000992	            0xeb2a	                           jmp 0x40009be	       419	format.c	FUNCTION_6	IF_28	WHILE_1	IF_30
0x4000994	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x400099b	        0x488d5008	                      lea rdx, [rax + 8]	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x400099f	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40009a6	          0x488b00	                    mov rax, qword [rax]	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40009a9	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40009b0	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40009b8	     0xf8564ffffff	                           jne 0x4000922	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40009be	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       427	format.c	FUNCTION_6	IF_31
0x40009c6	            0x747f	                            je 0x4000a47	       427	format.c	FUNCTION_6	IF_31
0x40009c8	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 1	       427	format.c	FUNCTION_6	IF_31
0x40009cf	            0x7e76	                           jle 0x4000a47	       427	format.c	FUNCTION_6	IF_31
0x40009d1	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       427	format.c	FUNCTION_6	IF_31
0x40009d7	    0x3b8520ffffff	             cmp eax, dword [rbp - 0xe0]	       427	format.c	FUNCTION_6	IF_31
0x40009dd	            0x7468	                            je 0x4000a47	       427	format.c	FUNCTION_6	IF_31
0x40009df	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x40009e9	            0xeb41	                           jmp 0x4000a2c	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x40009eb	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x40009f1	            0x4898	                                    cdqe	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x40009f3	    0x488d14c50000	                        lea rdx, [rax*8]	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x40009fb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x4000a02	          0x4801d0	                            add rax, rdx	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x4000a05	          0x488b00	                    mov rax, qword [rax]	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x4000a08	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x4000a0f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000a16	         0xfb6401f	           movzx eax, byte [rax + 0x1f] 	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000a1a	           0xfb6c0	                           movzx eax, al	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000a1d	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000a23	            0x7e17	                           jle 0x4000a3c	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000a25	    0x838538ffffff	               add dword [rbp - 0xc8], 1	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000a2c	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000a32	    0x3b8520ffffff	             cmp eax, dword [rbp - 0xe0]	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000a38	            0x7cb1	                            jl 0x40009eb	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000a3a	            0xeb01	                           jmp 0x4000a3d	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000a3c	              0x90	                                     nop	       435	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000a3d	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	       437	format.c	FUNCTION_6	IF_31
0x4000a47	        0x488b4590	             mov rax, qword [rbp - 0x70]	       444	format.c	FUNCTION_6	IF_33
0x4000a4b	          0x4885c0	                           test rax, rax	       444	format.c	FUNCTION_6	IF_33
0x4000a4e	            0x7416	                            je 0x4000a66	       444	format.c	FUNCTION_6	IF_33
0x4000a50	        0x488d5590	                   lea rdx, [rbp - 0x70]	       445	format.c	FUNCTION_6	CALL_16
0x4000a54	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       445	format.c	FUNCTION_6	CALL_16
0x4000a5b	          0x4889d6	                            mov rsi, rdx	       445	format.c	FUNCTION_6	CALL_16
0x4000a5e	          0x4889c7	                            mov rdi, rax	       445	format.c	FUNCTION_6	CALL_16
0x4000a61	      0xe89ef7ffff	           call sym.bfd_preserve_restore	       445	format.c	FUNCTION_6	CALL_16
0x4000a66	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 1	       447	format.c	FUNCTION_6	IF_34
0x4000a6d	     0xf85fd000000	                           jne 0x4000b70	       447	format.c	FUNCTION_6	IF_34
0x4000a73	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       449	format.c	FUNCTION_6	IF_34
0x4000a7a	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       449	format.c	FUNCTION_6	IF_34
0x4000a81	        0x48895008	                mov qword [rax + 8], rdx	       449	format.c	FUNCTION_6	IF_34
0x4000a85	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       453	format.c	FUNCTION_6	IF_34	IF_35
0x4000a8c	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       453	format.c	FUNCTION_6	IF_34	IF_35
0x4000a93	     0xf8491000000	                            je 0x4000b2a	       453	format.c	FUNCTION_6	IF_34	IF_35
0x4000a99	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	       455	format.c	FUNCTION_6	IF_34	IF_35	CALL_17
0x4000a9f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       455	format.c	FUNCTION_6	IF_34	IF_35	CALL_17
0x4000aa6	            0x89d6	                            mov esi, edx	       455	format.c	FUNCTION_6	IF_34	IF_35	CALL_17
0x4000aa8	          0x4889c7	                            mov rdi, rax	       455	format.c	FUNCTION_6	IF_34	IF_35	CALL_17
0x4000aab	      0xe8dcf6ffff	                     call sym.bfd_reinit	       455	format.c	FUNCTION_6	IF_34	IF_35	CALL_17
0x4000ab0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000ab7	      0xba00000000	                              mov edx, 0	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000abc	      0xbe00000000	                              mov esi, 0	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000ac1	          0x4889c7	                            mov rdi, rax	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000ac4	      0xe800000000	                          call 0x4000ac9	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000ac9	            0x85c0	                           test eax, eax	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000acb	     0xf85c0000000	                           jne 0x4000b91	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000ad1	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000ad8	        0x488b4008	                mov rax, qword [rax + 8]	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000adc	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000ae3	         0xfb65244	           movzx edx, byte [rdx + 0x44] 	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000ae7	          0x83e207	                              and edx, 7	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000aea	           0xfb6d2	                           movzx edx, dl	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000aed	          0x4863d2	                         movsxd rdx, edx	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000af0	        0x4883c216	                           add rdx, 0x16	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000af4	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000af8	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000aff	          0x4889d7	                            mov rdi, rdx	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000b02	            0xffd0	                                call rax	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000b04	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000b0b	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x4000b13	            0x7515	                           jne 0x4000b2a	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x4000b15	      0xbecb010000	                          mov esi, 0x1cb	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x4000b1a	      0xbf00000000	                              mov edi, 0	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x4000b1f	      0xe800000000	                          call 0x4000b24	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x4000b24	            0xeb04	                           jmp 0x4000b2a	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x4000b26	              0x90	                                     nop	       261	format.c	FUNCTION_6	IF_6	IF_8
0x4000b27	            0xeb01	                           jmp 0x4000b2a	       261	format.c	FUNCTION_6	IF_6	IF_8
0x4000b29	              0x90	                                     nop	       340	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_16
0x4000b2a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       468	format.c	FUNCTION_6	IF_34	IF_37
0x4000b31	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       468	format.c	FUNCTION_6	IF_34	IF_37
0x4000b35	          0x83e018	                           and eax, 0x18	       468	format.c	FUNCTION_6	IF_34	IF_37
0x4000b38	            0x3c18	                            cmp al, 0x18	       468	format.c	FUNCTION_6	IF_34	IF_37
0x4000b3a	            0x7511	                           jne 0x4000b4d	       468	format.c	FUNCTION_6	IF_34	IF_37
0x4000b3c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       469	format.c	FUNCTION_6	IF_34	IF_37
0x4000b43	         0xfb65047	           movzx edx, byte [rax + 0x47] 	       469	format.c	FUNCTION_6	IF_34	IF_37
0x4000b47	          0x83ca40	                            or edx, 0x40	       469	format.c	FUNCTION_6	IF_34	IF_37
0x4000b4a	          0x885047	               mov byte [rax + 0x47], dl	       469	format.c	FUNCTION_6	IF_34	IF_37
0x4000b4d	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       471	format.c	FUNCTION_6	IF_34	IF_38
0x4000b55	            0x740f	                            je 0x4000b66	       471	format.c	FUNCTION_6	IF_34	IF_38
0x4000b57	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x4000b5e	          0x4889c7	                            mov rdi, rax	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x4000b61	      0xe800000000	                          call 0x4000b66	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x4000b66	      0xb801000000	                              mov eax, 1	       475	format.c	FUNCTION_6	IF_34
0x4000b6b	      0xe950010000	                           jmp 0x4000cc0	       475	format.c	FUNCTION_6	IF_34
0x4000b70	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	       478	format.c	FUNCTION_6	IF_39
0x4000b77	            0x757e	                           jne 0x4000bf7	       478	format.c	FUNCTION_6	IF_39
0x4000b79	            0xeb01	                           jmp 0x4000b7c	       478	format.c	FUNCTION_6	IF_39
0x4000b7b	              0x90	                                     nop	       276	format.c	FUNCTION_6	IF_6	IF_9
0x4000b7c	      0xbf0c000000	                            mov edi, 0xc	       481	format.c	FUNCTION_6	IF_39	CALL_22
0x4000b81	      0xe800000000	                          call 0x4000b86	       481	format.c	FUNCTION_6	IF_39	CALL_22
0x4000b86	            0xeb0a	                           jmp 0x4000b92	       481	format.c	FUNCTION_6	IF_39	CALL_22
0x4000b88	              0x90	                                     nop	       256	format.c	FUNCTION_6	IF_6	IF_7
0x4000b89	            0xeb07	                           jmp 0x4000b92	       256	format.c	FUNCTION_6	IF_6	IF_7
0x4000b8b	              0x90	                                     nop	       307	format.c	FUNCTION_6	FOR_1	IF_11
0x4000b8c	            0xeb04	                           jmp 0x4000b92	       307	format.c	FUNCTION_6	FOR_1	IF_11
0x4000b8e	              0x90	                                     nop	       374	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23
0x4000b8f	            0xeb01	                           jmp 0x4000b92	       374	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23
0x4000b91	              0x90	                                     nop	       457	format.c	FUNCTION_6	IF_34	IF_35	IF_36
0x4000b92	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       483	format.c	FUNCTION_6	IF_39
0x4000b99	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       483	format.c	FUNCTION_6	IF_39
0x4000ba0	        0x48895008	                mov qword [rax + 8], rdx	       483	format.c	FUNCTION_6	IF_39
0x4000ba4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       484	format.c	FUNCTION_6	IF_39
0x4000bab	         0xfb65044	           movzx edx, byte [rax + 0x44] 	       484	format.c	FUNCTION_6	IF_39
0x4000baf	          0x83e2f8	                     and edx, 0xfffffff8	       484	format.c	FUNCTION_6	IF_39
0x4000bb2	          0x885044	               mov byte [rax + 0x44], dl	       484	format.c	FUNCTION_6	IF_39
0x4000bb5	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       485	format.c	FUNCTION_6	IF_39	IF_40
0x4000bbd	            0x740f	                            je 0x4000bce	       485	format.c	FUNCTION_6	IF_39	IF_40
0x4000bbf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       486	format.c	FUNCTION_6	IF_39	CALL_23
0x4000bc6	          0x4889c7	                            mov rdi, rax	       486	format.c	FUNCTION_6	IF_39	CALL_23
0x4000bc9	      0xe800000000	                          call 0x4000bce	       486	format.c	FUNCTION_6	IF_39	CALL_23
0x4000bce	        0x488b4590	             mov rax, qword [rbp - 0x70]	       487	format.c	FUNCTION_6	IF_39	IF_41
0x4000bd2	          0x4885c0	                           test rax, rax	       487	format.c	FUNCTION_6	IF_39	IF_41
0x4000bd5	            0x7416	                            je 0x4000bed	       487	format.c	FUNCTION_6	IF_39	IF_41
0x4000bd7	        0x488d5590	                   lea rdx, [rbp - 0x70]	       488	format.c	FUNCTION_6	IF_39	CALL_24
0x4000bdb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       488	format.c	FUNCTION_6	IF_39	CALL_24
0x4000be2	          0x4889d6	                            mov rsi, rdx	       488	format.c	FUNCTION_6	IF_39	CALL_24
0x4000be5	          0x4889c7	                            mov rdi, rax	       488	format.c	FUNCTION_6	IF_39	CALL_24
0x4000be8	      0xe817f6ffff	           call sym.bfd_preserve_restore	       488	format.c	FUNCTION_6	IF_39	CALL_24
0x4000bed	      0xb800000000	                              mov eax, 0	       489	format.c	FUNCTION_6	IF_39
0x4000bf2	      0xe9c9000000	                           jmp 0x4000cc0	       489	format.c	FUNCTION_6	IF_39
0x4000bf7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       493	format.c	FUNCTION_6
0x4000bfe	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       493	format.c	FUNCTION_6
0x4000c05	        0x48895008	                mov qword [rax + 8], rdx	       493	format.c	FUNCTION_6
0x4000c09	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       494	format.c	FUNCTION_6
0x4000c10	         0xfb65044	           movzx edx, byte [rax + 0x44] 	       494	format.c	FUNCTION_6
0x4000c14	          0x83e2f8	                     and edx, 0xfffffff8	       494	format.c	FUNCTION_6
0x4000c17	          0x885044	               mov byte [rax + 0x44], dl	       494	format.c	FUNCTION_6
0x4000c1a	      0xbf0d000000	                            mov edi, 0xd	       495	format.c	FUNCTION_6	CALL_25
0x4000c1f	      0xe800000000	                          call 0x4000c24	       495	format.c	FUNCTION_6	CALL_25
0x4000c24	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	       497	format.c	FUNCTION_6	IF_42
0x4000c2c	     0xf8489000000	                            je 0x4000cbb	       497	format.c	FUNCTION_6	IF_42
0x4000c32	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       499	format.c	FUNCTION_6	IF_42
0x4000c39	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       499	format.c	FUNCTION_6	IF_42
0x4000c40	          0x488910	                    mov qword [rax], rdx	       499	format.c	FUNCTION_6	IF_42
0x4000c43	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       500	format.c	FUNCTION_6	IF_42
0x4000c49	            0x4898	                                    cdqe	       500	format.c	FUNCTION_6	IF_42
0x4000c4b	    0x488d14c50000	                        lea rdx, [rax*8]	       500	format.c	FUNCTION_6	IF_42
0x4000c53	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       500	format.c	FUNCTION_6	IF_42
0x4000c5a	          0x4801d0	                            add rax, rdx	       500	format.c	FUNCTION_6	IF_42
0x4000c5d	    0x48c700000000	                      mov qword [rax], 0	       500	format.c	FUNCTION_6	IF_42
0x4000c64	            0xeb45	                           jmp 0x4000cab	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c66	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c6c	            0x4898	                                    cdqe	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c6e	    0x488d14c50000	                        lea rdx, [rax*8]	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c76	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c7d	          0x4801d0	                            add rax, rdx	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c80	          0x488b00	                    mov rax, qword [rax]	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c83	          0x488b00	                    mov rax, qword [rax]	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c86	        0x48894588	             mov qword [rbp - 0x78], rax	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c8a	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       506	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c90	            0x4898	                                    cdqe	       506	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c92	    0x488d14c50000	                        lea rdx, [rax*8]	       506	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000c9a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       506	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000ca1	          0x4801c2	                            add rdx, rax	       506	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000ca4	        0x488b4588	             mov rax, qword [rbp - 0x78]	       506	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000ca8	          0x488902	                    mov qword [rdx], rax	       506	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000cab	    0x83ad20ffffff	               sub dword [rbp - 0xe0], 1	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000cb2	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000cb9	            0x79ab	                           jns 0x4000c66	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000cbb	      0xb800000000	                              mov eax, 0	       509	format.c	FUNCTION_6
0x4000cc0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       510	format.c	FUNCTION_6
0x4000cc4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       510	format.c	FUNCTION_6
0x4000ccd	            0x7405	                            je 0x4000cd4	       510	format.c	FUNCTION_6
0x4000ccf	      0xe800000000	                          call 0x4000cd4	       510	format.c	FUNCTION_6
0x4000cd4	              0xc9	                                   leave	       510	format.c	FUNCTION_6
0x4000cd5	              0xc3	                                     ret	       510	format.c	FUNCTION_6
bfd_check_format	functions,0:DO,0:ELSE,0:CALL,1:IF,0:FOR,0:WHILE,0:SWITCH,0	13
0x4000040	              0x55	                                push rbp	        93	format.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        93	format.c	FUNCTION_1
0x4000044	        0x4883ec10	                           sub rsp, 0x10	        93	format.c	FUNCTION_1
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	        93	format.c	FUNCTION_1
0x400004c	          0x8975f4	              mov dword [rbp - 0xc], esi	        93	format.c	FUNCTION_1
0x400004f	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	        94	format.c	FUNCTION_1	CALL_1
0x4000052	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	format.c	FUNCTION_1	CALL_1
0x4000056	      0xba00000000	                              mov edx, 0	        94	format.c	FUNCTION_1	CALL_1
0x400005b	            0x89ce	                            mov esi, ecx	        94	format.c	FUNCTION_1	CALL_1
0x400005d	          0x4889c7	                            mov rdi, rax	        94	format.c	FUNCTION_1	CALL_1
0x4000060	      0xe800000000	                          call 0x4000065	        94	format.c	FUNCTION_1	CALL_1
0x4000065	              0xc9	                                   leave	        95	format.c	FUNCTION_1
0x4000066	              0xc3	                                     ret	        95	format.c	FUNCTION_1
