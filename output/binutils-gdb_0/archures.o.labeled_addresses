bfd_lookup_arch	DO,0:SWITCH,0:WHILE,0:IF,1:FOR,2:CALL,0:ELSE,0:functions,0	39
0x4000918	              0x55	                                push rbp	      1294	archures.c	FUNCTION_14
0x4000919	          0x4889e5	                            mov rbp, rsp	      1294	archures.c	FUNCTION_14
0x400091c	          0x897dec	             mov dword [rbp - 0x14], edi	      1294	archures.c	FUNCTION_14
0x400091f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1294	archures.c	FUNCTION_14
0x4000923	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1297	archures.c	FUNCTION_14	FOR_1
0x400092b	            0xeb57	                           jmp 0x4000984	      1297	archures.c	FUNCTION_14	FOR_1
0x400092d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000931	          0x488b00	                    mov rax, qword [rax]	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000934	        0x488945f8	                mov qword [rbp - 8], rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000938	            0xeb3e	                           jmp 0x4000978	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400093a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400093e	          0x8b400c	              mov eax, dword [rax + 0xc]	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000941	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000944	            0x7526	                           jne 0x400096c	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000946	        0x488b45f8	                mov rax, qword [rbp - 8]	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400094a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400094e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000952	            0x7412	                            je 0x4000966	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000954	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000959	            0x7511	                           jne 0x400096c	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400095b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400095f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000962	            0x85c0	                           test eax, eax	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000964	            0x7406	                            je 0x400096c	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000966	        0x488b45f8	                mov rax, qword [rbp - 8]	      1304	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400096a	            0xeb29	                           jmp 0x4000995	      1304	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400096c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000970	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000974	        0x488945f8	                mov qword [rbp - 8], rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000978	      0x48837df800	                  cmp qword [rbp - 8], 0	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400097d	            0x75bb	                           jne 0x400093a	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400097f	      0x488345f008	               add qword [rbp - 0x10], 8	      1297	archures.c	FUNCTION_14	FOR_1
0x4000984	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1297	archures.c	FUNCTION_14	FOR_1
0x4000988	          0x488b00	                    mov rax, qword [rax]	      1297	archures.c	FUNCTION_14	FOR_1
0x400098b	          0x4885c0	                           test rax, rax	      1297	archures.c	FUNCTION_14	FOR_1
0x400098e	            0x759d	                           jne 0x400092d	      1297	archures.c	FUNCTION_14	FOR_1
0x4000990	      0xb800000000	                              mov eax, 0	      1308	archures.c	FUNCTION_14
0x4000995	              0x5d	                                 pop rbp	      1309	archures.c	FUNCTION_14
0x4000996	              0xc3	                                     ret	      1309	archures.c	FUNCTION_14
bfd_arch_bits_per_address	DO,0:SWITCH,0:WHILE,0:IF,0:FOR,0:CALL,0:ELSE,0:functions,0	8
0x4000344	              0x55	                                push rbp	      1020	archures.c	FUNCTION_10
0x4000345	          0x4889e5	                            mov rbp, rsp	      1020	archures.c	FUNCTION_10
0x4000348	        0x48897df8	                mov qword [rbp - 8], rdi	      1020	archures.c	FUNCTION_10
0x400034c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1021	archures.c	FUNCTION_10
0x4000350	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      1021	archures.c	FUNCTION_10
0x4000357	          0x8b4004	                mov eax, dword [rax + 4]	      1021	archures.c	FUNCTION_10
0x400035a	              0x5d	                                 pop rbp	      1022	archures.c	FUNCTION_10
0x400035b	              0xc3	                                     ret	      1022	archures.c	FUNCTION_10
bfd_default_set_arch_mach	DO,0:SWITCH,0:WHILE,0:IF,1:FOR,0:CALL,2:ELSE,0:functions,0	27
0x4000292	              0x55	                                push rbp	       942	archures.c	FUNCTION_6
0x4000293	          0x4889e5	                            mov rbp, rsp	       942	archures.c	FUNCTION_6
0x4000296	        0x4883ec20	                           sub rsp, 0x20	       942	archures.c	FUNCTION_6
0x400029a	        0x48897df8	                mov qword [rbp - 8], rdi	       942	archures.c	FUNCTION_6
0x400029e	          0x8975f4	              mov dword [rbp - 0xc], esi	       942	archures.c	FUNCTION_6
0x40002a1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       942	archures.c	FUNCTION_6
0x40002a5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       943	archures.c	FUNCTION_6	CALL_1
0x40002a9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       943	archures.c	FUNCTION_6	CALL_1
0x40002ac	          0x4889d6	                            mov rsi, rdx	       943	archures.c	FUNCTION_6	CALL_1
0x40002af	            0x89c7	                            mov edi, eax	       943	archures.c	FUNCTION_6	CALL_1
0x40002b1	      0xe800000000	                          call 0x40002b6	       943	archures.c	FUNCTION_6	CALL_1
0x40002b6	          0x4889c2	                            mov rdx, rax	       943	archures.c	FUNCTION_6	CALL_1
0x40002b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       943	archures.c	FUNCTION_6	CALL_1
0x40002bd	    0x488990c00000	             mov qword [rax + 0xc0], rdx	       943	archures.c	FUNCTION_6	CALL_1
0x40002c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       944	archures.c	FUNCTION_6	IF_1
0x40002c8	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       944	archures.c	FUNCTION_6	IF_1
0x40002cf	          0x4885c0	                           test rax, rax	       944	archures.c	FUNCTION_6	IF_1
0x40002d2	            0x7407	                            je 0x40002db	       944	archures.c	FUNCTION_6	IF_1
0x40002d4	      0xb801000000	                              mov eax, 1	       945	archures.c	FUNCTION_6	IF_1
0x40002d9	            0xeb1e	                           jmp 0x40002f9	       945	archures.c	FUNCTION_6	IF_1
0x40002db	        0x488b45f8	                mov rax, qword [rbp - 8]	       947	archures.c	FUNCTION_6
0x40002df	    0x48c780c00000	               mov qword [rax + 0xc0], 0	       947	archures.c	FUNCTION_6
0x40002ea	      0xbf11000000	                           mov edi, 0x11	       948	archures.c	FUNCTION_6	CALL_2
0x40002ef	      0xe800000000	                          call 0x40002f4	       948	archures.c	FUNCTION_6	CALL_2
0x40002f4	      0xb800000000	                              mov eax, 0	       949	archures.c	FUNCTION_6
0x40002f9	              0xc9	                                   leave	       950	archures.c	FUNCTION_6
0x40002fa	              0xc3	                                     ret	       950	archures.c	FUNCTION_6
bfd_get_arch	DO,0:SWITCH,0:WHILE,0:IF,0:FOR,0:CALL,0:ELSE,0:functions,0	8
0x40002fb	              0x55	                                push rbp	       966	archures.c	FUNCTION_7
0x40002fc	          0x4889e5	                            mov rbp, rsp	       966	archures.c	FUNCTION_7
0x40002ff	        0x48897df8	                mov qword [rbp - 8], rdi	       966	archures.c	FUNCTION_7
0x4000303	        0x488b45f8	                mov rax, qword [rbp - 8]	       967	archures.c	FUNCTION_7
0x4000307	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       967	archures.c	FUNCTION_7
0x400030e	          0x8b400c	              mov eax, dword [rax + 0xc]	       967	archures.c	FUNCTION_7
0x4000311	              0x5d	                                 pop rbp	       968	archures.c	FUNCTION_7
0x4000312	              0xc3	                                     ret	       968	archures.c	FUNCTION_7
bfd_set_arch_info	DO,0:SWITCH,0:WHILE,0:IF,0:FOR,0:CALL,0:ELSE,0:functions,0	10
0x4000274	              0x55	                                push rbp	       919	archures.c	FUNCTION_5
0x4000275	          0x4889e5	                            mov rbp, rsp	       919	archures.c	FUNCTION_5
0x4000278	        0x48897df8	                mov qword [rbp - 8], rdi	       919	archures.c	FUNCTION_5
0x400027c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       919	archures.c	FUNCTION_5
0x4000280	        0x488b45f8	                mov rax, qword [rbp - 8]	       920	archures.c	FUNCTION_5
0x4000284	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       920	archures.c	FUNCTION_5
0x4000288	    0x488990c00000	             mov qword [rax + 0xc0], rdx	       920	archures.c	FUNCTION_5
0x400028f	              0x90	                                     nop	       921	archures.c	FUNCTION_5
0x4000290	              0x5d	                                 pop rbp	       921	archures.c	FUNCTION_5
0x4000291	              0xc3	                                     ret	       921	archures.c	FUNCTION_5
bfd_default_scan	DO,0:SWITCH,1:WHILE,1:IF,14:FOR,1:CALL,10:ELSE,1:functions,0	309
0x40003d4	              0x55	                                push rbp	      1070	archures.c	FUNCTION_12
0x40003d5	          0x4889e5	                            mov rbp, rsp	      1070	archures.c	FUNCTION_12
0x40003d8	        0x4883ec50	                           sub rsp, 0x50	      1070	archures.c	FUNCTION_12
0x40003dc	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1070	archures.c	FUNCTION_12
0x40003e0	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1070	archures.c	FUNCTION_12
0x40003e4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x40003e8	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x40003ec	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x40003f0	          0x4889d6	                            mov rsi, rdx	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x40003f3	          0x4889c7	                            mov rdi, rax	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x40003f6	      0xe800000000	                          call 0x40003fb	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x40003fb	            0x85c0	                           test eax, eax	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x40003fd	            0x7515	                           jne 0x4000414	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x40003ff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1080	archures.c	FUNCTION_12	IF_1
0x4000403	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1080	archures.c	FUNCTION_12	IF_1
0x4000406	            0x85c0	                           test eax, eax	      1080	archures.c	FUNCTION_12	IF_1
0x4000408	            0x740a	                            je 0x4000414	      1080	archures.c	FUNCTION_12	IF_1
0x400040a	      0xb801000000	                              mov eax, 1	      1081	archures.c	FUNCTION_12	IF_1
0x400040f	      0xe9ed040000	                           jmp 0x4000901	      1081	archures.c	FUNCTION_12	IF_1
0x4000414	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x4000418	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x400041c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x4000420	          0x4889d6	                            mov rsi, rdx	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x4000423	          0x4889c7	                            mov rdi, rax	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x4000426	      0xe800000000	                          call 0x400042b	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x400042b	            0x85c0	                           test eax, eax	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x400042d	            0x750a	                           jne 0x4000439	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x400042f	      0xb801000000	                              mov eax, 1	      1085	archures.c	FUNCTION_12	IF_2
0x4000434	      0xe9c8040000	                           jmp 0x4000901	      1085	archures.c	FUNCTION_12	IF_2
0x4000439	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1089	archures.c	FUNCTION_12	CALL_3
0x400043d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1089	archures.c	FUNCTION_12	CALL_3
0x4000441	      0xbe3a000000	                           mov esi, 0x3a	      1089	archures.c	FUNCTION_12	CALL_3
0x4000446	          0x4889c7	                            mov rdi, rax	      1089	archures.c	FUNCTION_12	CALL_3
0x4000449	      0xe800000000	                          call 0x400044e	      1089	archures.c	FUNCTION_12	CALL_3
0x400044e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1089	archures.c	FUNCTION_12	CALL_3
0x4000452	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1090	archures.c	FUNCTION_12	IF_3
0x4000457	     0xf85a1000000	                           jne 0x40004fe	      1090	archures.c	FUNCTION_12	IF_3
0x400045d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x4000461	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x4000465	          0x4889c7	                            mov rdi, rax	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x4000468	      0xe800000000	                          call 0x400046d	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x400046d	        0x488945f0	             mov qword [rbp - 0x10], rax	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x4000471	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x4000475	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x4000479	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x400047d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x4000481	          0x4889ce	                            mov rsi, rcx	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x4000484	          0x4889c7	                            mov rdi, rax	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x4000487	      0xe800000000	                          call 0x400048c	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x400048c	            0x85c0	                           test eax, eax	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x400048e	            0x756e	                           jne 0x40004fe	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x4000490	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x4000494	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x4000498	          0x4801d0	                            add rax, rdx	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x400049b	           0xfb600	                   movzx eax, byte [rax]	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x400049e	            0x3c3a	                            cmp al, 0x3a	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x40004a0	            0x7530	                           jne 0x40004d2	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x40004a2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004a6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004aa	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004ae	        0x488d4a01	                      lea rcx, [rdx + 1]	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004b2	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004b6	          0x4801ca	                            add rdx, rcx	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004b9	          0x4889c6	                            mov rsi, rax	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004bc	          0x4889d7	                            mov rdi, rdx	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004bf	      0xe800000000	                          call 0x40004c4	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004c4	            0x85c0	                           test eax, eax	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004c6	            0x7536	                           jne 0x40004fe	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40004c8	      0xb801000000	                              mov eax, 1	      1099	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6
0x40004cd	      0xe92f040000	                           jmp 0x4000901	      1099	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6
0x40004d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40004d6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40004da	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40004de	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40004e2	          0x4801ca	                            add rdx, rcx	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40004e5	          0x4889c6	                            mov rsi, rax	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40004e8	          0x4889d7	                            mov rdi, rdx	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40004eb	      0xe800000000	                          call 0x40004f0	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40004f0	            0x85c0	                           test eax, eax	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40004f2	            0x750a	                           jne 0x40004fe	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40004f4	      0xb801000000	                              mov eax, 1	      1105	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7
0x40004f9	      0xe903040000	                           jmp 0x4000901	      1105	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7
0x40004fe	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1112	archures.c	FUNCTION_12	IF_8
0x4000503	            0x746c	                            je 0x4000571	      1112	archures.c	FUNCTION_12	IF_8
0x4000505	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1114	archures.c	FUNCTION_12	IF_8
0x4000509	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1114	archures.c	FUNCTION_12	IF_8
0x400050d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1114	archures.c	FUNCTION_12	IF_8
0x4000511	          0x4829c2	                            sub rdx, rax	      1114	archures.c	FUNCTION_12	IF_8
0x4000514	          0x4889d0	                            mov rax, rdx	      1114	archures.c	FUNCTION_12	IF_8
0x4000517	        0x488945f8	                mov qword [rbp - 8], rax	      1114	archures.c	FUNCTION_12	IF_8
0x400051b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x400051f	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x4000523	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x4000527	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x400052b	          0x4889ce	                            mov rsi, rcx	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x400052e	          0x4889c7	                            mov rdi, rax	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x4000531	      0xe800000000	                          call 0x4000536	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x4000536	            0x85c0	                           test eax, eax	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x4000538	            0x7537	                           jne 0x4000571	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x400053a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1117	archures.c	FUNCTION_12	IF_8	IF_9
0x400053e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1117	archures.c	FUNCTION_12	IF_8	IF_9
0x4000542	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1117	archures.c	FUNCTION_12	IF_8	IF_9
0x4000546	        0x4883c201	                              add rdx, 1	      1117	archures.c	FUNCTION_12	IF_8	IF_9
0x400054a	          0x4801c2	                            add rdx, rax	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x400054d	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000551	        0x488b45f8	                mov rax, qword [rbp - 8]	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000555	          0x4801c8	                            add rax, rcx	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000558	          0x4889d6	                            mov rsi, rdx	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x400055b	          0x4889c7	                            mov rdi, rax	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x400055e	      0xe800000000	                          call 0x4000563	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000563	            0x85c0	                           test eax, eax	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000565	            0x750a	                           jne 0x4000571	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000567	      0xb801000000	                              mov eax, 1	      1118	archures.c	FUNCTION_12	IF_8	IF_9
0x400056c	      0xe990030000	                           jmp 0x4000901	      1118	archures.c	FUNCTION_12	IF_8	IF_9
0x4000571	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1132	archures.c	FUNCTION_12	FOR_1
0x4000575	        0x488945d0	             mov qword [rbp - 0x30], rax	      1132	archures.c	FUNCTION_12	FOR_1
0x4000579	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1132	archures.c	FUNCTION_12	FOR_1
0x400057d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1132	archures.c	FUNCTION_12	FOR_1
0x4000581	        0x488945d8	             mov qword [rbp - 0x28], rax	      1132	archures.c	FUNCTION_12	FOR_1
0x4000585	            0xeb1c	                           jmp 0x40005a3	      1132	archures.c	FUNCTION_12	FOR_1
0x4000587	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x400058b	           0xfb610	                   movzx edx, byte [rax]	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x400058e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x4000592	           0xfb600	                   movzx eax, byte [rax]	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x4000595	            0x38c2	                              cmp dl, al	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x4000597	            0x7522	                           jne 0x40005bb	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x4000599	      0x488345d001	               add qword [rbp - 0x30], 1	      1134	archures.c	FUNCTION_12	FOR_1
0x400059e	      0x488345d801	               add qword [rbp - 0x28], 1	      1134	archures.c	FUNCTION_12	FOR_1
0x40005a3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1133	archures.c	FUNCTION_12	FOR_1
0x40005a7	           0xfb600	                   movzx eax, byte [rax]	      1133	archures.c	FUNCTION_12	FOR_1
0x40005aa	            0x84c0	                             test al, al	      1132	archures.c	FUNCTION_12	FOR_1
0x40005ac	            0x740e	                            je 0x40005bc	      1132	archures.c	FUNCTION_12	FOR_1
0x40005ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1133	archures.c	FUNCTION_12	FOR_1
0x40005b2	           0xfb600	                   movzx eax, byte [rax]	      1133	archures.c	FUNCTION_12	FOR_1
0x40005b5	            0x84c0	                             test al, al	      1133	archures.c	FUNCTION_12	FOR_1
0x40005b7	            0x75ce	                           jne 0x4000587	      1133	archures.c	FUNCTION_12	FOR_1
0x40005b9	            0xeb01	                           jmp 0x40005bc	      1133	archures.c	FUNCTION_12	FOR_1
0x40005bb	              0x90	                                     nop	      1137	archures.c	FUNCTION_12	FOR_1	IF_10
0x40005bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1142	archures.c	FUNCTION_12	IF_11
0x40005c0	           0xfb600	                   movzx eax, byte [rax]	      1142	archures.c	FUNCTION_12	IF_11
0x40005c3	            0x3c3a	                            cmp al, 0x3a	      1142	archures.c	FUNCTION_12	IF_11
0x40005c5	            0x7505	                           jne 0x40005cc	      1142	archures.c	FUNCTION_12	IF_11
0x40005c7	      0x488345d001	               add qword [rbp - 0x30], 1	      1143	archures.c	FUNCTION_12	IF_11
0x40005cc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1145	archures.c	FUNCTION_12	IF_12
0x40005d0	           0xfb600	                   movzx eax, byte [rax]	      1145	archures.c	FUNCTION_12	IF_12
0x40005d3	            0x84c0	                             test al, al	      1145	archures.c	FUNCTION_12	IF_12
0x40005d5	            0x750c	                           jne 0x40005e3	      1145	archures.c	FUNCTION_12	IF_12
0x40005d7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1149	archures.c	FUNCTION_12	IF_12
0x40005db	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1149	archures.c	FUNCTION_12	IF_12
0x40005de	      0xe91e030000	                           jmp 0x4000901	      1149	archures.c	FUNCTION_12	IF_12
0x40005e3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1152	archures.c	FUNCTION_12
0x40005eb	            0xeb2f	                           jmp 0x400061c	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x40005ed	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1155	archures.c	FUNCTION_12	WHILE_1
0x40005f1	          0x4889d0	                            mov rax, rdx	      1155	archures.c	FUNCTION_12	WHILE_1
0x40005f4	        0x48c1e002	                              shl rax, 2	      1155	archures.c	FUNCTION_12	WHILE_1
0x40005f8	          0x4801d0	                            add rax, rdx	      1155	archures.c	FUNCTION_12	WHILE_1
0x40005fb	          0x4801c0	                            add rax, rax	      1155	archures.c	FUNCTION_12	WHILE_1
0x40005fe	          0x4889c2	                            mov rdx, rax	      1155	archures.c	FUNCTION_12	WHILE_1
0x4000601	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1155	archures.c	FUNCTION_12	WHILE_1
0x4000605	           0xfb600	                   movzx eax, byte [rax]	      1155	archures.c	FUNCTION_12	WHILE_1
0x4000608	        0x480fbec0	                           movsx rax, al	      1155	archures.c	FUNCTION_12	WHILE_1
0x400060c	          0x4801d0	                            add rax, rdx	      1155	archures.c	FUNCTION_12	WHILE_1
0x400060f	        0x4883e830	                           sub rax, 0x30	      1155	archures.c	FUNCTION_12	WHILE_1
0x4000613	        0x488945e0	             mov qword [rbp - 0x20], rax	      1155	archures.c	FUNCTION_12	WHILE_1
0x4000617	      0x488345d001	               add qword [rbp - 0x30], 1	      1156	archures.c	FUNCTION_12	WHILE_1
0x400061c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000620	           0xfb600	                   movzx eax, byte [rax]	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000623	           0xfbec0	                           movsx eax, al	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000626	           0xfb6c0	                           movzx eax, al	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000629	            0x4898	                                    cdqe	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x400062b	     0xfb784000000	             movzx eax, word [rax + rax]	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000633	           0xfb7c0	                           movzx eax, ax	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000636	          0x83e004	                              and eax, 4	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000639	            0x85c0	                           test eax, eax	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x400063b	            0x75b0	                           jne 0x40005ed	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x400063d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000641	    0x483d1c1e0000	                         cmp rax, 0x1e1c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000647	     0xf844d020000	                            je 0x400089a	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400064d	    0x483d1c1e0000	                         cmp rax, 0x1e1c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000653	     0xf8798000000	                            ja 0x40006f1	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000659	    0x483da2140000	                         cmp rax, 0x14a2	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400065f	     0xf84e8010000	                            je 0x400084d	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000665	    0x483da2140000	                         cmp rax, 0x14a2	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400066b	            0x7742	                            ja 0x40006af	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400066d	    0x483da00f0000	                          cmp rax, 0xfa0	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000673	     0xf84f6010000	                            je 0x400086f	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000679	    0x483da00f0000	                          cmp rax, 0xfa0	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400067f	            0x7711	                            ja 0x4000692	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000681	    0x483db80b0000	                          cmp rax, 0xbb8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000687	     0xf84d1010000	                            je 0x400085e	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400068d	      0xe93b020000	                           jmp 0x40008cd	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000692	    0x483d50140000	                         cmp rax, 0x1450	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000698	     0xf845f010000	                            je 0x40007fd	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400069e	    0x483d56140000	                         cmp rax, 0x1456	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006a4	     0xf8467010000	                            je 0x4000811	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006aa	      0xe91e020000	                           jmp 0x40008cd	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006af	    0x483d1f150000	                         cmp rax, 0x151f	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006b5	     0xf847e010000	                            je 0x4000839	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006bb	    0x483d1f150000	                         cmp rax, 0x151f	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006c1	            0x7711	                            ja 0x40006d4	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006c3	    0x483dbb140000	                         cmp rax, 0x14bb	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006c9	     0xf8456010000	                            je 0x4000825	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006cf	      0xe9f9010000	                           jmp 0x40008cd	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006d4	    0x483d70170000	                         cmp rax, 0x1770	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006da	     0xf84a0010000	                            je 0x4000880	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006e0	    0x483df21c0000	                         cmp rax, 0x1cf2	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006e6	     0xf849d010000	                            je 0x4000889	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006ec	      0xe9dc010000	                           jmp 0x40008cd	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006f1	    0x483db4090100	                        cmp rax, 0x109b4	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006f7	     0xf849c000000	                            je 0x4000799	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40006fd	    0x483db4090100	                        cmp rax, 0x109b4	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000703	            0x773a	                            ja 0x400073f	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000705	    0x483d461e0000	                         cmp rax, 0x1e46	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400070b	     0xf84ab010000	                            je 0x40008bc	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000711	    0x483d461e0000	                         cmp rax, 0x1e46	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000717	            0x7711	                            ja 0x400072a	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000719	    0x483d311e0000	                         cmp rax, 0x1e31	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400071f	     0xf8486010000	                            je 0x40008ab	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000725	      0xe9a3010000	                           jmp 0x40008cd	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400072a	    0x483da0090100	                        cmp rax, 0x109a0	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000730	            0x743f	                            je 0x4000771	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000732	    0x483daa090100	                        cmp rax, 0x109aa	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000738	            0x744b	                            je 0x4000785	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400073a	      0xe98e010000	                           jmp 0x40008cd	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400073f	    0x483dc8090100	                        cmp rax, 0x109c8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000745	            0x747a	                            je 0x40007c1	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000747	    0x483dc8090100	                        cmp rax, 0x109c8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400074d	            0x770d	                            ja 0x400075c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400074f	    0x483dbe090100	                        cmp rax, 0x109be	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000755	            0x7456	                            je 0x40007ad	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000757	      0xe971010000	                           jmp 0x40008cd	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400075c	    0x483ddc090100	                        cmp rax, 0x109dc	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000762	            0x7471	                            je 0x40007d5	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000764	    0x483dec0a0100	                        cmp rax, 0x10aec	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400076a	            0x747d	                            je 0x40007e9	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400076c	      0xe95c010000	                           jmp 0x40008cd	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000771	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1165	archures.c	FUNCTION_12	SWITCH_1
0x4000778	    0x48c745e00100	               mov qword [rbp - 0x20], 1	      1166	archures.c	FUNCTION_12	SWITCH_1
0x4000780	      0xe94f010000	                           jmp 0x40008d4	      1167	archures.c	FUNCTION_12	SWITCH_1
0x4000785	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1169	archures.c	FUNCTION_12	SWITCH_1
0x400078c	    0x48c745e00300	               mov qword [rbp - 0x20], 3	      1170	archures.c	FUNCTION_12	SWITCH_1
0x4000794	      0xe93b010000	                           jmp 0x40008d4	      1171	archures.c	FUNCTION_12	SWITCH_1
0x4000799	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1173	archures.c	FUNCTION_12	SWITCH_1
0x40007a0	    0x48c745e00400	               mov qword [rbp - 0x20], 4	      1174	archures.c	FUNCTION_12	SWITCH_1
0x40007a8	      0xe927010000	                           jmp 0x40008d4	      1175	archures.c	FUNCTION_12	SWITCH_1
0x40007ad	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1177	archures.c	FUNCTION_12	SWITCH_1
0x40007b4	    0x48c745e00500	               mov qword [rbp - 0x20], 5	      1178	archures.c	FUNCTION_12	SWITCH_1
0x40007bc	      0xe913010000	                           jmp 0x40008d4	      1179	archures.c	FUNCTION_12	SWITCH_1
0x40007c1	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1181	archures.c	FUNCTION_12	SWITCH_1
0x40007c8	    0x48c745e00600	               mov qword [rbp - 0x20], 6	      1182	archures.c	FUNCTION_12	SWITCH_1
0x40007d0	      0xe9ff000000	                           jmp 0x40008d4	      1183	archures.c	FUNCTION_12	SWITCH_1
0x40007d5	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1185	archures.c	FUNCTION_12	SWITCH_1
0x40007dc	    0x48c745e00700	               mov qword [rbp - 0x20], 7	      1186	archures.c	FUNCTION_12	SWITCH_1
0x40007e4	      0xe9eb000000	                           jmp 0x40008d4	      1187	archures.c	FUNCTION_12	SWITCH_1
0x40007e9	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1189	archures.c	FUNCTION_12	SWITCH_1
0x40007f0	    0x48c745e00800	               mov qword [rbp - 0x20], 8	      1190	archures.c	FUNCTION_12	SWITCH_1
0x40007f8	      0xe9d7000000	                           jmp 0x40008d4	      1191	archures.c	FUNCTION_12	SWITCH_1
0x40007fd	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1193	archures.c	FUNCTION_12	SWITCH_1
0x4000804	    0x48c745e00a00	             mov qword [rbp - 0x20], 0xa	      1194	archures.c	FUNCTION_12	SWITCH_1
0x400080c	      0xe9c3000000	                           jmp 0x40008d4	      1195	archures.c	FUNCTION_12	SWITCH_1
0x4000811	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1197	archures.c	FUNCTION_12	SWITCH_1
0x4000818	    0x48c745e00c00	            mov qword [rbp - 0x20], 0xc 	      1198	archures.c	FUNCTION_12	SWITCH_1
0x4000820	      0xe9af000000	                           jmp 0x40008d4	      1199	archures.c	FUNCTION_12	SWITCH_1
0x4000825	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1201	archures.c	FUNCTION_12	SWITCH_1
0x400082c	    0x48c745e00c00	            mov qword [rbp - 0x20], 0xc 	      1202	archures.c	FUNCTION_12	SWITCH_1
0x4000834	      0xe99b000000	                           jmp 0x40008d4	      1203	archures.c	FUNCTION_12	SWITCH_1
0x4000839	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1205	archures.c	FUNCTION_12	SWITCH_1
0x4000840	    0x48c745e01200	           mov qword [rbp - 0x20], 0x12 	      1206	archures.c	FUNCTION_12	SWITCH_1
0x4000848	      0xe987000000	                           jmp 0x40008d4	      1207	archures.c	FUNCTION_12	SWITCH_1
0x400084d	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      1209	archures.c	FUNCTION_12	SWITCH_1
0x4000854	    0x48c745e01000	           mov qword [rbp - 0x20], 0x10 	      1210	archures.c	FUNCTION_12	SWITCH_1
0x400085c	            0xeb76	                           jmp 0x40008d4	      1211	archures.c	FUNCTION_12	SWITCH_1
0x400085e	    0xc745cc070000	               mov dword [rbp - 0x34], 7	      1214	archures.c	FUNCTION_12	SWITCH_1
0x4000865	    0x48c745e0b80b	          mov qword [rbp - 0x20], 0xbb8 	      1215	archures.c	FUNCTION_12	SWITCH_1
0x400086d	            0xeb65	                           jmp 0x40008d4	      1216	archures.c	FUNCTION_12	SWITCH_1
0x400086f	    0xc745cc070000	               mov dword [rbp - 0x34], 7	      1219	archures.c	FUNCTION_12	SWITCH_1
0x4000876	    0x48c745e0a00f	          mov qword [rbp - 0x20], 0xfa0 	      1220	archures.c	FUNCTION_12	SWITCH_1
0x400087e	            0xeb54	                           jmp 0x40008d4	      1221	archures.c	FUNCTION_12	SWITCH_1
0x4000880	    0xc745cc140000	           mov dword [rbp - 0x34], 0x14 	      1224	archures.c	FUNCTION_12	SWITCH_1
0x4000887	            0xeb4b	                           jmp 0x40008d4	      1225	archures.c	FUNCTION_12	SWITCH_1
0x4000889	    0xc745cc1f0000	           mov dword [rbp - 0x34], 0x1f 	      1228	archures.c	FUNCTION_12	SWITCH_1
0x4000890	    0x48c745e02d00	           mov qword [rbp - 0x20], 0x2d 	      1229	archures.c	FUNCTION_12	SWITCH_1
0x4000898	            0xeb3a	                           jmp 0x40008d4	      1230	archures.c	FUNCTION_12	SWITCH_1
0x400089a	    0xc745cc1f0000	           mov dword [rbp - 0x34], 0x1f 	      1233	archures.c	FUNCTION_12	SWITCH_1
0x40008a1	    0x48c745e03000	           mov qword [rbp - 0x20], 0x30 	      1234	archures.c	FUNCTION_12	SWITCH_1
0x40008a9	            0xeb29	                           jmp 0x40008d4	      1235	archures.c	FUNCTION_12	SWITCH_1
0x40008ab	    0xc745cc1f0000	           mov dword [rbp - 0x34], 0x1f 	      1238	archures.c	FUNCTION_12	SWITCH_1
0x40008b2	    0x48c745e03d00	           mov qword [rbp - 0x20], 0x3d 	      1239	archures.c	FUNCTION_12	SWITCH_1
0x40008ba	            0xeb18	                           jmp 0x40008d4	      1240	archures.c	FUNCTION_12	SWITCH_1
0x40008bc	    0xc745cc1f0000	           mov dword [rbp - 0x34], 0x1f 	      1243	archures.c	FUNCTION_12	SWITCH_1
0x40008c3	    0x48c745e04000	           mov qword [rbp - 0x20], 0x40 	      1244	archures.c	FUNCTION_12	SWITCH_1
0x40008cb	            0xeb07	                           jmp 0x40008d4	      1245	archures.c	FUNCTION_12	SWITCH_1
0x40008cd	      0xb800000000	                              mov eax, 0	      1248	archures.c	FUNCTION_12	SWITCH_1
0x40008d2	            0xeb2d	                           jmp 0x4000901	      1248	archures.c	FUNCTION_12	SWITCH_1
0x40008d4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1251	archures.c	FUNCTION_12	IF_13
0x40008d8	          0x8b400c	              mov eax, dword [rax + 0xc]	      1251	archures.c	FUNCTION_12	IF_13
0x40008db	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1251	archures.c	FUNCTION_12	IF_13
0x40008de	            0x7407	                            je 0x40008e7	      1251	archures.c	FUNCTION_12	IF_13
0x40008e0	      0xb800000000	                              mov eax, 0	      1252	archures.c	FUNCTION_12	IF_13
0x40008e5	            0xeb1a	                           jmp 0x4000901	      1252	archures.c	FUNCTION_12	IF_13
0x40008e7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1254	archures.c	FUNCTION_12	IF_14
0x40008eb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1254	archures.c	FUNCTION_12	IF_14
0x40008ef	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1254	archures.c	FUNCTION_12	IF_14
0x40008f3	            0x7407	                            je 0x40008fc	      1254	archures.c	FUNCTION_12	IF_14
0x40008f5	      0xb800000000	                              mov eax, 0	      1255	archures.c	FUNCTION_12	IF_14
0x40008fa	            0xeb05	                           jmp 0x4000901	      1255	archures.c	FUNCTION_12	IF_14
0x40008fc	      0xb801000000	                              mov eax, 1	      1257	archures.c	FUNCTION_12
0x4000901	              0xc9	                                   leave	      1258	archures.c	FUNCTION_12
0x4000902	              0xc3	                                     ret	      1258	archures.c	FUNCTION_12
bfd_scan_arch	DO,0:SWITCH,0:WHILE,0:IF,1:FOR,2:CALL,1:ELSE,0:functions,0	34
0x4000059	              0x55	                                push rbp	       772	archures.c	FUNCTION_2
0x400005a	          0x4889e5	                            mov rbp, rsp	       772	archures.c	FUNCTION_2
0x400005d	        0x4883ec20	                           sub rsp, 0x20	       772	archures.c	FUNCTION_2
0x4000061	        0x48897de8	             mov qword [rbp - 0x18], rdi	       772	archures.c	FUNCTION_2
0x4000065	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       776	archures.c	FUNCTION_2	FOR_1
0x400006d	            0xeb47	                           jmp 0x40000b6	       776	archures.c	FUNCTION_2	FOR_1
0x400006f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x4000073	          0x488b00	                    mov rax, qword [rax]	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x4000076	        0x488945f8	                mov qword [rbp - 8], rax	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x400007a	            0xeb2e	                           jmp 0x40000aa	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x400007c	        0x488b45f8	                mov rax, qword [rbp - 8]	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x4000080	        0x488b4038	            mov rax, qword [rax + 0x38] 	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x4000084	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x4000088	        0x488b55f8	                mov rdx, qword [rbp - 8]	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x400008c	          0x4889ce	                            mov rsi, rcx	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x400008f	          0x4889d7	                            mov rdi, rdx	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x4000092	            0xffd0	                                call rax	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x4000094	            0x85c0	                           test eax, eax	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x4000096	            0x7406	                            je 0x400009e	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x4000098	        0x488b45f8	                mov rax, qword [rbp - 8]	       781	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1
0x400009c	            0xeb29	                           jmp 0x40000c7	       781	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1
0x400009e	        0x488b45f8	                mov rax, qword [rbp - 8]	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40000a2	        0x488b4048	            mov rax, qword [rax + 0x48] 	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40000a6	        0x488945f8	                mov qword [rbp - 8], rax	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40000aa	      0x48837df800	                  cmp qword [rbp - 8], 0	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40000af	            0x75cb	                           jne 0x400007c	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40000b1	      0x488345f008	               add qword [rbp - 0x10], 8	       776	archures.c	FUNCTION_2	FOR_1
0x40000b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       776	archures.c	FUNCTION_2	FOR_1
0x40000ba	          0x488b00	                    mov rax, qword [rax]	       776	archures.c	FUNCTION_2	FOR_1
0x40000bd	          0x4885c0	                           test rax, rax	       776	archures.c	FUNCTION_2	FOR_1
0x40000c0	            0x75ad	                           jne 0x400006f	       776	archures.c	FUNCTION_2	FOR_1
0x40000c2	      0xb800000000	                              mov eax, 0	       785	archures.c	FUNCTION_2
0x40000c7	              0xc9	                                   leave	       786	archures.c	FUNCTION_2
0x40000c8	              0xc3	                                     ret	       786	archures.c	FUNCTION_2
bfd_get_arch_info	DO,0:SWITCH,0:WHILE,0:IF,0:FOR,0:CALL,0:ELSE,0:functions,0	7
0x4000903	              0x55	                                push rbp	      1273	archures.c	FUNCTION_13
0x4000904	          0x4889e5	                            mov rbp, rsp	      1273	archures.c	FUNCTION_13
0x4000907	        0x48897df8	                mov qword [rbp - 8], rdi	      1273	archures.c	FUNCTION_13
0x400090b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	archures.c	FUNCTION_13
0x400090f	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      1274	archures.c	FUNCTION_13
0x4000916	              0x5d	                                 pop rbp	      1275	archures.c	FUNCTION_13
0x4000917	              0xc3	                                     ret	      1275	archures.c	FUNCTION_13
bfd_get_mach	DO,0:SWITCH,0:WHILE,0:IF,0:FOR,0:CALL,0:ELSE,0:functions,0	8
0x4000313	              0x55	                                push rbp	       984	archures.c	FUNCTION_8
0x4000314	          0x4889e5	                            mov rbp, rsp	       984	archures.c	FUNCTION_8
0x4000317	        0x48897df8	                mov qword [rbp - 8], rdi	       984	archures.c	FUNCTION_8
0x400031b	        0x488b45f8	                mov rax, qword [rbp - 8]	       985	archures.c	FUNCTION_8
0x400031f	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       985	archures.c	FUNCTION_8
0x4000326	        0x488b4010	            mov rax, qword [rax + 0x10] 	       985	archures.c	FUNCTION_8
0x400032a	              0x5d	                                 pop rbp	       986	archures.c	FUNCTION_8
0x400032b	              0xc3	                                     ret	       986	archures.c	FUNCTION_8
bfd_arch_list	DO,0:SWITCH,0:WHILE,0:IF,1:FOR,4:CALL,1:ELSE,0:functions,0	63
0x40000c9	              0x55	                                push rbp	       802	archures.c	FUNCTION_3
0x40000ca	          0x4889e5	                            mov rbp, rsp	       802	archures.c	FUNCTION_3
0x40000cd	        0x4883ec40	                           sub rsp, 0x40	       802	archures.c	FUNCTION_3
0x40000d1	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       803	archures.c	FUNCTION_3
0x40000d8	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       810	archures.c	FUNCTION_3
0x40000df	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       811	archures.c	FUNCTION_3	FOR_1
0x40000e7	            0xeb29	                           jmp 0x4000112	       811	archures.c	FUNCTION_3	FOR_1
0x40000e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40000ed	          0x488b00	                    mov rax, qword [rax]	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40000f0	        0x488945e0	             mov qword [rbp - 0x20], rax	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40000f4	            0xeb10	                           jmp 0x4000106	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40000f6	        0x8345cc01	               add dword [rbp - 0x34], 1	       816	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40000fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40000fe	        0x488b4048	            mov rax, qword [rax + 0x48] 	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x4000102	        0x488945e0	             mov qword [rbp - 0x20], rax	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x4000106	      0x48837de000	               cmp qword [rbp - 0x20], 0	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x400010b	            0x75e9	                           jne 0x40000f6	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x400010d	      0x488345d808	               add qword [rbp - 0x28], 8	       811	archures.c	FUNCTION_3	FOR_1
0x4000112	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       811	archures.c	FUNCTION_3	FOR_1
0x4000116	          0x488b00	                    mov rax, qword [rax]	       811	archures.c	FUNCTION_3	FOR_1
0x4000119	          0x4885c0	                           test rax, rax	       811	archures.c	FUNCTION_3	FOR_1
0x400011c	            0x75cb	                           jne 0x40000e9	       811	archures.c	FUNCTION_3	FOR_1
0x400011e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       820	archures.c	FUNCTION_3
0x4000121	          0x83c001	                              add eax, 1	       820	archures.c	FUNCTION_3
0x4000124	            0x4898	                                    cdqe	       820	archures.c	FUNCTION_3
0x4000126	        0x48c1e003	                              shl rax, 3	       820	archures.c	FUNCTION_3
0x400012a	        0x488945f0	             mov qword [rbp - 0x10], rax	       820	archures.c	FUNCTION_3
0x400012e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       821	archures.c	FUNCTION_3	CALL_1
0x4000132	          0x4889c7	                            mov rdi, rax	       821	archures.c	FUNCTION_3	CALL_1
0x4000135	      0xe800000000	                          call 0x400013a	       821	archures.c	FUNCTION_3	CALL_1
0x400013a	        0x488945f8	                mov qword [rbp - 8], rax	       821	archures.c	FUNCTION_3	CALL_1
0x400013e	      0x48837df800	                  cmp qword [rbp - 8], 0	       822	archures.c	FUNCTION_3	IF_1
0x4000143	            0x7507	                           jne 0x400014c	       822	archures.c	FUNCTION_3	IF_1
0x4000145	      0xb800000000	                              mov eax, 0	       823	archures.c	FUNCTION_3	IF_1
0x400014a	            0xeb66	                           jmp 0x40001b2	       823	archures.c	FUNCTION_3	IF_1
0x400014c	        0x488b45f8	                mov rax, qword [rbp - 8]	       826	archures.c	FUNCTION_3
0x4000150	        0x488945d0	             mov qword [rbp - 0x30], rax	       826	archures.c	FUNCTION_3
0x4000154	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       827	archures.c	FUNCTION_3	FOR_3
0x400015c	            0xeb39	                           jmp 0x4000197	       827	archures.c	FUNCTION_3	FOR_3
0x400015e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000162	          0x488b00	                    mov rax, qword [rax]	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000165	        0x488945e8	             mov qword [rbp - 0x18], rax	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000169	            0xeb20	                           jmp 0x400018b	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x400016b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       832	archures.c	FUNCTION_3	FOR_3	FOR_4
0x400016f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       832	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000173	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       832	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000177	          0x488910	                    mov qword [rax], rdx	       832	archures.c	FUNCTION_3	FOR_3	FOR_4
0x400017a	      0x488345d008	               add qword [rbp - 0x30], 8	       833	archures.c	FUNCTION_3	FOR_3	FOR_4
0x400017f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000183	        0x488b4048	            mov rax, qword [rax + 0x48] 	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000187	        0x488945e8	             mov qword [rbp - 0x18], rax	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x400018b	      0x48837de800	               cmp qword [rbp - 0x18], 0	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000190	            0x75d9	                           jne 0x400016b	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000192	      0x488345d808	               add qword [rbp - 0x28], 8	       827	archures.c	FUNCTION_3	FOR_3
0x4000197	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       827	archures.c	FUNCTION_3	FOR_3
0x400019b	          0x488b00	                    mov rax, qword [rax]	       827	archures.c	FUNCTION_3	FOR_3
0x400019e	          0x4885c0	                           test rax, rax	       827	archures.c	FUNCTION_3	FOR_3
0x40001a1	            0x75bb	                           jne 0x400015e	       827	archures.c	FUNCTION_3	FOR_3
0x40001a3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       836	archures.c	FUNCTION_3
0x40001a7	    0x48c700000000	                      mov qword [rax], 0	       836	archures.c	FUNCTION_3
0x40001ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       838	archures.c	FUNCTION_3
0x40001b2	              0xc9	                                   leave	       839	archures.c	FUNCTION_3
0x40001b3	              0xc3	                                     ret	       839	archures.c	FUNCTION_3
bfd_printable_name	DO,0:SWITCH,0:WHILE,0:IF,0:FOR,0:CALL,0:ELSE,0:functions,0	8
0x4000040	              0x55	                                push rbp	       753	archures.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       753	archures.c	FUNCTION_1
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       753	archures.c	FUNCTION_1
0x4000048	        0x488b45f8	                mov rax, qword [rbp - 8]	       754	archures.c	FUNCTION_1
0x400004c	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       754	archures.c	FUNCTION_1
0x4000053	        0x488b4020	            mov rax, qword [rax + 0x20] 	       754	archures.c	FUNCTION_1
0x4000057	              0x5d	                                 pop rbp	       755	archures.c	FUNCTION_1
0x4000058	              0xc3	                                     ret	       755	archures.c	FUNCTION_1
bfd_default_compatible	DO,0:SWITCH,0:WHILE,0:IF,4:FOR,0:CALL,0:ELSE,0:functions,0	39
0x400035c	              0x55	                                push rbp	      1039	archures.c	FUNCTION_11
0x400035d	          0x4889e5	                            mov rbp, rsp	      1039	archures.c	FUNCTION_11
0x4000360	        0x48897df8	                mov qword [rbp - 8], rdi	      1039	archures.c	FUNCTION_11
0x4000364	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1039	archures.c	FUNCTION_11
0x4000368	        0x488b45f8	                mov rax, qword [rbp - 8]	      1040	archures.c	FUNCTION_11	IF_1
0x400036c	          0x8b500c	              mov edx, dword [rax + 0xc]	      1040	archures.c	FUNCTION_11	IF_1
0x400036f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1040	archures.c	FUNCTION_11	IF_1
0x4000373	          0x8b400c	              mov eax, dword [rax + 0xc]	      1040	archures.c	FUNCTION_11	IF_1
0x4000376	            0x39c2	                            cmp edx, eax	      1040	archures.c	FUNCTION_11	IF_1
0x4000378	            0x7407	                            je 0x4000381	      1040	archures.c	FUNCTION_11	IF_1
0x400037a	      0xb800000000	                              mov eax, 0	      1041	archures.c	FUNCTION_11	IF_1
0x400037f	            0xeb51	                           jmp 0x40003d2	      1041	archures.c	FUNCTION_11	IF_1
0x4000381	        0x488b45f8	                mov rax, qword [rbp - 8]	      1043	archures.c	FUNCTION_11	IF_2
0x4000385	            0x8b10	                    mov edx, dword [rax]	      1043	archures.c	FUNCTION_11	IF_2
0x4000387	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1043	archures.c	FUNCTION_11	IF_2
0x400038b	            0x8b00	                    mov eax, dword [rax]	      1043	archures.c	FUNCTION_11	IF_2
0x400038d	            0x39c2	                            cmp edx, eax	      1043	archures.c	FUNCTION_11	IF_2
0x400038f	            0x7407	                            je 0x4000398	      1043	archures.c	FUNCTION_11	IF_2
0x4000391	      0xb800000000	                              mov eax, 0	      1044	archures.c	FUNCTION_11	IF_2
0x4000396	            0xeb3a	                           jmp 0x40003d2	      1044	archures.c	FUNCTION_11	IF_2
0x4000398	        0x488b45f8	                mov rax, qword [rbp - 8]	      1046	archures.c	FUNCTION_11	IF_3
0x400039c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1046	archures.c	FUNCTION_11	IF_3
0x40003a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1046	archures.c	FUNCTION_11	IF_3
0x40003a4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1046	archures.c	FUNCTION_11	IF_3
0x40003a8	          0x4839c2	                            cmp rdx, rax	      1046	archures.c	FUNCTION_11	IF_3
0x40003ab	            0x7606	                           jbe 0x40003b3	      1046	archures.c	FUNCTION_11	IF_3
0x40003ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      1047	archures.c	FUNCTION_11	IF_3
0x40003b1	            0xeb1f	                           jmp 0x40003d2	      1047	archures.c	FUNCTION_11	IF_3
0x40003b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1049	archures.c	FUNCTION_11	IF_4
0x40003b7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1049	archures.c	FUNCTION_11	IF_4
0x40003bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	archures.c	FUNCTION_11	IF_4
0x40003bf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1049	archures.c	FUNCTION_11	IF_4
0x40003c3	          0x4839c2	                            cmp rdx, rax	      1049	archures.c	FUNCTION_11	IF_4
0x40003c6	            0x7606	                           jbe 0x40003ce	      1049	archures.c	FUNCTION_11	IF_4
0x40003c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1050	archures.c	FUNCTION_11	IF_4
0x40003cc	            0xeb04	                           jmp 0x40003d2	      1050	archures.c	FUNCTION_11	IF_4
0x40003ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      1052	archures.c	FUNCTION_11
0x40003d2	              0x5d	                                 pop rbp	      1053	archures.c	FUNCTION_11
0x40003d3	              0xc3	                                     ret	      1053	archures.c	FUNCTION_11
bfd_arch_bits_per_byte	DO,0:SWITCH,0:WHILE,0:IF,0:FOR,0:CALL,0:ELSE,0:functions,0	8
0x400032c	              0x55	                                push rbp	      1002	archures.c	FUNCTION_9
0x400032d	          0x4889e5	                            mov rbp, rsp	      1002	archures.c	FUNCTION_9
0x4000330	        0x48897df8	                mov qword [rbp - 8], rdi	      1002	archures.c	FUNCTION_9
0x4000334	        0x488b45f8	                mov rax, qword [rbp - 8]	      1003	archures.c	FUNCTION_9
0x4000338	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      1003	archures.c	FUNCTION_9
0x400033f	          0x8b4008	                mov eax, dword [rax + 8]	      1003	archures.c	FUNCTION_9
0x4000342	              0x5d	                                 pop rbp	      1004	archures.c	FUNCTION_9
0x4000343	              0xc3	                                     ret	      1004	archures.c	FUNCTION_9
bfd_octets_per_byte	DO,0:SWITCH,0:WHILE,0:IF,0:FOR,0:CALL,3:ELSE,0:functions,0	19
0x40009d3	              0x55	                                push rbp	      1351	archures.c	FUNCTION_16
0x40009d4	          0x4889e5	                            mov rbp, rsp	      1351	archures.c	FUNCTION_16
0x40009d7	              0x53	                                push rbx	      1351	archures.c	FUNCTION_16
0x40009d8	        0x4883ec18	                           sub rsp, 0x18	      1351	archures.c	FUNCTION_16
0x40009dc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1351	archures.c	FUNCTION_16
0x40009e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1352	archures.c	FUNCTION_16	CALL_2
0x40009e4	          0x4889c7	                            mov rdi, rax	      1352	archures.c	FUNCTION_16	CALL_2
0x40009e7	      0xe800000000	                          call 0x40009ec	      1352	archures.c	FUNCTION_16	CALL_2
0x40009ec	          0x4889c3	                            mov rbx, rax	      1352	archures.c	FUNCTION_16	CALL_2
0x40009ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1352	archures.c	FUNCTION_16	CALL_2
0x40009f3	          0x4889c7	                            mov rdi, rax	      1352	archures.c	FUNCTION_16	CALL_2
0x40009f6	      0xe800000000	                          call 0x40009fb	      1352	archures.c	FUNCTION_16	CALL_2
0x40009fb	          0x4889de	                            mov rsi, rbx	      1352	archures.c	FUNCTION_16	CALL_2
0x40009fe	            0x89c7	                            mov edi, eax	      1352	archures.c	FUNCTION_16	CALL_2
0x4000a00	      0xe800000000	                          call 0x4000a05	      1352	archures.c	FUNCTION_16	CALL_2
0x4000a05	        0x4883c418	                           add rsp, 0x18	      1354	archures.c	FUNCTION_16
0x4000a09	              0x5b	                                 pop rbx	      1354	archures.c	FUNCTION_16
0x4000a0a	              0x5d	                                 pop rbp	      1354	archures.c	FUNCTION_16
0x4000a0b	              0xc3	                                     ret	      1354	archures.c	FUNCTION_16
bfd_arch_get_compatible	DO,0:SWITCH,0:WHILE,0:IF,3:FOR,0:CALL,3:ELSE,2:functions,0	53
0x40001b4	              0x55	                                push rbp	       861	archures.c	FUNCTION_4
0x40001b5	          0x4889e5	                            mov rbp, rsp	       861	archures.c	FUNCTION_4
0x40001b8	        0x4883ec30	                           sub rsp, 0x30	       861	archures.c	FUNCTION_4
0x40001bc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       861	archures.c	FUNCTION_4
0x40001c0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       861	archures.c	FUNCTION_4
0x40001c4	          0x8955dc	             mov dword [rbp - 0x24], edx	       861	archures.c	FUNCTION_4
0x40001c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       865	archures.c	FUNCTION_4	IF_1
0x40001cb	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       865	archures.c	FUNCTION_4	IF_1
0x40001d2	          0x8b400c	              mov eax, dword [rax + 0xc]	       865	archures.c	FUNCTION_4	IF_1
0x40001d5	            0x85c0	                           test eax, eax	       865	archures.c	FUNCTION_4	IF_1
0x40001d7	            0x7512	                           jne 0x40001eb	       865	archures.c	FUNCTION_4	IF_1
0x40001d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       866	archures.c	FUNCTION_4	IF_1
0x40001dd	        0x488945f0	             mov qword [rbp - 0x10], rax	       866	archures.c	FUNCTION_4	IF_1
0x40001e1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       866	archures.c	FUNCTION_4	IF_1
0x40001e5	        0x488945f8	                mov qword [rbp - 8], rax	       866	archures.c	FUNCTION_4	IF_1
0x40001e9	            0xeb53	                           jmp 0x400023e	       866	archures.c	FUNCTION_4	IF_1
0x40001eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x40001ef	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x40001f6	          0x8b400c	              mov eax, dword [rax + 0xc]	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x40001f9	            0x85c0	                           test eax, eax	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x40001fb	            0x7512	                           jne 0x400020f	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x40001fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       868	archures.c	FUNCTION_4	ELSE_1	IF_2
0x4000201	        0x488945f0	             mov qword [rbp - 0x10], rax	       868	archures.c	FUNCTION_4	ELSE_1	IF_2
0x4000205	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       868	archures.c	FUNCTION_4	ELSE_1	IF_2
0x4000209	        0x488945f8	                mov qword [rbp - 8], rax	       868	archures.c	FUNCTION_4	ELSE_1	IF_2
0x400020d	            0xeb2f	                           jmp 0x400023e	       868	archures.c	FUNCTION_4	ELSE_1	IF_2
0x400020f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       871	archures.c	FUNCTION_4	CALL_1
0x4000213	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       871	archures.c	FUNCTION_4	CALL_1
0x400021a	        0x488b4030	            mov rax, qword [rax + 0x30] 	       871	archures.c	FUNCTION_4	CALL_1
0x400021e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       871	archures.c	FUNCTION_4	CALL_1
0x4000222	    0x488b8ac00000	            mov rcx, qword [rdx + 0xc0] 	       871	archures.c	FUNCTION_4	CALL_1
0x4000229	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       871	archures.c	FUNCTION_4	CALL_1
0x400022d	    0x488b92c00000	            mov rdx, qword [rdx + 0xc0] 	       871	archures.c	FUNCTION_4	CALL_1
0x4000234	          0x4889ce	                            mov rsi, rcx	       871	archures.c	FUNCTION_4	CALL_1
0x4000237	          0x4889d7	                            mov rdi, rdx	       871	archures.c	FUNCTION_4	CALL_1
0x400023a	            0xffd0	                                call rax	       871	archures.c	FUNCTION_4	CALL_1
0x400023c	            0xeb34	                           jmp 0x4000272	       871	archures.c	FUNCTION_4	CALL_1
0x400023e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       878	archures.c	FUNCTION_4	IF_3
0x4000242	            0x751c	                           jne 0x4000260	       878	archures.c	FUNCTION_4	IF_3
0x4000244	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x4000248	        0x488b4008	                mov rax, qword [rax + 8]	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x400024c	          0x488b00	                    mov rax, qword [rax]	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x400024f	      0xbe00000000	                              mov esi, 0	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x4000254	          0x4889c7	                            mov rdi, rax	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x4000257	      0xe800000000	                          call 0x400025c	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x400025c	            0x85c0	                           test eax, eax	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x400025e	            0x750d	                           jne 0x400026d	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x4000260	        0x488b45f8	                mov rax, qword [rbp - 8]	       880	archures.c	FUNCTION_4	IF_3
0x4000264	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       880	archures.c	FUNCTION_4	IF_3
0x400026b	            0xeb05	                           jmp 0x4000272	       880	archures.c	FUNCTION_4	IF_3
0x400026d	      0xb800000000	                              mov eax, 0	       881	archures.c	FUNCTION_4
0x4000272	              0xc9	                                   leave	       882	archures.c	FUNCTION_4
0x4000273	              0xc3	                                     ret	       882	archures.c	FUNCTION_4
bfd_printable_arch_mach	DO,0:SWITCH,0:WHILE,0:IF,1:FOR,0:CALL,1:ELSE,0:functions,0	19
0x4000997	              0x55	                                push rbp	      1328	archures.c	FUNCTION_15
0x4000998	          0x4889e5	                            mov rbp, rsp	      1328	archures.c	FUNCTION_15
0x400099b	        0x4883ec20	                           sub rsp, 0x20	      1328	archures.c	FUNCTION_15
0x400099f	          0x897dec	             mov dword [rbp - 0x14], edi	      1328	archures.c	FUNCTION_15
0x40009a2	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1328	archures.c	FUNCTION_15
0x40009a6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1329	archures.c	FUNCTION_15	CALL_1
0x40009aa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1329	archures.c	FUNCTION_15	CALL_1
0x40009ad	          0x4889d6	                            mov rsi, rdx	      1329	archures.c	FUNCTION_15	CALL_1
0x40009b0	            0x89c7	                            mov edi, eax	      1329	archures.c	FUNCTION_15	CALL_1
0x40009b2	      0xe800000000	                          call 0x40009b7	      1329	archures.c	FUNCTION_15	CALL_1
0x40009b7	        0x488945f8	                mov qword [rbp - 8], rax	      1329	archures.c	FUNCTION_15	CALL_1
0x40009bb	      0x48837df800	                  cmp qword [rbp - 8], 0	      1331	archures.c	FUNCTION_15	IF_1
0x40009c0	            0x740a	                            je 0x40009cc	      1331	archures.c	FUNCTION_15	IF_1
0x40009c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1332	archures.c	FUNCTION_15	IF_1
0x40009c6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1332	archures.c	FUNCTION_15	IF_1
0x40009ca	            0xeb05	                           jmp 0x40009d1	      1332	archures.c	FUNCTION_15	IF_1
0x40009cc	      0xb800000000	                              mov eax, 0	      1333	archures.c	FUNCTION_15
0x40009d1	              0xc9	                                   leave	      1334	archures.c	FUNCTION_15
0x40009d2	              0xc3	                                     ret	      1334	archures.c	FUNCTION_15
bfd_arch_mach_octets_per_byte	DO,0:SWITCH,0:WHILE,0:IF,1:FOR,0:CALL,1:ELSE,0:functions,0	23
0x4000a0c	              0x55	                                push rbp	      1374	archures.c	FUNCTION_17
0x4000a0d	          0x4889e5	                            mov rbp, rsp	      1374	archures.c	FUNCTION_17
0x4000a10	        0x4883ec20	                           sub rsp, 0x20	      1374	archures.c	FUNCTION_17
0x4000a14	          0x897dec	             mov dword [rbp - 0x14], edi	      1374	archures.c	FUNCTION_17
0x4000a17	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1374	archures.c	FUNCTION_17
0x4000a1b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1375	archures.c	FUNCTION_17	CALL_1
0x4000a1f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1375	archures.c	FUNCTION_17	CALL_1
0x4000a22	          0x4889d6	                            mov rsi, rdx	      1375	archures.c	FUNCTION_17	CALL_1
0x4000a25	            0x89c7	                            mov edi, eax	      1375	archures.c	FUNCTION_17	CALL_1
0x4000a27	      0xe800000000	                          call 0x4000a2c	      1375	archures.c	FUNCTION_17	CALL_1
0x4000a2c	        0x488945f8	                mov qword [rbp - 8], rax	      1375	archures.c	FUNCTION_17	CALL_1
0x4000a30	      0x48837df800	                  cmp qword [rbp - 8], 0	      1377	archures.c	FUNCTION_17	IF_1
0x4000a35	            0x7414	                            je 0x4000a4b	      1377	archures.c	FUNCTION_17	IF_1
0x4000a37	        0x488b45f8	                mov rax, qword [rbp - 8]	      1378	archures.c	FUNCTION_17	IF_1
0x4000a3b	          0x8b4008	                mov eax, dword [rax + 8]	      1378	archures.c	FUNCTION_17	IF_1
0x4000a3e	          0x8d5007	                      lea edx, [rax + 7]	      1378	archures.c	FUNCTION_17	IF_1
0x4000a41	            0x85c0	                           test eax, eax	      1378	archures.c	FUNCTION_17	IF_1
0x4000a43	           0xf48c2	                          cmovs eax, edx	      1378	archures.c	FUNCTION_17	IF_1
0x4000a46	          0xc1f803	                              sar eax, 3	      1378	archures.c	FUNCTION_17	IF_1
0x4000a49	            0xeb05	                           jmp 0x4000a50	      1378	archures.c	FUNCTION_17	IF_1
0x4000a4b	      0xb801000000	                              mov eax, 1	      1379	archures.c	FUNCTION_17
0x4000a50	              0xc9	                                   leave	      1380	archures.c	FUNCTION_17
0x4000a51	              0xc3	                                     ret	      1380	archures.c	FUNCTION_17
_bfd_nowrite_set_arch_mach	DO,0:SWITCH,0:WHILE,0:IF,0:FOR,0:CALL,1:ELSE,0:functions,0	11
0x4000a96	              0x55	                                push rbp	      1412	archures.c	FUNCTION_19
0x4000a97	          0x4889e5	                            mov rbp, rsp	      1412	archures.c	FUNCTION_19
0x4000a9a	        0x4883ec20	                           sub rsp, 0x20	      1412	archures.c	FUNCTION_19
0x4000a9e	        0x48897df8	                mov qword [rbp - 8], rdi	      1412	archures.c	FUNCTION_19
0x4000aa2	          0x8975f4	              mov dword [rbp - 0xc], esi	      1412	archures.c	FUNCTION_19
0x4000aa5	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1412	archures.c	FUNCTION_19
0x4000aa9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1413	archures.c	FUNCTION_19	CALL_1
0x4000aad	          0x4889c7	                            mov rdi, rax	      1413	archures.c	FUNCTION_19	CALL_1
0x4000ab0	      0xe800000000	                          call 0x4000ab5	      1413	archures.c	FUNCTION_19	CALL_1
0x4000ab5	              0xc9	                                   leave	      1414	archures.c	FUNCTION_19
0x4000ab6	              0xc3	                                     ret	      1414	archures.c	FUNCTION_19
bfd_arch_default_fill	DO,0:SWITCH,0:WHILE,0:IF,1:FOR,0:CALL,2:ELSE,0:functions,0	20
0x4000a52	              0x55	                                push rbp	      1401	archures.c	FUNCTION_18
0x4000a53	          0x4889e5	                            mov rbp, rsp	      1401	archures.c	FUNCTION_18
0x4000a56	        0x4883ec20	                           sub rsp, 0x20	      1401	archures.c	FUNCTION_18
0x4000a5a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1401	archures.c	FUNCTION_18
0x4000a5e	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1401	archures.c	FUNCTION_18
0x4000a61	          0x8955e0	             mov dword [rbp - 0x20], edx	      1401	archures.c	FUNCTION_18
0x4000a64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1402	archures.c	FUNCTION_18	CALL_1
0x4000a68	          0x4889c7	                            mov rdi, rax	      1402	archures.c	FUNCTION_18	CALL_1
0x4000a6b	      0xe800000000	                          call 0x4000a70	      1402	archures.c	FUNCTION_18	CALL_1
0x4000a70	        0x488945f8	                mov qword [rbp - 8], rax	      1402	archures.c	FUNCTION_18	CALL_1
0x4000a74	      0x48837df800	                  cmp qword [rbp - 8], 0	      1403	archures.c	FUNCTION_18	IF_1
0x4000a79	            0x7415	                            je 0x4000a90	      1403	archures.c	FUNCTION_18	IF_1
0x4000a7b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1404	archures.c	FUNCTION_18	CALL_2
0x4000a7f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1404	archures.c	FUNCTION_18	CALL_2
0x4000a83	      0xbe00000000	                              mov esi, 0	      1404	archures.c	FUNCTION_18	CALL_2
0x4000a88	          0x4889c7	                            mov rdi, rax	      1404	archures.c	FUNCTION_18	CALL_2
0x4000a8b	      0xe800000000	                          call 0x4000a90	      1404	archures.c	FUNCTION_18	CALL_2
0x4000a90	        0x488b45f8	                mov rax, qword [rbp - 8]	      1405	archures.c	FUNCTION_18
0x4000a94	              0xc9	                                   leave	      1406	archures.c	FUNCTION_18
0x4000a95	              0xc3	                                     ret	      1406	archures.c	FUNCTION_18
