init_line_structures	functions,0:WHILE,0:CALL,8:SWITCH,0:ELSE,1:DO,0:IF,5:FOR,1	134
0x40005a3	              0x55	                                push rbp	       450	display.c	FUNCTION_1
0x40005a4	          0x4889e5	                            mov rbp, rsp	       450	display.c	FUNCTION_1
0x40005a7	              0x53	                                push rbx	       450	display.c	FUNCTION_1
0x40005a8	        0x4883ec18	                           sub rsp, 0x18	       450	display.c	FUNCTION_1
0x40005ac	          0x897dec	             mov dword [rbp - 0x14], edi	       450	display.c	FUNCTION_1
0x40005af	    0x488b05000000	            mov rax, qword [0x040005b6] 	       453	display.c	FUNCTION_1	IF_1
0x40005b6	          0x488b00	                    mov rax, qword [rax]	       453	display.c	FUNCTION_1	IF_1
0x40005b9	          0x4885c0	                           test rax, rax	       453	display.c	FUNCTION_1	IF_1
0x40005bc	            0x754a	                           jne 0x4000608	       453	display.c	FUNCTION_1	IF_1
0x40005be	    0x8b0500000000	            mov eax, dword [0x040005c4] 	       455	display.c	FUNCTION_1	IF_1	IF_2
0x40005c4	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       455	display.c	FUNCTION_1	IF_1	IF_2
0x40005c7	            0x7d09	                           jge 0x40005d2	       455	display.c	FUNCTION_1	IF_1	IF_2
0x40005c9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       456	display.c	FUNCTION_1	IF_1	IF_2
0x40005cc	    0x890500000000	            mov dword [0x040005d2], eax 	       456	display.c	FUNCTION_1	IF_1	IF_2
0x40005d2	    0x488b1d000000	            mov rbx, qword [0x040005d9] 	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x40005d9	    0x8b0500000000	            mov eax, dword [0x040005df] 	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x40005df	            0x4898	                                    cdqe	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x40005e1	          0x4889c7	                            mov rdi, rax	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x40005e4	      0xe800000000	                          call 0x40005e9	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x40005e9	          0x488903	                    mov qword [rbx], rax	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x40005ec	    0x488b1d000000	            mov rbx, qword [0x040005f3] 	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x40005f3	    0x8b0500000000	            mov eax, dword [0x040005f9] 	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x40005f9	            0x4898	                                    cdqe	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x40005fb	          0x4889c7	                            mov rdi, rax	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x40005fe	      0xe800000000	                          call 0x4000603	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000603	          0x488903	                    mov qword [rbx], rax	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000606	            0xeb7d	                           jmp 0x4000685	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000608	    0x8b0500000000	            mov eax, dword [0x0400060e] 	       460	display.c	FUNCTION_1	ELSE_1	IF_3
0x400060e	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       460	display.c	FUNCTION_1	ELSE_1	IF_3
0x4000611	            0x7d72	                           jge 0x4000685	       460	display.c	FUNCTION_1	ELSE_1	IF_3
0x4000613	    0x8b0500000000	            mov eax, dword [0x04000619] 	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x4000619	             0x1c0	                            add eax, eax	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x400061b	    0x890500000000	            mov dword [0x04000621], eax 	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x4000621	    0x8b0500000000	            mov eax, dword [0x04000627] 	       463	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x4000627	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       463	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x400062a	            0x7d09	                           jge 0x4000635	       463	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x400062c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       464	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x400062f	    0x890500000000	            mov dword [0x04000635], eax 	       464	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x4000635	    0x488b1d000000	            mov rbx, qword [0x0400063c] 	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400063c	    0x8b0500000000	            mov eax, dword [0x04000642] 	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000642	          0x4863d0	                         movsxd rdx, eax	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000645	    0x488b05000000	            mov rax, qword [0x0400064c] 	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400064c	          0x488b00	                    mov rax, qword [rax]	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400064f	          0x4889d6	                            mov rsi, rdx	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000652	          0x4889c7	                            mov rdi, rax	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000655	      0xe800000000	                          call 0x400065a	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400065a	          0x488903	                    mov qword [rbx], rax	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400065d	    0x488b1d000000	            mov rbx, qword [0x04000664] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000664	    0x8b0500000000	            mov eax, dword [0x0400066a] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x400066a	          0x4863d0	                         movsxd rdx, eax	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x400066d	    0x488b05000000	            mov rax, qword [0x04000674] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000674	          0x488b00	                    mov rax, qword [rax]	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000677	          0x4889d6	                            mov rsi, rdx	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x400067a	          0x4889c7	                            mov rdi, rax	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x400067d	      0xe800000000	                          call 0x4000682	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000682	          0x488903	                    mov qword [rbx], rax	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000685	          0x8b5dec	             mov ebx, dword [rbp - 0x14]	       469	display.c	FUNCTION_1	FOR_1
0x4000688	            0xeb29	                           jmp 0x40006b3	       469	display.c	FUNCTION_1	FOR_1
0x400068a	    0x488b05000000	            mov rax, qword [0x04000691] 	       471	display.c	FUNCTION_1	FOR_1
0x4000691	          0x488b10	                    mov rdx, qword [rax]	       471	display.c	FUNCTION_1	FOR_1
0x4000694	          0x4863c3	                         movsxd rax, ebx	       471	display.c	FUNCTION_1	FOR_1
0x4000697	          0x4801d0	                            add rax, rdx	       471	display.c	FUNCTION_1	FOR_1
0x400069a	          0xc60000	                       mov byte [rax], 0	       471	display.c	FUNCTION_1	FOR_1
0x400069d	    0x488b05000000	            mov rax, qword [0x040006a4] 	       472	display.c	FUNCTION_1	FOR_1
0x40006a4	          0x488b10	                    mov rdx, qword [rax]	       472	display.c	FUNCTION_1	FOR_1
0x40006a7	          0x4863c3	                         movsxd rax, ebx	       472	display.c	FUNCTION_1	FOR_1
0x40006aa	          0x4801d0	                            add rax, rdx	       472	display.c	FUNCTION_1	FOR_1
0x40006ad	          0xc60001	                       mov byte [rax], 1	       472	display.c	FUNCTION_1	FOR_1
0x40006b0	          0x83c301	                              add ebx, 1	       469	display.c	FUNCTION_1	FOR_1
0x40006b3	    0x8b0500000000	            mov eax, dword [0x040006b9] 	       469	display.c	FUNCTION_1	FOR_1
0x40006b9	            0x39c3	                            cmp ebx, eax	       469	display.c	FUNCTION_1	FOR_1
0x40006bb	            0x7ccd	                            jl 0x400068a	       469	display.c	FUNCTION_1	FOR_1
0x40006bd	    0x488b05000000	            mov rax, qword [0x040006c4] 	       475	display.c	FUNCTION_1	IF_5
0x40006c4	        0x488b4008	                mov rax, qword [rax + 8]	       475	display.c	FUNCTION_1	IF_5
0x40006c8	          0x4885c0	                           test rax, rax	       475	display.c	FUNCTION_1	IF_5
0x40006cb	     0xf85ef000000	                           jne 0x40007c0	       475	display.c	FUNCTION_1	IF_5
0x40006d1	    0x488b15000000	            mov rdx, qword [0x040006d8] 	       478	display.c	FUNCTION_1	IF_5
0x40006d8	    0x488b05000000	            mov rax, qword [0x040006df] 	       478	display.c	FUNCTION_1	IF_5
0x40006df	    0xc74010000100	          mov dword [rax + 0x10], 0x100 	       478	display.c	FUNCTION_1	IF_5
0x40006e6	          0x8b4010	            mov eax, dword [rax + 0x10] 	       478	display.c	FUNCTION_1	IF_5
0x40006e9	          0x894210	             mov dword [rdx + 0x10], eax	       478	display.c	FUNCTION_1	IF_5
0x40006ec	    0x488b05000000	            mov rax, qword [0x040006f3] 	       481	display.c	FUNCTION_1	IF_5
0x40006f3	    0x488b15000000	            mov rdx, qword [0x040006fa] 	       481	display.c	FUNCTION_1	IF_5
0x40006fa	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       481	display.c	FUNCTION_1	IF_5
0x40006fd	          0x895020	             mov dword [rax + 0x20], edx	       481	display.c	FUNCTION_1	IF_5
0x4000700	    0x488b1d000000	            mov rbx, qword [0x04000707] 	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000707	    0x488b05000000	            mov rax, qword [0x0400070e] 	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x400070e	          0x8b4020	            mov eax, dword [rax + 0x20] 	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000711	            0x4898	                                    cdqe	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000713	        0x48c1e002	                              shl rax, 2	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000717	          0x4889c7	                            mov rdi, rax	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x400071a	      0xe800000000	                          call 0x400071f	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x400071f	        0x48894318	             mov qword [rbx + 0x18], rax	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000723	    0x488b05000000	            mov rax, qword [0x0400072a] 	       484	display.c	FUNCTION_1	IF_5
0x400072a	    0x488b15000000	            mov rdx, qword [0x04000731] 	       484	display.c	FUNCTION_1	IF_5
0x4000731	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       484	display.c	FUNCTION_1	IF_5
0x4000734	          0x895020	             mov dword [rax + 0x20], edx	       484	display.c	FUNCTION_1	IF_5
0x4000737	    0x488b1d000000	            mov rbx, qword [0x0400073e] 	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x400073e	    0x488b05000000	            mov rax, qword [0x04000745] 	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x4000745	          0x8b4020	            mov eax, dword [rax + 0x20] 	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x4000748	            0x4898	                                    cdqe	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x400074a	        0x48c1e002	                              shl rax, 2	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x400074e	          0x4889c7	                            mov rdi, rax	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x4000751	      0xe800000000	                          call 0x4000756	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x4000756	        0x48894318	             mov qword [rbx + 0x18], rax	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x400075a	    0x488b1d000000	            mov rbx, qword [0x04000761] 	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x4000761	    0x488b05000000	            mov rax, qword [0x04000768] 	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x4000768	          0x8b4010	            mov eax, dword [rax + 0x10] 	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x400076b	            0x4898	                                    cdqe	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x400076d	        0x48c1e002	                              shl rax, 2	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x4000771	          0x4889c7	                            mov rdi, rax	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x4000774	      0xe800000000	                          call 0x4000779	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x4000779	        0x48894308	                mov qword [rbx + 8], rax	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x400077d	    0x488b1d000000	            mov rbx, qword [0x04000784] 	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x4000784	    0x488b05000000	            mov rax, qword [0x0400078b] 	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x400078b	          0x8b4010	            mov eax, dword [rax + 0x10] 	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x400078e	            0x4898	                                    cdqe	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x4000790	        0x48c1e002	                              shl rax, 2	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x4000794	          0x4889c7	                            mov rdi, rax	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x4000797	      0xe800000000	                          call 0x400079c	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x400079c	        0x48894308	                mov qword [rbx + 8], rax	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40007a0	    0x488b05000000	            mov rax, qword [0x040007a7] 	       490	display.c	FUNCTION_1	IF_5
0x40007a7	        0x488b5008	                mov rdx, qword [rax + 8]	       490	display.c	FUNCTION_1	IF_5
0x40007ab	    0x488b05000000	            mov rax, qword [0x040007b2] 	       490	display.c	FUNCTION_1	IF_5
0x40007b2	        0x488b4008	                mov rax, qword [rax + 8]	       490	display.c	FUNCTION_1	IF_5
0x40007b6	    0xc70000000000	                      mov dword [rax], 0	       490	display.c	FUNCTION_1	IF_5
0x40007bc	            0x8b00	                    mov eax, dword [rax]	       490	display.c	FUNCTION_1	IF_5
0x40007be	            0x8902	                    mov dword [rdx], eax	       490	display.c	FUNCTION_1	IF_5
0x40007c0	    0xc70500000000	               mov dword [0x040007ca], 1	       493	display.c	FUNCTION_1
0x40007ca	              0x90	                                     nop	       494	display.c	FUNCTION_1
0x40007cb	        0x4883c418	                           add rsp, 0x18	       494	display.c	FUNCTION_1
0x40007cf	              0x5b	                                 pop rbx	       494	display.c	FUNCTION_1
0x40007d0	              0x5d	                                 pop rbp	       494	display.c	FUNCTION_1
0x40007d1	              0xc3	                                     ret	       494	display.c	FUNCTION_1
_rl_move_vert	functions,0:WHILE,0:CALL,7:SWITCH,0:ELSE,1:DO,0:IF,3:FOR,2	62
0x40043a0	              0x55	                                push rbp	      2044	display.c	FUNCTION_6
0x40043a1	          0x4889e5	                            mov rbp, rsp	      2044	display.c	FUNCTION_6
0x40043a4	            0x4154	                                push r12	      2044	display.c	FUNCTION_6
0x40043a6	              0x53	                                push rbx	      2044	display.c	FUNCTION_6
0x40043a7	        0x4883ec10	                           sub rsp, 0x10	      2044	display.c	FUNCTION_6
0x40043ab	          0x897dec	             mov dword [rbp - 0x14], edi	      2044	display.c	FUNCTION_6
0x40043ae	    0x8b0500000000	            mov eax, dword [0x040043b4] 	      2047	display.c	FUNCTION_6	IF_1
0x40043b4	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2047	display.c	FUNCTION_6	IF_1
0x40043b7	     0xf84bb000000	                            je 0x4004478	      2047	display.c	FUNCTION_6	IF_1
0x40043bd	    0x8b0500000000	            mov eax, dword [0x040043c3] 	      2047	display.c	FUNCTION_6	IF_1
0x40043c3	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      2047	display.c	FUNCTION_6	IF_1
0x40043c6	     0xf8fac000000	                            jg 0x4004478	      2047	display.c	FUNCTION_6	IF_1
0x40043cc	    0x8b0500000000	            mov eax, dword [0x040043d2] 	      2050	display.c	FUNCTION_6	IF_2
0x40043d2	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2050	display.c	FUNCTION_6	IF_2
0x40043d5	            0x29c2	                            sub edx, eax	      2050	display.c	FUNCTION_6	IF_2
0x40043d7	          0x4189d4	                           mov r12d, edx	      2050	display.c	FUNCTION_6	IF_2
0x40043da	          0x4585e4	                         test r12d, r12d	      2050	display.c	FUNCTION_6	IF_2
0x40043dd	            0x7e48	                           jle 0x4004427	      2050	display.c	FUNCTION_6	IF_2
0x40043df	      0xbb00000000	                              mov ebx, 0	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x40043e4	            0xeb17	                           jmp 0x40043fd	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x40043e6	    0x488b05000000	            mov rax, qword [0x040043ed] 	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40043ed	          0x4889c6	                            mov rsi, rax	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40043f0	      0xbf0a000000	                            mov edi, 0xa	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40043f5	      0xe800000000	                          call 0x40043fa	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40043fa	          0x83c301	                              add ebx, 1	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x40043fd	          0x4439e3	                           cmp ebx, r12d	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4004400	            0x7ce4	                            jl 0x40043e6	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4004402	    0x488b05000000	            mov rax, qword [0x04004409] 	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4004409	      0xba00000000	                              mov edx, 0	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x400440e	      0xbe01000000	                              mov esi, 1	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4004413	          0x4889c7	                            mov rdi, rax	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4004416	      0xe800000000	                          call 0x400441b	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x400441b	    0xc70500000000	               mov dword [0x04004425], 0	      2059	display.c	FUNCTION_6	IF_2
0x4004425	            0xeb46	                           jmp 0x400446d	      2059	display.c	FUNCTION_6	IF_2
0x4004427	    0x488b05000000	            mov rax, qword [0x0400442e] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400442e	          0x4885c0	                           test rax, rax	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4004431	            0x743a	                            je 0x400446d	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4004433	    0x488b05000000	            mov rax, qword [0x0400443a] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400443a	           0xfb600	                   movzx eax, byte [rax]	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400443d	            0x84c0	                             test al, al	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400443f	            0x742c	                            je 0x400446d	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4004441	      0xbb00000000	                              mov ebx, 0	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4004446	            0xeb1c	                           jmp 0x4004464	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4004448	    0x488b05000000	            mov rax, qword [0x0400444f] 	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400444f	      0xba00000000	                              mov edx, 0	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4004454	      0xbe01000000	                              mov esi, 1	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4004459	          0x4889c7	                            mov rdi, rax	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400445c	      0xe800000000	                          call 0x4004461	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4004461	          0x83c301	                              add ebx, 1	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4004464	          0x4489e0	                           mov eax, r12d	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4004467	            0xf7d8	                                 neg eax	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4004469	            0x39d8	                            cmp eax, ebx	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400446b	            0x7fdb	                            jg 0x4004448	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400446d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2077	display.c	FUNCTION_6
0x4004470	    0x890500000000	            mov dword [0x04004476], eax 	      2077	display.c	FUNCTION_6
0x4004476	            0xeb01	                           jmp 0x4004479	      2077	display.c	FUNCTION_6
0x4004478	              0x90	                                     nop	      2048	display.c	FUNCTION_6	IF_1
0x4004479	        0x4883c410	                           add rsp, 0x10	      2078	display.c	FUNCTION_6
0x400447d	              0x5b	                                 pop rbx	      2078	display.c	FUNCTION_6
0x400447e	            0x415c	                                 pop r12	      2078	display.c	FUNCTION_6
0x4004480	              0x5d	                                 pop rbp	      2078	display.c	FUNCTION_6
0x4004481	              0xc3	                                     ret	      2078	display.c	FUNCTION_6
rl_save_prompt	functions,0:WHILE,0:CALL,0:SWITCH,0:ELSE,0:DO,0:IF,0:FOR,0	33
0x4004819	              0x55	                                push rbp	      2236	display.c	FUNCTION_11
0x400481a	          0x4889e5	                            mov rbp, rsp	      2236	display.c	FUNCTION_11
0x400481d	    0x488b05000000	            mov rax, qword [0x04004824] 	      2237	display.c	FUNCTION_11
0x4004824	    0x488905000000	            mov qword [0x0400482b], rax 	      2237	display.c	FUNCTION_11
0x400482b	    0x488b05000000	            mov rax, qword [0x04004832] 	      2238	display.c	FUNCTION_11
0x4004832	    0x488905000000	            mov qword [0x04004839], rax 	      2238	display.c	FUNCTION_11
0x4004839	    0x8b0500000000	            mov eax, dword [0x0400483f] 	      2239	display.c	FUNCTION_11
0x400483f	    0x890500000000	            mov dword [0x04004845], eax 	      2239	display.c	FUNCTION_11
0x4004845	    0x8b0500000000	            mov eax, dword [0x0400484b] 	      2240	display.c	FUNCTION_11
0x400484b	    0x890500000000	            mov dword [0x04004851], eax 	      2240	display.c	FUNCTION_11
0x4004851	    0x8b0500000000	            mov eax, dword [0x04004857] 	      2241	display.c	FUNCTION_11
0x4004857	    0x890500000000	            mov dword [0x0400485d], eax 	      2241	display.c	FUNCTION_11
0x400485d	    0x8b0500000000	            mov eax, dword [0x04004863] 	      2242	display.c	FUNCTION_11
0x4004863	    0x890500000000	            mov dword [0x04004869], eax 	      2242	display.c	FUNCTION_11
0x4004869	    0x8b0500000000	            mov eax, dword [0x0400486f] 	      2243	display.c	FUNCTION_11
0x400486f	    0x890500000000	            mov dword [0x04004875], eax 	      2243	display.c	FUNCTION_11
0x4004875	    0x8b0500000000	            mov eax, dword [0x0400487b] 	      2244	display.c	FUNCTION_11
0x400487b	    0x890500000000	            mov dword [0x04004881], eax 	      2244	display.c	FUNCTION_11
0x4004881	    0x48c705000000	               mov qword [0x0400488c], 0	      2246	display.c	FUNCTION_11
0x400488c	    0x488b05000000	            mov rax, qword [0x04004893] 	      2246	display.c	FUNCTION_11
0x4004893	    0x488905000000	            mov qword [0x0400489a], rax 	      2246	display.c	FUNCTION_11
0x400489a	    0xc70500000000	               mov dword [0x040048a4], 0	      2247	display.c	FUNCTION_11
0x40048a4	    0xc70500000000	               mov dword [0x040048ae], 0	      2248	display.c	FUNCTION_11
0x40048ae	    0x8b0500000000	            mov eax, dword [0x040048b4] 	      2248	display.c	FUNCTION_11
0x40048b4	    0x890500000000	            mov dword [0x040048ba], eax 	      2248	display.c	FUNCTION_11
0x40048ba	    0x8b0500000000	            mov eax, dword [0x040048c0] 	      2248	display.c	FUNCTION_11
0x40048c0	    0x890500000000	            mov dword [0x040048c6], eax 	      2248	display.c	FUNCTION_11
0x40048c6	    0xc70500000000	               mov dword [0x040048d0], 0	      2249	display.c	FUNCTION_11
0x40048d0	    0x8b0500000000	            mov eax, dword [0x040048d6] 	      2249	display.c	FUNCTION_11
0x40048d6	    0x890500000000	            mov dword [0x040048dc], eax 	      2249	display.c	FUNCTION_11
0x40048dc	              0x90	                                     nop	      2250	display.c	FUNCTION_11
0x40048dd	              0x5d	                                 pop rbp	      2250	display.c	FUNCTION_11
0x40048de	              0xc3	                                     ret	      2250	display.c	FUNCTION_11
_rl_clean_up_for_exit	functions,0:WHILE,0:CALL,3:SWITCH,0:ELSE,0:DO,0:IF,1:FOR,0	18
0x40051d6	              0x55	                                push rbp	      2566	display.c	FUNCTION_22
0x40051d7	          0x4889e5	                            mov rbp, rsp	      2566	display.c	FUNCTION_22
0x40051da	    0x8b0500000000	            mov eax, dword [0x040051e0] 	      2567	display.c	FUNCTION_22	IF_1
0x40051e0	            0x85c0	                           test eax, eax	      2567	display.c	FUNCTION_22	IF_1
0x40051e2	            0x7435	                            je 0x4005219	      2567	display.c	FUNCTION_22	IF_1
0x40051e4	    0x8b0500000000	            mov eax, dword [0x040051ea] 	      2569	display.c	FUNCTION_22	IF_1	CALL_1
0x40051ea	            0x89c7	                            mov edi, eax	      2569	display.c	FUNCTION_22	IF_1	CALL_1
0x40051ec	      0xe800000000	                          call 0x40051f1	      2569	display.c	FUNCTION_22	IF_1	CALL_1
0x40051f1	    0xc70500000000	               mov dword [0x040051fb], 0	      2570	display.c	FUNCTION_22	IF_1
0x40051fb	    0x488b05000000	            mov rax, qword [0x04005202] 	      2571	display.c	FUNCTION_22	IF_1	CALL_2
0x4005202	          0x4889c7	                            mov rdi, rax	      2571	display.c	FUNCTION_22	IF_1	CALL_2
0x4005205	      0xe800000000	                          call 0x400520a	      2571	display.c	FUNCTION_22	IF_1	CALL_2
0x400520a	      0xbe00000000	                              mov esi, 0	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x400520f	      0xbf01000000	                              mov edi, 1	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x4005214	      0xe800000000	                          call 0x4005219	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x4005219	              0x90	                                     nop	      2574	display.c	FUNCTION_22
0x400521a	              0x5d	                                 pop rbp	      2574	display.c	FUNCTION_22
0x400521b	              0xc3	                                     ret	      2574	display.c	FUNCTION_22
delete_chars	functions,0:WHILE,1:CALL,3:SWITCH,0:ELSE,1:DO,0:IF,3:FOR,0	50
0x4004dd0	              0x55	                                push rbp	      2425	display.c	FUNCTION_18
0x4004dd1	          0x4889e5	                            mov rbp, rsp	      2425	display.c	FUNCTION_18
0x4004dd4	        0x4883ec20	                           sub rsp, 0x20	      2425	display.c	FUNCTION_18
0x4004dd8	          0x897dec	             mov dword [rbp - 0x14], edi	      2425	display.c	FUNCTION_18
0x4004ddb	    0x8b0500000000	            mov eax, dword [0x04004de1] 	      2426	display.c	FUNCTION_18	IF_1
0x4004de1	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      2426	display.c	FUNCTION_18	IF_1
0x4004de4	     0xf8f91000000	                            jg 0x4004e7b	      2426	display.c	FUNCTION_18	IF_1
0x4004dea	    0x488b05000000	            mov rax, qword [0x04004df1] 	      2430	display.c	FUNCTION_18	IF_2
0x4004df1	          0x4885c0	                           test rax, rax	      2430	display.c	FUNCTION_18	IF_2
0x4004df4	            0x7441	                            je 0x4004e37	      2430	display.c	FUNCTION_18	IF_2
0x4004df6	    0x488b05000000	            mov rax, qword [0x04004dfd] 	      2430	display.c	FUNCTION_18	IF_2
0x4004dfd	           0xfb600	                   movzx eax, byte [rax]	      2430	display.c	FUNCTION_18	IF_2
0x4004e00	            0x84c0	                             test al, al	      2430	display.c	FUNCTION_18	IF_2
0x4004e02	            0x7433	                            je 0x4004e37	      2430	display.c	FUNCTION_18	IF_2
0x4004e04	    0x488b05000000	            mov rax, qword [0x04004e0b] 	      2433	display.c	FUNCTION_18	IF_2	CALL_1
0x4004e0b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2433	display.c	FUNCTION_18	IF_2	CALL_1
0x4004e0e	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2433	display.c	FUNCTION_18	IF_2	CALL_1
0x4004e11	            0x89ce	                            mov esi, ecx	      2433	display.c	FUNCTION_18	IF_2	CALL_1
0x4004e13	          0x4889c7	                            mov rdi, rax	      2433	display.c	FUNCTION_18	IF_2	CALL_1
0x4004e16	      0xe800000000	                          call 0x4004e1b	      2433	display.c	FUNCTION_18	IF_2	CALL_1
0x4004e1b	        0x488945f8	                mov qword [rbp - 8], rax	      2433	display.c	FUNCTION_18	IF_2	CALL_1
0x4004e1f	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2434	display.c	FUNCTION_18	IF_2	CALL_2
0x4004e22	        0x488b45f8	                mov rax, qword [rbp - 8]	      2434	display.c	FUNCTION_18	IF_2	CALL_2
0x4004e26	      0xba00000000	                              mov edx, 0	      2434	display.c	FUNCTION_18	IF_2	CALL_2
0x4004e2b	            0x89ce	                            mov esi, ecx	      2434	display.c	FUNCTION_18	IF_2	CALL_2
0x4004e2d	          0x4889c7	                            mov rdi, rax	      2434	display.c	FUNCTION_18	IF_2	CALL_2
0x4004e30	      0xe800000000	                          call 0x4004e35	      2434	display.c	FUNCTION_18	IF_2	CALL_2
0x4004e35	            0xeb45	                           jmp 0x4004e7c	      2431	display.c	FUNCTION_18	IF_2
0x4004e37	    0x488b05000000	            mov rax, qword [0x04004e3e] 	      2438	display.c	FUNCTION_18	ELSE_1	IF_3
0x4004e3e	          0x4885c0	                           test rax, rax	      2438	display.c	FUNCTION_18	ELSE_1	IF_3
0x4004e41	            0x7439	                            je 0x4004e7c	      2438	display.c	FUNCTION_18	ELSE_1	IF_3
0x4004e43	    0x488b05000000	            mov rax, qword [0x04004e4a] 	      2438	display.c	FUNCTION_18	ELSE_1	IF_3
0x4004e4a	           0xfb600	                   movzx eax, byte [rax]	      2438	display.c	FUNCTION_18	ELSE_1	IF_3
0x4004e4d	            0x84c0	                             test al, al	      2438	display.c	FUNCTION_18	ELSE_1	IF_3
0x4004e4f	            0x742b	                            je 0x4004e7c	      2438	display.c	FUNCTION_18	ELSE_1	IF_3
0x4004e51	            0xeb19	                           jmp 0x4004e6c	      2439	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e53	    0x488b05000000	            mov rax, qword [0x04004e5a] 	      2440	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e5a	      0xba00000000	                              mov edx, 0	      2440	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e5f	      0xbe01000000	                              mov esi, 1	      2440	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e64	          0x4889c7	                            mov rdi, rax	      2440	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e67	      0xe800000000	                          call 0x4004e6c	      2440	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e6c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2439	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e6f	          0x8d50ff	                      lea edx, [rax - 1]	      2439	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e72	          0x8955ec	             mov dword [rbp - 0x14], edx	      2439	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e75	            0x85c0	                           test eax, eax	      2439	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e77	            0x75da	                           jne 0x4004e53	      2439	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e79	            0xeb01	                           jmp 0x4004e7c	      2439	display.c	FUNCTION_18	ELSE_1	IF_3	WHILE_1
0x4004e7b	              0x90	                                     nop	      2427	display.c	FUNCTION_18	IF_1
0x4004e7c	              0xc9	                                   leave	      2443	display.c	FUNCTION_18
0x4004e7d	              0xc3	                                     ret	      2443	display.c	FUNCTION_18
_rl_erase_at_end_of_line	functions,0:WHILE,0:CALL,3:SWITCH,0:ELSE,0:DO,0:IF,0:FOR,2	42
0x4004b26	              0x55	                                push rbp	      2316	display.c	FUNCTION_14
0x4004b27	          0x4889e5	                            mov rbp, rsp	      2316	display.c	FUNCTION_14
0x4004b2a	              0x53	                                push rbx	      2316	display.c	FUNCTION_14
0x4004b2b	        0x4883ec18	                           sub rsp, 0x18	      2316	display.c	FUNCTION_14
0x4004b2f	          0x897dec	             mov dword [rbp - 0x14], edi	      2316	display.c	FUNCTION_14
0x4004b32	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2319	display.c	FUNCTION_14	CALL_1
0x4004b35	            0x89c7	                            mov edi, eax	      2319	display.c	FUNCTION_14	CALL_1
0x4004b37	      0xe800000000	                          call 0x4004b3c	      2319	display.c	FUNCTION_14	CALL_1
0x4004b3c	      0xbb00000000	                              mov ebx, 0	      2320	display.c	FUNCTION_14	FOR_1
0x4004b41	            0xeb17	                           jmp 0x4004b5a	      2320	display.c	FUNCTION_14	FOR_1
0x4004b43	    0x488b05000000	            mov rax, qword [0x04004b4a] 	      2321	display.c	FUNCTION_14	CALL_2
0x4004b4a	          0x4889c6	                            mov rsi, rax	      2321	display.c	FUNCTION_14	CALL_2
0x4004b4d	      0xbf20000000	                           mov edi, 0x20	      2321	display.c	FUNCTION_14	CALL_2
0x4004b52	      0xe800000000	                          call 0x4004b57	      2321	display.c	FUNCTION_14	CALL_2
0x4004b57	          0x83c301	                              add ebx, 1	      2320	display.c	FUNCTION_14	FOR_1
0x4004b5a	          0x3b5dec	             cmp ebx, dword [rbp - 0x14]	      2320	display.c	FUNCTION_14	FOR_1
0x4004b5d	            0x7ce4	                            jl 0x4004b43	      2320	display.c	FUNCTION_14	FOR_1
0x4004b5f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2322	display.c	FUNCTION_14	CALL_3
0x4004b62	            0x89c7	                            mov edi, eax	      2322	display.c	FUNCTION_14	CALL_3
0x4004b64	      0xe800000000	                          call 0x4004b69	      2322	display.c	FUNCTION_14	CALL_3
0x4004b69	      0xbb00000000	                              mov ebx, 0	      2323	display.c	FUNCTION_14	FOR_2
0x4004b6e	            0xeb2a	                           jmp 0x4004b9a	      2323	display.c	FUNCTION_14	FOR_2
0x4004b70	    0x488b05000000	            mov rax, qword [0x04004b77] 	      2324	display.c	FUNCTION_14	FOR_2
0x4004b77	          0x488b10	                    mov rdx, qword [rax]	      2324	display.c	FUNCTION_14	FOR_2
0x4004b7a	    0x8b0500000000	            mov eax, dword [0x04004b80] 	      2324	display.c	FUNCTION_14	FOR_2
0x4004b80	          0x83e801	                              sub eax, 1	      2324	display.c	FUNCTION_14	FOR_2
0x4004b83	    0x890500000000	            mov dword [0x04004b89], eax 	      2324	display.c	FUNCTION_14	FOR_2
0x4004b89	    0x8b0500000000	            mov eax, dword [0x04004b8f] 	      2324	display.c	FUNCTION_14	FOR_2
0x4004b8f	            0x4898	                                    cdqe	      2324	display.c	FUNCTION_14	FOR_2
0x4004b91	          0x4801d0	                            add rax, rdx	      2324	display.c	FUNCTION_14	FOR_2
0x4004b94	          0xc60000	                       mov byte [rax], 0	      2324	display.c	FUNCTION_14	FOR_2
0x4004b97	          0x83c301	                              add ebx, 1	      2323	display.c	FUNCTION_14	FOR_2
0x4004b9a	          0x3b5dec	             cmp ebx, dword [rbp - 0x14]	      2323	display.c	FUNCTION_14	FOR_2
0x4004b9d	            0x7cd1	                            jl 0x4004b70	      2323	display.c	FUNCTION_14	FOR_2
0x4004b9f	    0x8b0500000000	            mov eax, dword [0x04004ba5] 	      2325	display.c	FUNCTION_14
0x4004ba5	          0x83c001	                              add eax, 1	      2325	display.c	FUNCTION_14
0x4004ba8	    0x890500000000	            mov dword [0x04004bae], eax 	      2325	display.c	FUNCTION_14
0x4004bae	              0x90	                                     nop	      2326	display.c	FUNCTION_14
0x4004baf	        0x4883c418	                           add rsp, 0x18	      2326	display.c	FUNCTION_14
0x4004bb3	              0x5b	                                 pop rbx	      2326	display.c	FUNCTION_14
0x4004bb4	              0x5d	                                 pop rbp	      2326	display.c	FUNCTION_14
0x4004bb5	              0xc3	                                     ret	      2326	display.c	FUNCTION_14
_rl_update_final	functions,0:WHILE,0:CALL,6:SWITCH,0:ELSE,0:DO,0:IF,2:FOR,0	98
0x4004e7e	              0x55	                                push rbp	      2447	display.c	FUNCTION_19
0x4004e7f	          0x4889e5	                            mov rbp, rsp	      2447	display.c	FUNCTION_19
0x4004e82	        0x4883ec10	                           sub rsp, 0x10	      2447	display.c	FUNCTION_19
0x4004e86	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2450	display.c	FUNCTION_19
0x4004e8d	    0x8b0500000000	            mov eax, dword [0x04004e93] 	      2453	display.c	FUNCTION_19	IF_1
0x4004e93	            0x85c0	                           test eax, eax	      2453	display.c	FUNCTION_19	IF_1
0x4004e95	            0x7453	                            je 0x4004eea	      2453	display.c	FUNCTION_19	IF_1
0x4004e97	    0x8b0500000000	            mov eax, dword [0x04004e9d] 	      2453	display.c	FUNCTION_19	IF_1
0x4004e9d	            0x85c0	                           test eax, eax	      2453	display.c	FUNCTION_19	IF_1
0x4004e9f	            0x7549	                           jne 0x4004eea	      2453	display.c	FUNCTION_19	IF_1
0x4004ea1	    0x488b05000000	            mov rax, qword [0x04004ea8] 	      2454	display.c	FUNCTION_19	IF_1
0x4004ea8	          0x488b10	                    mov rdx, qword [rax]	      2454	display.c	FUNCTION_19	IF_1
0x4004eab	    0x488b05000000	            mov rax, qword [0x04004eb2] 	      2454	display.c	FUNCTION_19	IF_1
0x4004eb2	        0x488b4008	                mov rax, qword [rax + 8]	      2454	display.c	FUNCTION_19	IF_1
0x4004eb6	    0x8b0d00000000	            mov ecx, dword [0x04004ebc] 	      2454	display.c	FUNCTION_19	IF_1
0x4004ebc	          0x4863c9	                         movsxd rcx, ecx	      2454	display.c	FUNCTION_19	IF_1
0x4004ebf	        0x48c1e102	                              shl rcx, 2	      2454	display.c	FUNCTION_19	IF_1
0x4004ec3	          0x4801c8	                            add rax, rcx	      2454	display.c	FUNCTION_19	IF_1
0x4004ec6	            0x8b00	                    mov eax, dword [rax]	      2454	display.c	FUNCTION_19	IF_1
0x4004ec8	            0x4898	                                    cdqe	      2454	display.c	FUNCTION_19	IF_1
0x4004eca	          0x4801d0	                            add rax, rdx	      2454	display.c	FUNCTION_19	IF_1
0x4004ecd	           0xfb600	                   movzx eax, byte [rax]	      2454	display.c	FUNCTION_19	IF_1
0x4004ed0	            0x84c0	                             test al, al	      2453	display.c	FUNCTION_19	IF_1
0x4004ed2	            0x7516	                           jne 0x4004eea	      2453	display.c	FUNCTION_19	IF_1
0x4004ed4	    0x8b0500000000	            mov eax, dword [0x04004eda] 	      2456	display.c	FUNCTION_19	IF_1
0x4004eda	          0x83e801	                              sub eax, 1	      2456	display.c	FUNCTION_19	IF_1
0x4004edd	    0x890500000000	            mov dword [0x04004ee3], eax 	      2456	display.c	FUNCTION_19	IF_1
0x4004ee3	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      2457	display.c	FUNCTION_19	IF_1
0x4004eea	    0x8b0500000000	            mov eax, dword [0x04004ef0] 	      2459	display.c	FUNCTION_19	CALL_1
0x4004ef0	            0x89c7	                            mov edi, eax	      2459	display.c	FUNCTION_19	CALL_1
0x4004ef2	      0xe800000000	                          call 0x4004ef7	      2459	display.c	FUNCTION_19	CALL_1
0x4004ef7	        0x837df400	                cmp dword [rbp - 0xc], 0	      2461	display.c	FUNCTION_19	IF_2
0x4004efb	     0xf84e1000000	                            je 0x4004fe2	      2461	display.c	FUNCTION_19	IF_2
0x4004f01	    0x8b0500000000	            mov eax, dword [0x04004f07] 	      2461	display.c	FUNCTION_19	IF_2
0x4004f07	            0x85c0	                           test eax, eax	      2461	display.c	FUNCTION_19	IF_2
0x4004f09	     0xf84d3000000	                            je 0x4004fe2	      2461	display.c	FUNCTION_19	IF_2
0x4004f0f	    0x488b05000000	            mov rax, qword [0x04004f16] 	      2461	display.c	FUNCTION_19	IF_2
0x4004f16	        0x488b4008	                mov rax, qword [rax + 8]	      2461	display.c	FUNCTION_19	IF_2
0x4004f1a	    0x8b1500000000	            mov edx, dword [0x04004f20] 	      2461	display.c	FUNCTION_19	IF_2
0x4004f20	          0x4863d2	                         movsxd rdx, edx	      2461	display.c	FUNCTION_19	IF_2
0x4004f23	        0x4883c201	                              add rdx, 1	      2461	display.c	FUNCTION_19	IF_2
0x4004f27	        0x48c1e202	                              shl rdx, 2	      2461	display.c	FUNCTION_19	IF_2
0x4004f2b	          0x4801d0	                            add rax, rdx	      2461	display.c	FUNCTION_19	IF_2
0x4004f2e	            0x8b10	                    mov edx, dword [rax]	      2461	display.c	FUNCTION_19	IF_2
0x4004f30	    0x488b05000000	            mov rax, qword [0x04004f37] 	      2461	display.c	FUNCTION_19	IF_2
0x4004f37	        0x488b4008	                mov rax, qword [rax + 8]	      2461	display.c	FUNCTION_19	IF_2
0x4004f3b	    0x8b0d00000000	            mov ecx, dword [0x04004f41] 	      2461	display.c	FUNCTION_19	IF_2
0x4004f41	          0x4863c9	                         movsxd rcx, ecx	      2461	display.c	FUNCTION_19	IF_2
0x4004f44	        0x48c1e102	                              shl rcx, 2	      2461	display.c	FUNCTION_19	IF_2
0x4004f48	          0x4801c8	                            add rax, rcx	      2461	display.c	FUNCTION_19	IF_2
0x4004f4b	            0x8b00	                    mov eax, dword [rax]	      2461	display.c	FUNCTION_19	IF_2
0x4004f4d	            0x29c2	                            sub edx, eax	      2461	display.c	FUNCTION_19	IF_2
0x4004f4f	    0x8b0500000000	            mov eax, dword [0x04004f55] 	      2461	display.c	FUNCTION_19	IF_2
0x4004f55	            0x39c2	                            cmp edx, eax	      2461	display.c	FUNCTION_19	IF_2
0x4004f57	     0xf8585000000	                           jne 0x4004fe2	      2461	display.c	FUNCTION_19	IF_2
0x4004f5d	    0x488b05000000	            mov rax, qword [0x04004f64] 	      2465	display.c	FUNCTION_19	IF_2
0x4004f64	          0x488b10	                    mov rdx, qword [rax]	      2465	display.c	FUNCTION_19	IF_2
0x4004f67	    0x488b05000000	            mov rax, qword [0x04004f6e] 	      2465	display.c	FUNCTION_19	IF_2
0x4004f6e	        0x488b4008	                mov rax, qword [rax + 8]	      2465	display.c	FUNCTION_19	IF_2
0x4004f72	    0x8b0d00000000	            mov ecx, dword [0x04004f78] 	      2465	display.c	FUNCTION_19	IF_2
0x4004f78	          0x4863c9	                         movsxd rcx, ecx	      2465	display.c	FUNCTION_19	IF_2
0x4004f7b	        0x48c1e102	                              shl rcx, 2	      2465	display.c	FUNCTION_19	IF_2
0x4004f7f	          0x4801c8	                            add rax, rcx	      2465	display.c	FUNCTION_19	IF_2
0x4004f82	            0x8b00	                    mov eax, dword [rax]	      2465	display.c	FUNCTION_19	IF_2
0x4004f84	            0x4898	                                    cdqe	      2465	display.c	FUNCTION_19	IF_2
0x4004f86	          0x4801d0	                            add rax, rdx	      2465	display.c	FUNCTION_19	IF_2
0x4004f89	        0x488945f8	                mov qword [rbp - 8], rax	      2465	display.c	FUNCTION_19	IF_2
0x4004f8d	    0xc70500000000	     mov dword [0x04004f97], 0xffffffff 	      2466	display.c	FUNCTION_19	IF_2
0x4004f97	    0x8b0500000000	            mov eax, dword [0x04004f9d] 	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x4004f9d	          0x8d50ff	                      lea edx, [rax - 1]	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x4004fa0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x4004fa4	          0x4889c6	                            mov rsi, rax	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x4004fa7	            0x89d7	                            mov edi, edx	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x4004fa9	      0xe800000000	                          call 0x4004fae	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x4004fae	      0xbf00000000	                              mov edi, 0	      2468	display.c	FUNCTION_19	IF_2	CALL_3
0x4004fb3	      0xe800000000	                          call 0x4004fb8	      2468	display.c	FUNCTION_19	IF_2	CALL_3
0x4004fb8	    0x488b15000000	            mov rdx, qword [0x04004fbf] 	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fbf	    0x8b0500000000	            mov eax, dword [0x04004fc5] 	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fc5	            0x4898	                                    cdqe	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fc7	        0x488d48ff	                      lea rcx, [rax - 1]	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fcb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fcf	          0x4801c8	                            add rax, rcx	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fd2	           0xfb600	                   movzx eax, byte [rax]	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fd5	           0xfbec0	                           movsx eax, al	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fd8	          0x4889d6	                            mov rsi, rdx	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fdb	            0x89c7	                            mov edi, eax	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fdd	      0xe800000000	                          call 0x4004fe2	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004fe2	    0xc70500000000	               mov dword [0x04004fec], 0	      2471	display.c	FUNCTION_19
0x4004fec	      0xe800000000	                          call 0x4004ff1	      2472	display.c	FUNCTION_19	CALL_5
0x4004ff1	    0x488b05000000	            mov rax, qword [0x04004ff8] 	      2473	display.c	FUNCTION_19	CALL_6
0x4004ff8	          0x4889c7	                            mov rdi, rax	      2473	display.c	FUNCTION_19	CALL_6
0x4004ffb	      0xe800000000	                          call 0x4005000	      2473	display.c	FUNCTION_19	CALL_6
0x4005000	    0x8b0500000000	            mov eax, dword [0x04005006] 	      2474	display.c	FUNCTION_19
0x4005006	          0x83c001	                              add eax, 1	      2474	display.c	FUNCTION_19
0x4005009	    0x890500000000	            mov dword [0x0400500f], eax 	      2474	display.c	FUNCTION_19
0x400500f	              0x90	                                     nop	      2475	display.c	FUNCTION_19
0x4005010	              0xc9	                                   leave	      2475	display.c	FUNCTION_19
0x4005011	              0xc3	                                     ret	      2475	display.c	FUNCTION_19
cr	functions,0:WHILE,0:CALL,2:SWITCH,0:ELSE,0:DO,0:IF,1:FOR,0	14
0x4005012	              0x55	                                push rbp	      2480	display.c	FUNCTION_20
0x4005013	          0x4889e5	                            mov rbp, rsp	      2480	display.c	FUNCTION_20
0x4005016	    0x488b05000000	            mov rax, qword [0x0400501d] 	      2481	display.c	FUNCTION_20	IF_1
0x400501d	          0x4885c0	                           test rax, rax	      2481	display.c	FUNCTION_20	IF_1
0x4005020	            0x7423	                            je 0x4005045	      2481	display.c	FUNCTION_20	IF_1
0x4005022	    0x488b05000000	            mov rax, qword [0x04005029] 	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005029	      0xba00000000	                              mov edx, 0	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x400502e	      0xbe01000000	                              mov esi, 1	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005033	          0x4889c7	                            mov rdi, rax	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005036	      0xe800000000	                          call 0x400503b	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x400503b	    0xc70500000000	               mov dword [0x04005045], 0	      2488	display.c	FUNCTION_20	IF_1
0x4005045	              0x90	                                     nop	      2490	display.c	FUNCTION_20
0x4005046	              0x5d	                                 pop rbp	      2490	display.c	FUNCTION_20
0x4005047	              0xc3	                                     ret	      2490	display.c	FUNCTION_20
_rl_make_prompt_for_search	functions,0:WHILE,0:CALL,8:SWITCH,0:ELSE,1:DO,0:IF,3:FOR,0	92
0x40049db	              0x55	                                push rbp	      2277	display.c	FUNCTION_13
0x40049dc	          0x4889e5	                            mov rbp, rsp	      2277	display.c	FUNCTION_13
0x40049df	        0x4883ec30	                           sub rsp, 0x30	      2277	display.c	FUNCTION_13
0x40049e3	          0x897ddc	             mov dword [rbp - 0x24], edi	      2277	display.c	FUNCTION_13
0x40049e6	      0xe800000000	                          call 0x40049eb	      2281	display.c	FUNCTION_13	CALL_1
0x40049eb	    0x488b05000000	            mov rax, qword [0x040049f2] 	      2286	display.c	FUNCTION_13	CALL_2
0x40049f2	          0x4885c0	                           test rax, rax	      2286	display.c	FUNCTION_13	CALL_2
0x40049f5	            0x7416	                            je 0x4004a0d	      2286	display.c	FUNCTION_13	CALL_2
0x40049f7	    0x488b05000000	            mov rax, qword [0x040049fe] 	      2286	display.c	FUNCTION_13	CALL_2
0x40049fe	      0xbe0a000000	                            mov esi, 0xa	      2286	display.c	FUNCTION_13	CALL_2
0x4004a03	          0x4889c7	                            mov rdi, rax	      2286	display.c	FUNCTION_13	CALL_2
0x4004a06	      0xe800000000	                          call 0x4004a0b	      2286	display.c	FUNCTION_13	CALL_2
0x4004a0b	            0xeb05	                           jmp 0x4004a12	      2286	display.c	FUNCTION_13	CALL_2
0x4004a0d	      0xb800000000	                              mov eax, 0	      2286	display.c	FUNCTION_13	CALL_2
0x4004a12	        0x488945f8	                mov qword [rbp - 8], rax	      2286	display.c	FUNCTION_13	CALL_2
0x4004a16	      0x48837df800	                  cmp qword [rbp - 8], 0	      2287	display.c	FUNCTION_13	IF_1
0x4004a1b	     0xf858a000000	                           jne 0x4004aab	      2287	display.c	FUNCTION_13	IF_1
0x4004a21	    0x488b05000000	            mov rax, qword [0x04004a28] 	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a28	          0x4885c0	                           test rax, rax	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a2b	            0x741f	                            je 0x4004a4c	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a2d	    0x488b05000000	            mov rax, qword [0x04004a34] 	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a34	           0xfb600	                   movzx eax, byte [rax]	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a37	            0x84c0	                             test al, al	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a39	            0x7411	                            je 0x4004a4c	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a3b	    0x488b05000000	            mov rax, qword [0x04004a42] 	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a42	          0x4889c7	                            mov rdi, rax	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a45	      0xe800000000	                          call 0x4004a4a	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a4a	            0xeb05	                           jmp 0x4004a51	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a4c	      0xb800000000	                              mov eax, 0	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a51	          0x8945ec	             mov dword [rbp - 0x14], eax	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4004a54	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4004a57	          0x83c002	                              add eax, 2	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4004a5a	            0x4898	                                    cdqe	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4004a5c	          0x4889c7	                            mov rdi, rax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4004a5f	      0xe800000000	                          call 0x4004a64	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4004a64	        0x488945f0	             mov qword [rbp - 0x10], rax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4004a68	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2291	display.c	FUNCTION_13	IF_1	IF_2
0x4004a6c	            0x7416	                            je 0x4004a84	      2291	display.c	FUNCTION_13	IF_1	IF_2
0x4004a6e	    0x488b15000000	            mov rdx, qword [0x04004a75] 	      2292	display.c	FUNCTION_13	IF_1	CALL_5
0x4004a75	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2292	display.c	FUNCTION_13	IF_1	CALL_5
0x4004a79	          0x4889d6	                            mov rsi, rdx	      2292	display.c	FUNCTION_13	IF_1	CALL_5
0x4004a7c	          0x4889c7	                            mov rdi, rax	      2292	display.c	FUNCTION_13	IF_1	CALL_5
0x4004a7f	      0xe800000000	                          call 0x4004a84	      2292	display.c	FUNCTION_13	IF_1	CALL_5
0x4004a84	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2293	display.c	FUNCTION_13	IF_1
0x4004a87	          0x4863d0	                         movsxd rdx, eax	      2293	display.c	FUNCTION_13	IF_1
0x4004a8a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2293	display.c	FUNCTION_13	IF_1
0x4004a8e	          0x4801d0	                            add rax, rdx	      2293	display.c	FUNCTION_13	IF_1
0x4004a91	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2293	display.c	FUNCTION_13	IF_1
0x4004a94	            0x8810	                      mov byte [rax], dl	      2293	display.c	FUNCTION_13	IF_1
0x4004a96	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2294	display.c	FUNCTION_13	IF_1
0x4004a99	            0x4898	                                    cdqe	      2294	display.c	FUNCTION_13	IF_1
0x4004a9b	        0x488d5001	                      lea rdx, [rax + 1]	      2294	display.c	FUNCTION_13	IF_1
0x4004a9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2294	display.c	FUNCTION_13	IF_1
0x4004aa3	          0x4801d0	                            add rax, rdx	      2294	display.c	FUNCTION_13	IF_1
0x4004aa6	          0xc60000	                       mov byte [rax], 0	      2294	display.c	FUNCTION_13	IF_1
0x4004aa9	            0xeb66	                           jmp 0x4004b11	      2294	display.c	FUNCTION_13	IF_1
0x4004aab	      0x488345f801	                  add qword [rbp - 8], 1	      2298	display.c	FUNCTION_13	ELSE_1
0x4004ab0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x4004ab4	          0x4889c7	                            mov rdi, rax	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x4004ab7	      0xe800000000	                          call 0x4004abc	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x4004abc	          0x8945ec	             mov dword [rbp - 0x14], eax	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x4004abf	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4004ac2	          0x83c002	                              add eax, 2	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4004ac5	            0x4898	                                    cdqe	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4004ac7	          0x4889c7	                            mov rdi, rax	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4004aca	      0xe800000000	                          call 0x4004acf	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4004acf	        0x488945f0	             mov qword [rbp - 0x10], rax	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4004ad3	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2301	display.c	FUNCTION_13	ELSE_1	IF_3
0x4004ad7	            0x7413	                            je 0x4004aec	      2301	display.c	FUNCTION_13	ELSE_1	IF_3
0x4004ad9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2302	display.c	FUNCTION_13	ELSE_1	CALL_8
0x4004add	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2302	display.c	FUNCTION_13	ELSE_1	CALL_8
0x4004ae1	          0x4889d6	                            mov rsi, rdx	      2302	display.c	FUNCTION_13	ELSE_1	CALL_8
0x4004ae4	          0x4889c7	                            mov rdi, rax	      2302	display.c	FUNCTION_13	ELSE_1	CALL_8
0x4004ae7	      0xe800000000	                          call 0x4004aec	      2302	display.c	FUNCTION_13	ELSE_1	CALL_8
0x4004aec	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2303	display.c	FUNCTION_13	ELSE_1
0x4004aef	          0x4863d0	                         movsxd rdx, eax	      2303	display.c	FUNCTION_13	ELSE_1
0x4004af2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2303	display.c	FUNCTION_13	ELSE_1
0x4004af6	          0x4801d0	                            add rax, rdx	      2303	display.c	FUNCTION_13	ELSE_1
0x4004af9	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2303	display.c	FUNCTION_13	ELSE_1
0x4004afc	            0x8810	                      mov byte [rax], dl	      2303	display.c	FUNCTION_13	ELSE_1
0x4004afe	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2304	display.c	FUNCTION_13	ELSE_1
0x4004b01	            0x4898	                                    cdqe	      2304	display.c	FUNCTION_13	ELSE_1
0x4004b03	        0x488d5001	                      lea rdx, [rax + 1]	      2304	display.c	FUNCTION_13	ELSE_1
0x4004b07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2304	display.c	FUNCTION_13	ELSE_1
0x4004b0b	          0x4801d0	                            add rax, rdx	      2304	display.c	FUNCTION_13	ELSE_1
0x4004b0e	          0xc60000	                       mov byte [rax], 0	      2304	display.c	FUNCTION_13	ELSE_1
0x4004b11	    0x8b0500000000	            mov eax, dword [0x04004b17] 	      2308	display.c	FUNCTION_13
0x4004b17	          0x83c001	                              add eax, 1	      2308	display.c	FUNCTION_13
0x4004b1a	    0x890500000000	            mov dword [0x04004b20], eax 	      2308	display.c	FUNCTION_13
0x4004b20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2309	display.c	FUNCTION_13
0x4004b24	              0xc9	                                   leave	      2310	display.c	FUNCTION_13
0x4004b25	              0xc3	                                     ret	      2310	display.c	FUNCTION_13
rl_show_char	functions,0:WHILE,0:CALL,10:SWITCH,0:ELSE,0:DO,0:IF,3:FOR,0	84
0x4004482	              0x55	                                push rbp	      2085	display.c	FUNCTION_7
0x4004483	          0x4889e5	                            mov rbp, rsp	      2085	display.c	FUNCTION_7
0x4004486	        0x4883ec20	                           sub rsp, 0x20	      2085	display.c	FUNCTION_7
0x400448a	          0x897dec	             mov dword [rbp - 0x14], edi	      2085	display.c	FUNCTION_7
0x400448d	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2086	display.c	FUNCTION_7
0x4004494	        0x837dec7f	           cmp dword [rbp - 0x14], 0x7f 	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4004498	            0x7e3c	                           jle 0x40044d6	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x400449a	    0x817decff0000	           cmp dword [rbp - 0x14], 0xff 	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x40044a1	            0x7f33	                            jg 0x40044d6	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x40044a3	    0x8b0500000000	            mov eax, dword [0x040044a9] 	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x40044a9	            0x85c0	                           test eax, eax	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x40044ab	            0x7529	                           jne 0x40044d6	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x40044ad	    0x488b05000000	            mov rax, qword [0x040044b4] 	      2089	display.c	FUNCTION_7	IF_1	CALL_2
0x40044b4	          0x4889c1	                            mov rcx, rax	      2089	display.c	FUNCTION_7	IF_1	CALL_2
0x40044b7	      0xba02000000	                              mov edx, 2	      2089	display.c	FUNCTION_7	IF_1	CALL_2
0x40044bc	      0xbe01000000	                              mov esi, 1	      2089	display.c	FUNCTION_7	IF_1	CALL_2
0x40044c1	      0xbf00000000	                              mov edi, 0	      2089	display.c	FUNCTION_7	IF_1	CALL_2
0x40044c6	      0xe800000000	                          call 0x40044cb	      2089	display.c	FUNCTION_7	IF_1	CALL_2
0x40044cb	        0x8345fc02	                  add dword [rbp - 4], 2	      2090	display.c	FUNCTION_7	IF_1
0x40044cf	    0x8165ec7fffff	      and dword [rbp - 0x14], 0xffffff7f	      2091	display.c	FUNCTION_7	IF_1	CALL_3
0x40044d6	        0x837dec1f	           cmp dword [rbp - 0x14], 0x1f 	      2095	display.c	FUNCTION_7	IF_2	CALL_4
0x40044da	            0x7f12	                            jg 0x40044ee	      2095	display.c	FUNCTION_7	IF_2	CALL_4
0x40044dc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2095	display.c	FUNCTION_7	IF_2	CALL_4
0x40044df	      0x2580000000	                           and eax, 0x80	      2095	display.c	FUNCTION_7	IF_2	CALL_4
0x40044e4	            0x85c0	                           test eax, eax	      2095	display.c	FUNCTION_7	IF_2	CALL_4
0x40044e6	            0x7506	                           jne 0x40044ee	      2095	display.c	FUNCTION_7	IF_2	CALL_4
0x40044e8	        0x837dec09	               cmp dword [rbp - 0x14], 9	      2095	display.c	FUNCTION_7	IF_2	CALL_4
0x40044ec	            0x750a	                           jne 0x40044f8	      2095	display.c	FUNCTION_7	IF_2	CALL_4
0x40044ee	        0x837dec7f	           cmp dword [rbp - 0x14], 0x7f 	      2095	display.c	FUNCTION_7	IF_2	CALL_4
0x40044f2	     0xf858f000000	                           jne 0x4004587	      2095	display.c	FUNCTION_7	IF_2	CALL_4
0x40044f8	    0x488b05000000	            mov rax, qword [0x040044ff] 	      2100	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40044ff	          0x4889c1	                            mov rcx, rax	      2100	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4004502	      0xba02000000	                              mov edx, 2	      2100	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4004507	      0xbe01000000	                              mov esi, 1	      2100	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x400450c	      0xbf00000000	                              mov edi, 0	      2100	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4004511	      0xe800000000	                          call 0x4004516	      2100	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4004516	        0x8345fc02	                  add dword [rbp - 4], 2	      2101	display.c	FUNCTION_7	IF_2	IF_3
0x400451a	        0x837dec1f	           cmp dword [rbp - 0x14], 0x1f 	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400451e	            0x7f5f	                            jg 0x400457f	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004520	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004523	      0x2580000000	                           and eax, 0x80	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004528	            0x85c0	                           test eax, eax	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400452a	            0x7553	                           jne 0x400457f	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400452c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400452f	          0x83c840	                            or eax, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004532	           0xfb6c0	                           movzx eax, al	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004535	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004538	          0x83ca40	                            or edx, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400453b	            0x39d0	                            cmp eax, edx	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400453d	            0x7538	                           jne 0x4004577	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400453f	      0xe800000000	                          call 0x4004544	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004544	          0x488b00	                    mov rax, qword [rax]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004547	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400454a	          0x83ca40	                            or edx, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400454d	          0x4863d2	                         movsxd rdx, edx	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004550	          0x4801d2	                            add rdx, rdx	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004553	          0x4801d0	                            add rax, rdx	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004556	           0xfb700	                   movzx eax, word [rax]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004559	           0xfb7c0	                           movzx eax, ax	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400455c	      0x2500020000	                          and eax, 0x200	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004561	            0x85c0	                           test eax, eax	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004563	            0x7412	                            je 0x4004577	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004565	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004568	          0x83c840	                            or eax, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400456b	           0xfb6c0	                           movzx eax, al	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400456e	            0x89c7	                            mov edi, eax	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004570	      0xe800000000	                          call 0x4004575	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004575	            0xeb0d	                           jmp 0x4004584	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004577	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400457a	          0x83c840	                            or eax, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400457d	            0xeb05	                           jmp 0x4004584	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x400457f	      0xb83f000000	                           mov eax, 0x3f	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004584	          0x8945ec	             mov dword [rbp - 0x14], eax	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_8
0x4004587	    0x488b15000000	            mov rdx, qword [0x0400458e] 	      2105	display.c	FUNCTION_7	CALL_9
0x400458e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2105	display.c	FUNCTION_7	CALL_9
0x4004591	          0x4889d6	                            mov rsi, rdx	      2105	display.c	FUNCTION_7	CALL_9
0x4004594	            0x89c7	                            mov edi, eax	      2105	display.c	FUNCTION_7	CALL_9
0x4004596	      0xe800000000	                          call 0x400459b	      2105	display.c	FUNCTION_7	CALL_9
0x400459b	    0x488b05000000	            mov rax, qword [0x040045a2] 	      2106	display.c	FUNCTION_7	CALL_10
0x40045a2	          0x4889c7	                            mov rdi, rax	      2106	display.c	FUNCTION_7	CALL_10
0x40045a5	      0xe800000000	                          call 0x40045aa	      2106	display.c	FUNCTION_7	CALL_10
0x40045aa	          0x8b45fc	                mov eax, dword [rbp - 4]	      2107	display.c	FUNCTION_7
0x40045ad	              0xc9	                                   leave	      2108	display.c	FUNCTION_7
0x40045ae	              0xc3	                                     ret	      2108	display.c	FUNCTION_7
rl_reset_line_state	functions,0:WHILE,0:CALL,1:SWITCH,0:ELSE,0:DO,0:IF,0:FOR,0	14
0x40047de	              0x55	                                push rbp	      2226	display.c	FUNCTION_10
0x40047df	          0x4889e5	                            mov rbp, rsp	      2226	display.c	FUNCTION_10
0x40047e2	      0xe800000000	                          call 0x40047e7	      2227	display.c	FUNCTION_10	CALL_1
0x40047e7	    0x488b05000000	            mov rax, qword [0x040047ee] 	      2229	display.c	FUNCTION_10
0x40047ee	          0x4885c0	                           test rax, rax	      2229	display.c	FUNCTION_10
0x40047f1	            0x7409	                            je 0x40047fc	      2229	display.c	FUNCTION_10
0x40047f3	    0x488b05000000	            mov rax, qword [0x040047fa] 	      2229	display.c	FUNCTION_10
0x40047fa	            0xeb05	                           jmp 0x4004801	      2229	display.c	FUNCTION_10
0x40047fc	      0xb800000000	                              mov eax, 0	      2229	display.c	FUNCTION_10
0x4004801	    0x488905000000	            mov qword [0x04004808], rax 	      2229	display.c	FUNCTION_10
0x4004808	    0xc70500000000	               mov dword [0x04004812], 1	      2230	display.c	FUNCTION_10
0x4004812	      0xb800000000	                              mov eax, 0	      2231	display.c	FUNCTION_10
0x4004817	              0x5d	                                 pop rbp	      2232	display.c	FUNCTION_10
0x4004818	              0xc3	                                     ret	      2232	display.c	FUNCTION_10
rl_forced_update_display	functions,0:WHILE,1:CALL,1:SWITCH,0:ELSE,0:DO,0:IF,1:FOR,0	28
0x4003f9c	              0x55	                                push rbp	      1881	display.c	FUNCTION_5
0x4003f9d	          0x4889e5	                            mov rbp, rsp	      1881	display.c	FUNCTION_5
0x4003fa0	              0x53	                                push rbx	      1881	display.c	FUNCTION_5
0x4003fa1	        0x4883ec08	                              sub rsp, 8	      1881	display.c	FUNCTION_5
0x4003fa5	    0x488b05000000	            mov rax, qword [0x04003fac] 	      1884	display.c	FUNCTION_5	IF_1
0x4003fac	          0x488b00	                    mov rax, qword [rax]	      1884	display.c	FUNCTION_5	IF_1
0x4003faf	          0x4885c0	                           test rax, rax	      1884	display.c	FUNCTION_5	IF_1
0x4003fb2	            0x741d	                            je 0x4003fd1	      1884	display.c	FUNCTION_5	IF_1
0x4003fb4	    0x488b05000000	            mov rax, qword [0x04003fbb] 	      1886	display.c	FUNCTION_5	IF_1
0x4003fbb	          0x488b18	                    mov rbx, qword [rax]	      1886	display.c	FUNCTION_5	IF_1
0x4003fbe	            0xeb0a	                           jmp 0x4003fca	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4003fc0	          0x4889d8	                            mov rax, rbx	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4003fc3	        0x488d5801	                      lea rbx, [rax + 1]	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4003fc7	          0xc60000	                       mov byte [rax], 0	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4003fca	           0xfb603	                   movzx eax, byte [rbx]	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4003fcd	            0x84c0	                             test al, al	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4003fcf	            0x75ef	                           jne 0x4003fc0	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4003fd1	      0xe800000000	                          call 0x4003fd6	      1890	display.c	FUNCTION_5	CALL_1
0x4003fd6	    0x8b0500000000	            mov eax, dword [0x04003fdc] 	      1891	display.c	FUNCTION_5
0x4003fdc	          0x83c001	                              add eax, 1	      1891	display.c	FUNCTION_5
0x4003fdf	    0x890500000000	            mov dword [0x04003fe5], eax 	      1891	display.c	FUNCTION_5
0x4003fe5	    0x488b05000000	            mov rax, qword [0x04003fec] 	      1892	display.c	FUNCTION_5
0x4003fec	            0xffd0	                                call rax	      1892	display.c	FUNCTION_5
0x4003fee	      0xb800000000	                              mov eax, 0	      1893	display.c	FUNCTION_5
0x4003ff3	        0x4883c408	                              add rsp, 8	      1894	display.c	FUNCTION_5
0x4003ff7	              0x5b	                                 pop rbx	      1894	display.c	FUNCTION_5
0x4003ff8	              0x5d	                                 pop rbp	      1894	display.c	FUNCTION_5
0x4003ff9	              0xc3	                                     ret	      1894	display.c	FUNCTION_5
rl_on_new_line	functions,0:WHILE,0:CALL,0:SWITCH,0:ELSE,0:DO,0:IF,2:FOR,0	31
0x4003d3d	              0x55	                                push rbp	      1807	display.c	FUNCTION_3
0x4003d3e	          0x4889e5	                            mov rbp, rsp	      1807	display.c	FUNCTION_3
0x4003d41	    0x488b05000000	            mov rax, qword [0x04003d48] 	      1808	display.c	FUNCTION_3	IF_1
0x4003d48	          0x488b00	                    mov rax, qword [rax]	      1808	display.c	FUNCTION_3	IF_1
0x4003d4b	          0x4885c0	                           test rax, rax	      1808	display.c	FUNCTION_3	IF_1
0x4003d4e	            0x740d	                            je 0x4003d5d	      1808	display.c	FUNCTION_3	IF_1
0x4003d50	    0x488b05000000	            mov rax, qword [0x04003d57] 	      1809	display.c	FUNCTION_3	IF_1
0x4003d57	          0x488b00	                    mov rax, qword [rax]	      1809	display.c	FUNCTION_3	IF_1
0x4003d5a	          0xc60000	                       mov byte [rax], 0	      1809	display.c	FUNCTION_3	IF_1
0x4003d5d	    0xc70500000000	               mov dword [0x04003d67], 0	      1811	display.c	FUNCTION_3
0x4003d67	    0x8b0500000000	            mov eax, dword [0x04003d6d] 	      1811	display.c	FUNCTION_3
0x4003d6d	    0x890500000000	            mov dword [0x04003d73], eax 	      1811	display.c	FUNCTION_3
0x4003d73	    0xc70500000000	               mov dword [0x04003d7d], 0	      1812	display.c	FUNCTION_3
0x4003d7d	    0x8b0500000000	            mov eax, dword [0x04003d83] 	      1812	display.c	FUNCTION_3
0x4003d83	    0x890500000000	            mov dword [0x04003d89], eax 	      1812	display.c	FUNCTION_3
0x4003d89	    0x488b05000000	            mov rax, qword [0x04003d90] 	      1813	display.c	FUNCTION_3	IF_2
0x4003d90	        0x488b4008	                mov rax, qword [rax + 8]	      1813	display.c	FUNCTION_3	IF_2
0x4003d94	          0x4885c0	                           test rax, rax	      1813	display.c	FUNCTION_3	IF_2
0x4003d97	            0x7424	                            je 0x4003dbd	      1813	display.c	FUNCTION_3	IF_2
0x4003d99	    0x488b05000000	            mov rax, qword [0x04003da0] 	      1814	display.c	FUNCTION_3	IF_2
0x4003da0	        0x488b5008	                mov rdx, qword [rax + 8]	      1814	display.c	FUNCTION_3	IF_2
0x4003da4	    0x488b05000000	            mov rax, qword [0x04003dab] 	      1814	display.c	FUNCTION_3	IF_2
0x4003dab	        0x488b4008	                mov rax, qword [rax + 8]	      1814	display.c	FUNCTION_3	IF_2
0x4003daf	        0x4883c004	                              add rax, 4	      1814	display.c	FUNCTION_3	IF_2
0x4003db3	    0xc70000000000	                      mov dword [rax], 0	      1814	display.c	FUNCTION_3	IF_2
0x4003db9	            0x8b00	                    mov eax, dword [rax]	      1814	display.c	FUNCTION_3	IF_2
0x4003dbb	            0x8902	                    mov dword [rdx], eax	      1814	display.c	FUNCTION_3	IF_2
0x4003dbd	    0xc70500000000	               mov dword [0x04003dc7], 0	      1815	display.c	FUNCTION_3
0x4003dc7	      0xb800000000	                              mov eax, 0	      1816	display.c	FUNCTION_3
0x4003dcc	              0x5d	                                 pop rbp	      1817	display.c	FUNCTION_3
0x4003dcd	              0xc3	                                     ret	      1817	display.c	FUNCTION_3
rl_redisplay	functions,0:WHILE,5:CALL,55:SWITCH,0:ELSE,29:DO,0:IF,72:FOR,6	1916
0x40007d2	              0x55	                                push rbp	       499	display.c	FUNCTION_2
0x40007d3	          0x4889e5	                            mov rbp, rsp	       499	display.c	FUNCTION_2
0x40007d6	            0x4157	                                push r15	       499	display.c	FUNCTION_2
0x40007d8	            0x4156	                                push r14	       499	display.c	FUNCTION_2
0x40007da	            0x4155	                                push r13	       499	display.c	FUNCTION_2
0x40007dc	            0x4154	                                push r12	       499	display.c	FUNCTION_2
0x40007de	              0x53	                                push rbx	       499	display.c	FUNCTION_2
0x40007df	    0x4881eca80000	                           sub rsp, 0xa8	       499	display.c	FUNCTION_2
0x40007e6	    0x64488b042528	                mov rax, qword fs:[0x28]	       499	display.c	FUNCTION_2
0x40007ef	        0x488945c8	             mov qword [rbp - 0x38], rax	       499	display.c	FUNCTION_2
0x40007f3	            0x31c0	                            xor eax, eax	       499	display.c	FUNCTION_2
0x40007f5	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	       510	display.c	FUNCTION_2
0x40007ff	    0x8b0500000000	            mov eax, dword [0x04000805] 	       513	display.c	FUNCTION_2	IF_1
0x4000805	            0x85c0	                           test eax, eax	       513	display.c	FUNCTION_2	IF_1
0x4000807	     0xf84e81f0000	                            je 0x40027f5	       513	display.c	FUNCTION_2	IF_1
0x400080d	      0xe800000000	                          call 0x4000812	       518	display.c	FUNCTION_2	CALL_1
0x4000812	    0x8b0500000000	            mov eax, dword [0x04000818] 	       519	display.c	FUNCTION_2	CALL_2
0x4000818	       0xd00008000	                        or eax, 0x800000	       519	display.c	FUNCTION_2	CALL_2
0x400081d	    0x890500000000	            mov dword [0x04000823], eax 	       519	display.c	FUNCTION_2	CALL_2
0x4000823	    0x488b05000000	            mov rax, qword [0x0400082a] 	       521	display.c	FUNCTION_2	IF_2
0x400082a	          0x4885c0	                           test rax, rax	       521	display.c	FUNCTION_2	IF_2
0x400082d	            0x750b	                           jne 0x400083a	       521	display.c	FUNCTION_2	IF_2
0x400082f	    0x48c705000000	               mov qword [0x0400083a], 0	       522	display.c	FUNCTION_2	IF_2
0x400083a	    0x8b0500000000	            mov eax, dword [0x04000840] 	       524	display.c	FUNCTION_2	IF_3
0x4000840	            0x85c0	                           test eax, eax	       524	display.c	FUNCTION_2	IF_3
0x4000842	            0x7514	                           jne 0x4000858	       524	display.c	FUNCTION_2	IF_3
0x4000844	      0xbf00000000	                              mov edi, 0	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x4000849	      0xb800000000	                              mov eax, 0	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x400084e	      0xe850fdffff	           call sym.init_line_structures	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x4000853	      0xe800000000	                          call 0x4000858	       527	display.c	FUNCTION_2	IF_3	CALL_4
0x4000858	    0xc70500000000	     mov dword [0x04000862], 0xffffffff 	       531	display.c	FUNCTION_2
0x4000862	    0x8b1500000000	            mov edx, dword [0x04000868] 	       533	display.c	FUNCTION_2
0x4000868	    0x8b0500000000	            mov eax, dword [0x0400086e] 	       533	display.c	FUNCTION_2
0x400086e	            0x29c2	                            sub edx, eax	       533	display.c	FUNCTION_2
0x4000870	            0x89d0	                            mov eax, edx	       533	display.c	FUNCTION_2
0x4000872	    0x890500000000	            mov dword [0x04000878], eax 	       533	display.c	FUNCTION_2
0x4000878	    0x488b05000000	            mov rax, qword [0x0400087f] 	       535	display.c	FUNCTION_2
0x400087f	          0x4c8b20	                    mov r12, qword [rax]	       535	display.c	FUNCTION_2
0x4000882	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	       536	display.c	FUNCTION_2
0x400088c	    0x8b9d70ffffff	             mov ebx, dword [rbp - 0x90]	       536	display.c	FUNCTION_2
0x4000892	    0xc70500000000	               mov dword [0x0400089c], 0	       540	display.c	FUNCTION_2
0x400089c	    0x8b0500000000	            mov eax, dword [0x040008a2] 	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40008a2	            0x85c0	                           test eax, eax	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40008a4	            0x7436	                            je 0x40008dc	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40008a6	      0xe800000000	                          call 0x40008ab	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40008ab	          0x4885c0	                           test rax, rax	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40008ae	            0x742c	                            je 0x40008dc	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40008b0	    0x488b05000000	            mov rax, qword [0x040008b7] 	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40008b7	          0x4885c0	                           test rax, rax	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40008ba	            0x7420	                            je 0x40008dc	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40008bc	            0x89d8	                            mov eax, ebx	       543	display.c	FUNCTION_2	IF_4
0x40008be	          0x8d5801	                      lea ebx, [rax + 1]	       543	display.c	FUNCTION_2	IF_4
0x40008c1	            0x4898	                                    cdqe	       543	display.c	FUNCTION_2	IF_4
0x40008c3	          0x4c01e0	                            add rax, r12	       543	display.c	FUNCTION_2	IF_4
0x40008c6	          0xc6002a	                    mov byte [rax], 0x2a	       543	display.c	FUNCTION_2	IF_4
0x40008c9	          0x4863c3	                         movsxd rax, ebx	       544	display.c	FUNCTION_2	IF_4
0x40008cc	          0x4c01e0	                            add rax, r12	       544	display.c	FUNCTION_2	IF_4
0x40008cf	          0xc60000	                       mov byte [rax], 0	       544	display.c	FUNCTION_2	IF_4
0x40008d2	    0xc70500000000	               mov dword [0x040008dc], 1	       545	display.c	FUNCTION_2	IF_4
0x40008dc	    0x488b05000000	            mov rax, qword [0x040008e3] 	       551	display.c	FUNCTION_2	IF_5
0x40008e3	          0x488b00	                    mov rax, qword [rax]	       551	display.c	FUNCTION_2	IF_5
0x40008e6	           0xfb610	                   movzx edx, byte [rax]	       551	display.c	FUNCTION_2	IF_5
0x40008e9	    0x488b05000000	            mov rax, qword [0x040008f0] 	       551	display.c	FUNCTION_2	IF_5
0x40008f0	          0x488b00	                    mov rax, qword [rax]	       551	display.c	FUNCTION_2	IF_5
0x40008f3	           0xfb600	                   movzx eax, byte [rax]	       551	display.c	FUNCTION_2	IF_5
0x40008f6	            0x38c2	                              cmp dl, al	       551	display.c	FUNCTION_2	IF_5
0x40008f8	            0x740a	                            je 0x4000904	       551	display.c	FUNCTION_2	IF_5
0x40008fa	    0xc70500000000	               mov dword [0x04000904], 0	       552	display.c	FUNCTION_2	IF_5
0x4000904	    0x488b15000000	            mov rdx, qword [0x0400090b] 	       558	display.c	FUNCTION_2	IF_6
0x400090b	    0x488b05000000	            mov rax, qword [0x04000912] 	       558	display.c	FUNCTION_2	IF_6
0x4000912	          0x4839c2	                            cmp rdx, rax	       558	display.c	FUNCTION_2	IF_6
0x4000915	            0x7410	                            je 0x4000927	       558	display.c	FUNCTION_2	IF_6
0x4000917	    0x488b05000000	            mov rax, qword [0x0400091e] 	       558	display.c	FUNCTION_2	IF_6
0x400091e	          0x4885c0	                           test rax, rax	       558	display.c	FUNCTION_2	IF_6
0x4000921	     0xf8431010000	                            je 0x4000a58	       558	display.c	FUNCTION_2	IF_6
0x4000927	    0x488b05000000	            mov rax, qword [0x0400092e] 	       560	display.c	FUNCTION_2	IF_6	IF_7
0x400092e	          0x4885c0	                           test rax, rax	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4000931	            0x742c	                            je 0x400095f	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4000933	    0x8b0500000000	            mov eax, dword [0x04000939] 	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4000939	            0x85c0	                           test eax, eax	       560	display.c	FUNCTION_2	IF_6	IF_7
0x400093b	            0x7422	                            je 0x400095f	       560	display.c	FUNCTION_2	IF_6	IF_7
0x400093d	    0x488b05000000	            mov rax, qword [0x04000944] 	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4000944	          0x4889c7	                            mov rdi, rax	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4000947	      0xe800000000	                          call 0x400094c	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x400094c	            0x89c2	                            mov edx, eax	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x400094e	    0x488b05000000	            mov rax, qword [0x04000955] 	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4000955	            0x89d6	                            mov esi, edx	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4000957	          0x4889c7	                            mov rdi, rax	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x400095a	      0xe800000000	                          call 0x400095f	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x400095f	    0x8b0500000000	            mov eax, dword [0x04000965] 	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4000965	            0x85c0	                           test eax, eax	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4000967	     0xf8ec7000000	                           jle 0x4000a34	       563	display.c	FUNCTION_2	IF_6	IF_8
0x400096d	    0x8b0500000000	            mov eax, dword [0x04000973] 	       565	display.c	FUNCTION_2	IF_6	IF_8
0x4000973	             0x1d8	                            add eax, ebx	       565	display.c	FUNCTION_2	IF_6	IF_8
0x4000975	          0x83c002	                              add eax, 2	       565	display.c	FUNCTION_2	IF_6	IF_8
0x4000978	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       565	display.c	FUNCTION_2	IF_6	IF_8
0x400097e	    0x8b0500000000	            mov eax, dword [0x04000984] 	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4000984	    0x398550ffffff	            cmp dword [rbp - 0xb0], eax 	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x400098a	            0x7c7f	                            jl 0x4000a0b	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x400098c	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4000992	    0x8d8800040000	                  lea ecx, [rax + 0x400]	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4000998	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x400099e	              0x99	                                     cdq	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x400099f	          0xc1ea16	                           shr edx, 0x16	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x40009a2	             0x1d0	                            add eax, edx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x40009a4	      0x25ff030000	                          and eax, 0x3ff	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x40009a9	            0x29d0	                            sub eax, edx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x40009ab	            0x29c1	                            sub ecx, eax	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x40009ad	            0x89c8	                            mov eax, ecx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x40009af	    0x890500000000	            mov dword [0x040009b5], eax 	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x40009b5	    0x4c8b25000000	            mov r12, qword [0x040009bc] 	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x40009bc	    0x8b0500000000	            mov eax, dword [0x040009c2] 	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x40009c2	          0x4863d0	                         movsxd rdx, eax	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x40009c5	    0x488b05000000	            mov rax, qword [0x040009cc] 	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x40009cc	          0x488b00	                    mov rax, qword [rax]	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x40009cf	          0x4889d6	                            mov rsi, rdx	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x40009d2	          0x4889c7	                            mov rdi, rax	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x40009d5	      0xe800000000	                          call 0x40009da	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x40009da	        0x49890424	                    mov qword [r12], rax	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x40009de	    0x4c8b25000000	            mov r12, qword [0x040009e5] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x40009e5	    0x8b0500000000	            mov eax, dword [0x040009eb] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x40009eb	          0x4863d0	                         movsxd rdx, eax	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x40009ee	    0x488b05000000	            mov rax, qword [0x040009f5] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x40009f5	          0x488b00	                    mov rax, qword [rax]	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x40009f8	          0x4889d6	                            mov rsi, rdx	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x40009fb	          0x4889c7	                            mov rdi, rax	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x40009fe	      0xe800000000	                          call 0x4000a03	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4000a03	        0x49890424	                    mov qword [r12], rax	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4000a07	        0x4d8b2424	                    mov r12, qword [r12]	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4000a0b	    0x8b0500000000	            mov eax, dword [0x04000a11] 	       572	display.c	FUNCTION_2	IF_6	IF_8	CALL_10
0x4000a11	          0x4863d0	                         movsxd rdx, eax	       572	display.c	FUNCTION_2	IF_6	IF_8	CALL_10
0x4000a14	    0x488b05000000	            mov rax, qword [0x04000a1b] 	       572	display.c	FUNCTION_2	IF_6	IF_8	CALL_10
0x4000a1b	          0x4863cb	                         movsxd rcx, ebx	       572	display.c	FUNCTION_2	IF_6	IF_8	CALL_10
0x4000a1e	          0x4c01e1	                            add rcx, r12	       572	display.c	FUNCTION_2	IF_6	IF_8	CALL_10
0x4000a21	          0x4889c6	                            mov rsi, rax	       572	display.c	FUNCTION_2	IF_6	IF_8	CALL_10
0x4000a24	          0x4889cf	                            mov rdi, rcx	       572	display.c	FUNCTION_2	IF_6	IF_8	CALL_10
0x4000a27	      0xe800000000	                          call 0x4000a2c	       572	display.c	FUNCTION_2	IF_6	IF_8	CALL_10
0x4000a2c	    0x8b0500000000	            mov eax, dword [0x04000a32] 	       573	display.c	FUNCTION_2	IF_6	IF_8
0x4000a32	             0x1c3	                            add ebx, eax	       573	display.c	FUNCTION_2	IF_6	IF_8
0x4000a34	          0x4863c3	                         movsxd rax, ebx	       575	display.c	FUNCTION_2	IF_6
0x4000a37	          0x4c01e0	                            add rax, r12	       575	display.c	FUNCTION_2	IF_6
0x4000a3a	          0xc60000	                       mov byte [rax], 0	       575	display.c	FUNCTION_2	IF_6
0x4000a3d	    0x8b1500000000	            mov edx, dword [0x04000a43] 	       576	display.c	FUNCTION_2	IF_6
0x4000a43	    0x8b0500000000	            mov eax, dword [0x04000a49] 	       576	display.c	FUNCTION_2	IF_6
0x4000a49	            0x29c2	                            sub edx, eax	       576	display.c	FUNCTION_2	IF_6
0x4000a4b	            0x89d0	                            mov eax, edx	       576	display.c	FUNCTION_2	IF_6
0x4000a4d	    0x890500000000	            mov dword [0x04000a53], eax 	       576	display.c	FUNCTION_2	IF_6
0x4000a53	      0xe987010000	                           jmp 0x4000bdf	       576	display.c	FUNCTION_2	IF_6
0x4000a58	    0x488b05000000	            mov rax, qword [0x04000a5f] 	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x4000a5f	      0xbe0a000000	                            mov esi, 0xa	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x4000a64	          0x4889c7	                            mov rdi, rax	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x4000a67	      0xe800000000	                          call 0x4000a6c	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x4000a6c	        0x488945a0	             mov qword [rbp - 0x60], rax	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x4000a70	      0x48837da000	               cmp qword [rbp - 0x60], 0	       582	display.c	FUNCTION_2	ELSE_1	IF_10
0x4000a75	            0x750d	                           jne 0x4000a84	       582	display.c	FUNCTION_2	ELSE_1	IF_10
0x4000a77	    0x488b05000000	            mov rax, qword [0x04000a7e] 	       583	display.c	FUNCTION_2	ELSE_1	IF_10
0x4000a7e	        0x488945a0	             mov qword [rbp - 0x60], rax	       583	display.c	FUNCTION_2	ELSE_1	IF_10
0x4000a82	            0xeb57	                           jmp 0x4000adb	       583	display.c	FUNCTION_2	ELSE_1	IF_10
0x4000a84	      0x488345a001	               add qword [rbp - 0x60], 1	       586	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x4000a89	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       587	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x4000a8d	    0x488b15000000	            mov rdx, qword [0x04000a94] 	       587	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x4000a94	          0x4829d0	                            sub rax, rdx	       587	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x4000a97	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	       587	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x4000a9d	    0x8b0500000000	            mov eax, dword [0x04000aa3] 	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x4000aa3	            0x85c0	                           test eax, eax	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x4000aa5	            0x7434	                            je 0x4000adb	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x4000aa7	    0x488b05000000	            mov rax, qword [0x04000aae] 	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4000aae	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4000ab4	            0x89d6	                            mov esi, edx	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4000ab6	          0x4889c7	                            mov rdi, rax	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4000ab9	      0xe800000000	                          call 0x4000abe	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4000abe	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 1	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4000ac5	            0x7e0f	                           jle 0x4000ad6	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4000ac7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4000acb	        0x4883e802	                              sub rax, 2	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4000acf	           0xfb600	                   movzx eax, byte [rax]	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4000ad2	            0x3c0d	                             cmp al, 0xd	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4000ad4	            0x7405	                            je 0x4000adb	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4000ad6	      0xe837450000	                             call sym.cr	       594	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_13
0x4000adb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4000adf	          0x4889c7	                            mov rdi, rax	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4000ae2	      0xe800000000	                          call 0x4000ae7	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4000ae7	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4000aed	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4000af3	    0x890500000000	            mov dword [0x04000af9], eax 	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4000af9	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       599	display.c	FUNCTION_2	ELSE_1
0x4000aff	             0x1d8	                            add eax, ebx	       599	display.c	FUNCTION_2	ELSE_1
0x4000b01	          0x83c002	                              add eax, 2	       599	display.c	FUNCTION_2	ELSE_1
0x4000b04	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       599	display.c	FUNCTION_2	ELSE_1
0x4000b0a	    0x8b0500000000	            mov eax, dword [0x04000b10] 	       600	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b10	    0x398550ffffff	            cmp dword [rbp - 0xb0], eax 	       600	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b16	            0x7c7f	                            jl 0x4000b97	       600	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b18	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b1e	    0x8d8800040000	                  lea ecx, [rax + 0x400]	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b24	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b2a	              0x99	                                     cdq	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b2b	          0xc1ea16	                           shr edx, 0x16	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b2e	             0x1d0	                            add eax, edx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b30	      0x25ff030000	                          and eax, 0x3ff	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b35	            0x29d0	                            sub eax, edx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b37	            0x29c1	                            sub ecx, eax	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b39	            0x89c8	                            mov eax, ecx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b3b	    0x890500000000	            mov dword [0x04000b41], eax 	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4000b41	    0x4c8b25000000	            mov r12, qword [0x04000b48] 	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4000b48	    0x8b0500000000	            mov eax, dword [0x04000b4e] 	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4000b4e	          0x4863d0	                         movsxd rdx, eax	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4000b51	    0x488b05000000	            mov rax, qword [0x04000b58] 	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4000b58	          0x488b00	                    mov rax, qword [rax]	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4000b5b	          0x4889d6	                            mov rsi, rdx	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4000b5e	          0x4889c7	                            mov rdi, rax	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4000b61	      0xe800000000	                          call 0x4000b66	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4000b66	        0x49890424	                    mov qword [r12], rax	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4000b6a	    0x4c8b25000000	            mov r12, qword [0x04000b71] 	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4000b71	    0x8b0500000000	            mov eax, dword [0x04000b77] 	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4000b77	          0x4863d0	                         movsxd rdx, eax	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4000b7a	    0x488b05000000	            mov rax, qword [0x04000b81] 	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4000b81	          0x488b00	                    mov rax, qword [rax]	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4000b84	          0x4889d6	                            mov rsi, rdx	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4000b87	          0x4889c7	                            mov rdi, rax	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4000b8a	      0xe800000000	                          call 0x4000b8f	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4000b8f	        0x49890424	                    mov qword [r12], rax	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4000b93	        0x4d8b2424	                    mov r12, qword [r12]	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4000b97	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       606	display.c	FUNCTION_2	ELSE_1	CALL_17
0x4000b9d	          0x4863d0	                         movsxd rdx, eax	       606	display.c	FUNCTION_2	ELSE_1	CALL_17
0x4000ba0	          0x4863c3	                         movsxd rax, ebx	       606	display.c	FUNCTION_2	ELSE_1	CALL_17
0x4000ba3	        0x498d0c04	                    lea rcx, [r12 + rax]	       606	display.c	FUNCTION_2	ELSE_1	CALL_17
0x4000ba7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       606	display.c	FUNCTION_2	ELSE_1	CALL_17
0x4000bab	          0x4889c6	                            mov rsi, rax	       606	display.c	FUNCTION_2	ELSE_1	CALL_17
0x4000bae	          0x4889cf	                            mov rdi, rcx	       606	display.c	FUNCTION_2	ELSE_1	CALL_17
0x4000bb1	      0xe800000000	                          call 0x4000bb6	       606	display.c	FUNCTION_2	ELSE_1	CALL_17
0x4000bb6	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       607	display.c	FUNCTION_2	ELSE_1
0x4000bbc	             0x1d8	                            add eax, ebx	       607	display.c	FUNCTION_2	ELSE_1
0x4000bbe	            0x89c3	                            mov ebx, eax	       607	display.c	FUNCTION_2	ELSE_1
0x4000bc0	          0x4863c3	                         movsxd rax, ebx	       608	display.c	FUNCTION_2	ELSE_1
0x4000bc3	          0x4c01e0	                            add rax, r12	       608	display.c	FUNCTION_2	ELSE_1
0x4000bc6	          0xc60000	                       mov byte [rax], 0	       608	display.c	FUNCTION_2	ELSE_1
0x4000bc9	    0xc70500000000	               mov dword [0x04000bd3], 0	       609	display.c	FUNCTION_2	ELSE_1
0x4000bd3	    0x8b0500000000	            mov eax, dword [0x04000bd9] 	       609	display.c	FUNCTION_2	ELSE_1
0x4000bd9	    0x890500000000	            mov dword [0x04000bdf], eax 	       609	display.c	FUNCTION_2	ELSE_1
0x4000bdf	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	       660	display.c	FUNCTION_2
0x4000be9	    0x488b05000000	            mov rax, qword [0x04000bf0] 	       660	display.c	FUNCTION_2
0x4000bf0	        0x488b4008	                mov rax, qword [rax + 8]	       660	display.c	FUNCTION_2
0x4000bf4	    0xc70000000000	                      mov dword [rax], 0	       660	display.c	FUNCTION_2
0x4000bfa	    0x8b1500000000	            mov edx, dword [0x04000c00] 	       661	display.c	FUNCTION_2
0x4000c00	    0x8b0500000000	            mov eax, dword [0x04000c06] 	       661	display.c	FUNCTION_2
0x4000c06	             0x1d0	                            add eax, edx	       661	display.c	FUNCTION_2
0x4000c08	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       661	display.c	FUNCTION_2
0x4000c0e	    0x488b05000000	            mov rax, qword [0x04000c15] 	       664	display.c	FUNCTION_2	CALL_18
0x4000c15	          0x8b4020	            mov eax, dword [rax + 0x20] 	       664	display.c	FUNCTION_2	CALL_18
0x4000c18	            0x4898	                                    cdqe	       664	display.c	FUNCTION_2	CALL_18
0x4000c1a	    0x488d14850000	                        lea rdx, [rax*4]	       664	display.c	FUNCTION_2	CALL_18
0x4000c22	    0x488b05000000	            mov rax, qword [0x04000c29] 	       664	display.c	FUNCTION_2	CALL_18
0x4000c29	        0x488b4018	            mov rax, qword [rax + 0x18] 	       664	display.c	FUNCTION_2	CALL_18
0x4000c2d	      0xbe00000000	                              mov esi, 0	       664	display.c	FUNCTION_2	CALL_18
0x4000c32	          0x4889c7	                            mov rdi, rax	       664	display.c	FUNCTION_2	CALL_18
0x4000c35	      0xe800000000	                          call 0x4000c3a	       664	display.c	FUNCTION_2	CALL_18
0x4000c3a	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       665	display.c	FUNCTION_2
0x4000c44	    0x8b3500000000	            mov esi, dword [0x04000c4a] 	       674	display.c	FUNCTION_2
0x4000c4a	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       674	display.c	FUNCTION_2
0x4000c50	              0x99	                                     cdq	       674	display.c	FUNCTION_2
0x4000c51	            0xf7fe	                                idiv esi	       674	display.c	FUNCTION_2
0x4000c53	    0x898578ffffff	             mov dword [rbp - 0x88], eax	       674	display.c	FUNCTION_2
0x4000c59	      0xe9bd010000	                           jmp 0x4000e1b	       678	display.c	FUNCTION_2	WHILE_1
0x4000c5e	      0xe800000000	                          call 0x4000c63	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c63	        0x4883f801	                              cmp rax, 1	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c67	     0xf86c2000000	                           jbe 0x4000d2f	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c6d	    0x8b0500000000	            mov eax, dword [0x04000c73] 	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c73	            0x85c0	                           test eax, eax	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c75	     0xf85b4000000	                           jne 0x4000d2f	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c7b	    0x8b0500000000	            mov eax, dword [0x04000c81] 	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c81	            0x85c0	                           test eax, eax	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c83	     0xf8ea6000000	                           jle 0x4000d2f	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c89	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       691	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c8f	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       691	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c95	    0x8b0500000000	            mov eax, dword [0x04000c9b] 	       692	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000c9b	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       692	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000ca1	            0xeb6d	                           jmp 0x4000d10	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000ca3	    0x488b05000000	            mov rax, qword [0x04000caa] 	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000caa	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000cb0	    0x8bb554ffffff	             mov esi, dword [rbp - 0xac]	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000cb6	      0xb901000000	                              mov ecx, 1	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000cbb	          0x4889c7	                            mov rdi, rax	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000cbe	      0xe8f0450000	                  call sym._rl_col_width	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000cc3	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000cc9	    0x8b0500000000	            mov eax, dword [0x04000ccf] 	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4000ccf	    0x39857cffffff	            cmp dword [rbp - 0x84], eax 	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4000cd5	            0x7e24	                           jle 0x4000cfb	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4000cd7	    0x488b05000000	            mov rax, qword [0x04000cde] 	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4000cde	    0x8b8d58ffffff	             mov ecx, dword [rbp - 0xa8]	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4000ce4	      0xba00000000	                              mov edx, 0	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4000ce9	            0x89ce	                            mov esi, ecx	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4000ceb	          0x4889c7	                            mov rdi, rax	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4000cee	      0xe800000000	                          call 0x4000cf3	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4000cf3	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4000cf9	            0xeb26	                           jmp 0x4000d21	       699	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4000cfb	    0x8b0500000000	            mov eax, dword [0x04000d01] 	       701	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	ELSE_3	IF_16
0x4000d01	    0x39857cffffff	            cmp dword [rbp - 0x84], eax 	       701	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	ELSE_3	IF_16
0x4000d07	            0x7417	                            je 0x4000d20	       701	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	ELSE_3	IF_16
0x4000d09	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       703	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000d10	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000d16	    0x3b8550ffffff	             cmp eax, dword [rbp - 0xb0]	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000d1c	            0x7c85	                            jl 0x4000ca3	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000d1e	            0xeb01	                           jmp 0x4000d21	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4000d20	              0x90	                                     nop	       702	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	ELSE_3	IF_16
0x4000d21	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       705	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000d27	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       705	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000d2d	            0xeb18	                           jmp 0x4000d47	       705	display.c	FUNCTION_2	WHILE_1	IF_14
0x4000d2f	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x4000d35	          0x8d5001	                      lea edx, [rax + 1]	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x4000d38	    0x8b0500000000	            mov eax, dword [0x04000d3e] 	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x4000d3e	           0xfafc2	                           imul eax, edx	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x4000d41	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x4000d47	    0x488b05000000	            mov rax, qword [0x04000d4e] 	       714	display.c	FUNCTION_2	WHILE_1
0x4000d4e	          0x4885c0	                           test rax, rax	       716	display.c	FUNCTION_2	WHILE_1
0x4000d51	            0x752f	                           jne 0x4000d82	       716	display.c	FUNCTION_2	WHILE_1
0x4000d53	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       715	display.c	FUNCTION_2	WHILE_1
0x4000d5a	            0x741e	                            je 0x4000d7a	       715	display.c	FUNCTION_2	WHILE_1
0x4000d5c	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       715	display.c	FUNCTION_2	WHILE_1
0x4000d62	    0x3b8578ffffff	             cmp eax, dword [rbp - 0x88]	       715	display.c	FUNCTION_2	WHILE_1
0x4000d68	            0x7508	                           jne 0x4000d72	       715	display.c	FUNCTION_2	WHILE_1
0x4000d6a	    0x8b0500000000	            mov eax, dword [0x04000d70] 	       715	display.c	FUNCTION_2	WHILE_1
0x4000d70	            0xeb26	                           jmp 0x4000d98	       715	display.c	FUNCTION_2	WHILE_1
0x4000d72	    0x8b0500000000	            mov eax, dword [0x04000d78] 	       715	display.c	FUNCTION_2	WHILE_1
0x4000d78	            0xeb1e	                           jmp 0x4000d98	       715	display.c	FUNCTION_2	WHILE_1
0x4000d7a	    0x8b0500000000	            mov eax, dword [0x04000d80] 	       715	display.c	FUNCTION_2	WHILE_1
0x4000d80	            0xeb16	                           jmp 0x4000d98	       715	display.c	FUNCTION_2	WHILE_1
0x4000d82	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       716	display.c	FUNCTION_2	WHILE_1
0x4000d89	            0x7508	                           jne 0x4000d93	       716	display.c	FUNCTION_2	WHILE_1
0x4000d8b	    0x8b0500000000	            mov eax, dword [0x04000d91] 	       716	display.c	FUNCTION_2	WHILE_1
0x4000d91	            0xeb05	                           jmp 0x4000d98	       716	display.c	FUNCTION_2	WHILE_1
0x4000d93	      0xb800000000	                              mov eax, 0	       716	display.c	FUNCTION_2	WHILE_1
0x4000d98	     0x18550ffffff	             add dword [rbp - 0xb0], eax	       714	display.c	FUNCTION_2	WHILE_1
0x4000d9e	    0x488b05000000	            mov rax, qword [0x04000da5] 	       718	display.c	FUNCTION_2	WHILE_1
0x4000da5	        0x488b4008	                mov rax, qword [rax + 8]	       718	display.c	FUNCTION_2	WHILE_1
0x4000da9	    0x838548ffffff	               add dword [rbp - 0xb8], 1	       718	display.c	FUNCTION_2	WHILE_1
0x4000db0	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       718	display.c	FUNCTION_2	WHILE_1
0x4000db6	          0x4863d2	                         movsxd rdx, edx	       718	display.c	FUNCTION_2	WHILE_1
0x4000db9	        0x48c1e202	                              shl rdx, 2	       718	display.c	FUNCTION_2	WHILE_1
0x4000dbd	          0x4801c2	                            add rdx, rax	       718	display.c	FUNCTION_2	WHILE_1
0x4000dc0	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       718	display.c	FUNCTION_2	WHILE_1
0x4000dc6	            0x8902	                    mov dword [rdx], eax	       718	display.c	FUNCTION_2	WHILE_1
0x4000dc8	      0xe800000000	                          call 0x4000dcd	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000dcd	        0x4883f801	                              cmp rax, 1	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000dd1	            0x763c	                           jbe 0x4000e0f	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000dd3	    0x8b0500000000	            mov eax, dword [0x04000dd9] 	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000dd9	            0x85c0	                           test eax, eax	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000ddb	            0x7532	                           jne 0x4000e0f	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000ddd	    0x8b0500000000	            mov eax, dword [0x04000de3] 	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000de3	            0x85c0	                           test eax, eax	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000de5	            0x7e28	                           jle 0x4000e0f	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000de7	    0x488b05000000	            mov rax, qword [0x04000dee] 	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000dee	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000df4	    0x8bb554ffffff	             mov esi, dword [rbp - 0xac]	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000dfa	      0xb901000000	                              mov ecx, 1	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000dff	          0x4889c7	                            mov rdi, rax	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000e02	      0xe8ac440000	                  call sym._rl_col_width	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000e07	    0x29854cffffff	             sub dword [rbp - 0xb4], eax	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000e0d	            0xeb0c	                           jmp 0x4000e1b	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4000e0f	    0x8b0500000000	            mov eax, dword [0x04000e15] 	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x4000e15	    0x29854cffffff	             sub dword [rbp - 0xb4], eax	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x4000e1b	    0x8b0500000000	            mov eax, dword [0x04000e21] 	       678	display.c	FUNCTION_2	WHILE_1
0x4000e21	    0x39854cffffff	            cmp dword [rbp - 0xb4], eax 	       678	display.c	FUNCTION_2	WHILE_1
0x4000e27	     0xf8d31feffff	                           jge 0x4000c5e	       678	display.c	FUNCTION_2	WHILE_1
0x4000e2d	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       727	display.c	FUNCTION_2	ELSE_5
0x4000e33	    0x890500000000	            mov dword [0x04000e39], eax 	       727	display.c	FUNCTION_2	ELSE_5
0x4000e39	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	       734	display.c	FUNCTION_2	ELSE_5
0x4000e43	    0x41be00000000	                             mov r14d, 0	       736	display.c	FUNCTION_2	ELSE_5
0x4000e49	      0xe800000000	                          call 0x4000e4e	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4000e4e	        0x4883f801	                              cmp rax, 1	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4000e52	            0x7649	                           jbe 0x4000e9d	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4000e54	    0x8b0500000000	            mov eax, dword [0x04000e5a] 	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4000e5a	            0x85c0	                           test eax, eax	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4000e5c	            0x753f	                           jne 0x4000e9d	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4000e5e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       739	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_20
0x4000e62	      0xba08000000	                              mov edx, 8	       739	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_20
0x4000e67	      0xbe00000000	                              mov esi, 0	       739	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_20
0x4000e6c	          0x4889c7	                            mov rdi, rax	       739	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_20
0x4000e6f	      0xe800000000	                          call 0x4000e74	       739	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_20
0x4000e74	    0x8b0500000000	            mov eax, dword [0x04000e7a] 	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4000e7a	          0x4863d0	                         movsxd rdx, eax	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4000e7d	    0x488b35000000	            mov rsi, qword [0x04000e84] 	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4000e84	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4000e88	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4000e8f	          0x4889c7	                            mov rdi, rax	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4000e92	      0xe800000000	                          call 0x4000e97	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4000e97	        0x488945a8	             mov qword [rbp - 0x58], rax	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4000e9b	            0xeb08	                           jmp 0x4000ea5	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4000e9d	    0x48c745a80100	               mov qword [rbp - 0x58], 1	       744	display.c	FUNCTION_2	ELSE_6
0x4000ea5	      0xe97f0d0000	                           jmp 0x4001c29	       745	display.c	FUNCTION_2	WHILE_3
0x4000eaa	    0x488b15000000	            mov rdx, qword [0x04000eb1] 	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4000eb1	          0x4963c6	                        movsxd rax, r14d	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4000eb4	          0x4801d0	                            add rax, rdx	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4000eb7	           0xfb600	                   movzx eax, byte [rax]	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4000eba	        0x440fb6e8	                          movzx r13d, al	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4000ebe	      0xe800000000	                          call 0x4000ec3	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4000ec3	        0x4883f801	                              cmp rax, 1	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4000ec7	     0xf8681000000	                           jbe 0x4000f4e	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4000ecd	    0x8b0500000000	            mov eax, dword [0x04000ed3] 	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4000ed3	            0x85c0	                           test eax, eax	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4000ed5	            0x7577	                           jne 0x4000f4e	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4000ed7	      0x48837da8ff	cmp qword [rbp - 0x58], 0xffffffffffffffff	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4000edc	            0x7407	                            je 0x4000ee5	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4000ede	      0x48837da8fe	cmp qword [rbp - 0x58], 0xfffffffffffffffe	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4000ee3	            0x752a	                           jne 0x4000f0f	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4000ee5	    0x48c745a80100	               mov qword [rbp - 0x58], 1	       759	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4000eed	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	       761	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4000ef7	        0x488d45c0	                   lea rax, [rbp - 0x40]	       762	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_23
0x4000efb	      0xba08000000	                              mov edx, 8	       762	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_23
0x4000f00	      0xbe00000000	                              mov esi, 0	       762	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_23
0x4000f05	          0x4889c7	                            mov rdi, rax	       762	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_23
0x4000f08	      0xe800000000	                          call 0x4000f0d	       762	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_23
0x4000f0d	            0xeb3f	                           jmp 0x4000f4e	       762	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_23
0x4000f0f	      0x48837da800	               cmp qword [rbp - 0x58], 0	       764	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_7	IF_21	CALL_24
0x4000f14	     0xf84200d0000	                            je 0x4001c3a	       764	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_7	IF_21	CALL_24
0x4000f1a	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4000f20	            0x89c7	                            mov edi, eax	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4000f22	      0xb800000000	                              mov eax, 0	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4000f27	      0xe800000000	                          call 0x4000f2c	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4000f2c	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4000f32	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4000f39	            0x7808	                            js 0x4000f43	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4000f3b	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4000f41	            0xeb05	                           jmp 0x4000f48	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4000f43	      0xb801000000	                              mov eax, 1	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4000f48	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4000f4e	          0x8d5308	                      lea edx, [rbx + 8]	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4000f51	    0x8b0500000000	            mov eax, dword [0x04000f57] 	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4000f57	            0x39c2	                            cmp edx, eax	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4000f59	            0x7c6a	                            jl 0x4000fc5	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4000f5b	    0x8b0500000000	            mov eax, dword [0x04000f61] 	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4000f61	             0x1c0	                            add eax, eax	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4000f63	    0x890500000000	            mov dword [0x04000f69], eax 	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4000f69	    0x4c8b25000000	            mov r12, qword [0x04000f70] 	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4000f70	    0x8b0500000000	            mov eax, dword [0x04000f76] 	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4000f76	          0x4863d0	                         movsxd rdx, eax	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4000f79	    0x488b05000000	            mov rax, qword [0x04000f80] 	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4000f80	          0x488b00	                    mov rax, qword [rax]	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4000f83	          0x4889d6	                            mov rsi, rdx	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4000f86	          0x4889c7	                            mov rdi, rax	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4000f89	      0xe800000000	                          call 0x4000f8e	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4000f8e	        0x49890424	                    mov qword [r12], rax	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4000f92	    0x4c8b25000000	            mov r12, qword [0x04000f99] 	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4000f99	    0x8b0500000000	            mov eax, dword [0x04000f9f] 	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4000f9f	          0x4863d0	                         movsxd rdx, eax	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4000fa2	    0x488b05000000	            mov rax, qword [0x04000fa9] 	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4000fa9	          0x488b00	                    mov rax, qword [rax]	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4000fac	          0x4889d6	                            mov rsi, rdx	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4000faf	          0x4889c7	                            mov rdi, rax	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4000fb2	      0xe800000000	                          call 0x4000fb7	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4000fb7	        0x49890424	                    mov qword [r12], rax	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4000fbb	    0x488b05000000	            mov rax, qword [0x04000fc2] 	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4000fc2	          0x4c8b20	                    mov r12, qword [rax]	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4000fc5	    0x8b0500000000	            mov eax, dword [0x04000fcb] 	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4000fcb	          0x4139c6	                           cmp r14d, eax	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4000fce	            0x7512	                           jne 0x4000fe2	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4000fd0	    0x891d00000000	            mov dword [0x04000fd6], ebx 	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4000fd6	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       785	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4000fdc	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       785	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4000fe2	        0x4183fd7f	                          cmp r13d, 0x7f	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4000fe6	     0xf8e59020000	                           jle 0x4001245	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4000fec	    0x4181fdff0000	                          cmp r13d, 0xff	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4000ff3	     0xf8f4c020000	                            jg 0x4001245	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4000ff9	    0x8b0500000000	            mov eax, dword [0x04000fff] 	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4000fff	            0x85c0	                           test eax, eax	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4001001	     0xf853e020000	                           jne 0x4001245	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4001007	    0x8b0500000000	            mov eax, dword [0x0400100d] 	       794	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x400100d	            0x85c0	                           test eax, eax	       794	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x400100f	     0xf85f2000000	                           jne 0x4001107	       794	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4001015	          0x4863c3	                         movsxd rax, ebx	       796	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	CALL_30
0x4001018	          0x4c01e0	                            add rax, r12	       796	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	CALL_30
0x400101b	          0x4489ea	                           mov edx, r13d	       796	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	CALL_30
0x400101e	      0xbe00000000	                              mov esi, 0	       796	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	CALL_30
0x4001023	          0x4889c7	                            mov rdi, rax	       796	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	CALL_30
0x4001026	      0xb800000000	                              mov eax, 0	       796	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	CALL_30
0x400102b	      0xe800000000	                          call 0x4001030	       796	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	CALL_30
0x4001030	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001036	          0x8d5004	                      lea edx, [rax + 4]	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001039	    0x8b0500000000	            mov eax, dword [0x0400103f] 	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400103f	            0x39c2	                            cmp edx, eax	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001041	     0xf8cb1000000	                            jl 0x40010f8	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001047	    0x8b0500000000	            mov eax, dword [0x0400104d] 	       800	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400104d	    0x2b854cffffff	             sub eax, dword [rbp - 0xb4]	       800	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001053	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       800	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001059	    0x488b05000000	            mov rax, qword [0x04001060] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001060	          0x8b4010	            mov eax, dword [rax + 0x10] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001063	          0x83e802	                              sub eax, 2	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001066	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400106c	            0x7f4b	                            jg 0x40010b9	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400106e	    0x488b05000000	            mov rax, qword [0x04001075] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001075	    0x488b15000000	            mov rdx, qword [0x0400107c] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400107c	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400107f	             0x1d2	                            add edx, edx	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001081	          0x895010	             mov dword [rax + 0x10], edx	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001084	    0x4c8b2d000000	            mov r13, qword [0x0400108b] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400108b	    0x488b05000000	            mov rax, qword [0x04001092] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001092	          0x8b4010	            mov eax, dword [rax + 0x10] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001095	            0x4898	                                    cdqe	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4001097	    0x488d14850000	                        lea rdx, [rax*4]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400109f	    0x488b05000000	            mov rax, qword [0x040010a6] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010a6	        0x488b4008	                mov rax, qword [rax + 8]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010aa	          0x4889d6	                            mov rsi, rdx	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010ad	          0x4889c7	                            mov rdi, rax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010b0	      0xe800000000	                          call 0x40010b5	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010b5	        0x49894508	                mov qword [r13 + 8], rax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010b9	    0x488b05000000	            mov rax, qword [0x040010c0] 	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010c0	        0x488b4008	                mov rax, qword [rax + 8]	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010c4	    0x838548ffffff	               add dword [rbp - 0xb8], 1	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010cb	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010d1	          0x4863d2	                         movsxd rdx, edx	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010d4	        0x48c1e202	                              shl rdx, 2	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010d8	          0x4801d0	                            add rax, rdx	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010db	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010e1	             0x1da	                            add edx, ebx	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010e3	            0x8910	                    mov dword [rax], edx	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010e5	      0xb804000000	                              mov eax, 4	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010ea	    0x2b8550ffffff	             sub eax, dword [rbp - 0xb0]	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010f0	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010f6	            0xeb07	                           jmp 0x40010ff	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x40010f8	    0x83854cffffff	               add dword [rbp - 0xb4], 4	       806	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	ELSE_9
0x40010ff	          0x83c304	                              add ebx, 4	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4001102	      0xe9c70a0000	                           jmp 0x4001bce	       794	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4001107	            0x89d8	                            mov eax, ebx	       812	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001109	          0x8d5801	                      lea ebx, [rax + 1]	       812	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400110c	            0x4898	                                    cdqe	       812	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400110e	          0x4c01e0	                            add rax, r12	       812	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001111	          0x4489ea	                           mov edx, r13d	       812	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001114	            0x8810	                      mov byte [rax], dl	       812	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001116	    0x83854cffffff	               add dword [rbp - 0xb4], 1	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400111d	    0x8b0500000000	            mov eax, dword [0x04001123] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001123	    0x39854cffffff	            cmp dword [rbp - 0xb4], eax 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001129	     0xf8c9f0a0000	                            jl 0x4001bce	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400112f	    0x488b05000000	            mov rax, qword [0x04001136] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001136	          0x8b4010	            mov eax, dword [rax + 0x10] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001139	          0x83e802	                              sub eax, 2	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400113c	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001142	            0x7f4b	                            jg 0x400118f	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001144	    0x488b05000000	            mov rax, qword [0x0400114b] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400114b	    0x488b15000000	            mov rdx, qword [0x04001152] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001152	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001155	             0x1d2	                            add edx, edx	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001157	          0x895010	             mov dword [rax + 0x10], edx	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400115a	    0x4c8b2d000000	            mov r13, qword [0x04001161] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001161	    0x488b05000000	            mov rax, qword [0x04001168] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001168	          0x8b4010	            mov eax, dword [rax + 0x10] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400116b	            0x4898	                                    cdqe	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400116d	    0x488d14850000	                        lea rdx, [rax*4]	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001175	    0x488b05000000	            mov rax, qword [0x0400117c] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400117c	        0x488b4008	                mov rax, qword [rax + 8]	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001180	          0x4889d6	                            mov rsi, rdx	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001183	          0x4889c7	                            mov rdi, rax	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001186	      0xe800000000	                          call 0x400118b	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400118b	        0x49894508	                mov qword [r13 + 8], rax	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400118f	    0x488b05000000	            mov rax, qword [0x04001196] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001196	        0x488b4008	                mov rax, qword [rax + 8]	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400119a	    0x838548ffffff	               add dword [rbp - 0xb8], 1	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011a1	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011a7	          0x4863d2	                         movsxd rdx, edx	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011aa	        0x48c1e202	                              shl rdx, 2	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011ae	          0x4801d0	                            add rax, rdx	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011b1	            0x8918	                    mov dword [rax], ebx	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011b3	    0x488b05000000	            mov rax, qword [0x040011ba] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011ba	          0x8b4020	            mov eax, dword [rax + 0x20] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011bd	          0x83e801	                              sub eax, 1	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011c0	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011c6	            0x7f4b	                            jg 0x4001213	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011c8	    0x488b05000000	            mov rax, qword [0x040011cf] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011cf	    0x488b15000000	            mov rdx, qword [0x040011d6] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011d6	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011d9	             0x1d2	                            add edx, edx	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011db	          0x895020	             mov dword [rax + 0x20], edx	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011de	    0x4c8b2d000000	            mov r13, qword [0x040011e5] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011e5	    0x488b05000000	            mov rax, qword [0x040011ec] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011ec	          0x8b4020	            mov eax, dword [rax + 0x20] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011ef	            0x4898	                                    cdqe	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011f1	    0x488d14850000	                        lea rdx, [rax*4]	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x40011f9	    0x488b05000000	            mov rax, qword [0x04001200] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001200	        0x488b4018	            mov rax, qword [rax + 0x18] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001204	          0x4889d6	                            mov rsi, rdx	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001207	          0x4889c7	                            mov rdi, rax	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400120a	      0xe800000000	                          call 0x400120f	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400120f	        0x49894518	             mov qword [r13 + 0x18], rax	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001213	    0x488b05000000	            mov rax, qword [0x0400121a] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400121a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400121e	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001224	          0x4863d2	                         movsxd rdx, edx	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001227	        0x48c1e202	                              shl rdx, 2	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400122b	          0x4801c2	                            add rdx, rax	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x400122e	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001234	            0x8902	                    mov dword [rdx], eax	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001236	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	       813	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	ELSE_10
0x4001240	      0xe989090000	                           jmp 0x4001bce	       794	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4001245	        0x4183fd09	                             cmp r13d, 9	       817	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4001249	     0xf8530010000	                           jne 0x400137f	       817	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400124f	          0x8d4b08	                      lea ecx, [rbx + 8]	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4001252	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4001258	              0x99	                                     cdq	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4001259	          0xc1ea1d	                           shr edx, 0x1d	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400125c	             0x1d0	                            add eax, edx	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400125e	          0x83e007	                              and eax, 7	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4001261	            0x29d0	                            sub eax, edx	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4001263	            0x29c1	                            sub ecx, eax	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4001265	          0x4189cd	                           mov r13d, ecx	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4001268	          0x4489e8	                           mov eax, r13d	       826	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400126b	            0x29d8	                            sub eax, ebx	       826	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400126d	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       826	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4001273	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001279	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400127f	             0x1c2	                            add edx, eax	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001281	    0x8b0500000000	            mov eax, dword [0x04001287] 	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001287	            0x39c2	                            cmp edx, eax	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001289	     0xf8cda000000	                            jl 0x4001369	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400128f	    0x8b0500000000	            mov eax, dword [0x04001295] 	       830	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001295	    0x2b854cffffff	             sub eax, dword [rbp - 0xb4]	       830	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400129b	          0x4189c7	                           mov r15d, eax	       830	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400129e	    0x488b05000000	            mov rax, qword [0x040012a5] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012a5	          0x8b4010	            mov eax, dword [rax + 0x10] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012a8	          0x83e802	                              sub eax, 2	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012ab	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012b1	            0x7f59	                            jg 0x400130c	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012b3	    0x488b05000000	            mov rax, qword [0x040012ba] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012ba	    0x488b15000000	            mov rdx, qword [0x040012c1] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012c1	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012c4	             0x1d2	                            add edx, edx	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012c6	          0x895010	             mov dword [rax + 0x10], edx	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012c9	    0x488b05000000	            mov rax, qword [0x040012d0] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012d0	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012d7	    0x488b05000000	            mov rax, qword [0x040012de] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012de	          0x8b4010	            mov eax, dword [rax + 0x10] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012e1	            0x4898	                                    cdqe	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012e3	    0x488d14850000	                        lea rdx, [rax*4]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012eb	    0x488b05000000	            mov rax, qword [0x040012f2] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012f2	        0x488b4008	                mov rax, qword [rax + 8]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012f6	          0x4889d6	                            mov rsi, rdx	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012f9	          0x4889c7	                            mov rdi, rax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40012fc	      0xe800000000	                          call 0x4001301	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001301	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001308	        0x48894608	                mov qword [rsi + 8], rax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400130c	    0x488b05000000	            mov rax, qword [0x04001313] 	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001313	        0x488b4008	                mov rax, qword [rax + 8]	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001317	    0x838548ffffff	               add dword [rbp - 0xb8], 1	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400131e	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001324	          0x4863d2	                         movsxd rdx, edx	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001327	        0x48c1e202	                              shl rdx, 2	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400132b	          0x4801c2	                            add rdx, rax	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400132e	        0x428d043b	                    lea eax, [rbx + r15]	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001332	            0x8902	                    mov dword [rdx], eax	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001334	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       833	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400133a	          0x4429f8	                           sub eax, r15d	       833	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400133d	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       833	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4001343	            0xeb0d	                           jmp 0x4001352	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4001345	            0x89d8	                            mov eax, ebx	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4001347	          0x8d5801	                      lea ebx, [rax + 1]	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x400134a	            0x4898	                                    cdqe	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x400134c	          0x4c01e0	                            add rax, r12	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x400134f	          0xc60020	                    mov byte [rax], 0x20	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4001352	          0x4439eb	                           cmp ebx, r13d	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4001355	            0x7cee	                            jl 0x4001345	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4001357	      0xe973080000	                           jmp 0x4001bcf	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x400135c	            0x89d8	                            mov eax, ebx	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400135e	          0x8d5801	                      lea ebx, [rax + 1]	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4001361	            0x4898	                                    cdqe	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4001363	          0x4c01e0	                            add rax, r12	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4001366	          0xc60020	                    mov byte [rax], 0x20	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4001369	          0x4439eb	                           cmp ebx, r13d	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400136c	            0x7cee	                            jl 0x400135c	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400136e	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       841	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12
0x4001374	     0x1854cffffff	             add dword [rbp - 0xb4], eax	       841	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12
0x400137a	      0xe950080000	                           jmp 0x4001bcf	       841	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12
0x400137f	        0x4183fd0a	                           cmp r13d, 0xa	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001383	     0xf85d0000000	                           jne 0x4001459	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001389	    0x8b0500000000	            mov eax, dword [0x0400138f] 	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400138f	            0x85c0	                           test eax, eax	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001391	     0xf85c2000000	                           jne 0x4001459	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001397	    0x488b05000000	            mov rax, qword [0x0400139e] 	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400139e	          0x4885c0	                           test rax, rax	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013a1	     0xf84b2000000	                            je 0x4001459	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013a7	    0x488b05000000	            mov rax, qword [0x040013ae] 	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013ae	           0xfb600	                   movzx eax, byte [rax]	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013b1	            0x84c0	                             test al, al	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013b3	     0xf84a0000000	                            je 0x4001459	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013b9	            0x89d8	                            mov eax, ebx	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013bb	          0x8d5801	                      lea ebx, [rax + 1]	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013be	            0x4898	                                    cdqe	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013c0	          0x4c01e0	                            add rax, r12	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013c3	          0xc60000	                       mov byte [rax], 0	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013c6	    0x488b05000000	            mov rax, qword [0x040013cd] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013cd	          0x8b4010	            mov eax, dword [rax + 0x10] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013d0	          0x83e802	                              sub eax, 2	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013d3	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013d9	            0x7f4b	                            jg 0x4001426	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013db	    0x488b05000000	            mov rax, qword [0x040013e2] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013e2	    0x488b15000000	            mov rdx, qword [0x040013e9] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013e9	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013ec	             0x1d2	                            add edx, edx	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013ee	          0x895010	             mov dword [rax + 0x10], edx	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013f1	    0x4c8b2d000000	            mov r13, qword [0x040013f8] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013f8	    0x488b05000000	            mov rax, qword [0x040013ff] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40013ff	          0x8b4010	            mov eax, dword [rax + 0x10] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001402	            0x4898	                                    cdqe	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001404	    0x488d14850000	                        lea rdx, [rax*4]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400140c	    0x488b05000000	            mov rax, qword [0x04001413] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001413	        0x488b4008	                mov rax, qword [rax + 8]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001417	          0x4889d6	                            mov rsi, rdx	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400141a	          0x4889c7	                            mov rdi, rax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400141d	      0xe800000000	                          call 0x4001422	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001422	        0x49894508	                mov qword [r13 + 8], rax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001426	    0x488b05000000	            mov rax, qword [0x0400142d] 	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400142d	        0x488b4008	                mov rax, qword [rax + 8]	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001431	    0x838548ffffff	               add dword [rbp - 0xb8], 1	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001438	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400143e	          0x4863d2	                         movsxd rdx, edx	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001441	        0x48c1e202	                              shl rdx, 2	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001445	          0x4801d0	                            add rax, rdx	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001448	            0x8918	                    mov dword [rax], ebx	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400144a	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	       850	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001454	      0xe976070000	                           jmp 0x4001bcf	       850	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4001459	        0x4183fd1f	                          cmp r13d, 0x1f	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_31
0x400145d	            0x7f0c	                            jg 0x400146b	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_31
0x400145f	          0x4489e8	                           mov eax, r13d	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_31
0x4001462	      0x2580000000	                           and eax, 0x80	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_31
0x4001467	            0x85c0	                           test eax, eax	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_31
0x4001469	            0x740a	                            je 0x4001475	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_31
0x400146b	        0x4183fd7f	                          cmp r13d, 0x7f	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_31
0x400146f	     0xf85de020000	                           jne 0x4001753	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_31
0x4001475	            0x89d8	                            mov eax, ebx	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001477	          0x8d5801	                      lea ebx, [rax + 1]	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400147a	            0x4898	                                    cdqe	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400147c	          0x4c01e0	                            add rax, r12	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400147f	          0xc6005e	                    mov byte [rax], 0x5e	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001482	    0x83854cffffff	               add dword [rbp - 0xb4], 1	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001489	    0x8b0500000000	            mov eax, dword [0x0400148f] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400148f	    0x39854cffffff	            cmp dword [rbp - 0xb4], eax 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001495	     0xf8c11010000	                            jl 0x40015ac	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400149b	    0x488b05000000	            mov rax, qword [0x040014a2] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014a2	          0x8b4010	            mov eax, dword [rax + 0x10] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014a5	          0x83e802	                              sub eax, 2	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014a8	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014ae	            0x7f4b	                            jg 0x40014fb	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014b0	    0x488b05000000	            mov rax, qword [0x040014b7] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014b7	    0x488b15000000	            mov rdx, qword [0x040014be] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014be	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014c1	             0x1d2	                            add edx, edx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014c3	          0x895010	             mov dword [rax + 0x10], edx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014c6	    0x4c8b3d000000	            mov r15, qword [0x040014cd] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014cd	    0x488b05000000	            mov rax, qword [0x040014d4] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014d4	          0x8b4010	            mov eax, dword [rax + 0x10] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014d7	            0x4898	                                    cdqe	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014d9	    0x488d14850000	                        lea rdx, [rax*4]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014e1	    0x488b05000000	            mov rax, qword [0x040014e8] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014e8	        0x488b4008	                mov rax, qword [rax + 8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014ec	          0x4889d6	                            mov rsi, rdx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014ef	          0x4889c7	                            mov rdi, rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014f2	      0xe800000000	                          call 0x40014f7	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014f7	        0x49894708	                mov qword [r15 + 8], rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40014fb	    0x488b05000000	            mov rax, qword [0x04001502] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001502	        0x488b4008	                mov rax, qword [rax + 8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001506	    0x838548ffffff	               add dword [rbp - 0xb8], 1	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400150d	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001513	          0x4863d2	                         movsxd rdx, edx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001516	        0x48c1e202	                              shl rdx, 2	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400151a	          0x4801d0	                            add rax, rdx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400151d	            0x8918	                    mov dword [rax], ebx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400151f	    0x488b05000000	            mov rax, qword [0x04001526] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001526	          0x8b4020	            mov eax, dword [rax + 0x20] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001529	          0x83e801	                              sub eax, 1	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400152c	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001532	            0x7f4b	                            jg 0x400157f	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001534	    0x488b05000000	            mov rax, qword [0x0400153b] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400153b	    0x488b15000000	            mov rdx, qword [0x04001542] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001542	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001545	             0x1d2	                            add edx, edx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001547	          0x895020	             mov dword [rax + 0x20], edx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400154a	    0x4c8b3d000000	            mov r15, qword [0x04001551] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001551	    0x488b05000000	            mov rax, qword [0x04001558] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001558	          0x8b4020	            mov eax, dword [rax + 0x20] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400155b	            0x4898	                                    cdqe	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400155d	    0x488d14850000	                        lea rdx, [rax*4]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001565	    0x488b05000000	            mov rax, qword [0x0400156c] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400156c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001570	          0x4889d6	                            mov rsi, rdx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001573	          0x4889c7	                            mov rdi, rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001576	      0xe800000000	                          call 0x400157b	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400157b	        0x49894718	             mov qword [r15 + 0x18], rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400157f	    0x488b05000000	            mov rax, qword [0x04001586] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001586	        0x488b4018	            mov rax, qword [rax + 0x18] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400158a	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001590	          0x4863d2	                         movsxd rdx, edx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001593	        0x48c1e202	                              shl rdx, 2	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001597	          0x4801c2	                            add rdx, rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400159a	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40015a0	            0x8902	                    mov dword [rdx], eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40015a2	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40015ac	            0x89d8	                            mov eax, ebx	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015ae	          0x8d5801	                      lea ebx, [rax + 1]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015b1	            0x4898	                                    cdqe	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015b3	        0x4d8d3c04	                    lea r15, [r12 + rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015b7	        0x4183fd1f	                          cmp r13d, 0x1f	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015bb	            0x7f5f	                            jg 0x400161c	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015bd	          0x4489e8	                           mov eax, r13d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015c0	      0x2580000000	                           and eax, 0x80	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015c5	            0x85c0	                           test eax, eax	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015c7	            0x7553	                           jne 0x400161c	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015c9	          0x4489e8	                           mov eax, r13d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015cc	          0x83c840	                            or eax, 0x40	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015cf	           0xfb6c0	                           movzx eax, al	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015d2	          0x4489ea	                           mov edx, r13d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015d5	          0x83ca40	                            or edx, 0x40	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015d8	            0x39d0	                            cmp eax, edx	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015da	            0x7538	                           jne 0x4001614	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015dc	      0xe800000000	                          call 0x40015e1	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015e1	          0x488b00	                    mov rax, qword [rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015e4	          0x4489ea	                           mov edx, r13d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015e7	          0x83ca40	                            or edx, 0x40	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015ea	          0x4863d2	                         movsxd rdx, edx	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015ed	          0x4801d2	                            add rdx, rdx	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015f0	          0x4801d0	                            add rax, rdx	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015f3	           0xfb700	                   movzx eax, word [rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015f6	           0xfb7c0	                           movzx eax, ax	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015f9	      0x2500020000	                          and eax, 0x200	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x40015fe	            0x85c0	                           test eax, eax	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x4001600	            0x7412	                            je 0x4001614	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x4001602	          0x4489e8	                           mov eax, r13d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x4001605	          0x83c840	                            or eax, 0x40	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x4001608	           0xfb6c0	                           movzx eax, al	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x400160b	            0x89c7	                            mov edi, eax	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x400160d	      0xe800000000	                          call 0x4001612	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x4001612	            0xeb0d	                           jmp 0x4001621	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x4001614	          0x4489e8	                           mov eax, r13d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x4001617	          0x83c840	                            or eax, 0x40	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x400161a	            0xeb05	                           jmp 0x4001621	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x400161c	      0xb83f000000	                           mov eax, 0x3f	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x4001621	          0x418807	                      mov byte [r15], al	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_33
0x4001624	    0x83854cffffff	               add dword [rbp - 0xb4], 1	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400162b	    0x8b0500000000	            mov eax, dword [0x04001631] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001631	    0x39854cffffff	            cmp dword [rbp - 0xb4], eax 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001637	     0xf8c92050000	                            jl 0x4001bcf	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400163d	    0x488b05000000	            mov rax, qword [0x04001644] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001644	          0x8b4010	            mov eax, dword [rax + 0x10] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001647	          0x83e802	                              sub eax, 2	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400164a	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001650	            0x7f4b	                            jg 0x400169d	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001652	    0x488b05000000	            mov rax, qword [0x04001659] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001659	    0x488b15000000	            mov rdx, qword [0x04001660] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001660	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001663	             0x1d2	                            add edx, edx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001665	          0x895010	             mov dword [rax + 0x10], edx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001668	    0x4c8b2d000000	            mov r13, qword [0x0400166f] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400166f	    0x488b05000000	            mov rax, qword [0x04001676] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001676	          0x8b4010	            mov eax, dword [rax + 0x10] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001679	            0x4898	                                    cdqe	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400167b	    0x488d14850000	                        lea rdx, [rax*4]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001683	    0x488b05000000	            mov rax, qword [0x0400168a] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400168a	        0x488b4008	                mov rax, qword [rax + 8]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400168e	          0x4889d6	                            mov rsi, rdx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001691	          0x4889c7	                            mov rdi, rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001694	      0xe800000000	                          call 0x4001699	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001699	        0x49894508	                mov qword [r13 + 8], rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400169d	    0x488b05000000	            mov rax, qword [0x040016a4] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016a4	        0x488b4008	                mov rax, qword [rax + 8]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016a8	    0x838548ffffff	               add dword [rbp - 0xb8], 1	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016af	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016b5	          0x4863d2	                         movsxd rdx, edx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016b8	        0x48c1e202	                              shl rdx, 2	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016bc	          0x4801d0	                            add rax, rdx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016bf	            0x8918	                    mov dword [rax], ebx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016c1	    0x488b05000000	            mov rax, qword [0x040016c8] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016c8	          0x8b4020	            mov eax, dword [rax + 0x20] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016cb	          0x83e801	                              sub eax, 1	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016ce	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016d4	            0x7f4b	                            jg 0x4001721	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016d6	    0x488b05000000	            mov rax, qword [0x040016dd] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016dd	    0x488b15000000	            mov rdx, qword [0x040016e4] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016e4	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016e7	             0x1d2	                            add edx, edx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016e9	          0x895020	             mov dword [rax + 0x20], edx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016ec	    0x4c8b2d000000	            mov r13, qword [0x040016f3] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016f3	    0x488b05000000	            mov rax, qword [0x040016fa] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016fa	          0x8b4020	            mov eax, dword [rax + 0x20] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016fd	            0x4898	                                    cdqe	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40016ff	    0x488d14850000	                        lea rdx, [rax*4]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001707	    0x488b05000000	            mov rax, qword [0x0400170e] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400170e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001712	          0x4889d6	                            mov rsi, rdx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001715	          0x4889c7	                            mov rdi, rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001718	      0xe800000000	                          call 0x400171d	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400171d	        0x49894518	             mov qword [r13 + 0x18], rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001721	    0x488b05000000	            mov rax, qword [0x04001728] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001728	        0x488b4018	            mov rax, qword [rax + 0x18] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400172c	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001732	          0x4863d2	                         movsxd rdx, edx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001735	        0x48c1e202	                              shl rdx, 2	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001739	          0x4801c2	                            add rdx, rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400173c	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001742	            0x8902	                    mov dword [rdx], eax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001744	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400174e	      0xe97c040000	                           jmp 0x4001bcf	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4001753	      0xe800000000	                          call 0x4001758	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x4001758	        0x4883f801	                              cmp rax, 1	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x400175c	     0xf8631030000	                           jbe 0x4001a93	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x4001762	    0x8b0500000000	            mov eax, dword [0x04001768] 	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x4001768	            0x85c0	                           test eax, eax	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x400176a	     0xf8523030000	                           jne 0x4001a93	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x4001770	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	       866	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x400177a	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x4001780	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x4001786	             0x1c2	                            add edx, eax	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x4001788	    0x8b0500000000	            mov eax, dword [0x0400178e] 	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x400178e	            0x39c2	                            cmp edx, eax	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x4001790	     0xf8e5d010000	                           jle 0x40018f3	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x4001796	    0x448bad4cffff	            mov r13d, dword [rbp - 0xb4]	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400179d	      0xe942010000	                           jmp 0x40018e4	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017a2	            0x89d8	                            mov eax, ebx	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017a4	          0x8d5801	                      lea ebx, [rax + 1]	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017a7	            0x4898	                                    cdqe	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017a9	          0x4c01e0	                            add rax, r12	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017ac	          0xc60020	                    mov byte [rax], 0x20	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017af	    0x838560ffffff	               add dword [rbp - 0xa0], 1	       873	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017b6	    0x83854cffffff	               add dword [rbp - 0xb4], 1	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017bd	    0x8b0500000000	            mov eax, dword [0x040017c3] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017c3	    0x39854cffffff	            cmp dword [rbp - 0xb4], eax 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017c9	     0xf8c11010000	                            jl 0x40018e0	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017cf	    0x488b05000000	            mov rax, qword [0x040017d6] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017d6	          0x8b4010	            mov eax, dword [rax + 0x10] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017d9	          0x83e802	                              sub eax, 2	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017dc	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017e2	            0x7f4b	                            jg 0x400182f	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017e4	    0x488b05000000	            mov rax, qword [0x040017eb] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017eb	    0x488b15000000	            mov rdx, qword [0x040017f2] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017f2	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017f5	             0x1d2	                            add edx, edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017f7	          0x895010	             mov dword [rax + 0x10], edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40017fa	    0x4c8b3d000000	            mov r15, qword [0x04001801] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001801	    0x488b05000000	            mov rax, qword [0x04001808] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001808	          0x8b4010	            mov eax, dword [rax + 0x10] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400180b	            0x4898	                                    cdqe	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400180d	    0x488d14850000	                        lea rdx, [rax*4]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001815	    0x488b05000000	            mov rax, qword [0x0400181c] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400181c	        0x488b4008	                mov rax, qword [rax + 8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001820	          0x4889d6	                            mov rsi, rdx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001823	          0x4889c7	                            mov rdi, rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001826	      0xe800000000	                          call 0x400182b	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400182b	        0x49894708	                mov qword [r15 + 8], rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400182f	    0x488b05000000	            mov rax, qword [0x04001836] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001836	        0x488b4008	                mov rax, qword [rax + 8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400183a	    0x838548ffffff	               add dword [rbp - 0xb8], 1	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001841	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001847	          0x4863d2	                         movsxd rdx, edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400184a	        0x48c1e202	                              shl rdx, 2	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400184e	          0x4801d0	                            add rax, rdx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001851	            0x8918	                    mov dword [rax], ebx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001853	    0x488b05000000	            mov rax, qword [0x0400185a] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400185a	          0x8b4020	            mov eax, dword [rax + 0x20] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400185d	          0x83e801	                              sub eax, 1	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001860	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001866	            0x7f4b	                            jg 0x40018b3	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001868	    0x488b05000000	            mov rax, qword [0x0400186f] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400186f	    0x488b15000000	            mov rdx, qword [0x04001876] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001876	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001879	             0x1d2	                            add edx, edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400187b	          0x895020	             mov dword [rax + 0x20], edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400187e	    0x4c8b3d000000	            mov r15, qword [0x04001885] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001885	    0x488b05000000	            mov rax, qword [0x0400188c] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400188c	          0x8b4020	            mov eax, dword [rax + 0x20] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400188f	            0x4898	                                    cdqe	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001891	    0x488d14850000	                        lea rdx, [rax*4]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4001899	    0x488b05000000	            mov rax, qword [0x040018a0] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018a0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018a4	          0x4889d6	                            mov rsi, rdx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018a7	          0x4889c7	                            mov rdi, rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018aa	      0xe800000000	                          call 0x40018af	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018af	        0x49894718	             mov qword [r15 + 0x18], rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018b3	    0x488b05000000	            mov rax, qword [0x040018ba] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018ba	        0x488b4018	            mov rax, qword [rax + 0x18] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018be	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018c4	          0x4863d2	                         movsxd rdx, edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018c7	        0x48c1e202	                              shl rdx, 2	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018cb	          0x4801c2	                            add rdx, rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018ce	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018d4	            0x8902	                    mov dword [rdx], eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018d6	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018e0	        0x4183c501	                             add r13d, 1	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018e4	    0x8b0500000000	            mov eax, dword [0x040018ea] 	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018ea	          0x4139c5	                           cmp r13d, eax	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018ed	     0xf8caffeffff	                            jl 0x40017a2	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40018f3	    0x8b0500000000	            mov eax, dword [0x040018f9] 	       876	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x40018f9	          0x4139c6	                           cmp r14d, eax	       876	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x40018fc	            0x7512	                           jne 0x4001910	       876	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x40018fe	    0x891d00000000	            mov dword [0x04001904], ebx 	       878	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4001904	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       879	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x400190a	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       879	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4001910	          0x4589f5	                          mov r13d, r14d	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001913	            0xeb21	                           jmp 0x4001936	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001915	            0x89d8	                            mov eax, ebx	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001917	          0x8d5801	                      lea ebx, [rax + 1]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400191a	            0x4898	                                    cdqe	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400191c	        0x498d1404	                    lea rdx, [r12 + rax]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001920	    0x488b0d000000	            mov rcx, qword [0x04001927] 	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001927	          0x4963c5	                        movsxd rax, r13d	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400192a	          0x4801c8	                            add rax, rcx	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400192d	           0xfb600	                   movzx eax, byte [rax]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001930	            0x8802	                      mov byte [rdx], al	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001932	        0x4183c501	                             add r13d, 1	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001936	          0x4963c5	                        movsxd rax, r13d	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001939	          0x4963ce	                        movsxd rcx, r14d	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400193c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001940	          0x4801ca	                            add rdx, rcx	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001943	          0x4839d0	                            cmp rax, rdx	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001946	            0x72cd	                            jb 0x4001915	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4001948	    0x41bd00000000	                             mov r13d, 0	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400194e	      0xe92e010000	                           jmp 0x4001a81	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001953	    0x83854cffffff	               add dword [rbp - 0xb4], 1	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400195a	    0x8b0500000000	            mov eax, dword [0x04001960] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001960	    0x39854cffffff	            cmp dword [rbp - 0xb4], eax 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001966	     0xf8c11010000	                            jl 0x4001a7d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400196c	    0x488b05000000	            mov rax, qword [0x04001973] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001973	          0x8b4010	            mov eax, dword [rax + 0x10] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001976	          0x83e802	                              sub eax, 2	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001979	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400197f	            0x7f4b	                            jg 0x40019cc	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001981	    0x488b05000000	            mov rax, qword [0x04001988] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001988	    0x488b15000000	            mov rdx, qword [0x0400198f] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400198f	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001992	             0x1d2	                            add edx, edx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001994	          0x895010	             mov dword [rax + 0x10], edx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001997	    0x4c8b3d000000	            mov r15, qword [0x0400199e] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400199e	    0x488b05000000	            mov rax, qword [0x040019a5] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019a5	          0x8b4010	            mov eax, dword [rax + 0x10] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019a8	            0x4898	                                    cdqe	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019aa	    0x488d14850000	                        lea rdx, [rax*4]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019b2	    0x488b05000000	            mov rax, qword [0x040019b9] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019b9	        0x488b4008	                mov rax, qword [rax + 8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019bd	          0x4889d6	                            mov rsi, rdx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019c0	          0x4889c7	                            mov rdi, rax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019c3	      0xe800000000	                          call 0x40019c8	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019c8	        0x49894708	                mov qword [r15 + 8], rax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019cc	    0x488b05000000	            mov rax, qword [0x040019d3] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019d3	        0x488b4008	                mov rax, qword [rax + 8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019d7	    0x838548ffffff	               add dword [rbp - 0xb8], 1	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019de	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019e4	          0x4863d2	                         movsxd rdx, edx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019e7	        0x48c1e202	                              shl rdx, 2	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019eb	          0x4801d0	                            add rax, rdx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019ee	            0x8918	                    mov dword [rax], ebx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019f0	    0x488b05000000	            mov rax, qword [0x040019f7] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019f7	          0x8b4020	            mov eax, dword [rax + 0x20] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019fa	          0x83e801	                              sub eax, 1	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40019fd	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a03	            0x7f4b	                            jg 0x4001a50	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a05	    0x488b05000000	            mov rax, qword [0x04001a0c] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a0c	    0x488b15000000	            mov rdx, qword [0x04001a13] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a13	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a16	             0x1d2	                            add edx, edx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a18	          0x895020	             mov dword [rax + 0x20], edx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a1b	    0x4c8b3d000000	            mov r15, qword [0x04001a22] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a22	    0x488b05000000	            mov rax, qword [0x04001a29] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a29	          0x8b4020	            mov eax, dword [rax + 0x20] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a2c	            0x4898	                                    cdqe	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a2e	    0x488d14850000	                        lea rdx, [rax*4]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a36	    0x488b05000000	            mov rax, qword [0x04001a3d] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a3d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a41	          0x4889d6	                            mov rsi, rdx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a44	          0x4889c7	                            mov rdi, rax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a47	      0xe800000000	                          call 0x4001a4c	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a4c	        0x49894718	             mov qword [r15 + 0x18], rax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a50	    0x488b05000000	            mov rax, qword [0x04001a57] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a57	        0x488b4018	            mov rax, qword [rax + 0x18] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a5b	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a61	          0x4863d2	                         movsxd rdx, edx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a64	        0x48c1e202	                              shl rdx, 2	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a68	          0x4801c2	                            add rdx, rax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a6b	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a71	            0x8902	                    mov dword [rdx], eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a73	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a7d	        0x4183c501	                             add r13d, 1	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a81	    0x443bad5cffff	            cmp r13d, dword [rbp - 0xa4]	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a88	     0xf8cc5feffff	                            jl 0x4001953	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4001a8e	      0xe93c010000	                           jmp 0x4001bcf	       863	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x4001a93	            0x89d8	                            mov eax, ebx	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001a95	          0x8d5801	                      lea ebx, [rax + 1]	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001a98	            0x4898	                                    cdqe	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001a9a	          0x4c01e0	                            add rax, r12	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001a9d	          0x4489ea	                           mov edx, r13d	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001aa0	            0x8810	                      mov byte [rax], dl	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001aa2	    0x83854cffffff	               add dword [rbp - 0xb4], 1	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001aa9	    0x8b0500000000	            mov eax, dword [0x04001aaf] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001aaf	    0x39854cffffff	            cmp dword [rbp - 0xb4], eax 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ab5	     0xf8c14010000	                            jl 0x4001bcf	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001abb	    0x488b05000000	            mov rax, qword [0x04001ac2] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ac2	          0x8b4010	            mov eax, dword [rax + 0x10] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ac5	          0x83e802	                              sub eax, 2	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ac8	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ace	            0x7f4b	                            jg 0x4001b1b	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ad0	    0x488b05000000	            mov rax, qword [0x04001ad7] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ad7	    0x488b15000000	            mov rdx, qword [0x04001ade] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ade	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ae1	             0x1d2	                            add edx, edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ae3	          0x895010	             mov dword [rax + 0x10], edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ae6	    0x4c8b2d000000	            mov r13, qword [0x04001aed] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001aed	    0x488b05000000	            mov rax, qword [0x04001af4] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001af4	          0x8b4010	            mov eax, dword [rax + 0x10] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001af7	            0x4898	                                    cdqe	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001af9	    0x488d14850000	                        lea rdx, [rax*4]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b01	    0x488b05000000	            mov rax, qword [0x04001b08] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b08	        0x488b4008	                mov rax, qword [rax + 8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b0c	          0x4889d6	                            mov rsi, rdx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b0f	          0x4889c7	                            mov rdi, rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b12	      0xe800000000	                          call 0x4001b17	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b17	        0x49894508	                mov qword [r13 + 8], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b1b	    0x488b05000000	            mov rax, qword [0x04001b22] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b22	        0x488b4008	                mov rax, qword [rax + 8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b26	    0x838548ffffff	               add dword [rbp - 0xb8], 1	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b2d	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b33	          0x4863d2	                         movsxd rdx, edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b36	        0x48c1e202	                              shl rdx, 2	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b3a	          0x4801d0	                            add rax, rdx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b3d	            0x8918	                    mov dword [rax], ebx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b3f	    0x488b05000000	            mov rax, qword [0x04001b46] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b46	          0x8b4020	            mov eax, dword [rax + 0x20] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b49	          0x83e801	                              sub eax, 1	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b4c	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b52	            0x7f4b	                            jg 0x4001b9f	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b54	    0x488b05000000	            mov rax, qword [0x04001b5b] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b5b	    0x488b15000000	            mov rdx, qword [0x04001b62] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b62	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b65	             0x1d2	                            add edx, edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b67	          0x895020	             mov dword [rax + 0x20], edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b6a	    0x4c8b2d000000	            mov r13, qword [0x04001b71] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b71	    0x488b05000000	            mov rax, qword [0x04001b78] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b78	          0x8b4020	            mov eax, dword [rax + 0x20] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b7b	            0x4898	                                    cdqe	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b7d	    0x488d14850000	                        lea rdx, [rax*4]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b85	    0x488b05000000	            mov rax, qword [0x04001b8c] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b8c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b90	          0x4889d6	                            mov rsi, rdx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b93	          0x4889c7	                            mov rdi, rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b96	      0xe800000000	                          call 0x4001b9b	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b9b	        0x49894518	             mov qword [r13 + 0x18], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001b9f	    0x488b05000000	            mov rax, qword [0x04001ba6] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001ba6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001baa	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001bb0	          0x4863d2	                         movsxd rdx, edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001bb3	        0x48c1e202	                              shl rdx, 2	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001bb7	          0x4801c2	                            add rdx, rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001bba	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001bc0	            0x8902	                    mov dword [rdx], eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001bc2	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001bcc	            0xeb01	                           jmp 0x4001bcf	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4001bce	              0x90	                                     nop	       794	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4001bcf	      0xe800000000	                          call 0x4001bd4	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001bd4	        0x4883f801	                              cmp rax, 1	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001bd8	            0x764b	                           jbe 0x4001c25	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001bda	    0x8b0500000000	            mov eax, dword [0x04001be0] 	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001be0	            0x85c0	                           test eax, eax	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001be2	            0x7541	                           jne 0x4001c25	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001be4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       900	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001be8	            0x89c2	                            mov edx, eax	       900	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001bea	          0x4489f0	                           mov eax, r14d	       900	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001bed	             0x1d0	                            add eax, edx	       900	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001bef	          0x4189c6	                           mov r14d, eax	       900	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4001bf2	    0x8b0500000000	            mov eax, dword [0x04001bf8] 	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001bf8	          0x4429f0	                           sub eax, r14d	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001bfb	          0x4863d0	                         movsxd rdx, eax	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001bfe	    0x488b0d000000	            mov rcx, qword [0x04001c05] 	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001c05	          0x4963c6	                        movsxd rax, r14d	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001c08	        0x488d3401	                    lea rsi, [rcx + rax]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001c0c	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001c10	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001c17	          0x4889c7	                            mov rdi, rax	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001c1a	      0xe800000000	                          call 0x4001c1f	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001c1f	        0x488945a8	             mov qword [rbp - 0x58], rax	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001c23	            0xeb04	                           jmp 0x4001c29	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_34
0x4001c25	        0x4183c601	                             add r14d, 1	       905	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_17
0x4001c29	    0x8b0500000000	            mov eax, dword [0x04001c2f] 	       745	display.c	FUNCTION_2	WHILE_3
0x4001c2f	          0x4139c6	                           cmp r14d, eax	       745	display.c	FUNCTION_2	WHILE_3
0x4001c32	     0xf8c72f2ffff	                            jl 0x4000eaa	       745	display.c	FUNCTION_2	WHILE_3
0x4001c38	            0xeb01	                           jmp 0x4001c3b	       745	display.c	FUNCTION_2	WHILE_3
0x4001c3a	              0x90	                                     nop	       765	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_7	IF_21
0x4001c3b	          0x4863c3	                         movsxd rax, ebx	       909	display.c	FUNCTION_2	ELSE_17
0x4001c3e	          0x4c01e0	                            add rax, r12	       909	display.c	FUNCTION_2	ELSE_17
0x4001c41	          0xc60000	                       mov byte [rax], 0	       909	display.c	FUNCTION_2	ELSE_17
0x4001c44	    0x8b0500000000	            mov eax, dword [0x04001c4a] 	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x4001c4a	            0x85c0	                           test eax, eax	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x4001c4c	            0x7912	                           jns 0x4001c60	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x4001c4e	    0x891d00000000	            mov dword [0x04001c54], ebx 	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4001c54	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       913	display.c	FUNCTION_2	ELSE_17	IF_36
0x4001c5a	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       913	display.c	FUNCTION_2	ELSE_17	IF_36
0x4001c60	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       916	display.c	FUNCTION_2
0x4001c66	          0x894580	             mov dword [rbp - 0x80], eax	       916	display.c	FUNCTION_2
0x4001c69	          0x8b4580	             mov eax, dword [rbp - 0x80]	       916	display.c	FUNCTION_2
0x4001c6c	    0x898570ffffff	             mov dword [rbp - 0x90], eax	       916	display.c	FUNCTION_2
0x4001c72	    0x488b05000000	            mov rax, qword [0x04001c79] 	       917	display.c	FUNCTION_2
0x4001c79	          0x8b4010	            mov eax, dword [rax + 0x10] 	       917	display.c	FUNCTION_2
0x4001c7c	          0x83e802	                              sub eax, 2	       917	display.c	FUNCTION_2
0x4001c7f	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       917	display.c	FUNCTION_2
0x4001c85	            0x7f4b	                            jg 0x4001cd2	       917	display.c	FUNCTION_2
0x4001c87	    0x488b05000000	            mov rax, qword [0x04001c8e] 	       917	display.c	FUNCTION_2
0x4001c8e	    0x488b15000000	            mov rdx, qword [0x04001c95] 	       917	display.c	FUNCTION_2
0x4001c95	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       917	display.c	FUNCTION_2
0x4001c98	             0x1d2	                            add edx, edx	       917	display.c	FUNCTION_2
0x4001c9a	          0x895010	             mov dword [rax + 0x10], edx	       917	display.c	FUNCTION_2
0x4001c9d	    0x4c8b2d000000	            mov r13, qword [0x04001ca4] 	       917	display.c	FUNCTION_2
0x4001ca4	    0x488b05000000	            mov rax, qword [0x04001cab] 	       917	display.c	FUNCTION_2
0x4001cab	          0x8b4010	            mov eax, dword [rax + 0x10] 	       917	display.c	FUNCTION_2
0x4001cae	            0x4898	                                    cdqe	       917	display.c	FUNCTION_2
0x4001cb0	    0x488d14850000	                        lea rdx, [rax*4]	       917	display.c	FUNCTION_2
0x4001cb8	    0x488b05000000	            mov rax, qword [0x04001cbf] 	       917	display.c	FUNCTION_2
0x4001cbf	        0x488b4008	                mov rax, qword [rax + 8]	       917	display.c	FUNCTION_2
0x4001cc3	          0x4889d6	                            mov rsi, rdx	       917	display.c	FUNCTION_2
0x4001cc6	          0x4889c7	                            mov rdi, rax	       917	display.c	FUNCTION_2
0x4001cc9	      0xe800000000	                          call 0x4001cce	       917	display.c	FUNCTION_2
0x4001cce	        0x49894508	                mov qword [r13 + 8], rax	       917	display.c	FUNCTION_2
0x4001cd2	    0x488b05000000	            mov rax, qword [0x04001cd9] 	       918	display.c	FUNCTION_2
0x4001cd9	        0x488b4008	                mov rax, qword [rax + 8]	       918	display.c	FUNCTION_2
0x4001cdd	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       918	display.c	FUNCTION_2
0x4001ce3	          0x4863d2	                         movsxd rdx, edx	       918	display.c	FUNCTION_2
0x4001ce6	        0x4883c201	                              add rdx, 1	       918	display.c	FUNCTION_2
0x4001cea	        0x48c1e202	                              shl rdx, 2	       918	display.c	FUNCTION_2
0x4001cee	          0x4801d0	                            add rax, rdx	       918	display.c	FUNCTION_2
0x4001cf1	            0x8918	                    mov dword [rax], ebx	       918	display.c	FUNCTION_2
0x4001cf3	    0x448bad44ffff	            mov r13d, dword [rbp - 0xbc]	       919	display.c	FUNCTION_2
0x4001cfa	    0x8b0500000000	            mov eax, dword [0x04001d00] 	       933	display.c	FUNCTION_2	IF_37
0x4001d00	            0x85c0	                           test eax, eax	       933	display.c	FUNCTION_2	IF_37
0x4001d02	     0xf85df060000	                           jne 0x40023e7	       933	display.c	FUNCTION_2	IF_37
0x4001d08	    0x488b05000000	            mov rax, qword [0x04001d0f] 	       933	display.c	FUNCTION_2	IF_37
0x4001d0f	          0x4885c0	                           test rax, rax	       933	display.c	FUNCTION_2	IF_37
0x4001d12	     0xf84cf060000	                            je 0x40023e7	       933	display.c	FUNCTION_2	IF_37
0x4001d18	    0x488b05000000	            mov rax, qword [0x04001d1f] 	       933	display.c	FUNCTION_2	IF_37
0x4001d1f	           0xfb600	                   movzx eax, byte [rax]	       933	display.c	FUNCTION_2	IF_37
0x4001d22	            0x84c0	                             test al, al	       933	display.c	FUNCTION_2	IF_37
0x4001d24	     0xf84bd060000	                            je 0x40023e7	       933	display.c	FUNCTION_2	IF_37
0x4001d2a	    0x8b0500000000	            mov eax, dword [0x04001d30] 	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4001d30	            0x85c0	                           test eax, eax	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4001d32	            0x740e	                            je 0x4001d42	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4001d34	    0x8b0500000000	            mov eax, dword [0x04001d3a] 	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4001d3a	            0x85c0	                           test eax, eax	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4001d3c	     0xf84310a0000	                            je 0x4002773	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4001d42	    0xc70500000000	               mov dword [0x04001d4c], 0	       939	display.c	FUNCTION_2	IF_37	IF_38
0x4001d4c	    0x8b0500000000	            mov eax, dword [0x04001d52] 	       944	display.c	FUNCTION_2	IF_37	IF_38	IF_39
0x4001d52	            0x39c3	                            cmp ebx, eax	       944	display.c	FUNCTION_2	IF_37	IF_38	IF_39
0x4001d54	            0x7c37	                            jl 0x4001d8d	       944	display.c	FUNCTION_2	IF_37	IF_38	IF_39
0x4001d56	      0xe800000000	                          call 0x4001d5b	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4001d5b	        0x4883f801	                              cmp rax, 1	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4001d5f	            0x7623	                           jbe 0x4001d84	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4001d61	    0x8b0500000000	            mov eax, dword [0x04001d67] 	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4001d67	            0x85c0	                           test eax, eax	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4001d69	            0x7519	                           jne 0x4001d84	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4001d6b	    0x8b0500000000	            mov eax, dword [0x04001d71] 	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_35
0x4001d71	      0xba00000000	                              mov edx, 0	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_35
0x4001d76	            0x89c6	                            mov esi, eax	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_35
0x4001d78	          0x4c89e7	                            mov rdi, r12	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_35
0x4001d7b	      0xe800000000	                          call 0x4001d80	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_35
0x4001d80	            0x89c3	                            mov ebx, eax	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_35
0x4001d82	            0xeb09	                           jmp 0x4001d8d	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_35
0x4001d84	    0x8b0500000000	            mov eax, dword [0x04001d8a] 	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x4001d8a	          0x8d58ff	                      lea ebx, [rax - 1]	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x4001d8d	    0x41bc00000000	                             mov r12d, 0	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001d93	      0xe9c6020000	                           jmp 0x400205e	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001d98	    0x8b0500000000	            mov eax, dword [0x04001d9e] 	       977	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001d9e	          0x894584	             mov dword [rbp - 0x7c], eax	       977	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001da1	    0xc70500000000	               mov dword [0x04001dab], 0	       978	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dab	    0x488b05000000	            mov rax, qword [0x04001db2] 	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001db2	        0x488b4008	                mov rax, qword [rax + 8]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001db6	          0x4963d4	                        movsxd rdx, r12d	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001db9	        0x4883c201	                              add rdx, 1	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dbd	        0x48c1e202	                              shl rdx, 2	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dc1	          0x4801d0	                            add rax, rdx	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dc4	            0x8b10	                    mov edx, dword [rax]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dc6	    0x488b05000000	            mov rax, qword [0x04001dcd] 	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dcd	        0x488b4008	                mov rax, qword [rax + 8]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dd1	          0x4963cc	                        movsxd rcx, r12d	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dd4	        0x48c1e102	                              shl rcx, 2	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dd8	          0x4801c8	                            add rax, rcx	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001ddb	            0x8b00	                    mov eax, dword [rax]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001ddd	            0x29c2	                            sub edx, eax	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001ddf	          0x4189d0	                            mov r8d, edx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001de2	    0x8b0500000000	            mov eax, dword [0x04001de8] 	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001de8	          0x4139c4	                           cmp r12d, eax	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001deb	            0x7f36	                            jg 0x4001e23	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001ded	    0x488b05000000	            mov rax, qword [0x04001df4] 	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001df4	        0x488b4008	                mov rax, qword [rax + 8]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001df8	          0x4963d4	                        movsxd rdx, r12d	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dfb	        0x4883c201	                              add rdx, 1	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001dff	        0x48c1e202	                              shl rdx, 2	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001e03	          0x4801d0	                            add rax, rdx	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001e06	            0x8b10	                    mov edx, dword [rax]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001e08	    0x488b05000000	            mov rax, qword [0x04001e0f] 	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001e0f	        0x488b4008	                mov rax, qword [rax + 8]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001e13	          0x4963cc	                        movsxd rcx, r12d	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001e16	        0x48c1e102	                              shl rcx, 2	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001e1a	          0x4801c8	                            add rax, rcx	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001e1d	            0x8b00	                    mov eax, dword [rax]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4001e1f	            0x29c2	                            sub edx, eax	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e21	            0xeb05	                           jmp 0x4001e28	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e23	      0xba00000000	                              mov edx, 0	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e28	    0x488b05000000	            mov rax, qword [0x04001e2f] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e2f	          0x488b08	                    mov rcx, qword [rax]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e32	    0x488b05000000	            mov rax, qword [0x04001e39] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e39	        0x488b4008	                mov rax, qword [rax + 8]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e3d	          0x4963f4	                        movsxd rsi, r12d	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e40	        0x48c1e602	                              shl rsi, 2	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e44	          0x4801f0	                            add rax, rsi	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e47	            0x8b00	                    mov eax, dword [rax]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e49	            0x4898	                                    cdqe	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e4b	        0x488d3401	                    lea rsi, [rcx + rax]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e4f	    0x8b0500000000	            mov eax, dword [0x04001e55] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e55	          0x4139c4	                           cmp r12d, eax	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e58	            0x7f28	                            jg 0x4001e82	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e5a	    0x488b05000000	            mov rax, qword [0x04001e61] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e61	          0x488b08	                    mov rcx, qword [rax]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e64	    0x488b05000000	            mov rax, qword [0x04001e6b] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e6b	        0x488b4008	                mov rax, qword [rax + 8]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e6f	          0x4963fc	                        movsxd rdi, r12d	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e72	        0x48c1e702	                              shl rdi, 2	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e76	          0x4801f8	                            add rax, rdi	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e79	            0x8b00	                    mov eax, dword [rax]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e7b	            0x4898	                                    cdqe	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e7d	          0x4801c8	                            add rax, rcx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e80	            0xeb05	                           jmp 0x4001e87	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e82	      0xb800000000	                              mov eax, 0	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e87	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e8d	          0x4189c9	                            mov r9d, ecx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e90	            0x89d1	                            mov ecx, edx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e92	          0x4489e2	                           mov edx, r12d	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e95	          0x4889c7	                            mov rdi, rax	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e98	      0xe87f090000	                    call sym.update_line	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_36
0x4001e9d	          0x4585e4	                         test r12d, r12d	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ea0	            0x7560	                           jne 0x4001f02	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ea2	      0xe800000000	                          call 0x4001ea7	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ea7	        0x4883f801	                              cmp rax, 1	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001eab	            0x7655	                           jbe 0x4001f02	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ead	    0x8b0500000000	            mov eax, dword [0x04001eb3] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001eb3	            0x85c0	                           test eax, eax	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001eb5	            0x754b	                           jne 0x4001f02	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001eb7	    0x8b0500000000	            mov eax, dword [0x04001ebd] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ebd	            0x85c0	                           test eax, eax	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ebf	            0x7541	                           jne 0x4001f02	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ec1	    0x8b0500000000	            mov eax, dword [0x04001ec7] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ec7	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001eca	            0x7436	                            je 0x4001f02	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ecc	    0x8b1500000000	            mov edx, dword [0x04001ed2] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ed2	    0x8b0500000000	            mov eax, dword [0x04001ed8] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ed8	            0x39c2	                            cmp edx, eax	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001eda	            0x7e26	                           jle 0x4001f02	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001edc	    0x8b0500000000	            mov eax, dword [0x04001ee2] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ee2	          0x394584	            cmp dword [rbp - 0x7c], eax 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ee5	            0x7d1b	                           jge 0x4001f02	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ee7	    0x8b1500000000	            mov edx, dword [0x04001eed] 	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001eed	    0x8b0500000000	            mov eax, dword [0x04001ef3] 	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ef3	            0x29c2	                            sub edx, eax	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ef5	            0x89d0	                            mov eax, edx	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001ef7	    0x890500000000	            mov dword [0x04001efd], eax 	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001efd	      0xe983000000	                           jmp 0x4001f85	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4001f02	    0x8b0500000000	            mov eax, dword [0x04001f08] 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f08	          0x4139c4	                           cmp r12d, eax	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f0b	            0x7578	                           jne 0x4001f85	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f0d	    0x8b1500000000	            mov edx, dword [0x04001f13] 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f13	    0x8b0500000000	            mov eax, dword [0x04001f19] 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f19	            0x39c2	                            cmp edx, eax	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f1b	            0x7e68	                           jle 0x4001f85	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f1d	      0xe800000000	                          call 0x4001f22	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f22	        0x4883f801	                              cmp rax, 1	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f26	            0x765d	                           jbe 0x4001f85	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f28	    0x8b0500000000	            mov eax, dword [0x04001f2e] 	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f2e	            0x85c0	                           test eax, eax	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f30	            0x7553	                           jne 0x4001f85	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f32	    0x8b0500000000	            mov eax, dword [0x04001f38] 	       998	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f38	            0x85c0	                           test eax, eax	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f3a	            0x7549	                           jne 0x4001f85	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f3c	    0x8b0500000000	            mov eax, dword [0x04001f42] 	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f42	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	       998	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f45	            0x743e	                            je 0x4001f85	       998	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f47	    0x8b1500000000	            mov edx, dword [0x04001f4d] 	      1000	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f4d	    0x8b0500000000	            mov eax, dword [0x04001f53] 	      1000	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f53	            0x29c2	                            sub edx, eax	      1000	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f55	    0x8b0500000000	            mov eax, dword [0x04001f5b] 	      1000	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f5b	            0x29c2	                            sub edx, eax	      1000	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f5d	    0x8b0500000000	            mov eax, dword [0x04001f63] 	      1000	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f63	            0x39c2	                            cmp edx, eax	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f65	            0x7d1e	                           jge 0x4001f85	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f67	    0x8b0500000000	            mov eax, dword [0x04001f6d] 	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f6d	    0x8b0d00000000	            mov ecx, dword [0x04001f73] 	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f73	    0x8b1500000000	            mov edx, dword [0x04001f79] 	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f79	            0x29d1	                            sub ecx, edx	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f7b	            0x89ca	                            mov edx, ecx	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f7d	            0x29d0	                            sub eax, edx	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f7f	    0x890500000000	            mov dword [0x04001f85], eax 	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4001f85	          0x4585e4	                         test r12d, r12d	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001f88	     0xf859c000000	                           jne 0x400202a	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001f8e	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001f95	     0xf858f000000	                           jne 0x400202a	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001f9b	    0x8b0500000000	            mov eax, dword [0x04001fa1] 	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001fa1	            0x39d8	                            cmp eax, ebx	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001fa3	     0xf8581000000	                           jne 0x400202a	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001fa9	    0x8b1500000000	            mov edx, dword [0x04001faf] 	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001faf	    0x8b0500000000	            mov eax, dword [0x04001fb5] 	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001fb5	            0x39c2	                            cmp edx, eax	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001fb7	            0x7e71	                           jle 0x400202a	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001fb9	    0x8b1500000000	            mov edx, dword [0x04001fbf] 	      1012	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001fbf	    0x8b0500000000	            mov eax, dword [0x04001fc5] 	      1012	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001fc5	            0x39c2	                            cmp edx, eax	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001fc7	            0x7d61	                           jge 0x400202a	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4001fc9	      0xe800000000	                          call 0x4001fce	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001fce	        0x4883f801	                              cmp rax, 1	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001fd2	            0x7622	                           jbe 0x4001ff6	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001fd4	    0x8b0500000000	            mov eax, dword [0x04001fda] 	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001fda	            0x85c0	                           test eax, eax	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001fdc	            0x7518	                           jne 0x4001ff6	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001fde	    0x8b1500000000	            mov edx, dword [0x04001fe4] 	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001fe4	    0x8b0500000000	            mov eax, dword [0x04001fea] 	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001fea	            0x29c2	                            sub edx, eax	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001fec	            0x89d0	                            mov eax, edx	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001fee	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001ff4	            0xeb1e	                           jmp 0x4002014	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4001ff6	    0x8b1500000000	            mov edx, dword [0x04001ffc] 	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4001ffc	    0x8b0500000000	            mov eax, dword [0x04002002] 	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4002002	             0x1c2	                            add edx, eax	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4002004	    0x8b0500000000	            mov eax, dword [0x0400200a] 	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x400200a	            0x29c2	                            sub edx, eax	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x400200c	            0x89d0	                            mov eax, edx	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x400200e	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4002014	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      1018	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_45
0x400201b	            0x740d	                            je 0x400202a	      1018	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_45
0x400201d	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1019	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	CALL_37
0x4002023	            0x89c7	                            mov edi, eax	      1019	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	CALL_37
0x4002025	      0xe800000000	                          call 0x400202a	      1019	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	CALL_37
0x400202a	          0x4585e4	                         test r12d, r12d	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x400202d	            0x752b	                           jne 0x400205a	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x400202f	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4002036	            0x7e10	                           jle 0x4002048	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4002038	    0x488b05000000	            mov rax, qword [0x0400203f] 	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x400203f	        0x488b4008	                mov rax, qword [rax + 8]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4002043	          0x8b4004	                mov eax, dword [rax + 4]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4002046	            0xeb0c	                           jmp 0x4002054	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4002048	    0x8b0500000000	            mov eax, dword [0x0400204e] 	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x400204e	            0x89de	                            mov esi, ebx	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4002050	            0x29c6	                            sub esi, eax	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4002052	            0x89f0	                            mov eax, esi	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4002054	    0x890500000000	            mov dword [0x0400205a], eax 	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x400205a	        0x4183c401	                             add r12d, 1	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x400205e	    0x443ba570ffff	            cmp r12d, dword [rbp - 0x90]	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4002065	     0xf8e2dfdffff	                           jle 0x4001d98	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x400206b	    0x8b0500000000	            mov eax, dword [0x04002071] 	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x4002071	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x4002077	            0x7e7a	                           jle 0x40020f3	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x4002079	            0xeb6d	                           jmp 0x40020e8	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x400207b	    0x488b05000000	            mov rax, qword [0x04002082] 	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4002082	          0x488b10	                    mov rdx, qword [rax]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4002085	    0x488b05000000	            mov rax, qword [0x0400208c] 	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x400208c	        0x488b4008	                mov rax, qword [rax + 8]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4002090	          0x4963cc	                        movsxd rcx, r12d	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4002093	        0x48c1e102	                              shl rcx, 2	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4002097	          0x4801c8	                            add rax, rcx	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x400209a	            0x8b00	                    mov eax, dword [rax]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x400209c	            0x4898	                                    cdqe	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x400209e	          0x4801d0	                            add rax, rdx	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40020a1	        0x488945b0	             mov qword [rbp - 0x50], rax	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40020a5	          0x4489e7	                           mov edi, r12d	      1048	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_38
0x40020a8	      0xe800000000	                          call 0x40020ad	      1048	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_38
0x40020ad	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1049	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40020b1	          0x4889c6	                            mov rsi, rax	      1049	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40020b4	      0xbf00000000	                              mov edi, 0	      1049	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40020b9	      0xe800000000	                          call 0x40020be	      1049	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40020be	    0x8b0500000000	            mov eax, dword [0x040020c4] 	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_41
0x40020c4	          0x4139c4	                           cmp r12d, eax	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x40020c7	            0x750e	                           jne 0x40020d7	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x40020c9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_41
0x40020cd	          0x4889c7	                            mov rdi, rax	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_41
0x40020d0	      0xe800000000	                          call 0x40020d5	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_41
0x40020d5	            0xeb06	                           jmp 0x40020dd	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_41
0x40020d7	    0x8b0500000000	            mov eax, dword [0x040020dd] 	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x40020dd	            0x89c7	                            mov edi, eax	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x40020df	      0xe800000000	                          call 0x40020e4	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x40020e4	        0x4183c401	                             add r12d, 1	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40020e8	    0x8b0500000000	            mov eax, dword [0x040020ee] 	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40020ee	          0x4139c4	                           cmp r12d, eax	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40020f1	            0x7e88	                           jle 0x400207b	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40020f3	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      1054	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x40020f9	    0x890500000000	            mov dword [0x040020ff], eax 	      1054	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x40020ff	    0x8b0500000000	            mov eax, dword [0x04002105] 	      1058	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x4002105	          0x4439e8	                           cmp eax, r13d	      1058	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x4002108	           0xf95c0	                                setne al	      1058	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x400210b	           0xfb6c0	                           movzx eax, al	      1058	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x400210e	          0x894588	             mov dword [rbp - 0x78], eax	      1058	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x4002111	        0x837d8800	               cmp dword [rbp - 0x78], 0	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x4002115	            0x7440	                            je 0x4002157	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x4002117	          0x4489ef	                           mov edi, r13d	      1061	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	CALL_42
0x400211a	      0xe800000000	                          call 0x400211f	      1061	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	CALL_42
0x400211f	      0xe800000000	                          call 0x4002124	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002124	        0x4883f801	                              cmp rax, 1	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002128	            0x740a	                            je 0x4002134	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400212a	    0x8b0500000000	            mov eax, dword [0x04002130] 	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002130	            0x85c0	                           test eax, eax	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002132	            0x7423	                            je 0x4002157	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002134	          0x4585ed	                         test r13d, r13d	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002137	            0x751e	                           jne 0x4002157	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002139	    0x8b0500000000	            mov eax, dword [0x0400213f] 	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400213f	            0x85c0	                           test eax, eax	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002141	            0x7414	                            je 0x4002157	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002143	    0x8b1500000000	            mov edx, dword [0x04002149] 	      1067	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002149	    0x8b0500000000	            mov eax, dword [0x0400214f] 	      1067	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400214f	             0x1d0	                            add eax, edx	      1067	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002151	    0x890500000000	            mov dword [0x04002157], eax 	      1067	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4002157	    0x8b1500000000	            mov edx, dword [0x0400215d] 	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x400215d	    0x8b0500000000	            mov eax, dword [0x04002163] 	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x4002163	             0x1d0	                            add eax, edx	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x4002165	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x400216b	          0x4585ed	                         test r13d, r13d	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400216e	     0xf8517010000	                           jne 0x400228b	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4002174	    0x8b0500000000	            mov eax, dword [0x0400217a] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400217a	            0x85c0	                           test eax, eax	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400217c	     0xf8e09010000	                           jle 0x400228b	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4002182	    0x8b0500000000	            mov eax, dword [0x04002188] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4002188	            0x85c0	                           test eax, eax	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400218a	     0xf8efb000000	                           jle 0x400228b	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4002190	      0xe800000000	                          call 0x4002195	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4002195	        0x4883f801	                              cmp rax, 1	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4002199	            0x760a	                           jbe 0x40021a5	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400219b	    0x8b0500000000	            mov eax, dword [0x040021a1] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021a1	            0x85c0	                           test eax, eax	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021a3	            0x740b	                            je 0x40021b0	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021a5	    0x8b0500000000	            mov eax, dword [0x040021ab] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021ab	          0x83c001	                              add eax, 1	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021ae	            0xeb06	                           jmp 0x40021b6	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021b0	    0x8b0500000000	            mov eax, dword [0x040021b6] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021b6	    0x8b1500000000	            mov edx, dword [0x040021bc] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021bc	            0x39d0	                            cmp eax, edx	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021be	     0xf8ec7000000	                           jle 0x400228b	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021c4	    0x488b05000000	            mov rax, qword [0x040021cb] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021cb	          0x4885c0	                           test rax, rax	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021ce	     0xf84b7000000	                            je 0x400228b	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40021d4	    0x488b05000000	            mov rax, qword [0x040021db] 	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x40021db	          0x4885c0	                           test rax, rax	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x40021de	            0x7419	                            je 0x40021f9	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x40021e0	    0x488b05000000	            mov rax, qword [0x040021e7] 	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x40021e7	      0xba00000000	                              mov edx, 0	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x40021ec	      0xbe01000000	                              mov esi, 1	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x40021f1	          0x4889c7	                            mov rdi, rax	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x40021f4	      0xe800000000	                          call 0x40021f9	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x40021f9	    0x8b0500000000	            mov eax, dword [0x040021ff] 	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x40021ff	            0x85c0	                           test eax, eax	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x4002201	            0x740f	                            je 0x4002212	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x4002203	      0xbe01000000	                              mov esi, 1	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x4002208	      0xbf00000000	                              mov edi, 0	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x400220d	      0xe800000000	                          call 0x4002212	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x4002212	    0x488b05000000	            mov rax, qword [0x04002219] 	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_46
0x4002219	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_46
0x400221f	            0x89d6	                            mov esi, edx	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_46
0x4002221	          0x4889c7	                            mov rdi, rax	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_46
0x4002224	      0xe800000000	                          call 0x4002229	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_46
0x4002229	      0xe800000000	                          call 0x400222e	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400222e	        0x4883f801	                              cmp rax, 1	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4002232	            0x7643	                           jbe 0x4002277	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4002234	    0x8b0500000000	            mov eax, dword [0x0400223a] 	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400223a	            0x85c0	                           test eax, eax	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400223c	            0x7539	                           jne 0x4002277	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400223e	    0x488b05000000	            mov rax, qword [0x04002245] 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4002245	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400224b	      0xb901000000	                              mov ecx, 1	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4002250	      0xbe00000000	                              mov esi, 0	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4002255	          0x4889c7	                            mov rdi, rax	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4002258	      0xe856300000	                  call sym._rl_col_width	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400225d	            0x89c2	                            mov edx, eax	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400225f	    0x8b0500000000	            mov eax, dword [0x04002265] 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4002265	            0x29c2	                            sub edx, eax	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4002267	    0x8b0500000000	            mov eax, dword [0x0400226d] 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400226d	             0x1d0	                            add eax, edx	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400226f	    0x890500000000	            mov dword [0x04002275], eax 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4002275	            0xeb14	                           jmp 0x400228b	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4002277	    0x8b1500000000	            mov edx, dword [0x0400227d] 	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x400227d	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x4002283	             0x1d0	                            add eax, edx	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x4002285	    0x890500000000	            mov dword [0x0400228b], eax 	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x400228b	    0x488b05000000	            mov rax, qword [0x04002292] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4002292	        0x488b4008	                mov rax, qword [rax + 8]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4002296	          0x4963d5	                        movsxd rdx, r13d	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4002299	        0x48c1e202	                              shl rdx, 2	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x400229d	          0x4801d0	                            add rax, rdx	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40022a0	            0x8b00	                    mov eax, dword [rax]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40022a2	          0x89458c	             mov dword [rbp - 0x74], eax	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40022a5	    0x8b0500000000	            mov eax, dword [0x040022ab] 	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40022ab	          0x2b458c	             sub eax, dword [rbp - 0x74]	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40022ae	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40022b4	    0x8b0500000000	            mov eax, dword [0x040022ba] 	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x40022ba	            0x85c0	                           test eax, eax	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x40022bc	     0xf84b0000000	                            je 0x4002372	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x40022c2	          0x4585ed	                         test r13d, r13d	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x40022c5	     0xf85a7000000	                           jne 0x4002372	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x40022cb	    0x8b0500000000	            mov eax, dword [0x040022d1] 	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x40022d1	    0x398564ffffff	            cmp dword [rbp - 0x9c], eax 	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x40022d7	     0xf8d95000000	                           jge 0x4002372	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x40022dd	      0xe800000000	                          call 0x40022e2	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40022e2	        0x4883f801	                              cmp rax, 1	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40022e6	            0x7648	                           jbe 0x4002330	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40022e8	    0x8b0500000000	            mov eax, dword [0x040022ee] 	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40022ee	            0x85c0	                           test eax, eax	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40022f0	            0x753e	                           jne 0x4002330	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40022f2	    0x488b05000000	            mov rax, qword [0x040022f9] 	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40022f9	          0x488b10	                    mov rdx, qword [rax]	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40022fc	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40022ff	            0x4898	                                    cdqe	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4002301	        0x488d3c02	                    lea rdi, [rdx + rax]	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4002305	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x400230b	      0xb901000000	                              mov ecx, 1	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4002310	            0x89c2	                            mov edx, eax	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4002312	      0xbe00000000	                              mov esi, 0	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4002317	      0xe8972f0000	                  call sym._rl_col_width	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x400231c	            0x89c2	                            mov edx, eax	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x400231e	    0x8b0500000000	            mov eax, dword [0x04002324] 	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4002324	            0x29c2	                            sub edx, eax	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4002326	            0x89d0	                            mov eax, edx	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4002328	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x400232e	            0xeb0c	                           jmp 0x400233c	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4002330	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1120	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23
0x4002336	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      1120	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23
0x400233c	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4002343	            0x782d	                            js 0x4002372	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4002345	    0x8b0500000000	            mov eax, dword [0x0400234b] 	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x400234b	    0x3b8568ffffff	             cmp eax, dword [rbp - 0x98]	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4002351	            0x7e1f	                           jle 0x4002372	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4002353	    0x8b0500000000	            mov eax, dword [0x04002359] 	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_47
0x4002359	    0x2b8568ffffff	             sub eax, dword [rbp - 0x98]	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_47
0x400235f	            0x89c7	                            mov edi, eax	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_47
0x4002361	      0xe800000000	                          call 0x4002366	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_47
0x4002366	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      1124	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x400236c	    0x890500000000	            mov dword [0x04002372], eax 	      1124	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4002372	      0xe800000000	                          call 0x4002377	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4002377	        0x4883f801	                              cmp rax, 1	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x400237b	            0x7631	                           jbe 0x40023ae	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x400237d	    0x8b0500000000	            mov eax, dword [0x04002383] 	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4002383	            0x85c0	                           test eax, eax	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4002385	            0x7527	                           jne 0x40023ae	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4002387	    0x488b05000000	            mov rax, qword [0x0400238e] 	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_48
0x400238e	          0x488b10	                    mov rdx, qword [rax]	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_48
0x4002391	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_48
0x4002394	            0x4898	                                    cdqe	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_48
0x4002396	          0x4801c2	                            add rdx, rax	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_48
0x4002399	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_48
0x400239f	          0x4889d6	                            mov rsi, rdx	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_48
0x40023a2	            0x89c7	                            mov edi, eax	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_48
0x40023a4	      0xe800000000	                          call 0x40023a9	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_48
0x40023a9	      0xe9c5030000	                           jmp 0x4002773	       934	display.c	FUNCTION_2	IF_37
0x40023ae	    0x8b0500000000	            mov eax, dword [0x040023b4] 	      1134	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023b4	    0x398564ffffff	            cmp dword [rbp - 0x9c], eax 	      1134	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023ba	     0xf84b3030000	                            je 0x4002773	      1134	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023c0	    0x488b05000000	            mov rax, qword [0x040023c7] 	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023c7	          0x488b10	                    mov rdx, qword [rax]	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023ca	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023cd	            0x4898	                                    cdqe	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023cf	          0x4801c2	                            add rdx, rax	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023d2	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023d8	          0x4889d6	                            mov rsi, rdx	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023db	            0x89c7	                            mov edi, eax	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023dd	      0xe800000000	                          call 0x40023e2	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x40023e2	      0xe98c030000	                           jmp 0x4002773	       934	display.c	FUNCTION_2	IF_37
0x40023e7	    0xc70500000000	               mov dword [0x040023f1], 0	      1144	display.c	FUNCTION_2	ELSE_25
0x40023f1	    0x8b1500000000	            mov edx, dword [0x040023f7] 	      1150	display.c	FUNCTION_2	ELSE_25
0x40023f7	    0x8b0500000000	            mov eax, dword [0x040023fd] 	      1150	display.c	FUNCTION_2	ELSE_25
0x40023fd	            0x29c2	                            sub edx, eax	      1150	display.c	FUNCTION_2	ELSE_25
0x40023ff	            0x89d0	                            mov eax, edx	      1150	display.c	FUNCTION_2	ELSE_25
0x4002401	          0x894590	             mov dword [rbp - 0x70], eax	      1150	display.c	FUNCTION_2	ELSE_25
0x4002404	    0x8b1500000000	            mov edx, dword [0x0400240a] 	      1151	display.c	FUNCTION_2	ELSE_25
0x400240a	    0x8b0500000000	            mov eax, dword [0x04002410] 	      1151	display.c	FUNCTION_2	ELSE_25
0x4002410	             0x1d0	                            add eax, edx	      1151	display.c	FUNCTION_2	ELSE_25
0x4002412	          0x894594	             mov dword [rbp - 0x6c], eax	      1151	display.c	FUNCTION_2	ELSE_25
0x4002415	    0x8b1500000000	            mov edx, dword [0x0400241b] 	      1154	display.c	FUNCTION_2	ELSE_25
0x400241b	    0x8b0500000000	            mov eax, dword [0x04002421] 	      1154	display.c	FUNCTION_2	ELSE_25
0x4002421	            0x85c0	                           test eax, eax	      1154	display.c	FUNCTION_2	ELSE_25
0x4002423	            0x7408	                            je 0x400242d	      1154	display.c	FUNCTION_2	ELSE_25
0x4002425	    0x8b0500000000	            mov eax, dword [0x0400242b] 	      1154	display.c	FUNCTION_2	ELSE_25
0x400242b	            0xeb06	                           jmp 0x4002433	      1154	display.c	FUNCTION_2	ELSE_25
0x400242d	    0x8b0500000000	            mov eax, dword [0x04002433] 	      1154	display.c	FUNCTION_2	ELSE_25
0x4002433	            0x29c2	                            sub edx, eax	      1154	display.c	FUNCTION_2	ELSE_25
0x4002435	            0x89d0	                            mov eax, edx	      1154	display.c	FUNCTION_2	ELSE_25
0x4002437	          0x894598	             mov dword [rbp - 0x68], eax	      1154	display.c	FUNCTION_2	ELSE_25
0x400243a	    0x8b0d00000000	            mov ecx, dword [0x04002440] 	      1155	display.c	FUNCTION_2	ELSE_25
0x4002440	      0xba56555555	                     mov edx, 0x55555556	      1155	display.c	FUNCTION_2	ELSE_25
0x4002445	            0x89c8	                            mov eax, ecx	      1155	display.c	FUNCTION_2	ELSE_25
0x4002447	            0xf7ea	                                imul edx	      1155	display.c	FUNCTION_2	ELSE_25
0x4002449	            0x89c8	                            mov eax, ecx	      1155	display.c	FUNCTION_2	ELSE_25
0x400244b	          0xc1f81f	                           sar eax, 0x1f	      1155	display.c	FUNCTION_2	ELSE_25
0x400244e	            0x29c2	                            sub edx, eax	      1155	display.c	FUNCTION_2	ELSE_25
0x4002450	            0x89d0	                            mov eax, edx	      1155	display.c	FUNCTION_2	ELSE_25
0x4002452	          0x89459c	             mov dword [rbp - 0x64], eax	      1155	display.c	FUNCTION_2	ELSE_25
0x4002455	    0x8b0500000000	            mov eax, dword [0x0400245b] 	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x400245b	          0x83e802	                              sub eax, 2	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x400245e	          0x3b4598	             cmp eax, dword [rbp - 0x68]	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x4002461	            0x7d57	                           jge 0x40024ba	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x4002463	    0x8b0500000000	            mov eax, dword [0x04002469] 	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x4002469	          0x8b559c	             mov edx, dword [rbp - 0x64]	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x400246c	             0x1d2	                            add edx, edx	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x400246e	            0x29d0	                            sub eax, edx	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x4002470	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x4002476	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1166	display.c	FUNCTION_2	ELSE_25	IF_60	IF_61
0x400247d	            0x790a	                           jns 0x4002489	      1166	display.c	FUNCTION_2	ELSE_25	IF_60	IF_61
0x400247f	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      1167	display.c	FUNCTION_2	ELSE_25	IF_60	IF_61
0x4002489	    0x8b0500000000	            mov eax, dword [0x0400248f] 	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x400248f	            0x85c0	                           test eax, eax	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4002491	     0xf848f000000	                            je 0x4002526	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4002497	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x400249e	     0xf8e82000000	                           jle 0x4002526	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40024a4	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40024aa	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40024ad	            0x7d77	                           jge 0x4002526	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40024af	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1171	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40024b2	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      1171	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40024b8	            0xeb6c	                           jmp 0x4002526	      1171	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40024ba	    0x8b0500000000	            mov eax, dword [0x040024c0] 	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x40024c0	          0x83e802	                              sub eax, 2	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x40024c3	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x40024c6	            0x7e0c	                           jle 0x40024d4	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x40024c8	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      1174	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x40024d2	            0xeb52	                           jmp 0x4002526	      1174	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x40024d4	        0x837d9800	               cmp dword [rbp - 0x68], 0	      1175	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x40024d8	            0x7f40	                            jg 0x400251a	      1175	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x40024da	    0x8b0500000000	            mov eax, dword [0x040024e0] 	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x40024e0	          0x83e801	                              sub eax, 1	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x40024e3	              0x99	                                     cdq	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x40024e4	          0xf77d9c	                 idiv dword [rbp - 0x64]	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x40024e7	         0xfaf459c	            imul eax, dword [rbp - 0x64]	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x40024eb	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x40024f1	    0x8b0500000000	            mov eax, dword [0x040024f7] 	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x40024f7	            0x85c0	                           test eax, eax	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x40024f9	            0x742b	                            je 0x4002526	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x40024fb	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4002502	            0x7e22	                           jle 0x4002526	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4002504	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x400250a	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x400250d	            0x7d17	                           jge 0x4002526	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x400250f	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1181	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4002512	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      1181	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4002518	            0xeb0c	                           jmp 0x4002526	      1181	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x400251a	    0x8b0500000000	            mov eax, dword [0x04002520] 	      1184	display.c	FUNCTION_2	ELSE_25	ELSE_28
0x4002520	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      1184	display.c	FUNCTION_2	ELSE_25	ELSE_28
0x4002526	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1188	display.c	FUNCTION_2	ELSE_25	IF_66
0x400252d	            0x7e0e	                           jle 0x400253d	      1188	display.c	FUNCTION_2	ELSE_25	IF_66
0x400252f	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4002535	            0x4898	                                    cdqe	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4002537	          0x4c01e0	                            add rax, r12	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x400253a	          0xc6003c	                    mov byte [rax], 0x3c	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x400253d	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1195	display.c	FUNCTION_2	ELSE_25
0x4002544	            0x7508	                           jne 0x400254e	      1195	display.c	FUNCTION_2	ELSE_25
0x4002546	    0x8b0500000000	            mov eax, dword [0x0400254c] 	      1195	display.c	FUNCTION_2	ELSE_25
0x400254c	            0xeb05	                           jmp 0x4002553	      1195	display.c	FUNCTION_2	ELSE_25
0x400254e	      0xb800000000	                              mov eax, 0	      1195	display.c	FUNCTION_2	ELSE_25
0x4002553	    0x8b956cffffff	             mov edx, dword [rbp - 0x94]	      1195	display.c	FUNCTION_2	ELSE_25
0x4002559	             0x1c2	                            add edx, eax	      1195	display.c	FUNCTION_2	ELSE_25
0x400255b	    0x8b0500000000	            mov eax, dword [0x04002561] 	      1195	display.c	FUNCTION_2	ELSE_25
0x4002561	             0x1d0	                            add eax, edx	      1195	display.c	FUNCTION_2	ELSE_25
0x4002563	          0x89459c	             mov dword [rbp - 0x64], eax	      1195	display.c	FUNCTION_2	ELSE_25
0x4002566	          0x395d9c	            cmp dword [rbp - 0x64], ebx 	      1196	display.c	FUNCTION_2	ELSE_25	IF_67
0x4002569	            0x7d0f	                           jge 0x400257a	      1196	display.c	FUNCTION_2	ELSE_25	IF_67
0x400256b	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x400256e	            0x4898	                                    cdqe	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x4002570	        0x4883e801	                              sub rax, 1	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x4002574	          0x4c01e0	                            add rax, r12	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x4002577	          0xc6003e	                    mov byte [rax], 0x3e	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x400257a	    0x8b0500000000	            mov eax, dword [0x04002580] 	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002580	            0x85c0	                           test eax, eax	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002582	            0x741c	                            je 0x40025a0	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002584	    0x8b0500000000	            mov eax, dword [0x0400258a] 	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x400258a	            0x85c0	                           test eax, eax	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x400258c	            0x7512	                           jne 0x40025a0	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x400258e	    0x8b0500000000	            mov eax, dword [0x04002594] 	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002594	    0x39856cffffff	            cmp dword [rbp - 0x94], eax 	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x400259a	     0xf84d4010000	                            je 0x4002774	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025a0	    0xc70500000000	               mov dword [0x040025aa], 0	      1201	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025aa	    0x8b0500000000	            mov eax, dword [0x040025b0] 	      1202	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025b0	          0x894584	             mov dword [rbp - 0x7c], eax	      1202	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025b3	    0xc70500000000	               mov dword [0x040025bd], 0	      1203	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025bd	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025c4	            0x7508	                           jne 0x40025ce	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025c6	    0x8b0500000000	            mov eax, dword [0x040025cc] 	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025cc	            0xeb05	                           jmp 0x40025d3	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025ce	      0xb800000000	                              mov eax, 0	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025d3	    0x8b1500000000	            mov edx, dword [0x040025d9] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x40025d9	          0x8d3c10	                    lea edi, [rax + rdx]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x40025dc	    0x8b1500000000	            mov edx, dword [0x040025e2] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x40025e2	    0x8b0500000000	            mov eax, dword [0x040025e8] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x40025e8	             0x1c2	                            add edx, eax	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x40025ea	    0x488b05000000	            mov rax, qword [0x040025f1] 	      1205	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025f1	          0x488b08	                    mov rcx, qword [rax]	      1205	display.c	FUNCTION_2	ELSE_25	IF_68
0x40025f4	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x40025fa	            0x4898	                                    cdqe	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x40025fc	        0x488d3401	                    lea rsi, [rcx + rax]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x4002600	    0x488b05000000	            mov rax, qword [0x04002607] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x4002607	          0x488b08	                    mov rcx, qword [rax]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x400260a	    0x8b0500000000	            mov eax, dword [0x04002610] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x4002610	            0x4898	                                    cdqe	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x4002612	          0x4801c8	                            add rax, rcx	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x4002615	    0x41b900000000	                              mov r9d, 0	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x400261b	          0x4189f8	                            mov r8d, edi	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x400261e	            0x89d1	                            mov ecx, edx	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x4002620	      0xba00000000	                              mov edx, 0	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x4002625	          0x4889c7	                            mov rdi, rax	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x4002628	      0xe8ef010000	                    call sym.update_line	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_50
0x400262d	      0xe800000000	                          call 0x4002632	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002632	        0x4883f801	                              cmp rax, 1	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002636	            0x7650	                           jbe 0x4002688	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002638	    0x8b0500000000	            mov eax, dword [0x0400263e] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400263e	            0x85c0	                           test eax, eax	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002640	            0x7546	                           jne 0x4002688	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002642	    0x8b0500000000	            mov eax, dword [0x04002648] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002648	            0x85c0	                           test eax, eax	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400264a	            0x753c	                           jne 0x4002688	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400264c	    0x8b0500000000	            mov eax, dword [0x04002652] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002652	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002655	            0x7431	                            je 0x4002688	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002657	    0x8b1500000000	            mov edx, dword [0x0400265d] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400265d	    0x8b0500000000	            mov eax, dword [0x04002663] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002663	            0x39c2	                            cmp edx, eax	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002665	            0x7e21	                           jle 0x4002688	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002667	    0x8b0500000000	            mov eax, dword [0x0400266d] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400266d	          0x394584	            cmp dword [rbp - 0x7c], eax 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002670	            0x7d16	                           jge 0x4002688	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002672	    0x8b1500000000	            mov edx, dword [0x04002678] 	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002678	    0x8b0500000000	            mov eax, dword [0x0400267e] 	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400267e	            0x29c2	                            sub edx, eax	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002680	            0x89d0	                            mov eax, edx	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002682	    0x890500000000	            mov dword [0x04002688], eax 	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4002688	    0x8b1500000000	            mov edx, dword [0x0400268e] 	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x400268e	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002695	            0x7508	                           jne 0x400269f	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002697	    0x8b0500000000	            mov eax, dword [0x0400269d] 	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x400269d	            0xeb05	                           jmp 0x40026a4	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x400269f	      0xb800000000	                              mov eax, 0	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x40026a4	            0x29c2	                            sub edx, eax	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x40026a6	            0x89d0	                            mov eax, edx	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x40026a8	          0x89459c	             mov dword [rbp - 0x64], eax	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x40026ab	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026b2	            0x7508	                           jne 0x40026bc	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026b4	    0x8b0500000000	            mov eax, dword [0x040026ba] 	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026ba	            0xeb05	                           jmp 0x40026c1	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026bc	      0xb800000000	                              mov eax, 0	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026c1	    0x8b1500000000	            mov edx, dword [0x040026c7] 	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026c7	            0x39d0	                            cmp eax, edx	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026c9	            0x7e2b	                           jle 0x40026f6	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026cb	    0x8b0500000000	            mov eax, dword [0x040026d1] 	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026d1	            0x39d8	                            cmp eax, ebx	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026d3	            0x7521	                           jne 0x40026f6	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026d5	    0x8b0500000000	            mov eax, dword [0x040026db] 	      1220	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026db	          0x39459c	            cmp dword [rbp - 0x64], eax 	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026de	            0x7d16	                           jge 0x40026f6	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026e0	    0x8b0500000000	            mov eax, dword [0x040026e6] 	      1222	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026e6	          0x2b459c	             sub eax, dword [rbp - 0x64]	      1222	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026e9	          0x894594	             mov dword [rbp - 0x6c], eax	      1222	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x40026ec	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1223	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70	CALL_51
0x40026ef	            0x89c7	                            mov edi, eax	      1223	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70	CALL_51
0x40026f1	      0xe800000000	                          call 0x40026f6	      1223	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70	CALL_51
0x40026f6	    0x2b9d6cffffff	             sub ebx, dword [rbp - 0x94]	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x40026fc	            0x89da	                            mov edx, ebx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x40026fe	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002705	            0x7508	                           jne 0x400270f	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002707	    0x8b0500000000	            mov eax, dword [0x0400270d] 	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x400270d	            0xeb05	                           jmp 0x4002714	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x400270f	      0xb800000000	                              mov eax, 0	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002714	            0x29c2	                            sub edx, eax	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002716	            0x89d0	                            mov eax, edx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002718	    0x890500000000	            mov dword [0x0400271e], eax 	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x400271e	    0x8b1500000000	            mov edx, dword [0x04002724] 	      1226	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x4002724	    0x8b0500000000	            mov eax, dword [0x0400272a] 	      1226	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x400272a	            0x39c2	                            cmp edx, eax	      1226	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x400272c	            0x7e0c	                           jle 0x400273a	      1226	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x400272e	    0x8b0500000000	            mov eax, dword [0x04002734] 	      1227	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x4002734	    0x890500000000	            mov dword [0x0400273a], eax 	      1227	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x400273a	    0x488b05000000	            mov rax, qword [0x04002741] 	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_52
0x4002741	          0x488b10	                    mov rdx, qword [rax]	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_52
0x4002744	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_52
0x400274a	            0x4898	                                    cdqe	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_52
0x400274c	          0x4801c2	                            add rdx, rax	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_52
0x400274f	    0x8b0500000000	            mov eax, dword [0x04002755] 	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_52
0x4002755	    0x2b856cffffff	             sub eax, dword [rbp - 0x94]	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_52
0x400275b	          0x4889d6	                            mov rsi, rdx	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_52
0x400275e	            0x89c7	                            mov edi, eax	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_52
0x4002760	      0xe800000000	                          call 0x4002765	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_52
0x4002765	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1230	display.c	FUNCTION_2	ELSE_25	IF_68
0x400276b	    0x890500000000	            mov dword [0x04002771], eax 	      1230	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002771	            0xeb01	                           jmp 0x4002774	      1230	display.c	FUNCTION_2	ELSE_25	IF_68
0x4002773	              0x90	                                     nop	       934	display.c	FUNCTION_2	IF_37
0x4002774	    0x488b05000000	            mov rax, qword [0x0400277b] 	      1233	display.c	FUNCTION_2	CALL_53
0x400277b	          0x4889c7	                            mov rdi, rax	      1233	display.c	FUNCTION_2	CALL_53
0x400277e	      0xe800000000	                          call 0x4002783	      1233	display.c	FUNCTION_2	CALL_53
0x4002783	    0x488b05000000	            mov rax, qword [0x0400278a] 	      1237	display.c	FUNCTION_2
0x400278a	        0x488945b8	             mov qword [rbp - 0x48], rax	      1237	display.c	FUNCTION_2
0x400278e	    0x488b05000000	            mov rax, qword [0x04002795] 	      1239	display.c	FUNCTION_2
0x4002795	    0x488905000000	            mov qword [0x0400279c], rax 	      1239	display.c	FUNCTION_2
0x400279c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1240	display.c	FUNCTION_2
0x40027a0	    0x488905000000	            mov qword [0x040027a7], rax 	      1240	display.c	FUNCTION_2
0x40027a7	    0xc70500000000	               mov dword [0x040027b1], 0	      1242	display.c	FUNCTION_2
0x40027b1	    0x8b0500000000	            mov eax, dword [0x040027b7] 	      1246	display.c	FUNCTION_2	IF_72
0x40027b7	            0x85c0	                           test eax, eax	      1246	display.c	FUNCTION_2	IF_72
0x40027b9	            0x7416	                            je 0x40027d1	      1246	display.c	FUNCTION_2	IF_72
0x40027bb	    0x8b0500000000	            mov eax, dword [0x040027c1] 	      1246	display.c	FUNCTION_2	IF_72
0x40027c1	            0x85c0	                           test eax, eax	      1246	display.c	FUNCTION_2	IF_72
0x40027c3	            0x740c	                            je 0x40027d1	      1246	display.c	FUNCTION_2	IF_72
0x40027c5	    0xc70500000000	               mov dword [0x040027cf], 0	      1247	display.c	FUNCTION_2	IF_72
0x40027cf	            0xeb0c	                           jmp 0x40027dd	      1247	display.c	FUNCTION_2	IF_72
0x40027d1	    0x8b0500000000	            mov eax, dword [0x040027d7] 	      1249	display.c	FUNCTION_2	ELSE_29
0x40027d7	    0x890500000000	            mov dword [0x040027dd], eax 	      1249	display.c	FUNCTION_2	ELSE_29
0x40027dd	    0x8b0500000000	            mov eax, dword [0x040027e3] 	      1252	display.c	FUNCTION_2	CALL_54
0x40027e3	      0x25ffff7fff	                     and eax, 0xff7fffff	      1252	display.c	FUNCTION_2	CALL_54
0x40027e8	    0x890500000000	            mov dword [0x040027ee], eax 	      1252	display.c	FUNCTION_2	CALL_54
0x40027ee	      0xe800000000	                          call 0x40027f3	      1253	display.c	FUNCTION_2	CALL_55
0x40027f3	            0xeb01	                           jmp 0x40027f6	      1253	display.c	FUNCTION_2	CALL_55
0x40027f5	              0x90	                                     nop	       514	display.c	FUNCTION_2	IF_1
0x40027f6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1254	display.c	FUNCTION_2
0x40027fa	    0x644833042528	                xor rax, qword fs:[0x28]	      1254	display.c	FUNCTION_2
0x4002803	            0x7405	                            je 0x400280a	      1254	display.c	FUNCTION_2
0x4002805	      0xe800000000	                          call 0x400280a	      1254	display.c	FUNCTION_2
0x400280a	    0x4881c4a80000	                           add rsp, 0xa8	      1254	display.c	FUNCTION_2
0x4002811	              0x5b	                                 pop rbx	      1254	display.c	FUNCTION_2
0x4002812	            0x415c	                                 pop r12	      1254	display.c	FUNCTION_2
0x4002814	            0x415d	                                 pop r13	      1254	display.c	FUNCTION_2
0x4002816	            0x415e	                                 pop r14	      1254	display.c	FUNCTION_2
0x4002818	            0x415f	                                 pop r15	      1254	display.c	FUNCTION_2
0x400281a	              0x5d	                                 pop rbp	      1254	display.c	FUNCTION_2
0x400281b	              0xc3	                                     ret	      1254	display.c	FUNCTION_2
rl_restore_prompt	functions,0:WHILE,0:CALL,2:SWITCH,0:ELSE,0:DO,0:IF,0:FOR,0	45
0x40048df	              0x55	                                push rbp	      2254	display.c	FUNCTION_12
0x40048e0	          0x4889e5	                            mov rbp, rsp	      2254	display.c	FUNCTION_12
0x40048e3	    0x488b05000000	            mov rax, qword [0x040048ea] 	      2255	display.c	FUNCTION_12	CALL_1
0x40048ea	          0x4885c0	                           test rax, rax	      2255	display.c	FUNCTION_12	CALL_1
0x40048ed	            0x740f	                            je 0x40048fe	      2255	display.c	FUNCTION_12	CALL_1
0x40048ef	    0x488b05000000	            mov rax, qword [0x040048f6] 	      2255	display.c	FUNCTION_12	CALL_1
0x40048f6	          0x4889c7	                            mov rdi, rax	      2255	display.c	FUNCTION_12	CALL_1
0x40048f9	      0xe800000000	                          call 0x40048fe	      2255	display.c	FUNCTION_12	CALL_1
0x40048fe	    0x488b05000000	            mov rax, qword [0x04004905] 	      2256	display.c	FUNCTION_12	CALL_2
0x4004905	          0x4885c0	                           test rax, rax	      2256	display.c	FUNCTION_12	CALL_2
0x4004908	            0x740f	                            je 0x4004919	      2256	display.c	FUNCTION_12	CALL_2
0x400490a	    0x488b05000000	            mov rax, qword [0x04004911] 	      2256	display.c	FUNCTION_12	CALL_2
0x4004911	          0x4889c7	                            mov rdi, rax	      2256	display.c	FUNCTION_12	CALL_2
0x4004914	      0xe800000000	                          call 0x4004919	      2256	display.c	FUNCTION_12	CALL_2
0x4004919	    0x488b05000000	            mov rax, qword [0x04004920] 	      2258	display.c	FUNCTION_12
0x4004920	    0x488905000000	            mov qword [0x04004927], rax 	      2258	display.c	FUNCTION_12
0x4004927	    0x488b05000000	            mov rax, qword [0x0400492e] 	      2259	display.c	FUNCTION_12
0x400492e	    0x488905000000	            mov qword [0x04004935], rax 	      2259	display.c	FUNCTION_12
0x4004935	    0x8b0500000000	            mov eax, dword [0x0400493b] 	      2260	display.c	FUNCTION_12
0x400493b	    0x890500000000	            mov dword [0x04004941], eax 	      2260	display.c	FUNCTION_12
0x4004941	    0x8b0500000000	            mov eax, dword [0x04004947] 	      2261	display.c	FUNCTION_12
0x4004947	    0x890500000000	            mov dword [0x0400494d], eax 	      2261	display.c	FUNCTION_12
0x400494d	    0x8b0500000000	            mov eax, dword [0x04004953] 	      2262	display.c	FUNCTION_12
0x4004953	    0x890500000000	            mov dword [0x04004959], eax 	      2262	display.c	FUNCTION_12
0x4004959	    0x8b0500000000	            mov eax, dword [0x0400495f] 	      2263	display.c	FUNCTION_12
0x400495f	    0x890500000000	            mov dword [0x04004965], eax 	      2263	display.c	FUNCTION_12
0x4004965	    0x8b0500000000	            mov eax, dword [0x0400496b] 	      2264	display.c	FUNCTION_12
0x400496b	    0x890500000000	            mov dword [0x04004971], eax 	      2264	display.c	FUNCTION_12
0x4004971	    0x8b0500000000	            mov eax, dword [0x04004977] 	      2265	display.c	FUNCTION_12
0x4004977	    0x890500000000	            mov dword [0x0400497d], eax 	      2265	display.c	FUNCTION_12
0x400497d	    0x48c705000000	               mov qword [0x04004988], 0	      2268	display.c	FUNCTION_12
0x4004988	    0x488b05000000	            mov rax, qword [0x0400498f] 	      2268	display.c	FUNCTION_12
0x400498f	    0x488905000000	            mov qword [0x04004996], rax 	      2268	display.c	FUNCTION_12
0x4004996	    0xc70500000000	               mov dword [0x040049a0], 0	      2269	display.c	FUNCTION_12
0x40049a0	    0xc70500000000	               mov dword [0x040049aa], 0	      2270	display.c	FUNCTION_12
0x40049aa	    0x8b0500000000	            mov eax, dword [0x040049b0] 	      2270	display.c	FUNCTION_12
0x40049b0	    0x890500000000	            mov dword [0x040049b6], eax 	      2270	display.c	FUNCTION_12
0x40049b6	    0x8b0500000000	            mov eax, dword [0x040049bc] 	      2270	display.c	FUNCTION_12
0x40049bc	    0x890500000000	            mov dword [0x040049c2], eax 	      2270	display.c	FUNCTION_12
0x40049c2	    0xc70500000000	               mov dword [0x040049cc], 0	      2271	display.c	FUNCTION_12
0x40049cc	    0x8b0500000000	            mov eax, dword [0x040049d2] 	      2271	display.c	FUNCTION_12
0x40049d2	    0x890500000000	            mov dword [0x040049d8], eax 	      2271	display.c	FUNCTION_12
0x40049d8	              0x90	                                     nop	      2272	display.c	FUNCTION_12
0x40049d9	              0x5d	                                 pop rbp	      2272	display.c	FUNCTION_12
0x40049da	              0xc3	                                     ret	      2272	display.c	FUNCTION_12
space_to_eol	functions,0:WHILE,0:CALL,1:SWITCH,0:ELSE,0:DO,0:IF,0:FOR,1	23
0x4004bfb	              0x55	                                push rbp	      2348	display.c	FUNCTION_16
0x4004bfc	          0x4889e5	                            mov rbp, rsp	      2348	display.c	FUNCTION_16
0x4004bff	              0x53	                                push rbx	      2348	display.c	FUNCTION_16
0x4004c00	        0x4883ec18	                           sub rsp, 0x18	      2348	display.c	FUNCTION_16
0x4004c04	          0x897dec	             mov dword [rbp - 0x14], edi	      2348	display.c	FUNCTION_16
0x4004c07	      0xbb00000000	                              mov ebx, 0	      2351	display.c	FUNCTION_16	FOR_1
0x4004c0c	            0xeb17	                           jmp 0x4004c25	      2351	display.c	FUNCTION_16	FOR_1
0x4004c0e	    0x488b05000000	            mov rax, qword [0x04004c15] 	      2352	display.c	FUNCTION_16	CALL_1
0x4004c15	          0x4889c6	                            mov rsi, rax	      2352	display.c	FUNCTION_16	CALL_1
0x4004c18	      0xbf20000000	                           mov edi, 0x20	      2352	display.c	FUNCTION_16	CALL_1
0x4004c1d	      0xe800000000	                          call 0x4004c22	      2352	display.c	FUNCTION_16	CALL_1
0x4004c22	          0x83c301	                              add ebx, 1	      2351	display.c	FUNCTION_16	FOR_1
0x4004c25	          0x3b5dec	             cmp ebx, dword [rbp - 0x14]	      2351	display.c	FUNCTION_16	FOR_1
0x4004c28	            0x7ce4	                            jl 0x4004c0e	      2351	display.c	FUNCTION_16	FOR_1
0x4004c2a	    0x8b1500000000	            mov edx, dword [0x04004c30] 	      2354	display.c	FUNCTION_16
0x4004c30	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2354	display.c	FUNCTION_16
0x4004c33	             0x1d0	                            add eax, edx	      2354	display.c	FUNCTION_16
0x4004c35	    0x890500000000	            mov dword [0x04004c3b], eax 	      2354	display.c	FUNCTION_16
0x4004c3b	              0x90	                                     nop	      2355	display.c	FUNCTION_16
0x4004c3c	        0x4883c418	                           add rsp, 0x18	      2355	display.c	FUNCTION_16
0x4004c40	              0x5b	                                 pop rbx	      2355	display.c	FUNCTION_16
0x4004c41	              0x5d	                                 pop rbp	      2355	display.c	FUNCTION_16
0x4004c42	              0xc3	                                     ret	      2355	display.c	FUNCTION_16
rl_on_new_line_with_prompt	functions,0:WHILE,1:CALL,7:SWITCH,0:ELSE,1:DO,0:IF,3:FOR,0	117
0x4003dce	              0x55	                                push rbp	      1825	display.c	FUNCTION_4
0x4003dcf	          0x4889e5	                            mov rbp, rsp	      1825	display.c	FUNCTION_4
0x4003dd2	        0x4883ec30	                           sub rsp, 0x30	      1825	display.c	FUNCTION_4
0x4003dd6	    0x488b05000000	            mov rax, qword [0x04003ddd] 	      1831	display.c	FUNCTION_4	CALL_1
0x4003ddd	          0x4889c7	                            mov rdi, rax	      1831	display.c	FUNCTION_4	CALL_1
0x4003de0	      0xe800000000	                          call 0x4003de5	      1831	display.c	FUNCTION_4	CALL_1
0x4003de5	          0x83c001	                              add eax, 1	      1831	display.c	FUNCTION_4	CALL_1
0x4003de8	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1831	display.c	FUNCTION_4	CALL_1
0x4003deb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1832	display.c	FUNCTION_4	CALL_2
0x4003dee	            0x89c7	                            mov edi, eax	      1832	display.c	FUNCTION_4	CALL_2
0x4003df0	      0xb800000000	                              mov eax, 0	      1832	display.c	FUNCTION_4	CALL_2
0x4003df5	      0xe8a9c7ffff	           call sym.init_line_structures	      1832	display.c	FUNCTION_4	CALL_2
0x4003dfa	    0x488b05000000	            mov rax, qword [0x04003e01] 	      1836	display.c	FUNCTION_4
0x4003e01	          0x4885c0	                           test rax, rax	      1836	display.c	FUNCTION_4
0x4003e04	            0x7409	                            je 0x4003e0f	      1836	display.c	FUNCTION_4
0x4003e06	    0x488b05000000	            mov rax, qword [0x04003e0d] 	      1836	display.c	FUNCTION_4
0x4003e0d	            0xeb07	                           jmp 0x4003e16	      1836	display.c	FUNCTION_4
0x4003e0f	    0x488b05000000	            mov rax, qword [0x04003e16] 	      1836	display.c	FUNCTION_4
0x4003e16	        0x488945f8	                mov qword [rbp - 8], rax	      1836	display.c	FUNCTION_4
0x4003e1a	    0x488b05000000	            mov rax, qword [0x04003e21] 	      1837	display.c	FUNCTION_4	CALL_3
0x4003e21	          0x488b00	                    mov rax, qword [rax]	      1837	display.c	FUNCTION_4	CALL_3
0x4003e24	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1837	display.c	FUNCTION_4	CALL_3
0x4003e28	          0x4889d6	                            mov rsi, rdx	      1837	display.c	FUNCTION_4	CALL_3
0x4003e2b	          0x4889c7	                            mov rdi, rax	      1837	display.c	FUNCTION_4	CALL_3
0x4003e2e	      0xe800000000	                          call 0x4003e33	      1837	display.c	FUNCTION_4	CALL_3
0x4003e33	    0x488b05000000	            mov rax, qword [0x04003e3a] 	      1838	display.c	FUNCTION_4	CALL_4
0x4003e3a	          0x488b00	                    mov rax, qword [rax]	      1838	display.c	FUNCTION_4	CALL_4
0x4003e3d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1838	display.c	FUNCTION_4	CALL_4
0x4003e41	          0x4889d6	                            mov rsi, rdx	      1838	display.c	FUNCTION_4	CALL_4
0x4003e44	          0x4889c7	                            mov rdi, rax	      1838	display.c	FUNCTION_4	CALL_4
0x4003e47	      0xe800000000	                          call 0x4003e4c	      1838	display.c	FUNCTION_4	CALL_4
0x4003e4c	    0x488b05000000	            mov rax, qword [0x04003e53] 	      1841	display.c	FUNCTION_4	CALL_5
0x4003e53	      0xbe0a000000	                            mov esi, 0xa	      1841	display.c	FUNCTION_4	CALL_5
0x4003e58	          0x4889c7	                            mov rdi, rax	      1841	display.c	FUNCTION_4	CALL_5
0x4003e5b	      0xe800000000	                          call 0x4003e60	      1841	display.c	FUNCTION_4	CALL_5
0x4003e60	        0x488945f0	             mov qword [rbp - 0x10], rax	      1841	display.c	FUNCTION_4	CALL_5
0x4003e64	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1842	display.c	FUNCTION_4	IF_1
0x4003e69	            0x750b	                           jne 0x4003e76	      1842	display.c	FUNCTION_4	IF_1
0x4003e6b	    0x488b05000000	            mov rax, qword [0x04003e72] 	      1843	display.c	FUNCTION_4	IF_1
0x4003e72	        0x488945f0	             mov qword [rbp - 0x10], rax	      1843	display.c	FUNCTION_4	IF_1
0x4003e76	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1845	display.c	FUNCTION_4	CALL_6
0x4003e7a	          0x4889c7	                            mov rdi, rax	      1845	display.c	FUNCTION_4	CALL_6
0x4003e7d	      0xe800000000	                          call 0x4003e82	      1845	display.c	FUNCTION_4	CALL_6
0x4003e82	          0x8945e8	             mov dword [rbp - 0x18], eax	      1845	display.c	FUNCTION_4	CALL_6
0x4003e85	      0xe800000000	                          call 0x4003e8a	      1846	display.c	FUNCTION_4	IF_2
0x4003e8a	        0x4883f801	                              cmp rax, 1	      1846	display.c	FUNCTION_4	IF_2
0x4003e8e	            0x762b	                           jbe 0x4003ebb	      1846	display.c	FUNCTION_4	IF_2
0x4003e90	    0x8b0500000000	            mov eax, dword [0x04003e96] 	      1846	display.c	FUNCTION_4	IF_2
0x4003e96	            0x85c0	                           test eax, eax	      1846	display.c	FUNCTION_4	IF_2
0x4003e98	            0x7521	                           jne 0x4003ebb	      1846	display.c	FUNCTION_4	IF_2
0x4003e9a	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1847	display.c	FUNCTION_4	IF_2
0x4003e9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1847	display.c	FUNCTION_4	IF_2
0x4003ea1	      0xb901000000	                              mov ecx, 1	      1847	display.c	FUNCTION_4	IF_2
0x4003ea6	      0xbe00000000	                              mov esi, 0	      1847	display.c	FUNCTION_4	IF_2
0x4003eab	          0x4889c7	                            mov rdi, rax	      1847	display.c	FUNCTION_4	IF_2
0x4003eae	      0xe800140000	                  call sym._rl_col_width	      1847	display.c	FUNCTION_4	IF_2
0x4003eb3	    0x890500000000	            mov dword [0x04003eb9], eax 	      1847	display.c	FUNCTION_4	IF_2
0x4003eb9	            0xeb09	                           jmp 0x4003ec4	      1847	display.c	FUNCTION_4	IF_2
0x4003ebb	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1849	display.c	FUNCTION_4	ELSE_1
0x4003ebe	    0x890500000000	            mov dword [0x04003ec4], eax 	      1849	display.c	FUNCTION_4	ELSE_1
0x4003ec4	    0x8b0500000000	            mov eax, dword [0x04003eca] 	      1854	display.c	FUNCTION_4
0x4003eca	            0x85c0	                           test eax, eax	      1854	display.c	FUNCTION_4
0x4003ecc	           0xf94c0	                                 sete al	      1854	display.c	FUNCTION_4
0x4003ecf	           0xfb6d0	                           movzx edx, al	      1854	display.c	FUNCTION_4
0x4003ed2	    0x8b0500000000	            mov eax, dword [0x04003ed8] 	      1854	display.c	FUNCTION_4
0x4003ed8	             0x1d0	                            add eax, edx	      1854	display.c	FUNCTION_4
0x4003eda	          0x8945ec	             mov dword [rbp - 0x14], eax	      1854	display.c	FUNCTION_4
0x4003edd	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1855	display.c	FUNCTION_4
0x4003ee0	              0x99	                                     cdq	      1855	display.c	FUNCTION_4
0x4003ee1	          0xf77dec	                 idiv dword [rbp - 0x14]	      1855	display.c	FUNCTION_4
0x4003ee4	    0x890500000000	            mov dword [0x04003eea], eax 	      1855	display.c	FUNCTION_4
0x4003eea	        0x837de800	               cmp dword [rbp - 0x18], 0	      1859	display.c	FUNCTION_4	IF_3
0x4003eee	            0x7e1c	                           jle 0x4003f0c	      1859	display.c	FUNCTION_4	IF_3
0x4003ef0	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1859	display.c	FUNCTION_4	IF_3
0x4003ef3	              0x99	                                     cdq	      1859	display.c	FUNCTION_4	IF_3
0x4003ef4	          0xf77dec	                 idiv dword [rbp - 0x14]	      1859	display.c	FUNCTION_4	IF_3
0x4003ef7	            0x89d0	                            mov eax, edx	      1859	display.c	FUNCTION_4	IF_3
0x4003ef9	            0x85c0	                           test eax, eax	      1859	display.c	FUNCTION_4	IF_3
0x4003efb	            0x750f	                           jne 0x4003f0c	      1859	display.c	FUNCTION_4	IF_3
0x4003efd	      0xbe01000000	                              mov esi, 1	      1860	display.c	FUNCTION_4	CALL_7
0x4003f02	      0xbf00000000	                              mov edi, 0	      1860	display.c	FUNCTION_4	CALL_7
0x4003f07	      0xe800000000	                          call 0x4003f0c	      1860	display.c	FUNCTION_4	CALL_7
0x4003f0c	    0xc70500000000	               mov dword [0x04003f16], 0	      1861	display.c	FUNCTION_4
0x4003f16	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1863	display.c	FUNCTION_4
0x4003f1d	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1863	display.c	FUNCTION_4
0x4003f24	            0xeb32	                           jmp 0x4003f58	      1864	display.c	FUNCTION_4	WHILE_1
0x4003f26	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1866	display.c	FUNCTION_4	WHILE_1
0x4003f29	    0x890500000000	            mov dword [0x04003f2f], eax 	      1866	display.c	FUNCTION_4	WHILE_1
0x4003f2f	    0x488b05000000	            mov rax, qword [0x04003f36] 	      1867	display.c	FUNCTION_4	WHILE_1
0x4003f36	        0x488b4808	                mov rcx, qword [rax + 8]	      1867	display.c	FUNCTION_4	WHILE_1
0x4003f3a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1867	display.c	FUNCTION_4	WHILE_1
0x4003f3d	          0x8d5001	                      lea edx, [rax + 1]	      1867	display.c	FUNCTION_4	WHILE_1
0x4003f40	          0x8955e0	             mov dword [rbp - 0x20], edx	      1867	display.c	FUNCTION_4	WHILE_1
0x4003f43	            0x4898	                                    cdqe	      1867	display.c	FUNCTION_4	WHILE_1
0x4003f45	        0x48c1e002	                              shl rax, 2	      1867	display.c	FUNCTION_4	WHILE_1
0x4003f49	        0x488d1401	                    lea rdx, [rcx + rax]	      1867	display.c	FUNCTION_4	WHILE_1
0x4003f4d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1867	display.c	FUNCTION_4	WHILE_1
0x4003f50	            0x8902	                    mov dword [rdx], eax	      1867	display.c	FUNCTION_4	WHILE_1
0x4003f52	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1868	display.c	FUNCTION_4	WHILE_1
0x4003f55	           0x145dc	             add dword [rbp - 0x24], eax	      1868	display.c	FUNCTION_4	WHILE_1
0x4003f58	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1864	display.c	FUNCTION_4	WHILE_1
0x4003f5b	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      1864	display.c	FUNCTION_4	WHILE_1
0x4003f5e	            0x7ec6	                           jle 0x4003f26	      1864	display.c	FUNCTION_4	WHILE_1
0x4003f60	    0x488b05000000	            mov rax, qword [0x04003f67] 	      1870	display.c	FUNCTION_4
0x4003f67	        0x488b4008	                mov rax, qword [rax + 8]	      1870	display.c	FUNCTION_4
0x4003f6b	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1870	display.c	FUNCTION_4
0x4003f6e	          0x4863d2	                         movsxd rdx, edx	      1870	display.c	FUNCTION_4
0x4003f71	        0x48c1e202	                              shl rdx, 2	      1870	display.c	FUNCTION_4
0x4003f75	          0x4801c2	                            add rdx, rax	      1870	display.c	FUNCTION_4
0x4003f78	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1870	display.c	FUNCTION_4
0x4003f7b	            0x8902	                    mov dword [rdx], eax	      1870	display.c	FUNCTION_4
0x4003f7d	    0xc70500000000	               mov dword [0x04003f87], 0	      1871	display.c	FUNCTION_4
0x4003f87	    0x488b05000000	            mov rax, qword [0x04003f8e] 	      1873	display.c	FUNCTION_4
0x4003f8e	    0x488905000000	            mov qword [0x04003f95], rax 	      1873	display.c	FUNCTION_4
0x4003f95	      0xb800000000	                              mov eax, 0	      1875	display.c	FUNCTION_4
0x4003f9a	              0xc9	                                   leave	      1876	display.c	FUNCTION_4
0x4003f9b	              0xc3	                                     ret	      1876	display.c	FUNCTION_4
_rl_erase_entire_line	functions,0:WHILE,0:CALL,4:SWITCH,0:ELSE,0:DO,0:IF,0:FOR,0	12
0x400521c	              0x55	                                push rbp	      2578	display.c	FUNCTION_23
0x400521d	          0x4889e5	                            mov rbp, rsp	      2578	display.c	FUNCTION_23
0x4005220	      0xe8edfdffff	                             call sym.cr	      2579	display.c	FUNCTION_23	CALL_1
0x4005225	      0xbf00000000	                              mov edi, 0	      2580	display.c	FUNCTION_23	CALL_2
0x400522a	      0xe800000000	                          call 0x400522f	      2580	display.c	FUNCTION_23	CALL_2
0x400522f	      0xe8defdffff	                             call sym.cr	      2581	display.c	FUNCTION_23	CALL_3
0x4005234	    0x488b05000000	            mov rax, qword [0x0400523b] 	      2582	display.c	FUNCTION_23	CALL_4
0x400523b	          0x4889c7	                            mov rdi, rax	      2582	display.c	FUNCTION_23	CALL_4
0x400523e	      0xe800000000	                          call 0x4005243	      2582	display.c	FUNCTION_23	CALL_4
0x4005243	              0x90	                                     nop	      2583	display.c	FUNCTION_23
0x4005244	              0x5d	                                 pop rbp	      2583	display.c	FUNCTION_23
0x4005245	              0xc3	                                     ret	      2583	display.c	FUNCTION_23
rl_clear_message	functions,0:WHILE,0:CALL,1:SWITCH,0:ELSE,0:DO,0:IF,1:FOR,0	14
0x40047a3	              0x55	                                push rbp	      2213	display.c	FUNCTION_9
0x40047a4	          0x4889e5	                            mov rbp, rsp	      2213	display.c	FUNCTION_9
0x40047a7	    0x488b05000000	            mov rax, qword [0x040047ae] 	      2214	display.c	FUNCTION_9
0x40047ae	    0x488905000000	            mov qword [0x040047b5], rax 	      2214	display.c	FUNCTION_9
0x40047b5	    0x8b0500000000	            mov eax, dword [0x040047bb] 	      2215	display.c	FUNCTION_9	IF_1
0x40047bb	            0x85c0	                           test eax, eax	      2215	display.c	FUNCTION_9	IF_1
0x40047bd	            0x740f	                            je 0x40047ce	      2215	display.c	FUNCTION_9	IF_1
0x40047bf	      0xe800000000	                          call 0x40047c4	      2217	display.c	FUNCTION_9	IF_1	CALL_1
0x40047c4	    0xc70500000000	               mov dword [0x040047ce], 0	      2218	display.c	FUNCTION_9	IF_1
0x40047ce	    0x488b05000000	            mov rax, qword [0x040047d5] 	      2220	display.c	FUNCTION_9
0x40047d5	            0xffd0	                                call rax	      2220	display.c	FUNCTION_9
0x40047d7	      0xb800000000	                              mov eax, 0	      2221	display.c	FUNCTION_9
0x40047dc	              0x5d	                                 pop rbp	      2222	display.c	FUNCTION_9
0x40047dd	              0xc3	                                     ret	      2222	display.c	FUNCTION_9
_rl_redisplay_after_sigwinch	functions,0:WHILE,0:CALL,13:SWITCH,0:ELSE,3:DO,0:IF,4:FOR,0	56
0x40050e7	              0x55	                                push rbp	      2521	display.c	FUNCTION_21
0x40050e8	          0x4889e5	                            mov rbp, rsp	      2521	display.c	FUNCTION_21
0x40050eb	        0x4883ec10	                           sub rsp, 0x10	      2521	display.c	FUNCTION_21
0x40050ef	    0x488b05000000	            mov rax, qword [0x040050f6] 	      2528	display.c	FUNCTION_21	IF_1
0x40050f6	          0x4885c0	                           test rax, rax	      2528	display.c	FUNCTION_21	IF_1
0x40050f9	     0xf8493000000	                            je 0x4005192	      2528	display.c	FUNCTION_21	IF_1
0x40050ff	    0x8b0500000000	            mov eax, dword [0x04005105] 	      2530	display.c	FUNCTION_21	IF_1	CALL_1
0x4005105	            0x89c7	                            mov edi, eax	      2530	display.c	FUNCTION_21	IF_1	CALL_1
0x4005107	      0xe800000000	                          call 0x400510c	      2530	display.c	FUNCTION_21	IF_1	CALL_1
0x400510c	    0x488b05000000	            mov rax, qword [0x04005113] 	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4005113	      0xba00000000	                              mov edx, 0	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4005118	      0xbe01000000	                              mov esi, 1	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x400511d	          0x4889c7	                            mov rdi, rax	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4005120	      0xe800000000	                          call 0x4005125	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4005125	    0xc70500000000	               mov dword [0x0400512f], 0	      2537	display.c	FUNCTION_21	IF_1
0x400512f	    0x488b05000000	            mov rax, qword [0x04005136] 	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x4005136	          0x4885c0	                           test rax, rax	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x4005139	            0x741b	                            je 0x4005156	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x400513b	    0x488b05000000	            mov rax, qword [0x04005142] 	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4005142	      0xba00000000	                              mov edx, 0	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4005147	      0xbe01000000	                              mov esi, 1	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x400514c	          0x4889c7	                            mov rdi, rax	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x400514f	      0xe800000000	                          call 0x4005154	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4005154	            0xeb26	                           jmp 0x400517c	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4005156	    0x8b0500000000	            mov eax, dword [0x0400515c] 	      2546	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x400515c	            0x89c7	                            mov edi, eax	      2546	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x400515e	      0xe898faffff	                   call sym.space_to_eol	      2546	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x4005163	    0x488b05000000	            mov rax, qword [0x0400516a] 	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x400516a	      0xba00000000	                              mov edx, 0	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x400516f	      0xbe01000000	                              mov esi, 1	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4005174	          0x4889c7	                            mov rdi, rax	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4005177	      0xe800000000	                          call 0x400517c	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x400517c	    0x8b0500000000	            mov eax, dword [0x04005182] 	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x4005182	            0x85c0	                           test eax, eax	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x4005184	            0x7e11	                           jle 0x4005197	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x4005186	      0xbf00000000	                              mov edi, 0	      2551	display.c	FUNCTION_21	IF_1	CALL_9
0x400518b	      0xe800000000	                          call 0x4005190	      2551	display.c	FUNCTION_21	IF_1	CALL_9
0x4005190	            0xeb05	                           jmp 0x4005197	      2551	display.c	FUNCTION_21	IF_1	CALL_9
0x4005192	      0xe800000000	                          call 0x4005197	      2554	display.c	FUNCTION_21	CALL_10
0x4005197	    0x488b05000000	            mov rax, qword [0x0400519e] 	      2557	display.c	FUNCTION_21	CALL_11
0x400519e	      0xbe0a000000	                            mov esi, 0xa	      2557	display.c	FUNCTION_21	CALL_11
0x40051a3	          0x4889c7	                            mov rdi, rax	      2557	display.c	FUNCTION_21	CALL_11
0x40051a6	      0xe800000000	                          call 0x40051ab	      2557	display.c	FUNCTION_21	CALL_11
0x40051ab	        0x488945f8	                mov qword [rbp - 8], rax	      2557	display.c	FUNCTION_21	CALL_11
0x40051af	      0x48837df800	                  cmp qword [rbp - 8], 0	      2558	display.c	FUNCTION_21	IF_4
0x40051b4	            0x7418	                            je 0x40051ce	      2558	display.c	FUNCTION_21	IF_4
0x40051b6	      0x488345f801	                  add qword [rbp - 8], 1	      2559	display.c	FUNCTION_21	CALL_12
0x40051bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2559	display.c	FUNCTION_21	CALL_12
0x40051bf	          0x4889c7	                            mov rdi, rax	      2559	display.c	FUNCTION_21	CALL_12
0x40051c2	      0xb800000000	                              mov eax, 0	      2559	display.c	FUNCTION_21	CALL_12
0x40051c7	      0xe87cfeffff	                  call sym.redraw_prompt	      2559	display.c	FUNCTION_21	CALL_12
0x40051cc	            0xeb05	                           jmp 0x40051d3	      2562	display.c	FUNCTION_21
0x40051ce	      0xe800000000	                          call 0x40051d3	      2561	display.c	FUNCTION_21	CALL_13
0x40051d3	              0x90	                                     nop	      2562	display.c	FUNCTION_21
0x40051d4	              0xc9	                                   leave	      2562	display.c	FUNCTION_21
0x40051d5	              0xc3	                                     ret	      2562	display.c	FUNCTION_21
_rl_clear_screen	functions,0:WHILE,0:CALL,4:SWITCH,0:ELSE,1:DO,0:IF,1:FOR,0	15
0x4004c43	              0x55	                                push rbp	      2359	display.c	FUNCTION_17
0x4004c44	          0x4889e5	                            mov rbp, rsp	      2359	display.c	FUNCTION_17
0x4004c47	    0x488b05000000	            mov rax, qword [0x04004c4e] 	      2364	display.c	FUNCTION_17	IF_1
0x4004c4e	          0x4885c0	                           test rax, rax	      2364	display.c	FUNCTION_17	IF_1
0x4004c51	            0x741b	                            je 0x4004c6e	      2364	display.c	FUNCTION_17	IF_1
0x4004c53	    0x488b05000000	            mov rax, qword [0x04004c5a] 	      2365	display.c	FUNCTION_17	CALL_3
0x4004c5a	      0xba00000000	                              mov edx, 0	      2365	display.c	FUNCTION_17	CALL_3
0x4004c5f	      0xbe01000000	                              mov esi, 1	      2365	display.c	FUNCTION_17	CALL_3
0x4004c64	          0x4889c7	                            mov rdi, rax	      2365	display.c	FUNCTION_17	CALL_3
0x4004c67	      0xe800000000	                          call 0x4004c6c	      2365	display.c	FUNCTION_17	CALL_3
0x4004c6c	            0xeb05	                           jmp 0x4004c73	      2369	display.c	FUNCTION_17
0x4004c6e	      0xe800000000	                          call 0x4004c73	      2367	display.c	FUNCTION_17	CALL_4
0x4004c73	              0x90	                                     nop	      2369	display.c	FUNCTION_17
0x4004c74	              0x5d	                                 pop rbp	      2369	display.c	FUNCTION_17
0x4004c75	              0xc3	                                     ret	      2369	display.c	FUNCTION_17
rl_message	functions,0:WHILE,0:CALL,9:SWITCH,0:ELSE,0:DO,0:IF,1:FOR,0	68
0x400463d	              0x55	                                push rbp	      2147	display.c	FUNCTION_8
0x400463e	          0x4889e5	                            mov rbp, rsp	      2147	display.c	FUNCTION_8
0x4004641	    0x4881ece00000	                           sub rsp, 0xe0	      2147	display.c	FUNCTION_8
0x4004648	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	      2147	display.c	FUNCTION_8
0x400464f	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	      2147	display.c	FUNCTION_8
0x4004656	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	      2147	display.c	FUNCTION_8
0x400465d	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	      2147	display.c	FUNCTION_8
0x4004664	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	      2147	display.c	FUNCTION_8
0x400466b	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	      2147	display.c	FUNCTION_8
0x4004672	            0x84c0	                             test al, al	      2147	display.c	FUNCTION_8
0x4004674	            0x7420	                            je 0x4004696	      2147	display.c	FUNCTION_8
0x4004676	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	      2147	display.c	FUNCTION_8
0x400467a	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	      2147	display.c	FUNCTION_8
0x400467e	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	      2147	display.c	FUNCTION_8
0x4004682	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	      2147	display.c	FUNCTION_8
0x4004686	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	      2147	display.c	FUNCTION_8
0x400468a	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	      2147	display.c	FUNCTION_8
0x400468e	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	      2147	display.c	FUNCTION_8
0x4004692	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	      2147	display.c	FUNCTION_8
0x4004696	    0x64488b042528	                mov rax, qword fs:[0x28]	      2147	display.c	FUNCTION_8
0x400469f	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2147	display.c	FUNCTION_8
0x40046a6	            0x31c0	                            xor eax, eax	      2147	display.c	FUNCTION_8
0x40046a8	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	      2154	display.c	FUNCTION_8	CALL_1
0x40046b2	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	      2154	display.c	FUNCTION_8	CALL_1
0x40046bc	        0x488d4510	                   lea rax, [rbp + 0x10]	      2154	display.c	FUNCTION_8	CALL_1
0x40046c0	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2154	display.c	FUNCTION_8	CALL_1
0x40046c7	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2154	display.c	FUNCTION_8	CALL_1
0x40046ce	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2154	display.c	FUNCTION_8	CALL_1
0x40046d5	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2161	display.c	FUNCTION_8	CALL_4
0x40046dc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2161	display.c	FUNCTION_8	CALL_4
0x40046e3	          0x4889d1	                            mov rcx, rdx	      2161	display.c	FUNCTION_8	CALL_4
0x40046e6	          0x4889c2	                            mov rdx, rax	      2161	display.c	FUNCTION_8	CALL_4
0x40046e9	      0xbe7f000000	                           mov esi, 0x7f	      2161	display.c	FUNCTION_8	CALL_4
0x40046ee	      0xbf00000000	                              mov edi, 0	      2161	display.c	FUNCTION_8	CALL_4
0x40046f3	      0xe800000000	                          call 0x40046f8	      2161	display.c	FUNCTION_8	CALL_4
0x40046f8	    0x488b05000000	            mov rax, qword [0x040046ff] 	      2168	display.c	FUNCTION_8	IF_1
0x40046ff	          0x4885c0	                           test rax, rax	      2168	display.c	FUNCTION_8	IF_1
0x4004702	            0x750f	                           jne 0x4004713	      2168	display.c	FUNCTION_8	IF_1
0x4004704	      0xe800000000	                          call 0x4004709	      2170	display.c	FUNCTION_8	IF_1	CALL_7
0x4004709	    0xc70500000000	               mov dword [0x04004713], 1	      2171	display.c	FUNCTION_8	IF_1
0x4004713	    0x48c705000000	               mov qword [0x0400471e], 0	      2173	display.c	FUNCTION_8
0x400471e	    0x41b800000000	                              mov r8d, 0	      2174	display.c	FUNCTION_8	CALL_8
0x4004724	      0xb900000000	                              mov ecx, 0	      2174	display.c	FUNCTION_8	CALL_8
0x4004729	      0xba00000000	                              mov edx, 0	      2174	display.c	FUNCTION_8	CALL_8
0x400472e	      0xbe00000000	                              mov esi, 0	      2174	display.c	FUNCTION_8	CALL_8
0x4004733	      0xbf00000000	                              mov edi, 0	      2174	display.c	FUNCTION_8	CALL_8
0x4004738	      0xb800000000	                              mov eax, 0	      2174	display.c	FUNCTION_8	CALL_8
0x400473d	      0xe8feb8ffff	                  call sym.expand_prompt	      2174	display.c	FUNCTION_8	CALL_8
0x4004742	    0x488905000000	            mov qword [0x04004749], rax 	      2174	display.c	FUNCTION_8	CALL_8
0x4004749	    0x48c705000000	               mov qword [0x04004754], 0	      2178	display.c	FUNCTION_8
0x4004754	    0x488b05000000	            mov rax, qword [0x0400475b] 	      2179	display.c	FUNCTION_8	CALL_9
0x400475b	          0x4885c0	                           test rax, rax	      2179	display.c	FUNCTION_8	CALL_9
0x400475e	            0x7411	                            je 0x4004771	      2179	display.c	FUNCTION_8	CALL_9
0x4004760	    0x488b05000000	            mov rax, qword [0x04004767] 	      2179	display.c	FUNCTION_8	CALL_9
0x4004767	          0x4889c7	                            mov rdi, rax	      2179	display.c	FUNCTION_8	CALL_9
0x400476a	      0xe800000000	                          call 0x400476f	      2179	display.c	FUNCTION_8	CALL_9
0x400476f	            0xeb05	                           jmp 0x4004776	      2179	display.c	FUNCTION_8	CALL_9
0x4004771	      0xb800000000	                              mov eax, 0	      2179	display.c	FUNCTION_8	CALL_9
0x4004776	    0x890500000000	            mov dword [0x0400477c], eax 	      2179	display.c	FUNCTION_8	CALL_9
0x400477c	    0x488b05000000	            mov rax, qword [0x04004783] 	      2180	display.c	FUNCTION_8
0x4004783	            0xffd0	                                call rax	      2180	display.c	FUNCTION_8
0x4004785	      0xb800000000	                              mov eax, 0	      2182	display.c	FUNCTION_8
0x400478a	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2183	display.c	FUNCTION_8
0x4004791	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2183	display.c	FUNCTION_8
0x400479a	            0x7405	                            je 0x40047a1	      2183	display.c	FUNCTION_8
0x400479c	      0xe800000000	                          call 0x40047a1	      2183	display.c	FUNCTION_8
0x40047a1	              0xc9	                                   leave	      2183	display.c	FUNCTION_8
0x40047a2	              0xc3	                                     ret	      2183	display.c	FUNCTION_8
_rl_current_display_line	functions,0:WHILE,0:CALL,0:SWITCH,0:ELSE,2:DO,0:IF,2:FOR,0	32
0x4005246	              0x55	                                push rbp	      2589	display.c	FUNCTION_24
0x4005247	          0x4889e5	                            mov rbp, rsp	      2589	display.c	FUNCTION_24
0x400524a	    0x488b15000000	            mov rdx, qword [0x04005251] 	      2594	display.c	FUNCTION_24	IF_1
0x4005251	    0x488b05000000	            mov rax, qword [0x04005258] 	      2594	display.c	FUNCTION_24	IF_1
0x4005258	          0x4839c2	                            cmp rdx, rax	      2594	display.c	FUNCTION_24	IF_1
0x400525b	            0x751d	                           jne 0x400527a	      2594	display.c	FUNCTION_24	IF_1
0x400525d	    0x8b1500000000	            mov edx, dword [0x04005263] 	      2595	display.c	FUNCTION_24	IF_1
0x4005263	    0x8b0500000000	            mov eax, dword [0x04005269] 	      2595	display.c	FUNCTION_24	IF_1
0x4005269	            0x29c2	                            sub edx, eax	      2595	display.c	FUNCTION_24	IF_1
0x400526b	    0x8b0500000000	            mov eax, dword [0x04005271] 	      2595	display.c	FUNCTION_24	IF_1
0x4005271	            0x29c2	                            sub edx, eax	      2595	display.c	FUNCTION_24	IF_1
0x4005273	            0x89d0	                            mov eax, edx	      2595	display.c	FUNCTION_24	IF_1
0x4005275	          0x8945fc	                mov dword [rbp - 4], eax	      2595	display.c	FUNCTION_24	IF_1
0x4005278	            0xeb13	                           jmp 0x400528d	      2595	display.c	FUNCTION_24	IF_1
0x400527a	    0x8b1500000000	            mov edx, dword [0x04005280] 	      2597	display.c	FUNCTION_24	ELSE_1
0x4005280	    0x8b0500000000	            mov eax, dword [0x04005286] 	      2597	display.c	FUNCTION_24	ELSE_1
0x4005286	            0x29c2	                            sub edx, eax	      2597	display.c	FUNCTION_24	ELSE_1
0x4005288	            0x89d0	                            mov eax, edx	      2597	display.c	FUNCTION_24	ELSE_1
0x400528a	          0x8945fc	                mov dword [rbp - 4], eax	      2597	display.c	FUNCTION_24	ELSE_1
0x400528d	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2599	display.c	FUNCTION_24	IF_2
0x4005291	            0x7e14	                           jle 0x40052a7	      2599	display.c	FUNCTION_24	IF_2
0x4005293	    0x8b0d00000000	            mov ecx, dword [0x04005299] 	      2600	display.c	FUNCTION_24	IF_2
0x4005299	          0x8b45fc	                mov eax, dword [rbp - 4]	      2600	display.c	FUNCTION_24	IF_2
0x400529c	              0x99	                                     cdq	      2600	display.c	FUNCTION_24	IF_2
0x400529d	            0xf7f9	                                idiv ecx	      2600	display.c	FUNCTION_24	IF_2
0x400529f	          0x83c001	                              add eax, 1	      2600	display.c	FUNCTION_24	IF_2
0x40052a2	          0x8945f8	                mov dword [rbp - 8], eax	      2600	display.c	FUNCTION_24	IF_2
0x40052a5	            0xeb07	                           jmp 0x40052ae	      2600	display.c	FUNCTION_24	IF_2
0x40052a7	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2602	display.c	FUNCTION_24	ELSE_2
0x40052ae	          0x8b45f8	                mov eax, dword [rbp - 8]	      2604	display.c	FUNCTION_24
0x40052b1	              0x5d	                                 pop rbp	      2605	display.c	FUNCTION_24
0x40052b2	              0xc3	                                     ret	      2605	display.c	FUNCTION_24
_rl_clear_to_eol	functions,0:WHILE,0:CALL,2:SWITCH,0:ELSE,1:DO,0:IF,2:FOR,0	21
0x4004bb6	              0x55	                                push rbp	      2333	display.c	FUNCTION_15
0x4004bb7	          0x4889e5	                            mov rbp, rsp	      2333	display.c	FUNCTION_15
0x4004bba	        0x4883ec10	                           sub rsp, 0x10	      2333	display.c	FUNCTION_15
0x4004bbe	          0x897dfc	                mov dword [rbp - 4], edi	      2333	display.c	FUNCTION_15
0x4004bc1	    0x488b05000000	            mov rax, qword [0x04004bc8] 	      2335	display.c	FUNCTION_15	IF_1
0x4004bc8	          0x4885c0	                           test rax, rax	      2335	display.c	FUNCTION_15	IF_1
0x4004bcb	            0x741b	                            je 0x4004be8	      2335	display.c	FUNCTION_15	IF_1
0x4004bcd	    0x488b05000000	            mov rax, qword [0x04004bd4] 	      2336	display.c	FUNCTION_15	CALL_1
0x4004bd4	      0xba00000000	                              mov edx, 0	      2336	display.c	FUNCTION_15	CALL_1
0x4004bd9	      0xbe01000000	                              mov esi, 1	      2336	display.c	FUNCTION_15	CALL_1
0x4004bde	          0x4889c7	                            mov rdi, rax	      2336	display.c	FUNCTION_15	CALL_1
0x4004be1	      0xe800000000	                          call 0x4004be6	      2336	display.c	FUNCTION_15	CALL_1
0x4004be6	            0xeb10	                           jmp 0x4004bf8	      2341	display.c	FUNCTION_15
0x4004be8	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2339	display.c	FUNCTION_15	ELSE_1	IF_2
0x4004bec	            0x740a	                            je 0x4004bf8	      2339	display.c	FUNCTION_15	ELSE_1	IF_2
0x4004bee	          0x8b45fc	                mov eax, dword [rbp - 4]	      2340	display.c	FUNCTION_15	ELSE_1	IF_2
0x4004bf1	            0x89c7	                            mov edi, eax	      2340	display.c	FUNCTION_15	ELSE_1	IF_2
0x4004bf3	      0xe803000000	                   call sym.space_to_eol	      2340	display.c	FUNCTION_15	ELSE_1	IF_2
0x4004bf8	              0x90	                                     nop	      2341	display.c	FUNCTION_15
0x4004bf9	              0xc9	                                   leave	      2341	display.c	FUNCTION_15
0x4004bfa	              0xc3	                                     ret	      2341	display.c	FUNCTION_15
