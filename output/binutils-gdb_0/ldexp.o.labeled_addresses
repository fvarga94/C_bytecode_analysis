exp_print_tree	DO,0:SWITCH,2:CALL,40:FOR,0:functions,0:WHILE,0:IF,8:ELSE,2	267
0x4002a16	              0x55	                                push rbp	      1402	ldexp.c	FUNCTION_41
0x4002a17	          0x4889e5	                            mov rbp, rsp	      1402	ldexp.c	FUNCTION_41
0x4002a1a	        0x4883ec20	                           sub rsp, 0x20	      1402	ldexp.c	FUNCTION_41
0x4002a1e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1402	ldexp.c	FUNCTION_41
0x4002a22	    0x488b05000000	            mov rax, qword [0x04002a29] 	      1405	ldexp.c	FUNCTION_41	IF_1
0x4002a29	          0x4885c0	                           test rax, rax	      1405	ldexp.c	FUNCTION_41	IF_1
0x4002a2c	            0x750e	                           jne 0x4002a3c	      1405	ldexp.c	FUNCTION_41	IF_1
0x4002a2e	    0x488b05000000	            mov rax, qword [0x04002a35] 	      1406	ldexp.c	FUNCTION_41	IF_1
0x4002a35	    0x488905000000	            mov qword [0x04002a3c], rax 	      1406	ldexp.c	FUNCTION_41	IF_1
0x4002a3c	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1408	ldexp.c	FUNCTION_41	IF_2
0x4002a41	            0x7514	                           jne 0x4002a57	      1408	ldexp.c	FUNCTION_41	IF_2
0x4002a43	      0xbf00000000	                              mov edi, 0	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x4002a48	      0xb800000000	                              mov eax, 0	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x4002a4d	      0xe800000000	                          call 0x4002a52	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x4002a52	      0xe92c040000	                           jmp 0x4002e83	      1411	ldexp.c	FUNCTION_41	IF_2
0x4002a57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x4002a5b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x4002a5e	          0x83f809	                              cmp eax, 9	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x4002a61	     0xf8706040000	                            ja 0x4002e6d	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x4002a67	            0x89c0	                            mov eax, eax	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x4002a69	    0x488b04c50000	                  mov rax, qword [rax*8]	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x4002a71	            0xffe0	                                 jmp rax	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x4002a73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x4002a77	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x4002a7b	          0x4889c6	                            mov rsi, rax	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x4002a7e	      0xbf00000000	                              mov edi, 0	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x4002a83	      0xb800000000	                              mov eax, 0	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x4002a88	      0xe800000000	                          call 0x4002a8d	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x4002a8d	      0xe9f1030000	                           jmp 0x4002e83	      1418	ldexp.c	FUNCTION_41	SWITCH_1
0x4002a92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x4002a96	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x4002a9a	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x4002aa1	          0x4885c0	                           test rax, rax	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x4002aa4	            0x7421	                            je 0x4002ac7	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x4002aa6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002aaa	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002aae	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002ab5	          0x4889c6	                            mov rsi, rax	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002ab8	      0xbf00000000	                              mov edi, 0	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002abd	      0xb800000000	                              mov eax, 0	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002ac2	      0xe800000000	                          call 0x4002ac7	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002ac7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002acb	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002acf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002ad3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002ad7	          0x488b00	                    mov rax, qword [rax]	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002ada	          0x4889c6	                            mov rsi, rax	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002add	      0xbf00000000	                              mov edi, 0	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002ae2	      0xb800000000	                              mov eax, 0	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002ae7	      0xe800000000	                          call 0x4002aec	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002aec	      0xe992030000	                           jmp 0x4002e83	      1423	ldexp.c	FUNCTION_41	SWITCH_1
0x4002af1	    0x488b15000000	            mov rdx, qword [0x04002af8] 	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4002af8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4002afc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4002b00	          0x4889d6	                            mov rsi, rdx	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4002b03	          0x4889c7	                            mov rdi, rax	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4002b06	      0xe800000000	                          call 0x4002b0b	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4002b0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4002b0f	            0x8b00	                    mov eax, dword [rax]	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4002b11	      0xbe01000000	                              mov esi, 1	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4002b16	            0x89c7	                            mov edi, eax	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4002b18	      0xe823d5ffff	                call sym.exp_print_token	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4002b1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1427	ldexp.c	FUNCTION_41	SWITCH_1	CALL_7
0x4002b21	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1427	ldexp.c	FUNCTION_41	SWITCH_1	CALL_7
0x4002b25	          0x4889c7	                            mov rdi, rax	      1427	ldexp.c	FUNCTION_41	SWITCH_1	CALL_7
0x4002b28	      0xe800000000	                          call 0x4002b2d	      1427	ldexp.c	FUNCTION_41	SWITCH_1	CALL_7
0x4002b2d	      0xe951030000	                           jmp 0x4002e83	      1428	ldexp.c	FUNCTION_41	SWITCH_1
0x4002b32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1431	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x4002b36	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1431	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x4002b3a	    0x488b05000000	            mov rax, qword [0x04002b41] 	      1431	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x4002b41	      0xbe00000000	                              mov esi, 0	      1431	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x4002b46	          0x4889c7	                            mov rdi, rax	      1431	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x4002b49	      0xb800000000	                              mov eax, 0	      1431	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x4002b4e	      0xe800000000	                          call 0x4002b53	      1431	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x4002b53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1432	ldexp.c	FUNCTION_41	SWITCH_1	CALL_9
0x4002b57	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1432	ldexp.c	FUNCTION_41	SWITCH_1	CALL_9
0x4002b5b	          0x4889c7	                            mov rdi, rax	      1432	ldexp.c	FUNCTION_41	SWITCH_1	CALL_9
0x4002b5e	      0xe800000000	                          call 0x4002b63	      1432	ldexp.c	FUNCTION_41	SWITCH_1	CALL_9
0x4002b63	    0x488b05000000	            mov rax, qword [0x04002b6a] 	      1433	ldexp.c	FUNCTION_41	SWITCH_1	CALL_10
0x4002b6a	          0x4889c6	                            mov rsi, rax	      1433	ldexp.c	FUNCTION_41	SWITCH_1	CALL_10
0x4002b6d	      0xbf29000000	                           mov edi, 0x29	      1433	ldexp.c	FUNCTION_41	SWITCH_1	CALL_10
0x4002b72	      0xe800000000	                          call 0x4002b77	      1433	ldexp.c	FUNCTION_41	SWITCH_1	CALL_10
0x4002b77	      0xe907030000	                           jmp 0x4002e83	      1434	ldexp.c	FUNCTION_41	SWITCH_1
0x4002b7c	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1436	ldexp.c	FUNCTION_41	SWITCH_1
0x4002b83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002b87	            0x8b00	                    mov eax, dword [rax]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002b89	      0x2d17010000	                          sub eax, 0x117	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002b8e	          0x83f82f	                           cmp eax, 0x2f	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002b91	     0xf879f000000	                            ja 0x4002c36	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002b97	            0x89c0	                            mov eax, eax	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002b99	    0x488b04c50000	                  mov rax, qword [rax*8]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002ba1	            0xffe0	                                 jmp rax	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002ba3	    0xc745fc010000	                  mov dword [rbp - 4], 1	      1444	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002baa	      0xe987000000	                           jmp 0x4002c36	      1445	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002baf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1449	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x4002bb3	            0x8b00	                    mov eax, dword [rax]	      1449	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x4002bb5	      0xbe00000000	                              mov esi, 0	      1449	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x4002bba	            0x89c7	                            mov edi, eax	      1449	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x4002bbc	      0xe87fd4ffff	                call sym.exp_print_token	      1449	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x4002bc1	    0x488b05000000	            mov rax, qword [0x04002bc8] 	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x4002bc8	          0x4889c1	                            mov rcx, rax	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x4002bcb	      0xba03000000	                              mov edx, 3	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x4002bd0	      0xbe01000000	                              mov esi, 1	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x4002bd5	      0xbf00000000	                              mov edi, 0	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x4002bda	      0xe800000000	                          call 0x4002bdf	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x4002bdf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1451	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4002be3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1451	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4002be7	          0x4889c7	                            mov rdi, rax	      1451	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4002bea	      0xe800000000	                          call 0x4002bef	      1451	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4002bef	    0x488b05000000	            mov rax, qword [0x04002bf6] 	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x4002bf6	          0x4889c1	                            mov rcx, rax	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x4002bf9	      0xba03000000	                              mov edx, 3	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x4002bfe	      0xbe01000000	                              mov esi, 1	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x4002c03	      0xbf00000000	                              mov edi, 0	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x4002c08	      0xe800000000	                          call 0x4002c0d	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x4002c0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4002c11	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4002c15	          0x4889c7	                            mov rdi, rax	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4002c18	      0xe800000000	                          call 0x4002c1d	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4002c1d	    0x488b05000000	            mov rax, qword [0x04002c24] 	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_16
0x4002c24	          0x4889c6	                            mov rsi, rax	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_16
0x4002c27	      0xbf29000000	                           mov edi, 0x29	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_16
0x4002c2c	      0xe800000000	                          call 0x4002c31	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_16
0x4002c31	      0xe94d020000	                           jmp 0x4002e83	      1455	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002c36	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1457	ldexp.c	FUNCTION_41	SWITCH_1	IF_4
0x4002c3a	            0x7426	                            je 0x4002c62	      1457	ldexp.c	FUNCTION_41	SWITCH_1	IF_4
0x4002c3c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1459	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4002c40	            0x8b00	                    mov eax, dword [rax]	      1459	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4002c42	      0xbe00000000	                              mov esi, 0	      1459	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4002c47	            0x89c7	                            mov edi, eax	      1459	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4002c49	      0xe8f2d3ffff	                call sym.exp_print_token	      1459	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4002c4e	    0x488b05000000	            mov rax, qword [0x04002c55] 	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_18
0x4002c55	          0x4889c6	                            mov rsi, rax	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_18
0x4002c58	      0xbf20000000	                           mov edi, 0x20	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_18
0x4002c5d	      0xe800000000	                          call 0x4002c62	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_18
0x4002c62	    0x488b05000000	            mov rax, qword [0x04002c69] 	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x4002c69	          0x4889c6	                            mov rsi, rax	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x4002c6c	      0xbf28000000	                           mov edi, 0x28	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x4002c71	      0xe800000000	                          call 0x4002c76	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x4002c76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x4002c7a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x4002c7e	          0x4889c7	                            mov rdi, rax	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x4002c81	      0xe800000000	                          call 0x4002c86	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x4002c86	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1464	ldexp.c	FUNCTION_41	SWITCH_1	IF_5
0x4002c8a	            0x7420	                            je 0x4002cac	      1464	ldexp.c	FUNCTION_41	SWITCH_1	IF_5
0x4002c8c	    0x488b05000000	            mov rax, qword [0x04002c93] 	      1465	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002c93	          0x4889c1	                            mov rcx, rax	      1465	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002c96	      0xba02000000	                              mov edx, 2	      1465	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002c9b	      0xbe01000000	                              mov esi, 1	      1465	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002ca0	      0xbf00000000	                              mov edi, 0	      1465	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002ca5	      0xe800000000	                          call 0x4002caa	      1465	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002caa	            0xeb12	                           jmp 0x4002cbe	      1465	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002cac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_22
0x4002cb0	            0x8b00	                    mov eax, dword [rax]	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_22
0x4002cb2	      0xbe01000000	                              mov esi, 1	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_22
0x4002cb7	            0x89c7	                            mov edi, eax	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_22
0x4002cb9	      0xe882d3ffff	                call sym.exp_print_token	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_22
0x4002cbe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_23
0x4002cc2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_23
0x4002cc6	          0x4889c7	                            mov rdi, rax	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_23
0x4002cc9	      0xe800000000	                          call 0x4002cce	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_23
0x4002cce	    0x488b05000000	            mov rax, qword [0x04002cd5] 	      1469	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x4002cd5	          0x4889c6	                            mov rsi, rax	      1469	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x4002cd8	      0xbf29000000	                           mov edi, 0x29	      1469	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x4002cdd	      0xe800000000	                          call 0x4002ce2	      1469	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x4002ce2	      0xe99c010000	                           jmp 0x4002e83	      1470	ldexp.c	FUNCTION_41	SWITCH_1
0x4002ce7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1472	ldexp.c	FUNCTION_41	SWITCH_1	CALL_25
0x4002ceb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1472	ldexp.c	FUNCTION_41	SWITCH_1	CALL_25
0x4002cef	          0x4889c7	                            mov rdi, rax	      1472	ldexp.c	FUNCTION_41	SWITCH_1	CALL_25
0x4002cf2	      0xe800000000	                          call 0x4002cf7	      1472	ldexp.c	FUNCTION_41	SWITCH_1	CALL_25
0x4002cf7	    0x488b05000000	            mov rax, qword [0x04002cfe] 	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x4002cfe	          0x4889c6	                            mov rsi, rax	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x4002d01	      0xbf3f000000	                           mov edi, 0x3f	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x4002d06	      0xe800000000	                          call 0x4002d0b	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x4002d0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1474	ldexp.c	FUNCTION_41	SWITCH_1	CALL_27
0x4002d0f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1474	ldexp.c	FUNCTION_41	SWITCH_1	CALL_27
0x4002d13	          0x4889c7	                            mov rdi, rax	      1474	ldexp.c	FUNCTION_41	SWITCH_1	CALL_27
0x4002d16	      0xe800000000	                          call 0x4002d1b	      1474	ldexp.c	FUNCTION_41	SWITCH_1	CALL_27
0x4002d1b	    0x488b05000000	            mov rax, qword [0x04002d22] 	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x4002d22	          0x4889c6	                            mov rsi, rax	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x4002d25	      0xbf3a000000	                           mov edi, 0x3a	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x4002d2a	      0xe800000000	                          call 0x4002d2f	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x4002d2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1476	ldexp.c	FUNCTION_41	SWITCH_1	CALL_29
0x4002d33	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1476	ldexp.c	FUNCTION_41	SWITCH_1	CALL_29
0x4002d37	          0x4889c7	                            mov rdi, rax	      1476	ldexp.c	FUNCTION_41	SWITCH_1	CALL_29
0x4002d3a	      0xe800000000	                          call 0x4002d3f	      1476	ldexp.c	FUNCTION_41	SWITCH_1	CALL_29
0x4002d3f	      0xe93f010000	                           jmp 0x4002e83	      1477	ldexp.c	FUNCTION_41	SWITCH_1
0x4002d44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_30
0x4002d48	            0x8b00	                    mov eax, dword [rax]	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_30
0x4002d4a	      0xbe00000000	                              mov esi, 0	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_30
0x4002d4f	            0x89c7	                            mov edi, eax	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_30
0x4002d51	      0xe8ead2ffff	                call sym.exp_print_token	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_30
0x4002d56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1480	ldexp.c	FUNCTION_41	SWITCH_1	IF_6
0x4002d5a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1480	ldexp.c	FUNCTION_41	SWITCH_1	IF_6
0x4002d5e	          0x4885c0	                           test rax, rax	      1480	ldexp.c	FUNCTION_41	SWITCH_1	IF_6
0x4002d61	     0xf8418010000	                            je 0x4002e7f	      1480	ldexp.c	FUNCTION_41	SWITCH_1	IF_6
0x4002d67	    0x488b05000000	            mov rax, qword [0x04002d6e] 	      1482	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_31
0x4002d6e	          0x4889c1	                            mov rcx, rax	      1482	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_31
0x4002d71	      0xba02000000	                              mov edx, 2	      1482	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_31
0x4002d76	      0xbe01000000	                              mov esi, 1	      1482	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_31
0x4002d7b	      0xbf00000000	                              mov edi, 0	      1482	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_31
0x4002d80	      0xe800000000	                          call 0x4002d85	      1482	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_31
0x4002d85	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1483	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_32
0x4002d89	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1483	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_32
0x4002d8d	          0x4889c7	                            mov rdi, rax	      1483	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_32
0x4002d90	      0xe800000000	                          call 0x4002d95	      1483	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_32
0x4002d95	    0x488b05000000	            mov rax, qword [0x04002d9c] 	      1484	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_33
0x4002d9c	          0x4889c6	                            mov rsi, rax	      1484	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_33
0x4002d9f	      0xbf29000000	                           mov edi, 0x29	      1484	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_33
0x4002da4	      0xe800000000	                          call 0x4002da9	      1484	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_33
0x4002da9	      0xe9d1000000	                           jmp 0x4002e7f	      1486	ldexp.c	FUNCTION_41	SWITCH_1
0x4002dae	    0x488b05000000	            mov rax, qword [0x04002db5] 	      1489	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x4002db5	          0x4889c1	                            mov rcx, rax	      1489	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x4002db8	      0xba08000000	                              mov edx, 8	      1489	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x4002dbd	      0xbe01000000	                              mov esi, 1	      1489	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x4002dc2	      0xbf00000000	                              mov edi, 0	      1489	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x4002dc7	      0xe800000000	                          call 0x4002dcc	      1489	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x4002dcc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1490	ldexp.c	FUNCTION_41	SWITCH_1	CALL_35
0x4002dd0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1490	ldexp.c	FUNCTION_41	SWITCH_1	CALL_35
0x4002dd4	          0x4889c7	                            mov rdi, rax	      1490	ldexp.c	FUNCTION_41	SWITCH_1	CALL_35
0x4002dd7	      0xe800000000	                          call 0x4002ddc	      1490	ldexp.c	FUNCTION_41	SWITCH_1	CALL_35
0x4002ddc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1491	ldexp.c	FUNCTION_41	SWITCH_1	CALL_36
0x4002de0	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1491	ldexp.c	FUNCTION_41	SWITCH_1	CALL_36
0x4002de4	    0x488b05000000	            mov rax, qword [0x04002deb] 	      1491	ldexp.c	FUNCTION_41	SWITCH_1	CALL_36
0x4002deb	      0xbe00000000	                              mov esi, 0	      1491	ldexp.c	FUNCTION_41	SWITCH_1	CALL_36
0x4002df0	          0x4889c7	                            mov rdi, rax	      1491	ldexp.c	FUNCTION_41	SWITCH_1	CALL_36
0x4002df3	      0xb800000000	                              mov eax, 0	      1491	ldexp.c	FUNCTION_41	SWITCH_1	CALL_36
0x4002df8	      0xe800000000	                          call 0x4002dfd	      1491	ldexp.c	FUNCTION_41	SWITCH_1	CALL_36
0x4002dfd	      0xe981000000	                           jmp 0x4002e83	      1492	ldexp.c	FUNCTION_41	SWITCH_1
0x4002e02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4002e06	            0x8b00	                    mov eax, dword [rax]	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4002e08	      0x3d03010000	                          cmp eax, 0x103	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4002e0d	            0x751c	                           jne 0x4002e2b	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4002e0f	    0x488b15000000	            mov rdx, qword [0x04002e16] 	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_37
0x4002e16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_37
0x4002e1a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_37
0x4002e1e	          0x4889d6	                            mov rsi, rdx	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_37
0x4002e21	          0x4889c7	                            mov rdi, rax	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_37
0x4002e24	      0xe800000000	                          call 0x4002e29	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_37
0x4002e29	            0xeb57	                           jmp 0x4002e82	      1503	ldexp.c	FUNCTION_41	SWITCH_1
0x4002e2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1499	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_38
0x4002e2f	            0x8b00	                    mov eax, dword [rax]	      1499	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_38
0x4002e31	      0xbe00000000	                              mov esi, 0	      1499	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_38
0x4002e36	            0x89c7	                            mov edi, eax	      1499	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_38
0x4002e38	      0xe803d2ffff	                call sym.exp_print_token	      1499	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_38
0x4002e3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x4002e41	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x4002e45	          0x4885c0	                           test rax, rax	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x4002e48	            0x7438	                            je 0x4002e82	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x4002e4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1501	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_39
0x4002e4e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1501	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_39
0x4002e52	    0x488b05000000	            mov rax, qword [0x04002e59] 	      1501	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_39
0x4002e59	      0xbe00000000	                              mov esi, 0	      1501	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_39
0x4002e5e	          0x4889c7	                            mov rdi, rax	      1501	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_39
0x4002e61	      0xb800000000	                              mov eax, 0	      1501	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_39
0x4002e66	      0xe800000000	                          call 0x4002e6b	      1501	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_39
0x4002e6b	            0xeb15	                           jmp 0x4002e82	      1503	ldexp.c	FUNCTION_41	SWITCH_1
0x4002e6d	      0xbee1050000	                          mov esi, 0x5e1	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_40
0x4002e72	      0xbf00000000	                              mov edi, 0	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_40
0x4002e77	      0xe800000000	                          call 0x4002e7c	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_40
0x4002e7c	              0x90	                                     nop	      1506	ldexp.c	FUNCTION_41	SWITCH_1
0x4002e7d	            0xeb04	                           jmp 0x4002e83	      1506	ldexp.c	FUNCTION_41	SWITCH_1
0x4002e7f	              0x90	                                     nop	      1486	ldexp.c	FUNCTION_41	SWITCH_1
0x4002e80	            0xeb01	                           jmp 0x4002e83	      1486	ldexp.c	FUNCTION_41	SWITCH_1
0x4002e82	              0x90	                                     nop	      1503	ldexp.c	FUNCTION_41	SWITCH_1
0x4002e83	              0xc9	                                   leave	      1508	ldexp.c	FUNCTION_41
0x4002e84	              0xc3	                                     ret	      1508	ldexp.c	FUNCTION_41
exp_unop	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,1:ELSE,0	42
0x40027a2	              0x55	                                push rbp	      1309	ldexp.c	FUNCTION_34
0x40027a3	          0x4889e5	                            mov rbp, rsp	      1309	ldexp.c	FUNCTION_34
0x40027a6	        0x4883ec20	                           sub rsp, 0x20	      1309	ldexp.c	FUNCTION_34
0x40027aa	          0x897dec	             mov dword [rbp - 0x14], edi	      1309	ldexp.c	FUNCTION_34
0x40027ad	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1309	ldexp.c	FUNCTION_34
0x40027b1	      0xbf28000000	                           mov edi, 0x28	      1310	ldexp.c	FUNCTION_34	CALL_1
0x40027b6	      0xe800000000	                          call 0x40027bb	      1310	ldexp.c	FUNCTION_34	CALL_1
0x40027bb	        0x488945f8	                mov qword [rbp - 8], rax	      1310	ldexp.c	FUNCTION_34	CALL_1
0x40027bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1312	ldexp.c	FUNCTION_34
0x40027c3	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1312	ldexp.c	FUNCTION_34
0x40027c6	            0x8910	                    mov dword [rax], edx	      1312	ldexp.c	FUNCTION_34
0x40027c8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1313	ldexp.c	FUNCTION_34
0x40027cc	        0x488b5008	                mov rdx, qword [rax + 8]	      1313	ldexp.c	FUNCTION_34
0x40027d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1313	ldexp.c	FUNCTION_34
0x40027d4	        0x48895008	                mov qword [rax + 8], rdx	      1313	ldexp.c	FUNCTION_34
0x40027d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1314	ldexp.c	FUNCTION_34
0x40027dc	          0x8b5004	                mov edx, dword [rax + 4]	      1314	ldexp.c	FUNCTION_34
0x40027df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1314	ldexp.c	FUNCTION_34
0x40027e3	          0x895004	                mov dword [rax + 4], edx	      1314	ldexp.c	FUNCTION_34
0x40027e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1315	ldexp.c	FUNCTION_34
0x40027ea	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1315	ldexp.c	FUNCTION_34
0x40027ee	        0x48895018	             mov qword [rax + 0x18], rdx	      1315	ldexp.c	FUNCTION_34
0x40027f2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1316	ldexp.c	FUNCTION_34
0x40027f6	    0xc74010020000	               mov dword [rax + 0x10], 2	      1316	ldexp.c	FUNCTION_34
0x40027fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1317	ldexp.c	FUNCTION_34	IF_1
0x4002801	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1317	ldexp.c	FUNCTION_34	IF_1
0x4002804	          0x83f807	                              cmp eax, 7	      1317	ldexp.c	FUNCTION_34	IF_1
0x4002807	            0x7530	                           jne 0x4002839	      1317	ldexp.c	FUNCTION_34	IF_1
0x4002809	    0x817dec170100	          cmp dword [rbp - 0x14], 0x117 	      1318	ldexp.c	FUNCTION_34	IF_1
0x4002810	            0x7427	                            je 0x4002839	      1318	ldexp.c	FUNCTION_34	IF_1
0x4002812	    0x817dec600100	          cmp dword [rbp - 0x14], 0x160 	      1319	ldexp.c	FUNCTION_34	IF_1
0x4002819	            0x741e	                            je 0x4002839	      1319	ldexp.c	FUNCTION_34	IF_1
0x400281b	    0x817dec400100	          cmp dword [rbp - 0x14], 0x140 	      1320	ldexp.c	FUNCTION_34	IF_1
0x4002822	            0x7415	                            je 0x4002839	      1320	ldexp.c	FUNCTION_34	IF_1
0x4002824	    0x817dec260100	          cmp dword [rbp - 0x14], 0x126 	      1321	ldexp.c	FUNCTION_34	IF_1
0x400282b	            0x740c	                            je 0x4002839	      1321	ldexp.c	FUNCTION_34	IF_1
0x400282d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1322	ldexp.c	FUNCTION_34	CALL_2
0x4002831	          0x4889c7	                            mov rdi, rax	      1322	ldexp.c	FUNCTION_34	CALL_2
0x4002834	      0xe8b3fdffff	                 call sym.exp_value_fold	      1322	ldexp.c	FUNCTION_34	CALL_2
0x4002839	        0x488b45f8	                mov rax, qword [rbp - 8]	      1323	ldexp.c	FUNCTION_34
0x400283d	              0xc9	                                   leave	      1324	ldexp.c	FUNCTION_34
0x400283e	              0xc3	                                     ret	      1324	ldexp.c	FUNCTION_34
exp_assop	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	35
0x400289f	              0x55	                                push rbp	      1345	ldexp.c	FUNCTION_36
0x40028a0	          0x4889e5	                            mov rbp, rsp	      1345	ldexp.c	FUNCTION_36
0x40028a3	        0x4883ec30	                           sub rsp, 0x30	      1345	ldexp.c	FUNCTION_36
0x40028a7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1345	ldexp.c	FUNCTION_36
0x40028ab	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1345	ldexp.c	FUNCTION_36
0x40028af	          0x8955dc	             mov dword [rbp - 0x24], edx	      1345	ldexp.c	FUNCTION_36
0x40028b2	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1345	ldexp.c	FUNCTION_36
0x40028b5	      0xbf30000000	                           mov edi, 0x30	      1348	ldexp.c	FUNCTION_36	CALL_1
0x40028ba	      0xe800000000	                          call 0x40028bf	      1348	ldexp.c	FUNCTION_36	CALL_1
0x40028bf	        0x488945f8	                mov qword [rbp - 8], rax	      1348	ldexp.c	FUNCTION_36	CALL_1
0x40028c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1349	ldexp.c	FUNCTION_36
0x40028c7	    0xc7003d000000	                   mov dword [rax], 0x3d	      1349	ldexp.c	FUNCTION_36
0x40028cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1350	ldexp.c	FUNCTION_36
0x40028d1	        0x488b5008	                mov rdx, qword [rax + 8]	      1350	ldexp.c	FUNCTION_36
0x40028d5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1350	ldexp.c	FUNCTION_36
0x40028d9	        0x48895008	                mov qword [rax + 8], rdx	      1350	ldexp.c	FUNCTION_36
0x40028dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1351	ldexp.c	FUNCTION_36
0x40028e1	          0x8b5004	                mov edx, dword [rax + 4]	      1351	ldexp.c	FUNCTION_36
0x40028e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1351	ldexp.c	FUNCTION_36
0x40028e8	          0x895004	                mov dword [rax + 4], edx	      1351	ldexp.c	FUNCTION_36
0x40028eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1352	ldexp.c	FUNCTION_36
0x40028ef	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1352	ldexp.c	FUNCTION_36
0x40028f2	          0x895010	             mov dword [rax + 0x10], edx	      1352	ldexp.c	FUNCTION_36
0x40028f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1353	ldexp.c	FUNCTION_36
0x40028f9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1353	ldexp.c	FUNCTION_36
0x40028fd	        0x48895020	             mov qword [rax + 0x20], rdx	      1353	ldexp.c	FUNCTION_36
0x4002901	        0x488b45f8	                mov rax, qword [rbp - 8]	      1354	ldexp.c	FUNCTION_36
0x4002905	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1354	ldexp.c	FUNCTION_36
0x4002909	        0x48895018	             mov qword [rax + 0x18], rdx	      1354	ldexp.c	FUNCTION_36
0x400290d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1355	ldexp.c	FUNCTION_36
0x4002911	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1355	ldexp.c	FUNCTION_36
0x4002914	          0x895028	             mov dword [rax + 0x28], edx	      1355	ldexp.c	FUNCTION_36
0x4002917	        0x488b45f8	                mov rax, qword [rbp - 8]	      1356	ldexp.c	FUNCTION_36
0x400291b	              0xc9	                                   leave	      1357	ldexp.c	FUNCTION_36
0x400291c	              0xc3	                                     ret	      1357	ldexp.c	FUNCTION_36
ldexp_finalize_syms	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	9
0x40032ae	              0x55	                                push rbp	      1660	ldexp.c	FUNCTION_49
0x40032af	          0x4889e5	                            mov rbp, rsp	      1660	ldexp.c	FUNCTION_49
0x40032b2	      0xba00000000	                              mov edx, 0	      1661	ldexp.c	FUNCTION_49	CALL_1
0x40032b7	      0xbe00000000	                              mov esi, 0	      1661	ldexp.c	FUNCTION_49	CALL_1
0x40032bc	      0xbf00000000	                              mov edi, 0	      1661	ldexp.c	FUNCTION_49	CALL_1
0x40032c1	      0xe800000000	                          call 0x40032c6	      1661	ldexp.c	FUNCTION_49	CALL_1
0x40032c6	              0x90	                                     nop	      1662	ldexp.c	FUNCTION_49
0x40032c7	              0x5d	                                 pop rbp	      1662	ldexp.c	FUNCTION_49
0x40032c8	              0xc3	                                     ret	      1662	ldexp.c	FUNCTION_49
is_sym_value	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	61
0x4001c36	              0x55	                                push rbp	       939	ldexp.c	FUNCTION_24
0x4001c37	          0x4889e5	                            mov rbp, rsp	       939	ldexp.c	FUNCTION_24
0x4001c3a	        0x4883ec20	                           sub rsp, 0x20	       939	ldexp.c	FUNCTION_24
0x4001c3e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       939	ldexp.c	FUNCTION_24
0x4001c42	        0x488975e0	             mov qword [rbp - 0x20], rsi	       939	ldexp.c	FUNCTION_24
0x4001c46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       943	ldexp.c	FUNCTION_24
0x4001c4a	          0x8b4010	            mov eax, dword [rax + 0x10] 	       943	ldexp.c	FUNCTION_24
0x4001c4d	          0x83f803	                              cmp eax, 3	       954	ldexp.c	FUNCTION_24
0x4001c50	     0xf85c0000000	                           jne 0x4001d16	       954	ldexp.c	FUNCTION_24
0x4001c56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       944	ldexp.c	FUNCTION_24
0x4001c5a	            0x8b00	                    mov eax, dword [rax]	       944	ldexp.c	FUNCTION_24
0x4001c5c	      0x3d03010000	                          cmp eax, 0x103	       944	ldexp.c	FUNCTION_24
0x4001c61	     0xf85af000000	                           jne 0x4001d16	       944	ldexp.c	FUNCTION_24
0x4001c67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       945	ldexp.c	FUNCTION_24	CALL_1
0x4001c6b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       945	ldexp.c	FUNCTION_24	CALL_1
0x4001c6f	          0x4889c7	                            mov rdi, rax	       945	ldexp.c	FUNCTION_24	CALL_1
0x4001c72	      0xe80be8ffff	                 call sym.symbol_defined	       945	ldexp.c	FUNCTION_24	CALL_1
0x4001c77	        0x488945f0	             mov qword [rbp - 0x10], rax	       945	ldexp.c	FUNCTION_24	CALL_1
0x4001c7b	      0x48837df000	               cmp qword [rbp - 0x10], 0	       945	ldexp.c	FUNCTION_24	CALL_1
0x4001c80	     0xf8490000000	                            je 0x4001d16	       945	ldexp.c	FUNCTION_24	CALL_1
0x4001c86	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       946	ldexp.c	FUNCTION_24
0x4001c8a	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       946	ldexp.c	FUNCTION_24
0x4001c8e	           0xfb6d0	                           movzx edx, al	       946	ldexp.c	FUNCTION_24
0x4001c91	    0x8b0500000000	            mov eax, dword [0x04001c97] 	       946	ldexp.c	FUNCTION_24
0x4001c97	           0xfb6c0	                           movzx eax, al	       946	ldexp.c	FUNCTION_24
0x4001c9a	            0x39c2	                            cmp edx, eax	       946	ldexp.c	FUNCTION_24
0x4001c9c	            0x7578	                           jne 0x4001d16	       946	ldexp.c	FUNCTION_24
0x4001c9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001ca2	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001ca6	    0x488b05000000	            mov rax, qword [0x04001cad] 	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001cad	    0x41b901000000	                              mov r9d, 1	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001cb3	    0x41b800000000	                              mov r8d, 0	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001cb9	      0xb900000000	                              mov ecx, 0	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001cbe	      0xbe00000000	                              mov esi, 0	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001cc3	          0x4889c7	                            mov rdi, rax	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001cc6	      0xe800000000	                          call 0x4001ccb	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001ccb	        0x488945f8	                mov qword [rbp - 8], rax	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001ccf	      0x48837df800	                  cmp qword [rbp - 8], 0	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001cd4	            0x7440	                            je 0x4001d16	       947	ldexp.c	FUNCTION_24	CALL_2
0x4001cd6	        0x488b45f8	                mov rax, qword [rbp - 8]	       951	ldexp.c	FUNCTION_24
0x4001cda	         0xfb64019	           movzx eax, byte [rax + 0x19] 	       951	ldexp.c	FUNCTION_24
0x4001cde	          0x83e008	                              and eax, 8	       951	ldexp.c	FUNCTION_24
0x4001ce1	            0x84c0	                             test al, al	       951	ldexp.c	FUNCTION_24
0x4001ce3	            0x7431	                            je 0x4001d16	       951	ldexp.c	FUNCTION_24
0x4001ce5	        0x488b45f8	                mov rax, qword [rbp - 8]	       952	ldexp.c	FUNCTION_24
0x4001ce9	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       952	ldexp.c	FUNCTION_24
0x4001ced	            0x3c03	                               cmp al, 3	       952	ldexp.c	FUNCTION_24
0x4001cef	            0x7525	                           jne 0x4001d16	       952	ldexp.c	FUNCTION_24
0x4001cf1	        0x488b45f8	                mov rax, qword [rbp - 8]	       953	ldexp.c	FUNCTION_24
0x4001cf5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       953	ldexp.c	FUNCTION_24
0x4001cf9	    0x483d00000000	                              cmp rax, 0	       953	ldexp.c	FUNCTION_24
0x4001cff	            0x7515	                           jne 0x4001d16	       953	ldexp.c	FUNCTION_24
0x4001d01	        0x488b45f8	                mov rax, qword [rbp - 8]	       954	ldexp.c	FUNCTION_24
0x4001d05	        0x488b4030	            mov rax, qword [rax + 0x30] 	       954	ldexp.c	FUNCTION_24
0x4001d09	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       954	ldexp.c	FUNCTION_24
0x4001d0d	            0x7507	                           jne 0x4001d16	       954	ldexp.c	FUNCTION_24
0x4001d0f	      0xb801000000	                              mov eax, 1	       954	ldexp.c	FUNCTION_24
0x4001d14	            0xeb05	                           jmp 0x4001d1b	       954	ldexp.c	FUNCTION_24
0x4001d16	      0xb800000000	                              mov eax, 0	       954	ldexp.c	FUNCTION_24
0x4001d1b	              0xc9	                                   leave	       955	ldexp.c	FUNCTION_24
0x4001d1c	              0xc3	                                     ret	       955	ldexp.c	FUNCTION_24
is_dot_plus_0	DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	37
0x4001d7c	              0x55	                                push rbp	       973	ldexp.c	FUNCTION_26
0x4001d7d	          0x4889e5	                            mov rbp, rsp	       973	ldexp.c	FUNCTION_26
0x4001d80	        0x4883ec10	                           sub rsp, 0x10	       973	ldexp.c	FUNCTION_26
0x4001d84	        0x48897df8	                mov qword [rbp - 8], rdi	       973	ldexp.c	FUNCTION_26
0x4001d88	        0x488b45f8	                mov rax, qword [rbp - 8]	       974	ldexp.c	FUNCTION_26
0x4001d8c	          0x8b4010	            mov eax, dword [rax + 0x10] 	       974	ldexp.c	FUNCTION_26
0x4001d8f	            0x85c0	                           test eax, eax	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001d91	            0x7558	                           jne 0x4001deb	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001d93	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	ldexp.c	FUNCTION_26
0x4001d97	            0x8b00	                    mov eax, dword [rax]	       975	ldexp.c	FUNCTION_26
0x4001d99	          0x83f82b	                           cmp eax, 0x2b	       975	ldexp.c	FUNCTION_26
0x4001d9c	            0x754d	                           jne 0x4001deb	       975	ldexp.c	FUNCTION_26
0x4001d9e	        0x488b45f8	                mov rax, qword [rbp - 8]	       976	ldexp.c	FUNCTION_26	CALL_1
0x4001da2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       976	ldexp.c	FUNCTION_26	CALL_1
0x4001da6	          0x4889c7	                            mov rdi, rax	       976	ldexp.c	FUNCTION_26	CALL_1
0x4001da9	      0xe803feffff	                         call sym.is_dot	       976	ldexp.c	FUNCTION_26	CALL_1
0x4001dae	            0x85c0	                           test eax, eax	       976	ldexp.c	FUNCTION_26	CALL_1
0x4001db0	            0x7439	                            je 0x4001deb	       976	ldexp.c	FUNCTION_26	CALL_1
0x4001db2	        0x488b45f8	                mov rax, qword [rbp - 8]	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001db6	        0x488b4020	            mov rax, qword [rax + 0x20] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001dba	      0xbe00000000	                              mov esi, 0	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001dbf	          0x4889c7	                            mov rdi, rax	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001dc2	      0xe83bfeffff	                       call sym.is_value	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001dc7	            0x85c0	                           test eax, eax	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001dc9	            0x7519	                           jne 0x4001de4	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001dcb	        0x488b45f8	                mov rax, qword [rbp - 8]	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001dcf	        0x488b4020	            mov rax, qword [rax + 0x20] 	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001dd3	      0xbe00000000	                              mov esi, 0	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001dd8	          0x4889c7	                            mov rdi, rax	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001ddb	      0xe856feffff	                   call sym.is_sym_value	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001de0	            0x85c0	                           test eax, eax	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001de2	            0x7407	                            je 0x4001deb	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001de4	      0xb801000000	                              mov eax, 1	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001de9	            0xeb05	                           jmp 0x4001df0	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001deb	      0xb800000000	                              mov eax, 0	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001df0	              0xc9	                                   leave	       979	ldexp.c	FUNCTION_26
0x4001df1	              0xc3	                                     ret	       979	ldexp.c	FUNCTION_26
exp_assert	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	29
0x40029a7	              0x55	                                push rbp	      1387	ldexp.c	FUNCTION_40
0x40029a8	          0x4889e5	                            mov rbp, rsp	      1387	ldexp.c	FUNCTION_40
0x40029ab	        0x4883ec20	                           sub rsp, 0x20	      1387	ldexp.c	FUNCTION_40
0x40029af	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1387	ldexp.c	FUNCTION_40
0x40029b3	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1387	ldexp.c	FUNCTION_40
0x40029b7	      0xbf28000000	                           mov edi, 0x28	      1390	ldexp.c	FUNCTION_40	CALL_1
0x40029bc	      0xe800000000	                          call 0x40029c1	      1390	ldexp.c	FUNCTION_40	CALL_1
0x40029c1	        0x488945f8	                mov qword [rbp - 8], rax	      1390	ldexp.c	FUNCTION_40	CALL_1
0x40029c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1391	ldexp.c	FUNCTION_40
0x40029c9	    0xc70021000000	                   mov dword [rax], 0x21	      1391	ldexp.c	FUNCTION_40
0x40029cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1392	ldexp.c	FUNCTION_40
0x40029d3	        0x488b5008	                mov rdx, qword [rax + 8]	      1392	ldexp.c	FUNCTION_40
0x40029d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1392	ldexp.c	FUNCTION_40
0x40029db	        0x48895008	                mov qword [rax + 8], rdx	      1392	ldexp.c	FUNCTION_40
0x40029df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1393	ldexp.c	FUNCTION_40
0x40029e3	          0x8b5004	                mov edx, dword [rax + 4]	      1393	ldexp.c	FUNCTION_40
0x40029e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1393	ldexp.c	FUNCTION_40
0x40029ea	          0x895004	                mov dword [rax + 4], edx	      1393	ldexp.c	FUNCTION_40
0x40029ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      1394	ldexp.c	FUNCTION_40
0x40029f1	    0xc74010080000	               mov dword [rax + 0x10], 8	      1394	ldexp.c	FUNCTION_40
0x40029f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1395	ldexp.c	FUNCTION_40
0x40029fc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1395	ldexp.c	FUNCTION_40
0x4002a00	        0x48895018	             mov qword [rax + 0x18], rdx	      1395	ldexp.c	FUNCTION_40
0x4002a04	        0x488b45f8	                mov rax, qword [rbp - 8]	      1396	ldexp.c	FUNCTION_40
0x4002a08	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1396	ldexp.c	FUNCTION_40
0x4002a0c	        0x48895020	             mov qword [rax + 0x20], rdx	      1396	ldexp.c	FUNCTION_40
0x4002a10	        0x488b45f8	                mov rax, qword [rbp - 8]	      1397	ldexp.c	FUNCTION_40
0x4002a14	              0xc9	                                   leave	      1398	ldexp.c	FUNCTION_40
0x4002a15	              0xc3	                                     ret	      1398	ldexp.c	FUNCTION_40
ldexp_finish	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	7
0x40032c9	              0x55	                                push rbp	      1666	ldexp.c	FUNCTION_50
0x40032ca	          0x4889e5	                            mov rbp, rsp	      1666	ldexp.c	FUNCTION_50
0x40032cd	      0xbf00000000	                              mov edi, 0	      1667	ldexp.c	FUNCTION_50	CALL_1
0x40032d2	      0xe800000000	                          call 0x40032d7	      1667	ldexp.c	FUNCTION_50	CALL_1
0x40032d7	              0x90	                                     nop	      1668	ldexp.c	FUNCTION_50
0x40032d8	              0x5d	                                 pop rbp	      1668	ldexp.c	FUNCTION_50
0x40032d9	              0xc3	                                     ret	      1668	ldexp.c	FUNCTION_50
arith_result_section	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,2:ELSE,1	20
0x40007e3	              0x55	                                push rbp	       435	ldexp.c	FUNCTION_16
0x40007e4	          0x4889e5	                            mov rbp, rsp	       435	ldexp.c	FUNCTION_16
0x40007e7	        0x48897df8	                mov qword [rbp - 8], rdi	       435	ldexp.c	FUNCTION_16
0x40007eb	    0x488b15000000	            mov rdx, qword [0x040007f2] 	       436	ldexp.c	FUNCTION_16	IF_1
0x40007f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       436	ldexp.c	FUNCTION_16	IF_1
0x40007f6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       436	ldexp.c	FUNCTION_16	IF_1
0x40007fa	          0x4839c2	                            cmp rdx, rax	       436	ldexp.c	FUNCTION_16	IF_1
0x40007fd	            0x7531	                           jne 0x4000830	       436	ldexp.c	FUNCTION_16	IF_1
0x40007ff	    0x488b05000000	            mov rax, qword [0x04000806] 	       438	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4000806	    0x483d00000000	                              cmp rax, 0	       438	ldexp.c	FUNCTION_16	IF_1	IF_2
0x400080c	            0x7517	                           jne 0x4000825	       438	ldexp.c	FUNCTION_16	IF_1	IF_2
0x400080e	    0x8b0500000000	            mov eax, dword [0x04000814] 	       439	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4000814	            0x85c0	                           test eax, eax	       439	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4000816	            0x750d	                           jne 0x4000825	       439	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4000818	    0x48c705000000	               mov qword [0x04000823], 0	       441	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4000823	            0xeb0b	                           jmp 0x4000830	       445	ldexp.c	FUNCTION_16	ELSE_1
0x4000825	    0x48c705000000	               mov qword [0x04000830], 0	       443	ldexp.c	FUNCTION_16	IF_1	ELSE_1
0x4000830	              0x90	                                     nop	       445	ldexp.c	FUNCTION_16	ELSE_1
0x4000831	              0x5d	                                 pop rbp	       445	ldexp.c	FUNCTION_16	ELSE_1
0x4000832	              0xc3	                                     ret	       445	ldexp.c	FUNCTION_16	ELSE_1
definedness_newfunc	DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:WHILE,0:IF,2:ELSE,0	34
0x4000406	              0x55	                                push rbp	       275	ldexp.c	FUNCTION_11
0x4000407	          0x4889e5	                            mov rbp, rsp	       275	ldexp.c	FUNCTION_11
0x400040a	        0x4883ec30	                           sub rsp, 0x30	       275	ldexp.c	FUNCTION_11
0x400040e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       275	ldexp.c	FUNCTION_11
0x4000412	        0x488975e0	             mov qword [rbp - 0x20], rsi	       275	ldexp.c	FUNCTION_11
0x4000416	        0x488955d8	             mov qword [rbp - 0x28], rdx	       275	ldexp.c	FUNCTION_11
0x400041a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       276	ldexp.c	FUNCTION_11
0x400041e	        0x488945f8	                mov qword [rbp - 8], rax	       276	ldexp.c	FUNCTION_11
0x4000422	      0x48837df800	                  cmp qword [rbp - 8], 0	       278	ldexp.c	FUNCTION_11	IF_1
0x4000427	            0x7515	                           jne 0x400043e	       278	ldexp.c	FUNCTION_11	IF_1
0x4000429	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       279	ldexp.c	FUNCTION_11	IF_1
0x400042d	      0xbe28000000	                           mov esi, 0x28	       279	ldexp.c	FUNCTION_11	IF_1
0x4000432	          0x4889c7	                            mov rdi, rax	       279	ldexp.c	FUNCTION_11	IF_1
0x4000435	      0xe800000000	                          call 0x400043a	       279	ldexp.c	FUNCTION_11	IF_1
0x400043a	        0x488945f8	                mov qword [rbp - 8], rax	       279	ldexp.c	FUNCTION_11	IF_1
0x400043e	      0x48837df800	                  cmp qword [rbp - 8], 0	       282	ldexp.c	FUNCTION_11	IF_2
0x4000443	            0x7521	                           jne 0x4000466	       282	ldexp.c	FUNCTION_11	IF_2
0x4000445	      0xbf00000000	                              mov edi, 0	       283	ldexp.c	FUNCTION_11	CALL_3
0x400044a	      0xe800000000	                          call 0x400044f	       283	ldexp.c	FUNCTION_11	CALL_3
0x400044f	          0x4889c2	                            mov rdx, rax	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000452	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000456	          0x4889c6	                            mov rsi, rax	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000459	          0x4889d7	                            mov rdi, rdx	       283	ldexp.c	FUNCTION_11	CALL_3
0x400045c	      0xb800000000	                              mov eax, 0	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000461	      0xe800000000	                          call 0x4000466	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000466	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	ldexp.c	FUNCTION_11
0x400046a	         0xfb65021	           movzx edx, byte [rax + 0x21] 	       285	ldexp.c	FUNCTION_11
0x400046e	          0x83e2fe	                     and edx, 0xfffffffe	       285	ldexp.c	FUNCTION_11
0x4000471	          0x885021	               mov byte [rax + 0x21], dl	       285	ldexp.c	FUNCTION_11
0x4000474	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	ldexp.c	FUNCTION_11
0x4000478	        0xc6402000	                mov byte [rax + 0x20], 0	       286	ldexp.c	FUNCTION_11
0x400047c	        0x488b45f8	                mov rax, qword [rbp - 8]	       287	ldexp.c	FUNCTION_11
0x4000480	              0xc9	                                   leave	       288	ldexp.c	FUNCTION_11
0x4000481	              0xc3	                                     ret	       288	ldexp.c	FUNCTION_11
fold_unary	DO,0:SWITCH,1:CALL,9:FOR,0:functions,0:WHILE,0:IF,3:ELSE,2	90
0x400065f	              0x55	                                push rbp	       366	ldexp.c	ELSE_3	FUNCTION_15
0x4000660	          0x4889e5	                            mov rbp, rsp	       366	ldexp.c	ELSE_3	FUNCTION_15
0x4000663	        0x4883ec10	                           sub rsp, 0x10	       366	ldexp.c	ELSE_3	FUNCTION_15
0x4000667	        0x48897df8	                mov qword [rbp - 8], rdi	       366	ldexp.c	ELSE_3	FUNCTION_15
0x400066b	        0x488b45f8	                mov rax, qword [rbp - 8]	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x400066f	        0x488b4018	            mov rax, qword [rax + 0x18] 	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4000673	          0x4889c7	                            mov rdi, rax	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4000676	      0xe8f6170000	                call sym.exp_fold_tree_1	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x400067b	    0x8b0500000000	            mov eax, dword [0x04000681] 	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4000681	            0x85c0	                           test eax, eax	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4000683	     0xf8457010000	                            je 0x40007e0	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4000689	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400068d	            0x8b00	                    mov eax, dword [rax]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400068f	      0x3d17010000	                          cmp eax, 0x117	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000694	            0x745c	                            je 0x40006f2	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000696	      0x3d17010000	                          cmp eax, 0x117	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400069b	            0x7f20	                            jg 0x40006bd	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400069d	          0x83f82d	                           cmp eax, 0x2d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006a0	     0xf84ce000000	                            je 0x4000774	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006a6	          0x83f87e	                           cmp eax, 0x7e	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006a9	     0xf8496000000	                            je 0x4000745	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006af	          0x83f821	                           cmp eax, 0x21	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006b2	     0xf84a3000000	                            je 0x400075b	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006b8	      0xe913010000	                           jmp 0x40007d0	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006bd	      0x3d40010000	                          cmp eax, 0x140	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006c2	     0xf84bf000000	                            je 0x4000787	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006c8	      0x3d40010000	                          cmp eax, 0x140	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006cd	            0x7f10	                            jg 0x40006df	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006cf	      0x3d26010000	                          cmp eax, 0x126	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006d4	     0xf84ea000000	                            je 0x40007c4	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006da	      0xe9f1000000	                           jmp 0x40007d0	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006df	      0x3d60010000	                          cmp eax, 0x160	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006e4	            0x744b	                            je 0x4000731	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006e6	      0x3d67010000	                          cmp eax, 0x167	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006eb	            0x744e	                            je 0x400073b	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006ed	      0xe9de000000	                           jmp 0x40007d0	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40006f2	    0x8b0500000000	            mov eax, dword [0x040006f8] 	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x40006f8	            0x85c0	                           test eax, eax	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x40006fa	            0x7426	                            je 0x4000722	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x40006fc	    0x488b15000000	            mov rdx, qword [0x04000703] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x4000703	    0x488b05000000	            mov rax, qword [0x0400070a] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x400070a	          0x4889d6	                            mov rsi, rdx	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x400070d	          0x4889c7	                            mov rdi, rax	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x4000710	      0xe8722a0000	                        call sym.align_n	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x4000715	          0x4889c7	                            mov rdi, rax	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x4000718	      0xe890fcffff	               call sym.new_rel_from_abs	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x400071d	      0xe9be000000	                           jmp 0x40007e0	       377	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000722	    0xc70500000000	               mov dword [0x0400072c], 0	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x400072c	      0xe9af000000	                           jmp 0x40007e0	       377	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000731	      0xe847faffff	                       call sym.make_abs	       380	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_4
0x4000736	      0xe9a5000000	                           jmp 0x40007e0	       381	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400073b	      0xe8d1f9ffff	                  call sym.make_log2ceil	       384	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_5
0x4000740	      0xe99b000000	                           jmp 0x40007e0	       385	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000745	    0x488b05000000	            mov rax, qword [0x0400074c] 	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400074c	          0x48f7d0	                                 not rax	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400074f	    0x488905000000	            mov qword [0x04000756], rax 	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000756	      0xe985000000	                           jmp 0x40007e0	       389	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400075b	    0x488b05000000	            mov rax, qword [0x04000762] 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000762	          0x4885c0	                           test rax, rax	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000765	           0xf94c0	                                 sete al	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000768	           0xfb6c0	                           movzx eax, al	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400076b	    0x488905000000	            mov qword [0x04000772], rax 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000772	            0xeb6c	                           jmp 0x40007e0	       393	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000774	    0x488b05000000	            mov rax, qword [0x0400077b] 	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400077b	          0x48f7d8	                                 neg rax	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400077e	    0x488905000000	            mov qword [0x04000785], rax 	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000785	            0xeb59	                           jmp 0x40007e0	       397	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000787	    0x8b0500000000	            mov eax, dword [0x0400078d] 	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x400078d	            0x85c0	                           test eax, eax	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x400078f	            0x7427	                            je 0x40007b8	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4000791	      0xe8e7f9ffff	                       call sym.make_abs	       403	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_6
0x4000796	    0x488b15000000	            mov rdx, qword [0x0400079d] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x400079d	    0x488b05000000	            mov rax, qword [0x040007a4] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x40007a4	          0x4889d6	                            mov rsi, rdx	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x40007a7	          0x4889c7	                            mov rdi, rax	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x40007aa	      0xe8d8290000	                        call sym.align_n	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x40007af	    0x488905000000	            mov qword [0x040007b6], rax 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x40007b6	            0xeb28	                           jmp 0x40007e0	       408	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40007b8	    0xc70500000000	               mov dword [0x040007c2], 0	       407	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_2
0x40007c2	            0xeb1c	                           jmp 0x40007e0	       408	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40007c4	      0xbf00000000	                              mov edi, 0	       411	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_8
0x40007c9	      0xe803feffff	               call sym.fold_segment_end	       411	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_8
0x40007ce	            0xeb10	                           jmp 0x40007e0	       412	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40007d0	      0xbe9f010000	                          mov esi, 0x19f	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x40007d5	      0xbf00000000	                              mov edi, 0	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x40007da	      0xe800000000	                          call 0x40007df	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x40007df	              0x90	                                     nop	       416	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40007e0	              0x90	                                     nop	       419	ldexp.c	ELSE_3	FUNCTION_15
0x40007e1	              0xc9	                                   leave	       419	ldexp.c	ELSE_3	FUNCTION_15
0x40007e2	              0xc3	                                     ret	       419	ldexp.c	ELSE_3	FUNCTION_15
make_log2ceil	DO,1:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,2:ELSE,0	26
0x4000111	              0x55	                                push rbp	       160	ldexp.c	FUNCTION_2
0x4000112	          0x4889e5	                            mov rbp, rsp	       160	ldexp.c	FUNCTION_2
0x4000115	    0x488b05000000	            mov rax, qword [0x0400011c] 	       161	ldexp.c	FUNCTION_2
0x400011c	        0x488945f0	             mov qword [rbp - 0x10], rax	       161	ldexp.c	FUNCTION_2
0x4000120	    0x48c745f8ffff	 mov qword [rbp - 8], 0xffffffffffffffff	       162	ldexp.c	FUNCTION_2
0x4000128	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       163	ldexp.c	FUNCTION_2
0x400012f	      0x488345f801	                  add qword [rbp - 8], 1	       167	ldexp.c	FUNCTION_2	DO_1
0x4000134	      0x48837df001	               cmp qword [rbp - 0x10], 1	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4000139	            0x7613	                           jbe 0x400014e	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x400013b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x400013f	          0x83e001	                              and eax, 1	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4000142	          0x4885c0	                           test rax, rax	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4000145	            0x7407	                            je 0x400014e	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4000147	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x400014e	        0x48d16df0	               shr qword [rbp - 0x10], 1	       172	ldexp.c	FUNCTION_2
0x4000152	      0x48837df000	               cmp qword [rbp - 0x10], 0	       172	ldexp.c	FUNCTION_2
0x4000157	            0x75d6	                           jne 0x400012f	       172	ldexp.c	FUNCTION_2
0x4000159	        0x837dec00	               cmp dword [rbp - 0x14], 0	       174	ldexp.c	FUNCTION_2	IF_2
0x400015d	            0x7405	                            je 0x4000164	       174	ldexp.c	FUNCTION_2	IF_2
0x400015f	      0x488345f801	                  add qword [rbp - 8], 1	       175	ldexp.c	FUNCTION_2	IF_2
0x4000164	    0x48c705000000	               mov qword [0x0400016f], 0	       176	ldexp.c	FUNCTION_2
0x400016f	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	ldexp.c	FUNCTION_2
0x4000173	    0x488905000000	            mov qword [0x0400017a], rax 	       177	ldexp.c	FUNCTION_2
0x400017a	              0x90	                                     nop	       178	ldexp.c	FUNCTION_2
0x400017b	              0x5d	                                 pop rbp	       178	ldexp.c	FUNCTION_2
0x400017c	              0xc3	                                     ret	       178	ldexp.c	FUNCTION_2
align_n	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,1:ELSE,0	19
0x4003187	              0x55	                                push rbp	      1614	ldexp.c	FUNCTION_46
0x4003188	          0x4889e5	                            mov rbp, rsp	      1614	ldexp.c	FUNCTION_46
0x400318b	        0x48897df8	                mov qword [rbp - 8], rdi	      1614	ldexp.c	FUNCTION_46
0x400318f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1614	ldexp.c	FUNCTION_46
0x4003193	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4003198	            0x7706	                            ja 0x40031a0	      1615	ldexp.c	FUNCTION_46	IF_1
0x400319a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1616	ldexp.c	FUNCTION_46	IF_1
0x400319e	            0xeb25	                           jmp 0x40031c5	      1616	ldexp.c	FUNCTION_46	IF_1
0x40031a0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1618	ldexp.c	FUNCTION_46
0x40031a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1618	ldexp.c	FUNCTION_46
0x40031a8	          0x4801d0	                            add rax, rdx	      1618	ldexp.c	FUNCTION_46
0x40031ab	        0x4883e801	                              sub rax, 1	      1618	ldexp.c	FUNCTION_46
0x40031af	      0xba00000000	                              mov edx, 0	      1618	ldexp.c	FUNCTION_46
0x40031b4	        0x48f775f0	                  div qword [rbp - 0x10]	      1618	ldexp.c	FUNCTION_46
0x40031b8	        0x488945f8	                mov qword [rbp - 8], rax	      1618	ldexp.c	FUNCTION_46
0x40031bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1619	ldexp.c	FUNCTION_46
0x40031c0	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	      1619	ldexp.c	FUNCTION_46
0x40031c5	              0x5d	                                 pop rbp	      1620	ldexp.c	FUNCTION_46
0x40031c6	              0xc3	                                     ret	      1620	ldexp.c	FUNCTION_46
exp_bigintop	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	28
0x4000261	              0x55	                                push rbp	       213	ldexp.c	FUNCTION_6
0x4000262	          0x4889e5	                            mov rbp, rsp	       213	ldexp.c	FUNCTION_6
0x4000265	        0x4883ec20	                           sub rsp, 0x20	       213	ldexp.c	FUNCTION_6
0x4000269	        0x48897de8	             mov qword [rbp - 0x18], rdi	       213	ldexp.c	FUNCTION_6
0x400026d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       213	ldexp.c	FUNCTION_6
0x4000271	      0xbf28000000	                           mov edi, 0x28	       214	ldexp.c	FUNCTION_6	CALL_1
0x4000276	      0xe800000000	                          call 0x400027b	       214	ldexp.c	FUNCTION_6	CALL_1
0x400027b	        0x488945f8	                mov qword [rbp - 8], rax	       214	ldexp.c	FUNCTION_6	CALL_1
0x400027f	        0x488b45f8	                mov rax, qword [rbp - 8]	       215	ldexp.c	FUNCTION_6
0x4000283	    0xc70002010000	                  mov dword [rax], 0x102	       215	ldexp.c	FUNCTION_6
0x4000289	      0xe800000000	                          call 0x400028e	       216	ldexp.c	FUNCTION_6	CALL_2
0x400028e	          0x4889c2	                            mov rdx, rax	       216	ldexp.c	FUNCTION_6	CALL_2
0x4000291	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	ldexp.c	FUNCTION_6	CALL_2
0x4000295	        0x48895008	                mov qword [rax + 8], rdx	       216	ldexp.c	FUNCTION_6	CALL_2
0x4000299	    0x8b1500000000	            mov edx, dword [0x0400029f] 	       217	ldexp.c	FUNCTION_6
0x400029f	        0x488b45f8	                mov rax, qword [rbp - 8]	       217	ldexp.c	FUNCTION_6
0x40002a3	          0x895004	                mov dword [rax + 4], edx	       217	ldexp.c	FUNCTION_6
0x40002a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       218	ldexp.c	FUNCTION_6
0x40002aa	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       218	ldexp.c	FUNCTION_6
0x40002ae	        0x48895018	             mov qword [rax + 0x18], rdx	       218	ldexp.c	FUNCTION_6
0x40002b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       219	ldexp.c	FUNCTION_6
0x40002b6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       219	ldexp.c	FUNCTION_6
0x40002ba	        0x48895020	             mov qword [rax + 0x20], rdx	       219	ldexp.c	FUNCTION_6
0x40002be	        0x488b45f8	                mov rax, qword [rbp - 8]	       220	ldexp.c	FUNCTION_6
0x40002c2	    0xc74010070000	               mov dword [rax + 0x10], 7	       220	ldexp.c	FUNCTION_6
0x40002c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       221	ldexp.c	FUNCTION_6
0x40002cd	              0xc9	                                   leave	       222	ldexp.c	FUNCTION_6
0x40002ce	              0xc3	                                     ret	       222	ldexp.c	FUNCTION_6
exp_assign	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	15
0x400291d	              0x55	                                push rbp	      1363	ldexp.c	FUNCTION_37
0x400291e	          0x4889e5	                            mov rbp, rsp	      1363	ldexp.c	FUNCTION_37
0x4002921	        0x4883ec20	                           sub rsp, 0x20	      1363	ldexp.c	FUNCTION_37
0x4002925	        0x48897df8	                mov qword [rbp - 8], rdi	      1363	ldexp.c	FUNCTION_37
0x4002929	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1363	ldexp.c	FUNCTION_37
0x400292d	          0x8955ec	             mov dword [rbp - 0x14], edx	      1363	ldexp.c	FUNCTION_37
0x4002930	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1364	ldexp.c	FUNCTION_37	CALL_1
0x4002933	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1364	ldexp.c	FUNCTION_37	CALL_1
0x4002937	        0x488b45f8	                mov rax, qword [rbp - 8]	      1364	ldexp.c	FUNCTION_37	CALL_1
0x400293b	            0x89d1	                            mov ecx, edx	      1364	ldexp.c	FUNCTION_37	CALL_1
0x400293d	      0xba04000000	                              mov edx, 4	      1364	ldexp.c	FUNCTION_37	CALL_1
0x4002942	          0x4889c7	                            mov rdi, rax	      1364	ldexp.c	FUNCTION_37	CALL_1
0x4002945	      0xe855ffffff	                      call sym.exp_assop	      1364	ldexp.c	FUNCTION_37	CALL_1
0x400294a	              0xc9	                                   leave	      1365	ldexp.c	FUNCTION_37
0x400294b	              0xc3	                                     ret	      1365	ldexp.c	FUNCTION_37
new_abs	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	11
0x40001c1	              0x55	                                push rbp	       191	ldexp.c	FUNCTION_4
0x40001c2	          0x4889e5	                            mov rbp, rsp	       191	ldexp.c	FUNCTION_4
0x40001c5	        0x48897df8	                mov qword [rbp - 8], rdi	       191	ldexp.c	FUNCTION_4
0x40001c9	    0xc70500000000	               mov dword [0x040001d3], 1	       192	ldexp.c	FUNCTION_4
0x40001d3	    0x48c705000000	               mov qword [0x040001de], 0	       193	ldexp.c	FUNCTION_4
0x40001de	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	ldexp.c	FUNCTION_4
0x40001e2	    0x488905000000	            mov qword [0x040001e9], rax 	       194	ldexp.c	FUNCTION_4
0x40001e9	    0x48c705000000	               mov qword [0x040001f4], 0	       195	ldexp.c	FUNCTION_4
0x40001f4	              0x90	                                     nop	       196	ldexp.c	FUNCTION_4
0x40001f5	              0x5d	                                 pop rbp	       196	ldexp.c	FUNCTION_4
0x40001f6	              0xc3	                                     ret	       196	ldexp.c	FUNCTION_4
exp_fold_tree_no_dot	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	14
0x40025a6	              0x55	                                push rbp	      1245	ldexp.c	FUNCTION_30
0x40025a7	          0x4889e5	                            mov rbp, rsp	      1245	ldexp.c	FUNCTION_30
0x40025aa	        0x4883ec10	                           sub rsp, 0x10	      1245	ldexp.c	FUNCTION_30
0x40025ae	        0x48897df8	                mov qword [rbp - 8], rdi	      1245	ldexp.c	FUNCTION_30
0x40025b2	    0xc70500000000	               mov dword [0x040025bc], 0	      1246	ldexp.c	FUNCTION_30
0x40025bc	    0x48c705000000	               mov qword [0x040025c7], 0	      1247	ldexp.c	FUNCTION_30
0x40025c7	    0x48c705000000	               mov qword [0x040025d2], 0	      1248	ldexp.c	FUNCTION_30
0x40025d2	    0x48c705000000	               mov qword [0x040025dd], 0	      1249	ldexp.c	FUNCTION_30
0x40025dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1250	ldexp.c	FUNCTION_30	CALL_1
0x40025e1	          0x4889c7	                            mov rdi, rax	      1250	ldexp.c	FUNCTION_30	CALL_1
0x40025e4	      0xe888f8ffff	                call sym.exp_fold_tree_1	      1250	ldexp.c	FUNCTION_30	CALL_1
0x40025e9	              0x90	                                     nop	      1251	ldexp.c	FUNCTION_30
0x40025ea	              0xc9	                                   leave	      1251	ldexp.c	FUNCTION_30
0x40025eb	              0xc3	                                     ret	      1251	ldexp.c	FUNCTION_30
exp_get_vma	DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:WHILE,0:IF,3:ELSE,1	33
0x4002e85	              0x55	                                push rbp	      1512	ldexp.c	FUNCTION_42
0x4002e86	          0x4889e5	                            mov rbp, rsp	      1512	ldexp.c	FUNCTION_42
0x4002e89	        0x4883ec20	                           sub rsp, 0x20	      1512	ldexp.c	FUNCTION_42
0x4002e8d	        0x48897df8	                mov qword [rbp - 8], rdi	      1512	ldexp.c	FUNCTION_42
0x4002e91	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1512	ldexp.c	FUNCTION_42
0x4002e95	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1512	ldexp.c	FUNCTION_42
0x4002e99	      0x48837df800	                  cmp qword [rbp - 8], 0	      1513	ldexp.c	FUNCTION_42	IF_1
0x4002e9e	            0x7456	                            je 0x4002ef6	      1513	ldexp.c	FUNCTION_42	IF_1
0x4002ea0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1515	ldexp.c	FUNCTION_42	IF_1	CALL_1
0x4002ea4	          0x4889c7	                            mov rdi, rax	      1515	ldexp.c	FUNCTION_42	IF_1	CALL_1
0x4002ea7	      0xe800000000	                          call 0x4002eac	      1515	ldexp.c	FUNCTION_42	IF_1	CALL_1
0x4002eac	    0x8b0500000000	            mov eax, dword [0x04002eb2] 	      1516	ldexp.c	FUNCTION_42	IF_1	IF_2
0x4002eb2	            0x85c0	                           test eax, eax	      1516	ldexp.c	FUNCTION_42	IF_1	IF_2
0x4002eb4	            0x7409	                            je 0x4002ebf	      1516	ldexp.c	FUNCTION_42	IF_1	IF_2
0x4002eb6	    0x488b05000000	            mov rax, qword [0x04002ebd] 	      1517	ldexp.c	FUNCTION_42	IF_1	IF_2
0x4002ebd	            0xeb3b	                           jmp 0x4002efa	      1517	ldexp.c	FUNCTION_42	IF_1	IF_2
0x4002ebf	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x4002ec4	            0x7430	                            je 0x4002ef6	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x4002ec6	    0x8b0500000000	            mov eax, dword [0x04002ecc] 	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x4002ecc	          0x83f801	                              cmp eax, 1	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x4002ecf	            0x7425	                            je 0x4002ef6	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x4002ed1	      0xbf00000000	                              mov edi, 0	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002ed6	      0xe800000000	                          call 0x4002edb	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002edb	          0x4889c1	                            mov rcx, rax	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002ede	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002ee2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002ee6	          0x4889c6	                            mov rsi, rax	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002ee9	          0x4889cf	                            mov rdi, rcx	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002eec	      0xb800000000	                              mov eax, 0	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002ef1	      0xe800000000	                          call 0x4002ef6	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002ef6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1522	ldexp.c	FUNCTION_42
0x4002efa	              0xc9	                                   leave	      1523	ldexp.c	FUNCTION_42
0x4002efb	              0xc3	                                     ret	      1523	ldexp.c	FUNCTION_42
exp_trinop	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,1:ELSE,0	50
0x40026f1	              0x55	                                push rbp	      1290	ldexp.c	FUNCTION_33
0x40026f2	          0x4889e5	                            mov rbp, rsp	      1290	ldexp.c	FUNCTION_33
0x40026f5	        0x4883ec30	                           sub rsp, 0x30	      1290	ldexp.c	FUNCTION_33
0x40026f9	          0x897dec	             mov dword [rbp - 0x14], edi	      1290	ldexp.c	FUNCTION_33
0x40026fc	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1290	ldexp.c	FUNCTION_33
0x4002700	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1290	ldexp.c	FUNCTION_33
0x4002704	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1290	ldexp.c	FUNCTION_33
0x4002708	      0xbf30000000	                           mov edi, 0x30	      1291	ldexp.c	FUNCTION_33	CALL_1
0x400270d	      0xe800000000	                          call 0x4002712	      1291	ldexp.c	FUNCTION_33	CALL_1
0x4002712	        0x488945f8	                mov qword [rbp - 8], rax	      1291	ldexp.c	FUNCTION_33	CALL_1
0x4002716	        0x488b45f8	                mov rax, qword [rbp - 8]	      1293	ldexp.c	FUNCTION_33
0x400271a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1293	ldexp.c	FUNCTION_33
0x400271d	            0x8910	                    mov dword [rax], edx	      1293	ldexp.c	FUNCTION_33
0x400271f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1294	ldexp.c	FUNCTION_33
0x4002723	        0x488b5008	                mov rdx, qword [rax + 8]	      1294	ldexp.c	FUNCTION_33
0x4002727	        0x488b45f8	                mov rax, qword [rbp - 8]	      1294	ldexp.c	FUNCTION_33
0x400272b	        0x48895008	                mov qword [rax + 8], rdx	      1294	ldexp.c	FUNCTION_33
0x400272f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1295	ldexp.c	FUNCTION_33
0x4002733	          0x8b5004	                mov edx, dword [rax + 4]	      1295	ldexp.c	FUNCTION_33
0x4002736	        0x488b45f8	                mov rax, qword [rbp - 8]	      1295	ldexp.c	FUNCTION_33
0x400273a	          0x895004	                mov dword [rax + 4], edx	      1295	ldexp.c	FUNCTION_33
0x400273d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1296	ldexp.c	FUNCTION_33
0x4002741	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1296	ldexp.c	FUNCTION_33
0x4002745	        0x48895020	             mov qword [rax + 0x20], rdx	      1296	ldexp.c	FUNCTION_33
0x4002749	        0x488b45f8	                mov rax, qword [rbp - 8]	      1297	ldexp.c	FUNCTION_33
0x400274d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1297	ldexp.c	FUNCTION_33
0x4002751	        0x48895018	             mov qword [rax + 0x18], rdx	      1297	ldexp.c	FUNCTION_33
0x4002755	        0x488b45f8	                mov rax, qword [rbp - 8]	      1298	ldexp.c	FUNCTION_33
0x4002759	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1298	ldexp.c	FUNCTION_33
0x400275d	        0x48895028	             mov qword [rax + 0x28], rdx	      1298	ldexp.c	FUNCTION_33
0x4002761	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	ldexp.c	FUNCTION_33
0x4002765	    0xc74010010000	               mov dword [rax + 0x10], 1	      1299	ldexp.c	FUNCTION_33
0x400276c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1300	ldexp.c	FUNCTION_33	IF_1
0x4002770	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1300	ldexp.c	FUNCTION_33	IF_1
0x4002773	          0x83f807	                              cmp eax, 7	      1300	ldexp.c	FUNCTION_33	IF_1
0x4002776	            0x7524	                           jne 0x400279c	      1300	ldexp.c	FUNCTION_33	IF_1
0x4002778	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1301	ldexp.c	FUNCTION_33	IF_1
0x400277c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1301	ldexp.c	FUNCTION_33	IF_1
0x400277f	          0x83f807	                              cmp eax, 7	      1301	ldexp.c	FUNCTION_33	IF_1
0x4002782	            0x7518	                           jne 0x400279c	      1301	ldexp.c	FUNCTION_33	IF_1
0x4002784	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1302	ldexp.c	FUNCTION_33	IF_1
0x4002788	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1302	ldexp.c	FUNCTION_33	IF_1
0x400278b	          0x83f807	                              cmp eax, 7	      1302	ldexp.c	FUNCTION_33	IF_1
0x400278e	            0x750c	                           jne 0x400279c	      1302	ldexp.c	FUNCTION_33	IF_1
0x4002790	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	ldexp.c	FUNCTION_33	CALL_2
0x4002794	          0x4889c7	                            mov rdi, rax	      1303	ldexp.c	FUNCTION_33	CALL_2
0x4002797	      0xe850feffff	                 call sym.exp_value_fold	      1303	ldexp.c	FUNCTION_33	CALL_2
0x400279c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1304	ldexp.c	FUNCTION_33
0x40027a0	              0xc9	                                   leave	      1305	ldexp.c	FUNCTION_33
0x40027a1	              0xc3	                                     ret	      1305	ldexp.c	FUNCTION_33
exp_get_fill	DO,1:SWITCH,0:CALL,6:FOR,0:functions,0:WHILE,0:IF,6:ELSE,1	119
0x4002f2a	              0x55	                                push rbp	      1533	ldexp.c	FUNCTION_44
0x4002f2b	          0x4889e5	                            mov rbp, rsp	      1533	ldexp.c	FUNCTION_44
0x4002f2e	        0x4883ec50	                           sub rsp, 0x50	      1533	ldexp.c	FUNCTION_44
0x4002f32	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1533	ldexp.c	FUNCTION_44
0x4002f36	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1533	ldexp.c	FUNCTION_44
0x4002f3a	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1533	ldexp.c	FUNCTION_44
0x4002f3e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1538	ldexp.c	FUNCTION_44	IF_1
0x4002f43	            0x7509	                           jne 0x4002f4e	      1538	ldexp.c	FUNCTION_44	IF_1
0x4002f45	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1539	ldexp.c	FUNCTION_44	IF_1
0x4002f49	      0xe998010000	                           jmp 0x40030e6	      1539	ldexp.c	FUNCTION_44	IF_1
0x4002f4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1541	ldexp.c	FUNCTION_44	CALL_1
0x4002f52	          0x4889c7	                            mov rdi, rax	      1541	ldexp.c	FUNCTION_44	CALL_1
0x4002f55	      0xe800000000	                          call 0x4002f5a	      1541	ldexp.c	FUNCTION_44	CALL_1
0x4002f5a	    0x8b0500000000	            mov eax, dword [0x04002f60] 	      1542	ldexp.c	FUNCTION_44	IF_2
0x4002f60	            0x85c0	                           test eax, eax	      1542	ldexp.c	FUNCTION_44	IF_2
0x4002f62	            0x7540	                           jne 0x4002fa4	      1542	ldexp.c	FUNCTION_44	IF_2
0x4002f64	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4002f69	            0x7430	                            je 0x4002f9b	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4002f6b	    0x8b0500000000	            mov eax, dword [0x04002f71] 	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4002f71	          0x83f801	                              cmp eax, 1	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4002f74	            0x7425	                            je 0x4002f9b	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4002f76	      0xbf00000000	                              mov edi, 0	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002f7b	      0xe800000000	                          call 0x4002f80	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002f80	          0x4889c1	                            mov rcx, rax	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002f83	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002f87	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002f8b	          0x4889c6	                            mov rsi, rax	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002f8e	          0x4889cf	                            mov rdi, rcx	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002f91	      0xb800000000	                              mov eax, 0	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002f96	      0xe800000000	                          call 0x4002f9b	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002f9b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1547	ldexp.c	FUNCTION_44	IF_2
0x4002f9f	      0xe942010000	                           jmp 0x40030e6	      1547	ldexp.c	FUNCTION_44	IF_2
0x4002fa4	    0x488b05000000	            mov rax, qword [0x04002fab] 	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002fab	          0x4885c0	                           test rax, rax	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002fae	     0xf84d2000000	                            je 0x4003086	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002fb4	    0x488b05000000	            mov rax, qword [0x04002fbb] 	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002fbb	          0x4889c7	                            mov rdi, rax	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002fbe	      0xe800000000	                          call 0x4002fc3	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002fc3	        0x488945e8	             mov qword [rbp - 0x18], rax	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002fc7	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002fcc	     0xf84b4000000	                            je 0x4003086	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002fd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002fd6	        0x4883c001	                              add rax, 1	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002fda	          0x48d1e8	                              shr rax, 1	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002fdd	        0x4883c00f	                            add rax, 0xf	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002fe1	          0x4889c7	                            mov rdi, rax	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002fe4	      0xe800000000	                          call 0x4002fe9	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002fe9	        0x488945e0	             mov qword [rbp - 0x20], rax	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002fed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1555	ldexp.c	FUNCTION_44	IF_4
0x4002ff1	        0x4883c001	                              add rax, 1	      1555	ldexp.c	FUNCTION_44	IF_4
0x4002ff5	          0x48d1e8	                              shr rax, 1	      1555	ldexp.c	FUNCTION_44	IF_4
0x4002ff8	          0x4889c2	                            mov rdx, rax	      1555	ldexp.c	FUNCTION_44	IF_4
0x4002ffb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1555	ldexp.c	FUNCTION_44	IF_4
0x4002fff	          0x488910	                    mov qword [rax], rdx	      1555	ldexp.c	FUNCTION_44	IF_4
0x4003002	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1556	ldexp.c	FUNCTION_44	IF_4
0x4003006	        0x4883c008	                              add rax, 8	      1556	ldexp.c	FUNCTION_44	IF_4
0x400300a	        0x488945f0	             mov qword [rbp - 0x10], rax	      1556	ldexp.c	FUNCTION_44	IF_4
0x400300e	    0x488b05000000	            mov rax, qword [0x04003015] 	      1557	ldexp.c	FUNCTION_44	IF_4
0x4003015	        0x488945f8	                mov qword [rbp - 8], rax	      1557	ldexp.c	FUNCTION_44	IF_4
0x4003019	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1558	ldexp.c	FUNCTION_44	IF_4
0x4003020	        0x488b45f8	                mov rax, qword [rbp - 8]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4003024	        0x488d5001	                      lea rdx, [rax + 1]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4003028	        0x488955f8	                mov qword [rbp - 8], rdx	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x400302c	           0xfb600	                   movzx eax, byte [rax]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x400302f	           0xfb6c0	                           movzx eax, al	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4003032	          0x83e830	                           sub eax, 0x30	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4003035	          0x8945dc	             mov dword [rbp - 0x24], eax	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4003038	        0x837ddc09	               cmp dword [rbp - 0x24], 9	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x400303c	            0x760c	                           jbe 0x400304a	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x400303e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1565	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x4003041	          0x83e807	                              sub eax, 7	      1565	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x4003044	          0x83e00f	                            and eax, 0xf	      1565	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x4003047	          0x8945dc	             mov dword [rbp - 0x24], eax	      1565	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x400304a	        0xc165d804	               shl dword [rbp - 0x28], 4	      1566	ldexp.c	FUNCTION_44	IF_4	DO_1
0x400304e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1567	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4003051	           0x145d8	             add dword [rbp - 0x28], eax	      1567	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4003054	      0x48836de801	               sub qword [rbp - 0x18], 1	      1568	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4003059	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1569	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x400305d	          0x83e001	                              and eax, 1	      1569	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4003060	          0x4885c0	                           test rax, rax	      1569	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4003063	            0x7518	                           jne 0x400307d	      1569	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4003065	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4003069	        0x488d5001	                      lea rdx, [rax + 1]	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x400306d	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4003071	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4003074	            0x8810	                      mov byte [rax], dl	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4003076	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1572	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x400307d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1575	ldexp.c	FUNCTION_44	IF_4
0x4003082	            0x759c	                           jne 0x4003020	      1575	ldexp.c	FUNCTION_44	IF_4
0x4003084	            0xeb5c	                           jmp 0x40030e2	      1551	ldexp.c	FUNCTION_44	IF_4
0x4003086	      0xbf13000000	                           mov edi, 0x13	      1579	ldexp.c	FUNCTION_44	ELSE_1	CALL_6
0x400308b	      0xe800000000	                          call 0x4003090	      1579	ldexp.c	FUNCTION_44	ELSE_1	CALL_6
0x4003090	        0x488945e0	             mov qword [rbp - 0x20], rax	      1579	ldexp.c	FUNCTION_44	ELSE_1	CALL_6
0x4003094	    0x488b05000000	            mov rax, qword [0x0400309b] 	      1580	ldexp.c	FUNCTION_44	ELSE_1
0x400309b	          0x8945d8	             mov dword [rbp - 0x28], eax	      1580	ldexp.c	FUNCTION_44	ELSE_1
0x400309e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x40030a1	          0xc1e818	                           shr eax, 0x18	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x40030a4	            0x89c2	                            mov edx, eax	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x40030a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x40030aa	          0x885008	                  mov byte [rax + 8], dl	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x40030ad	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x40030b0	          0xc1e810	                           shr eax, 0x10	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x40030b3	            0x89c2	                            mov edx, eax	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x40030b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x40030b9	          0x885009	                  mov byte [rax + 9], dl	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x40030bc	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x40030bf	          0xc1e808	                              shr eax, 8	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x40030c2	            0x89c2	                            mov edx, eax	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x40030c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x40030c8	          0x88500a	                mov byte [rax + 0xa], dl	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x40030cb	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1584	ldexp.c	FUNCTION_44	ELSE_1
0x40030ce	            0x89c2	                            mov edx, eax	      1584	ldexp.c	FUNCTION_44	ELSE_1
0x40030d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1584	ldexp.c	FUNCTION_44	ELSE_1
0x40030d4	          0x88500b	                mov byte [rax + 0xb], dl	      1584	ldexp.c	FUNCTION_44	ELSE_1
0x40030d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1585	ldexp.c	FUNCTION_44	ELSE_1
0x40030db	    0x48c700040000	                      mov qword [rax], 4	      1585	ldexp.c	FUNCTION_44	ELSE_1
0x40030e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1587	ldexp.c	FUNCTION_44
0x40030e6	              0xc9	                                   leave	      1588	ldexp.c	FUNCTION_44
0x40030e7	              0xc3	                                     ret	      1588	ldexp.c	FUNCTION_44
exp_fold_tree	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	20
0x4002555	              0x55	                                push rbp	      1235	ldexp.c	FUNCTION_29
0x4002556	          0x4889e5	                            mov rbp, rsp	      1235	ldexp.c	FUNCTION_29
0x4002559	        0x4883ec20	                           sub rsp, 0x20	      1235	ldexp.c	FUNCTION_29
0x400255d	        0x48897df8	                mov qword [rbp - 8], rdi	      1235	ldexp.c	FUNCTION_29
0x4002561	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1235	ldexp.c	FUNCTION_29
0x4002565	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1235	ldexp.c	FUNCTION_29
0x4002569	    0xc70500000000	               mov dword [0x04002573], 0	      1236	ldexp.c	FUNCTION_29
0x4002573	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1237	ldexp.c	FUNCTION_29
0x4002577	          0x488b00	                    mov rax, qword [rax]	      1237	ldexp.c	FUNCTION_29
0x400257a	    0x488905000000	            mov qword [0x04002581], rax 	      1237	ldexp.c	FUNCTION_29
0x4002581	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1238	ldexp.c	FUNCTION_29
0x4002585	    0x488905000000	            mov qword [0x0400258c], rax 	      1238	ldexp.c	FUNCTION_29
0x400258c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1239	ldexp.c	FUNCTION_29
0x4002590	    0x488905000000	            mov qword [0x04002597], rax 	      1239	ldexp.c	FUNCTION_29
0x4002597	        0x488b45f8	                mov rax, qword [rbp - 8]	      1240	ldexp.c	FUNCTION_29	CALL_1
0x400259b	          0x4889c7	                            mov rdi, rax	      1240	ldexp.c	FUNCTION_29	CALL_1
0x400259e	      0xe8cef8ffff	                call sym.exp_fold_tree_1	      1240	ldexp.c	FUNCTION_29	CALL_1
0x40025a3	              0x90	                                     nop	      1241	ldexp.c	FUNCTION_29
0x40025a4	              0xc9	                                   leave	      1241	ldexp.c	FUNCTION_29
0x40025a5	              0xc3	                                     ret	      1241	ldexp.c	FUNCTION_29
is_align_conditional	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,1:ELSE,0	39
0x4001df2	              0x55	                                push rbp	       985	ldexp.c	FUNCTION_27
0x4001df3	          0x4889e5	                            mov rbp, rsp	       985	ldexp.c	FUNCTION_27
0x4001df6	        0x4883ec08	                              sub rsp, 8	       985	ldexp.c	FUNCTION_27
0x4001dfa	        0x48897df8	                mov qword [rbp - 8], rdi	       985	ldexp.c	FUNCTION_27
0x4001dfe	        0x488b45f8	                mov rax, qword [rbp - 8]	       986	ldexp.c	FUNCTION_27	IF_1
0x4001e02	          0x8b4010	            mov eax, dword [rax + 0x10] 	       986	ldexp.c	FUNCTION_27	IF_1
0x4001e05	          0x83f802	                              cmp eax, 2	       986	ldexp.c	FUNCTION_27	IF_1
0x4001e08	            0x7560	                           jne 0x4001e6a	       986	ldexp.c	FUNCTION_27	IF_1
0x4001e0a	        0x488b45f8	                mov rax, qword [rbp - 8]	       987	ldexp.c	FUNCTION_27	IF_1
0x4001e0e	            0x8b00	                    mov eax, dword [rax]	       987	ldexp.c	FUNCTION_27	IF_1
0x4001e10	      0x3d17010000	                          cmp eax, 0x117	       987	ldexp.c	FUNCTION_27	IF_1
0x4001e15	            0x7553	                           jne 0x4001e6a	       987	ldexp.c	FUNCTION_27	IF_1
0x4001e17	        0x488b45f8	                mov rax, qword [rbp - 8]	       989	ldexp.c	FUNCTION_27	IF_1
0x4001e1b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       989	ldexp.c	FUNCTION_27	IF_1
0x4001e1f	        0x488945f8	                mov qword [rbp - 8], rax	       989	ldexp.c	FUNCTION_27	IF_1
0x4001e23	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	ldexp.c	FUNCTION_27	IF_1
0x4001e27	          0x8b4010	            mov eax, dword [rax + 0x10] 	       990	ldexp.c	FUNCTION_27	IF_1
0x4001e2a	          0x83f801	                              cmp eax, 1	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e2d	            0x7534	                           jne 0x4001e63	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e2f	        0x488b45f8	                mov rax, qword [rbp - 8]	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4001e33	        0x488b4018	            mov rax, qword [rax + 0x18] 	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4001e37	          0x4889c7	                            mov rdi, rax	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4001e3a	      0xe8defeffff	                    call sym.is_dot_ne_0	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4001e3f	            0x85c0	                           test eax, eax	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4001e41	            0x7420	                            je 0x4001e63	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4001e43	        0x488b45f8	                mov rax, qword [rbp - 8]	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e47	        0x488b4028	            mov rax, qword [rax + 0x28] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e4b	      0xbe01000000	                              mov esi, 1	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e50	          0x4889c7	                            mov rdi, rax	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e53	      0xe8aafdffff	                       call sym.is_value	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e58	            0x85c0	                           test eax, eax	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e5a	            0x7407	                            je 0x4001e63	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e5c	      0xb801000000	                              mov eax, 1	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e61	            0xeb0c	                           jmp 0x4001e6f	       990	ldexp.c	FUNCTION_27	IF_1
0x4001e63	      0xb800000000	                              mov eax, 0	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001e68	            0xeb05	                           jmp 0x4001e6f	       990	ldexp.c	FUNCTION_27	IF_1
0x4001e6a	      0xb800000000	                              mov eax, 0	       994	ldexp.c	FUNCTION_27
0x4001e6f	              0xc9	                                   leave	       995	ldexp.c	FUNCTION_27
0x4001e70	              0xc3	                                     ret	       995	ldexp.c	FUNCTION_27
fold_segment_align	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,6:ELSE,5	85
0x4000833	              0x55	                                push rbp	       449	ldexp.c	ELSE_1	FUNCTION_17
0x4000834	          0x4889e5	                            mov rbp, rsp	       449	ldexp.c	ELSE_1	FUNCTION_17
0x4000837	        0x4883ec20	                           sub rsp, 0x20	       449	ldexp.c	ELSE_1	FUNCTION_17
0x400083b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       449	ldexp.c	ELSE_1	FUNCTION_17
0x400083f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       449	ldexp.c	ELSE_1	FUNCTION_17
0x4000843	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	ldexp.c	ELSE_1	FUNCTION_17
0x4000847	    0xc74038010000	               mov dword [rax + 0x38], 1	       450	ldexp.c	ELSE_1	FUNCTION_17
0x400084e	    0x8b0500000000	            mov eax, dword [0x04000854] 	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000854	            0x85c0	                           test eax, eax	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000856	            0x740f	                            je 0x4000867	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000858	    0x488b05000000	            mov rax, qword [0x0400085f] 	       452	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x400085f	    0x483d00000000	                              cmp rax, 0	       452	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000865	            0x740f	                            je 0x4000876	       452	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000867	    0xc70500000000	               mov dword [0x04000871], 0	       453	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000871	      0xe91f010000	                           jmp 0x4000995	       487	ldexp.c	FUNCTION_17	ELSE_5	ELSE_1
0x4000876	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       456	ldexp.c	FUNCTION_17
0x400087a	          0x488b00	                    mov rax, qword [rax]	       456	ldexp.c	FUNCTION_17
0x400087d	        0x488945f0	             mov qword [rbp - 0x10], rax	       456	ldexp.c	FUNCTION_17
0x4000881	    0x488b05000000	            mov rax, qword [0x04000888] 	       457	ldexp.c	FUNCTION_17
0x4000888	        0x488945f8	                mov qword [rbp - 8], rax	       457	ldexp.c	FUNCTION_17
0x400088c	    0x488b05000000	            mov rax, qword [0x04000893] 	       459	ldexp.c	FUNCTION_17	CALL_1
0x4000893	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       459	ldexp.c	FUNCTION_17	CALL_1
0x4000897	          0x4889d6	                            mov rsi, rdx	       459	ldexp.c	FUNCTION_17	CALL_1
0x400089a	          0x4889c7	                            mov rdi, rax	       459	ldexp.c	FUNCTION_17	CALL_1
0x400089d	      0xe8e5280000	                        call sym.align_n	       459	ldexp.c	FUNCTION_17	CALL_1
0x40008a2	    0x488905000000	            mov qword [0x040008a9], rax 	       459	ldexp.c	FUNCTION_17	CALL_1
0x40008a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       460	ldexp.c	FUNCTION_17	IF_2
0x40008ad	            0x8b00	                    mov eax, dword [rax]	       460	ldexp.c	FUNCTION_17	IF_2
0x40008af	          0x83f804	                              cmp eax, 4	       460	ldexp.c	FUNCTION_17	IF_2
0x40008b2	            0x7514	                           jne 0x40008c8	       460	ldexp.c	FUNCTION_17	IF_2
0x40008b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       461	ldexp.c	FUNCTION_17	IF_2
0x40008b8	        0x488b4008	                mov rax, qword [rax + 8]	       461	ldexp.c	FUNCTION_17	IF_2
0x40008bc	    0x488905000000	            mov qword [0x040008c3], rax 	       461	ldexp.c	FUNCTION_17	IF_2
0x40008c3	      0xe9cd000000	                           jmp 0x4000995	       487	ldexp.c	FUNCTION_17	ELSE_5	ELSE_1
0x40008c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       462	ldexp.c	FUNCTION_17	ELSE_2	IF_3
0x40008cc	            0x8b00	                    mov eax, dword [rax]	       462	ldexp.c	FUNCTION_17	ELSE_2	IF_3
0x40008ce	          0x83f805	                              cmp eax, 5	       462	ldexp.c	FUNCTION_17	ELSE_2	IF_3
0x40008d1	            0x7541	                           jne 0x4000914	       462	ldexp.c	FUNCTION_17	ELSE_2	IF_3
0x40008d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       464	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40008d7	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       464	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40008db	     0xf83b4000000	                           jae 0x4000995	       464	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40008e1	    0x488b15000000	            mov rdx, qword [0x040008e8] 	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40008e8	    0x488b0d000000	            mov rcx, qword [0x040008ef] 	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40008ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40008f3	          0x4801c8	                            add rax, rcx	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40008f6	        0x488d48ff	                      lea rcx, [rax - 1]	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40008fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       466	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40008fe	        0x482b45f8	                sub rax, qword [rbp - 8]	       466	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000902	          0x4821c8	                            and rax, rcx	       466	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000905	          0x4801d0	                            add rax, rdx	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000908	    0x488905000000	            mov qword [0x0400090f], rax 	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x400090f	      0xe981000000	                           jmp 0x4000995	       487	ldexp.c	FUNCTION_17	ELSE_5	ELSE_1
0x4000914	    0x488b05000000	            mov rax, qword [0x0400091b] 	       470	ldexp.c	FUNCTION_17	ELSE_3
0x400091b	    0x488b15000000	            mov rdx, qword [0x04000922] 	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000922	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000926	        0x4883e901	                              sub rcx, 1	       470	ldexp.c	FUNCTION_17	ELSE_3
0x400092a	          0x4821ca	                            and rdx, rcx	       470	ldexp.c	FUNCTION_17	ELSE_3
0x400092d	          0x4801d0	                            add rax, rdx	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000930	    0x488905000000	            mov qword [0x04000937], rax 	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000937	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       471	ldexp.c	FUNCTION_17	ELSE_3	IF_5
0x400093b	            0x8b00	                    mov eax, dword [rax]	       471	ldexp.c	FUNCTION_17	ELSE_3	IF_5
0x400093d	          0x83f806	                              cmp eax, 6	       471	ldexp.c	FUNCTION_17	ELSE_3	IF_5
0x4000940	            0x7453	                            je 0x4000995	       471	ldexp.c	FUNCTION_17	ELSE_3	IF_5
0x4000942	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       475	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000946	            0x8b00	                    mov eax, dword [rax]	       475	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000948	            0x85c0	                           test eax, eax	       475	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x400094a	            0x753f	                           jne 0x400098b	       475	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x400094c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       477	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000950	    0xc70001000000	                      mov dword [rax], 1	       477	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000956	    0x488b15000000	            mov rdx, qword [0x0400095d] 	       478	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x400095d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       478	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000961	        0x48895008	                mov qword [rax + 8], rdx	       478	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000965	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       479	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000969	        0x488b55f8	                mov rdx, qword [rbp - 8]	       479	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x400096d	        0x48895028	             mov qword [rax + 0x28], rdx	       479	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000971	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       480	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000975	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       480	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000979	        0x48895030	             mov qword [rax + 0x30], rdx	       480	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x400097d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       481	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000981	    0x48c740180000	               mov qword [rax + 0x18], 0	       481	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000989	            0xeb0a	                           jmp 0x4000995	       487	ldexp.c	FUNCTION_17	ELSE_5	ELSE_1
0x400098b	    0xc70500000000	               mov dword [0x04000995], 0	       484	ldexp.c	FUNCTION_17	ELSE_3	ELSE_5
0x4000995	              0x90	                                     nop	       487	ldexp.c	FUNCTION_17	ELSE_5	ELSE_1
0x4000996	              0xc9	                                   leave	       487	ldexp.c	FUNCTION_17	ELSE_5	ELSE_1
0x4000997	              0xc3	                                     ret	       487	ldexp.c	FUNCTION_17	ELSE_5	ELSE_1
exp_value_fold	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,1:ELSE,0	22
0x40025ec	              0x55	                                push rbp	      1255	ldexp.c	FUNCTION_31
0x40025ed	          0x4889e5	                            mov rbp, rsp	      1255	ldexp.c	FUNCTION_31
0x40025f0	        0x4883ec10	                           sub rsp, 0x10	      1255	ldexp.c	FUNCTION_31
0x40025f4	        0x48897df8	                mov qword [rbp - 8], rdi	      1255	ldexp.c	FUNCTION_31
0x40025f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1256	ldexp.c	FUNCTION_31	CALL_1
0x40025fc	          0x4889c7	                            mov rdi, rax	      1256	ldexp.c	FUNCTION_31	CALL_1
0x40025ff	      0xe800000000	                          call 0x4002604	      1256	ldexp.c	FUNCTION_31	CALL_1
0x4002604	    0x8b0500000000	            mov eax, dword [0x0400260a] 	      1257	ldexp.c	FUNCTION_31	IF_1
0x400260a	            0x85c0	                           test eax, eax	      1257	ldexp.c	FUNCTION_31	IF_1
0x400260c	            0x7430	                            je 0x400263e	      1257	ldexp.c	FUNCTION_31	IF_1
0x400260e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1259	ldexp.c	FUNCTION_31	IF_1
0x4002612	    0xc70002010000	                  mov dword [rax], 0x102	      1259	ldexp.c	FUNCTION_31	IF_1
0x4002618	    0x488b15000000	            mov rdx, qword [0x0400261f] 	      1260	ldexp.c	FUNCTION_31	IF_1
0x400261f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1260	ldexp.c	FUNCTION_31	IF_1
0x4002623	        0x48895018	             mov qword [rax + 0x18], rdx	      1260	ldexp.c	FUNCTION_31	IF_1
0x4002627	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	ldexp.c	FUNCTION_31	IF_1
0x400262b	    0x48c740200000	               mov qword [rax + 0x20], 0	      1261	ldexp.c	FUNCTION_31	IF_1
0x4002633	        0x488b45f8	                mov rax, qword [rbp - 8]	      1262	ldexp.c	FUNCTION_31	IF_1
0x4002637	    0xc74010070000	               mov dword [rax + 0x10], 7	      1262	ldexp.c	FUNCTION_31	IF_1
0x400263e	              0x90	                                     nop	      1264	ldexp.c	FUNCTION_31
0x400263f	              0xc9	                                   leave	      1264	ldexp.c	FUNCTION_31
0x4002640	              0xc3	                                     ret	      1264	ldexp.c	FUNCTION_31
exp_relop	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	28
0x40002cf	              0x55	                                push rbp	       228	ldexp.c	FUNCTION_7
0x40002d0	          0x4889e5	                            mov rbp, rsp	       228	ldexp.c	FUNCTION_7
0x40002d3	        0x4883ec20	                           sub rsp, 0x20	       228	ldexp.c	FUNCTION_7
0x40002d7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       228	ldexp.c	FUNCTION_7
0x40002db	        0x488975e0	             mov qword [rbp - 0x20], rsi	       228	ldexp.c	FUNCTION_7
0x40002df	      0xbf28000000	                           mov edi, 0x28	       229	ldexp.c	FUNCTION_7	CALL_1
0x40002e4	      0xe800000000	                          call 0x40002e9	       229	ldexp.c	FUNCTION_7	CALL_1
0x40002e9	        0x488945f8	                mov qword [rbp - 8], rax	       229	ldexp.c	FUNCTION_7	CALL_1
0x40002ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	ldexp.c	FUNCTION_7
0x40002f1	    0xc7006e010000	                  mov dword [rax], 0x16e	       230	ldexp.c	FUNCTION_7
0x40002f7	      0xe800000000	                          call 0x40002fc	       231	ldexp.c	FUNCTION_7	CALL_2
0x40002fc	          0x4889c2	                            mov rdx, rax	       231	ldexp.c	FUNCTION_7	CALL_2
0x40002ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       231	ldexp.c	FUNCTION_7	CALL_2
0x4000303	        0x48895008	                mov qword [rax + 8], rdx	       231	ldexp.c	FUNCTION_7	CALL_2
0x4000307	    0x8b1500000000	            mov edx, dword [0x0400030d] 	       232	ldexp.c	FUNCTION_7
0x400030d	        0x488b45f8	                mov rax, qword [rbp - 8]	       232	ldexp.c	FUNCTION_7
0x4000311	          0x895004	                mov dword [rax + 4], edx	       232	ldexp.c	FUNCTION_7
0x4000314	        0x488b45f8	                mov rax, qword [rbp - 8]	       233	ldexp.c	FUNCTION_7
0x4000318	    0xc74010090000	               mov dword [rax + 0x10], 9	       233	ldexp.c	FUNCTION_7
0x400031f	        0x488b45f8	                mov rax, qword [rbp - 8]	       234	ldexp.c	FUNCTION_7
0x4000323	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       234	ldexp.c	FUNCTION_7
0x4000327	        0x48895018	             mov qword [rax + 0x18], rdx	       234	ldexp.c	FUNCTION_7
0x400032b	        0x488b45f8	                mov rax, qword [rbp - 8]	       235	ldexp.c	FUNCTION_7
0x400032f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       235	ldexp.c	FUNCTION_7
0x4000333	        0x48895020	             mov qword [rax + 0x20], rdx	       235	ldexp.c	FUNCTION_7
0x4000337	        0x488b45f8	                mov rax, qword [rbp - 8]	       236	ldexp.c	FUNCTION_7
0x400033b	              0xc9	                                   leave	       237	ldexp.c	FUNCTION_7
0x400033c	              0xc3	                                     ret	       237	ldexp.c	FUNCTION_7
symbol_defined	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	12
0x4000482	              0x55	                                push rbp	       297	ldexp.c	FUNCTION_12
0x4000483	          0x4889e5	                            mov rbp, rsp	       297	ldexp.c	FUNCTION_12
0x4000486	        0x4883ec10	                           sub rsp, 0x10	       297	ldexp.c	FUNCTION_12
0x400048a	        0x48897df8	                mov qword [rbp - 8], rdi	       297	ldexp.c	FUNCTION_12
0x400048e	        0x488b45f8	                mov rax, qword [rbp - 8]	       298	ldexp.c	FUNCTION_12
0x4000492	      0xb900000000	                              mov ecx, 0	       298	ldexp.c	FUNCTION_12
0x4000497	      0xba00000000	                              mov edx, 0	       298	ldexp.c	FUNCTION_12
0x400049c	          0x4889c6	                            mov rsi, rax	       298	ldexp.c	FUNCTION_12
0x400049f	      0xbf00000000	                              mov edi, 0	       298	ldexp.c	FUNCTION_12
0x40004a4	      0xe800000000	                          call 0x40004a9	       298	ldexp.c	FUNCTION_12
0x40004a9	              0xc9	                                   leave	       300	ldexp.c	FUNCTION_12
0x40004aa	              0xc3	                                     ret	       300	ldexp.c	FUNCTION_12
exp_binop	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,1:ELSE,0	48
0x4002641	              0x55	                                push rbp	      1270	ldexp.c	FUNCTION_32
0x4002642	          0x4889e5	                            mov rbp, rsp	      1270	ldexp.c	FUNCTION_32
0x4002645	        0x4883ec30	                           sub rsp, 0x30	      1270	ldexp.c	FUNCTION_32
0x4002649	          0x897dec	             mov dword [rbp - 0x14], edi	      1270	ldexp.c	FUNCTION_32
0x400264c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1270	ldexp.c	FUNCTION_32
0x4002650	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1270	ldexp.c	FUNCTION_32
0x4002654	      0xbf28000000	                           mov edi, 0x28	      1271	ldexp.c	FUNCTION_32	CALL_1
0x4002659	      0xe800000000	                          call 0x400265e	      1271	ldexp.c	FUNCTION_32	CALL_1
0x400265e	        0x488945f8	                mov qword [rbp - 8], rax	      1271	ldexp.c	FUNCTION_32	CALL_1
0x4002662	        0x488b45f8	                mov rax, qword [rbp - 8]	      1273	ldexp.c	FUNCTION_32
0x4002666	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1273	ldexp.c	FUNCTION_32
0x4002669	            0x8910	                    mov dword [rax], edx	      1273	ldexp.c	FUNCTION_32
0x400266b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1274	ldexp.c	FUNCTION_32
0x400266f	        0x488b5008	                mov rdx, qword [rax + 8]	      1274	ldexp.c	FUNCTION_32
0x4002673	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	ldexp.c	FUNCTION_32
0x4002677	        0x48895008	                mov qword [rax + 8], rdx	      1274	ldexp.c	FUNCTION_32
0x400267b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1275	ldexp.c	FUNCTION_32
0x400267f	          0x8b5004	                mov edx, dword [rax + 4]	      1275	ldexp.c	FUNCTION_32
0x4002682	        0x488b45f8	                mov rax, qword [rbp - 8]	      1275	ldexp.c	FUNCTION_32
0x4002686	          0x895004	                mov dword [rax + 4], edx	      1275	ldexp.c	FUNCTION_32
0x4002689	        0x488b45f8	                mov rax, qword [rbp - 8]	      1276	ldexp.c	FUNCTION_32
0x400268d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1276	ldexp.c	FUNCTION_32
0x4002691	        0x48895018	             mov qword [rax + 0x18], rdx	      1276	ldexp.c	FUNCTION_32
0x4002695	        0x488b45f8	                mov rax, qword [rbp - 8]	      1277	ldexp.c	FUNCTION_32
0x4002699	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1277	ldexp.c	FUNCTION_32
0x400269d	        0x48895020	             mov qword [rax + 0x20], rdx	      1277	ldexp.c	FUNCTION_32
0x40026a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1278	ldexp.c	FUNCTION_32
0x40026a5	    0xc74010000000	               mov dword [rax + 0x10], 0	      1278	ldexp.c	FUNCTION_32
0x40026ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1279	ldexp.c	FUNCTION_32	IF_1
0x40026b0	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1279	ldexp.c	FUNCTION_32	IF_1
0x40026b3	          0x83f807	                              cmp eax, 7	      1279	ldexp.c	FUNCTION_32	IF_1
0x40026b6	            0x7533	                           jne 0x40026eb	      1279	ldexp.c	FUNCTION_32	IF_1
0x40026b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1280	ldexp.c	FUNCTION_32	IF_1
0x40026bc	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1280	ldexp.c	FUNCTION_32	IF_1
0x40026bf	          0x83f807	                              cmp eax, 7	      1280	ldexp.c	FUNCTION_32	IF_1
0x40026c2	            0x7527	                           jne 0x40026eb	      1280	ldexp.c	FUNCTION_32	IF_1
0x40026c4	    0x817dec170100	          cmp dword [rbp - 0x14], 0x117 	      1281	ldexp.c	FUNCTION_32	IF_1
0x40026cb	            0x741e	                            je 0x40026eb	      1281	ldexp.c	FUNCTION_32	IF_1
0x40026cd	    0x817dec240100	          cmp dword [rbp - 0x14], 0x124 	      1282	ldexp.c	FUNCTION_32	IF_1
0x40026d4	            0x7415	                            je 0x40026eb	      1282	ldexp.c	FUNCTION_32	IF_1
0x40026d6	    0x817dec250100	          cmp dword [rbp - 0x14], 0x125 	      1283	ldexp.c	FUNCTION_32	IF_1
0x40026dd	            0x740c	                            je 0x40026eb	      1283	ldexp.c	FUNCTION_32	IF_1
0x40026df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1284	ldexp.c	FUNCTION_32	CALL_2
0x40026e3	          0x4889c7	                            mov rdi, rax	      1284	ldexp.c	FUNCTION_32	CALL_2
0x40026e6	      0xe801ffffff	                 call sym.exp_value_fold	      1284	ldexp.c	FUNCTION_32	CALL_2
0x40026eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1285	ldexp.c	FUNCTION_32
0x40026ef	              0xc9	                                   leave	      1286	ldexp.c	FUNCTION_32
0x40026f0	              0xc3	                                     ret	      1286	ldexp.c	FUNCTION_32
exp_get_value_int	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	15
0x4002efc	              0x55	                                push rbp	      1527	ldexp.c	FUNCTION_43
0x4002efd	          0x4889e5	                            mov rbp, rsp	      1527	ldexp.c	FUNCTION_43
0x4002f00	        0x4883ec20	                           sub rsp, 0x20	      1527	ldexp.c	FUNCTION_43
0x4002f04	        0x48897df8	                mov qword [rbp - 8], rdi	      1527	ldexp.c	FUNCTION_43
0x4002f08	          0x8975f4	              mov dword [rbp - 0xc], esi	      1527	ldexp.c	FUNCTION_43
0x4002f0b	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1527	ldexp.c	FUNCTION_43
0x4002f0f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1528	ldexp.c	FUNCTION_43	CALL_1
0x4002f12	          0x4863c8	                         movsxd rcx, eax	      1528	ldexp.c	FUNCTION_43	CALL_1
0x4002f15	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1528	ldexp.c	FUNCTION_43	CALL_1
0x4002f19	        0x488b45f8	                mov rax, qword [rbp - 8]	      1528	ldexp.c	FUNCTION_43	CALL_1
0x4002f1d	          0x4889ce	                            mov rsi, rcx	      1528	ldexp.c	FUNCTION_43	CALL_1
0x4002f20	          0x4889c7	                            mov rdi, rax	      1528	ldexp.c	FUNCTION_43	CALL_1
0x4002f23	      0xe800000000	                          call 0x4002f28	      1528	ldexp.c	FUNCTION_43	CALL_1
0x4002f28	              0xc9	                                   leave	      1529	ldexp.c	FUNCTION_43
0x4002f29	              0xc3	                                     ret	      1529	ldexp.c	FUNCTION_43
fold_name	DO,0:SWITCH,1:CALL,53:FOR,0:functions,0:WHILE,0:IF,35:ELSE,18	572
0x40012b8	              0x55	                                push rbp	       683	ldexp.c	FUNCTION_21
0x40012b9	          0x4889e5	                            mov rbp, rsp	       683	ldexp.c	FUNCTION_21
0x40012bc	              0x53	                                push rbx	       683	ldexp.c	FUNCTION_21
0x40012bd	        0x4883ec68	                           sub rsp, 0x68	       683	ldexp.c	FUNCTION_21
0x40012c1	        0x48897d98	             mov qword [rbp - 0x68], rdi	       683	ldexp.c	FUNCTION_21
0x40012c5	      0xba20000000	                           mov edx, 0x20	       687	ldexp.c	FUNCTION_21	CALL_1
0x40012ca	      0xbe00000000	                              mov esi, 0	       687	ldexp.c	FUNCTION_21	CALL_1
0x40012cf	      0xbf00000000	                              mov edi, 0	       687	ldexp.c	FUNCTION_21	CALL_1
0x40012d4	      0xe800000000	                          call 0x40012d9	       687	ldexp.c	FUNCTION_21	CALL_1
0x40012d9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40012dd	            0x8b00	                    mov eax, dword [rax]	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40012df	      0x3d42010000	                          cmp eax, 0x142	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40012e4	            0x7f2d	                            jg 0x4001313	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40012e6	      0x3d41010000	                          cmp eax, 0x141	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40012eb	     0xf8d30060000	                           jge 0x4001921	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40012f1	      0x3d2b010000	                          cmp eax, 0x12b	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40012f6	            0x7463	                            je 0x400135b	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40012f8	      0x3d3b010000	                          cmp eax, 0x13b	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40012fd	     0xf84b3000000	                            je 0x40013b6	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001303	      0x3d03010000	                          cmp eax, 0x103	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001308	     0xf8470010000	                            je 0x400147e	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400130e	      0xe975080000	                           jmp 0x4001b88	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001313	      0x3d4e010000	                          cmp eax, 0x14e	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001318	     0xf8474070000	                            je 0x4001a92	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400131e	      0x3d4e010000	                          cmp eax, 0x14e	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001323	            0x7f1b	                            jg 0x4001340	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001325	      0x3d43010000	                          cmp eax, 0x143	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400132a	     0xf8477040000	                            je 0x40017a7	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001330	      0x3d44010000	                          cmp eax, 0x144	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001335	     0xf840f050000	                            je 0x400184a	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400133b	      0xe948080000	                           jmp 0x4001b88	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001340	      0x3d50010000	                          cmp eax, 0x150	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001345	     0xf84d3060000	                            je 0x4001a1e	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400134b	      0x3d82010000	                          cmp eax, 0x182	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001350	     0xf84b0070000	                            je 0x4001b06	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001356	      0xe92d080000	                           jmp 0x4001b88	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400135b	    0x8b0500000000	            mov eax, dword [0x04001361] 	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x4001361	            0x85c0	                           test eax, eax	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x4001363	     0xf8430080000	                            je 0x4001b99	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x4001369	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       694	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x4001371	    0x8b0500000000	            mov eax, dword [0x04001377] 	       697	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	IF_2
0x4001377	          0x83f801	                              cmp eax, 1	       697	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	IF_2
0x400137a	            0x7429	                            je 0x40013a5	       697	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	IF_2
0x400137c	    0x488b05000000	            mov rax, qword [0x04001383] 	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x4001383	        0x488b4008	                mov rax, qword [rax + 8]	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x4001387	    0x488b80a00200	           mov rax, qword [rax + 0x2a0] 	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x400138e	    0x488b15000000	            mov rdx, qword [0x04001395] 	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x4001395	      0xbe00000000	                              mov esi, 0	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x400139a	          0x4889d7	                            mov rdi, rdx	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x400139d	            0xffd0	                                call rax	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x400139f	            0x4898	                                    cdqe	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40013a1	        0x488945a0	             mov qword [rbp - 0x60], rax	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40013a5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       699	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_3
0x40013a9	          0x4889c7	                            mov rdi, rax	       699	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_3
0x40013ac	      0xe88cefffff	                     call sym.new_number	       699	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_3
0x40013b1	      0xe9e3070000	                           jmp 0x4001b99	       701	ldexp.c	FUNCTION_21	SWITCH_1
0x40013b6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x40013ba	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x40013be	    0x488b05000000	            mov rax, qword [0x040013c5] 	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x40013c5	    0x41b901000000	                              mov r9d, 1	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x40013cb	    0x41b800000000	                              mov r8d, 0	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x40013d1	      0xb900000000	                              mov ecx, 0	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x40013d6	      0xbe00000000	                              mov esi, 0	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x40013db	          0x4889c7	                            mov rdi, rax	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x40013de	      0xe800000000	                          call 0x40013e3	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x40013e3	        0x488945b0	             mov qword [rbp - 0x50], rax	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x40013e7	      0x48837db000	               cmp qword [rbp - 0x50], 0	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x40013ec	            0x747c	                            je 0x400146a	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x40013ee	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x40013f2	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x40013f6	            0x3c03	                               cmp al, 3	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x40013f8	            0x7418	                            je 0x4001412	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x40013fa	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       710	ldexp.c	FUNCTION_21	SWITCH_1
0x40013fe	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       710	ldexp.c	FUNCTION_21	SWITCH_1
0x4001402	            0x3c04	                               cmp al, 4	       710	ldexp.c	FUNCTION_21	SWITCH_1
0x4001404	            0x740c	                            je 0x4001412	       710	ldexp.c	FUNCTION_21	SWITCH_1
0x4001406	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       711	ldexp.c	FUNCTION_21	SWITCH_1
0x400140a	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       711	ldexp.c	FUNCTION_21	SWITCH_1
0x400140e	            0x3c05	                               cmp al, 5	       711	ldexp.c	FUNCTION_21	SWITCH_1
0x4001410	            0x7558	                           jne 0x400146a	       711	ldexp.c	FUNCTION_21	SWITCH_1
0x4001412	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4001416	         0xfb64019	           movzx eax, byte [rax + 0x19] 	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400141a	          0x83e008	                              and eax, 8	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400141d	            0x84c0	                             test al, al	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400141f	            0x7442	                            je 0x4001463	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4001421	        0x488b4598	             mov rax, qword [rbp - 0x68]	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001425	        0x488b4018	            mov rax, qword [rax + 0x18] 	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001429	          0x4889c7	                            mov rdi, rax	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x400142c	      0xe851f0ffff	                 call sym.symbol_defined	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001431	        0x488945b8	             mov qword [rbp - 0x48], rax	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001435	      0x48837db800	               cmp qword [rbp - 0x48], 0	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x400143a	            0x7427	                            je 0x4001463	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x400143c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4001440	         0xfb64021	           movzx eax, byte [rax + 0x21] 	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4001444	          0x83e001	                              and eax, 1	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4001447	            0x84c0	                             test al, al	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4001449	            0x7518	                           jne 0x4001463	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x400144b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       715	ldexp.c	FUNCTION_21	SWITCH_1
0x400144f	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       715	ldexp.c	FUNCTION_21	SWITCH_1
0x4001453	           0xfb6d0	                           movzx edx, al	       715	ldexp.c	FUNCTION_21	SWITCH_1
0x4001456	    0x8b0500000000	            mov eax, dword [0x0400145c] 	       715	ldexp.c	FUNCTION_21	SWITCH_1
0x400145c	           0xfb6c0	                           movzx eax, al	       715	ldexp.c	FUNCTION_21	SWITCH_1
0x400145f	            0x39c2	                            cmp edx, eax	       715	ldexp.c	FUNCTION_21	SWITCH_1
0x4001461	            0x7507	                           jne 0x400146a	       715	ldexp.c	FUNCTION_21	SWITCH_1
0x4001463	      0xb801000000	                              mov eax, 1	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4001468	            0xeb05	                           jmp 0x400146f	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400146a	      0xb800000000	                              mov eax, 0	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400146f	            0x4898	                                    cdqe	       708	ldexp.c	FUNCTION_21	SWITCH_1	CALL_5
0x4001471	          0x4889c7	                            mov rdi, rax	       708	ldexp.c	FUNCTION_21	SWITCH_1	CALL_5
0x4001474	      0xe8c4eeffff	                     call sym.new_number	       708	ldexp.c	FUNCTION_21	SWITCH_1	CALL_5
0x4001479	      0xe92b070000	                           jmp 0x4001ba9	       716	ldexp.c	FUNCTION_21	SWITCH_1
0x400147e	    0x488b05000000	            mov rax, qword [0x04001485] 	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x4001485	          0x4885c0	                           test rax, rax	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x4001488	     0xf84c0000000	                            je 0x400154e	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x400148e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x4001492	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x4001496	    0x488b05000000	            mov rax, qword [0x0400149d] 	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x400149d	          0x4889d6	                            mov rsi, rdx	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x40014a0	          0x4889c7	                            mov rdi, rax	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x40014a3	      0xe800000000	                          call 0x40014a8	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x40014a8	            0x85c0	                           test eax, eax	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x40014aa	     0xf859e000000	                           jne 0x400154e	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x40014b0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40014b4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40014b8	    0x488b05000000	            mov rax, qword [0x040014bf] 	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40014bf	    0x41b901000000	                              mov r9d, 1	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40014c5	    0x41b800000000	                              mov r8d, 0	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40014cb	      0xb900000000	                              mov ecx, 0	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40014d0	      0xbe00000000	                              mov esi, 0	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40014d5	          0x4889c7	                            mov rdi, rax	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40014d8	      0xe800000000	                          call 0x40014dd	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40014dd	        0x488945b0	             mov qword [rbp - 0x50], rax	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40014e1	      0x48837db000	               cmp qword [rbp - 0x50], 0	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40014e6	            0x745b	                            je 0x4001543	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40014e8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40014ec	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40014f0	            0x3c03	                               cmp al, 3	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40014f2	            0x740c	                            je 0x4001500	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40014f4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       730	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40014f8	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       730	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40014fc	            0x3c04	                               cmp al, 4	       730	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40014fe	            0x7543	                           jne 0x4001543	       730	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001500	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       731	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001504	        0x488b4028	            mov rax, qword [rax + 0x28] 	       731	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001508	    0x483d00000000	                              cmp rax, 0	       731	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400150e	            0x7533	                           jne 0x4001543	       731	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001510	        0x488b4598	             mov rax, qword [rbp - 0x68]	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x4001514	        0x488b4018	            mov rax, qword [rax + 0x18] 	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x4001518	          0x4889c7	                            mov rdi, rax	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x400151b	      0xe862efffff	                 call sym.symbol_defined	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x4001520	        0x488945b8	             mov qword [rbp - 0x48], rax	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x4001524	      0x48837db800	               cmp qword [rbp - 0x48], 0	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x4001529	            0x7418	                            je 0x4001543	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x400152b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       733	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400152f	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       733	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001533	           0xfb6d0	                           movzx edx, al	       733	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001536	    0x8b0500000000	            mov eax, dword [0x0400153c] 	       733	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400153c	           0xfb6c0	                           movzx eax, al	       733	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400153f	            0x39c2	                            cmp edx, eax	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001541	            0x740b	                            je 0x400154e	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001543	    0x48c705000000	               mov qword [0x0400154e], 0	       734	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400154e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001552	        0x488b4018	            mov rax, qword [rax + 0x18] 	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001556	           0xfb600	                   movzx eax, byte [rax]	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001559	            0x3c2e	                            cmp al, 0x2e	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x400155b	            0x7527	                           jne 0x4001584	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x400155d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001561	        0x488b4018	            mov rax, qword [rax + 0x18] 	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001565	        0x4883c001	                              add rax, 1	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001569	           0xfb600	                   movzx eax, byte [rax]	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x400156c	            0x84c0	                             test al, al	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x400156e	            0x7514	                           jne 0x4001584	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001570	    0x488b05000000	            mov rax, qword [0x04001577] 	       737	ldexp.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001577	          0x4889c7	                            mov rdi, rax	       737	ldexp.c	FUNCTION_21	SWITCH_1	CALL_10
0x400157a	      0xe82eeeffff	               call sym.new_rel_from_abs	       737	ldexp.c	FUNCTION_21	SWITCH_1	CALL_10
0x400157f	      0xe925060000	                           jmp 0x4001ba9	       787	ldexp.c	FUNCTION_21	SWITCH_1
0x4001584	        0x488b4598	             mov rax, qword [rbp - 0x68]	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4001588	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x400158c	    0x488b05000000	            mov rax, qword [0x04001593] 	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4001593	    0x41b901000000	                              mov r9d, 1	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4001599	    0x41b800000000	                              mov r8d, 0	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x400159f	      0xb901000000	                              mov ecx, 1	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x40015a4	      0xbe00000000	                              mov esi, 0	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x40015a9	          0x4889c7	                            mov rdi, rax	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x40015ac	      0xe800000000	                          call 0x40015b1	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x40015b1	        0x488945b0	             mov qword [rbp - 0x50], rax	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x40015b5	      0x48837db000	               cmp qword [rbp - 0x50], 0	       744	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_6
0x40015ba	            0x751c	                           jne 0x40015d8	       744	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_6
0x40015bc	      0xbf00000000	                              mov edi, 0	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40015c1	      0xe800000000	                          call 0x40015c6	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40015c6	          0x4889c7	                            mov rdi, rax	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40015c9	      0xb800000000	                              mov eax, 0	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40015ce	      0xe800000000	                          call 0x40015d3	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40015d3	      0xe9a3010000	                           jmp 0x400177b	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40015d8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40015dc	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40015e0	            0x3c03	                               cmp al, 3	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40015e2	            0x7410	                            je 0x40015f4	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40015e4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       747	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40015e8	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       747	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40015ec	            0x3c04	                               cmp al, 4	       747	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40015ee	     0xf85e5000000	                           jne 0x40016d9	       747	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40015f4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       751	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40015f8	        0x488b4028	            mov rax, qword [rax + 0x28] 	       751	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40015fc	        0x488b4068	            mov rax, qword [rax + 0x68] 	       751	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4001600	        0x488945c0	             mov qword [rbp - 0x40], rax	       751	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4001604	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       752	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8
0x4001609	            0x755c	                           jne 0x4001667	       752	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8
0x400160b	    0x8b0500000000	            mov eax, dword [0x04001611] 	       754	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	IF_9
0x4001611	          0x83f801	                              cmp eax, 1	       754	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	IF_9
0x4001614	            0x7720	                            ja 0x4001636	       754	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	IF_9
0x4001616	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       755	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	CALL_14
0x400161a	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       755	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	CALL_14
0x400161e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       755	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	CALL_14
0x4001622	        0x488b4030	            mov rax, qword [rax + 0x30] 	       755	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	CALL_14
0x4001626	          0x4889d6	                            mov rsi, rdx	       755	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	CALL_14
0x4001629	          0x4889c7	                            mov rdi, rax	       755	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	CALL_14
0x400162c	      0xe842edffff	                        call sym.new_rel	       755	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	CALL_14
0x4001631	      0xe945010000	                           jmp 0x400177b	       748	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4001636	        0x488b4598	             mov rax, qword [rbp - 0x68]	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x400163a	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x400163e	      0xbf00000000	                              mov edi, 0	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001643	      0xe800000000	                          call 0x4001648	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001648	          0x4889c1	                            mov rcx, rax	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x400164b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x400164f	          0x4889da	                            mov rdx, rbx	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001652	          0x4889c6	                            mov rsi, rax	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001655	          0x4889cf	                            mov rdi, rcx	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001658	      0xb800000000	                              mov eax, 0	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x400165d	      0xe800000000	                          call 0x4001662	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001662	      0xe914010000	                           jmp 0x400177b	       748	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4001667	    0x48817dc00000	               cmp qword [rbp - 0x40], 0	       761	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400166f	            0x753d	                           jne 0x40016ae	       761	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001671	    0x488b05000000	            mov rax, qword [0x04001678] 	       762	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001678	    0x483d00000000	                              cmp rax, 0	       762	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400167e	            0x750a	                           jne 0x400168a	       762	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001680	    0x8b0500000000	            mov eax, dword [0x04001686] 	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001686	            0x85c0	                           test eax, eax	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001688	            0x7424	                            je 0x40016ae	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400168a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400168e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001692	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001696	        0x488b4028	            mov rax, qword [rax + 0x28] 	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400169a	        0x488b4060	            mov rax, qword [rax + 0x60] 	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400169e	          0x4801d0	                            add rax, rdx	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40016a1	          0x4889c7	                            mov rdi, rax	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40016a4	      0xe894ecffff	                     call sym.new_number	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40016a9	      0xe9cd000000	                           jmp 0x400177b	       748	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40016ae	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40016b2	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40016b6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40016ba	        0x488b4028	            mov rax, qword [rax + 0x28] 	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40016be	        0x488b4060	            mov rax, qword [rax + 0x60] 	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40016c2	          0x4801c2	                            add rdx, rax	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40016c5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40016c9	          0x4889c6	                            mov rsi, rax	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40016cc	          0x4889d7	                            mov rdi, rdx	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40016cf	      0xe89fecffff	                        call sym.new_rel	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40016d4	      0xe9a2000000	                           jmp 0x400177b	       748	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40016d9	    0x8b0500000000	            mov eax, dword [0x040016df] 	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40016df	          0x83f804	                              cmp eax, 4	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40016e2	            0x7415	                            je 0x40016f9	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40016e4	    0x8b0500000000	            mov eax, dword [0x040016ea] 	       770	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40016ea	          0x83f801	                              cmp eax, 1	       770	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40016ed	            0x7438	                            je 0x4001727	       770	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40016ef	    0x8b0500000000	            mov eax, dword [0x040016f5] 	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40016f5	            0x85c0	                           test eax, eax	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40016f7	            0x742e	                            je 0x4001727	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40016f9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40016fd	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001701	      0xbf00000000	                              mov edi, 0	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001706	      0xe800000000	                          call 0x400170b	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x400170b	          0x4889c1	                            mov rcx, rax	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x400170e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001712	          0x4889da	                            mov rdx, rbx	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001715	          0x4889c6	                            mov rsi, rax	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001718	          0x4889cf	                            mov rdi, rcx	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x400171b	      0xb800000000	                              mov eax, 0	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001720	      0xe800000000	                          call 0x4001725	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001725	            0xeb54	                           jmp 0x400177b	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001727	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       775	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x400172b	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       775	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x400172f	            0x84c0	                             test al, al	       775	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x4001731	            0x7548	                           jne 0x400177b	       775	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x4001733	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       777	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x4001737	        0xc6401801	                mov byte [rax + 0x18], 1	       777	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x400173b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       778	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x400173f	    0x48c740280000	               mov qword [rax + 0x28], 0	       778	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x4001747	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x400174b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x400174f	          0x4885c0	                           test rax, rax	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4001752	            0x7527	                           jne 0x400177b	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4001754	    0x488b05000000	            mov rax, qword [0x0400175b] 	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x400175b	        0x488b4030	            mov rax, qword [rax + 0x30] 	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x400175f	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4001763	            0x7416	                            je 0x400177b	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4001765	    0x488b05000000	            mov rax, qword [0x0400176c] 	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x400176c	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x4001770	          0x4889d6	                            mov rsi, rdx	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x4001773	          0x4889c7	                            mov rdi, rax	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x4001776	      0xe800000000	                          call 0x400177b	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x400177b	    0x488b05000000	            mov rax, qword [0x04001782] 	       782	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001782	          0x4885c0	                           test rax, rax	       782	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001785	            0x7510	                           jne 0x4001797	       782	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001787	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x400178b	    0x488905000000	            mov qword [0x04001792], rax 	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001792	      0xe912040000	                           jmp 0x4001ba9	       787	ldexp.c	FUNCTION_21	SWITCH_1
0x4001797	    0x48c705000000	mov qword [0x040017a2], 0xffffffffffffffff 	       785	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_8
0x40017a2	      0xe902040000	                           jmp 0x4001ba9	       787	ldexp.c	FUNCTION_21	SWITCH_1
0x40017a7	    0x8b0500000000	            mov eax, dword [0x040017ad] 	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x40017ad	            0x85c0	                           test eax, eax	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x40017af	     0xf84e7030000	                            je 0x4001b9c	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x40017b5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x40017b9	        0x488b4018	            mov rax, qword [rax + 0x18] 	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x40017bd	      0xba00000000	                              mov edx, 0	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x40017c2	      0xbe00000000	                              mov esi, 0	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x40017c7	          0x4889c7	                            mov rdi, rax	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x40017ca	      0xe800000000	                          call 0x40017cf	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x40017cf	        0x488945c8	             mov qword [rbp - 0x38], rax	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x40017d3	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       795	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16
0x40017d8	            0x7540	                           jne 0x400181a	       795	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16
0x40017da	    0x8b0500000000	            mov eax, dword [0x040017e0] 	       797	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17
0x40017e0	          0x83f804	                              cmp eax, 4	       797	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17
0x40017e3	     0xf85b3030000	                           jne 0x4001b9c	       797	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17
0x40017e9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x40017ed	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x40017f1	      0xbf00000000	                              mov edi, 0	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x40017f6	      0xe800000000	                          call 0x40017fb	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x40017fb	          0x4889c1	                            mov rcx, rax	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x40017fe	        0x488b4598	             mov rax, qword [rbp - 0x68]	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001802	          0x4889da	                            mov rdx, rbx	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001805	          0x4889c6	                            mov rsi, rax	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001808	          0x4889cf	                            mov rdi, rcx	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x400180b	      0xb800000000	                              mov eax, 0	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001810	      0xe800000000	                          call 0x4001815	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001815	      0xe982030000	                           jmp 0x4001b9c	       805	ldexp.c	FUNCTION_21	SWITCH_1
0x400181a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x400181e	     0xfb680900000	           movzx eax, byte [rax + 0x90] 	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4001825	          0x83e001	                              and eax, 1	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4001828	            0x84c0	                             test al, al	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x400182a	     0xf846c030000	                            je 0x4001b9c	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4001830	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       803	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4001834	        0x488b4038	            mov rax, qword [rax + 0x38] 	       803	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4001838	          0x4889c6	                            mov rsi, rax	       803	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x400183b	      0xbf00000000	                              mov edi, 0	       803	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4001840	      0xe82eebffff	                        call sym.new_rel	       803	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4001845	      0xe952030000	                           jmp 0x4001b9c	       805	ldexp.c	FUNCTION_21	SWITCH_1
0x400184a	    0x8b0500000000	            mov eax, dword [0x04001850] 	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x4001850	            0x85c0	                           test eax, eax	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x4001852	     0xf8447030000	                            je 0x4001b9f	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x4001858	        0x488b4598	             mov rax, qword [rbp - 0x68]	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x400185c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x4001860	      0xba00000000	                              mov edx, 0	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x4001865	      0xbe00000000	                              mov esi, 0	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x400186a	          0x4889c7	                            mov rdi, rax	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x400186d	      0xe800000000	                          call 0x4001872	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x4001872	        0x488945d0	             mov qword [rbp - 0x30], rax	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x4001876	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       813	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20
0x400187b	            0x7540	                           jne 0x40018bd	       813	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20
0x400187d	    0x8b0500000000	            mov eax, dword [0x04001883] 	       815	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21
0x4001883	          0x83f804	                              cmp eax, 4	       815	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21
0x4001886	     0xf8513030000	                           jne 0x4001b9f	       815	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21
0x400188c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4001890	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4001894	      0xbf00000000	                              mov edi, 0	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4001899	      0xe800000000	                          call 0x400189e	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x400189e	          0x4889c1	                            mov rcx, rax	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40018a1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40018a5	          0x4889da	                            mov rdx, rbx	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40018a8	          0x4889c6	                            mov rsi, rax	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40018ab	          0x4889cf	                            mov rdi, rcx	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40018ae	      0xb800000000	                              mov eax, 0	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40018b3	      0xe800000000	                          call 0x40018b8	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40018b8	      0xe9e2020000	                           jmp 0x4001b9f	       832	ldexp.c	FUNCTION_21	SWITCH_1
0x40018bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x40018c1	     0xfb680900000	           movzx eax, byte [rax + 0x90] 	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x40018c8	          0x83e002	                              and eax, 2	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x40018cb	            0x84c0	                             test al, al	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x40018cd	     0xf84cc020000	                            je 0x4001b9f	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x40018d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x40018d7	        0x488b4060	            mov rax, qword [rax + 0x60] 	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x40018db	          0x4885c0	                           test rax, rax	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x40018de	            0x7519	                           jne 0x40018f9	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x40018e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x40018e4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x40018e8	        0x488b4030	            mov rax, qword [rax + 0x30] 	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x40018ec	          0x4889c7	                            mov rdi, rax	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x40018ef	      0xe8cde8ffff	                        call sym.new_abs	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x40018f4	      0xe9a6020000	                           jmp 0x4001b9f	       832	ldexp.c	FUNCTION_21	SWITCH_1
0x40018f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       826	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	CALL_30
0x40018fd	        0x488b4060	            mov rax, qword [rax + 0x60] 	       826	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	CALL_30
0x4001901	          0x4889c7	                            mov rdi, rax	       826	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	CALL_30
0x4001904	      0xe868050000	                call sym.exp_fold_tree_1	       826	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	CALL_30
0x4001909	    0x8b0500000000	            mov eax, dword [0x0400190f] 	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x400190f	            0x85c0	                           test eax, eax	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x4001911	     0xf8488020000	                            je 0x4001b9f	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x4001917	      0xe861e8ffff	                       call sym.make_abs	       828	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	CALL_31
0x400191c	      0xe97e020000	                           jmp 0x4001b9f	       832	ldexp.c	FUNCTION_21	SWITCH_1
0x4001921	    0x8b0500000000	            mov eax, dword [0x04001927] 	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x4001927	            0x85c0	                           test eax, eax	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x4001929	     0xf8473020000	                            je 0x4001ba2	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x400192f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x4001933	        0x488b4018	            mov rax, qword [rax + 0x18] 	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x4001937	      0xba00000000	                              mov edx, 0	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x400193c	      0xbe00000000	                              mov esi, 0	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x4001941	          0x4889c7	                            mov rdi, rax	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x4001944	      0xe800000000	                          call 0x4001949	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x4001949	        0x488945d8	             mov qword [rbp - 0x28], rax	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x400194d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       841	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26
0x4001952	            0x7546	                           jne 0x400199a	       841	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26
0x4001954	    0x8b0500000000	            mov eax, dword [0x0400195a] 	       843	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27
0x400195a	          0x83f804	                              cmp eax, 4	       843	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27
0x400195d	            0x752c	                           jne 0x400198b	       843	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27
0x400195f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001963	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001967	      0xbf00000000	                              mov edi, 0	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x400196c	      0xe800000000	                          call 0x4001971	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001971	          0x4889c1	                            mov rcx, rax	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001974	        0x488b4598	             mov rax, qword [rbp - 0x68]	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001978	          0x4889da	                            mov rdx, rbx	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x400197b	          0x4889c6	                            mov rsi, rax	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x400197e	          0x4889cf	                            mov rdi, rcx	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001981	      0xb800000000	                              mov eax, 0	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001986	      0xe800000000	                          call 0x400198b	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x400198b	      0xbf00000000	                              mov edi, 0	       847	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	CALL_35
0x4001990	      0xe8a8e9ffff	                     call sym.new_number	       847	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	CALL_35
0x4001995	      0xe908020000	                           jmp 0x4001ba2	       864	ldexp.c	FUNCTION_21	SWITCH_1
0x400199a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x400199e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x40019a2	          0x4885c0	                           test rax, rax	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x40019a5	            0x7468	                            je 0x4001a0f	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x40019a7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       853	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019ab	            0x8b00	                    mov eax, dword [rax]	       853	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019ad	      0x3d41010000	                          cmp eax, 0x141	       853	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019b2	            0x752e	                           jne 0x40019e2	       853	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019b8	        0x488b4038	            mov rax, qword [rax + 0x38] 	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019bc	        0x488b5838	            mov rbx, qword [rax + 0x38] 	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019c0	    0x488b05000000	            mov rax, qword [0x040019c7] 	       855	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_36
0x40019c7	          0x4889c7	                            mov rdi, rax	       855	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_36
0x40019ca	      0xe800000000	                          call 0x40019cf	       855	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_36
0x40019cf	            0x89c1	                            mov ecx, eax	       855	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_36
0x40019d1	          0x4889d8	                            mov rax, rbx	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019d4	      0xba00000000	                              mov edx, 0	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019d9	          0x48f7f1	                                 div rcx	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019dc	        0x488945a8	             mov qword [rbp - 0x58], rax	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019e0	            0xeb1c	                           jmp 0x40019fe	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x40019e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x40019e6	        0x488b4038	            mov rax, qword [rax + 0x38] 	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x40019ea	          0x8b4070	            mov eax, dword [rax + 0x70] 	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x40019ed	      0xba01000000	                              mov edx, 1	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x40019f2	            0x89c1	                            mov ecx, eax	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x40019f4	          0x48d3e2	                             shl rdx, cl	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x40019f7	          0x4889d0	                            mov rax, rdx	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x40019fa	        0x488945a8	             mov qword [rbp - 0x58], rax	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x40019fe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       859	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_37
0x4001a02	          0x4889c7	                            mov rdi, rax	       859	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_37
0x4001a05	      0xe833e9ffff	                     call sym.new_number	       859	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_37
0x4001a0a	      0xe993010000	                           jmp 0x4001ba2	       864	ldexp.c	FUNCTION_21	SWITCH_1
0x4001a0f	      0xbf00000000	                              mov edi, 0	       862	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_38
0x4001a14	      0xe824e9ffff	                     call sym.new_number	       862	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_38
0x4001a19	      0xe984010000	                           jmp 0x4001ba2	       864	ldexp.c	FUNCTION_21	SWITCH_1
0x4001a1e	    0x8b0500000000	            mov eax, dword [0x04001a24] 	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x4001a24	            0x85c0	                           test eax, eax	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x4001a26	     0xf8479010000	                            je 0x4001ba5	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x4001a2c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4001a30	        0x488b4018	            mov rax, qword [rax + 0x18] 	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4001a34	      0xbe00000000	                              mov esi, 0	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4001a39	          0x4889c7	                            mov rdi, rax	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4001a3c	      0xe800000000	                          call 0x4001a41	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4001a41	        0x488945e0	             mov qword [rbp - 0x20], rax	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4001a45	      0x48837de000	               cmp qword [rbp - 0x20], 0	       873	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	IF_31
0x4001a4a	            0x7415	                            je 0x4001a61	       873	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	IF_31
0x4001a4c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4001a50	        0x488b4028	            mov rax, qword [rax + 0x28] 	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4001a54	          0x4889c7	                            mov rdi, rax	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4001a57	      0xe8e1e8ffff	                     call sym.new_number	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4001a5c	      0xe944010000	                           jmp 0x4001ba5	       881	ldexp.c	FUNCTION_21	SWITCH_1
0x4001a61	        0x488b4598	             mov rax, qword [rbp - 0x68]	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a65	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a69	      0xbf00000000	                              mov edi, 0	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a6e	      0xe800000000	                          call 0x4001a73	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a73	          0x4889c1	                            mov rcx, rax	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a76	        0x488b4598	             mov rax, qword [rbp - 0x68]	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a7a	          0x4889da	                            mov rdx, rbx	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a7d	          0x4889c6	                            mov rsi, rax	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a80	          0x4889cf	                            mov rdi, rcx	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a83	      0xb800000000	                              mov eax, 0	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a88	      0xe800000000	                          call 0x4001a8d	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a8d	      0xe913010000	                           jmp 0x4001ba5	       881	ldexp.c	FUNCTION_21	SWITCH_1
0x4001a92	    0x8b0500000000	            mov eax, dword [0x04001a98] 	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x4001a98	            0x85c0	                           test eax, eax	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x4001a9a	     0xf8408010000	                            je 0x4001ba8	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x4001aa0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4001aa4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4001aa8	      0xbe00000000	                              mov esi, 0	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4001aad	          0x4889c7	                            mov rdi, rax	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4001ab0	      0xe800000000	                          call 0x4001ab5	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4001ab5	        0x488945e8	             mov qword [rbp - 0x18], rax	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4001ab9	      0x48837de800	               cmp qword [rbp - 0x18], 0	       889	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	IF_33
0x4001abe	            0x7415	                            je 0x4001ad5	       889	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	IF_33
0x4001ac0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       890	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_44
0x4001ac4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       890	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_44
0x4001ac8	          0x4889c7	                            mov rdi, rax	       890	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_44
0x4001acb	      0xe8dde8ffff	               call sym.new_rel_from_abs	       890	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_44
0x4001ad0	      0xe9d3000000	                           jmp 0x4001ba8	       896	ldexp.c	FUNCTION_21	SWITCH_1
0x4001ad5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001ad9	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001add	      0xbf00000000	                              mov edi, 0	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001ae2	      0xe800000000	                          call 0x4001ae7	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001ae7	          0x4889c1	                            mov rcx, rax	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001aea	        0x488b4598	             mov rax, qword [rbp - 0x68]	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001aee	          0x4889da	                            mov rdx, rbx	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001af1	          0x4889c6	                            mov rsi, rax	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001af4	          0x4889cf	                            mov rdi, rcx	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001af7	      0xb800000000	                              mov eax, 0	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001afc	      0xe800000000	                          call 0x4001b01	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001b01	      0xe9a2000000	                           jmp 0x4001ba8	       896	ldexp.c	FUNCTION_21	SWITCH_1
0x4001b06	        0x488b4598	             mov rax, qword [rbp - 0x68]	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b0a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b0e	      0xbe00000000	                              mov esi, 0	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b13	          0x4889c7	                            mov rdi, rax	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b16	      0xe800000000	                          call 0x4001b1b	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b1b	            0x85c0	                           test eax, eax	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b1d	            0x7511	                           jne 0x4001b30	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b1f	    0x488b05000000	            mov rax, qword [0x04001b26] 	       900	ldexp.c	FUNCTION_21	SWITCH_1	CALL_48
0x4001b26	          0x4889c7	                            mov rdi, rax	       900	ldexp.c	FUNCTION_21	SWITCH_1	CALL_48
0x4001b29	      0xe80fe8ffff	                     call sym.new_number	       900	ldexp.c	FUNCTION_21	SWITCH_1	CALL_48
0x4001b2e	            0xeb79	                           jmp 0x4001ba9	       906	ldexp.c	FUNCTION_21	SWITCH_1
0x4001b30	        0x488b4598	             mov rax, qword [rbp - 0x68]	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b34	        0x488b4018	            mov rax, qword [rax + 0x18] 	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b38	      0xbe00000000	                              mov esi, 0	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b3d	          0x4889c7	                            mov rdi, rax	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b40	      0xe800000000	                          call 0x4001b45	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b45	            0x85c0	                           test eax, eax	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b47	            0x7511	                           jne 0x4001b5a	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b49	    0x488b05000000	            mov rax, qword [0x04001b50] 	       902	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35
0x4001b50	          0x4889c7	                            mov rdi, rax	       902	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35
0x4001b53	      0xe8e5e7ffff	                     call sym.new_number	       902	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35
0x4001b58	            0xeb4f	                           jmp 0x4001ba9	       906	ldexp.c	FUNCTION_21	SWITCH_1
0x4001b5a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b5e	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b62	      0xbf00000000	                              mov edi, 0	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b67	      0xe800000000	                          call 0x4001b6c	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b6c	          0x4889c1	                            mov rcx, rax	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b6f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b73	          0x4889da	                            mov rdx, rbx	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b76	          0x4889c6	                            mov rsi, rax	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b79	          0x4889cf	                            mov rdi, rcx	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b7c	      0xb800000000	                              mov eax, 0	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b81	      0xe800000000	                          call 0x4001b86	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b86	            0xeb21	                           jmp 0x4001ba9	       906	ldexp.c	FUNCTION_21	SWITCH_1
0x4001b88	      0xbe8d030000	                          mov esi, 0x38d	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x4001b8d	      0xbf00000000	                              mov edi, 0	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x4001b92	      0xe800000000	                          call 0x4001b97	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x4001b97	            0xeb10	                           jmp 0x4001ba9	       910	ldexp.c	FUNCTION_21	SWITCH_1
0x4001b99	              0x90	                                     nop	       701	ldexp.c	FUNCTION_21	SWITCH_1
0x4001b9a	            0xeb0d	                           jmp 0x4001ba9	       701	ldexp.c	FUNCTION_21	SWITCH_1
0x4001b9c	              0x90	                                     nop	       805	ldexp.c	FUNCTION_21	SWITCH_1
0x4001b9d	            0xeb0a	                           jmp 0x4001ba9	       805	ldexp.c	FUNCTION_21	SWITCH_1
0x4001b9f	              0x90	                                     nop	       832	ldexp.c	FUNCTION_21	SWITCH_1
0x4001ba0	            0xeb07	                           jmp 0x4001ba9	       832	ldexp.c	FUNCTION_21	SWITCH_1
0x4001ba2	              0x90	                                     nop	       864	ldexp.c	FUNCTION_21	SWITCH_1
0x4001ba3	            0xeb04	                           jmp 0x4001ba9	       864	ldexp.c	FUNCTION_21	SWITCH_1
0x4001ba5	              0x90	                                     nop	       881	ldexp.c	FUNCTION_21	SWITCH_1
0x4001ba6	            0xeb01	                           jmp 0x4001ba9	       881	ldexp.c	FUNCTION_21	SWITCH_1
0x4001ba8	              0x90	                                     nop	       896	ldexp.c	FUNCTION_21	SWITCH_1
0x4001ba9	              0x90	                                     nop	       912	ldexp.c	FUNCTION_21
0x4001baa	        0x4883c468	                           add rsp, 0x68	       912	ldexp.c	FUNCTION_21
0x4001bae	              0x5b	                                 pop rbx	       912	ldexp.c	FUNCTION_21
0x4001baf	              0x5d	                                 pop rbp	       912	ldexp.c	FUNCTION_21
0x4001bb0	              0xc3	                                     ret	       912	ldexp.c	FUNCTION_21
fold_binary	DO,0:SWITCH,1:CALL,17:FOR,1:functions,0:WHILE,0:IF,13:ELSE,3	426
0x4000af9	              0x55	                                push rbp	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000afa	          0x4889e5	                            mov rbp, rsp	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000afd	              0x53	                                push rbx	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000afe	        0x4883ec58	                           sub rsp, 0x58	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000b02	        0x48897da8	             mov qword [rbp - 0x58], rdi	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000b06	    0x64488b042528	                mov rax, qword fs:[0x28]	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000b0f	        0x488945e8	             mov qword [rbp - 0x18], rax	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000b13	            0x31c0	                            xor eax, eax	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000b15	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       529	ldexp.c	ELSE_3	FUNCTION_19	CALL_1
0x4000b19	        0x488b4018	            mov rax, qword [rax + 0x18] 	       529	ldexp.c	ELSE_3	FUNCTION_19	CALL_1
0x4000b1d	          0x4889c7	                            mov rdi, rax	       529	ldexp.c	ELSE_3	FUNCTION_19	CALL_1
0x4000b20	      0xe84c130000	                call sym.exp_fold_tree_1	       529	ldexp.c	ELSE_3	FUNCTION_19	CALL_1
0x4000b25	    0x8b0500000000	            mov eax, dword [0x04000b2b] 	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b2b	            0x85c0	                           test eax, eax	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b2d	     0xf84dd000000	                            je 0x4000c10	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b33	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b37	            0x8b00	                    mov eax, dword [rax]	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b39	      0x3d31010000	                          cmp eax, 0x131	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b3e	     0xf85cc000000	                           jne 0x4000c10	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b44	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       542	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b48	        0x488b4020	            mov rax, qword [rax + 0x20] 	       542	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b4c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       542	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b50	        0x488945b8	             mov qword [rbp - 0x48], rax	       542	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b54	    0x488b05000000	            mov rax, qword [0x04000b5b] 	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b5b	        0x488945b0	             mov qword [rbp - 0x50], rax	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b5f	      0xe99c000000	                           jmp 0x4000c00	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b64	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b68	        0x488b4008	                mov rax, qword [rax + 8]	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b6c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b70	          0x4889d6	                            mov rsi, rdx	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b73	          0x4889c7	                            mov rdi, rax	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b76	      0xe800000000	                          call 0x4000b7b	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b7b	            0x85c0	                           test eax, eax	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b7d	            0x7576	                           jne 0x4000bf5	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b7f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b83	          0x8b4018	            mov eax, dword [rax + 0x18] 	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b86	            0x85c0	                           test eax, eax	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b88	            0x754a	                           jne 0x4000bd4	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b8a	    0x8b0500000000	            mov eax, dword [0x04000b90] 	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b90	            0x85c0	                           test eax, eax	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b92	            0x7440	                            je 0x4000bd4	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b94	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b98	        0x488b4010	            mov rax, qword [rax + 0x10] 	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b9c	    0x488b0d000000	            mov rcx, qword [0x04000ba3] 	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000ba3	      0xba00000000	                              mov edx, 0	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000ba8	          0x48f7f1	                                 div rcx	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000bab	          0x4889d0	                            mov rax, rdx	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000bae	          0x4885c0	                           test rax, rax	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000bb1	            0x7421	                            je 0x4000bd4	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000bb3	      0xbf00000000	                              mov edi, 0	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4000bb8	      0xe800000000	                          call 0x4000bbd	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4000bbd	          0x4889c2	                            mov rdx, rax	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4000bc0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4000bc4	          0x4889c6	                            mov rsi, rax	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4000bc7	          0x4889d7	                            mov rdi, rdx	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4000bca	      0xb800000000	                              mov eax, 0	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4000bcf	      0xe800000000	                          call 0x4000bd4	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4000bd4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       552	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2
0x4000bd8	    0xc74018010000	               mov dword [rax + 0x18], 1	       552	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2
0x4000bdf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       553	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_5
0x4000be3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       553	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_5
0x4000be7	          0x4889c7	                            mov rdi, rax	       553	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_5
0x4000bea	      0xe8bef7ffff	               call sym.new_rel_from_abs	       553	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_5
0x4000bef	              0x90	                                     nop	       554	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2
0x4000bf0	      0xe943060000	                           jmp 0x4001238	       556	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000bf5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000bf9	          0x488b00	                    mov rax, qword [rax]	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000bfc	        0x488945b0	             mov qword [rbp - 0x50], rax	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000c00	      0x48837db000	               cmp qword [rbp - 0x50], 0	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000c05	     0xf8559ffffff	                           jne 0x4000b64	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000c0b	      0xe928060000	                           jmp 0x4001238	       556	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000c10	    0x488b05000000	            mov rax, qword [0x04000c17] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000c17	        0x488945c0	             mov qword [rbp - 0x40], rax	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000c1b	    0x488b05000000	            mov rax, qword [0x04000c22] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000c22	        0x488945c8	             mov qword [rbp - 0x38], rax	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000c26	    0x488b05000000	            mov rax, qword [0x04000c2d] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000c2d	        0x488945d0	             mov qword [rbp - 0x30], rax	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000c31	    0x488b05000000	            mov rax, qword [0x04000c38] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000c38	        0x488945d8	             mov qword [rbp - 0x28], rax	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000c3c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x4000c40	        0x488b4020	            mov rax, qword [rax + 0x20] 	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x4000c44	          0x4889c7	                            mov rdi, rax	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x4000c47	      0xe825120000	                call sym.exp_fold_tree_1	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x4000c4c	    0x8b1500000000	            mov edx, dword [0x04000c52] 	       561	ldexp.c	ELSE_3	FUNCTION_19
0x4000c52	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       561	ldexp.c	ELSE_3	FUNCTION_19
0x4000c55	            0x21d0	                            and eax, edx	       561	ldexp.c	ELSE_3	FUNCTION_19
0x4000c57	    0x890500000000	            mov dword [0x04000c5d], eax 	       561	ldexp.c	ELSE_3	FUNCTION_19
0x4000c5d	    0x8b0500000000	            mov eax, dword [0x04000c63] 	       563	ldexp.c	ELSE_3	FUNCTION_19	IF_4
0x4000c63	            0x85c0	                           test eax, eax	       563	ldexp.c	ELSE_3	FUNCTION_19	IF_4
0x4000c65	     0xf84cd050000	                            je 0x4001238	       563	ldexp.c	ELSE_3	FUNCTION_19	IF_4
0x4000c6b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x4000c6f	    0x488b05000000	            mov rax, qword [0x04000c76] 	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x4000c76	          0x4839c2	                            cmp rdx, rax	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x4000c79	            0x7456	                            je 0x4000cd1	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x4000c7b	    0x488b05000000	            mov rax, qword [0x04000c82] 	       569	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000c82	          0x4885c0	                           test rax, rax	       569	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000c85	            0x742b	                            je 0x4000cb2	       569	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000c87	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000c8b	          0x4885c0	                           test rax, rax	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000c8e	            0x7422	                            je 0x4000cb2	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000c90	      0xe8e8f4ffff	                       call sym.make_abs	       572	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6	CALL_7
0x4000c95	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       573	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000c99	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       573	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000c9d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       573	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000ca1	          0x4801d0	                            add rax, rdx	       573	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000ca4	        0x488945c0	             mov qword [rbp - 0x40], rax	       573	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000ca8	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       574	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000cb0	            0xeb1f	                           jmp 0x4000cd1	       574	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000cb2	    0x488b05000000	            mov rax, qword [0x04000cb9] 	       578	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000cb9	          0x4885c0	                           test rax, rax	       578	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000cbc	            0x7513	                           jne 0x4000cd1	       578	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000cbe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       580	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000cc2	    0x488905000000	            mov qword [0x04000cc9], rax 	       580	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000cc9	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000cd1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cd5	            0x8b00	                    mov eax, dword [rax]	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cd7	      0x3d0e010000	                          cmp eax, 0x10e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cdc	     0xf846f030000	                            je 0x4001051	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ce2	      0x3d0e010000	                          cmp eax, 0x10e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ce7	     0xf8f88000000	                            jg 0x4000d75	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ced	          0x83f82f	                           cmp eax, 0x2f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cf0	     0xf843e040000	                            je 0x4001134	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cf6	          0x83f82f	                           cmp eax, 0x2f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cf9	            0x7f3c	                            jg 0x4000d37	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cfb	          0x83f82a	                           cmp eax, 0x2a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cfe	     0xf8439010000	                            je 0x4000e3d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d04	          0x83f82a	                           cmp eax, 0x2a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d07	            0x7f17	                            jg 0x4000d20	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d09	          0x83f825	                           cmp eax, 0x25	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d0c	     0xf84b3030000	                            je 0x40010c5	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d12	          0x83f826	                           cmp eax, 0x26	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d15	     0xf84c2010000	                            je 0x4000edd	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d1b	      0xe903050000	                           jmp 0x4001223	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d20	          0x83f82b	                           cmp eax, 0x2b	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d23	     0xf84ee000000	                            je 0x4000e17	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d29	          0x83f82d	                           cmp eax, 0x2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d2c	     0xf8432010000	                            je 0x4000e64	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d32	      0xe9ec040000	                           jmp 0x4001223	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d37	          0x83f85e	                           cmp eax, 0x5e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d3a	     0xf84c3010000	                            je 0x4000f03	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d40	          0x83f85e	                           cmp eax, 0x5e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d43	            0x7f17	                            jg 0x4000d5c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d45	          0x83f83c	                           cmp eax, 0x3c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d48	     0xf8457020000	                            je 0x4000fa5	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d4e	          0x83f83e	                           cmp eax, 0x3e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d51	     0xf8479020000	                            je 0x4000fd0	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d57	      0xe9c7040000	                           jmp 0x4001223	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d5c	          0x83f87c	                           cmp eax, 0x7c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d5f	     0xf84c4010000	                            je 0x4000f29	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d65	      0x3d0d010000	                          cmp eax, 0x10d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d6a	     0xf841b030000	                            je 0x400108b	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d70	      0xe9ae040000	                           jmp 0x4001223	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d75	      0x3d14010000	                          cmp eax, 0x114	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d7a	     0xf8435010000	                            je 0x4000eb5	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d80	      0x3d14010000	                          cmp eax, 0x114	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d85	            0x7f48	                            jg 0x4000dcf	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d87	      0x3d11010000	                          cmp eax, 0x111	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d8c	     0xf8469020000	                            je 0x4000ffb	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d92	      0x3d11010000	                          cmp eax, 0x111	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d97	            0x7f1b	                            jg 0x4000db4	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d99	      0x3d0f010000	                          cmp eax, 0x10f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d9e	     0xf84ab010000	                            je 0x4000f4f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000da4	      0x3d10010000	                          cmp eax, 0x110	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000da9	     0xf84cb010000	                            je 0x4000f7a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000daf	      0xe96f040000	                           jmp 0x4001223	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000db4	      0x3d12010000	                          cmp eax, 0x112	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000db9	     0xf8467020000	                            je 0x4001026	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000dbf	      0x3d13010000	                          cmp eax, 0x113	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000dc4	     0xf84c3000000	                            je 0x4000e8d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000dca	      0xe954040000	                           jmp 0x4001223	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000dcf	      0x3d25010000	                          cmp eax, 0x125	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000dd4	     0xf8436040000	                            je 0x4001210	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000dda	      0x3d25010000	                          cmp eax, 0x125	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ddf	            0x7f1b	                            jg 0x4000dfc	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000de1	      0x3d17010000	                          cmp eax, 0x117	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000de6	     0xf84f2030000	                            je 0x40011de	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000dec	      0x3d24010000	                          cmp eax, 0x124	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000df1	     0xf8406040000	                            je 0x40011fd	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000df7	      0xe927040000	                           jmp 0x4001223	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000dfc	      0x3d45010000	                          cmp eax, 0x145	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e01	     0xf8499030000	                            je 0x40011a0	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e07	      0x3d46010000	                          cmp eax, 0x146	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e0c	     0xf84af030000	                            je 0x40011c1	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e12	      0xe90c040000	                           jmp 0x4001223	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e17	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e1b	    0x488b05000000	            mov rax, qword [0x04000e22] 	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e22	          0x4801d0	                            add rax, rdx	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e25	    0x488905000000	            mov qword [0x04000e2c], rax 	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e2c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e30	          0x4889c7	                            mov rdi, rax	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e33	      0xe8abf9ffff	           call sym.arith_result_section	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e38	      0xe9fb030000	                           jmp 0x4001238	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e3d	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e41	    0x488b05000000	            mov rax, qword [0x04000e48] 	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e48	        0x480fafc2	                           imul rax, rdx	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e4c	    0x488905000000	            mov qword [0x04000e53], rax 	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e53	        0x488d45c0	                   lea rax, [rbp - 0x40]	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e57	          0x4889c7	                            mov rdi, rax	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e5a	      0xe884f9ffff	           call sym.arith_result_section	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e5f	      0xe9d4030000	                           jmp 0x4001238	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e64	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e68	    0x488b05000000	            mov rax, qword [0x04000e6f] 	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e6f	          0x4829c2	                            sub rdx, rax	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e72	          0x4889d0	                            mov rax, rdx	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e75	    0x488905000000	            mov qword [0x04000e7c], rax 	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e7c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e80	          0x4889c7	                            mov rdi, rax	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e83	      0xe85bf9ffff	           call sym.arith_result_section	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e88	      0xe9ab030000	                           jmp 0x4001238	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e8d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e91	    0x488b15000000	            mov rdx, qword [0x04000e98] 	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e98	            0x89d1	                            mov ecx, edx	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e9a	          0x48d3e0	                             shl rax, cl	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e9d	    0x488905000000	            mov qword [0x04000ea4], rax 	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ea4	        0x488d45c0	                   lea rax, [rbp - 0x40]	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ea8	          0x4889c7	                            mov rdi, rax	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000eab	      0xe833f9ffff	           call sym.arith_result_section	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000eb0	      0xe983030000	                           jmp 0x4001238	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000eb5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000eb9	    0x488b15000000	            mov rdx, qword [0x04000ec0] 	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ec0	            0x89d1	                            mov ecx, edx	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ec2	          0x48d3e8	                             shr rax, cl	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ec5	    0x488905000000	            mov qword [0x04000ecc], rax 	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ecc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ed0	          0x4889c7	                            mov rdi, rax	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ed3	      0xe80bf9ffff	           call sym.arith_result_section	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ed8	      0xe95b030000	                           jmp 0x4001238	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000edd	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ee1	    0x488b05000000	            mov rax, qword [0x04000ee8] 	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ee8	          0x4821d0	                            and rax, rdx	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000eeb	    0x488905000000	            mov qword [0x04000ef2], rax 	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ef2	        0x488d45c0	                   lea rax, [rbp - 0x40]	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ef6	          0x4889c7	                            mov rdi, rax	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ef9	      0xe8e5f8ffff	           call sym.arith_result_section	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000efe	      0xe935030000	                           jmp 0x4001238	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f03	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f07	    0x488b05000000	            mov rax, qword [0x04000f0e] 	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f0e	          0x4831d0	                            xor rax, rdx	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f11	    0x488905000000	            mov qword [0x04000f18], rax 	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f18	        0x488d45c0	                   lea rax, [rbp - 0x40]	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f1c	          0x4889c7	                            mov rdi, rax	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f1f	      0xe8bff8ffff	           call sym.arith_result_section	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f24	      0xe90f030000	                           jmp 0x4001238	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f29	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f2d	    0x488b05000000	            mov rax, qword [0x04000f34] 	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f34	          0x4809d0	                             or rax, rdx	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f37	    0x488905000000	            mov qword [0x04000f3e], rax 	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f3e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f42	          0x4889c7	                            mov rdi, rax	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f45	      0xe899f8ffff	           call sym.arith_result_section	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f4a	      0xe9e9020000	                           jmp 0x4001238	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f4f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f53	    0x488b05000000	            mov rax, qword [0x04000f5a] 	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f5a	          0x4839c2	                            cmp rdx, rax	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f5d	           0xf94c0	                                 sete al	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f60	           0xfb6c0	                           movzx eax, al	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f63	    0x488905000000	            mov qword [0x04000f6a], rax 	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f6a	    0x48c705000000	               mov qword [0x04000f75], 0	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f75	      0xe9be020000	                           jmp 0x4001238	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f7a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f7e	    0x488b05000000	            mov rax, qword [0x04000f85] 	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f85	          0x4839c2	                            cmp rdx, rax	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f88	           0xf95c0	                                setne al	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f8b	           0xfb6c0	                           movzx eax, al	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f8e	    0x488905000000	            mov qword [0x04000f95], rax 	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f95	    0x48c705000000	               mov qword [0x04000fa0], 0	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fa0	      0xe993020000	                           jmp 0x4001238	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fa5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fa9	    0x488b05000000	            mov rax, qword [0x04000fb0] 	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fb0	          0x4839c2	                            cmp rdx, rax	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fb3	           0xf92c0	                                 setb al	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fb6	           0xfb6c0	                           movzx eax, al	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fb9	    0x488905000000	            mov qword [0x04000fc0], rax 	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fc0	    0x48c705000000	               mov qword [0x04000fcb], 0	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fcb	      0xe968020000	                           jmp 0x4001238	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fd0	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fd4	    0x488b05000000	            mov rax, qword [0x04000fdb] 	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fdb	          0x4839c2	                            cmp rdx, rax	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fde	           0xf97c0	                                 seta al	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fe1	           0xfb6c0	                           movzx eax, al	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fe4	    0x488905000000	            mov qword [0x04000feb], rax 	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000feb	    0x48c705000000	               mov qword [0x04000ff6], 0	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ff6	      0xe93d020000	                           jmp 0x4001238	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ffb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fff	    0x488b05000000	            mov rax, qword [0x04001006] 	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001006	          0x4839c2	                            cmp rdx, rax	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001009	           0xf96c0	                                setbe al	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400100c	           0xfb6c0	                           movzx eax, al	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400100f	    0x488905000000	            mov qword [0x04001016], rax 	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001016	    0x48c705000000	               mov qword [0x04001021], 0	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001021	      0xe912020000	                           jmp 0x4001238	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001026	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400102a	    0x488b05000000	            mov rax, qword [0x04001031] 	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001031	          0x4839c2	                            cmp rdx, rax	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001034	           0xf93c0	                                setae al	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001037	           0xfb6c0	                           movzx eax, al	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400103a	    0x488905000000	            mov qword [0x04001041], rax 	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001041	    0x48c705000000	               mov qword [0x0400104c], 0	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400104c	      0xe9e7010000	                           jmp 0x4001238	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001051	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001055	          0x4885c0	                           test rax, rax	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001058	            0x7413	                            je 0x400106d	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400105a	    0x488b05000000	            mov rax, qword [0x04001061] 	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001061	          0x4885c0	                           test rax, rax	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001064	            0x7407	                            je 0x400106d	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001066	      0xb801000000	                              mov eax, 1	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400106b	            0xeb05	                           jmp 0x4001072	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400106d	      0xb800000000	                              mov eax, 0	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001072	            0x4898	                                    cdqe	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001074	    0x488905000000	            mov qword [0x0400107b], rax 	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400107b	    0x48c705000000	               mov qword [0x04001086], 0	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001086	      0xe9ad010000	                           jmp 0x4001238	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400108b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400108f	          0x4885c0	                           test rax, rax	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001092	            0x750c	                           jne 0x40010a0	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001094	    0x488b05000000	            mov rax, qword [0x0400109b] 	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400109b	          0x4885c0	                           test rax, rax	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400109e	            0x7407	                            je 0x40010a7	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40010a0	      0xb801000000	                              mov eax, 1	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40010a5	            0xeb05	                           jmp 0x40010ac	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40010a7	      0xb800000000	                              mov eax, 0	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40010ac	            0x4898	                                    cdqe	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40010ae	    0x488905000000	            mov qword [0x040010b5], rax 	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40010b5	    0x48c705000000	               mov qword [0x040010c0], 0	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40010c0	      0xe973010000	                           jmp 0x4001238	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40010c5	    0x488b05000000	            mov rax, qword [0x040010cc] 	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010cc	          0x4885c0	                           test rax, rax	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010cf	            0x7425	                            je 0x40010f6	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010d1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010d5	          0x4889c2	                            mov rdx, rax	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010d8	    0x488b05000000	            mov rax, qword [0x040010df] 	       625	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010df	          0x4889c1	                            mov rcx, rax	       625	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010e2	          0x4889d0	                            mov rax, rdx	       625	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010e5	            0x4899	                                     cqo	       625	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010e7	          0x48f7f9	                                idiv rcx	       625	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010ea	          0x4889d0	                            mov rax, rdx	       625	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010ed	    0x488905000000	            mov qword [0x040010f4], rax 	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010f4	            0xeb2d	                           jmp 0x4001123	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x40010f6	    0x8b0500000000	            mov eax, dword [0x040010fc] 	       626	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x40010fc	          0x83f801	                              cmp eax, 1	       626	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x40010ff	            0x7422	                            je 0x4001123	       626	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001101	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001105	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001109	      0xbf00000000	                              mov edi, 0	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x400110e	      0xe800000000	                          call 0x4001113	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001113	          0x4889de	                            mov rsi, rbx	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001116	          0x4889c7	                            mov rdi, rax	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001119	      0xb800000000	                              mov eax, 0	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x400111e	      0xe800000000	                          call 0x4001123	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001123	        0x488d45c0	                   lea rax, [rbp - 0x40]	       628	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	CALL_10
0x4001127	          0x4889c7	                            mov rdi, rax	       628	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	CALL_10
0x400112a	      0xe8b4f6ffff	           call sym.arith_result_section	       628	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	CALL_10
0x400112f	      0xe904010000	                           jmp 0x4001238	       629	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001134	    0x488b05000000	            mov rax, qword [0x0400113b] 	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x400113b	          0x4885c0	                           test rax, rax	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x400113e	            0x7422	                            je 0x4001162	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4001140	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4001144	          0x4889c2	                            mov rdx, rax	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4001147	    0x488b05000000	            mov rax, qword [0x0400114e] 	       634	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x400114e	          0x4889c1	                            mov rcx, rax	       634	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4001151	          0x4889d0	                            mov rax, rdx	       634	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4001154	            0x4899	                                     cqo	       634	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4001156	          0x48f7f9	                                idiv rcx	       634	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4001159	    0x488905000000	            mov qword [0x04001160], rax 	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4001160	            0xeb2d	                           jmp 0x400118f	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4001162	    0x8b0500000000	            mov eax, dword [0x04001168] 	       635	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	IF_11
0x4001168	          0x83f801	                              cmp eax, 1	       635	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	IF_11
0x400116b	            0x7422	                            je 0x400118f	       635	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	IF_11
0x400116d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001171	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001175	      0xbf00000000	                              mov edi, 0	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400117a	      0xe800000000	                          call 0x400117f	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400117f	          0x4889de	                            mov rsi, rbx	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001182	          0x4889c7	                            mov rdi, rax	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001185	      0xb800000000	                              mov eax, 0	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400118a	      0xe800000000	                          call 0x400118f	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400118f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       637	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_13
0x4001193	          0x4889c7	                            mov rdi, rax	       637	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_13
0x4001196	      0xe848f6ffff	           call sym.arith_result_section	       637	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_13
0x400119b	      0xe998000000	                           jmp 0x4001238	       638	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3
0x40011a0	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x40011a4	    0x488b05000000	            mov rax, qword [0x040011ab] 	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x40011ab	          0x4839c2	                            cmp rdx, rax	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x40011ae	     0xf8680000000	                           jbe 0x4001234	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x40011b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       642	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x40011b8	    0x488905000000	            mov qword [0x040011bf], rax 	       642	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x40011bf	            0xeb73	                           jmp 0x4001234	       643	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3
0x40011c1	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x40011c5	    0x488b05000000	            mov rax, qword [0x040011cc] 	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x40011cc	          0x4839c2	                            cmp rdx, rax	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x40011cf	            0x7366	                           jae 0x4001237	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x40011d1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       647	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x40011d5	    0x488905000000	            mov qword [0x040011dc], rax 	       647	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x40011dc	            0xeb59	                           jmp 0x4001237	       648	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3
0x40011de	    0x488b15000000	            mov rdx, qword [0x040011e5] 	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x40011e5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x40011e9	          0x4889d6	                            mov rsi, rdx	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x40011ec	          0x4889c7	                            mov rdi, rax	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x40011ef	      0xe8931f0000	                        call sym.align_n	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x40011f4	    0x488905000000	            mov qword [0x040011fb], rax 	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x40011fb	            0xeb3b	                           jmp 0x4001238	       652	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3
0x40011fd	        0x488d45c0	                   lea rax, [rbp - 0x40]	       655	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_15
0x4001201	          0x4889c6	                            mov rsi, rax	       655	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_15
0x4001204	      0xbf00000000	                              mov edi, 0	       655	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_15
0x4001209	      0xe825f6ffff	             call sym.fold_segment_align	       655	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_15
0x400120e	            0xeb28	                           jmp 0x4001238	       656	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3
0x4001210	        0x488d45c0	                   lea rax, [rbp - 0x40]	       659	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_16
0x4001214	          0x4889c6	                            mov rsi, rax	       659	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_16
0x4001217	      0xbf00000000	                              mov edi, 0	       659	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_16
0x400121c	      0xe877f7ffff	         call sym.fold_segment_relro_end	       659	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_16
0x4001221	            0xeb15	                           jmp 0x4001238	       660	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3
0x4001223	      0xbe97020000	                          mov esi, 0x297	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4001228	      0xbf00000000	                              mov edi, 0	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x400122d	      0xe800000000	                          call 0x4001232	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4001232	            0xeb04	                           jmp 0x4001238	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4001234	              0x90	                                     nop	       643	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3
0x4001235	            0xeb01	                           jmp 0x4001238	       643	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3
0x4001237	              0x90	                                     nop	       648	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3
0x4001238	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       666	ldexp.c	FUNCTION_19	ELSE_3
0x400123c	    0x644833042528	                xor rax, qword fs:[0x28]	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4001245	            0x7405	                            je 0x400124c	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4001247	      0xe800000000	                          call 0x400124c	       666	ldexp.c	FUNCTION_19	ELSE_3
0x400124c	        0x4883c458	                           add rsp, 0x58	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4001250	              0x5b	                                 pop rbx	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4001251	              0x5d	                                 pop rbp	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4001252	              0xc3	                                     ret	       666	ldexp.c	FUNCTION_19	ELSE_3
is_dot	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	27
0x4001bb1	              0x55	                                push rbp	       918	ldexp.c	FUNCTION_22
0x4001bb2	          0x4889e5	                            mov rbp, rsp	       918	ldexp.c	FUNCTION_22
0x4001bb5	        0x48897df8	                mov qword [rbp - 8], rdi	       918	ldexp.c	FUNCTION_22
0x4001bb9	        0x488b45f8	                mov rax, qword [rbp - 8]	       919	ldexp.c	FUNCTION_22
0x4001bbd	          0x8b4010	            mov eax, dword [rax + 0x10] 	       919	ldexp.c	FUNCTION_22
0x4001bc0	          0x83f803	                              cmp eax, 3	       922	ldexp.c	FUNCTION_22
0x4001bc3	            0x7536	                           jne 0x4001bfb	       922	ldexp.c	FUNCTION_22
0x4001bc5	        0x488b45f8	                mov rax, qword [rbp - 8]	       920	ldexp.c	FUNCTION_22
0x4001bc9	            0x8b00	                    mov eax, dword [rax]	       920	ldexp.c	FUNCTION_22
0x4001bcb	      0x3d03010000	                          cmp eax, 0x103	       920	ldexp.c	FUNCTION_22
0x4001bd0	            0x7529	                           jne 0x4001bfb	       920	ldexp.c	FUNCTION_22
0x4001bd2	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	ldexp.c	FUNCTION_22
0x4001bd6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       921	ldexp.c	FUNCTION_22
0x4001bda	           0xfb600	                   movzx eax, byte [rax]	       921	ldexp.c	FUNCTION_22
0x4001bdd	            0x3c2e	                            cmp al, 0x2e	       921	ldexp.c	FUNCTION_22
0x4001bdf	            0x751a	                           jne 0x4001bfb	       921	ldexp.c	FUNCTION_22
0x4001be1	        0x488b45f8	                mov rax, qword [rbp - 8]	       922	ldexp.c	FUNCTION_22
0x4001be5	        0x488b4018	            mov rax, qword [rax + 0x18] 	       922	ldexp.c	FUNCTION_22
0x4001be9	        0x4883c001	                              add rax, 1	       922	ldexp.c	FUNCTION_22
0x4001bed	           0xfb600	                   movzx eax, byte [rax]	       922	ldexp.c	FUNCTION_22
0x4001bf0	            0x84c0	                             test al, al	       922	ldexp.c	FUNCTION_22
0x4001bf2	            0x7507	                           jne 0x4001bfb	       922	ldexp.c	FUNCTION_22
0x4001bf4	      0xb801000000	                              mov eax, 1	       922	ldexp.c	FUNCTION_22
0x4001bf9	            0xeb05	                           jmp 0x4001c00	       922	ldexp.c	FUNCTION_22
0x4001bfb	      0xb800000000	                              mov eax, 0	       922	ldexp.c	FUNCTION_22
0x4001c00	              0x5d	                                 pop rbp	       923	ldexp.c	FUNCTION_22
0x4001c01	              0xc3	                                     ret	       923	ldexp.c	FUNCTION_22
fold_segment_end	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,3:ELSE,3	42
0x40005d1	              0x55	                                push rbp	       342	ldexp.c	FUNCTION_14
0x40005d2	          0x4889e5	                            mov rbp, rsp	       342	ldexp.c	FUNCTION_14
0x40005d5	        0x48897df8	                mov qword [rbp - 8], rdi	       342	ldexp.c	FUNCTION_14
0x40005d9	    0x8b0500000000	            mov eax, dword [0x040005df] 	       343	ldexp.c	FUNCTION_14	IF_1
0x40005df	            0x85c0	                           test eax, eax	       343	ldexp.c	FUNCTION_14	IF_1
0x40005e1	            0x740f	                            je 0x40005f2	       343	ldexp.c	FUNCTION_14	IF_1
0x40005e3	    0x488b05000000	            mov rax, qword [0x040005ea] 	       344	ldexp.c	FUNCTION_14	IF_1
0x40005ea	    0x483d00000000	                              cmp rax, 0	       344	ldexp.c	FUNCTION_14	IF_1
0x40005f0	            0x740c	                            je 0x40005fe	       344	ldexp.c	FUNCTION_14	IF_1
0x40005f2	    0xc70500000000	               mov dword [0x040005fc], 0	       346	ldexp.c	FUNCTION_14	IF_1
0x40005fc	            0xeb5e	                           jmp 0x400065c	       346	ldexp.c	FUNCTION_14	IF_1
0x40005fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4000602	            0x8b00	                    mov eax, dword [rax]	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4000604	          0x83f801	                              cmp eax, 1	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4000607	            0x740b	                            je 0x4000614	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4000609	        0x488b45f8	                mov rax, qword [rbp - 8]	       349	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400060d	            0x8b00	                    mov eax, dword [rax]	       349	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400060f	          0x83f802	                              cmp eax, 2	       349	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4000612	            0x751b	                           jne 0x400062f	       349	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4000614	        0x488b45f8	                mov rax, qword [rbp - 8]	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4000618	    0xc70003000000	                      mov dword [rax], 3	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400061e	    0x488b15000000	            mov rdx, qword [0x04000625] 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4000625	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4000629	        0x48895020	             mov qword [rax + 0x20], rdx	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400062d	            0xeb2d	                           jmp 0x400065c	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400062f	        0x488b45f8	                mov rax, qword [rbp - 8]	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4000633	            0x8b00	                    mov eax, dword [rax]	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4000635	          0x83f806	                              cmp eax, 6	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4000638	            0x7422	                            je 0x400065c	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x400063a	        0x488b45f8	                mov rax, qword [rbp - 8]	       355	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x400063e	            0x8b00	                    mov eax, dword [rax]	       355	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4000640	          0x83f805	                              cmp eax, 5	       355	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4000643	            0x7417	                            je 0x400065c	       355	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4000645	        0x488b45f8	                mov rax, qword [rbp - 8]	       356	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4000649	            0x8b00	                    mov eax, dword [rax]	       356	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x400064b	          0x83f804	                              cmp eax, 4	       356	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x400064e	            0x740c	                            je 0x400065c	       356	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4000650	    0xc70500000000	               mov dword [0x0400065a], 0	       361	ldexp.c	FUNCTION_14	ELSE_3
0x400065a	            0xeb00	                           jmp 0x400065c	       362	ldexp.c	FUNCTION_14	ELSE_3
0x400065c	              0x90	                                     nop	       362	ldexp.c	FUNCTION_14	ELSE_3
0x400065d	              0x5d	                                 pop rbp	       362	ldexp.c	FUNCTION_14	ELSE_3
0x400065e	              0xc3	                                     ret	       362	ldexp.c	FUNCTION_14	ELSE_3
exp_defsym	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	13
0x400294c	              0x55	                                push rbp	      1371	ldexp.c	FUNCTION_38
0x400294d	          0x4889e5	                            mov rbp, rsp	      1371	ldexp.c	FUNCTION_38
0x4002950	        0x4883ec10	                           sub rsp, 0x10	      1371	ldexp.c	FUNCTION_38
0x4002954	        0x48897df8	                mov qword [rbp - 8], rdi	      1371	ldexp.c	FUNCTION_38
0x4002958	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1371	ldexp.c	FUNCTION_38
0x400295c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1372	ldexp.c	FUNCTION_38	CALL_1
0x4002960	        0x488b45f8	                mov rax, qword [rbp - 8]	      1372	ldexp.c	FUNCTION_38	CALL_1
0x4002964	      0xb900000000	                              mov ecx, 0	      1372	ldexp.c	FUNCTION_38	CALL_1
0x4002969	      0xba04000000	                              mov edx, 4	      1372	ldexp.c	FUNCTION_38	CALL_1
0x400296e	          0x4889c7	                            mov rdi, rax	      1372	ldexp.c	FUNCTION_38	CALL_1
0x4002971	      0xe829ffffff	                      call sym.exp_assop	      1372	ldexp.c	FUNCTION_38	CALL_1
0x4002976	              0xc9	                                   leave	      1373	ldexp.c	FUNCTION_38
0x4002977	              0xc3	                                     ret	      1373	ldexp.c	FUNCTION_38
is_dot_ne_0	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	30
0x4001d1d	              0x55	                                push rbp	       961	ldexp.c	FUNCTION_25
0x4001d1e	          0x4889e5	                            mov rbp, rsp	       961	ldexp.c	FUNCTION_25
0x4001d21	        0x4883ec08	                              sub rsp, 8	       961	ldexp.c	FUNCTION_25
0x4001d25	        0x48897df8	                mov qword [rbp - 8], rdi	       961	ldexp.c	FUNCTION_25
0x4001d29	        0x488b45f8	                mov rax, qword [rbp - 8]	       962	ldexp.c	FUNCTION_25
0x4001d2d	          0x8b4010	            mov eax, dword [rax + 0x10] 	       962	ldexp.c	FUNCTION_25
0x4001d30	            0x85c0	                           test eax, eax	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d32	            0x7541	                           jne 0x4001d75	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d34	        0x488b45f8	                mov rax, qword [rbp - 8]	       963	ldexp.c	FUNCTION_25
0x4001d38	            0x8b00	                    mov eax, dword [rax]	       963	ldexp.c	FUNCTION_25
0x4001d3a	      0x3d10010000	                          cmp eax, 0x110	       963	ldexp.c	FUNCTION_25
0x4001d3f	            0x7534	                           jne 0x4001d75	       963	ldexp.c	FUNCTION_25
0x4001d41	        0x488b45f8	                mov rax, qword [rbp - 8]	       964	ldexp.c	FUNCTION_25	CALL_1
0x4001d45	        0x488b4018	            mov rax, qword [rax + 0x18] 	       964	ldexp.c	FUNCTION_25	CALL_1
0x4001d49	          0x4889c7	                            mov rdi, rax	       964	ldexp.c	FUNCTION_25	CALL_1
0x4001d4c	      0xe860feffff	                         call sym.is_dot	       964	ldexp.c	FUNCTION_25	CALL_1
0x4001d51	            0x85c0	                           test eax, eax	       964	ldexp.c	FUNCTION_25	CALL_1
0x4001d53	            0x7420	                            je 0x4001d75	       964	ldexp.c	FUNCTION_25	CALL_1
0x4001d55	        0x488b45f8	                mov rax, qword [rbp - 8]	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d59	        0x488b4020	            mov rax, qword [rax + 0x20] 	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d5d	      0xbe00000000	                              mov esi, 0	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d62	          0x4889c7	                            mov rdi, rax	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d65	      0xe898feffff	                       call sym.is_value	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d6a	            0x85c0	                           test eax, eax	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d6c	            0x7407	                            je 0x4001d75	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d6e	      0xb801000000	                              mov eax, 1	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d73	            0xeb05	                           jmp 0x4001d7a	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d75	      0xb800000000	                              mov eax, 0	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001d7a	              0xc9	                                   leave	       966	ldexp.c	FUNCTION_25
0x4001d7b	              0xc3	                                     ret	       966	ldexp.c	FUNCTION_25
fold_segment_relro_end	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,5:ELSE,3	96
0x4000998	              0x55	                                push rbp	       491	ldexp.c	ELSE_5	FUNCTION_18
0x4000999	          0x4889e5	                            mov rbp, rsp	       491	ldexp.c	ELSE_5	FUNCTION_18
0x400099c	        0x48897df8	                mov qword [rbp - 8], rdi	       491	ldexp.c	ELSE_5	FUNCTION_18
0x40009a0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       491	ldexp.c	ELSE_5	FUNCTION_18
0x40009a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       494	ldexp.c	ELSE_5	FUNCTION_18
0x40009a8	    0xc74038020000	               mov dword [rax + 0x38], 2	       494	ldexp.c	ELSE_5	FUNCTION_18
0x40009af	    0x488b15000000	            mov rdx, qword [0x040009b6] 	       495	ldexp.c	ELSE_5	FUNCTION_18
0x40009b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       495	ldexp.c	ELSE_5	FUNCTION_18
0x40009ba	        0x48895010	             mov qword [rax + 0x10], rdx	       495	ldexp.c	ELSE_5	FUNCTION_18
0x40009be	    0x8b0500000000	            mov eax, dword [0x040009c4] 	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x40009c4	            0x85c0	                           test eax, eax	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x40009c6	            0x740f	                            je 0x40009d7	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x40009c8	    0x488b05000000	            mov rax, qword [0x040009cf] 	       497	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x40009cf	    0x483d00000000	                              cmp rax, 0	       497	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x40009d5	            0x740f	                            je 0x40009e6	       497	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x40009d7	    0xc70500000000	               mov dword [0x040009e1], 0	       498	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x40009e1	      0xe910010000	                           jmp 0x4000af6	       498	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x40009e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       499	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x40009ea	            0x8b00	                    mov eax, dword [rax]	       499	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x40009ec	          0x83f801	                              cmp eax, 1	       499	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x40009ef	            0x7425	                            je 0x4000a16	       499	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x40009f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       500	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x40009f5	            0x8b00	                    mov eax, dword [rax]	       500	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x40009f7	          0x83f805	                              cmp eax, 5	       500	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x40009fa	            0x741a	                            je 0x4000a16	       500	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x40009fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       501	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000a00	            0x8b00	                    mov eax, dword [rax]	       501	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000a02	          0x83f804	                              cmp eax, 4	       501	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000a05	            0x740f	                            je 0x4000a16	       501	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000a07	        0x488b45f8	                mov rax, qword [rbp - 8]	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000a0b	            0x8b00	                    mov eax, dword [rax]	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000a0d	          0x83f806	                              cmp eax, 6	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000a10	     0xf85d6000000	                           jne 0x4000aec	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000a16	        0x488b45f8	                mov rax, qword [rbp - 8]	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a1a	            0x8b00	                    mov eax, dword [rax]	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a1c	          0x83f801	                              cmp eax, 1	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a1f	            0x740b	                            je 0x4000a2c	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a21	        0x488b45f8	                mov rax, qword [rbp - 8]	       505	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a25	            0x8b00	                    mov eax, dword [rax]	       505	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a27	          0x83f804	                              cmp eax, 4	       505	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a2a	            0x7519	                           jne 0x4000a45	       505	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a30	          0x488b10	                    mov rdx, qword [rax]	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a33	    0x488b05000000	            mov rax, qword [0x04000a3a] 	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a3a	          0x4801c2	                            add rdx, rax	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a3d	        0x488b45f8	                mov rax, qword [rbp - 8]	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a41	        0x48895018	             mov qword [rax + 0x18], rdx	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000a45	        0x488b45f8	                mov rax, qword [rbp - 8]	       508	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a49	            0x8b00	                    mov eax, dword [rax]	       508	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a4b	          0x83f804	                              cmp eax, 4	       508	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a4e	            0x7577	                           jne 0x4000ac7	       508	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a50	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a54	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a58	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a5c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a60	        0x4883e801	                              sub rax, 1	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a64	          0x4821d0	                            and rax, rdx	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a67	          0x4885c0	                           test rax, rax	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a6a	            0x745b	                            je 0x4000ac7	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       511	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a70	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       511	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a74	        0x488b45f8	                mov rax, qword [rbp - 8]	       511	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a78	        0x488b4028	            mov rax, qword [rax + 0x28] 	       511	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a7c	          0x4801d0	                            add rax, rdx	       511	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a7f	        0x488d50ff	                      lea rdx, [rax - 1]	       511	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a83	        0x488b45f8	                mov rax, qword [rbp - 8]	       511	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a87	        0x48895018	             mov qword [rax + 0x18], rdx	       511	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a8f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a93	        0x488b45f8	                mov rax, qword [rbp - 8]	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a97	        0x488b4028	            mov rax, qword [rax + 0x28] 	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a9b	          0x48f7d8	                                 neg rax	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000a9e	          0x4821c2	                            and rdx, rax	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000aa1	        0x488b45f8	                mov rax, qword [rbp - 8]	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000aa5	        0x48895018	             mov qword [rax + 0x18], rdx	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000aa9	        0x488b45f8	                mov rax, qword [rbp - 8]	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000aad	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000ab1	    0x488b05000000	            mov rax, qword [0x04000ab8] 	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000ab8	          0x4829c2	                            sub rdx, rax	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000abb	          0x4889d0	                            mov rax, rdx	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000abe	    0x488905000000	            mov qword [0x04000ac5], rax 	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000ac5	            0xeb0e	                           jmp 0x4000ad5	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000ac7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       516	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	ELSE_2
0x4000acb	          0x488b00	                    mov rax, qword [rax]	       516	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	ELSE_2
0x4000ace	    0x488905000000	            mov qword [0x04000ad5], rax 	       516	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	ELSE_2
0x4000ad5	        0x488b45f8	                mov rax, qword [rbp - 8]	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000ad9	            0x8b00	                    mov eax, dword [rax]	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000adb	          0x83f801	                              cmp eax, 1	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000ade	            0x7516	                           jne 0x4000af6	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000ae0	        0x488b45f8	                mov rax, qword [rbp - 8]	       519	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000ae4	    0xc70002000000	                      mov dword [rax], 2	       519	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000aea	            0xeb0a	                           jmp 0x4000af6	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000aec	    0xc70500000000	               mov dword [0x04000af6], 0	       522	ldexp.c	ELSE_5	FUNCTION_18	ELSE_3
0x4000af6	              0x90	                                     nop	       523	ldexp.c	ELSE_5	FUNCTION_18	ELSE_3
0x4000af7	              0x5d	                                 pop rbp	       523	ldexp.c	ELSE_5	FUNCTION_18	ELSE_3
0x4000af8	              0xc3	                                     ret	       523	ldexp.c	ELSE_5	FUNCTION_18	ELSE_3
new_rel_from_abs	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	19
0x40003ad	              0x55	                                push rbp	       259	ldexp.c	FUNCTION_10
0x40003ae	          0x4889e5	                            mov rbp, rsp	       259	ldexp.c	FUNCTION_10
0x40003b1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       259	ldexp.c	FUNCTION_10
0x40003b5	    0x488b05000000	            mov rax, qword [0x040003bc] 	       260	ldexp.c	FUNCTION_10
0x40003bc	        0x488945f8	                mov qword [rbp - 8], rax	       260	ldexp.c	FUNCTION_10
0x40003c0	    0xc70500000000	               mov dword [0x040003ca], 1	       262	ldexp.c	FUNCTION_10
0x40003ca	    0xc70500000000	               mov dword [0x040003d4], 1	       263	ldexp.c	FUNCTION_10
0x40003d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       264	ldexp.c	FUNCTION_10
0x40003d8	        0x488b4028	            mov rax, qword [rax + 0x28] 	       264	ldexp.c	FUNCTION_10
0x40003dc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       264	ldexp.c	FUNCTION_10
0x40003e0	          0x4829c2	                            sub rdx, rax	       264	ldexp.c	FUNCTION_10
0x40003e3	          0x4889d0	                            mov rax, rdx	       264	ldexp.c	FUNCTION_10
0x40003e6	    0x488905000000	            mov qword [0x040003ed], rax 	       264	ldexp.c	FUNCTION_10
0x40003ed	    0x48c705000000	               mov qword [0x040003f8], 0	       265	ldexp.c	FUNCTION_10
0x40003f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	ldexp.c	FUNCTION_10
0x40003fc	    0x488905000000	            mov qword [0x04000403], rax 	       266	ldexp.c	FUNCTION_10
0x4000403	              0x90	                                     nop	       267	ldexp.c	FUNCTION_10
0x4000404	              0x5d	                                 pop rbp	       267	ldexp.c	FUNCTION_10
0x4000405	              0xc3	                                     ret	       267	ldexp.c	FUNCTION_10
exp_nameop	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	26
0x400283f	              0x55	                                push rbp	      1328	ldexp.c	FUNCTION_35
0x4002840	          0x4889e5	                            mov rbp, rsp	      1328	ldexp.c	FUNCTION_35
0x4002843	        0x4883ec20	                           sub rsp, 0x20	      1328	ldexp.c	FUNCTION_35
0x4002847	          0x897dec	             mov dword [rbp - 0x14], edi	      1328	ldexp.c	FUNCTION_35
0x400284a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1328	ldexp.c	FUNCTION_35
0x400284e	      0xbf20000000	                           mov edi, 0x20	      1329	ldexp.c	FUNCTION_35	CALL_1
0x4002853	      0xe800000000	                          call 0x4002858	      1329	ldexp.c	FUNCTION_35	CALL_1
0x4002858	        0x488945f8	                mov qword [rbp - 8], rax	      1329	ldexp.c	FUNCTION_35	CALL_1
0x400285c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1331	ldexp.c	FUNCTION_35
0x4002860	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1331	ldexp.c	FUNCTION_35
0x4002863	            0x8910	                    mov dword [rax], edx	      1331	ldexp.c	FUNCTION_35
0x4002865	      0xe800000000	                          call 0x400286a	      1332	ldexp.c	FUNCTION_35	CALL_2
0x400286a	          0x4889c2	                            mov rdx, rax	      1332	ldexp.c	FUNCTION_35	CALL_2
0x400286d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1332	ldexp.c	FUNCTION_35	CALL_2
0x4002871	        0x48895008	                mov qword [rax + 8], rdx	      1332	ldexp.c	FUNCTION_35	CALL_2
0x4002875	    0x8b1500000000	            mov edx, dword [0x0400287b] 	      1333	ldexp.c	FUNCTION_35
0x400287b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1333	ldexp.c	FUNCTION_35
0x400287f	          0x895004	                mov dword [rax + 4], edx	      1333	ldexp.c	FUNCTION_35
0x4002882	        0x488b45f8	                mov rax, qword [rbp - 8]	      1334	ldexp.c	FUNCTION_35
0x4002886	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1334	ldexp.c	FUNCTION_35
0x400288a	        0x48895018	             mov qword [rax + 0x18], rdx	      1334	ldexp.c	FUNCTION_35
0x400288e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1335	ldexp.c	FUNCTION_35
0x4002892	    0xc74010030000	               mov dword [rax + 0x10], 3	      1335	ldexp.c	FUNCTION_35
0x4002899	        0x488b45f8	                mov rax, qword [rbp - 8]	      1336	ldexp.c	FUNCTION_35
0x400289d	              0xc9	                                   leave	      1338	ldexp.c	FUNCTION_35
0x400289e	              0xc3	                                     ret	      1338	ldexp.c	FUNCTION_35
exp_print_token	DO,0:SWITCH,0:CALL,7:FOR,1:functions,0:WHILE,0:IF,5:ELSE,2	58
0x4000040	              0x55	                                push rbp	        78	ldexp.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        78	ldexp.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	        78	ldexp.c	FUNCTION_1
0x4000048	          0x897dec	             mov dword [rbp - 0x14], edi	        78	ldexp.c	FUNCTION_1
0x400004b	          0x8975e8	             mov dword [rbp - 0x18], esi	        78	ldexp.c	FUNCTION_1
0x400004e	    0xc745fc000000	                  mov dword [rbp - 4], 0	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4000055	            0xeb18	                           jmp 0x400006f	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4000057	          0x8b45fc	                mov eax, dword [rbp - 4]	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400005a	        0x48c1e004	                              shl rax, 4	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400005e	    0x480500000000	                              add rax, 0	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4000064	            0x8b00	                    mov eax, dword [rax]	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4000066	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4000069	            0x740c	                            je 0x4000077	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400006b	        0x8345fc01	                  add dword [rbp - 4], 1	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x400006f	        0x837dfc32	               cmp dword [rbp - 4], 0x32	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4000073	            0x76e2	                           jbe 0x4000057	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4000075	            0xeb01	                           jmp 0x4000078	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4000077	              0x90	                                     nop	       142	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4000078	        0x837de800	               cmp dword [rbp - 0x18], 0	       144	ldexp.c	FUNCTION_1	IF_2
0x400007c	            0x7414	                            je 0x4000092	       144	ldexp.c	FUNCTION_1	IF_2
0x400007e	    0x488b05000000	            mov rax, qword [0x04000085] 	       145	ldexp.c	FUNCTION_1	CALL_2
0x4000085	          0x4889c6	                            mov rsi, rax	       145	ldexp.c	FUNCTION_1	CALL_2
0x4000088	      0xbf20000000	                           mov edi, 0x20	       145	ldexp.c	FUNCTION_1	CALL_2
0x400008d	      0xe800000000	                          call 0x4000092	       145	ldexp.c	FUNCTION_1	CALL_2
0x4000092	        0x837dfc32	               cmp dword [rbp - 4], 0x32	       147	ldexp.c	FUNCTION_1	IF_3	CALL_3
0x4000096	            0x7724	                            ja 0x40000bc	       147	ldexp.c	FUNCTION_1	IF_3	CALL_3
0x4000098	    0x488b15000000	            mov rdx, qword [0x0400009f] 	       148	ldexp.c	FUNCTION_1	CALL_4
0x400009f	          0x8b45fc	                mov eax, dword [rbp - 4]	       148	ldexp.c	FUNCTION_1	CALL_4
0x40000a2	        0x48c1e004	                              shl rax, 4	       148	ldexp.c	FUNCTION_1	CALL_4
0x40000a6	    0x480500000000	                              add rax, 0	       148	ldexp.c	FUNCTION_1	CALL_4
0x40000ac	          0x488b00	                    mov rax, qword [rax]	       148	ldexp.c	FUNCTION_1	CALL_4
0x40000af	          0x4889d6	                            mov rsi, rdx	       148	ldexp.c	FUNCTION_1	CALL_4
0x40000b2	          0x4889c7	                            mov rdi, rax	       148	ldexp.c	FUNCTION_1	CALL_4
0x40000b5	      0xe800000000	                          call 0x40000ba	       148	ldexp.c	FUNCTION_1	CALL_4
0x40000ba	            0xeb38	                           jmp 0x40000f4	       148	ldexp.c	FUNCTION_1	CALL_4
0x40000bc	        0x837dec7e	           cmp dword [rbp - 0x14], 0x7e 	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40000c0	            0x7f16	                            jg 0x40000d8	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40000c2	    0x488b15000000	            mov rdx, qword [0x040000c9] 	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40000c9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40000cc	          0x4889d6	                            mov rsi, rdx	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40000cf	            0x89c7	                            mov edi, eax	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40000d1	      0xe800000000	                          call 0x40000d6	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40000d6	            0xeb1c	                           jmp 0x40000f4	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40000d8	    0x488b05000000	            mov rax, qword [0x040000df] 	       152	ldexp.c	FUNCTION_1	CALL_6
0x40000df	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       152	ldexp.c	FUNCTION_1	CALL_6
0x40000e2	      0xbe00000000	                              mov esi, 0	       152	ldexp.c	FUNCTION_1	CALL_6
0x40000e7	          0x4889c7	                            mov rdi, rax	       152	ldexp.c	FUNCTION_1	CALL_6
0x40000ea	      0xb800000000	                              mov eax, 0	       152	ldexp.c	FUNCTION_1	CALL_6
0x40000ef	      0xe800000000	                          call 0x40000f4	       152	ldexp.c	FUNCTION_1	CALL_6
0x40000f4	        0x837de800	               cmp dword [rbp - 0x18], 0	       154	ldexp.c	FUNCTION_1	IF_5
0x40000f8	            0x7414	                            je 0x400010e	       154	ldexp.c	FUNCTION_1	IF_5
0x40000fa	    0x488b05000000	            mov rax, qword [0x04000101] 	       155	ldexp.c	FUNCTION_1	CALL_7
0x4000101	          0x4889c6	                            mov rsi, rax	       155	ldexp.c	FUNCTION_1	CALL_7
0x4000104	      0xbf20000000	                           mov edi, 0x20	       155	ldexp.c	FUNCTION_1	CALL_7
0x4000109	      0xe800000000	                          call 0x400010e	       155	ldexp.c	FUNCTION_1	CALL_7
0x400010e	              0x90	                                     nop	       156	ldexp.c	FUNCTION_1
0x400010f	              0xc9	                                   leave	       156	ldexp.c	FUNCTION_1
0x4000110	              0xc3	                                     ret	       156	ldexp.c	FUNCTION_1
exp_fold_tree_1	DO,0:SWITCH,1:CALL,35:FOR,0:functions,0:WHILE,0:IF,26:ELSE,8	415
0x4001e71	              0x55	                                push rbp	       999	ldexp.c	FUNCTION_28
0x4001e72	          0x4889e5	                            mov rbp, rsp	       999	ldexp.c	FUNCTION_28
0x4001e75	              0x53	                                push rbx	       999	ldexp.c	FUNCTION_28
0x4001e76	        0x4883ec38	                           sub rsp, 0x38	       999	ldexp.c	FUNCTION_28
0x4001e7a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       999	ldexp.c	FUNCTION_28
0x4001e7e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1000	ldexp.c	FUNCTION_28	IF_1
0x4001e83	            0x7519	                           jne 0x4001e9e	      1000	ldexp.c	FUNCTION_28	IF_1
0x4001e85	      0xba20000000	                           mov edx, 0x20	      1002	ldexp.c	FUNCTION_28	IF_1	CALL_1
0x4001e8a	      0xbe00000000	                              mov esi, 0	      1002	ldexp.c	FUNCTION_28	IF_1	CALL_1
0x4001e8f	      0xbf00000000	                              mov edi, 0	      1002	ldexp.c	FUNCTION_28	IF_1	CALL_1
0x4001e94	      0xe800000000	                          call 0x4001e99	      1002	ldexp.c	FUNCTION_28	IF_1	CALL_1
0x4001e99	      0xe9b0060000	                           jmp 0x400254e	      1003	ldexp.c	FUNCTION_28	IF_1
0x4001e9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4001ea2	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4001ea5	          0x83f809	                              cmp eax, 9	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4001ea8	     0xf8779060000	                            ja 0x4002527	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4001eae	            0x89c0	                            mov eax, eax	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4001eb0	    0x488b04c50000	                  mov rax, qword [rax*8]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4001eb8	            0xffe0	                                 jmp rax	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4001eba	    0x488b05000000	            mov rax, qword [0x04001ec1] 	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4001ec1	    0x483d00000000	                              cmp rax, 0	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4001ec7	            0x751c	                           jne 0x4001ee5	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4001ec9	    0x8b0500000000	            mov eax, dword [0x04001ecf] 	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4001ecf	            0x85c0	                           test eax, eax	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4001ed1	            0x7512	                           jne 0x4001ee5	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4001ed3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x4001ed7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x4001edb	          0x4889c7	                            mov rdi, rax	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x4001ede	      0xe8dee2ffff	                        call sym.new_abs	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x4001ee3	            0xeb10	                           jmp 0x4001ef5	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x4001ee5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1013	ldexp.c	FUNCTION_28	SWITCH_1	CALL_3
0x4001ee9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1013	ldexp.c	FUNCTION_28	SWITCH_1	CALL_3
0x4001eed	          0x4889c7	                            mov rdi, rax	      1013	ldexp.c	FUNCTION_28	SWITCH_1	CALL_3
0x4001ef0	      0xe848e4ffff	                     call sym.new_number	      1013	ldexp.c	FUNCTION_28	SWITCH_1	CALL_3
0x4001ef5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4001ef9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4001efd	    0x488905000000	            mov qword [0x04001f04], rax 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4001f04	      0xe945060000	                           jmp 0x400254e	      1015	ldexp.c	FUNCTION_28	SWITCH_1
0x4001f09	    0x8b0500000000	            mov eax, dword [0x04001f0f] 	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4001f0f	            0x85c0	                           test eax, eax	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4001f11	            0x743b	                            je 0x4001f4e	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4001f13	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4001f17	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4001f1b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4001f1f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4001f23	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4001f27	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4001f2b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4001f2f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4001f33	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4001f37	          0x4801c2	                            add rdx, rax	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4001f3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4001f3e	          0x4889c6	                            mov rsi, rax	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4001f41	          0x4889d7	                            mov rdi, rdx	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4001f44	      0xe82ae4ffff	                        call sym.new_rel	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4001f49	      0xe900060000	                           jmp 0x400254e	      1026	ldexp.c	FUNCTION_28	SWITCH_1
0x4001f4e	      0xba20000000	                           mov edx, 0x20	      1025	ldexp.c	FUNCTION_28	SWITCH_1	CALL_5
0x4001f53	      0xbe00000000	                              mov esi, 0	      1025	ldexp.c	FUNCTION_28	SWITCH_1	CALL_5
0x4001f58	      0xbf00000000	                              mov edi, 0	      1025	ldexp.c	FUNCTION_28	SWITCH_1	CALL_5
0x4001f5d	      0xe800000000	                          call 0x4001f62	      1025	ldexp.c	FUNCTION_28	SWITCH_1	CALL_5
0x4001f62	      0xe9e7050000	                           jmp 0x400254e	      1026	ldexp.c	FUNCTION_28	SWITCH_1
0x4001f67	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4001f6b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4001f6f	          0x4889c7	                            mov rdi, rax	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4001f72	      0xe8fafeffff	                call sym.exp_fold_tree_1	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4001f77	    0x8b0500000000	            mov eax, dword [0x04001f7d] 	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4001f7d	          0x83f804	                              cmp eax, 4	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4001f80	     0xf85c7050000	                           jne 0x400254d	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4001f86	    0x488b05000000	            mov rax, qword [0x04001f8d] 	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4001f8d	          0x4885c0	                           test rax, rax	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4001f90	     0xf85b7050000	                           jne 0x400254d	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4001f96	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4001f9a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4001f9e	          0x4889c6	                            mov rsi, rax	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4001fa1	      0xbf00000000	                              mov edi, 0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4001fa6	      0xb800000000	                              mov eax, 0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4001fab	      0xe800000000	                          call 0x4001fb0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4001fb0	      0xe998050000	                           jmp 0x400254d	      1032	ldexp.c	FUNCTION_28	SWITCH_1
0x4001fb5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1035	ldexp.c	FUNCTION_28	SWITCH_1	CALL_8
0x4001fb9	          0x4889c7	                            mov rdi, rax	      1035	ldexp.c	FUNCTION_28	SWITCH_1	CALL_8
0x4001fbc	      0xe89ee6ffff	                     call sym.fold_unary	      1035	ldexp.c	FUNCTION_28	SWITCH_1	CALL_8
0x4001fc1	      0xe988050000	                           jmp 0x400254e	      1036	ldexp.c	FUNCTION_28	SWITCH_1
0x4001fc6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x4001fca	          0x4889c7	                            mov rdi, rax	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x4001fcd	      0xe827ebffff	                    call sym.fold_binary	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x4001fd2	      0xe977050000	                           jmp 0x400254e	      1040	ldexp.c	FUNCTION_28	SWITCH_1
0x4001fd7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1043	ldexp.c	FUNCTION_28	SWITCH_1	CALL_10
0x4001fdb	          0x4889c7	                            mov rdi, rax	      1043	ldexp.c	FUNCTION_28	SWITCH_1	CALL_10
0x4001fde	      0xe870f2ffff	                   call sym.fold_trinary	      1043	ldexp.c	FUNCTION_28	SWITCH_1	CALL_10
0x4001fe3	      0xe966050000	                           jmp 0x400254e	      1044	ldexp.c	FUNCTION_28	SWITCH_1
0x4001fe8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4001fec	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4001ff0	           0xfb600	                   movzx eax, byte [rax]	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4001ff3	            0x3c2e	                            cmp al, 0x2e	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4001ff5	     0xf8593020000	                           jne 0x400228e	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4001ffb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4001fff	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4002003	        0x4883c001	                              add rax, 1	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4002007	           0xfb600	                   movzx eax, byte [rax]	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x400200a	            0x84c0	                             test al, al	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x400200c	     0xf857c020000	                           jne 0x400228e	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4002012	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4002016	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4002019	          0x83f804	                              cmp eax, 4	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x400201c	            0x7421	                            je 0x400203f	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x400201e	      0xbf00000000	                              mov edi, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002023	      0xe800000000	                          call 0x4002028	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002028	          0x4889c2	                            mov rdx, rax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x400202b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x400202f	          0x4889c6	                            mov rsi, rax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002032	          0x4889d7	                            mov rdi, rdx	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002035	      0xb800000000	                              mov eax, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x400203a	      0xe800000000	                          call 0x400203f	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x400203f	    0x8b0500000000	            mov eax, dword [0x04002045] 	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002045	            0x85c0	                           test eax, eax	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002047	     0xf8423020000	                            je 0x4002270	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x400204d	    0xc70500000000	               mov dword [0x04002057], 1	      1057	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002057	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x400205b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x400205f	          0x4889c7	                            mov rdi, rax	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4002062	      0xe80afeffff	                call sym.exp_fold_tree_1	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4002067	    0xc70500000000	               mov dword [0x04002071], 0	      1059	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002071	    0x8b0500000000	            mov eax, dword [0x04002077] 	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4002077	          0x83f801	                              cmp eax, 1	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400207a	     0xf85b0000000	                           jne 0x4002130	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4002080	    0x488b05000000	            mov rax, qword [0x04002087] 	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4002087	    0x483d00000000	                              cmp rax, 0	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400208d	     0xf849d000000	                            je 0x4002130	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4002093	    0x488b05000000	            mov rax, qword [0x0400209a] 	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400209a	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40020a0	     0xf848a000000	                            je 0x4002130	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40020a6	    0x8b0500000000	            mov eax, dword [0x040020ac] 	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40020ac	            0x85c0	                           test eax, eax	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40020ae	            0x7466	                            je 0x4002116	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40020b0	    0x488b05000000	            mov rax, qword [0x040020b7] 	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40020b7	          0x4885c0	                           test rax, rax	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40020ba	            0x755a	                           jne 0x4002116	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40020bc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x40020c0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x40020c4	      0xbe00000000	                              mov esi, 0	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x40020c9	          0x4889c7	                            mov rdi, rax	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x40020cc	      0xe831fbffff	                       call sym.is_value	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x40020d1	            0x85c0	                           test eax, eax	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40020d3	            0x755b	                           jne 0x4002130	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40020d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40020d9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40020dd	      0xbe00000000	                              mov esi, 0	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40020e2	          0x4889c7	                            mov rdi, rax	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40020e5	      0xe84cfbffff	                   call sym.is_sym_value	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40020ea	            0x85c0	                           test eax, eax	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40020ec	            0x7542	                           jne 0x4002130	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40020ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x40020f2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x40020f6	          0x4889c7	                            mov rdi, rax	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x40020f9	      0xe87efcffff	                  call sym.is_dot_plus_0	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x40020fe	            0x85c0	                           test eax, eax	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x4002100	            0x752e	                           jne 0x4002130	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x4002102	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1078	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_17
0x4002106	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1078	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_17
0x400210a	          0x4889c7	                            mov rdi, rax	      1078	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_17
0x400210d	      0xe8e0fcffff	           call sym.is_align_conditional	      1078	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_17
0x4002112	            0x85c0	                           test eax, eax	      1078	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_17
0x4002114	            0x751a	                           jne 0x4002130	      1078	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_17
0x4002116	    0x488b05000000	            mov rax, qword [0x0400211d] 	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400211d	    0x488b15000000	            mov rdx, qword [0x04002124] 	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4002124	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4002127	    0x81ca00002000	                        or edx, 0x200000	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400212d	          0x895020	             mov dword [rax + 0x20], edx	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4002130	    0x8b0500000000	            mov eax, dword [0x04002136] 	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002136	            0x85c0	                           test eax, eax	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002138	            0x740f	                            je 0x4002149	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400213a	    0x488b05000000	            mov rax, qword [0x04002141] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002141	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002147	            0x7535	                           jne 0x400217e	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002149	    0x8b0500000000	            mov eax, dword [0x0400214f] 	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x400214f	          0x83f801	                              cmp eax, 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x4002152	     0xf8431010000	                            je 0x4002289	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x4002158	      0xbf00000000	                              mov edi, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x400215d	      0xe800000000	                          call 0x4002162	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4002162	          0x4889c2	                            mov rdx, rax	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4002165	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4002169	          0x4889c6	                            mov rsi, rax	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x400216c	          0x4889d7	                            mov rdi, rdx	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x400216f	      0xb800000000	                              mov eax, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4002174	      0xe800000000	                          call 0x4002179	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4002179	      0xe90b010000	                           jmp 0x4002289	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x400217e	    0x488b05000000	            mov rax, qword [0x04002185] 	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4002185	          0x4885c0	                           test rax, rax	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4002188	            0x7526	                           jne 0x40021b0	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x400218a	      0xbf00000000	                              mov edi, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400218f	      0xe800000000	                          call 0x4002194	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4002194	          0x4889c2	                            mov rdx, rax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4002197	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400219b	          0x4889c6	                            mov rsi, rax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400219e	          0x4889d7	                            mov rdi, rdx	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40021a1	      0xb800000000	                              mov eax, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40021a6	      0xe800000000	                          call 0x40021ab	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40021ab	      0xe966030000	                           jmp 0x4002516	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40021b0	    0x8b0500000000	            mov eax, dword [0x040021b6] 	      1096	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40021b6	          0x83f802	                              cmp eax, 2	      1096	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40021b9	            0x7613	                           jbe 0x40021ce	      1096	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40021bb	    0x488b05000000	            mov rax, qword [0x040021c2] 	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40021c2	    0x483d00000000	                              cmp rax, 0	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40021c8	     0xf8548030000	                           jne 0x4002516	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40021ce	    0x488b05000000	            mov rax, qword [0x040021d5] 	      1101	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40021d5	        0x488945d8	             mov qword [rbp - 0x28], rax	      1101	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40021d9	    0x488b05000000	            mov rax, qword [0x040021e0] 	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40021e0	          0x4885c0	                           test rax, rax	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40021e3	            0x7411	                            je 0x40021f6	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40021e5	    0x488b05000000	            mov rax, qword [0x040021ec] 	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40021ec	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40021f0	        0x480145d8	            add qword [rbp - 0x28], rax 	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40021f4	            0xeb0f	                           jmp 0x4002205	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40021f6	    0x488b05000000	            mov rax, qword [0x040021fd] 	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x40021fd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x4002201	        0x480145d8	            add qword [rbp - 0x28], rax 	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x4002205	    0x488b05000000	            mov rax, qword [0x0400220c] 	      1106	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x400220c	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1106	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4002210	            0x7640	                           jbe 0x4002252	      1106	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4002212	    0x488b05000000	            mov rax, qword [0x04002219] 	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4002219	    0x483d00000000	                              cmp rax, 0	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x400221f	            0x7431	                            je 0x4002252	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4002221	    0x488b1d000000	            mov rbx, qword [0x04002228] 	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002228	      0xbf00000000	                              mov edi, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x400222d	      0xe800000000	                          call 0x4002232	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002232	          0x4889c7	                            mov rdi, rax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002235	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002239	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x400223d	          0x4889d1	                            mov rcx, rdx	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002240	          0x4889da	                            mov rdx, rbx	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002243	          0x4889c6	                            mov rsi, rax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002246	      0xb800000000	                              mov eax, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x400224b	      0xe800000000	                          call 0x4002250	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002250	            0xeb37	                           jmp 0x4002289	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002252	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1113	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4002256	    0x488905000000	            mov qword [0x0400225d], rax 	      1113	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x400225d	    0x488b05000000	            mov rax, qword [0x04002264] 	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4002264	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4002268	          0x488910	                    mov qword [rax], rdx	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x400226b	      0xe9a6020000	                           jmp 0x4002516	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002270	      0xba20000000	                           mov edx, 0x20	      1119	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	CALL_24
0x4002275	      0xbe00000000	                              mov esi, 0	      1119	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	CALL_24
0x400227a	      0xbf00000000	                              mov edi, 0	      1119	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	CALL_24
0x400227f	      0xe800000000	                          call 0x4002284	      1119	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	CALL_24
0x4002284	      0xe98d020000	                           jmp 0x4002516	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002289	      0xe988020000	                           jmp 0x4002516	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x400228e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1123	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002296	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x400229a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x400229d	          0x83f805	                              cmp eax, 5	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x40022a0	            0x756d	                           jne 0x400230f	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x40022a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x40022a6	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x40022aa	    0x488b05000000	            mov rax, qword [0x040022b1] 	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x40022b1	    0x41b801000000	                              mov r8d, 1	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x40022b7	      0xb900000000	                              mov ecx, 0	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x40022bc	      0xba00000000	                              mov edx, 0	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x40022c1	          0x4889c7	                            mov rdi, rax	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x40022c4	      0xe800000000	                          call 0x40022c9	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x40022c9	        0x488945e0	             mov qword [rbp - 0x20], rax	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x40022cd	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022d2	     0xf8476020000	                            je 0x400254e	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022dc	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022e0	            0x84c0	                             test al, al	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022e2	            0x742b	                            je 0x400230f	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1131	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022e8	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1131	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022ec	            0x3c01	                               cmp al, 1	      1131	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022ee	            0x741f	                            je 0x400230f	      1131	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1132	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022f4	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1132	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022f8	            0x3c02	                               cmp al, 2	      1132	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022fa	            0x7413	                            je 0x400230f	      1132	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x40022fc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1133	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002300	         0xfb64019	           movzx eax, byte [rax + 0x19] 	      1133	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002304	          0x83e004	                              and eax, 4	      1133	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002307	            0x84c0	                             test al, al	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002309	     0xf843f020000	                            je 0x400254e	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400230f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002313	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002317	    0x488905000000	            mov qword [0x0400231e], rax 	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x400231e	    0x48c705000000	               mov qword [0x04002329], 0	      1145	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002329	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x400232d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x4002331	          0x4889c7	                            mov rdi, rax	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x4002334	      0xe838fbffff	                call sym.exp_fold_tree_1	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x4002339	    0x8b0500000000	            mov eax, dword [0x0400233f] 	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x400233f	          0x83f804	                              cmp eax, 4	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4002342	            0x7410	                            je 0x4002354	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4002344	    0x488b05000000	            mov rax, qword [0x0400234b] 	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x400234b	          0x4885c0	                           test rax, rax	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x400234e	     0xf84b5010000	                            je 0x4002509	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4002354	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4002358	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x400235b	          0x83f805	                              cmp eax, 5	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x400235e	            0x750b	                           jne 0x400236b	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4002360	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4002364	    0xc74010060000	               mov dword [rax + 0x10], 6	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x400236b	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x4002370	            0x7554	                           jne 0x40023c6	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x4002372	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4002376	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400237a	    0x488b05000000	            mov rax, qword [0x04002381] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4002381	    0x41b801000000	                              mov r8d, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4002387	      0xb900000000	                              mov ecx, 0	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400238c	      0xba01000000	                              mov edx, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4002391	          0x4889c7	                            mov rdi, rax	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4002394	      0xe800000000	                          call 0x4002399	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4002399	        0x488945e0	             mov qword [rbp - 0x20], rax	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400239d	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x40023a2	            0x7522	                           jne 0x40023c6	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x40023a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40023a8	        0x488b5818	            mov rbx, qword [rax + 0x18] 	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40023ac	      0xbf00000000	                              mov edi, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40023b1	      0xe800000000	                          call 0x40023b6	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40023b6	          0x4889de	                            mov rsi, rbx	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40023b9	          0x4889c7	                            mov rdi, rax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40023bc	      0xb800000000	                              mov eax, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40023c1	      0xe800000000	                          call 0x40023c6	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40023c6	    0x8b0500000000	            mov eax, dword [0x040023cc] 	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40023cc	            0x85c0	                           test eax, eax	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40023ce	            0x752c	                           jne 0x40023fc	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40023d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40023d4	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40023d8	            0x84c0	                             test al, al	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40023da	            0x7520	                           jne 0x40023fc	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40023dc	    0x48c705000000	               mov qword [0x040023e7], 0	      1178	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40023e7	    0x48c705000000	               mov qword [0x040023f2], 0	      1179	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40023f2	    0xc70500000000	               mov dword [0x040023fc], 1	      1180	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40023fc	    0x8b0500000000	            mov eax, dword [0x04002402] 	      1183	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002402	            0x85c0	                           test eax, eax	      1183	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002404	     0xf84ff000000	                            je 0x4002509	      1183	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400240a	    0x488b05000000	            mov rax, qword [0x04002411] 	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4002411	          0x4885c0	                           test rax, rax	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4002414	            0x750e	                           jne 0x4002424	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4002416	    0x488b05000000	            mov rax, qword [0x0400241d] 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x400241d	    0x488905000000	            mov qword [0x04002424], rax 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4002424	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x4002428	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x400242c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x4002430	          0x4889d6	                            mov rsi, rdx	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x4002433	          0x4889c7	                            mov rdi, rax	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x4002436	      0xe870e0ffff	             call sym.update_definedness	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x400243b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1198	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400243f	        0xc6401803	                mov byte [rax + 0x18], 3	      1198	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002443	    0x488b15000000	            mov rdx, qword [0x0400244a] 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400244a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400244e	        0x48895030	             mov qword [rax + 0x30], rdx	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002452	    0x488b15000000	            mov rdx, qword [0x04002459] 	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002459	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400245d	        0x48895028	             mov qword [rax + 0x28], rdx	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002461	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002465	          0x8b4004	                mov eax, dword [rax + 4]	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002468	            0x85c0	                           test eax, eax	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400246a	           0xf94c2	                                 sete dl	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400246d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002471	          0x83e201	                              and edx, 1	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002474	    0x8d0c95000000	                        lea ecx, [rdx*4]	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400247b	         0xfb65019	           movzx edx, byte [rax + 0x19] 	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400247f	          0x83e2fb	                     and edx, 0xfffffffb	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002482	             0x9ca	                             or edx, ecx	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002484	          0x885019	               mov byte [rax + 0x19], dl	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002487	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400248b	         0xfb65019	           movzx edx, byte [rax + 0x19] 	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400248f	          0x83ca08	                               or edx, 8	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002492	          0x885019	               mov byte [rax + 0x19], dl	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002495	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x4002499	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x400249c	            0x85c0	                           test eax, eax	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x400249e	            0x7427	                            je 0x40024c7	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40024a0	    0x488b05000000	            mov rax, qword [0x040024a7] 	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40024a7	        0x488b4008	                mov rax, qword [rax + 8]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40024ab	    0x488b80280300	           mov rax, qword [rax + 0x328] 	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40024b2	    0x488b0d000000	            mov rcx, qword [0x040024b9] 	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40024b9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40024bd	      0xbe00000000	                              mov esi, 0	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40024c2	          0x4889cf	                            mov rdi, rcx	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40024c5	            0xffd0	                                call rax	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40024c7	    0x488b05000000	            mov rax, qword [0x040024ce] 	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40024ce	          0x4885c0	                           test rax, rax	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40024d1	            0x7436	                            je 0x4002509	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40024d3	    0x488b05000000	            mov rax, qword [0x040024da] 	      1212	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40024da	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      1212	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40024de	            0x7429	                            je 0x4002509	      1212	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40024e0	    0x488b05000000	            mov rax, qword [0x040024e7] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40024e7	        0x488b4008	                mov rax, qword [rax + 8]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40024eb	    0x488b80d00200	           mov rax, qword [rax + 0x2d0] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40024f2	    0x488b15000000	            mov rdx, qword [0x040024f9] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40024f9	    0x488b0d000000	            mov rcx, qword [0x04002500] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4002500	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4002504	          0x4889cf	                            mov rdi, rcx	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4002507	            0xffd0	                                call rax	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4002509	    0x48c705000000	               mov qword [0x04002514], 0	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002514	            0xeb38	                           jmp 0x400254e	      1220	ldexp.c	FUNCTION_28	SWITCH_1
0x4002516	              0x90	                                     nop	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002517	            0xeb35	                           jmp 0x400254e	      1220	ldexp.c	FUNCTION_28	SWITCH_1
0x4002519	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x400251d	          0x4889c7	                            mov rdi, rax	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4002520	      0xe893edffff	                      call sym.fold_name	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4002525	            0xeb27	                           jmp 0x400254e	      1224	ldexp.c	FUNCTION_28	SWITCH_1
0x4002527	      0xbecb040000	                          mov esi, 0x4cb	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x400252c	      0xbf00000000	                              mov edi, 0	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4002531	      0xe800000000	                          call 0x4002536	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4002536	      0xba20000000	                           mov edx, 0x20	      1228	ldexp.c	FUNCTION_28	SWITCH_1	CALL_35
0x400253b	      0xbe00000000	                              mov esi, 0	      1228	ldexp.c	FUNCTION_28	SWITCH_1	CALL_35
0x4002540	      0xbf00000000	                              mov edi, 0	      1228	ldexp.c	FUNCTION_28	SWITCH_1	CALL_35
0x4002545	      0xe800000000	                          call 0x400254a	      1228	ldexp.c	FUNCTION_28	SWITCH_1	CALL_35
0x400254a	              0x90	                                     nop	      1229	ldexp.c	FUNCTION_28	SWITCH_1
0x400254b	            0xeb01	                           jmp 0x400254e	      1229	ldexp.c	FUNCTION_28	SWITCH_1
0x400254d	              0x90	                                     nop	      1032	ldexp.c	FUNCTION_28	SWITCH_1
0x400254e	        0x4883c438	                           add rsp, 0x38	      1231	ldexp.c	FUNCTION_28
0x4002552	              0x5b	                                 pop rbx	      1231	ldexp.c	FUNCTION_28
0x4002553	              0x5d	                                 pop rbp	      1231	ldexp.c	FUNCTION_28
0x4002554	              0xc3	                                     ret	      1231	ldexp.c	FUNCTION_28
exp_get_abs_int	DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:WHILE,0:IF,4:ELSE,1	42
0x40030e8	              0x55	                                push rbp	      1592	ldexp.c	FUNCTION_45
0x40030e9	          0x4889e5	                            mov rbp, rsp	      1592	ldexp.c	FUNCTION_45
0x40030ec	        0x4883ec20	                           sub rsp, 0x20	      1592	ldexp.c	FUNCTION_45
0x40030f0	        0x48897df8	                mov qword [rbp - 8], rdi	      1592	ldexp.c	FUNCTION_45
0x40030f4	          0x8975f4	              mov dword [rbp - 0xc], esi	      1592	ldexp.c	FUNCTION_45
0x40030f7	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1592	ldexp.c	FUNCTION_45
0x40030fb	      0x48837df800	                  cmp qword [rbp - 8], 0	      1593	ldexp.c	FUNCTION_45	IF_1
0x4003100	            0x747e	                            je 0x4003180	      1593	ldexp.c	FUNCTION_45	IF_1
0x4003102	        0x488b45f8	                mov rax, qword [rbp - 8]	      1595	ldexp.c	FUNCTION_45	IF_1	CALL_1
0x4003106	          0x4889c7	                            mov rdi, rax	      1595	ldexp.c	FUNCTION_45	IF_1	CALL_1
0x4003109	      0xe800000000	                          call 0x400310e	      1595	ldexp.c	FUNCTION_45	IF_1	CALL_1
0x400310e	    0x8b0500000000	            mov eax, dword [0x04003114] 	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4003114	            0x85c0	                           test eax, eax	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4003116	            0x7431	                            je 0x4003149	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4003118	    0x488b05000000	            mov rax, qword [0x0400311f] 	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x400311f	          0x4885c0	                           test rax, rax	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4003122	            0x741c	                            je 0x4003140	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4003124	    0x488b15000000	            mov rdx, qword [0x0400312b] 	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x400312b	    0x488b05000000	            mov rax, qword [0x04003132] 	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4003132	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4003136	          0x4801d0	                            add rax, rdx	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4003139	    0x488905000000	            mov qword [0x04003140], rax 	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4003140	    0x488b05000000	            mov rax, qword [0x04003147] 	      1601	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4003147	            0xeb3c	                           jmp 0x4003185	      1601	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4003149	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x400314e	            0x7430	                            je 0x4003180	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4003150	    0x8b0500000000	            mov eax, dword [0x04003156] 	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4003156	          0x83f801	                              cmp eax, 1	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4003159	            0x7425	                            je 0x4003180	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x400315b	      0xbf00000000	                              mov edi, 0	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4003160	      0xe800000000	                          call 0x4003165	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4003165	          0x4889c1	                            mov rcx, rax	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4003168	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x400316c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4003170	          0x4889c6	                            mov rsi, rax	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4003173	          0x4889cf	                            mov rdi, rcx	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4003176	      0xb800000000	                              mov eax, 0	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x400317b	      0xe800000000	                          call 0x4003180	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4003180	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1609	ldexp.c	FUNCTION_45
0x4003183	            0x4898	                                    cdqe	      1609	ldexp.c	FUNCTION_45
0x4003185	              0xc9	                                   leave	      1610	ldexp.c	FUNCTION_45
0x4003186	              0xc3	                                     ret	      1610	ldexp.c	FUNCTION_45
fold_trinary	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,1:ELSE,0	28
0x4001253	              0x55	                                push rbp	       670	ldexp.c	FUNCTION_20
0x4001254	          0x4889e5	                            mov rbp, rsp	       670	ldexp.c	FUNCTION_20
0x4001257	        0x4883ec20	                           sub rsp, 0x20	       670	ldexp.c	FUNCTION_20
0x400125b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       670	ldexp.c	FUNCTION_20
0x400125f	    0x488b05000000	            mov rax, qword [0x04001266] 	       671	ldexp.c	FUNCTION_20
0x4001266	        0x488945f8	                mov qword [rbp - 8], rax	       671	ldexp.c	FUNCTION_20
0x400126a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       673	ldexp.c	FUNCTION_20	CALL_1
0x400126e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       673	ldexp.c	FUNCTION_20	CALL_1
0x4001272	          0x4889c7	                            mov rdi, rax	       673	ldexp.c	FUNCTION_20	CALL_1
0x4001275	      0xe8f70b0000	                call sym.exp_fold_tree_1	       673	ldexp.c	FUNCTION_20	CALL_1
0x400127a	        0x488b45f8	                mov rax, qword [rbp - 8]	       674	ldexp.c	FUNCTION_20
0x400127e	    0x488905000000	            mov qword [0x04001285], rax 	       674	ldexp.c	FUNCTION_20
0x4001285	    0x8b0500000000	            mov eax, dword [0x0400128b] 	       675	ldexp.c	FUNCTION_20	IF_1
0x400128b	            0x85c0	                           test eax, eax	       675	ldexp.c	FUNCTION_20	IF_1
0x400128d	            0x7426	                            je 0x40012b5	       675	ldexp.c	FUNCTION_20	IF_1
0x400128f	    0x488b05000000	            mov rax, qword [0x04001296] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4001296	          0x4885c0	                           test rax, rax	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4001299	            0x740a	                            je 0x40012a5	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x400129b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x400129f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40012a3	            0xeb08	                           jmp 0x40012ad	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40012a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40012a9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40012ad	          0x4889c7	                            mov rdi, rax	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40012b0	      0xe8bc0b0000	                call sym.exp_fold_tree_1	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40012b5	              0x90	                                     nop	       679	ldexp.c	FUNCTION_20
0x40012b6	              0xc9	                                   leave	       679	ldexp.c	FUNCTION_20
0x40012b7	              0xc3	                                     ret	       679	ldexp.c	FUNCTION_20
set_sym_sections	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,2:ELSE,0	45
0x4003202	              0x55	                                push rbp	      1640	ldexp.c	FUNCTION_48
0x4003203	          0x4889e5	                            mov rbp, rsp	      1640	ldexp.c	FUNCTION_48
0x4003206	        0x4883ec20	                           sub rsp, 0x20	      1640	ldexp.c	FUNCTION_48
0x400320a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1640	ldexp.c	FUNCTION_48
0x400320e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1640	ldexp.c	FUNCTION_48
0x4003212	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1641	ldexp.c	FUNCTION_48
0x4003216	        0x488945f0	             mov qword [rbp - 0x10], rax	      1641	ldexp.c	FUNCTION_48
0x400321a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1642	ldexp.c	FUNCTION_48	IF_1
0x400321e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1642	ldexp.c	FUNCTION_48	IF_1
0x4003222	    0x483d00000000	                              cmp rax, 0	      1642	ldexp.c	FUNCTION_48	IF_1
0x4003228	            0x747d	                            je 0x40032a7	      1642	ldexp.c	FUNCTION_48	IF_1
0x400322a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x400322e	        0x488b7008	                mov rsi, qword [rax + 8]	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4003232	    0x488b05000000	            mov rax, qword [0x04003239] 	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4003239	    0x41b801000000	                              mov r8d, 1	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x400323f	      0xb900000000	                              mov ecx, 0	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4003244	      0xba00000000	                              mov edx, 0	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4003249	          0x4889c7	                            mov rdi, rax	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x400324c	      0xe800000000	                          call 0x4003251	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4003251	        0x488945f8	                mov qword [rbp - 8], rax	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4003255	      0x48837df800	                  cmp qword [rbp - 8], 0	      1647	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400325a	            0x744b	                            je 0x40032a7	      1647	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400325c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1648	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003260	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1648	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003264	            0x3c03	                               cmp al, 3	      1648	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003266	            0x753f	                           jne 0x40032a7	      1648	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003268	        0x488b45f8	                mov rax, qword [rbp - 8]	      1649	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400326c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1649	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003270	    0x483d00000000	                              cmp rax, 0	      1649	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003276	            0x752f	                           jne 0x40032a7	      1649	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003278	        0x488b45f8	                mov rax, qword [rbp - 8]	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400327c	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003280	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003284	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003288	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400328c	          0x4829c2	                            sub rdx, rax	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400328f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003293	        0x48895030	             mov qword [rax + 0x30], rdx	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4003297	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1652	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400329b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1652	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400329f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1652	ldexp.c	FUNCTION_48	IF_1	IF_2
0x40032a3	        0x48895028	             mov qword [rax + 0x28], rdx	      1652	ldexp.c	FUNCTION_48	IF_1	IF_2
0x40032a7	      0xb801000000	                              mov eax, 1	      1655	ldexp.c	FUNCTION_48
0x40032ac	              0xc9	                                   leave	      1656	ldexp.c	FUNCTION_48
0x40032ad	              0xc3	                                     ret	      1656	ldexp.c	FUNCTION_48
make_abs	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,1:ELSE,0	15
0x400017d	              0x55	                                push rbp	       182	ldexp.c	FUNCTION_3
0x400017e	          0x4889e5	                            mov rbp, rsp	       182	ldexp.c	FUNCTION_3
0x4000181	    0x488b05000000	            mov rax, qword [0x04000188] 	       183	ldexp.c	FUNCTION_3	IF_1
0x4000188	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x400018b	            0x741c	                            je 0x40001a9	       183	ldexp.c	FUNCTION_3	IF_1
0x400018d	    0x488b15000000	            mov rdx, qword [0x04000194] 	       184	ldexp.c	FUNCTION_3	IF_1
0x4000194	    0x488b05000000	            mov rax, qword [0x0400019b] 	       184	ldexp.c	FUNCTION_3	IF_1
0x400019b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x400019f	          0x4801d0	                            add rax, rdx	       184	ldexp.c	FUNCTION_3	IF_1
0x40001a2	    0x488905000000	            mov qword [0x040001a9], rax 	       184	ldexp.c	FUNCTION_3	IF_1
0x40001a9	    0x48c705000000	               mov qword [0x040001b4], 0	       185	ldexp.c	FUNCTION_3
0x40001b4	    0xc70500000000	               mov dword [0x040001be], 0	       186	ldexp.c	FUNCTION_3
0x40001be	              0x90	                                     nop	       187	ldexp.c	FUNCTION_3
0x40001bf	              0x5d	                                 pop rbp	       187	ldexp.c	FUNCTION_3
0x40001c0	              0xc3	                                     ret	       187	ldexp.c	FUNCTION_3
exp_provide	DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	15
0x4002978	              0x55	                                push rbp	      1379	ldexp.c	FUNCTION_39
0x4002979	          0x4889e5	                            mov rbp, rsp	      1379	ldexp.c	FUNCTION_39
0x400297c	        0x4883ec20	                           sub rsp, 0x20	      1379	ldexp.c	FUNCTION_39
0x4002980	        0x48897df8	                mov qword [rbp - 8], rdi	      1379	ldexp.c	FUNCTION_39
0x4002984	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1379	ldexp.c	FUNCTION_39
0x4002988	          0x8955ec	             mov dword [rbp - 0x14], edx	      1379	ldexp.c	FUNCTION_39
0x400298b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1380	ldexp.c	FUNCTION_39	CALL_1
0x400298e	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1380	ldexp.c	FUNCTION_39	CALL_1
0x4002992	        0x488b45f8	                mov rax, qword [rbp - 8]	      1380	ldexp.c	FUNCTION_39	CALL_1
0x4002996	            0x89d1	                            mov ecx, edx	      1380	ldexp.c	FUNCTION_39	CALL_1
0x4002998	      0xba05000000	                              mov edx, 5	      1380	ldexp.c	FUNCTION_39	CALL_1
0x400299d	          0x4889c7	                            mov rdi, rax	      1380	ldexp.c	FUNCTION_39	CALL_1
0x40029a0	      0xe8fafeffff	                      call sym.exp_assop	      1380	ldexp.c	FUNCTION_39	CALL_1
0x40029a5	              0xc9	                                   leave	      1381	ldexp.c	FUNCTION_39
0x40029a6	              0xc3	                                     ret	      1381	ldexp.c	FUNCTION_39
new_number	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	11
0x400033d	              0x55	                                push rbp	       241	ldexp.c	FUNCTION_8
0x400033e	          0x4889e5	                            mov rbp, rsp	       241	ldexp.c	FUNCTION_8
0x4000341	        0x48897df8	                mov qword [rbp - 8], rdi	       241	ldexp.c	FUNCTION_8
0x4000345	    0xc70500000000	               mov dword [0x0400034f], 1	       242	ldexp.c	FUNCTION_8
0x400034f	        0x488b45f8	                mov rax, qword [rbp - 8]	       243	ldexp.c	FUNCTION_8
0x4000353	    0x488905000000	            mov qword [0x0400035a], rax 	       243	ldexp.c	FUNCTION_8
0x400035a	    0x48c705000000	               mov qword [0x04000365], 0	       244	ldexp.c	FUNCTION_8
0x4000365	    0x48c705000000	               mov qword [0x04000370], 0	       245	ldexp.c	FUNCTION_8
0x4000370	              0x90	                                     nop	       246	ldexp.c	FUNCTION_8
0x4000371	              0x5d	                                 pop rbp	       246	ldexp.c	FUNCTION_8
0x4000372	              0xc3	                                     ret	       246	ldexp.c	FUNCTION_8
exp_intop	DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	26
0x40001f7	              0x55	                                push rbp	       200	ldexp.c	FUNCTION_5
0x40001f8	          0x4889e5	                            mov rbp, rsp	       200	ldexp.c	FUNCTION_5
0x40001fb	        0x4883ec20	                           sub rsp, 0x20	       200	ldexp.c	FUNCTION_5
0x40001ff	        0x48897de8	             mov qword [rbp - 0x18], rdi	       200	ldexp.c	FUNCTION_5
0x4000203	      0xbf28000000	                           mov edi, 0x28	       201	ldexp.c	FUNCTION_5	CALL_1
0x4000208	      0xe800000000	                          call 0x400020d	       201	ldexp.c	FUNCTION_5	CALL_1
0x400020d	        0x488945f8	                mov qword [rbp - 8], rax	       201	ldexp.c	FUNCTION_5	CALL_1
0x4000211	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	ldexp.c	FUNCTION_5
0x4000215	    0xc70002010000	                  mov dword [rax], 0x102	       202	ldexp.c	FUNCTION_5
0x400021b	      0xe800000000	                          call 0x4000220	       203	ldexp.c	FUNCTION_5	CALL_2
0x4000220	          0x4889c2	                            mov rdx, rax	       203	ldexp.c	FUNCTION_5	CALL_2
0x4000223	        0x488b45f8	                mov rax, qword [rbp - 8]	       203	ldexp.c	FUNCTION_5	CALL_2
0x4000227	        0x48895008	                mov qword [rax + 8], rdx	       203	ldexp.c	FUNCTION_5	CALL_2
0x400022b	    0x8b1500000000	            mov edx, dword [0x04000231] 	       204	ldexp.c	FUNCTION_5
0x4000231	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	ldexp.c	FUNCTION_5
0x4000235	          0x895004	                mov dword [rax + 4], edx	       204	ldexp.c	FUNCTION_5
0x4000238	        0x488b45f8	                mov rax, qword [rbp - 8]	       205	ldexp.c	FUNCTION_5
0x400023c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       205	ldexp.c	FUNCTION_5
0x4000240	        0x48895018	             mov qword [rax + 0x18], rdx	       205	ldexp.c	FUNCTION_5
0x4000244	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	ldexp.c	FUNCTION_5
0x4000248	    0x48c740200000	               mov qword [rax + 0x20], 0	       206	ldexp.c	FUNCTION_5
0x4000250	        0x488b45f8	                mov rax, qword [rbp - 8]	       207	ldexp.c	FUNCTION_5
0x4000254	    0xc74010070000	               mov dword [rax + 0x10], 7	       207	ldexp.c	FUNCTION_5
0x400025b	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	ldexp.c	FUNCTION_5
0x400025f	              0xc9	                                   leave	       209	ldexp.c	FUNCTION_5
0x4000260	              0xc3	                                     ret	       209	ldexp.c	FUNCTION_5
is_value	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	17
0x4001c02	              0x55	                                push rbp	       929	ldexp.c	FUNCTION_23
0x4001c03	          0x4889e5	                            mov rbp, rsp	       929	ldexp.c	FUNCTION_23
0x4001c06	        0x48897df8	                mov qword [rbp - 8], rdi	       929	ldexp.c	FUNCTION_23
0x4001c0a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       929	ldexp.c	FUNCTION_23
0x4001c0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       930	ldexp.c	FUNCTION_23
0x4001c12	          0x8b4010	            mov eax, dword [rax + 0x10] 	       930	ldexp.c	FUNCTION_23
0x4001c15	          0x83f807	                              cmp eax, 7	       931	ldexp.c	FUNCTION_23
0x4001c18	            0x7515	                           jne 0x4001c2f	       931	ldexp.c	FUNCTION_23
0x4001c1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	ldexp.c	FUNCTION_23
0x4001c1e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       931	ldexp.c	FUNCTION_23
0x4001c22	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       931	ldexp.c	FUNCTION_23
0x4001c26	            0x7507	                           jne 0x4001c2f	       931	ldexp.c	FUNCTION_23
0x4001c28	      0xb801000000	                              mov eax, 1	       931	ldexp.c	FUNCTION_23
0x4001c2d	            0xeb05	                           jmp 0x4001c34	       931	ldexp.c	FUNCTION_23
0x4001c2f	      0xb800000000	                              mov eax, 0	       931	ldexp.c	FUNCTION_23
0x4001c34	              0x5d	                                 pop rbp	       932	ldexp.c	FUNCTION_23
0x4001c35	              0xc3	                                     ret	       932	ldexp.c	FUNCTION_23
new_rel	DO,0:SWITCH,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,0:ELSE,0	13
0x4000373	              0x55	                                push rbp	       250	ldexp.c	FUNCTION_9
0x4000374	          0x4889e5	                            mov rbp, rsp	       250	ldexp.c	FUNCTION_9
0x4000377	        0x48897df8	                mov qword [rbp - 8], rdi	       250	ldexp.c	FUNCTION_9
0x400037b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       250	ldexp.c	FUNCTION_9
0x400037f	    0xc70500000000	               mov dword [0x04000389], 1	       251	ldexp.c	FUNCTION_9
0x4000389	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	ldexp.c	FUNCTION_9
0x400038d	    0x488905000000	            mov qword [0x04000394], rax 	       252	ldexp.c	FUNCTION_9
0x4000394	    0x48c705000000	               mov qword [0x0400039f], 0	       253	ldexp.c	FUNCTION_9
0x400039f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       254	ldexp.c	FUNCTION_9
0x40003a3	    0x488905000000	            mov qword [0x040003aa], rax 	       254	ldexp.c	FUNCTION_9
0x40003aa	              0x90	                                     nop	       255	ldexp.c	FUNCTION_9
0x40003ab	              0x5d	                                 pop rbp	       255	ldexp.c	FUNCTION_9
0x40003ac	              0xc3	                                     ret	       255	ldexp.c	FUNCTION_9
ldexp_init	DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:WHILE,0:IF,1:ELSE,0	17
0x40031c7	              0x55	                                push rbp	      1624	ldexp.c	FUNCTION_47
0x40031c8	          0x4889e5	                            mov rbp, rsp	      1624	ldexp.c	FUNCTION_47
0x40031cb	      0xb90d000000	                            mov ecx, 0xd	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40031d0	      0xba28000000	                           mov edx, 0x28	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40031d5	      0xbe00000000	                              mov esi, 0	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40031da	      0xbf00000000	                              mov edi, 0	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40031df	      0xe800000000	                          call 0x40031e4	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40031e4	            0x85c0	                           test eax, eax	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40031e6	            0x7517	                           jne 0x40031ff	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40031e8	      0xbf00000000	                              mov edi, 0	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40031ed	      0xe800000000	                          call 0x40031f2	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40031f2	          0x4889c7	                            mov rdi, rax	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40031f5	      0xb800000000	                              mov eax, 0	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40031fa	      0xe800000000	                          call 0x40031ff	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40031ff	              0x90	                                     nop	      1632	ldexp.c	FUNCTION_47
0x4003200	              0x5d	                                 pop rbp	      1632	ldexp.c	FUNCTION_47
0x4003201	              0xc3	                                     ret	      1632	ldexp.c	FUNCTION_47
update_definedness	DO,0:SWITCH,0:CALL,4:FOR,0:functions,0:WHILE,0:IF,4:ELSE,0	81
0x40004ab	              0x55	                                push rbp	       307	ldexp.c	FUNCTION_13
0x40004ac	          0x4889e5	                            mov rbp, rsp	       307	ldexp.c	FUNCTION_13
0x40004af	        0x4883ec20	                           sub rsp, 0x20	       307	ldexp.c	FUNCTION_13
0x40004b3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       307	ldexp.c	FUNCTION_13
0x40004b7	        0x488975e0	             mov qword [rbp - 0x20], rsi	       307	ldexp.c	FUNCTION_13
0x40004bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       309	ldexp.c	FUNCTION_13
0x40004bf	      0xb900000000	                              mov ecx, 0	       309	ldexp.c	FUNCTION_13
0x40004c4	      0xba01000000	                              mov edx, 1	       309	ldexp.c	FUNCTION_13
0x40004c9	          0x4889c6	                            mov rsi, rax	       309	ldexp.c	FUNCTION_13
0x40004cc	      0xbf00000000	                              mov edi, 0	       309	ldexp.c	FUNCTION_13
0x40004d1	      0xe800000000	                          call 0x40004d6	       309	ldexp.c	FUNCTION_13
0x40004d6	        0x488945f8	                mov qword [rbp - 8], rax	       309	ldexp.c	FUNCTION_13
0x40004da	      0x48837df800	                  cmp qword [rbp - 8], 0	       313	ldexp.c	FUNCTION_13	IF_1
0x40004df	            0x7521	                           jne 0x4000502	       313	ldexp.c	FUNCTION_13	IF_1
0x40004e1	      0xbf00000000	                              mov edi, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x40004e6	      0xe800000000	                          call 0x40004eb	       314	ldexp.c	FUNCTION_13	CALL_3
0x40004eb	          0x4889c2	                            mov rdx, rax	       314	ldexp.c	FUNCTION_13	CALL_3
0x40004ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       314	ldexp.c	FUNCTION_13	CALL_3
0x40004f2	          0x4889c6	                            mov rsi, rax	       314	ldexp.c	FUNCTION_13	CALL_3
0x40004f5	          0x4889d7	                            mov rdi, rdx	       314	ldexp.c	FUNCTION_13	CALL_3
0x40004f8	      0xb800000000	                              mov eax, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x40004fd	      0xe800000000	                          call 0x4000502	       314	ldexp.c	FUNCTION_13	CALL_3
0x4000502	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       318	ldexp.c	FUNCTION_13
0x4000509	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       319	ldexp.c	FUNCTION_13	IF_2
0x400050d	         0xfb64019	           movzx eax, byte [rax + 0x19] 	       319	ldexp.c	FUNCTION_13	IF_2
0x4000511	          0x83e008	                              and eax, 8	       319	ldexp.c	FUNCTION_13	IF_2
0x4000514	            0x84c0	                             test al, al	       319	ldexp.c	FUNCTION_13	IF_2
0x4000516	            0x7565	                           jne 0x400057d	       319	ldexp.c	FUNCTION_13	IF_2
0x4000518	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       320	ldexp.c	FUNCTION_13	IF_2
0x400051c	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       320	ldexp.c	FUNCTION_13	IF_2
0x4000520	            0x3c03	                               cmp al, 3	       320	ldexp.c	FUNCTION_13	IF_2
0x4000522	            0x7418	                            je 0x400053c	       320	ldexp.c	FUNCTION_13	IF_2
0x4000524	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       321	ldexp.c	FUNCTION_13	IF_2
0x4000528	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       321	ldexp.c	FUNCTION_13	IF_2
0x400052c	            0x3c04	                               cmp al, 4	       321	ldexp.c	FUNCTION_13	IF_2
0x400052e	            0x740c	                            je 0x400053c	       321	ldexp.c	FUNCTION_13	IF_2
0x4000530	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       322	ldexp.c	FUNCTION_13	IF_2
0x4000534	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       322	ldexp.c	FUNCTION_13	IF_2
0x4000538	            0x3c05	                               cmp al, 5	       322	ldexp.c	FUNCTION_13	IF_2
0x400053a	            0x7541	                           jne 0x400057d	       322	ldexp.c	FUNCTION_13	IF_2
0x400053c	        0x488b45f8	                mov rax, qword [rbp - 8]	       324	ldexp.c	FUNCTION_13	IF_2
0x4000540	         0xfb65021	           movzx edx, byte [rax + 0x21] 	       324	ldexp.c	FUNCTION_13	IF_2
0x4000544	          0x83ca01	                               or edx, 1	       324	ldexp.c	FUNCTION_13	IF_2
0x4000547	          0x885021	               mov byte [rax + 0x21], dl	       324	ldexp.c	FUNCTION_13	IF_2
0x400054a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       325	ldexp.c	FUNCTION_13	IF_2	IF_3
0x400054e	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       325	ldexp.c	FUNCTION_13	IF_2	IF_3
0x4000552	            0x3c03	                               cmp al, 3	       325	ldexp.c	FUNCTION_13	IF_2	IF_3
0x4000554	            0x7527	                           jne 0x400057d	       325	ldexp.c	FUNCTION_13	IF_2	IF_3
0x4000556	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       326	ldexp.c	FUNCTION_13	IF_2	IF_3
0x400055a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       326	ldexp.c	FUNCTION_13	IF_2	IF_3
0x400055e	        0x488b4068	            mov rax, qword [rax + 0x68] 	       326	ldexp.c	FUNCTION_13	IF_2	IF_3
0x4000562	          0x4885c0	                           test rax, rax	       326	ldexp.c	FUNCTION_13	IF_2	IF_3
0x4000565	            0x7416	                            je 0x400057d	       326	ldexp.c	FUNCTION_13	IF_2	IF_3
0x4000567	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       327	ldexp.c	FUNCTION_13	IF_2	IF_3
0x400056b	         0xfb64019	           movzx eax, byte [rax + 0x19] 	       327	ldexp.c	FUNCTION_13	IF_2	IF_3
0x400056f	          0x83e004	                              and eax, 4	       327	ldexp.c	FUNCTION_13	IF_2	IF_3
0x4000572	            0x84c0	                             test al, al	       327	ldexp.c	FUNCTION_13	IF_2	IF_3
0x4000574	            0x7507	                           jne 0x400057d	       327	ldexp.c	FUNCTION_13	IF_2	IF_3
0x4000576	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       328	ldexp.c	FUNCTION_13	IF_2	IF_3
0x400057d	    0x8b0500000000	            mov eax, dword [0x04000583] 	       331	ldexp.c	FUNCTION_13
0x4000583	            0x89c2	                            mov edx, eax	       331	ldexp.c	FUNCTION_13
0x4000585	        0x488b45f8	                mov rax, qword [rbp - 8]	       331	ldexp.c	FUNCTION_13
0x4000589	          0x885020	               mov byte [rax + 0x20], dl	       331	ldexp.c	FUNCTION_13
0x400058c	        0x488b45f8	                mov rax, qword [rbp - 8]	       332	ldexp.c	FUNCTION_13
0x4000590	    0x48c740180000	               mov qword [rax + 0x18], 0	       332	ldexp.c	FUNCTION_13
0x4000598	    0x8b0500000000	            mov eax, dword [0x0400059e] 	       333	ldexp.c	FUNCTION_13	IF_4
0x400059e	          0x83f804	                              cmp eax, 4	       333	ldexp.c	FUNCTION_13	IF_4
0x40005a1	            0x7529	                           jne 0x40005cc	       333	ldexp.c	FUNCTION_13	IF_4
0x40005a3	    0x8b0500000000	            mov eax, dword [0x040005a9] 	       334	ldexp.c	FUNCTION_13	IF_4
0x40005a9	            0x85c0	                           test eax, eax	       334	ldexp.c	FUNCTION_13	IF_4
0x40005ab	            0x741f	                            je 0x40005cc	       334	ldexp.c	FUNCTION_13	IF_4
0x40005ad	    0x488b05000000	            mov rax, qword [0x040005b4] 	       335	ldexp.c	FUNCTION_13	IF_4
0x40005b4	    0x483d00000000	                              cmp rax, 0	       335	ldexp.c	FUNCTION_13	IF_4
0x40005ba	            0x7510	                           jne 0x40005cc	       335	ldexp.c	FUNCTION_13	IF_4
0x40005bc	      0xe800000000	                          call 0x40005c1	       336	ldexp.c	FUNCTION_13	CALL_4
0x40005c1	          0x4889c2	                            mov rdx, rax	       336	ldexp.c	FUNCTION_13	CALL_4
0x40005c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	ldexp.c	FUNCTION_13	CALL_4
0x40005c8	        0x48895018	             mov qword [rax + 0x18], rdx	       336	ldexp.c	FUNCTION_13	CALL_4
0x40005cc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       337	ldexp.c	FUNCTION_13
0x40005cf	              0xc9	                                   leave	       338	ldexp.c	FUNCTION_13
0x40005d0	              0xc3	                                     ret	       338	ldexp.c	FUNCTION_13
