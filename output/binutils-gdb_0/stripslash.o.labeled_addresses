strip_trailing_slashes	functions,0:ELSE,0:FOR,0:WHILE,0:IF,1:CALL,2:SWITCH,0:DO,0	31
0x4000040	              0x55	                                push rbp	        32	stripslash.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        32	stripslash.c	FUNCTION_1
0x4000044	        0x4883ec30	                           sub rsp, 0x30	        32	stripslash.c	FUNCTION_1
0x4000048	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        32	stripslash.c	FUNCTION_1
0x400004c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        33	stripslash.c	FUNCTION_1	CALL_1
0x4000050	          0x4889c7	                            mov rdi, rax	        33	stripslash.c	FUNCTION_1	CALL_1
0x4000053	      0xe800000000	                          call 0x4000058	        33	stripslash.c	FUNCTION_1	CALL_1
0x4000058	        0x488945f0	             mov qword [rbp - 0x10], rax	        33	stripslash.c	FUNCTION_1	CALL_1
0x400005c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        39	stripslash.c	FUNCTION_1	IF_1
0x4000060	           0xfb600	                   movzx eax, byte [rax]	        39	stripslash.c	FUNCTION_1	IF_1
0x4000063	            0x84c0	                             test al, al	        39	stripslash.c	FUNCTION_1	IF_1
0x4000065	            0x7508	                           jne 0x400006f	        39	stripslash.c	FUNCTION_1	IF_1
0x4000067	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        40	stripslash.c	FUNCTION_1	IF_1
0x400006b	        0x488945f0	             mov qword [rbp - 0x10], rax	        40	stripslash.c	FUNCTION_1	IF_1
0x400006f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        41	stripslash.c	FUNCTION_1	CALL_2
0x4000073	          0x4889c7	                            mov rdi, rax	        41	stripslash.c	FUNCTION_1	CALL_2
0x4000076	      0xe800000000	                          call 0x400007b	        41	stripslash.c	FUNCTION_1	CALL_2
0x400007b	          0x4889c2	                            mov rdx, rax	        41	stripslash.c	FUNCTION_1	CALL_2
0x400007e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        41	stripslash.c	FUNCTION_1	CALL_2
0x4000082	          0x4801d0	                            add rax, rdx	        41	stripslash.c	FUNCTION_1	CALL_2
0x4000085	        0x488945f8	                mov qword [rbp - 8], rax	        41	stripslash.c	FUNCTION_1	CALL_2
0x4000089	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	stripslash.c	FUNCTION_1
0x400008d	           0xfb600	                   movzx eax, byte [rax]	        42	stripslash.c	FUNCTION_1
0x4000090	            0x84c0	                             test al, al	        42	stripslash.c	FUNCTION_1
0x4000092	           0xf95c0	                                setne al	        42	stripslash.c	FUNCTION_1
0x4000095	          0x8845ef	               mov byte [rbp - 0x11], al	        42	stripslash.c	FUNCTION_1
0x4000098	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	stripslash.c	FUNCTION_1
0x400009c	          0xc60000	                       mov byte [rax], 0	        43	stripslash.c	FUNCTION_1
0x400009f	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	        44	stripslash.c	FUNCTION_1
0x40000a3	              0xc9	                                   leave	        45	stripslash.c	FUNCTION_1
0x40000a4	              0xc3	                                     ret	        45	stripslash.c	FUNCTION_1
