vax_find_call	CALL,26:SWITCH,2:FOR,1:DO,0:IF,5:WHILE,0:functions,0:ELSE,0	192
0x4000331	              0x55	                                push rbp	       233	vax.c	FUNCTION_5
0x4000332	          0x4889e5	                            mov rbp, rsp	       233	vax.c	FUNCTION_5
0x4000335	        0x4883ec50	                           sub rsp, 0x50	       233	vax.c	FUNCTION_5
0x4000339	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       233	vax.c	FUNCTION_5
0x400033d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       233	vax.c	FUNCTION_5
0x4000341	        0x488955b8	             mov qword [rbp - 0x48], rdx	       233	vax.c	FUNCTION_5
0x4000345	    0x8b0500000000	            mov eax, dword [0x0400034b] 	       242	vax.c	FUNCTION_5	IF_1
0x400034b	            0x85c0	                           test eax, eax	       242	vax.c	FUNCTION_5	IF_1
0x400034d	            0x752f	                           jne 0x400037e	       242	vax.c	FUNCTION_5	IF_1
0x400034f	    0xc70500000000	               mov dword [0x04000359], 1	       244	vax.c	FUNCTION_5	IF_1
0x4000359	      0xbf00000000	                              mov edi, 0	       245	vax.c	FUNCTION_5	IF_1	CALL_1
0x400035e	      0xe800000000	                          call 0x4000363	       245	vax.c	FUNCTION_5	IF_1	CALL_1
0x4000363	    0xf20f10050000	         movsd xmm0, qword [0x0400036b] 	       246	vax.c	FUNCTION_5	IF_1
0x400036b	    0xf20f11050000	         movsd qword [0x04000373], xmm0 	       246	vax.c	FUNCTION_5	IF_1
0x4000373	    0x48c705000000	               mov qword [0x0400037e], 0	       247	vax.c	FUNCTION_5	IF_1
0x400037e	    0x8b0500000000	            mov eax, dword [0x04000384] 	       250	vax.c	FUNCTION_5	CALL_3
0x4000384	      0x2500010000	                          and eax, 0x100	       250	vax.c	FUNCTION_5	CALL_3
0x4000389	            0x85c0	                           test eax, eax	       250	vax.c	FUNCTION_5	CALL_3
0x400038b	            0x7422	                            je 0x40003af	       250	vax.c	FUNCTION_5	CALL_3
0x400038d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       250	vax.c	FUNCTION_5	CALL_3
0x4000391	        0x488b4010	            mov rax, qword [rax + 0x10] 	       250	vax.c	FUNCTION_5	CALL_3
0x4000395	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       250	vax.c	FUNCTION_5	CALL_3
0x4000399	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       250	vax.c	FUNCTION_5	CALL_3
0x400039d	          0x4889c6	                            mov rsi, rax	       250	vax.c	FUNCTION_5	CALL_3
0x40003a0	      0xbf00000000	                              mov edi, 0	       250	vax.c	FUNCTION_5	CALL_3
0x40003a5	      0xb800000000	                              mov eax, 0	       250	vax.c	FUNCTION_5	CALL_3
0x40003aa	      0xe800000000	                          call 0x40003af	       250	vax.c	FUNCTION_5	CALL_3
0x40003af	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       253	vax.c	FUNCTION_5	FOR_1
0x40003b3	        0x488945e0	             mov qword [rbp - 0x20], rax	       253	vax.c	FUNCTION_5	FOR_1
0x40003b7	      0xe960020000	                           jmp 0x400061c	       253	vax.c	FUNCTION_5	FOR_1
0x40003bc	    0x48c745d80100	               mov qword [rbp - 0x28], 1	       255	vax.c	FUNCTION_5	FOR_1
0x40003c4	    0x488b15000000	            mov rdx, qword [0x040003cb] 	       256	vax.c	FUNCTION_5	FOR_1
0x40003cb	    0x488b05000000	            mov rax, qword [0x040003d2] 	       257	vax.c	FUNCTION_5	FOR_1
0x40003d2	        0x488b4028	            mov rax, qword [rax + 0x28] 	       257	vax.c	FUNCTION_5	FOR_1
0x40003d6	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       257	vax.c	FUNCTION_5	FOR_1
0x40003da	          0x4829c1	                            sub rcx, rax	       257	vax.c	FUNCTION_5	FOR_1
0x40003dd	          0x4889c8	                            mov rax, rcx	       257	vax.c	FUNCTION_5	FOR_1
0x40003e0	          0x4801d0	                            add rax, rdx	       256	vax.c	FUNCTION_5	FOR_1
0x40003e3	        0x488945e8	             mov qword [rbp - 0x18], rax	       256	vax.c	FUNCTION_5	FOR_1
0x40003e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       258	vax.c	FUNCTION_5	FOR_1	IF_2
0x40003eb	           0xfb600	                   movzx eax, byte [rax]	       258	vax.c	FUNCTION_5	FOR_1	IF_2
0x40003ee	            0x3cfb	                            cmp al, 0xfb	       258	vax.c	FUNCTION_5	FOR_1	IF_2
0x40003f0	     0xf851e020000	                           jne 0x4000614	       258	vax.c	FUNCTION_5	FOR_1	IF_2
0x40003f6	    0x8b0500000000	            mov eax, dword [0x040003fc] 	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x40003fc	      0x2500010000	                          and eax, 0x100	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x4000401	            0x85c0	                           test eax, eax	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x4000403	            0x7416	                            je 0x400041b	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x4000405	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x4000409	          0x4889c6	                            mov rsi, rax	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x400040c	      0xbf00000000	                              mov edi, 0	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x4000411	      0xb800000000	                              mov eax, 0	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x4000416	      0xe800000000	                          call 0x400041b	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x400041b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x400041f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x4000423	          0x4801d0	                            add rax, rdx	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x4000426	          0x4889c7	                            mov rdi, rax	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x4000429	      0xe812fcffff	                call sym.vax_operandmode	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x400042e	          0x8945d0	             mov dword [rbp - 0x30], eax	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x4000431	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x4000434	            0x85c0	                           test eax, eax	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x4000436	            0x740a	                            je 0x4000442	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x4000438	          0x83f80d	                            cmp eax, 0xd	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x400043b	            0x7405	                            je 0x4000442	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x400043d	      0xe9b0010000	                           jmp 0x40005f2	       273	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x4000442	              0x90	                                     nop	       271	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x4000443	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       275	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x4000447	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       275	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x400044b	          0x4801d0	                            add rax, rdx	       275	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x400044e	          0x4889c7	                            mov rdi, rax	       275	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x4000451	      0xe8d2fdffff	              call sym.vax_operandlength	       275	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x4000456	        0x480145d8	            add qword [rbp - 0x28], rax 	       275	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x400045a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       276	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_8
0x400045e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       276	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_8
0x4000462	          0x4801d0	                            add rax, rdx	       276	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_8
0x4000465	          0x4889c7	                            mov rdi, rax	       276	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_8
0x4000468	      0xe8d3fbffff	                call sym.vax_operandmode	       276	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_8
0x400046d	          0x8945d4	             mov dword [rbp - 0x2c], eax	       276	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_8
0x4000470	    0x8b0500000000	            mov eax, dword [0x04000476] 	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x4000476	      0x2500010000	                          and eax, 0x100	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x400047b	            0x85c0	                           test eax, eax	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x400047d	            0x7438	                            je 0x40004b7	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x400047f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x4000482	            0x89c7	                            mov edi, eax	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x4000484	      0xe8dafcffff	                call sym.vax_operandname	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x4000489	          0x4889c6	                            mov rsi, rax	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x400048c	      0xbf00000000	                              mov edi, 0	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x4000491	      0xb800000000	                              mov eax, 0	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x4000496	      0xe800000000	                          call 0x400049b	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x400049b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x400049e	            0x89c7	                            mov edi, eax	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x40004a0	      0xe8befcffff	                call sym.vax_operandname	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x40004a5	          0x4889c6	                            mov rsi, rax	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x40004a8	      0xbf00000000	                              mov edi, 0	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x40004ad	      0xb800000000	                              mov eax, 0	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x40004b2	      0xe800000000	                          call 0x40004b7	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_9
0x40004b7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004ba	          0x83e803	                              sub eax, 3	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004bd	          0x83f811	                           cmp eax, 0x11	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004c0	     0xf872c010000	                            ja 0x40005f2	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004c6	            0x89c0	                            mov eax, eax	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004c8	    0x488b04c50000	                  mov rax, qword [rax*8]	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004d0	            0xffe0	                                 jmp rax	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       297	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_14
0x40004d6	      0xba00000000	                              mov edx, 0	       297	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_14
0x40004db	      0xbe00000000	                              mov esi, 0	       297	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_14
0x40004e0	          0x4889c7	                            mov rdi, rax	       297	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_14
0x40004e3	      0xe800000000	                          call 0x40004e8	       297	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_14
0x40004e8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       298	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_15
0x40004ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       298	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_15
0x40004f0	          0x4801d0	                            add rax, rdx	       298	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_15
0x40004f3	          0x4889c7	                            mov rdi, rax	       298	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_15
0x40004f6	      0xe82dfdffff	              call sym.vax_operandlength	       298	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_15
0x40004fb	        0x480145d8	            add qword [rbp - 0x28], rax 	       298	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_15
0x40004ff	      0xe910010000	                           jmp 0x4000614	       299	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x4000504	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       308	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_16
0x4000508	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       308	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_16
0x400050c	          0x4801d0	                            add rax, rdx	       308	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_16
0x400050f	          0x4889c7	                            mov rdi, rax	       308	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_16
0x4000512	      0xe873fdffff	                     call sym.vax_offset	       308	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_16
0x4000517	          0x4889c2	                            mov rdx, rax	       308	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_16
0x400051a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       308	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_16
0x400051e	          0x4801d0	                            add rax, rdx	       308	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_16
0x4000521	        0x488945f0	             mov qword [rbp - 0x10], rax	       308	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_16
0x4000525	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       309	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_17
0x4000529	            0x89c7	                            mov edi, eax	       309	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_17
0x400052b	      0xe800000000	                          call 0x4000530	       309	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_17
0x4000530	            0x85c0	                           test eax, eax	       309	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_17
0x4000532	     0xf84b6000000	                            je 0x40005ee	       309	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_17
0x4000538	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       311	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_18
0x400053c	          0x4889c6	                            mov rsi, rax	       311	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_18
0x400053f	      0xbf00000000	                              mov edi, 0	       311	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_18
0x4000544	      0xe800000000	                          call 0x4000549	       311	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_18
0x4000549	        0x488945f8	                mov qword [rbp - 8], rax	       311	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_18
0x400054d	      0x48837df800	                  cmp qword [rbp - 8], 0	       312	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4
0x4000552	     0xf8499000000	                            je 0x40005f1	       312	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4
0x4000558	    0x8b0500000000	            mov eax, dword [0x0400055e] 	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x400055e	      0x2500010000	                          and eax, 0x100	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x4000563	            0x85c0	                           test eax, eax	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x4000565	            0x7449	                            je 0x40005b0	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x4000567	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x400056b	          0x4889c6	                            mov rsi, rax	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x400056e	      0xbf00000000	                              mov edi, 0	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x4000573	      0xb800000000	                              mov eax, 0	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x4000578	      0xe800000000	                          call 0x400057d	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x400057d	        0x488b45f8	                mov rax, qword [rbp - 8]	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x4000581	        0x488b4010	            mov rax, qword [rax + 0x10] 	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x4000585	          0x4889c6	                            mov rsi, rax	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x4000588	      0xbf00000000	                              mov edi, 0	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x400058d	      0xb800000000	                              mov eax, 0	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x4000592	      0xe800000000	                          call 0x4000597	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x4000597	        0x488b45f8	                mov rax, qword [rbp - 8]	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x400059b	          0x488b00	                    mov rax, qword [rax]	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x400059e	          0x4889c6	                            mov rsi, rax	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x40005a1	      0xbf00000000	                              mov edi, 0	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x40005a6	      0xb800000000	                              mov eax, 0	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x40005ab	      0xe800000000	                          call 0x40005b0	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_19
0x40005b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       321	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x40005b4	          0x488b00	                    mov rax, qword [rax]	       321	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x40005b7	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       321	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x40005bb	            0x7534	                           jne 0x40005f1	       321	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x40005bd	        0x488b4df8	                mov rcx, qword [rbp - 8]	       326	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_23
0x40005c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       326	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_23
0x40005c5	      0xba00000000	                              mov edx, 0	       326	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_23
0x40005ca	          0x4889ce	                            mov rsi, rcx	       326	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_23
0x40005cd	          0x4889c7	                            mov rdi, rax	       326	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_23
0x40005d0	      0xe800000000	                          call 0x40005d5	       326	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_23
0x40005d5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       327	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_24
0x40005d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       327	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_24
0x40005dd	          0x4801d0	                            add rax, rdx	       327	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_24
0x40005e0	          0x4889c7	                            mov rdi, rax	       327	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_24
0x40005e3	      0xe840fcffff	              call sym.vax_operandlength	       327	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_24
0x40005e8	        0x480145d8	            add qword [rbp - 0x28], rax 	       327	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_24
0x40005ec	            0xeb26	                           jmp 0x4000614	       328	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x40005ee	              0x90	                                     nop	       338	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40005ef	            0xeb01	                           jmp 0x40005f2	       338	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40005f1	              0x90	                                     nop	       331	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3
0x40005f2	    0x8b0500000000	            mov eax, dword [0x040005f8] 	       344	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_26
0x40005f8	      0x2500010000	                          and eax, 0x100	       344	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_26
0x40005fd	            0x85c0	                           test eax, eax	       344	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_26
0x40005ff	            0x740a	                            je 0x400060b	       344	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_26
0x4000601	      0xbf00000000	                              mov edi, 0	       344	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_26
0x4000606	      0xe800000000	                          call 0x400060b	       344	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_26
0x400060b	    0x48c745d80100	               mov qword [rbp - 0x28], 1	       345	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x4000613	              0x90	                                     nop	       346	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x4000614	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       253	vax.c	FUNCTION_5	FOR_1
0x4000618	        0x480145e0	            add qword [rbp - 0x20], rax 	       253	vax.c	FUNCTION_5	FOR_1
0x400061c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       253	vax.c	FUNCTION_5	FOR_1
0x4000620	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       253	vax.c	FUNCTION_5	FOR_1
0x4000624	     0xf8292fdffff	                            jb 0x40003bc	       253	vax.c	FUNCTION_5	FOR_1
0x400062a	              0x90	                                     nop	       350	vax.c	FUNCTION_5
0x400062b	              0xc9	                                   leave	       350	vax.c	FUNCTION_5
0x400062c	              0xc3	                                     ret	       350	vax.c	FUNCTION_5
vax_operandmode	CALL,1:SWITCH,1:FOR,0:DO,0:IF,0:WHILE,0:functions,0:ELSE,0	80
0x4000040	              0x55	                                push rbp	        81	vax.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        81	vax.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	        81	vax.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	        81	vax.c	FUNCTION_1
0x400004c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        82	vax.c	FUNCTION_1
0x4000050	           0xfb600	                   movzx eax, byte [rax]	        82	vax.c	FUNCTION_1
0x4000053	           0xfb6c0	                           movzx eax, al	        82	vax.c	FUNCTION_1
0x4000056	          0x83e00f	                            and eax, 0xf	        82	vax.c	FUNCTION_1
0x4000059	          0x8945fc	                mov dword [rbp - 4], eax	        82	vax.c	FUNCTION_1
0x400005c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	vax.c	FUNCTION_1	SWITCH_1
0x4000060	           0xfb600	                   movzx eax, byte [rax]	        84	vax.c	FUNCTION_1	SWITCH_1
0x4000063	          0xc0e804	                               shr al, 4	        84	vax.c	FUNCTION_1	SWITCH_1
0x4000066	           0xfb6c0	                           movzx eax, al	        84	vax.c	FUNCTION_1	SWITCH_1
0x4000069	          0x83e00f	                            and eax, 0xf	        84	vax.c	FUNCTION_1	SWITCH_1
0x400006c	          0x83f80f	                            cmp eax, 0xf	        84	vax.c	FUNCTION_1	SWITCH_1
0x400006f	     0xf87e7000000	                            ja 0x400015c	        84	vax.c	FUNCTION_1	SWITCH_1
0x4000075	            0x89c0	                            mov eax, eax	        84	vax.c	FUNCTION_1	SWITCH_1
0x4000077	    0x488b04c50000	                  mov rax, qword [rax*8]	        84	vax.c	FUNCTION_1	SWITCH_1
0x400007f	            0xffe0	                                 jmp rax	        84	vax.c	FUNCTION_1	SWITCH_1
0x4000081	      0xb800000000	                              mov eax, 0	        90	vax.c	FUNCTION_1	SWITCH_1
0x4000086	      0xe9d6000000	                           jmp 0x4000161	        90	vax.c	FUNCTION_1	SWITCH_1
0x400008b	      0xb801000000	                              mov eax, 1	        92	vax.c	FUNCTION_1	SWITCH_1
0x4000090	      0xe9cc000000	                           jmp 0x4000161	        92	vax.c	FUNCTION_1	SWITCH_1
0x4000095	      0xb802000000	                              mov eax, 2	        94	vax.c	FUNCTION_1	SWITCH_1
0x400009a	      0xe9c2000000	                           jmp 0x4000161	        94	vax.c	FUNCTION_1	SWITCH_1
0x400009f	      0xb803000000	                              mov eax, 3	        96	vax.c	FUNCTION_1	SWITCH_1
0x40000a4	      0xe9b8000000	                           jmp 0x4000161	        96	vax.c	FUNCTION_1	SWITCH_1
0x40000a9	      0xb804000000	                              mov eax, 4	        98	vax.c	FUNCTION_1	SWITCH_1
0x40000ae	      0xe9ae000000	                           jmp 0x4000161	        98	vax.c	FUNCTION_1	SWITCH_1
0x40000b3	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       100	vax.c	FUNCTION_1	SWITCH_1
0x40000b7	            0x740a	                            je 0x40000c3	       100	vax.c	FUNCTION_1	SWITCH_1
0x40000b9	      0xb805000000	                              mov eax, 5	       100	vax.c	FUNCTION_1	SWITCH_1
0x40000be	      0xe99e000000	                           jmp 0x4000161	       100	vax.c	FUNCTION_1	SWITCH_1
0x40000c3	      0xb80d000000	                            mov eax, 0xd	       100	vax.c	FUNCTION_1	SWITCH_1
0x40000c8	      0xe994000000	                           jmp 0x4000161	       100	vax.c	FUNCTION_1	SWITCH_1
0x40000cd	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       102	vax.c	FUNCTION_1	SWITCH_1
0x40000d1	            0x740a	                            je 0x40000dd	       102	vax.c	FUNCTION_1	SWITCH_1
0x40000d3	      0xb806000000	                              mov eax, 6	       102	vax.c	FUNCTION_1	SWITCH_1
0x40000d8	      0xe984000000	                           jmp 0x4000161	       102	vax.c	FUNCTION_1	SWITCH_1
0x40000dd	      0xb80e000000	                            mov eax, 0xe	       102	vax.c	FUNCTION_1	SWITCH_1
0x40000e2	            0xeb7d	                           jmp 0x4000161	       102	vax.c	FUNCTION_1	SWITCH_1
0x40000e4	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       104	vax.c	FUNCTION_1	SWITCH_1
0x40000e8	            0x7407	                            je 0x40000f1	       104	vax.c	FUNCTION_1	SWITCH_1
0x40000ea	      0xb807000000	                              mov eax, 7	       104	vax.c	FUNCTION_1	SWITCH_1
0x40000ef	            0xeb70	                           jmp 0x4000161	       104	vax.c	FUNCTION_1	SWITCH_1
0x40000f1	      0xb80f000000	                            mov eax, 0xf	       104	vax.c	FUNCTION_1	SWITCH_1
0x40000f6	            0xeb69	                           jmp 0x4000161	       104	vax.c	FUNCTION_1	SWITCH_1
0x40000f8	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       106	vax.c	FUNCTION_1	SWITCH_1
0x40000fc	            0x7407	                            je 0x4000105	       106	vax.c	FUNCTION_1	SWITCH_1
0x40000fe	      0xb808000000	                              mov eax, 8	       106	vax.c	FUNCTION_1	SWITCH_1
0x4000103	            0xeb5c	                           jmp 0x4000161	       106	vax.c	FUNCTION_1	SWITCH_1
0x4000105	      0xb810000000	                           mov eax, 0x10	       106	vax.c	FUNCTION_1	SWITCH_1
0x400010a	            0xeb55	                           jmp 0x4000161	       106	vax.c	FUNCTION_1	SWITCH_1
0x400010c	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       108	vax.c	FUNCTION_1	SWITCH_1
0x4000110	            0x7407	                            je 0x4000119	       108	vax.c	FUNCTION_1	SWITCH_1
0x4000112	      0xb809000000	                              mov eax, 9	       108	vax.c	FUNCTION_1	SWITCH_1
0x4000117	            0xeb48	                           jmp 0x4000161	       108	vax.c	FUNCTION_1	SWITCH_1
0x4000119	      0xb811000000	                           mov eax, 0x11	       108	vax.c	FUNCTION_1	SWITCH_1
0x400011e	            0xeb41	                           jmp 0x4000161	       108	vax.c	FUNCTION_1	SWITCH_1
0x4000120	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       110	vax.c	FUNCTION_1	SWITCH_1
0x4000124	            0x7407	                            je 0x400012d	       110	vax.c	FUNCTION_1	SWITCH_1
0x4000126	      0xb80a000000	                            mov eax, 0xa	       110	vax.c	FUNCTION_1	SWITCH_1
0x400012b	            0xeb34	                           jmp 0x4000161	       110	vax.c	FUNCTION_1	SWITCH_1
0x400012d	      0xb812000000	                           mov eax, 0x12	       110	vax.c	FUNCTION_1	SWITCH_1
0x4000132	            0xeb2d	                           jmp 0x4000161	       110	vax.c	FUNCTION_1	SWITCH_1
0x4000134	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       112	vax.c	FUNCTION_1	SWITCH_1
0x4000138	            0x7407	                            je 0x4000141	       112	vax.c	FUNCTION_1	SWITCH_1
0x400013a	      0xb80b000000	                            mov eax, 0xb	       112	vax.c	FUNCTION_1	SWITCH_1
0x400013f	            0xeb20	                           jmp 0x4000161	       112	vax.c	FUNCTION_1	SWITCH_1
0x4000141	      0xb813000000	                           mov eax, 0x13	       112	vax.c	FUNCTION_1	SWITCH_1
0x4000146	            0xeb19	                           jmp 0x4000161	       112	vax.c	FUNCTION_1	SWITCH_1
0x4000148	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       114	vax.c	FUNCTION_1	SWITCH_1
0x400014c	            0x7407	                            je 0x4000155	       114	vax.c	FUNCTION_1	SWITCH_1
0x400014e	      0xb80c000000	                            mov eax, 0xc	       114	vax.c	FUNCTION_1	SWITCH_1
0x4000153	            0xeb0c	                           jmp 0x4000161	       114	vax.c	FUNCTION_1	SWITCH_1
0x4000155	      0xb814000000	                           mov eax, 0x14	       114	vax.c	FUNCTION_1	SWITCH_1
0x400015a	            0xeb05	                           jmp 0x4000161	       114	vax.c	FUNCTION_1	SWITCH_1
0x400015c	      0xe800000000	                          call 0x4000161	       117	vax.c	FUNCTION_1	CALL_1
0x4000161	              0xc9	                                   leave	       118	vax.c	FUNCTION_1
0x4000162	              0xc3	                                     ret	       118	vax.c	FUNCTION_1
vax_operandname	CALL,1:SWITCH,1:FOR,0:DO,0:IF,0:WHILE,0:functions,0:ELSE,0	54
0x4000163	              0x55	                                push rbp	       122	vax.c	FUNCTION_2
0x4000164	          0x4889e5	                            mov rbp, rsp	       122	vax.c	FUNCTION_2
0x4000167	        0x4883ec10	                           sub rsp, 0x10	       122	vax.c	FUNCTION_2
0x400016b	          0x897dfc	                mov dword [rbp - 4], edi	       122	vax.c	FUNCTION_2
0x400016e	        0x837dfc14	               cmp dword [rbp - 4], 0x14	       124	vax.c	FUNCTION_2	SWITCH_1
0x4000172	     0xf87a9000000	                            ja 0x4000221	       124	vax.c	FUNCTION_2	SWITCH_1
0x4000178	          0x8b45fc	                mov eax, dword [rbp - 4]	       124	vax.c	FUNCTION_2	SWITCH_1
0x400017b	    0x488b04c50000	                  mov rax, qword [rax*8]	       124	vax.c	FUNCTION_2	SWITCH_1
0x4000183	            0xffe0	                                 jmp rax	       124	vax.c	FUNCTION_2	SWITCH_1
0x4000185	      0xb800000000	                              mov eax, 0	       127	vax.c	FUNCTION_2	SWITCH_1
0x400018a	      0xe997000000	                           jmp 0x4000226	       127	vax.c	FUNCTION_2	SWITCH_1
0x400018f	      0xb800000000	                              mov eax, 0	       129	vax.c	FUNCTION_2	SWITCH_1
0x4000194	      0xe98d000000	                           jmp 0x4000226	       129	vax.c	FUNCTION_2	SWITCH_1
0x4000199	      0xb800000000	                              mov eax, 0	       131	vax.c	FUNCTION_2	SWITCH_1
0x400019e	      0xe983000000	                           jmp 0x4000226	       131	vax.c	FUNCTION_2	SWITCH_1
0x40001a3	      0xb800000000	                              mov eax, 0	       133	vax.c	FUNCTION_2	SWITCH_1
0x40001a8	            0xeb7c	                           jmp 0x4000226	       133	vax.c	FUNCTION_2	SWITCH_1
0x40001aa	      0xb800000000	                              mov eax, 0	       135	vax.c	FUNCTION_2	SWITCH_1
0x40001af	            0xeb75	                           jmp 0x4000226	       135	vax.c	FUNCTION_2	SWITCH_1
0x40001b1	      0xb800000000	                              mov eax, 0	       137	vax.c	FUNCTION_2	SWITCH_1
0x40001b6	            0xeb6e	                           jmp 0x4000226	       137	vax.c	FUNCTION_2	SWITCH_1
0x40001b8	      0xb800000000	                              mov eax, 0	       139	vax.c	FUNCTION_2	SWITCH_1
0x40001bd	            0xeb67	                           jmp 0x4000226	       139	vax.c	FUNCTION_2	SWITCH_1
0x40001bf	      0xb800000000	                              mov eax, 0	       141	vax.c	FUNCTION_2	SWITCH_1
0x40001c4	            0xeb60	                           jmp 0x4000226	       141	vax.c	FUNCTION_2	SWITCH_1
0x40001c6	      0xb800000000	                              mov eax, 0	       143	vax.c	FUNCTION_2	SWITCH_1
0x40001cb	            0xeb59	                           jmp 0x4000226	       143	vax.c	FUNCTION_2	SWITCH_1
0x40001cd	      0xb800000000	                              mov eax, 0	       145	vax.c	FUNCTION_2	SWITCH_1
0x40001d2	            0xeb52	                           jmp 0x4000226	       145	vax.c	FUNCTION_2	SWITCH_1
0x40001d4	      0xb800000000	                              mov eax, 0	       147	vax.c	FUNCTION_2	SWITCH_1
0x40001d9	            0xeb4b	                           jmp 0x4000226	       147	vax.c	FUNCTION_2	SWITCH_1
0x40001db	      0xb800000000	                              mov eax, 0	       149	vax.c	FUNCTION_2	SWITCH_1
0x40001e0	            0xeb44	                           jmp 0x4000226	       149	vax.c	FUNCTION_2	SWITCH_1
0x40001e2	      0xb800000000	                              mov eax, 0	       151	vax.c	FUNCTION_2	SWITCH_1
0x40001e7	            0xeb3d	                           jmp 0x4000226	       151	vax.c	FUNCTION_2	SWITCH_1
0x40001e9	      0xb800000000	                              mov eax, 0	       153	vax.c	FUNCTION_2	SWITCH_1
0x40001ee	            0xeb36	                           jmp 0x4000226	       153	vax.c	FUNCTION_2	SWITCH_1
0x40001f0	      0xb800000000	                              mov eax, 0	       155	vax.c	FUNCTION_2	SWITCH_1
0x40001f5	            0xeb2f	                           jmp 0x4000226	       155	vax.c	FUNCTION_2	SWITCH_1
0x40001f7	      0xb800000000	                              mov eax, 0	       157	vax.c	FUNCTION_2	SWITCH_1
0x40001fc	            0xeb28	                           jmp 0x4000226	       157	vax.c	FUNCTION_2	SWITCH_1
0x40001fe	      0xb800000000	                              mov eax, 0	       159	vax.c	FUNCTION_2	SWITCH_1
0x4000203	            0xeb21	                           jmp 0x4000226	       159	vax.c	FUNCTION_2	SWITCH_1
0x4000205	      0xb800000000	                              mov eax, 0	       161	vax.c	FUNCTION_2	SWITCH_1
0x400020a	            0xeb1a	                           jmp 0x4000226	       161	vax.c	FUNCTION_2	SWITCH_1
0x400020c	      0xb800000000	                              mov eax, 0	       163	vax.c	FUNCTION_2	SWITCH_1
0x4000211	            0xeb13	                           jmp 0x4000226	       163	vax.c	FUNCTION_2	SWITCH_1
0x4000213	      0xb800000000	                              mov eax, 0	       165	vax.c	FUNCTION_2	SWITCH_1
0x4000218	            0xeb0c	                           jmp 0x4000226	       165	vax.c	FUNCTION_2	SWITCH_1
0x400021a	      0xb800000000	                              mov eax, 0	       167	vax.c	FUNCTION_2	SWITCH_1
0x400021f	            0xeb05	                           jmp 0x4000226	       167	vax.c	FUNCTION_2	SWITCH_1
0x4000221	      0xe800000000	                          call 0x4000226	       170	vax.c	FUNCTION_2	CALL_1
0x4000226	              0xc9	                                   leave	       171	vax.c	FUNCTION_2
0x4000227	              0xc3	                                     ret	       171	vax.c	FUNCTION_2
vax_operandlength	CALL,3:SWITCH,1:FOR,0:DO,0:IF,0:WHILE,0:functions,0:ELSE,0	29
0x4000228	              0x55	                                push rbp	       175	vax.c	FUNCTION_3
0x4000229	          0x4889e5	                            mov rbp, rsp	       175	vax.c	FUNCTION_3
0x400022c	        0x4883ec10	                           sub rsp, 0x10	       175	vax.c	FUNCTION_3
0x4000230	        0x48897df8	                mov qword [rbp - 8], rdi	       175	vax.c	FUNCTION_3
0x4000234	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x4000238	          0x4889c7	                            mov rdi, rax	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x400023b	      0xe800feffff	                call sym.vax_operandmode	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x4000240	          0x83f814	                           cmp eax, 0x14	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x4000243	            0x773e	                            ja 0x4000283	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x4000245	            0x89c0	                            mov eax, eax	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x4000247	    0x488b04c50000	                  mov rax, qword [rax*8]	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x400024f	            0xffe0	                                 jmp rax	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x4000251	      0xb801000000	                              mov eax, 1	       185	vax.c	FUNCTION_3	SWITCH_1
0x4000256	            0xeb30	                           jmp 0x4000288	       185	vax.c	FUNCTION_3	SWITCH_1
0x4000258	      0xb802000000	                              mov eax, 2	       190	vax.c	FUNCTION_3	SWITCH_1
0x400025d	            0xeb29	                           jmp 0x4000288	       190	vax.c	FUNCTION_3	SWITCH_1
0x400025f	      0xb803000000	                              mov eax, 3	       195	vax.c	FUNCTION_3	SWITCH_1
0x4000264	            0xeb22	                           jmp 0x4000288	       195	vax.c	FUNCTION_3	SWITCH_1
0x4000266	      0xb805000000	                              mov eax, 5	       202	vax.c	FUNCTION_3	SWITCH_1
0x400026b	            0xeb1b	                           jmp 0x4000288	       202	vax.c	FUNCTION_3	SWITCH_1
0x400026d	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	vax.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000271	        0x4883c001	                              add rax, 1	       204	vax.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000275	          0x4889c7	                            mov rdi, rax	       204	vax.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000278	      0xe8abffffff	              call sym.vax_operandlength	       204	vax.c	FUNCTION_3	SWITCH_1	CALL_2
0x400027d	        0x4883c001	                              add rax, 1	       204	vax.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000281	            0xeb05	                           jmp 0x4000288	       204	vax.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000283	      0xe800000000	                          call 0x4000288	       207	vax.c	FUNCTION_3	CALL_3
0x4000288	              0xc9	                                   leave	       208	vax.c	FUNCTION_3
0x4000289	              0xc3	                                     ret	       208	vax.c	FUNCTION_3
vax_offset	CALL,5:SWITCH,1:FOR,0:DO,0:IF,0:WHILE,0:functions,0:ELSE,0	48
0x400028a	              0x55	                                push rbp	       212	vax.c	FUNCTION_4
0x400028b	          0x4889e5	                            mov rbp, rsp	       212	vax.c	FUNCTION_4
0x400028e	        0x4883ec20	                           sub rsp, 0x20	       212	vax.c	FUNCTION_4
0x4000292	        0x48897de8	             mov qword [rbp - 0x18], rdi	       212	vax.c	FUNCTION_4
0x4000296	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	vax.c	FUNCTION_4	CALL_1
0x400029a	          0x4889c7	                            mov rdi, rax	       213	vax.c	FUNCTION_4	CALL_1
0x400029d	      0xe89efdffff	                call sym.vax_operandmode	       213	vax.c	FUNCTION_4	CALL_1
0x40002a2	          0x8945fc	                mov dword [rbp - 4], eax	       213	vax.c	FUNCTION_4	CALL_1
0x40002a5	      0x488345e801	               add qword [rbp - 0x18], 1	       215	vax.c	FUNCTION_4
0x40002aa	          0x8b45fc	                mov eax, dword [rbp - 4]	       216	vax.c	FUNCTION_4	SWITCH_1
0x40002ad	          0x83f811	                           cmp eax, 0x11	       216	vax.c	FUNCTION_4	SWITCH_1
0x40002b0	            0x7443	                            je 0x40002f5	       216	vax.c	FUNCTION_4	SWITCH_1
0x40002b2	          0x83f813	                           cmp eax, 0x13	       216	vax.c	FUNCTION_4	SWITCH_1
0x40002b5	            0x745c	                            je 0x4000313	       216	vax.c	FUNCTION_4	SWITCH_1
0x40002b7	          0x83f80f	                            cmp eax, 0xf	       216	vax.c	FUNCTION_4	SWITCH_1
0x40002ba	            0x7425	                            je 0x40002e1	       216	vax.c	FUNCTION_4	SWITCH_1
0x40002bc	    0x488b05000000	            mov rax, qword [0x040002c3] 	       219	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40002c3	          0x4889c1	                            mov rcx, rax	       219	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40002c6	      0xba1f000000	                           mov edx, 0x1f	       219	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40002cb	      0xbe01000000	                              mov esi, 1	       219	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40002d0	      0xbf00000000	                              mov edi, 0	       219	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40002d5	      0xe800000000	                          call 0x40002da	       219	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40002da	      0xb800000000	                              mov eax, 0	       220	vax.c	FUNCTION_4	SWITCH_1
0x40002df	            0xeb4e	                           jmp 0x400032f	       220	vax.c	FUNCTION_4	SWITCH_1
0x40002e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40002e5	           0xfb600	                   movzx eax, byte [rax]	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40002e8	          0x83f080	                     xor eax, 0xffffff80	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40002eb	           0xfb6c0	                           movzx eax, al	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40002ee	          0x83e87f	                           sub eax, 0x7f	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40002f1	            0x4898	                                    cdqe	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40002f3	            0xeb3a	                           jmp 0x400032f	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40002f5	    0x488b05000000	            mov rax, qword [0x040002fc] 	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x40002fc	        0x488b4008	                mov rax, qword [rax + 8]	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x4000300	        0x488b4058	            mov rax, qword [rax + 0x58] 	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x4000304	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x4000308	          0x4889d7	                            mov rdi, rdx	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x400030b	            0xffd0	                                call rax	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x400030d	        0x4883c002	                              add rax, 2	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x4000311	            0xeb1c	                           jmp 0x400032f	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x4000313	    0x488b05000000	            mov rax, qword [0x0400031a] 	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_5
0x400031a	        0x488b4008	                mov rax, qword [rax + 8]	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_5
0x400031e	        0x488b4040	            mov rax, qword [rax + 0x40] 	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_5
0x4000322	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_5
0x4000326	          0x4889d7	                            mov rdi, rdx	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_5
0x4000329	            0xffd0	                                call rax	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_5
0x400032b	        0x4883c004	                              add rax, 4	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_5
0x400032f	              0xc9	                                   leave	       228	vax.c	FUNCTION_4
0x4000330	              0xc3	                                     ret	       228	vax.c	FUNCTION_4
