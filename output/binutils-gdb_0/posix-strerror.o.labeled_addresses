safe_strerror	SWITCH,0:WHILE,0:FOR,0:ELSE,0:IF,1:functions,0:CALL,2:DO,0	16
0x4000040	              0x53	                                push rbx	        26	posix-strerror.c	FUNCTION_1
0x4000041	            0x89fb	                            mov ebx, edi	        26	posix-strerror.c	FUNCTION_1
0x4000043	      0xe800000000	                          call 0x4000048	        29	posix-strerror.c	FUNCTION_1	CALL_1
0x4000048	          0x4885c0	                           test rax, rax	        30	posix-strerror.c	FUNCTION_1	IF_1
0x400004b	            0x7403	                            je 0x4000050	        30	posix-strerror.c	FUNCTION_1	IF_1
0x400004d	              0x5b	                                 pop rbx	        38	posix-strerror.c	FUNCTION_1
0x400004e	              0xc3	                                     ret	        38	posix-strerror.c	FUNCTION_1
0x400004f	              0x90	                                     nop	        38	posix-strerror.c	FUNCTION_1
0x4000050	            0x89d9	                            mov ecx, ebx	        34	posix-strerror.c	FUNCTION_1	IF_1	CALL_2
0x4000052	      0xba00000000	                              mov edx, 0	        34	posix-strerror.c	FUNCTION_1	IF_1	CALL_2
0x4000057	      0xbe20000000	                           mov esi, 0x20	        34	posix-strerror.c	FUNCTION_1	IF_1	CALL_2
0x400005c	      0xbf00000000	                              mov edi, 0	        34	posix-strerror.c	FUNCTION_1	IF_1	CALL_2
0x4000061	      0xe800000000	                          call 0x4000066	        34	posix-strerror.c	FUNCTION_1	IF_1	CALL_2
0x4000066	      0xb800000000	                              mov eax, 0	        35	posix-strerror.c	FUNCTION_1	IF_1
0x400006b	              0x5b	                                 pop rbx	        38	posix-strerror.c	FUNCTION_1
0x400006c	              0xc3	                                     ret	        38	posix-strerror.c	FUNCTION_1
