bfd_check_overflow	DO,0:SWITCH,1:ELSE,0:IF,2:WHILE,0:CALL,1:FOR,0:functions,0	93
0x40000bc	              0x55	                                push rbp	       494	reloc.c	FUNCTION_2
0x40000bd	          0x4889e5	                            mov rbp, rsp	       494	reloc.c	FUNCTION_2
0x40000c0	        0x4883ec50	                           sub rsp, 0x50	       494	reloc.c	FUNCTION_2
0x40000c4	          0x897dcc	             mov dword [rbp - 0x34], edi	       494	reloc.c	FUNCTION_2
0x40000c7	          0x8975c8	             mov dword [rbp - 0x38], esi	       494	reloc.c	FUNCTION_2
0x40000ca	          0x8955c4	             mov dword [rbp - 0x3c], edx	       494	reloc.c	FUNCTION_2
0x40000cd	          0x894dc0	             mov dword [rbp - 0x40], ecx	       494	reloc.c	FUNCTION_2
0x40000d0	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       494	reloc.c	FUNCTION_2
0x40000d4	    0xc745d4020000	               mov dword [rbp - 0x2c], 2	       496	reloc.c	FUNCTION_2
0x40000db	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       502	reloc.c	FUNCTION_2
0x40000de	          0x83e801	                              sub eax, 1	       502	reloc.c	FUNCTION_2
0x40000e1	      0xba01000000	                              mov edx, 1	       502	reloc.c	FUNCTION_2
0x40000e6	            0x89c1	                            mov ecx, eax	       502	reloc.c	FUNCTION_2
0x40000e8	          0x48d3e2	                             shl rdx, cl	       502	reloc.c	FUNCTION_2
0x40000eb	          0x4889d0	                            mov rax, rdx	       502	reloc.c	FUNCTION_2
0x40000ee	        0x4883e801	                              sub rax, 1	       502	reloc.c	FUNCTION_2
0x40000f2	          0x4801c0	                            add rax, rax	       502	reloc.c	FUNCTION_2
0x40000f5	        0x4883c801	                               or rax, 1	       502	reloc.c	FUNCTION_2
0x40000f9	        0x488945e0	             mov qword [rbp - 0x20], rax	       502	reloc.c	FUNCTION_2
0x40000fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       503	reloc.c	FUNCTION_2
0x4000101	          0x48f7d0	                                 not rax	       503	reloc.c	FUNCTION_2
0x4000104	        0x488945d8	             mov qword [rbp - 0x28], rax	       503	reloc.c	FUNCTION_2
0x4000108	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       504	reloc.c	FUNCTION_2
0x400010b	          0x83e801	                              sub eax, 1	       504	reloc.c	FUNCTION_2
0x400010e	      0xba01000000	                              mov edx, 1	       504	reloc.c	FUNCTION_2
0x4000113	            0x89c1	                            mov ecx, eax	       504	reloc.c	FUNCTION_2
0x4000115	          0x48d3e2	                             shl rdx, cl	       504	reloc.c	FUNCTION_2
0x4000118	          0x4889d0	                            mov rax, rdx	       504	reloc.c	FUNCTION_2
0x400011b	        0x4883e801	                              sub rax, 1	       504	reloc.c	FUNCTION_2
0x400011f	        0x488d3400	                    lea rsi, [rax + rax]	       504	reloc.c	FUNCTION_2
0x4000123	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       504	reloc.c	FUNCTION_2
0x4000126	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       504	reloc.c	FUNCTION_2
0x400012a	            0x89c1	                            mov ecx, eax	       504	reloc.c	FUNCTION_2
0x400012c	          0x48d3e2	                             shl rdx, cl	       504	reloc.c	FUNCTION_2
0x400012f	          0x4889d0	                            mov rax, rdx	       504	reloc.c	FUNCTION_2
0x4000132	          0x4809f0	                             or rax, rsi	       504	reloc.c	FUNCTION_2
0x4000135	        0x4883c801	                               or rax, 1	       504	reloc.c	FUNCTION_2
0x4000139	        0x488945e8	             mov qword [rbp - 0x18], rax	       504	reloc.c	FUNCTION_2
0x400013d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       505	reloc.c	FUNCTION_2
0x4000141	        0x482345e8	             and rax, qword [rbp - 0x18]	       505	reloc.c	FUNCTION_2
0x4000145	          0x4889c2	                            mov rdx, rax	       505	reloc.c	FUNCTION_2
0x4000148	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       505	reloc.c	FUNCTION_2
0x400014b	            0x89c1	                            mov ecx, eax	       505	reloc.c	FUNCTION_2
0x400014d	          0x48d3ea	                             shr rdx, cl	       505	reloc.c	FUNCTION_2
0x4000150	          0x4889d0	                            mov rax, rdx	       505	reloc.c	FUNCTION_2
0x4000153	        0x488945f0	             mov qword [rbp - 0x10], rax	       505	reloc.c	FUNCTION_2
0x4000157	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       507	reloc.c	FUNCTION_2	SWITCH_1
0x400015a	          0x83f801	                              cmp eax, 1	       507	reloc.c	FUNCTION_2	SWITCH_1
0x400015d	            0x741f	                            je 0x400017e	       507	reloc.c	FUNCTION_2	SWITCH_1
0x400015f	          0x83f801	                              cmp eax, 1	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000162	            0x7279	                            jb 0x40001dd	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000164	          0x83f802	                              cmp eax, 2	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000167	            0x7407	                            je 0x4000170	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000169	          0x83f803	                              cmp eax, 3	       507	reloc.c	FUNCTION_2	SWITCH_1
0x400016c	            0x7445	                            je 0x40001b3	       507	reloc.c	FUNCTION_2	SWITCH_1
0x400016e	            0xeb59	                           jmp 0x40001c9	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000170	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4000174	          0x48d1e8	                              shr rax, 1	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4000177	          0x48f7d0	                                 not rax	       515	reloc.c	FUNCTION_2	SWITCH_1
0x400017a	        0x488945d8	             mov qword [rbp - 0x28], rax	       515	reloc.c	FUNCTION_2	SWITCH_1
0x400017e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       524	reloc.c	FUNCTION_2	SWITCH_1
0x4000182	        0x482345d8	             and rax, qword [rbp - 0x28]	       524	reloc.c	FUNCTION_2	SWITCH_1
0x4000186	        0x488945f8	                mov qword [rbp - 8], rax	       524	reloc.c	FUNCTION_2	SWITCH_1
0x400018a	      0x48837df800	                  cmp qword [rbp - 8], 0	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400018f	            0x744f	                            je 0x40001e0	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000191	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000194	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000198	            0x89c1	                            mov ecx, eax	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400019a	          0x48d3ea	                             shr rdx, cl	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400019d	          0x4889d0	                            mov rax, rdx	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x40001a0	        0x482345d8	             and rax, qword [rbp - 0x28]	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x40001a4	        0x483b45f8	                cmp rax, qword [rbp - 8]	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x40001a8	            0x7436	                            je 0x40001e0	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x40001aa	    0xc745d4030000	               mov dword [rbp - 0x2c], 3	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x40001b1	            0xeb2d	                           jmp 0x40001e0	       527	reloc.c	FUNCTION_2	SWITCH_1
0x40001b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x40001b7	        0x482345d8	             and rax, qword [rbp - 0x28]	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x40001bb	          0x4885c0	                           test rax, rax	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x40001be	            0x7423	                            je 0x40001e3	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x40001c0	    0xc745d4030000	               mov dword [rbp - 0x2c], 3	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x40001c7	            0xeb1a	                           jmp 0x40001e3	       533	reloc.c	FUNCTION_2	SWITCH_1
0x40001c9	      0xba00000000	                              mov edx, 0	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x40001ce	      0xbe18020000	                          mov esi, 0x218	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x40001d3	      0xbf00000000	                              mov edi, 0	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x40001d8	      0xe800000000	                          call 0x40001dd	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x40001dd	              0x90	                                     nop	       510	reloc.c	FUNCTION_2	SWITCH_1
0x40001de	            0xeb04	                           jmp 0x40001e4	       510	reloc.c	FUNCTION_2	SWITCH_1
0x40001e0	              0x90	                                     nop	       527	reloc.c	FUNCTION_2	SWITCH_1
0x40001e1	            0xeb01	                           jmp 0x40001e4	       527	reloc.c	FUNCTION_2	SWITCH_1
0x40001e3	              0x90	                                     nop	       533	reloc.c	FUNCTION_2	SWITCH_1
0x40001e4	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       539	reloc.c	FUNCTION_2
0x40001e7	              0xc9	                                   leave	       540	reloc.c	FUNCTION_2
0x40001e8	              0xc3	                                     ret	       540	reloc.c	FUNCTION_2
bfd_generic_relax_section	DO,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,2:FOR,0:functions,0	29
0x400174f	              0x55	                                push rbp	      8109	reloc.c	FUNCTION_13
0x4001750	          0x4889e5	                            mov rbp, rsp	      8109	reloc.c	FUNCTION_13
0x4001753	              0x53	                                push rbx	      8109	reloc.c	FUNCTION_13
0x4001754	        0x4883ec28	                           sub rsp, 0x28	      8109	reloc.c	FUNCTION_13
0x4001758	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8109	reloc.c	FUNCTION_13
0x400175c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8109	reloc.c	FUNCTION_13
0x4001760	        0x488955d8	             mov qword [rbp - 0x28], rdx	      8109	reloc.c	FUNCTION_13
0x4001764	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      8109	reloc.c	FUNCTION_13
0x4001768	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x400176c	           0xfb600	                   movzx eax, byte [rax]	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x400176f	          0x83e003	                              and eax, 3	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4001772	            0x3c02	                               cmp al, 2	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4001774	            0x7525	                           jne 0x400179b	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4001776	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8111	reloc.c	FUNCTION_13	IF_1
0x400177a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8111	reloc.c	FUNCTION_13	IF_1
0x400177e	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      8111	reloc.c	FUNCTION_13	IF_1
0x4001782	      0xbe00000000	                              mov esi, 0	      8112	reloc.c	FUNCTION_13	CALL_2
0x4001787	      0xbf00000000	                              mov edi, 0	      8112	reloc.c	FUNCTION_13	CALL_2
0x400178c	      0xe800000000	                          call 0x4001791	      8112	reloc.c	FUNCTION_13	CALL_2
0x4001791	          0x4889c7	                            mov rdi, rax	      8111	reloc.c	FUNCTION_13	IF_1
0x4001794	      0xb800000000	                              mov eax, 0	      8111	reloc.c	FUNCTION_13	IF_1
0x4001799	            0xffd3	                                call rbx	      8111	reloc.c	FUNCTION_13	IF_1
0x400179b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8114	reloc.c	FUNCTION_13
0x400179f	    0xc70000000000	                      mov dword [rax], 0	      8114	reloc.c	FUNCTION_13
0x40017a5	      0xb801000000	                              mov eax, 1	      8115	reloc.c	FUNCTION_13
0x40017aa	        0x4883c428	                           add rsp, 0x28	      8116	reloc.c	FUNCTION_13
0x40017ae	              0x5b	                                 pop rbx	      8116	reloc.c	FUNCTION_13
0x40017af	              0x5d	                                 pop rbp	      8116	reloc.c	FUNCTION_13
0x40017b0	              0xc3	                                     ret	      8116	reloc.c	FUNCTION_13
_bfd_relocate_contents	DO,0:SWITCH,3:ELSE,0:IF,5:WHILE,0:CALL,15:FOR,0:functions,0	270
0x4001108	              0x55	                                push rbp	      1444	reloc.c	FUNCTION_7
0x4001109	          0x4889e5	                            mov rbp, rsp	      1444	reloc.c	FUNCTION_7
0x400110c	        0x4883ec70	                           sub rsp, 0x70	      1444	reloc.c	FUNCTION_7
0x4001110	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1444	reloc.c	FUNCTION_7
0x4001114	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1444	reloc.c	FUNCTION_7
0x4001118	        0x48895598	             mov qword [rbp - 0x68], rdx	      1444	reloc.c	FUNCTION_7
0x400111c	        0x48894d90	             mov qword [rbp - 0x70], rcx	      1444	reloc.c	FUNCTION_7
0x4001120	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1446	reloc.c	FUNCTION_7
0x4001128	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1448	reloc.c	FUNCTION_7
0x400112c	          0x8b4004	                mov eax, dword [rax + 4]	      1448	reloc.c	FUNCTION_7
0x400112f	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1448	reloc.c	FUNCTION_7
0x4001132	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1449	reloc.c	FUNCTION_7
0x4001136	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1449	reloc.c	FUNCTION_7
0x4001139	          0x8945b8	             mov dword [rbp - 0x48], eax	      1449	reloc.c	FUNCTION_7
0x400113c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1453	reloc.c	FUNCTION_7	IF_1
0x4001140	          0x8b4008	                mov eax, dword [rax + 8]	      1453	reloc.c	FUNCTION_7	IF_1
0x4001143	            0x85c0	                           test eax, eax	      1453	reloc.c	FUNCTION_7	IF_1
0x4001145	            0x7904	                           jns 0x400114b	      1453	reloc.c	FUNCTION_7	IF_1
0x4001147	        0x48f75d98	                  neg qword [rbp - 0x68]	      1454	reloc.c	FUNCTION_7	IF_1
0x400114b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1457	reloc.c	FUNCTION_7	CALL_1
0x400114f	          0x4889c7	                            mov rdi, rax	      1457	reloc.c	FUNCTION_7	CALL_1
0x4001152	      0xe800000000	                          call 0x4001157	      1457	reloc.c	FUNCTION_7	CALL_1
0x4001157	          0x8945bc	             mov dword [rbp - 0x44], eax	      1457	reloc.c	FUNCTION_7	CALL_1
0x400115a	        0x837dbc08	               cmp dword [rbp - 0x44], 8	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x400115e	            0x770d	                            ja 0x400116d	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x4001160	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x4001163	    0x488b04c50000	                  mov rax, qword [rax*8]	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x400116b	            0xffe0	                                 jmp rax	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x400116d	      0xba00000000	                              mov edx, 0	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4001172	      0xbeb5050000	                          mov esi, 0x5b5	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4001177	      0xbf00000000	                              mov edi, 0	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x400117c	      0xe800000000	                          call 0x4001181	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4001181	      0xb802000000	                              mov eax, 2	      1463	reloc.c	FUNCTION_7	SWITCH_1
0x4001186	      0xe927030000	                           jmp 0x40014b2	      1463	reloc.c	FUNCTION_7	SWITCH_1
0x400118b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1465	reloc.c	FUNCTION_7	SWITCH_1	CALL_3
0x400118f	           0xfb600	                   movzx eax, byte [rax]	      1465	reloc.c	FUNCTION_7	SWITCH_1	CALL_3
0x4001192	           0xfb6c0	                           movzx eax, al	      1465	reloc.c	FUNCTION_7	SWITCH_1	CALL_3
0x4001195	        0x488945c0	             mov qword [rbp - 0x40], rax	      1465	reloc.c	FUNCTION_7	SWITCH_1	CALL_3
0x4001199	            0xeb50	                           jmp 0x40011eb	      1466	reloc.c	FUNCTION_7	SWITCH_1
0x400119b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x400119f	        0x488b4008	                mov rax, qword [rax + 8]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x40011a3	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x40011a7	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x40011ab	          0x4889d7	                            mov rdi, rdx	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x40011ae	            0xffd0	                                call rax	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x40011b0	        0x488945c0	             mov qword [rbp - 0x40], rax	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x40011b4	            0xeb35	                           jmp 0x40011eb	      1469	reloc.c	FUNCTION_7	SWITCH_1
0x40011b6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x40011ba	        0x488b4008	                mov rax, qword [rax + 8]	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x40011be	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x40011c2	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x40011c6	          0x4889d7	                            mov rdi, rdx	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x40011c9	            0xffd0	                                call rax	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x40011cb	        0x488945c0	             mov qword [rbp - 0x40], rax	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x40011cf	            0xeb1a	                           jmp 0x40011eb	      1472	reloc.c	FUNCTION_7	SWITCH_1
0x40011d1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x40011d5	        0x488b4008	                mov rax, qword [rax + 8]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x40011d9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x40011dd	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x40011e1	          0x4889d7	                            mov rdi, rdx	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x40011e4	            0xffd0	                                call rax	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x40011e6	        0x488945c0	             mov qword [rbp - 0x40], rax	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x40011ea	              0x90	                                     nop	      1479	reloc.c	FUNCTION_7	SWITCH_1
0x40011eb	    0xc745b0020000	               mov dword [rbp - 0x50], 2	      1486	reloc.c	FUNCTION_7
0x40011f2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1487	reloc.c	FUNCTION_7	IF_2
0x40011f6	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1487	reloc.c	FUNCTION_7	IF_2
0x40011f9	            0x85c0	                           test eax, eax	      1487	reloc.c	FUNCTION_7	IF_2
0x40011fb	     0xf84c9010000	                            je 0x40013ca	      1487	reloc.c	FUNCTION_7	IF_2
0x4001201	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1496	reloc.c	FUNCTION_7	IF_2
0x4001205	          0x8b400c	              mov eax, dword [rax + 0xc]	      1496	reloc.c	FUNCTION_7	IF_2
0x4001208	          0x83e801	                              sub eax, 1	      1496	reloc.c	FUNCTION_7	IF_2
0x400120b	      0xba01000000	                              mov edx, 1	      1496	reloc.c	FUNCTION_7	IF_2
0x4001210	            0x89c1	                            mov ecx, eax	      1496	reloc.c	FUNCTION_7	IF_2
0x4001212	          0x48d3e2	                             shl rdx, cl	      1496	reloc.c	FUNCTION_7	IF_2
0x4001215	          0x4889d0	                            mov rax, rdx	      1496	reloc.c	FUNCTION_7	IF_2
0x4001218	        0x4883e801	                              sub rax, 1	      1496	reloc.c	FUNCTION_7	IF_2
0x400121c	          0x4801c0	                            add rax, rax	      1496	reloc.c	FUNCTION_7	IF_2
0x400121f	        0x4883c801	                               or rax, 1	      1496	reloc.c	FUNCTION_7	IF_2
0x4001223	        0x488945d0	             mov qword [rbp - 0x30], rax	      1496	reloc.c	FUNCTION_7	IF_2
0x4001227	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1497	reloc.c	FUNCTION_7	IF_2
0x400122b	          0x48f7d0	                                 not rax	      1497	reloc.c	FUNCTION_7	IF_2
0x400122e	        0x488945c8	             mov qword [rbp - 0x38], rax	      1497	reloc.c	FUNCTION_7	IF_2
0x4001232	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4001236	          0x4889c7	                            mov rdi, rax	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4001239	      0xe800000000	                          call 0x400123e	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x400123e	          0x83e801	                              sub eax, 1	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4001241	      0xba01000000	                              mov edx, 1	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4001246	            0x89c1	                            mov ecx, eax	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4001248	          0x48d3e2	                             shl rdx, cl	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x400124b	          0x4889d0	                            mov rax, rdx	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x400124e	        0x4883e801	                              sub rax, 1	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4001252	        0x488d3400	                    lea rsi, [rax + rax]	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4001256	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1499	reloc.c	FUNCTION_7	IF_2
0x4001259	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1499	reloc.c	FUNCTION_7	IF_2
0x400125d	            0x89c1	                            mov ecx, eax	      1499	reloc.c	FUNCTION_7	IF_2
0x400125f	          0x48d3e2	                             shl rdx, cl	      1499	reloc.c	FUNCTION_7	IF_2
0x4001262	          0x4889d0	                            mov rax, rdx	      1499	reloc.c	FUNCTION_7	IF_2
0x4001265	          0x4809f0	                             or rax, rsi	      1499	reloc.c	FUNCTION_7	IF_2
0x4001268	        0x4883c801	                               or rax, 1	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x400126c	        0x488945d8	             mov qword [rbp - 0x28], rax	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4001270	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1500	reloc.c	FUNCTION_7	IF_2
0x4001274	        0x482345d8	             and rax, qword [rbp - 0x28]	      1500	reloc.c	FUNCTION_7	IF_2
0x4001278	          0x4889c2	                            mov rdx, rax	      1500	reloc.c	FUNCTION_7	IF_2
0x400127b	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1500	reloc.c	FUNCTION_7	IF_2
0x400127e	            0x89c1	                            mov ecx, eax	      1500	reloc.c	FUNCTION_7	IF_2
0x4001280	          0x48d3ea	                             shr rdx, cl	      1500	reloc.c	FUNCTION_7	IF_2
0x4001283	          0x4889d0	                            mov rax, rdx	      1500	reloc.c	FUNCTION_7	IF_2
0x4001286	        0x488945e0	             mov qword [rbp - 0x20], rax	      1500	reloc.c	FUNCTION_7	IF_2
0x400128a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1501	reloc.c	FUNCTION_7	IF_2
0x400128e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1501	reloc.c	FUNCTION_7	IF_2
0x4001292	        0x482345c0	             and rax, qword [rbp - 0x40]	      1501	reloc.c	FUNCTION_7	IF_2
0x4001296	        0x482345d8	             and rax, qword [rbp - 0x28]	      1501	reloc.c	FUNCTION_7	IF_2
0x400129a	          0x4889c2	                            mov rdx, rax	      1501	reloc.c	FUNCTION_7	IF_2
0x400129d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1501	reloc.c	FUNCTION_7	IF_2
0x40012a0	            0x89c1	                            mov ecx, eax	      1501	reloc.c	FUNCTION_7	IF_2
0x40012a2	          0x48d3ea	                             shr rdx, cl	      1501	reloc.c	FUNCTION_7	IF_2
0x40012a5	          0x4889d0	                            mov rax, rdx	      1501	reloc.c	FUNCTION_7	IF_2
0x40012a8	        0x488945e8	             mov qword [rbp - 0x18], rax	      1501	reloc.c	FUNCTION_7	IF_2
0x40012ac	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1502	reloc.c	FUNCTION_7	IF_2
0x40012af	            0x89c1	                            mov ecx, eax	      1502	reloc.c	FUNCTION_7	IF_2
0x40012b1	        0x48d36dd8	              shr qword [rbp - 0x28], cl	      1502	reloc.c	FUNCTION_7	IF_2
0x40012b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012b9	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012bc	          0x83f802	                              cmp eax, 2	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012bf	            0x7413	                            je 0x40012d4	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012c1	          0x83f803	                              cmp eax, 3	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012c4	     0xf84b7000000	                            je 0x4001381	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012ca	          0x83f801	                              cmp eax, 1	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012cd	            0x7413	                            je 0x40012e2	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012cf	      0xe9de000000	                           jmp 0x40013b2	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012d8	          0x48d1e8	                              shr rax, 1	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012db	          0x48f7d0	                                 not rax	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012de	        0x488945c8	             mov qword [rbp - 0x38], rax	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1519	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012e6	        0x482345c8	             and rax, qword [rbp - 0x38]	      1519	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012ea	        0x488945f0	             mov qword [rbp - 0x10], rax	      1519	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40012ee	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x40012f3	            0x7415	                            je 0x400130a	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x40012f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x40012f9	        0x482345c8	             and rax, qword [rbp - 0x38]	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x40012fd	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4001301	            0x7407	                            je 0x400130a	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4001303	    0xc745b0030000	               mov dword [rbp - 0x50], 3	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x400130a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400130e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001312	          0x48f7d0	                                 not rax	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001315	          0x48d1e8	                              shr rax, 1	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001318	          0x4889c2	                            mov rdx, rax	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400131b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400131f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001323	          0x4821d0	                            and rax, rdx	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001326	        0x488945f0	             mov qword [rbp - 0x10], rax	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400132a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1530	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400132d	            0x89c1	                            mov ecx, eax	      1530	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400132f	        0x48d36df0	              shr qword [rbp - 0x10], cl	      1530	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001333	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1533	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001337	        0x483345f0	             xor rax, qword [rbp - 0x10]	      1533	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400133b	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      1533	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400133f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1533	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001343	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1536	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001347	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1536	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400134b	          0x4801d0	                            add rax, rdx	      1536	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400134e	        0x488945f8	                mov qword [rbp - 8], rax	      1536	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001352	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4001356	        0x483345e8	             xor rax, qword [rbp - 0x18]	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x400135a	          0x48f7d0	                                 not rax	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x400135d	          0x4889c2	                            mov rdx, rax	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4001360	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4001364	        0x483345f8	                xor rax, qword [rbp - 8]	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4001368	          0x4821d0	                            and rax, rdx	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x400136b	        0x482345c8	             and rax, qword [rbp - 0x38]	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x400136f	        0x482345d8	             and rax, qword [rbp - 0x28]	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4001373	          0x4885c0	                           test rax, rax	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4001376	            0x744e	                            je 0x40013c6	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4001378	    0xc745b0030000	               mov dword [rbp - 0x50], 3	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x400137f	            0xeb45	                           jmp 0x40013c6	      1553	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001381	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1567	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001385	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1567	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001389	          0x4801d0	                            add rax, rdx	      1567	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400138c	        0x482345d8	             and rax, qword [rbp - 0x28]	      1567	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001390	        0x488945f8	                mov qword [rbp - 8], rax	      1567	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001394	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4001398	        0x480b45e8	              or rax, qword [rbp - 0x18]	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x400139c	        0x480b45f8	                 or rax, qword [rbp - 8]	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x40013a0	        0x482345c8	             and rax, qword [rbp - 0x38]	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x40013a4	          0x4885c0	                           test rax, rax	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x40013a7	            0x7420	                            je 0x40013c9	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x40013a9	    0xc745b0030000	               mov dword [rbp - 0x50], 3	      1569	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x40013b0	            0xeb17	                           jmp 0x40013c9	      1570	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40013b2	      0xba00000000	                              mov edx, 0	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x40013b7	      0xbe25060000	                          mov esi, 0x625	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x40013bc	      0xbf00000000	                              mov edi, 0	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x40013c1	      0xe800000000	                          call 0x40013c6	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x40013c6	              0x90	                                     nop	      1553	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40013c7	            0xeb01	                           jmp 0x40013ca	      1553	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40013c9	              0x90	                                     nop	      1570	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40013ca	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1578	reloc.c	FUNCTION_7
0x40013cd	            0x89c1	                            mov ecx, eax	      1578	reloc.c	FUNCTION_7
0x40013cf	        0x48d36d98	              shr qword [rbp - 0x68], cl	      1578	reloc.c	FUNCTION_7
0x40013d3	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1579	reloc.c	FUNCTION_7
0x40013d6	            0x89c1	                            mov ecx, eax	      1579	reloc.c	FUNCTION_7
0x40013d8	        0x48d36598	              shl qword [rbp - 0x68], cl	      1579	reloc.c	FUNCTION_7
0x40013dc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1582	reloc.c	FUNCTION_7
0x40013e0	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1582	reloc.c	FUNCTION_7
0x40013e4	          0x48f7d0	                                 not rax	      1582	reloc.c	FUNCTION_7
0x40013e7	        0x482345c0	             and rax, qword [rbp - 0x40]	      1582	reloc.c	FUNCTION_7
0x40013eb	          0x4889c2	                            mov rdx, rax	      1582	reloc.c	FUNCTION_7
0x40013ee	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1583	reloc.c	FUNCTION_7
0x40013f2	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1583	reloc.c	FUNCTION_7
0x40013f6	        0x482345c0	             and rax, qword [rbp - 0x40]	      1583	reloc.c	FUNCTION_7
0x40013fa	          0x4889c1	                            mov rcx, rax	      1583	reloc.c	FUNCTION_7
0x40013fd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1583	reloc.c	FUNCTION_7
0x4001401	          0x4801c1	                            add rcx, rax	      1583	reloc.c	FUNCTION_7
0x4001404	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1583	reloc.c	FUNCTION_7
0x4001408	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1583	reloc.c	FUNCTION_7
0x400140c	          0x4821c8	                            and rax, rcx	      1583	reloc.c	FUNCTION_7
0x400140f	          0x4809d0	                             or rax, rdx	      1582	reloc.c	FUNCTION_7
0x4001412	        0x488945c0	             mov qword [rbp - 0x40], rax	      1582	reloc.c	FUNCTION_7
0x4001416	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4001419	          0x83f802	                              cmp eax, 2	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x400141c	            0x7438	                            je 0x4001456	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x400141e	          0x83f802	                              cmp eax, 2	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4001421	            0x7f07	                            jg 0x400142a	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4001423	          0x83f801	                              cmp eax, 1	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4001426	            0x7420	                            je 0x4001448	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4001428	            0xeb0a	                           jmp 0x4001434	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x400142a	          0x83f804	                              cmp eax, 4	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x400142d	            0x7445	                            je 0x4001474	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x400142f	          0x83f808	                              cmp eax, 8	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4001432	            0x745e	                            je 0x4001492	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4001434	      0xba00000000	                              mov edx, 0	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4001439	      0xbe35060000	                          mov esi, 0x635	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x400143e	      0xbf00000000	                              mov edi, 0	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4001443	      0xe800000000	                          call 0x4001448	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4001448	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1591	reloc.c	FUNCTION_7	SWITCH_3	CALL_11
0x400144c	            0x89c2	                            mov edx, eax	      1591	reloc.c	FUNCTION_7	SWITCH_3	CALL_11
0x400144e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1591	reloc.c	FUNCTION_7	SWITCH_3	CALL_11
0x4001452	            0x8810	                      mov byte [rax], dl	      1591	reloc.c	FUNCTION_7	SWITCH_3	CALL_11
0x4001454	            0xeb59	                           jmp 0x40014af	      1592	reloc.c	FUNCTION_7	SWITCH_3
0x4001456	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x400145a	        0x488b4008	                mov rax, qword [rax + 8]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x400145e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4001462	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4001466	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x400146a	          0x4889ce	                            mov rsi, rcx	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x400146d	          0x4889d7	                            mov rdi, rdx	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4001470	            0xffd0	                                call rax	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4001472	            0xeb3b	                           jmp 0x40014af	      1595	reloc.c	FUNCTION_7	SWITCH_3
0x4001474	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4001478	        0x488b4008	                mov rax, qword [rax + 8]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x400147c	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4001480	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4001484	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4001488	          0x4889ce	                            mov rsi, rcx	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x400148b	          0x4889d7	                            mov rdi, rdx	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x400148e	            0xffd0	                                call rax	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4001490	            0xeb1d	                           jmp 0x40014af	      1598	reloc.c	FUNCTION_7	SWITCH_3
0x4001492	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4001496	        0x488b4008	                mov rax, qword [rax + 8]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x400149a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x400149e	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x40014a2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x40014a6	          0x4889ce	                            mov rsi, rcx	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x40014a9	          0x4889d7	                            mov rdi, rdx	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x40014ac	            0xffd0	                                call rax	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x40014ae	              0x90	                                     nop	      1605	reloc.c	FUNCTION_7	SWITCH_3
0x40014af	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1608	reloc.c	FUNCTION_7
0x40014b2	              0xc9	                                   leave	      1609	reloc.c	FUNCTION_7
0x40014b3	              0xc3	                                     ret	      1609	reloc.c	FUNCTION_7
bfd_perform_relocation	DO,0:SWITCH,1:ELSE,4:IF,14:WHILE,0:CALL,26:FOR,0:functions,0	512
0x400026e	              0x55	                                push rbp	       615	reloc.c	FUNCTION_4
0x400026f	          0x4889e5	                            mov rbp, rsp	       615	reloc.c	FUNCTION_4
0x4000272	              0x53	                                push rbx	       615	reloc.c	FUNCTION_4
0x4000273	    0x4881eca80000	                           sub rsp, 0xa8	       615	reloc.c	FUNCTION_4
0x400027a	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       615	reloc.c	FUNCTION_4
0x4000281	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       615	reloc.c	FUNCTION_4
0x4000288	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       615	reloc.c	FUNCTION_4
0x400028f	    0x48898d60ffff	             mov qword [rbp - 0xa0], rcx	       615	reloc.c	FUNCTION_4
0x4000296	    0x4c898558ffff	              mov qword [rbp - 0xa8], r8	       615	reloc.c	FUNCTION_4
0x400029d	    0x4c898d50ffff	              mov qword [rbp - 0xb0], r9	       615	reloc.c	FUNCTION_4
0x40002a4	    0xc74590020000	               mov dword [rbp - 0x70], 2	       617	reloc.c	FUNCTION_4
0x40002ab	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       619	reloc.c	FUNCTION_4
0x40002b3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       620	reloc.c	FUNCTION_4
0x40002ba	        0x488b4018	            mov rax, qword [rax + 0x18] 	       620	reloc.c	FUNCTION_4
0x40002be	        0x488945a8	             mov qword [rbp - 0x58], rax	       620	reloc.c	FUNCTION_4
0x40002c2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       624	reloc.c	FUNCTION_4
0x40002c9	          0x488b00	                    mov rax, qword [rax]	       624	reloc.c	FUNCTION_4
0x40002cc	          0x488b00	                    mov rax, qword [rax]	       624	reloc.c	FUNCTION_4
0x40002cf	        0x488945b0	             mov qword [rbp - 0x50], rax	       624	reloc.c	FUNCTION_4
0x40002d3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x40002d7	        0x488b4020	            mov rax, qword [rax + 0x20] 	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x40002db	    0x483d00000000	                              cmp rax, 0	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x40002e1	            0x7521	                           jne 0x4000304	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x40002e3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       630	reloc.c	FUNCTION_4	IF_1
0x40002e7	          0x8b4018	            mov eax, dword [rax + 0x18] 	       630	reloc.c	FUNCTION_4	IF_1
0x40002ea	      0x2580000000	                           and eax, 0x80	       630	reloc.c	FUNCTION_4	IF_1
0x40002ef	            0x85c0	                           test eax, eax	       630	reloc.c	FUNCTION_4	IF_1
0x40002f1	            0x7511	                           jne 0x4000304	       630	reloc.c	FUNCTION_4	IF_1
0x40002f3	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       631	reloc.c	FUNCTION_4	IF_1
0x40002fb	            0x7507	                           jne 0x4000304	       631	reloc.c	FUNCTION_4	IF_1
0x40002fd	    0xc74590080000	               mov dword [rbp - 0x70], 8	       632	reloc.c	FUNCTION_4	IF_1
0x4000304	      0x48837da800	               cmp qword [rbp - 0x58], 0	       637	reloc.c	FUNCTION_4	IF_2
0x4000309	            0x745d	                            je 0x4000368	       637	reloc.c	FUNCTION_4	IF_2
0x400030b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       637	reloc.c	FUNCTION_4	IF_2
0x400030f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       637	reloc.c	FUNCTION_4	IF_2
0x4000313	          0x4885c0	                           test rax, rax	       637	reloc.c	FUNCTION_4	IF_2
0x4000316	            0x7450	                            je 0x4000368	       637	reloc.c	FUNCTION_4	IF_2
0x4000318	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400031c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000320	    0x4c8b8d58ffff	              mov r9, qword [rbp - 0xa8]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000327	    0x4c8b8560ffff	              mov r8, qword [rbp - 0xa0]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400032e	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000335	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000339	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000340	    0x488bbd78ffff	             mov rdi, qword [rbp - 0x88]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000347	        0x4883ec08	                              sub rsp, 8	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400034b	    0xffb550ffffff	                 push qword [rbp - 0xb0]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000351	            0xffd0	                                call rax	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000353	        0x4883c410	                           add rsp, 0x10	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000357	          0x894594	             mov dword [rbp - 0x6c], eax	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400035a	        0x837d9405	               cmp dword [rbp - 0x6c], 5	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x400035e	            0x7408	                            je 0x4000368	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4000360	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       649	reloc.c	FUNCTION_4	IF_2	IF_3
0x4000363	      0xe9fe060000	                           jmp 0x4000a66	       649	reloc.c	FUNCTION_4	IF_2	IF_3
0x4000368	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       652	reloc.c	FUNCTION_4	IF_4	CALL_3
0x400036c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       652	reloc.c	FUNCTION_4	IF_4	CALL_3
0x4000370	    0x483d00000000	                              cmp rax, 0	       652	reloc.c	FUNCTION_4	IF_4	CALL_3
0x4000376	            0x7538	                           jne 0x40003b0	       652	reloc.c	FUNCTION_4	IF_4	CALL_3
0x4000378	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       653	reloc.c	FUNCTION_4	IF_4
0x4000380	            0x742e	                            je 0x40003b0	       653	reloc.c	FUNCTION_4	IF_4
0x4000382	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       655	reloc.c	FUNCTION_4	IF_4
0x4000389	        0x488b5008	                mov rdx, qword [rax + 8]	       655	reloc.c	FUNCTION_4	IF_4
0x400038d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       655	reloc.c	FUNCTION_4	IF_4
0x4000394	        0x488b4060	            mov rax, qword [rax + 0x60] 	       655	reloc.c	FUNCTION_4	IF_4
0x4000398	          0x4801c2	                            add rdx, rax	       655	reloc.c	FUNCTION_4	IF_4
0x400039b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       655	reloc.c	FUNCTION_4	IF_4
0x40003a2	        0x48895008	                mov qword [rax + 8], rdx	       655	reloc.c	FUNCTION_4	IF_4
0x40003a6	      0xb802000000	                              mov eax, 2	       656	reloc.c	FUNCTION_4	IF_4
0x40003ab	      0xe9b6060000	                           jmp 0x4000a66	       656	reloc.c	FUNCTION_4	IF_4
0x40003b0	      0x48837da800	               cmp qword [rbp - 0x58], 0	       660	reloc.c	FUNCTION_4	IF_5
0x40003b5	            0x750a	                           jne 0x40003c1	       660	reloc.c	FUNCTION_4	IF_5
0x40003b7	      0xb808000000	                              mov eax, 8	       661	reloc.c	FUNCTION_4	IF_5
0x40003bc	      0xe9a5060000	                           jmp 0x4000a66	       661	reloc.c	FUNCTION_4	IF_5
0x40003c1	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       664	reloc.c	FUNCTION_4	CALL_4
0x40003c8	        0x488b5808	                mov rbx, qword [rax + 8]	       664	reloc.c	FUNCTION_4	CALL_4
0x40003cc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       664	reloc.c	FUNCTION_4	CALL_4
0x40003d3	          0x4889c7	                            mov rdi, rax	       664	reloc.c	FUNCTION_4	CALL_4
0x40003d6	      0xe800000000	                          call 0x40003db	       664	reloc.c	FUNCTION_4	CALL_4
0x40003db	            0x89c0	                            mov eax, eax	       664	reloc.c	FUNCTION_4	CALL_4
0x40003dd	        0x480fafc3	                           imul rax, rbx	       664	reloc.c	FUNCTION_4	CALL_4
0x40003e1	        0x488945b8	             mov qword [rbp - 0x48], rax	       664	reloc.c	FUNCTION_4	CALL_4
0x40003e5	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40003e9	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40003f0	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40003f7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40003fb	          0x4889c7	                            mov rdi, rax	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40003fe	      0xe800000000	                          call 0x4000403	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x4000403	            0x85c0	                           test eax, eax	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x4000405	            0x750a	                           jne 0x4000411	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x4000407	      0xb804000000	                              mov eax, 4	       666	reloc.c	FUNCTION_4	IF_6
0x400040c	      0xe955060000	                           jmp 0x4000a66	       666	reloc.c	FUNCTION_4	IF_6
0x4000411	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x4000415	        0x488b4020	            mov rax, qword [rax + 0x20] 	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x4000419	          0x8b4020	            mov eax, dword [rax + 0x20] 	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x400041c	      0x2500100000	                         and eax, 0x1000	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x4000421	            0x85c0	                           test eax, eax	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x4000423	            0x740a	                            je 0x400042f	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x4000425	    0x48c745980000	               mov qword [rbp - 0x68], 0	       673	reloc.c	FUNCTION_4	IF_7
0x400042d	            0xeb0c	                           jmp 0x400043b	       673	reloc.c	FUNCTION_4	IF_7
0x400042f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       675	reloc.c	FUNCTION_4	ELSE_1
0x4000433	        0x488b4010	            mov rax, qword [rax + 0x10] 	       675	reloc.c	FUNCTION_4	ELSE_1
0x4000437	        0x48894598	             mov qword [rbp - 0x68], rax	       675	reloc.c	FUNCTION_4	ELSE_1
0x400043b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       677	reloc.c	FUNCTION_4
0x400043f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       677	reloc.c	FUNCTION_4
0x4000443	        0x488b4068	            mov rax, qword [rax + 0x68] 	       677	reloc.c	FUNCTION_4
0x4000447	        0x488945c0	             mov qword [rbp - 0x40], rax	       677	reloc.c	FUNCTION_4
0x400044b	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       680	reloc.c	FUNCTION_4	IF_8
0x4000453	            0x740b	                            je 0x4000460	       680	reloc.c	FUNCTION_4	IF_8
0x4000455	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       680	reloc.c	FUNCTION_4	IF_8
0x4000459	          0x8b4030	            mov eax, dword [rax + 0x30] 	       680	reloc.c	FUNCTION_4	IF_8
0x400045c	            0x85c0	                           test eax, eax	       680	reloc.c	FUNCTION_4	IF_8
0x400045e	            0x7407	                            je 0x4000467	       680	reloc.c	FUNCTION_4	IF_8
0x4000460	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       681	reloc.c	FUNCTION_4	IF_8
0x4000465	            0x750a	                           jne 0x4000471	       681	reloc.c	FUNCTION_4	IF_8
0x4000467	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       682	reloc.c	FUNCTION_4	IF_8
0x400046f	            0xeb0c	                           jmp 0x400047d	       682	reloc.c	FUNCTION_4	IF_8
0x4000471	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       684	reloc.c	FUNCTION_4	ELSE_2
0x4000475	        0x488b4028	            mov rax, qword [rax + 0x28] 	       684	reloc.c	FUNCTION_4	ELSE_2
0x4000479	        0x488945a0	             mov qword [rbp - 0x60], rax	       684	reloc.c	FUNCTION_4	ELSE_2
0x400047d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       686	reloc.c	FUNCTION_4	ELSE_2
0x4000481	        0x488b4020	            mov rax, qword [rax + 0x20] 	       686	reloc.c	FUNCTION_4	ELSE_2
0x4000485	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       686	reloc.c	FUNCTION_4	ELSE_2
0x4000489	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       686	reloc.c	FUNCTION_4	ELSE_2
0x400048d	          0x4801d0	                            add rax, rdx	       686	reloc.c	FUNCTION_4	ELSE_2
0x4000490	        0x48014598	            add qword [rbp - 0x68], rax 	       686	reloc.c	FUNCTION_4	ELSE_2
0x4000494	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       689	reloc.c	FUNCTION_4	ELSE_2
0x400049b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       689	reloc.c	FUNCTION_4	ELSE_2
0x400049f	        0x48014598	            add qword [rbp - 0x68], rax 	       689	reloc.c	FUNCTION_4	ELSE_2
0x40004a3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004a7	          0x8b4010	            mov eax, dword [rax + 0x10] 	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004aa	            0x85c0	                           test eax, eax	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004ac	            0x743b	                            je 0x40004e9	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004ae	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       725	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004b5	        0x488b4068	            mov rax, qword [rax + 0x68] 	       725	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004b9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       725	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004bd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       725	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004c4	        0x488b4060	            mov rax, qword [rax + 0x60] 	       725	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004c8	          0x4801d0	                            add rax, rdx	       725	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004cb	        0x48294598	             sub qword [rbp - 0x68], rax	       724	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40004cf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x40004d3	          0x8b4048	            mov eax, dword [rax + 0x48] 	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x40004d6	            0x85c0	                           test eax, eax	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x40004d8	            0x740f	                            je 0x40004e9	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x40004da	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       728	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x40004e1	        0x488b4008	                mov rax, qword [rax + 8]	       728	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x40004e5	        0x48294598	             sub qword [rbp - 0x68], rax	       728	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x40004e9	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       731	reloc.c	FUNCTION_4	IF_11
0x40004f1	     0xf84ea000000	                            je 0x40005e1	       731	reloc.c	FUNCTION_4	IF_11
0x40004f7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x40004fb	          0x8b4030	            mov eax, dword [rax + 0x30] 	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x40004fe	            0x85c0	                           test eax, eax	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000500	            0x753b	                           jne 0x400053d	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000502	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       738	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000509	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       738	reloc.c	FUNCTION_4	IF_11	IF_12
0x400050d	        0x48895010	             mov qword [rax + 0x10], rdx	       738	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000511	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000518	        0x488b5008	                mov rdx, qword [rax + 8]	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x400051c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000523	        0x488b4060	            mov rax, qword [rax + 0x60] 	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000527	          0x4801c2	                            add rdx, rax	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x400052a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000531	        0x48895008	                mov qword [rax + 8], rdx	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000535	          0x8b4590	             mov eax, dword [rbp - 0x70]	       740	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000538	      0xe929050000	                           jmp 0x4000a66	       740	reloc.c	FUNCTION_4	IF_11	IF_12
0x400053d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x4000544	        0x488b5008	                mov rdx, qword [rax + 8]	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x4000548	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x400054f	        0x488b4060	            mov rax, qword [rax + 0x60] 	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x4000553	          0x4801c2	                            add rdx, rax	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x4000556	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x400055d	        0x48895008	                mov qword [rax + 8], rdx	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x4000561	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4000568	        0x488b4008	                mov rax, qword [rax + 8]	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x400056c	          0x8b4008	                mov eax, dword [rax + 8]	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x400056f	          0x83f802	                              cmp eax, 2	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4000572	            0x755e	                           jne 0x40005d2	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4000574	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400057b	        0x488b4008	                mov rax, qword [rax + 8]	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400057f	          0x488b00	                    mov rax, qword [rax]	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000582	      0xbe00000000	                              mov esi, 0	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000587	          0x4889c7	                            mov rdi, rax	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400058a	      0xe800000000	                          call 0x400058f	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400058f	            0x85c0	                           test eax, eax	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000591	            0x743f	                            je 0x40005d2	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000593	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400059a	        0x488b4008	                mov rax, qword [rax + 8]	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400059e	          0x488b00	                    mov rax, qword [rax]	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x40005a1	      0xbe00000000	                              mov esi, 0	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x40005a6	          0x4889c7	                            mov rdi, rax	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x40005a9	      0xe800000000	                          call 0x40005ae	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x40005ae	            0x85c0	                           test eax, eax	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x40005b0	            0x7420	                            je 0x40005d2	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x40005b2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       826	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x40005b9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       826	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x40005bd	        0x48294598	             sub qword [rbp - 0x68], rax	       826	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x40005c1	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       827	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x40005c8	    0x48c740100000	               mov qword [rax + 0x10], 0	       827	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x40005d0	            0xeb0f	                           jmp 0x40005e1	       827	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x40005d2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       831	reloc.c	FUNCTION_4	IF_11	ELSE_3	ELSE_4
0x40005d9	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       831	reloc.c	FUNCTION_4	IF_11	ELSE_3	ELSE_4
0x40005dd	        0x48895010	             mov qword [rax + 0x10], rdx	       831	reloc.c	FUNCTION_4	IF_11	ELSE_3	ELSE_4
0x40005e1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       843	reloc.c	FUNCTION_4	IF_14
0x40005e5	          0x8b4018	            mov eax, dword [rax + 0x18] 	       843	reloc.c	FUNCTION_4	IF_14
0x40005e8	            0x85c0	                           test eax, eax	       843	reloc.c	FUNCTION_4	IF_14
0x40005ea	            0x743f	                            je 0x400062b	       843	reloc.c	FUNCTION_4	IF_14
0x40005ec	        0x837d9002	               cmp dword [rbp - 0x70], 2	       844	reloc.c	FUNCTION_4	IF_14
0x40005f0	            0x7539	                           jne 0x400062b	       844	reloc.c	FUNCTION_4	IF_14
0x40005f2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40005f9	          0x4889c7	                            mov rdi, rax	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40005fc	      0xe800000000	                          call 0x4000601	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000601	            0x89c7	                            mov edi, eax	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000603	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000607	          0x8b5004	                mov edx, dword [rax + 4]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400060a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400060e	          0x8b700c	              mov esi, dword [rax + 0xc]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000611	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000615	          0x8b4018	            mov eax, dword [rax + 0x18] 	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000618	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400061c	          0x4989c8	                             mov r8, rcx	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400061f	            0x89f9	                            mov ecx, edi	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000621	            0x89c7	                            mov edi, eax	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000623	      0xe800000000	                          call 0x4000628	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000628	          0x894590	             mov dword [rbp - 0x70], eax	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400062b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       878	reloc.c	FUNCTION_4
0x400062f	          0x8b4004	                mov eax, dword [rax + 4]	       878	reloc.c	FUNCTION_4
0x4000632	            0x89c1	                            mov ecx, eax	       878	reloc.c	FUNCTION_4
0x4000634	        0x48d36d98	              shr qword [rbp - 0x68], cl	       878	reloc.c	FUNCTION_4
0x4000638	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       881	reloc.c	FUNCTION_4
0x400063c	          0x8b4014	            mov eax, dword [rax + 0x14] 	       881	reloc.c	FUNCTION_4
0x400063f	            0x89c1	                            mov ecx, eax	       881	reloc.c	FUNCTION_4
0x4000641	        0x48d36598	              shl qword [rbp - 0x68], cl	       881	reloc.c	FUNCTION_4
0x4000645	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4000649	          0x8b4008	                mov eax, dword [rax + 8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400064c	          0x83c002	                              add eax, 2	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400064f	          0x83f807	                              cmp eax, 7	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4000652	     0xf8703040000	                            ja 0x4000a5b	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4000658	            0x89c0	                            mov eax, eax	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400065a	    0x488b04c50000	                  mov rax, qword [rax*8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4000662	            0xffe0	                                 jmp rax	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4000664	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x400066b	        0x488b4008	                mov rax, qword [rax + 8]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x400066f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x4000673	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x400067a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x400067e	          0x4801ca	                            add rdx, rcx	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x4000681	          0x4889d7	                            mov rdi, rdx	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x4000684	            0xffd0	                                call rax	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x4000686	        0x488945c8	             mov qword [rbp - 0x38], rax	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x400068a	      0x48c17dc808	               sar qword [rbp - 0x38], 8	       924	reloc.c	FUNCTION_4	SWITCH_1
0x400068f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x4000693	        0x488b4040	            mov rax, qword [rax + 0x40] 	       925	reloc.c	FUNCTION_4	SWITCH_1
0x4000697	          0x48f7d0	                                 not rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x400069a	          0x4889c2	                            mov rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x400069d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006a1	          0x4889d1	                            mov rcx, rdx	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006a4	          0x4821c1	                            and rcx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006a7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006ab	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006b3	          0x4821c2	                            and rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006b6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006ba	          0x4801c2	                            add rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006bd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006c1	        0x488b4040	            mov rax, qword [rax + 0x40] 	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006c5	          0x4821d0	                            and rax, rdx	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006c8	          0x4809c8	                             or rax, rcx	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006cb	        0x488945c8	             mov qword [rbp - 0x38], rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40006cf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006d6	        0x488b4008	                mov rax, qword [rax + 8]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006da	        0x488b4060	            mov rax, qword [rax + 0x60] 	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006de	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006e5	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006e9	          0x4801ca	                            add rdx, rcx	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006ec	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006f0	        0x48c1f908	                              sar rcx, 8	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006f4	          0x4889d6	                            mov rsi, rdx	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006f7	          0x4889cf	                            mov rdi, rcx	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006fa	            0xffd0	                                call rax	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40006fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x4000700	        0x488d5002	                      lea rdx, [rax + 2]	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x4000704	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x400070b	          0x4801d0	                            add rax, rdx	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x400070e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x4000712	            0x8810	                      mov byte [rax], dl	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x4000714	      0xe94a030000	                           jmp 0x4000a63	       929	reloc.c	FUNCTION_4	SWITCH_1
0x4000719	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x4000720	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x4000724	          0x4801d0	                            add rax, rdx	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x4000727	           0xfb600	                   movzx eax, byte [rax]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x400072a	          0x88458d	               mov byte [rbp - 0x73], al	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x400072d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000731	        0x488b4040	            mov rax, qword [rax + 0x40] 	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000735	            0xf7d0	                                 not eax	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000737	            0x89c2	                            mov edx, eax	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000739	         0xfb6458d	            movzx eax, byte [rbp - 0x73]	       934	reloc.c	FUNCTION_4	SWITCH_1
0x400073d	            0x89d1	                            mov ecx, edx	       934	reloc.c	FUNCTION_4	SWITCH_1
0x400073f	            0x21c1	                            and ecx, eax	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000741	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000745	        0x488b4038	            mov rax, qword [rax + 0x38] 	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000749	            0x89c2	                            mov edx, eax	       934	reloc.c	FUNCTION_4	SWITCH_1
0x400074b	         0xfb6458d	            movzx eax, byte [rbp - 0x73]	       934	reloc.c	FUNCTION_4	SWITCH_1
0x400074f	            0x21c2	                            and edx, eax	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000751	        0x488b4598	             mov rax, qword [rbp - 0x68]	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000755	             0x1c2	                            add edx, eax	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000757	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       934	reloc.c	FUNCTION_4	SWITCH_1
0x400075b	        0x488b4040	            mov rax, qword [rax + 0x40] 	       934	reloc.c	FUNCTION_4	SWITCH_1
0x400075f	            0x21d0	                            and eax, edx	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000761	             0x9c8	                             or eax, ecx	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000763	          0x88458d	               mov byte [rbp - 0x73], al	       934	reloc.c	FUNCTION_4	SWITCH_1
0x4000766	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400076d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4000771	          0x4801c2	                            add rdx, rax	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4000774	         0xfb6458d	            movzx eax, byte [rbp - 0x73]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4000778	            0x8802	                      mov byte [rdx], al	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400077a	      0xe9e4020000	                           jmp 0x4000a63	       937	reloc.c	FUNCTION_4	SWITCH_1
0x400077f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4000786	        0x488b4008	                mov rax, qword [rax + 8]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x400078a	        0x488b4050	            mov rax, qword [rax + 0x50] 	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x400078e	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4000795	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4000799	          0x4801ca	                            add rdx, rcx	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x400079c	          0x4889d7	                            mov rdi, rdx	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x400079f	            0xffd0	                                call rax	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x40007a1	        0x6689458e	               mov word [rbp - 0x72], ax	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x40007a5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007a9	        0x488b4040	            mov rax, qword [rax + 0x40] 	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007ad	            0xf7d0	                                 not eax	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007af	            0x89c2	                            mov edx, eax	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007b1	         0xfb7458e	            movzx eax, word [rbp - 0x72]	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007b5	            0x21c2	                            and edx, eax	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007b7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007bb	        0x488b4038	            mov rax, qword [rax + 0x38] 	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007bf	            0x89c1	                            mov ecx, eax	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007c1	         0xfb7458e	            movzx eax, word [rbp - 0x72]	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007c5	            0x21c1	                            and ecx, eax	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007c7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007cb	             0x1c1	                            add ecx, eax	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007cd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007d1	        0x488b4040	            mov rax, qword [rax + 0x40] 	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007d5	            0x21c8	                            and eax, ecx	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007d7	             0x9d0	                             or eax, edx	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007d9	        0x6689458e	               mov word [rbp - 0x72], ax	       942	reloc.c	FUNCTION_4	SWITCH_1
0x40007dd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x40007e4	        0x488b4008	                mov rax, qword [rax + 8]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x40007e8	        0x488b4060	            mov rax, qword [rax + 0x60] 	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x40007ec	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x40007f3	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x40007f7	          0x4801d1	                            add rcx, rdx	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x40007fa	      0x480fbf558e	            movsx rdx, word [rbp - 0x72]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x40007ff	          0x4889ce	                            mov rsi, rcx	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000802	          0x4889d7	                            mov rdi, rdx	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000805	            0xffd0	                                call rax	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000807	      0xe957020000	                           jmp 0x4000a63	       945	reloc.c	FUNCTION_4	SWITCH_1
0x400080c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000813	        0x488b4008	                mov rax, qword [rax + 8]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000817	        0x488b4038	            mov rax, qword [rax + 0x38] 	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x400081b	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000822	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000826	          0x4801ca	                            add rdx, rcx	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000829	          0x4889d7	                            mov rdi, rdx	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x400082c	            0xffd0	                                call rax	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x400082e	        0x488945d0	             mov qword [rbp - 0x30], rax	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000832	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000836	        0x488b4040	            mov rax, qword [rax + 0x40] 	       949	reloc.c	FUNCTION_4	SWITCH_1
0x400083a	          0x48f7d0	                                 not rax	       949	reloc.c	FUNCTION_4	SWITCH_1
0x400083d	          0x4889c2	                            mov rdx, rax	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000840	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000844	          0x4889d1	                            mov rcx, rdx	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000847	          0x4821c1	                            and rcx, rax	       949	reloc.c	FUNCTION_4	SWITCH_1
0x400084a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       949	reloc.c	FUNCTION_4	SWITCH_1
0x400084e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000852	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000856	          0x4821c2	                            and rdx, rax	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000859	        0x488b4598	             mov rax, qword [rbp - 0x68]	       949	reloc.c	FUNCTION_4	SWITCH_1
0x400085d	          0x4801c2	                            add rdx, rax	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000860	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000864	        0x488b4040	            mov rax, qword [rax + 0x40] 	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000868	          0x4821d0	                            and rax, rdx	       949	reloc.c	FUNCTION_4	SWITCH_1
0x400086b	          0x4809c8	                             or rax, rcx	       949	reloc.c	FUNCTION_4	SWITCH_1
0x400086e	        0x488945d0	             mov qword [rbp - 0x30], rax	       949	reloc.c	FUNCTION_4	SWITCH_1
0x4000872	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4000879	        0x488b4008	                mov rax, qword [rax + 8]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x400087d	        0x488b4048	            mov rax, qword [rax + 0x48] 	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4000881	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4000888	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x400088c	          0x4801d1	                            add rcx, rdx	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x400088f	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4000893	          0x4889ce	                            mov rsi, rcx	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4000896	          0x4889d7	                            mov rdi, rdx	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4000899	            0xffd0	                                call rax	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x400089b	      0xe9c3010000	                           jmp 0x4000a63	       952	reloc.c	FUNCTION_4	SWITCH_1
0x40008a0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40008a7	        0x488b4008	                mov rax, qword [rax + 8]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40008ab	        0x488b4038	            mov rax, qword [rax + 0x38] 	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40008af	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40008b6	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40008ba	          0x4801ca	                            add rdx, rcx	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40008bd	          0x4889d7	                            mov rdi, rdx	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40008c0	            0xffd0	                                call rax	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40008c2	        0x488945d8	             mov qword [rbp - 0x28], rax	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40008c6	        0x48f75d98	                  neg qword [rbp - 0x68]	       956	reloc.c	FUNCTION_4	SWITCH_1
0x40008ca	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008ce	        0x488b4040	            mov rax, qword [rax + 0x40] 	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008d2	          0x48f7d0	                                 not rax	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008d5	          0x4889c2	                            mov rdx, rax	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008dc	          0x4889d1	                            mov rcx, rdx	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008df	          0x4821c1	                            and rcx, rax	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008e2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008e6	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008ee	          0x4821c2	                            and rdx, rax	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008f1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008f5	          0x4801c2	                            add rdx, rax	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       957	reloc.c	FUNCTION_4	SWITCH_1
0x40008fc	        0x488b4040	            mov rax, qword [rax + 0x40] 	       957	reloc.c	FUNCTION_4	SWITCH_1
0x4000900	          0x4821d0	                            and rax, rdx	       957	reloc.c	FUNCTION_4	SWITCH_1
0x4000903	          0x4809c8	                             or rax, rcx	       957	reloc.c	FUNCTION_4	SWITCH_1
0x4000906	        0x488945d8	             mov qword [rbp - 0x28], rax	       957	reloc.c	FUNCTION_4	SWITCH_1
0x400090a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000911	        0x488b4008	                mov rax, qword [rax + 8]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000915	        0x488b4048	            mov rax, qword [rax + 0x48] 	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000919	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000920	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000924	          0x4801d1	                            add rcx, rdx	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000927	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x400092b	          0x4889ce	                            mov rsi, rcx	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x400092e	          0x4889d7	                            mov rdi, rdx	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000931	            0xffd0	                                call rax	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000933	      0xe92b010000	                           jmp 0x4000a63	       960	reloc.c	FUNCTION_4	SWITCH_1
0x4000938	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x400093f	        0x488b4008	                mov rax, qword [rax + 8]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000943	        0x488b4050	            mov rax, qword [rax + 0x50] 	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000947	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x400094e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000952	          0x4801ca	                            add rdx, rcx	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000955	          0x4889d7	                            mov rdi, rdx	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000958	            0xffd0	                                call rax	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x400095a	        0x488945e0	             mov qword [rbp - 0x20], rax	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x400095e	        0x48f75d98	                  neg qword [rbp - 0x68]	       965	reloc.c	FUNCTION_4	SWITCH_1
0x4000962	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       966	reloc.c	FUNCTION_4	SWITCH_1
0x4000966	        0x488b4040	            mov rax, qword [rax + 0x40] 	       966	reloc.c	FUNCTION_4	SWITCH_1
0x400096a	          0x48f7d0	                                 not rax	       966	reloc.c	FUNCTION_4	SWITCH_1
0x400096d	          0x4889c2	                            mov rdx, rax	       966	reloc.c	FUNCTION_4	SWITCH_1
0x4000970	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       966	reloc.c	FUNCTION_4	SWITCH_1
0x4000974	          0x4889d1	                            mov rcx, rdx	       966	reloc.c	FUNCTION_4	SWITCH_1
0x4000977	          0x4821c1	                            and rcx, rax	       966	reloc.c	FUNCTION_4	SWITCH_1
0x400097a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       966	reloc.c	FUNCTION_4	SWITCH_1
0x400097e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       966	reloc.c	FUNCTION_4	SWITCH_1
0x4000982	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       966	reloc.c	FUNCTION_4	SWITCH_1
0x4000986	          0x4821c2	                            and rdx, rax	       966	reloc.c	FUNCTION_4	SWITCH_1
0x4000989	        0x488b4598	             mov rax, qword [rbp - 0x68]	       966	reloc.c	FUNCTION_4	SWITCH_1
0x400098d	          0x4801c2	                            add rdx, rax	       966	reloc.c	FUNCTION_4	SWITCH_1
0x4000990	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       966	reloc.c	FUNCTION_4	SWITCH_1
0x4000994	        0x488b4040	            mov rax, qword [rax + 0x40] 	       966	reloc.c	FUNCTION_4	SWITCH_1
0x4000998	          0x4821d0	                            and rax, rdx	       966	reloc.c	FUNCTION_4	SWITCH_1
0x400099b	          0x4809c8	                             or rax, rcx	       966	reloc.c	FUNCTION_4	SWITCH_1
0x400099e	        0x488945e0	             mov qword [rbp - 0x20], rax	       966	reloc.c	FUNCTION_4	SWITCH_1
0x40009a2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x40009a9	        0x488b4008	                mov rax, qword [rax + 8]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x40009ad	        0x488b4060	            mov rax, qword [rax + 0x60] 	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x40009b1	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x40009b8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x40009bc	          0x4801d1	                            add rcx, rdx	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x40009bf	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x40009c3	          0x4889ce	                            mov rsi, rcx	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x40009c6	          0x4889d7	                            mov rdi, rdx	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x40009c9	            0xffd0	                                call rax	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x40009cb	      0xe993000000	                           jmp 0x4000a63	       969	reloc.c	FUNCTION_4	SWITCH_1
0x40009d0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40009d7	        0x488b4008	                mov rax, qword [rax + 8]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40009db	        0x488b4020	            mov rax, qword [rax + 0x20] 	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40009df	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40009e6	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40009ea	          0x4801ca	                            add rdx, rcx	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40009ed	          0x4889d7	                            mov rdi, rdx	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40009f0	            0xffd0	                                call rax	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40009f2	        0x488945e8	             mov qword [rbp - 0x18], rax	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40009f6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       979	reloc.c	FUNCTION_4	SWITCH_1
0x40009fa	        0x488b4040	            mov rax, qword [rax + 0x40] 	       979	reloc.c	FUNCTION_4	SWITCH_1
0x40009fe	          0x48f7d0	                                 not rax	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a01	        0x482345e8	             and rax, qword [rbp - 0x18]	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a05	          0x4889c2	                            mov rdx, rax	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a08	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a0c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a10	        0x482345e8	             and rax, qword [rbp - 0x18]	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a14	          0x4889c1	                            mov rcx, rax	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a17	        0x488b4598	             mov rax, qword [rbp - 0x68]	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a1b	          0x4801c1	                            add rcx, rax	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a1e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a22	        0x488b4040	            mov rax, qword [rax + 0x40] 	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a26	          0x4821c8	                            and rax, rcx	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a29	          0x4809d0	                             or rax, rdx	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a2c	        0x488945e8	             mov qword [rbp - 0x18], rax	       979	reloc.c	FUNCTION_4	SWITCH_1
0x4000a30	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000a37	        0x488b4008	                mov rax, qword [rax + 8]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000a3b	        0x488b4030	            mov rax, qword [rax + 0x30] 	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000a3f	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000a46	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000a4a	          0x4801d1	                            add rcx, rdx	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000a4d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000a51	          0x4889ce	                            mov rsi, rcx	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000a54	          0x4889d7	                            mov rdi, rdx	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000a57	            0xffd0	                                call rax	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000a59	            0xeb08	                           jmp 0x4000a63	       985	reloc.c	FUNCTION_4	SWITCH_1
0x4000a5b	      0xb807000000	                              mov eax, 7	       987	reloc.c	FUNCTION_4	SWITCH_1
0x4000a60	            0xeb04	                           jmp 0x4000a66	       987	reloc.c	FUNCTION_4	SWITCH_1
0x4000a62	              0x90	                                     nop	       973	reloc.c	FUNCTION_4	SWITCH_1
0x4000a63	          0x8b4590	             mov eax, dword [rbp - 0x70]	       990	reloc.c	FUNCTION_4
0x4000a66	        0x488b5df8	                mov rbx, qword [rbp - 8]	       991	reloc.c	FUNCTION_4
0x4000a6a	              0xc9	                                   leave	       991	reloc.c	FUNCTION_4
0x4000a6b	              0xc3	                                     ret	       991	reloc.c	FUNCTION_4
_bfd_norelocs_bfd_reloc_type_lookup	DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,1:FOR,0:functions,0	10
0x4001e08	              0x55	                                push rbp	      8422	reloc.c	FUNCTION_20
0x4001e09	          0x4889e5	                            mov rbp, rsp	      8422	reloc.c	FUNCTION_20
0x4001e0c	        0x4883ec10	                           sub rsp, 0x10	      8422	reloc.c	FUNCTION_20
0x4001e10	        0x48897df8	                mov qword [rbp - 8], rdi	      8422	reloc.c	FUNCTION_20
0x4001e14	          0x8975f4	              mov dword [rbp - 0xc], esi	      8422	reloc.c	FUNCTION_20
0x4001e17	        0x488b45f8	                mov rax, qword [rbp - 8]	      8423	reloc.c	FUNCTION_20	CALL_1
0x4001e1b	          0x4889c7	                            mov rdi, rax	      8423	reloc.c	FUNCTION_20	CALL_1
0x4001e1e	      0xe800000000	                          call 0x4001e23	      8423	reloc.c	FUNCTION_20	CALL_1
0x4001e23	              0xc9	                                   leave	      8424	reloc.c	FUNCTION_20
0x4001e24	              0xc3	                                     ret	      8424	reloc.c	FUNCTION_20
_bfd_norelocs_bfd_reloc_name_lookup	DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,1:FOR,0:functions,0	10
0x4001e25	              0x55	                                push rbp	      8429	reloc.c	FUNCTION_21
0x4001e26	          0x4889e5	                            mov rbp, rsp	      8429	reloc.c	FUNCTION_21
0x4001e29	        0x4883ec10	                           sub rsp, 0x10	      8429	reloc.c	FUNCTION_21
0x4001e2d	        0x48897df8	                mov qword [rbp - 8], rdi	      8429	reloc.c	FUNCTION_21
0x4001e31	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8429	reloc.c	FUNCTION_21
0x4001e35	        0x488b45f8	                mov rax, qword [rbp - 8]	      8430	reloc.c	FUNCTION_21	CALL_1
0x4001e39	          0x4889c7	                            mov rdi, rax	      8430	reloc.c	FUNCTION_21	CALL_1
0x4001e3c	      0xe800000000	                          call 0x4001e41	      8430	reloc.c	FUNCTION_21	CALL_1
0x4001e41	              0xc9	                                   leave	      8431	reloc.c	FUNCTION_21
0x4001e42	              0xc3	                                     ret	      8431	reloc.c	FUNCTION_21
bfd_generic_get_relocated_section_contents	DO,0:SWITCH,1:ELSE,1:IF,11:WHILE,0:CALL,22:FOR,1:functions,0	334
0x400181c	              0x55	                                push rbp	      8211	reloc.c	FUNCTION_17
0x400181d	          0x4889e5	                            mov rbp, rsp	      8211	reloc.c	FUNCTION_17
0x4001820	            0x4154	                                push r12	      8211	reloc.c	FUNCTION_17
0x4001822	              0x53	                                push rbx	      8211	reloc.c	FUNCTION_17
0x4001823	    0x4881ec900000	                           sub rsp, 0x90	      8211	reloc.c	FUNCTION_17
0x400182a	        0x48897d88	             mov qword [rbp - 0x78], rdi	      8211	reloc.c	FUNCTION_17
0x400182e	        0x48897580	             mov qword [rbp - 0x80], rsi	      8211	reloc.c	FUNCTION_17
0x4001832	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      8211	reloc.c	FUNCTION_17
0x4001839	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	      8211	reloc.c	FUNCTION_17
0x4001840	    0x4489856cffff	             mov dword [rbp - 0x94], r8d	      8211	reloc.c	FUNCTION_17
0x4001847	    0x4c898d60ffff	              mov qword [rbp - 0xa0], r9	      8211	reloc.c	FUNCTION_17
0x400184e	    0x64488b042528	                mov rax, qword fs:[0x28]	      8211	reloc.c	FUNCTION_17
0x4001857	        0x488945e8	             mov qword [rbp - 0x18], rax	      8211	reloc.c	FUNCTION_17
0x400185b	            0x31c0	                            xor eax, eax	      8211	reloc.c	FUNCTION_17
0x400185d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8212	reloc.c	FUNCTION_17
0x4001864	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8212	reloc.c	FUNCTION_17
0x4001868	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      8212	reloc.c	FUNCTION_17
0x400186f	        0x488945a8	             mov qword [rbp - 0x58], rax	      8212	reloc.c	FUNCTION_17
0x4001873	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8213	reloc.c	FUNCTION_17
0x400187a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8213	reloc.c	FUNCTION_17
0x400187e	        0x488945b0	             mov qword [rbp - 0x50], rax	      8213	reloc.c	FUNCTION_17
0x4001882	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      8218	reloc.c	FUNCTION_17	CALL_1
0x4001886	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8218	reloc.c	FUNCTION_17	CALL_1
0x400188a	          0x4889d6	                            mov rsi, rdx	      8218	reloc.c	FUNCTION_17	CALL_1
0x400188d	          0x4889c7	                            mov rdi, rax	      8218	reloc.c	FUNCTION_17	CALL_1
0x4001890	      0xe800000000	                          call 0x4001895	      8218	reloc.c	FUNCTION_17	CALL_1
0x4001895	        0x488945b8	             mov qword [rbp - 0x48], rax	      8218	reloc.c	FUNCTION_17	CALL_1
0x4001899	      0x48837db800	               cmp qword [rbp - 0x48], 0	      8219	reloc.c	FUNCTION_17	IF_1
0x400189e	            0x790a	                           jns 0x40018aa	      8219	reloc.c	FUNCTION_17	IF_1
0x40018a0	      0xb800000000	                              mov eax, 0	      8220	reloc.c	FUNCTION_17	IF_1
0x40018a5	      0xe9a0040000	                           jmp 0x4001d4a	      8220	reloc.c	FUNCTION_17	IF_1
0x40018aa	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018b1	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018b9	          0x4889ce	                            mov rsi, rcx	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018bc	          0x4889c7	                            mov rdi, rax	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018bf	      0xe800000000	                          call 0x40018c4	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018c4	            0x85c0	                           test eax, eax	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018c6	            0x750a	                           jne 0x40018d2	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018c8	      0xb800000000	                              mov eax, 0	      8224	reloc.c	FUNCTION_17	IF_2
0x40018cd	      0xe978040000	                           jmp 0x4001d4a	      8224	reloc.c	FUNCTION_17	IF_2
0x40018d2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      8226	reloc.c	FUNCTION_17	IF_3
0x40018d9	          0x4885c0	                           test rax, rax	      8226	reloc.c	FUNCTION_17	IF_3
0x40018dc	            0x750a	                           jne 0x40018e8	      8226	reloc.c	FUNCTION_17	IF_3
0x40018de	      0xb800000000	                              mov eax, 0	      8227	reloc.c	FUNCTION_17	IF_3
0x40018e3	      0xe962040000	                           jmp 0x4001d4a	      8227	reloc.c	FUNCTION_17	IF_3
0x40018e8	      0x48837db800	               cmp qword [rbp - 0x48], 0	      8229	reloc.c	FUNCTION_17	IF_4
0x40018ed	            0x750c	                           jne 0x40018fb	      8229	reloc.c	FUNCTION_17	IF_4
0x40018ef	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      8230	reloc.c	FUNCTION_17	IF_4
0x40018f6	      0xe94f040000	                           jmp 0x4001d4a	      8230	reloc.c	FUNCTION_17	IF_4
0x40018fb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8232	reloc.c	FUNCTION_17	CALL_3
0x40018ff	          0x4889c7	                            mov rdi, rax	      8232	reloc.c	FUNCTION_17	CALL_3
0x4001902	      0xe800000000	                          call 0x4001907	      8232	reloc.c	FUNCTION_17	CALL_3
0x4001907	        0x488945c0	             mov qword [rbp - 0x40], rax	      8232	reloc.c	FUNCTION_17	CALL_3
0x400190b	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      8233	reloc.c	FUNCTION_17	IF_5
0x4001910	            0x750a	                           jne 0x400191c	      8233	reloc.c	FUNCTION_17	IF_5
0x4001912	      0xb800000000	                              mov eax, 0	      8234	reloc.c	FUNCTION_17	IF_5
0x4001917	      0xe92e040000	                           jmp 0x4001d4a	      8234	reloc.c	FUNCTION_17	IF_5
0x400191c	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      8236	reloc.c	FUNCTION_17	CALL_4
0x4001923	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      8236	reloc.c	FUNCTION_17	CALL_4
0x4001927	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      8236	reloc.c	FUNCTION_17	CALL_4
0x400192b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8236	reloc.c	FUNCTION_17	CALL_4
0x400192f	          0x4889c7	                            mov rdi, rax	      8236	reloc.c	FUNCTION_17	CALL_4
0x4001932	      0xe800000000	                          call 0x4001937	      8236	reloc.c	FUNCTION_17	CALL_4
0x4001937	        0x488945c8	             mov qword [rbp - 0x38], rax	      8236	reloc.c	FUNCTION_17	CALL_4
0x400193b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      8240	reloc.c	FUNCTION_17	IF_6
0x4001940	     0xf88f2030000	                            js 0x4001d38	      8240	reloc.c	FUNCTION_17	IF_6
0x4001946	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      8243	reloc.c	FUNCTION_17	IF_7
0x400194b	     0xf8ed2030000	                           jle 0x4001d23	      8243	reloc.c	FUNCTION_17	IF_7
0x4001951	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001955	        0x488945a0	             mov qword [rbp - 0x60], rax	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001959	      0xe9b5030000	                           jmp 0x4001d13	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x400195e	    0x48c745980000	               mov qword [rbp - 0x68], 0	      8249	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001966	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x400196a	          0x488b00	                    mov rax, qword [rax]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x400196d	          0x488b00	                    mov rax, qword [rax]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001970	          0x488b00	                    mov rax, qword [rax]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001973	        0x488945d0	             mov qword [rbp - 0x30], rax	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001977	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x400197c	            0x7543	                           jne 0x40019c1	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x400197e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001982	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001986	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x400198a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8261	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x400198e	          0x488b00	                    mov rax, qword [rax]	      8261	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001991	        0x4c8b6008	                mov r12, qword [rax + 8]	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001995	      0xbe00000000	                              mov esi, 0	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x400199a	      0xbf00000000	                              mov edi, 0	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x400199f	      0xe800000000	                          call 0x40019a4	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x40019a4	          0x4889c7	                            mov rdi, rax	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x40019a7	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x40019ab	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x40019af	          0x4c89e1	                            mov rcx, r12	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x40019b2	          0x4889c6	                            mov rsi, rax	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x40019b5	      0xb800000000	                              mov eax, 0	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x40019ba	            0xffd3	                                call rbx	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x40019bc	      0xe978030000	                           jmp 0x4001d39	      8262	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40019c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019c5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019c9	          0x4885c0	                           test rax, rax	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019cc	     0xf84e2000000	                            je 0x4001ab4	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019d2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019d6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019da	    0x483d00000000	                              cmp rax, 0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019e0	     0xf84ce000000	                            je 0x4001ab4	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019e6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019ea	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019ee	        0x488b4068	            mov rax, qword [rax + 0x68] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019f2	    0x483d00000000	                              cmp rax, 0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019f8	     0xf85b6000000	                           jne 0x4001ab4	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a02	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a06	         0xfb74024	           movzx eax, word [rax + 0x24] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a0a	        0x66258003	                           and ax, 0x380	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a0e	        0x663d0001	                           cmp ax, 0x100	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a12	     0xf849c000000	                            je 0x4001ab4	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a18	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a1c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a20	         0xfb74024	           movzx eax, word [rax + 0x24] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a24	        0x66258003	                           and ax, 0x380	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a28	        0x663d0002	                           cmp ax, 0x200	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a2c	     0xf8482000000	                            je 0x4001ab4	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001a32	    0x488b9d70ffff	             mov rbx, qword [rbp - 0x90]	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a39	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a3d	          0x488b00	                    mov rax, qword [rax]	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a40	        0x4c8b6008	                mov r12, qword [rax + 8]	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a44	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a48	          0x4889c7	                            mov rdi, rax	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a4b	      0xe800000000	                          call 0x4001a50	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a50	            0x89c0	                            mov eax, eax	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a52	        0x490fafc4	                           imul rax, r12	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a56	          0x4801d8	                            add rax, rbx	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a59	        0x488945d8	             mov qword [rbp - 0x28], rax	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001a5d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001a61	          0x488b00	                    mov rax, qword [rax]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001a64	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001a68	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001a6c	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001a70	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001a74	          0x4889c7	                            mov rdi, rax	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001a77	      0xe800000000	                          call 0x4001a7c	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001a7c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001a80	          0x488b00	                    mov rax, qword [rax]	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001a83	    0x488b15000000	            mov rdx, qword [0x04001a8a] 	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001a8a	          0x488910	                    mov qword [rax], rdx	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001a8d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8276	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001a91	          0x488b00	                    mov rax, qword [rax]	      8276	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001a94	    0x48c740100000	               mov qword [rax + 0x10], 0	      8276	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001a9c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8277	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001aa0	          0x488b00	                    mov rax, qword [rax]	      8277	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001aa3	    0x48c740180000	               mov qword [rax + 0x18], 0	      8277	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001aab	    0xc74594020000	               mov dword [rbp - 0x6c], 2	      8278	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001ab2	            0xeb3f	                           jmp 0x4001af3	      8266	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001ab4	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001abb	            0x7406	                            je 0x4001ac3	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001abd	        0x488b7d88	             mov rdi, qword [rbp - 0x78]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001ac1	            0xeb05	                           jmp 0x4001ac8	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001ac3	      0xbf00000000	                              mov edi, 0	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001ac8	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001acf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001ad3	          0x488b30	                    mov rsi, qword [rax]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001ad6	        0x4c8d4598	                    lea r8, [rbp - 0x68]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001ada	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001ade	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001ae2	          0x4d89c1	                              mov r9, r8	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001ae5	          0x4989f8	                             mov r8, rdi	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001ae8	          0x4889c7	                            mov rdi, rax	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001aeb	      0xe800000000	                          call 0x4001af0	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001af0	          0x894594	             mov dword [rbp - 0x6c], eax	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001af3	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001afa	            0x744b	                            je 0x4001b47	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001afc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b00	        0x488b4068	            mov rax, qword [rax + 0x68] 	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b04	        0x488945e0	             mov qword [rbp - 0x20], rax	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b0c	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b13	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b17	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b1d	            0x89c0	                            mov eax, eax	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b1f	        0x48c1e003	                              shl rax, 3	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b23	          0x4801c2	                            add rdx, rax	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b26	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b2a	          0x488b00	                    mov rax, qword [rax]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b2d	          0x488902	                    mov qword [rdx], rax	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b30	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b34	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b3a	          0x8d5001	                      lea edx, [rax + 1]	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b3d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b41	    0x899088000000	             mov dword [rax + 0x88], edx	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001b47	        0x837d9402	               cmp dword [rbp - 0x6c], 2	      8297	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11
0x4001b4b	     0xf84bd010000	                            je 0x4001d0e	      8297	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11
0x4001b51	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b54	          0x83e803	                              sub eax, 3	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b57	          0x83f806	                              cmp eax, 6	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b5a	     0xf876d010000	                            ja 0x4001ccd	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b60	            0x89c0	                            mov eax, eax	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b62	    0x488b04c50000	                  mov rax, qword [rax*8]	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b6a	            0xffe0	                                 jmp rax	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b6c	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b70	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b74	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b78	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      8304	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b7c	          0x488b12	                    mov rdx, qword [rdx]	      8304	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b7f	        0x4c8b4208	                 mov r8, qword [rdx + 8]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b83	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      8303	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_12
0x4001b87	          0x488b12	                    mov rdx, qword [rdx]	      8303	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_12
0x4001b8a	          0x488b12	                    mov rdx, qword [rdx]	      8303	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_12
0x4001b8d	          0x488b12	                    mov rdx, qword [rdx]	      8303	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_12
0x4001b90	        0x488b7208	                mov rsi, qword [rdx + 8]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b94	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b98	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001b9c	        0x488b7d80	             mov rdi, qword [rbp - 0x80]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001ba0	    0x41b901000000	                              mov r9d, 1	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001ba6	            0xffd0	                                call rax	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001ba8	      0xe961010000	                           jmp 0x4001d0e	      8305	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bad	        0x488b4598	             mov rax, qword [rbp - 0x68]	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001bb1	          0x4885c0	                           test rax, rax	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001bb4	            0x750f	                           jne 0x4001bc5	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001bb6	      0xbe73200000	                         mov esi, 0x2073	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001bbb	      0xbf00000000	                              mov edi, 0	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001bc0	      0xe800000000	                          call 0x4001bc5	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001bc5	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bc9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bcd	        0x488b4040	            mov rax, qword [rax + 0x40] 	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bd1	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      8310	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bd5	          0x488b12	                    mov rdx, qword [rdx]	      8310	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bd8	        0x4c8b4208	                 mov r8, qword [rdx + 8]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bdc	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001be0	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001be4	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001be8	        0x488b7d80	             mov rdi, qword [rbp - 0x80]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bec	            0xffd0	                                call rax	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bee	      0xe91b010000	                           jmp 0x4001d0e	      8311	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bf3	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bf7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bfb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bff	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      8317	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c03	          0x488b12	                    mov rdx, qword [rdx]	      8317	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c06	        0x488b7208	                mov rsi, qword [rdx + 8]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c0a	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      8316	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c0e	          0x488b12	                    mov rdx, qword [rdx]	      8316	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c11	        0x4c8b4210	              mov r8, qword [rdx + 0x10]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c15	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      8316	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c19	          0x488b12	                    mov rdx, qword [rdx]	      8316	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c1c	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      8316	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c20	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      8316	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c24	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      8315	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_14
0x4001c28	          0x488b12	                    mov rdx, qword [rdx]	      8315	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_14
0x4001c2b	          0x488b12	                    mov rdx, qword [rdx]	      8315	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_14
0x4001c2e	          0x488b12	                    mov rdx, qword [rdx]	      8315	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_14
0x4001c31	        0x488b5208	                mov rdx, qword [rdx + 8]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c35	        0x4c8b4da8	              mov r9, qword [rbp - 0x58]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c39	        0x488b7d80	             mov rdi, qword [rbp - 0x80]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c3d	              0x56	                                push rsi	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c3e	          0xff75b0	                 push qword [rbp - 0x50]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c41	      0xbe00000000	                              mov esi, 0	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c46	            0xffd0	                                call rax	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c48	        0x4883c410	                           add rsp, 0x10	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c4c	      0xe9bd000000	                           jmp 0x4001d0e	      8318	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c51	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c55	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c59	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c5d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c61	          0x4c8b20	                    mov r12, qword [rax]	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c64	      0xbe00000000	                              mov esi, 0	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x4001c69	      0xbf00000000	                              mov edi, 0	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x4001c6e	      0xe800000000	                          call 0x4001c73	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x4001c73	          0x4889c7	                            mov rdi, rax	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x4001c76	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c7a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c7e	          0x4c89e1	                            mov rcx, r12	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c81	          0x4889c6	                            mov rsi, rax	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c84	      0xb800000000	                              mov eax, 0	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c89	            0xffd3	                                call rbx	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001c8b	      0xe9a9000000	                           jmp 0x4001d39	      8328	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c90	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001c94	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001c98	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001c9c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001ca0	          0x4c8b20	                    mov r12, qword [rax]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001ca3	      0xbe00000000	                              mov esi, 0	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001ca8	      0xbf00000000	                              mov edi, 0	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001cad	      0xe800000000	                          call 0x4001cb2	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001cb2	          0x4889c7	                            mov rdi, rax	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001cb5	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001cb9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001cbd	          0x4c89e1	                            mov rcx, r12	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001cc0	          0x4889c6	                            mov rsi, rax	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001cc3	      0xb800000000	                              mov eax, 0	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001cc8	            0xffd3	                                call rbx	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001cca	              0x90	                                     nop	      8338	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001ccb	            0xeb6c	                           jmp 0x4001d39	      8338	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001ccd	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001cd1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001cd5	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001cd9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001cdd	          0x4c8b20	                    mov r12, qword [rax]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001ce0	      0xbe00000000	                              mov esi, 0	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x4001ce5	      0xbf00000000	                              mov edi, 0	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x4001cea	      0xe800000000	                          call 0x4001cef	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x4001cef	          0x4889c7	                            mov rdi, rax	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x4001cf2	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001cf5	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001cf9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001cfd	          0x4189c8	                            mov r8d, ecx	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001d00	          0x4c89e1	                            mov rcx, r12	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001d03	          0x4889c6	                            mov rsi, rax	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001d06	      0xb800000000	                              mov eax, 0	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001d0b	            0xffd3	                                call rbx	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001d0d	              0x90	                                     nop	      8347	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001d0e	      0x488345a008	               add qword [rbp - 0x60], 8	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001d13	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001d17	          0x488b00	                    mov rax, qword [rax]	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001d1a	          0x4885c0	                           test rax, rax	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001d1d	     0xf853bfcffff	                           jne 0x400195e	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001d23	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8354	reloc.c	FUNCTION_17	CALL_21
0x4001d27	          0x4889c7	                            mov rdi, rax	      8354	reloc.c	FUNCTION_17	CALL_21
0x4001d2a	      0xe800000000	                          call 0x4001d2f	      8354	reloc.c	FUNCTION_17	CALL_21
0x4001d2f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      8355	reloc.c	FUNCTION_17
0x4001d36	            0xeb12	                           jmp 0x4001d4a	      8355	reloc.c	FUNCTION_17
0x4001d38	              0x90	                                     nop	      8241	reloc.c	FUNCTION_17	IF_6
0x4001d39	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8358	reloc.c	FUNCTION_17	CALL_22
0x4001d3d	          0x4889c7	                            mov rdi, rax	      8358	reloc.c	FUNCTION_17	CALL_22
0x4001d40	      0xe800000000	                          call 0x4001d45	      8358	reloc.c	FUNCTION_17	CALL_22
0x4001d45	      0xb800000000	                              mov eax, 0	      8359	reloc.c	FUNCTION_17
0x4001d4a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      8360	reloc.c	FUNCTION_17
0x4001d4e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      8360	reloc.c	FUNCTION_17
0x4001d57	            0x7405	                            je 0x4001d5e	      8360	reloc.c	FUNCTION_17
0x4001d59	      0xe800000000	                          call 0x4001d5e	      8360	reloc.c	FUNCTION_17
0x4001d5e	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      8360	reloc.c	FUNCTION_17
0x4001d62	              0x5b	                                 pop rbx	      8360	reloc.c	FUNCTION_17
0x4001d63	            0x415c	                                 pop r12	      8360	reloc.c	FUNCTION_17
0x4001d65	              0x5d	                                 pop rbp	      8360	reloc.c	FUNCTION_17
0x4001d66	              0xc3	                                     ret	      8360	reloc.c	FUNCTION_17
_bfd_clear_contents	DO,0:SWITCH,2:ELSE,0:IF,1:WHILE,0:CALL,15:FOR,0:functions,0	119
0x40014b4	              0x55	                                push rbp	      1621	reloc.c	FUNCTION_8
0x40014b5	          0x4889e5	                            mov rbp, rsp	      1621	reloc.c	FUNCTION_8
0x40014b8	        0x4883ec30	                           sub rsp, 0x30	      1621	reloc.c	FUNCTION_8
0x40014bc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1621	reloc.c	FUNCTION_8
0x40014c0	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1621	reloc.c	FUNCTION_8
0x40014c4	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1621	reloc.c	FUNCTION_8
0x40014c8	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1621	reloc.c	FUNCTION_8
0x40014cc	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1623	reloc.c	FUNCTION_8
0x40014d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1626	reloc.c	FUNCTION_8	CALL_1
0x40014d8	          0x4889c7	                            mov rdi, rax	      1626	reloc.c	FUNCTION_8	CALL_1
0x40014db	      0xe800000000	                          call 0x40014e0	      1626	reloc.c	FUNCTION_8	CALL_1
0x40014e0	          0x8945f4	              mov dword [rbp - 0xc], eax	      1626	reloc.c	FUNCTION_8	CALL_1
0x40014e3	        0x837df408	                cmp dword [rbp - 0xc], 8	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x40014e7	            0x770d	                            ja 0x40014f6	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x40014e9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x40014ec	    0x488b04c50000	                  mov rax, qword [rax*8]	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x40014f4	            0xffe0	                                 jmp rax	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x40014f6	      0xba00000000	                              mov edx, 0	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x40014fb	      0xbe5e060000	                          mov esi, 0x65e	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4001500	      0xbf00000000	                              mov edi, 0	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4001505	      0xe800000000	                          call 0x400150a	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x400150a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1634	reloc.c	FUNCTION_8	SWITCH_1	CALL_3
0x400150e	           0xfb600	                   movzx eax, byte [rax]	      1634	reloc.c	FUNCTION_8	SWITCH_1	CALL_3
0x4001511	           0xfb6c0	                           movzx eax, al	      1634	reloc.c	FUNCTION_8	SWITCH_1	CALL_3
0x4001514	        0x488945f8	                mov qword [rbp - 8], rax	      1634	reloc.c	FUNCTION_8	SWITCH_1	CALL_3
0x4001518	            0xeb50	                           jmp 0x400156a	      1635	reloc.c	FUNCTION_8	SWITCH_1
0x400151a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x400151e	        0x488b4008	                mov rax, qword [rax + 8]	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4001522	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4001526	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x400152a	          0x4889d7	                            mov rdi, rdx	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x400152d	            0xffd0	                                call rax	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x400152f	        0x488945f8	                mov qword [rbp - 8], rax	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4001533	            0xeb35	                           jmp 0x400156a	      1638	reloc.c	FUNCTION_8	SWITCH_1
0x4001535	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4001539	        0x488b4008	                mov rax, qword [rax + 8]	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x400153d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4001541	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4001545	          0x4889d7	                            mov rdi, rdx	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4001548	            0xffd0	                                call rax	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x400154a	        0x488945f8	                mov qword [rbp - 8], rax	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x400154e	            0xeb1a	                           jmp 0x400156a	      1641	reloc.c	FUNCTION_8	SWITCH_1
0x4001550	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4001554	        0x488b4008	                mov rax, qword [rax + 8]	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4001558	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x400155c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4001560	          0x4889d7	                            mov rdi, rdx	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4001563	            0xffd0	                                call rax	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4001565	        0x488945f8	                mov qword [rbp - 8], rax	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4001569	              0x90	                                     nop	      1648	reloc.c	FUNCTION_8	SWITCH_1
0x400156a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1652	reloc.c	FUNCTION_8
0x400156e	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1652	reloc.c	FUNCTION_8
0x4001572	          0x48f7d0	                                 not rax	      1652	reloc.c	FUNCTION_8
0x4001575	        0x482145f8	                and qword [rbp - 8], rax	      1652	reloc.c	FUNCTION_8
0x4001579	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x400157d	          0x488b00	                    mov rax, qword [rax]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001580	      0xbe00000000	                              mov esi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001585	          0x4889c7	                            mov rdi, rax	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001588	      0xe800000000	                          call 0x400158d	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x400158d	            0x85c0	                           test eax, eax	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x400158f	            0x7515	                           jne 0x40015a6	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001591	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1658	reloc.c	FUNCTION_8	IF_1
0x4001595	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1658	reloc.c	FUNCTION_8	IF_1
0x4001599	          0x83e001	                              and eax, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x400159c	          0x4885c0	                           test rax, rax	      1658	reloc.c	FUNCTION_8	IF_1
0x400159f	            0x7405	                            je 0x40015a6	      1658	reloc.c	FUNCTION_8	IF_1
0x40015a1	      0x48834df801	                   or qword [rbp - 8], 1	      1659	reloc.c	FUNCTION_8	IF_1
0x40015a6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015a9	          0x83f802	                              cmp eax, 2	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015ac	            0x7438	                            je 0x40015e6	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015ae	          0x83f802	                              cmp eax, 2	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015b1	            0x7f07	                            jg 0x40015ba	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015b3	          0x83f801	                              cmp eax, 1	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015b6	            0x7420	                            je 0x40015d8	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015b8	            0xeb0a	                           jmp 0x40015c4	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015ba	          0x83f804	                              cmp eax, 4	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015bd	            0x7445	                            je 0x4001604	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015bf	          0x83f808	                              cmp eax, 8	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015c2	            0x745e	                            je 0x4001622	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x40015c4	      0xba00000000	                              mov edx, 0	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x40015c9	      0xbe82060000	                          mov esi, 0x682	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x40015ce	      0xbf00000000	                              mov edi, 0	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x40015d3	      0xe800000000	                          call 0x40015d8	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x40015d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1668	reloc.c	FUNCTION_8	SWITCH_2	CALL_11
0x40015dc	            0x89c2	                            mov edx, eax	      1668	reloc.c	FUNCTION_8	SWITCH_2	CALL_11
0x40015de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1668	reloc.c	FUNCTION_8	SWITCH_2	CALL_11
0x40015e2	            0x8810	                      mov byte [rax], dl	      1668	reloc.c	FUNCTION_8	SWITCH_2	CALL_11
0x40015e4	            0xeb5c	                           jmp 0x4001642	      1669	reloc.c	FUNCTION_8	SWITCH_2
0x40015e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x40015ea	        0x488b4008	                mov rax, qword [rax + 8]	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x40015ee	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x40015f2	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x40015f6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x40015fa	          0x4889ce	                            mov rsi, rcx	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x40015fd	          0x4889d7	                            mov rdi, rdx	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x4001600	            0xffd0	                                call rax	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x4001602	            0xeb3e	                           jmp 0x4001642	      1672	reloc.c	FUNCTION_8	SWITCH_2
0x4001604	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4001608	        0x488b4008	                mov rax, qword [rax + 8]	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x400160c	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4001610	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4001614	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4001618	          0x4889ce	                            mov rsi, rcx	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x400161b	          0x4889d7	                            mov rdi, rdx	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x400161e	            0xffd0	                                call rax	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4001620	            0xeb20	                           jmp 0x4001642	      1675	reloc.c	FUNCTION_8	SWITCH_2
0x4001622	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4001626	        0x488b4008	                mov rax, qword [rax + 8]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x400162a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x400162e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4001632	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4001636	          0x4889ce	                            mov rsi, rcx	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4001639	          0x4889d7	                            mov rdi, rdx	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x400163c	            0xffd0	                                call rax	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x400163e	              0x90	                                     nop	      1682	reloc.c	FUNCTION_8	SWITCH_2
0x400163f	            0xeb01	                           jmp 0x4001642	      1682	reloc.c	FUNCTION_8	SWITCH_2
0x4001641	              0x90	                                     nop	      1632	reloc.c	FUNCTION_8	SWITCH_1
0x4001642	              0xc9	                                   leave	      1684	reloc.c	FUNCTION_8
0x4001643	              0xc3	                                     ret	      1684	reloc.c	FUNCTION_8
bfd_reloc_type_lookup	DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,1:FOR,0:functions,0	15
0x4001644	              0x55	                                push rbp	      8014	reloc.c	FUNCTION_9
0x4001645	          0x4889e5	                            mov rbp, rsp	      8014	reloc.c	FUNCTION_9
0x4001648	        0x4883ec10	                           sub rsp, 0x10	      8014	reloc.c	FUNCTION_9
0x400164c	        0x48897df8	                mov qword [rbp - 8], rdi	      8014	reloc.c	FUNCTION_9
0x4001650	          0x8975f4	              mov dword [rbp - 0xc], esi	      8014	reloc.c	FUNCTION_9
0x4001653	        0x488b45f8	                mov rax, qword [rbp - 8]	      8015	reloc.c	FUNCTION_9	CALL_1
0x4001657	        0x488b4008	                mov rax, qword [rax + 8]	      8015	reloc.c	FUNCTION_9	CALL_1
0x400165b	    0x488b80800200	           mov rax, qword [rax + 0x280] 	      8015	reloc.c	FUNCTION_9	CALL_1
0x4001662	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      8015	reloc.c	FUNCTION_9	CALL_1
0x4001665	        0x488b55f8	                mov rdx, qword [rbp - 8]	      8015	reloc.c	FUNCTION_9	CALL_1
0x4001669	            0x89ce	                            mov esi, ecx	      8015	reloc.c	FUNCTION_9	CALL_1
0x400166b	          0x4889d7	                            mov rdi, rdx	      8015	reloc.c	FUNCTION_9	CALL_1
0x400166e	            0xffd0	                                call rax	      8015	reloc.c	FUNCTION_9	CALL_1
0x4001670	              0xc9	                                   leave	      8016	reloc.c	FUNCTION_9
0x4001671	              0xc3	                                     ret	      8016	reloc.c	FUNCTION_9
bfd_generic_merge_sections	DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,0:FOR,0:functions,0	7
0x4001809	              0x55	                                push rbp	      8181	reloc.c	FUNCTION_16
0x400180a	          0x4889e5	                            mov rbp, rsp	      8181	reloc.c	FUNCTION_16
0x400180d	        0x48897df8	                mov qword [rbp - 8], rdi	      8181	reloc.c	FUNCTION_16
0x4001811	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8181	reloc.c	FUNCTION_16
0x4001815	      0xb801000000	                              mov eax, 1	      8182	reloc.c	FUNCTION_16
0x400181a	              0x5d	                                 pop rbp	      8183	reloc.c	FUNCTION_16
0x400181b	              0xc3	                                     ret	      8183	reloc.c	FUNCTION_16
bfd_reloc_offset_in_range	DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,2:FOR,0:functions,0	40
0x40001e9	              0x55	                                push rbp	       567	reloc.c	FUNCTION_3
0x40001ea	          0x4889e5	                            mov rbp, rsp	       567	reloc.c	FUNCTION_3
0x40001ed	        0x4883ec30	                           sub rsp, 0x30	       567	reloc.c	FUNCTION_3
0x40001f1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       567	reloc.c	FUNCTION_3
0x40001f5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       567	reloc.c	FUNCTION_3
0x40001f9	        0x488955d8	             mov qword [rbp - 0x28], rdx	       567	reloc.c	FUNCTION_3
0x40001fd	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       567	reloc.c	FUNCTION_3
0x4000201	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       568	reloc.c	FUNCTION_3	CALL_1
0x4000205	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4000209	          0x83e018	                           and eax, 0x18	       568	reloc.c	FUNCTION_3	CALL_1
0x400020c	            0x3c10	                            cmp al, 0x10	       568	reloc.c	FUNCTION_3	CALL_1
0x400020e	            0x7417	                            je 0x4000227	       568	reloc.c	FUNCTION_3	CALL_1
0x4000210	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       568	reloc.c	FUNCTION_3	CALL_1
0x4000214	        0x488b4040	            mov rax, qword [rax + 0x40] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4000218	          0x4885c0	                           test rax, rax	       568	reloc.c	FUNCTION_3	CALL_1
0x400021b	            0x740a	                            je 0x4000227	       568	reloc.c	FUNCTION_3	CALL_1
0x400021d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       568	reloc.c	FUNCTION_3	CALL_1
0x4000221	        0x488b4040	            mov rax, qword [rax + 0x40] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4000225	            0xeb08	                           jmp 0x400022f	       568	reloc.c	FUNCTION_3	CALL_1
0x4000227	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       568	reloc.c	FUNCTION_3	CALL_1
0x400022b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       568	reloc.c	FUNCTION_3	CALL_1
0x400022f	        0x488945f0	             mov qword [rbp - 0x10], rax	       568	reloc.c	FUNCTION_3	CALL_1
0x4000233	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       569	reloc.c	FUNCTION_3	CALL_2
0x4000237	          0x4889c7	                            mov rdi, rax	       569	reloc.c	FUNCTION_3	CALL_2
0x400023a	      0xe800000000	                          call 0x400023f	       569	reloc.c	FUNCTION_3	CALL_2
0x400023f	            0x89c0	                            mov eax, eax	       569	reloc.c	FUNCTION_3	CALL_2
0x4000241	        0x488945f8	                mov qword [rbp - 8], rax	       569	reloc.c	FUNCTION_3	CALL_2
0x4000245	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       574	reloc.c	FUNCTION_3
0x4000249	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       574	reloc.c	FUNCTION_3
0x400024d	            0x7718	                            ja 0x4000267	       574	reloc.c	FUNCTION_3
0x400024f	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       574	reloc.c	FUNCTION_3
0x4000253	        0x488b45f8	                mov rax, qword [rbp - 8]	       574	reloc.c	FUNCTION_3
0x4000257	          0x4801d0	                            add rax, rdx	       574	reloc.c	FUNCTION_3
0x400025a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       574	reloc.c	FUNCTION_3
0x400025e	            0x7707	                            ja 0x4000267	       574	reloc.c	FUNCTION_3
0x4000260	      0xb801000000	                              mov eax, 1	       574	reloc.c	FUNCTION_3
0x4000265	            0xeb05	                           jmp 0x400026c	       574	reloc.c	FUNCTION_3
0x4000267	      0xb800000000	                              mov eax, 0	       574	reloc.c	FUNCTION_3
0x400026c	              0xc9	                                   leave	       575	reloc.c	FUNCTION_3
0x400026d	              0xc3	                                     ret	       575	reloc.c	FUNCTION_3
_bfd_nodynamic_canonicalize_dynamic_reloc	DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,1:FOR,0:functions,0	11
0x4001e43	              0x55	                                push rbp	      8437	reloc.c	FUNCTION_22
0x4001e44	          0x4889e5	                            mov rbp, rsp	      8437	reloc.c	FUNCTION_22
0x4001e47	        0x4883ec20	                           sub rsp, 0x20	      8437	reloc.c	FUNCTION_22
0x4001e4b	        0x48897df8	                mov qword [rbp - 8], rdi	      8437	reloc.c	FUNCTION_22
0x4001e4f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8437	reloc.c	FUNCTION_22
0x4001e53	        0x488955e8	             mov qword [rbp - 0x18], rdx	      8437	reloc.c	FUNCTION_22
0x4001e57	        0x488b45f8	                mov rax, qword [rbp - 8]	      8438	reloc.c	FUNCTION_22	CALL_1
0x4001e5b	          0x4889c7	                            mov rdi, rax	      8438	reloc.c	FUNCTION_22	CALL_1
0x4001e5e	      0xe800000000	                          call 0x4001e63	      8438	reloc.c	FUNCTION_22	CALL_1
0x4001e63	              0xc9	                                   leave	      8439	reloc.c	FUNCTION_22
0x4001e64	              0xc3	                                     ret	      8439	reloc.c	FUNCTION_22
bfd_get_reloc_code_name	DO,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,0:FOR,0:functions,0	11
0x400172b	              0x55	                                push rbp	      8082	reloc.c	FUNCTION_12
0x400172c	          0x4889e5	                            mov rbp, rsp	      8082	reloc.c	FUNCTION_12
0x400172f	          0x897dfc	                mov dword [rbp - 4], edi	      8082	reloc.c	FUNCTION_12
0x4001732	    0x817dfccd0800	              cmp dword [rbp - 4], 0x8cd	      8083	reloc.c	FUNCTION_12	IF_1
0x4001739	            0x7607	                           jbe 0x4001742	      8083	reloc.c	FUNCTION_12	IF_1
0x400173b	      0xb800000000	                              mov eax, 0	      8084	reloc.c	FUNCTION_12	IF_1
0x4001740	            0xeb0b	                           jmp 0x400174d	      8084	reloc.c	FUNCTION_12	IF_1
0x4001742	          0x8b45fc	                mov eax, dword [rbp - 4]	      8085	reloc.c	FUNCTION_12
0x4001745	    0x488b04c50000	                  mov rax, qword [rax*8]	      8085	reloc.c	FUNCTION_12
0x400174d	              0x5d	                                 pop rbp	      8086	reloc.c	FUNCTION_12
0x400174e	              0xc3	                                     ret	      8086	reloc.c	FUNCTION_12
bfd_generic_gc_sections	DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,0:FOR,0:functions,0	7
0x40017b1	              0x55	                                push rbp	      8134	reloc.c	FUNCTION_14
0x40017b2	          0x4889e5	                            mov rbp, rsp	      8134	reloc.c	FUNCTION_14
0x40017b5	        0x48897df8	                mov qword [rbp - 8], rdi	      8134	reloc.c	FUNCTION_14
0x40017b9	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8134	reloc.c	FUNCTION_14
0x40017bd	      0xb801000000	                              mov eax, 1	      8135	reloc.c	FUNCTION_14
0x40017c2	              0x5d	                                 pop rbp	      8136	reloc.c	FUNCTION_14
0x40017c3	              0xc3	                                     ret	      8136	reloc.c	FUNCTION_14
bfd_generic_lookup_section_flags	DO,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,2:FOR,0:functions,0	19
0x40017c4	              0x55	                                push rbp	      8156	reloc.c	FUNCTION_15
0x40017c5	          0x4889e5	                            mov rbp, rsp	      8156	reloc.c	FUNCTION_15
0x40017c8	        0x4883ec20	                           sub rsp, 0x20	      8156	reloc.c	FUNCTION_15
0x40017cc	        0x48897df8	                mov qword [rbp - 8], rdi	      8156	reloc.c	FUNCTION_15
0x40017d0	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8156	reloc.c	FUNCTION_15
0x40017d4	        0x488955e8	             mov qword [rbp - 0x18], rdx	      8156	reloc.c	FUNCTION_15
0x40017d8	      0x48837df000	               cmp qword [rbp - 0x10], 0	      8157	reloc.c	FUNCTION_15	IF_1
0x40017dd	            0x7423	                            je 0x4001802	      8157	reloc.c	FUNCTION_15	IF_1
0x40017df	      0xbe00000000	                              mov esi, 0	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40017e4	      0xbf00000000	                              mov edi, 0	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40017e9	      0xe800000000	                          call 0x40017ee	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40017ee	          0x4889c7	                            mov rdi, rax	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40017f1	      0xb800000000	                              mov eax, 0	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40017f6	      0xe800000000	                          call 0x40017fb	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40017fb	      0xb800000000	                              mov eax, 0	      8160	reloc.c	FUNCTION_15	IF_1
0x4001800	            0xeb05	                           jmp 0x4001807	      8160	reloc.c	FUNCTION_15	IF_1
0x4001802	      0xb801000000	                              mov eax, 1	      8162	reloc.c	FUNCTION_15
0x4001807	              0xc9	                                   leave	      8163	reloc.c	FUNCTION_15
0x4001808	              0xc3	                                     ret	      8163	reloc.c	FUNCTION_15
_bfd_unrecognized_reloc	DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,5:FOR,0:functions,0	28
0x4001d99	              0x55	                                push rbp	      8405	reloc.c	FUNCTION_19
0x4001d9a	          0x4889e5	                            mov rbp, rsp	      8405	reloc.c	FUNCTION_19
0x4001d9d	        0x4883ec20	                           sub rsp, 0x20	      8405	reloc.c	FUNCTION_19
0x4001da1	        0x48897df8	                mov qword [rbp - 8], rdi	      8405	reloc.c	FUNCTION_19
0x4001da5	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8405	reloc.c	FUNCTION_19
0x4001da9	          0x8955ec	             mov dword [rbp - 0x14], edx	      8405	reloc.c	FUNCTION_19
0x4001dac	      0xbe00000000	                              mov esi, 0	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001db1	      0xbf00000000	                              mov edi, 0	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001db6	      0xe800000000	                          call 0x4001dbb	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001dbb	          0x4889c7	                            mov rdi, rax	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001dbe	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001dc2	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001dc5	        0x488b45f8	                mov rax, qword [rbp - 8]	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001dc9	          0x4889c6	                            mov rsi, rax	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001dcc	      0xb800000000	                              mov eax, 0	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001dd1	      0xe800000000	                          call 0x4001dd6	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001dd6	      0xbe00000000	                              mov esi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001ddb	      0xbf00000000	                              mov edi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001de0	      0xe800000000	                          call 0x4001de5	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001de5	      0xbe00000000	                              mov esi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001dea	          0x4889c7	                            mov rdi, rax	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001ded	      0xb800000000	                              mov eax, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001df2	      0xe800000000	                          call 0x4001df7	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001df7	      0xbf11000000	                           mov edi, 0x11	      8414	reloc.c	FUNCTION_19	CALL_5
0x4001dfc	      0xe800000000	                          call 0x4001e01	      8414	reloc.c	FUNCTION_19	CALL_5
0x4001e01	      0xb800000000	                              mov eax, 0	      8415	reloc.c	FUNCTION_19
0x4001e06	              0xc9	                                   leave	      8416	reloc.c	FUNCTION_19
0x4001e07	              0xc3	                                     ret	      8416	reloc.c	FUNCTION_19
bfd_get_reloc_size	DO,0:SWITCH,1:ELSE,0:IF,0:WHILE,0:CALL,1:FOR,0:functions,0	36
0x4000040	              0x55	                                push rbp	       431	reloc.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       431	reloc.c	FUNCTION_1
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       431	reloc.c	FUNCTION_1
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       431	reloc.c	FUNCTION_1
0x400004c	        0x488b45f8	                mov rax, qword [rbp - 8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000050	          0x8b4008	                mov eax, dword [rax + 8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000053	          0x83c002	                              add eax, 2	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000056	          0x83f80a	                            cmp eax, 0xa	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000059	            0x774b	                            ja 0x40000a6	       432	reloc.c	FUNCTION_1	SWITCH_1
0x400005b	            0x89c0	                            mov eax, eax	       432	reloc.c	FUNCTION_1	SWITCH_1
0x400005d	    0x488b04c50000	                  mov rax, qword [rax*8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000065	            0xffe0	                                 jmp rax	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000067	      0xb803000000	                              mov eax, 3	       434	reloc.c	FUNCTION_1	SWITCH_1
0x400006c	            0xeb4c	                           jmp 0x40000ba	       434	reloc.c	FUNCTION_1	SWITCH_1
0x400006e	      0xb801000000	                              mov eax, 1	       435	reloc.c	FUNCTION_1	SWITCH_1
0x4000073	            0xeb45	                           jmp 0x40000ba	       435	reloc.c	FUNCTION_1	SWITCH_1
0x4000075	      0xb802000000	                              mov eax, 2	       436	reloc.c	FUNCTION_1	SWITCH_1
0x400007a	            0xeb3e	                           jmp 0x40000ba	       436	reloc.c	FUNCTION_1	SWITCH_1
0x400007c	      0xb804000000	                              mov eax, 4	       437	reloc.c	FUNCTION_1	SWITCH_1
0x4000081	            0xeb37	                           jmp 0x40000ba	       437	reloc.c	FUNCTION_1	SWITCH_1
0x4000083	      0xb800000000	                              mov eax, 0	       438	reloc.c	FUNCTION_1	SWITCH_1
0x4000088	            0xeb30	                           jmp 0x40000ba	       438	reloc.c	FUNCTION_1	SWITCH_1
0x400008a	      0xb808000000	                              mov eax, 8	       439	reloc.c	FUNCTION_1	SWITCH_1
0x400008f	            0xeb29	                           jmp 0x40000ba	       439	reloc.c	FUNCTION_1	SWITCH_1
0x4000091	      0xb810000000	                           mov eax, 0x10	       440	reloc.c	FUNCTION_1	SWITCH_1
0x4000096	            0xeb22	                           jmp 0x40000ba	       440	reloc.c	FUNCTION_1	SWITCH_1
0x4000098	      0xb802000000	                              mov eax, 2	       441	reloc.c	FUNCTION_1	SWITCH_1
0x400009d	            0xeb1b	                           jmp 0x40000ba	       441	reloc.c	FUNCTION_1	SWITCH_1
0x400009f	      0xb804000000	                              mov eax, 4	       442	reloc.c	FUNCTION_1	SWITCH_1
0x40000a4	            0xeb14	                           jmp 0x40000ba	       442	reloc.c	FUNCTION_1	SWITCH_1
0x40000a6	      0xba00000000	                              mov edx, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000ab	      0xbebb010000	                          mov esi, 0x1bb	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000b0	      0xbf00000000	                              mov edi, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000b5	      0xe800000000	                          call 0x40000ba	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000ba	              0xc9	                                   leave	       445	reloc.c	FUNCTION_1
0x40000bb	              0xc3	                                     ret	       445	reloc.c	FUNCTION_1
bfd_install_relocation	DO,0:SWITCH,1:ELSE,4:IF,12:WHILE,0:CALL,20:FOR,0:functions,0	403
0x4000a6c	              0x55	                                push rbp	      1022	reloc.c	FUNCTION_5
0x4000a6d	          0x4889e5	                            mov rbp, rsp	      1022	reloc.c	FUNCTION_5
0x4000a70	              0x53	                                push rbx	      1022	reloc.c	FUNCTION_5
0x4000a71	    0x4881ec980000	                           sub rsp, 0x98	      1022	reloc.c	FUNCTION_5
0x4000a78	        0x48897d88	             mov qword [rbp - 0x78], rdi	      1022	reloc.c	FUNCTION_5
0x4000a7c	        0x48897580	             mov qword [rbp - 0x80], rsi	      1022	reloc.c	FUNCTION_5
0x4000a80	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      1022	reloc.c	FUNCTION_5
0x4000a87	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	      1022	reloc.c	FUNCTION_5
0x4000a8e	    0x4c898568ffff	              mov qword [rbp - 0x98], r8	      1022	reloc.c	FUNCTION_5
0x4000a95	    0x4c898d60ffff	              mov qword [rbp - 0xa0], r9	      1022	reloc.c	FUNCTION_5
0x4000a9c	    0xc74598020000	               mov dword [rbp - 0x68], 2	      1024	reloc.c	FUNCTION_5
0x4000aa3	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1026	reloc.c	FUNCTION_5
0x4000aab	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1027	reloc.c	FUNCTION_5
0x4000aaf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1027	reloc.c	FUNCTION_5
0x4000ab3	        0x488945b0	             mov qword [rbp - 0x50], rax	      1027	reloc.c	FUNCTION_5
0x4000ab7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1032	reloc.c	FUNCTION_5
0x4000abb	          0x488b00	                    mov rax, qword [rax]	      1032	reloc.c	FUNCTION_5
0x4000abe	          0x488b00	                    mov rax, qword [rax]	      1032	reloc.c	FUNCTION_5
0x4000ac1	        0x488945b8	             mov qword [rbp - 0x48], rax	      1032	reloc.c	FUNCTION_5
0x4000ac5	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1037	reloc.c	FUNCTION_5	IF_1
0x4000aca	            0x7464	                            je 0x4000b30	      1037	reloc.c	FUNCTION_5	IF_1
0x4000acc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1037	reloc.c	FUNCTION_5	IF_1
0x4000ad0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1037	reloc.c	FUNCTION_5	IF_1
0x4000ad4	          0x4885c0	                           test rax, rax	      1037	reloc.c	FUNCTION_5	IF_1
0x4000ad7	            0x7457	                            je 0x4000b30	      1037	reloc.c	FUNCTION_5	IF_1
0x4000ad9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000add	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000ae1	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      1050	reloc.c	FUNCTION_5	IF_1
0x4000ae8	          0x4889d1	                            mov rcx, rdx	      1050	reloc.c	FUNCTION_5	IF_1
0x4000aeb	          0x48f7d9	                                 neg rcx	      1050	reloc.c	FUNCTION_5	IF_1
0x4000aee	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000af5	          0x4801d1	                            add rcx, rdx	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000af8	        0x4c8b4d88	              mov r9, qword [rbp - 0x78]	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000afc	    0x4c8b8568ffff	              mov r8, qword [rbp - 0x98]	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000b03	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000b07	        0x488b7580	             mov rsi, qword [rbp - 0x80]	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000b0b	        0x488b7d88	             mov rdi, qword [rbp - 0x78]	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000b0f	        0x4883ec08	                              sub rsp, 8	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000b13	    0xffb560ffffff	                 push qword [rbp - 0xa0]	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000b19	            0xffd0	                                call rax	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000b1b	        0x4883c410	                           add rsp, 0x10	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000b1f	          0x89459c	             mov dword [rbp - 0x64], eax	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000b22	        0x837d9c05	               cmp dword [rbp - 0x64], 5	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x4000b26	            0x7408	                            je 0x4000b30	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x4000b28	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1053	reloc.c	FUNCTION_5	IF_1	IF_2
0x4000b2b	      0xe9fc040000	                           jmp 0x400102c	      1053	reloc.c	FUNCTION_5	IF_1	IF_2
0x4000b30	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1056	reloc.c	FUNCTION_5	IF_3	CALL_2
0x4000b34	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1056	reloc.c	FUNCTION_5	IF_3	CALL_2
0x4000b38	    0x483d00000000	                              cmp rax, 0	      1056	reloc.c	FUNCTION_5	IF_3	CALL_2
0x4000b3e	            0x7528	                           jne 0x4000b68	      1056	reloc.c	FUNCTION_5	IF_3	CALL_2
0x4000b40	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1058	reloc.c	FUNCTION_5	IF_3
0x4000b44	        0x488b5008	                mov rdx, qword [rax + 8]	      1058	reloc.c	FUNCTION_5	IF_3
0x4000b48	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1058	reloc.c	FUNCTION_5	IF_3
0x4000b4f	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1058	reloc.c	FUNCTION_5	IF_3
0x4000b53	          0x4801c2	                            add rdx, rax	      1058	reloc.c	FUNCTION_5	IF_3
0x4000b56	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1058	reloc.c	FUNCTION_5	IF_3
0x4000b5a	        0x48895008	                mov qword [rax + 8], rdx	      1058	reloc.c	FUNCTION_5	IF_3
0x4000b5e	      0xb802000000	                              mov eax, 2	      1059	reloc.c	FUNCTION_5	IF_3
0x4000b63	      0xe9c4040000	                           jmp 0x400102c	      1059	reloc.c	FUNCTION_5	IF_3
0x4000b68	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000b6c	        0x488b5808	                mov rbx, qword [rax + 8]	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000b70	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000b74	          0x4889c7	                            mov rdi, rax	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000b77	      0xe800000000	                          call 0x4000b7c	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000b7c	            0x89c0	                            mov eax, eax	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000b7e	        0x480fafc3	                           imul rax, rbx	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000b82	        0x488945c0	             mov qword [rbp - 0x40], rax	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000b86	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000b8a	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000b91	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000b95	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000b99	          0x4889c7	                            mov rdi, rax	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000b9c	      0xe800000000	                          call 0x4000ba1	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000ba1	            0x85c0	                           test eax, eax	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000ba3	            0x750a	                           jne 0x4000baf	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000ba5	      0xb804000000	                              mov eax, 4	      1068	reloc.c	FUNCTION_5	IF_4
0x4000baa	      0xe97d040000	                           jmp 0x400102c	      1068	reloc.c	FUNCTION_5	IF_4
0x4000baf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000bb3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000bb7	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000bba	      0x2500100000	                         and eax, 0x1000	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000bbf	            0x85c0	                           test eax, eax	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000bc1	            0x740a	                            je 0x4000bcd	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000bc3	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1075	reloc.c	FUNCTION_5	IF_5
0x4000bcb	            0xeb0c	                           jmp 0x4000bd9	      1075	reloc.c	FUNCTION_5	IF_5
0x4000bcd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1077	reloc.c	FUNCTION_5	ELSE_1
0x4000bd1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1077	reloc.c	FUNCTION_5	ELSE_1
0x4000bd5	        0x488945a0	             mov qword [rbp - 0x60], rax	      1077	reloc.c	FUNCTION_5	ELSE_1
0x4000bd9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1079	reloc.c	FUNCTION_5
0x4000bdd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1079	reloc.c	FUNCTION_5
0x4000be1	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1079	reloc.c	FUNCTION_5
0x4000be5	        0x488945c8	             mov qword [rbp - 0x38], rax	      1079	reloc.c	FUNCTION_5
0x4000be9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1082	reloc.c	FUNCTION_5	IF_6
0x4000bed	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1082	reloc.c	FUNCTION_5	IF_6
0x4000bf0	            0x85c0	                           test eax, eax	      1082	reloc.c	FUNCTION_5	IF_6
0x4000bf2	            0x750a	                           jne 0x4000bfe	      1082	reloc.c	FUNCTION_5	IF_6
0x4000bf4	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1083	reloc.c	FUNCTION_5	IF_6
0x4000bfc	            0xeb0c	                           jmp 0x4000c0a	      1083	reloc.c	FUNCTION_5	IF_6
0x4000bfe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1085	reloc.c	FUNCTION_5	ELSE_2
0x4000c02	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1085	reloc.c	FUNCTION_5	ELSE_2
0x4000c06	        0x488945a8	             mov qword [rbp - 0x58], rax	      1085	reloc.c	FUNCTION_5	ELSE_2
0x4000c0a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1087	reloc.c	FUNCTION_5	ELSE_2
0x4000c0e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1087	reloc.c	FUNCTION_5	ELSE_2
0x4000c12	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1087	reloc.c	FUNCTION_5	ELSE_2
0x4000c16	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1087	reloc.c	FUNCTION_5	ELSE_2
0x4000c1a	          0x4801d0	                            add rax, rdx	      1087	reloc.c	FUNCTION_5	ELSE_2
0x4000c1d	        0x480145a0	            add qword [rbp - 0x60], rax 	      1087	reloc.c	FUNCTION_5	ELSE_2
0x4000c21	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1090	reloc.c	FUNCTION_5	ELSE_2
0x4000c25	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1090	reloc.c	FUNCTION_5	ELSE_2
0x4000c29	        0x480145a0	            add qword [rbp - 0x60], rax 	      1090	reloc.c	FUNCTION_5	ELSE_2
0x4000c2d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c31	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c34	            0x85c0	                           test eax, eax	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c36	            0x7443	                            je 0x4000c7b	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c38	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c3f	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c43	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c47	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c4e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c52	          0x4801d0	                            add rax, rdx	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c55	        0x482945a0	             sub qword [rbp - 0x60], rax	      1125	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000c59	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c5d	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c60	            0x85c0	                           test eax, eax	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c62	            0x7417	                            je 0x4000c7b	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c64	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c68	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c6b	            0x85c0	                           test eax, eax	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c6d	            0x740c	                            je 0x4000c7b	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c6f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1129	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c73	        0x488b4008	                mov rax, qword [rax + 8]	      1129	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c77	        0x482945a0	             sub qword [rbp - 0x60], rax	      1129	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000c7b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1132	reloc.c	FUNCTION_5	IF_9
0x4000c7f	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1132	reloc.c	FUNCTION_5	IF_9
0x4000c82	            0x85c0	                           test eax, eax	      1132	reloc.c	FUNCTION_5	IF_9
0x4000c84	            0x7532	                           jne 0x4000cb8	      1132	reloc.c	FUNCTION_5	IF_9
0x4000c86	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1137	reloc.c	FUNCTION_5	IF_9
0x4000c8a	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1137	reloc.c	FUNCTION_5	IF_9
0x4000c8e	        0x48895010	             mov qword [rax + 0x10], rdx	      1137	reloc.c	FUNCTION_5	IF_9
0x4000c92	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1138	reloc.c	FUNCTION_5	IF_9
0x4000c96	        0x488b5008	                mov rdx, qword [rax + 8]	      1138	reloc.c	FUNCTION_5	IF_9
0x4000c9a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1138	reloc.c	FUNCTION_5	IF_9
0x4000ca1	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1138	reloc.c	FUNCTION_5	IF_9
0x4000ca5	          0x4801c2	                            add rdx, rax	      1138	reloc.c	FUNCTION_5	IF_9
0x4000ca8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1138	reloc.c	FUNCTION_5	IF_9
0x4000cac	        0x48895008	                mov qword [rax + 8], rdx	      1138	reloc.c	FUNCTION_5	IF_9
0x4000cb0	          0x8b4598	             mov eax, dword [rbp - 0x68]	      1139	reloc.c	FUNCTION_5	IF_9
0x4000cb3	      0xe974030000	                           jmp 0x400102c	      1139	reloc.c	FUNCTION_5	IF_9
0x4000cb8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1148	reloc.c	FUNCTION_5	ELSE_3
0x4000cbc	        0x488b5008	                mov rdx, qword [rax + 8]	      1148	reloc.c	FUNCTION_5	ELSE_3
0x4000cc0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1148	reloc.c	FUNCTION_5	ELSE_3
0x4000cc7	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1148	reloc.c	FUNCTION_5	ELSE_3
0x4000ccb	          0x4801c2	                            add rdx, rax	      1148	reloc.c	FUNCTION_5	ELSE_3
0x4000cce	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1148	reloc.c	FUNCTION_5	ELSE_3
0x4000cd2	        0x48895008	                mov qword [rax + 8], rdx	      1148	reloc.c	FUNCTION_5	ELSE_3
0x4000cd6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000cda	        0x488b4008	                mov rax, qword [rax + 8]	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000cde	          0x8b4008	                mov eax, dword [rax + 8]	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000ce1	          0x83f802	                              cmp eax, 2	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000ce4	            0x756e	                           jne 0x4000d54	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000ce6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000cea	        0x488b4008	                mov rax, qword [rax + 8]	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000cee	          0x488b00	                    mov rax, qword [rax]	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000cf1	      0xbe00000000	                              mov esi, 0	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000cf6	          0x4889c7	                            mov rdi, rax	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000cf9	      0xe800000000	                          call 0x4000cfe	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000cfe	            0x85c0	                           test eax, eax	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000d00	            0x7452	                            je 0x4000d54	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000d02	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000d06	        0x488b4008	                mov rax, qword [rax + 8]	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000d0a	          0x488b00	                    mov rax, qword [rax]	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000d0d	      0xbe00000000	                              mov esi, 0	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000d12	          0x4889c7	                            mov rdi, rax	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000d15	      0xe800000000	                          call 0x4000d1a	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000d1a	            0x85c0	                           test eax, eax	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000d1c	            0x7436	                            je 0x4000d54	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000d1e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1224	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000d22	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1224	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000d26	        0x482945a0	             sub qword [rbp - 0x60], rax	      1224	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000d2a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000d2e	        0x488b4008	                mov rax, qword [rax + 8]	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000d32	          0x488b00	                    mov rax, qword [rax]	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000d35	      0xbe00000000	                              mov esi, 0	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000d3a	          0x4889c7	                            mov rdi, rax	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000d3d	      0xe800000000	                          call 0x4000d42	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000d42	            0x85c0	                           test eax, eax	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000d44	            0x741a	                            je 0x4000d60	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000d46	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1227	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11
0x4000d4a	    0x48c740100000	               mov qword [rax + 0x10], 0	      1227	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11
0x4000d52	            0xeb0c	                           jmp 0x4000d60	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000d54	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1231	reloc.c	FUNCTION_5	ELSE_3	ELSE_4
0x4000d58	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1231	reloc.c	FUNCTION_5	ELSE_3	ELSE_4
0x4000d5c	        0x48895010	             mov qword [rax + 0x10], rdx	      1231	reloc.c	FUNCTION_5	ELSE_3	ELSE_4
0x4000d60	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1242	reloc.c	FUNCTION_5	IF_12
0x4000d64	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1242	reloc.c	FUNCTION_5	IF_12
0x4000d67	            0x85c0	                           test eax, eax	      1242	reloc.c	FUNCTION_5	IF_12
0x4000d69	            0x7436	                            je 0x4000da1	      1242	reloc.c	FUNCTION_5	IF_12
0x4000d6b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d6f	          0x4889c7	                            mov rdi, rax	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d72	      0xe800000000	                          call 0x4000d77	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d77	            0x89c7	                            mov edi, eax	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d79	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d7d	          0x8b5004	                mov edx, dword [rax + 4]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d80	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d84	          0x8b700c	              mov esi, dword [rax + 0xc]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d87	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d8b	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d8e	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d92	          0x4989c8	                             mov r8, rcx	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d95	            0x89f9	                            mov ecx, edi	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d97	            0x89c7	                            mov edi, eax	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d99	      0xe800000000	                          call 0x4000d9e	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000d9e	          0x894598	             mov dword [rbp - 0x68], eax	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000da1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1276	reloc.c	FUNCTION_5
0x4000da5	          0x8b4004	                mov eax, dword [rax + 4]	      1276	reloc.c	FUNCTION_5
0x4000da8	            0x89c1	                            mov ecx, eax	      1276	reloc.c	FUNCTION_5
0x4000daa	        0x48d36da0	              shr qword [rbp - 0x60], cl	      1276	reloc.c	FUNCTION_5
0x4000dae	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1279	reloc.c	FUNCTION_5
0x4000db2	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1279	reloc.c	FUNCTION_5
0x4000db5	            0x89c1	                            mov ecx, eax	      1279	reloc.c	FUNCTION_5
0x4000db7	        0x48d365a0	              shl qword [rbp - 0x60], cl	      1279	reloc.c	FUNCTION_5
0x4000dbb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1317	reloc.c	FUNCTION_5
0x4000dbf	    0x482b8570ffff	             sub rax, qword [rbp - 0x90]	      1317	reloc.c	FUNCTION_5
0x4000dc6	          0x4889c2	                            mov rdx, rax	      1317	reloc.c	FUNCTION_5
0x4000dc9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1317	reloc.c	FUNCTION_5
0x4000dd0	          0x4801d0	                            add rax, rdx	      1317	reloc.c	FUNCTION_5
0x4000dd3	        0x488945d0	             mov qword [rbp - 0x30], rax	      1317	reloc.c	FUNCTION_5
0x4000dd7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000ddb	          0x8b4008	                mov eax, dword [rax + 8]	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000dde	          0x83c002	                              add eax, 2	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000de1	          0x83f806	                              cmp eax, 6	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000de4	     0xf8737020000	                            ja 0x4001021	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000dea	            0x89c0	                            mov eax, eax	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000dec	    0x488b04c50000	                  mov rax, qword [rax*8]	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000df4	            0xffe0	                                 jmp rax	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000df6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1323	reloc.c	FUNCTION_5	SWITCH_1	CALL_11
0x4000dfa	           0xfb600	                   movzx eax, byte [rax]	      1323	reloc.c	FUNCTION_5	SWITCH_1	CALL_11
0x4000dfd	          0x884595	               mov byte [rbp - 0x6b], al	      1323	reloc.c	FUNCTION_5	SWITCH_1	CALL_11
0x4000e00	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e04	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e08	            0xf7d0	                                 not eax	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e0a	            0x89c2	                            mov edx, eax	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e0c	         0xfb64595	            movzx eax, byte [rbp - 0x6b]	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e10	            0x89d1	                            mov ecx, edx	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e12	            0x21c1	                            and ecx, eax	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e14	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e18	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e1c	            0x89c2	                            mov edx, eax	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e1e	         0xfb64595	            movzx eax, byte [rbp - 0x6b]	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e22	            0x21c2	                            and edx, eax	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e24	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e28	             0x1c2	                            add edx, eax	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e2a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e2e	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e32	            0x21d0	                            and eax, edx	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e34	             0x9c8	                             or eax, ecx	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e36	          0x884595	               mov byte [rbp - 0x6b], al	      1324	reloc.c	FUNCTION_5	SWITCH_1
0x4000e39	         0xfb65595	            movzx edx, byte [rbp - 0x6b]	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000e3d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000e41	            0x8810	                      mov byte [rax], dl	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000e43	      0xe9e1010000	                           jmp 0x4001029	      1327	reloc.c	FUNCTION_5	SWITCH_1
0x4000e48	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000e4c	        0x488b4008	                mov rax, qword [rax + 8]	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000e50	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000e54	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000e58	          0x4889d7	                            mov rdi, rdx	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000e5b	            0xffd0	                                call rax	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000e5d	        0x66894596	               mov word [rbp - 0x6a], ax	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000e61	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e65	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e69	            0xf7d0	                                 not eax	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e6b	            0x89c2	                            mov edx, eax	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e6d	         0xfb74596	            movzx eax, word [rbp - 0x6a]	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e71	            0x21c2	                            and edx, eax	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e73	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e77	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e7b	            0x89c1	                            mov ecx, eax	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e7d	         0xfb74596	            movzx eax, word [rbp - 0x6a]	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e81	            0x21c1	                            and ecx, eax	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e83	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e87	             0x1c1	                            add ecx, eax	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e89	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e8d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e91	            0x21c8	                            and eax, ecx	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e93	             0x9d0	                             or eax, edx	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e95	        0x66894596	               mov word [rbp - 0x6a], ax	      1332	reloc.c	FUNCTION_5	SWITCH_1
0x4000e99	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000e9d	        0x488b4008	                mov rax, qword [rax + 8]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000ea1	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000ea5	      0x480fbf5596	            movsx rdx, word [rbp - 0x6a]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000eaa	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000eae	          0x4889ce	                            mov rsi, rcx	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000eb1	          0x4889d7	                            mov rdi, rdx	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000eb4	            0xffd0	                                call rax	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000eb6	      0xe96e010000	                           jmp 0x4001029	      1335	reloc.c	FUNCTION_5	SWITCH_1
0x4000ebb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000ebf	        0x488b4008	                mov rax, qword [rax + 8]	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000ec3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000ec7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000ecb	          0x4889d7	                            mov rdi, rdx	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000ece	            0xffd0	                                call rax	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000ed0	        0x488945d8	             mov qword [rbp - 0x28], rax	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000ed4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000ed8	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000edc	          0x48f7d0	                                 not rax	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000edf	          0x4889c2	                            mov rdx, rax	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000ee2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000ee6	          0x4889d1	                            mov rcx, rdx	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000ee9	          0x4821c1	                            and rcx, rax	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000eec	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000ef0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000ef4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000ef8	          0x4821c2	                            and rdx, rax	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000efb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000eff	          0x4801c2	                            add rdx, rax	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000f02	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000f06	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000f0a	          0x4821d0	                            and rax, rdx	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000f0d	          0x4809c8	                             or rax, rcx	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000f10	        0x488945d8	             mov qword [rbp - 0x28], rax	      1339	reloc.c	FUNCTION_5	SWITCH_1
0x4000f14	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000f18	        0x488b4008	                mov rax, qword [rax + 8]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000f1c	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000f20	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000f24	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000f28	          0x4889ce	                            mov rsi, rcx	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000f2b	          0x4889d7	                            mov rdi, rdx	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000f2e	            0xffd0	                                call rax	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000f30	      0xe9f4000000	                           jmp 0x4001029	      1342	reloc.c	FUNCTION_5	SWITCH_1
0x4000f35	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000f39	        0x488b4008	                mov rax, qword [rax + 8]	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000f3d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000f41	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000f45	          0x4889d7	                            mov rdi, rdx	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000f48	            0xffd0	                                call rax	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000f4a	        0x488945e0	             mov qword [rbp - 0x20], rax	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000f4e	        0x48f75da0	                  neg qword [rbp - 0x60]	      1346	reloc.c	FUNCTION_5	SWITCH_1
0x4000f52	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f56	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f5a	          0x48f7d0	                                 not rax	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f5d	          0x4889c2	                            mov rdx, rax	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f60	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f64	          0x4889d1	                            mov rcx, rdx	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f67	          0x4821c1	                            and rcx, rax	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f6a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f6e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f72	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f76	          0x4821c2	                            and rdx, rax	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f79	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f7d	          0x4801c2	                            add rdx, rax	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f80	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f84	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f88	          0x4821d0	                            and rax, rdx	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f8b	          0x4809c8	                             or rax, rcx	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f8e	        0x488945e0	             mov qword [rbp - 0x20], rax	      1347	reloc.c	FUNCTION_5	SWITCH_1
0x4000f92	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000f96	        0x488b4008	                mov rax, qword [rax + 8]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000f9a	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000f9e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000fa2	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000fa6	          0x4889ce	                            mov rsi, rcx	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000fa9	          0x4889d7	                            mov rdi, rdx	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000fac	            0xffd0	                                call rax	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000fae	            0xeb79	                           jmp 0x4001029	      1350	reloc.c	FUNCTION_5	SWITCH_1
0x4000fb0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000fb4	        0x488b4008	                mov rax, qword [rax + 8]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000fb8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000fbc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000fc0	          0x4889d7	                            mov rdi, rdx	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000fc3	            0xffd0	                                call rax	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000fc5	        0x488945e8	             mov qword [rbp - 0x18], rax	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000fc9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fcd	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fd1	          0x48f7d0	                                 not rax	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fd4	        0x482345e8	             and rax, qword [rbp - 0x18]	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fd8	          0x4889c2	                            mov rdx, rax	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fdb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fdf	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fe3	        0x482345e8	             and rax, qword [rbp - 0x18]	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fe7	          0x4889c1	                            mov rcx, rax	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fea	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fee	          0x4801c1	                            add rcx, rax	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000ff1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000ff5	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000ff9	          0x4821c8	                            and rax, rcx	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000ffc	          0x4809d0	                             or rax, rdx	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4000fff	        0x488945e8	             mov qword [rbp - 0x18], rax	      1359	reloc.c	FUNCTION_5	SWITCH_1
0x4001003	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4001007	        0x488b4008	                mov rax, qword [rax + 8]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x400100b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x400100f	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4001013	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4001017	          0x4889ce	                            mov rsi, rcx	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x400101a	          0x4889d7	                            mov rdi, rdx	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x400101d	            0xffd0	                                call rax	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x400101f	            0xeb08	                           jmp 0x4001029	      1362	reloc.c	FUNCTION_5	SWITCH_1
0x4001021	      0xb807000000	                              mov eax, 7	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x4001026	            0xeb04	                           jmp 0x400102c	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x4001028	              0x90	                                     nop	      1354	reloc.c	FUNCTION_5	SWITCH_1
0x4001029	          0x8b4598	             mov eax, dword [rbp - 0x68]	      1367	reloc.c	FUNCTION_5
0x400102c	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1368	reloc.c	FUNCTION_5
0x4001030	              0xc9	                                   leave	      1368	reloc.c	FUNCTION_5
0x4001031	              0xc3	                                     ret	      1368	reloc.c	FUNCTION_5
bfd_default_reloc_type_lookup	DO,0:SWITCH,2:ELSE,0:IF,0:WHILE,0:CALL,5:FOR,0:functions,0	39
0x40016a3	              0x55	                                push rbp	      8042	reloc.c	FUNCTION_11
0x40016a4	          0x4889e5	                            mov rbp, rsp	      8042	reloc.c	FUNCTION_11
0x40016a7	        0x4883ec10	                           sub rsp, 0x10	      8042	reloc.c	FUNCTION_11
0x40016ab	        0x48897df8	                mov qword [rbp - 8], rdi	      8042	reloc.c	FUNCTION_11
0x40016af	          0x8975f4	              mov dword [rbp - 0xc], esi	      8042	reloc.c	FUNCTION_11
0x40016b2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8043	reloc.c	FUNCTION_11	SWITCH_1
0x40016b5	      0x3d2b020000	                          cmp eax, 0x22b	      8043	reloc.c	FUNCTION_11	SWITCH_1
0x40016ba	            0x7559	                           jne 0x4001715	      8043	reloc.c	FUNCTION_11	SWITCH_1
0x40016bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016c0	          0x4889c7	                            mov rdi, rax	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016c3	      0xe800000000	                          call 0x40016c8	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016c8	          0x83f820	                           cmp eax, 0x20	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016cb	            0x741d	                            je 0x40016ea	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016cd	          0x83f840	                           cmp eax, 0x40	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016d0	            0x7407	                            je 0x40016d9	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016d2	          0x83f810	                           cmp eax, 0x10	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016d5	            0x741a	                            je 0x40016f1	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016d7	            0xeb29	                           jmp 0x4001702	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016d9	      0xbe731f0000	                         mov esi, 0x1f73	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x40016de	      0xbf00000000	                              mov edi, 0	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x40016e3	      0xe800000000	                          call 0x40016e8	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x40016e8	            0xeb29	                           jmp 0x4001713	      8052	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x40016ea	      0xb800000000	                              mov eax, 0	      8054	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x40016ef	            0xeb38	                           jmp 0x4001729	      8054	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x40016f1	      0xbe781f0000	                         mov esi, 0x1f78	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x40016f6	      0xbf00000000	                              mov edi, 0	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x40016fb	      0xe800000000	                          call 0x4001700	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x4001700	            0xeb11	                           jmp 0x4001713	      8057	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4001702	      0xbe7b1f0000	                         mov esi, 0x1f7b	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x4001707	      0xbf00000000	                              mov edi, 0	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x400170c	      0xe800000000	                          call 0x4001711	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x4001711	            0xeb11	                           jmp 0x4001724	      8061	reloc.c	FUNCTION_11	SWITCH_1
0x4001713	            0xeb0f	                           jmp 0x4001724	      8061	reloc.c	FUNCTION_11	SWITCH_1
0x4001715	      0xbe7f1f0000	                         mov esi, 0x1f7f	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x400171a	      0xbf00000000	                              mov edi, 0	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x400171f	      0xe800000000	                          call 0x4001724	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x4001724	      0xb800000000	                              mov eax, 0	      8065	reloc.c	FUNCTION_11
0x4001729	              0xc9	                                   leave	      8066	reloc.c	FUNCTION_11
0x400172a	              0xc3	                                     ret	      8066	reloc.c	FUNCTION_11
bfd_reloc_name_lookup	DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,1:FOR,0:functions,0	15
0x4001672	              0x55	                                push rbp	      8020	reloc.c	FUNCTION_10
0x4001673	          0x4889e5	                            mov rbp, rsp	      8020	reloc.c	FUNCTION_10
0x4001676	        0x4883ec10	                           sub rsp, 0x10	      8020	reloc.c	FUNCTION_10
0x400167a	        0x48897df8	                mov qword [rbp - 8], rdi	      8020	reloc.c	FUNCTION_10
0x400167e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8020	reloc.c	FUNCTION_10
0x4001682	        0x488b45f8	                mov rax, qword [rbp - 8]	      8021	reloc.c	FUNCTION_10	CALL_1
0x4001686	        0x488b4008	                mov rax, qword [rax + 8]	      8021	reloc.c	FUNCTION_10	CALL_1
0x400168a	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      8021	reloc.c	FUNCTION_10	CALL_1
0x4001691	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      8021	reloc.c	FUNCTION_10	CALL_1
0x4001695	        0x488b55f8	                mov rdx, qword [rbp - 8]	      8021	reloc.c	FUNCTION_10	CALL_1
0x4001699	          0x4889ce	                            mov rsi, rcx	      8021	reloc.c	FUNCTION_10	CALL_1
0x400169c	          0x4889d7	                            mov rdi, rdx	      8021	reloc.c	FUNCTION_10	CALL_1
0x400169f	            0xffd0	                                call rax	      8021	reloc.c	FUNCTION_10	CALL_1
0x40016a1	              0xc9	                                   leave	      8022	reloc.c	FUNCTION_10
0x40016a2	              0xc3	                                     ret	      8022	reloc.c	FUNCTION_10
_bfd_final_link_relocate	DO,0:SWITCH,0:ELSE,0:IF,3:WHILE,0:CALL,4:FOR,0:functions,0	61
0x4001032	              0x55	                                push rbp	      1400	reloc.c	FUNCTION_6
0x4001033	          0x4889e5	                            mov rbp, rsp	      1400	reloc.c	FUNCTION_6
0x4001036	        0x4883ec40	                           sub rsp, 0x40	      1400	reloc.c	FUNCTION_6
0x400103a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1400	reloc.c	FUNCTION_6
0x400103e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1400	reloc.c	FUNCTION_6
0x4001042	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1400	reloc.c	FUNCTION_6
0x4001046	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1400	reloc.c	FUNCTION_6
0x400104a	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      1400	reloc.c	FUNCTION_6
0x400104e	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      1400	reloc.c	FUNCTION_6
0x4001052	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1402	reloc.c	FUNCTION_6	CALL_1
0x4001056	          0x4889c7	                            mov rdi, rax	      1402	reloc.c	FUNCTION_6	CALL_1
0x4001059	      0xe800000000	                          call 0x400105e	      1402	reloc.c	FUNCTION_6	CALL_1
0x400105e	            0x89c0	                            mov eax, eax	      1402	reloc.c	FUNCTION_6	CALL_1
0x4001060	      0x480faf45c8	            imul rax, qword [rbp - 0x38]	      1402	reloc.c	FUNCTION_6	CALL_1
0x4001065	        0x488945f8	                mov qword [rbp - 8], rax	      1402	reloc.c	FUNCTION_6	CALL_1
0x4001069	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x400106d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4001071	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4001075	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4001079	          0x4889c7	                            mov rdi, rax	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x400107c	      0xe800000000	                          call 0x4001081	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4001081	            0x85c0	                           test eax, eax	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4001083	            0x7507	                           jne 0x400108c	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4001085	      0xb804000000	                              mov eax, 4	      1406	reloc.c	FUNCTION_6	IF_1
0x400108a	            0xeb7a	                           jmp 0x4001106	      1406	reloc.c	FUNCTION_6	IF_1
0x400108c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1412	reloc.c	FUNCTION_6
0x4001090	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1412	reloc.c	FUNCTION_6
0x4001094	          0x4801d0	                            add rax, rdx	      1412	reloc.c	FUNCTION_6
0x4001097	        0x488945f0	             mov qword [rbp - 0x10], rax	      1412	reloc.c	FUNCTION_6
0x400109b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1424	reloc.c	FUNCTION_6	IF_2
0x400109f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1424	reloc.c	FUNCTION_6	IF_2
0x40010a2	            0x85c0	                           test eax, eax	      1424	reloc.c	FUNCTION_6	IF_2
0x40010a4	            0x742e	                            je 0x40010d4	      1424	reloc.c	FUNCTION_6	IF_2
0x40010a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1426	reloc.c	FUNCTION_6	IF_2
0x40010aa	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1426	reloc.c	FUNCTION_6	IF_2
0x40010ae	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1426	reloc.c	FUNCTION_6	IF_2
0x40010b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1427	reloc.c	FUNCTION_6	IF_2
0x40010b6	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1427	reloc.c	FUNCTION_6	IF_2
0x40010ba	          0x4801d0	                            add rax, rdx	      1427	reloc.c	FUNCTION_6	IF_2
0x40010bd	        0x482945f0	             sub qword [rbp - 0x10], rax	      1426	reloc.c	FUNCTION_6	IF_2
0x40010c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1428	reloc.c	FUNCTION_6	IF_2	IF_3
0x40010c5	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1428	reloc.c	FUNCTION_6	IF_2	IF_3
0x40010c8	            0x85c0	                           test eax, eax	      1428	reloc.c	FUNCTION_6	IF_2	IF_3
0x40010ca	            0x7408	                            je 0x40010d4	      1428	reloc.c	FUNCTION_6	IF_2	IF_3
0x40010cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x40010d0	        0x482945f0	             sub qword [rbp - 0x10], rax	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x40010d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1434	reloc.c	FUNCTION_6	CALL_4
0x40010d8	          0x4889c7	                            mov rdi, rax	      1434	reloc.c	FUNCTION_6	CALL_4
0x40010db	      0xe800000000	                          call 0x40010e0	      1434	reloc.c	FUNCTION_6	CALL_4
0x40010e0	            0x89c0	                            mov eax, eax	      1432	reloc.c	FUNCTION_6	CALL_3
0x40010e2	      0x480faf45c8	            imul rax, qword [rbp - 0x38]	      1434	reloc.c	FUNCTION_6	CALL_4
0x40010e7	          0x4889c2	                            mov rdx, rax	      1434	reloc.c	FUNCTION_6	CALL_4
0x40010ea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1432	reloc.c	FUNCTION_6	CALL_3
0x40010ee	        0x488d0c02	                    lea rcx, [rdx + rax]	      1432	reloc.c	FUNCTION_6	CALL_3
0x40010f2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1432	reloc.c	FUNCTION_6	CALL_3
0x40010f6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1432	reloc.c	FUNCTION_6	CALL_3
0x40010fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1432	reloc.c	FUNCTION_6	CALL_3
0x40010fe	          0x4889c7	                            mov rdi, rax	      1432	reloc.c	FUNCTION_6	CALL_3
0x4001101	      0xe800000000	                          call 0x4001106	      1432	reloc.c	FUNCTION_6	CALL_3
0x4001106	              0xc9	                                   leave	      1435	reloc.c	FUNCTION_6
0x4001107	              0xc3	                                     ret	      1435	reloc.c	FUNCTION_6
_bfd_generic_set_reloc	DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,0:FOR,0:functions,0	15
0x4001d67	              0x55	                                push rbp	      8382	reloc.c	FUNCTION_18
0x4001d68	          0x4889e5	                            mov rbp, rsp	      8382	reloc.c	FUNCTION_18
0x4001d6b	        0x48897df8	                mov qword [rbp - 8], rdi	      8382	reloc.c	FUNCTION_18
0x4001d6f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      8382	reloc.c	FUNCTION_18
0x4001d73	        0x488955e8	             mov qword [rbp - 0x18], rdx	      8382	reloc.c	FUNCTION_18
0x4001d77	          0x894de4	             mov dword [rbp - 0x1c], ecx	      8382	reloc.c	FUNCTION_18
0x4001d7a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8383	reloc.c	FUNCTION_18
0x4001d7e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      8383	reloc.c	FUNCTION_18
0x4001d82	    0x488990800000	             mov qword [rax + 0x80], rdx	      8383	reloc.c	FUNCTION_18
0x4001d89	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8384	reloc.c	FUNCTION_18
0x4001d8d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      8384	reloc.c	FUNCTION_18
0x4001d90	    0x899088000000	             mov dword [rax + 0x88], edx	      8384	reloc.c	FUNCTION_18
0x4001d96	              0x90	                                     nop	      8385	reloc.c	FUNCTION_18
0x4001d97	              0x5d	                                 pop rbp	      8385	reloc.c	FUNCTION_18
0x4001d98	              0xc3	                                     ret	      8385	reloc.c	FUNCTION_18
