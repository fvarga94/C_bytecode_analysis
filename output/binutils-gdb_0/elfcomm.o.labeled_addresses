byte_put_little_endian	CALL,3:ELSE,0:FOR,0:SWITCH,1:DO,0:IF,0:functions,0:WHILE,0	63
0x4000276	              0x55	                                push rbp	        65	elfcomm.c	FUNCTION_3
0x4000277	          0x4889e5	                            mov rbp, rsp	        65	elfcomm.c	FUNCTION_3
0x400027a	        0x4883ec20	                           sub rsp, 0x20	        65	elfcomm.c	FUNCTION_3
0x400027e	        0x48897df8	                mov qword [rbp - 8], rdi	        65	elfcomm.c	FUNCTION_3
0x4000282	        0x488975f0	             mov qword [rbp - 0x10], rsi	        65	elfcomm.c	FUNCTION_3
0x4000286	          0x8955ec	             mov dword [rbp - 0x14], edx	        65	elfcomm.c	FUNCTION_3
0x4000289	        0x837dec08	               cmp dword [rbp - 0x14], 8	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x400028d	     0xf8799000000	                            ja 0x400032c	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000293	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000296	    0x488b04c50000	                  mov rax, qword [rax*8]	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x400029e	            0xffe0	                                 jmp rax	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002a0	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002a4	        0x4883c007	                              add rax, 7	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002a8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002ac	        0x48c1ea38	                           shr rdx, 0x38	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002b0	            0x8810	                      mov byte [rax], dl	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002b2	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002b6	        0x4883c006	                              add rax, 6	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002ba	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002be	        0x48c1ea30	                           shr rdx, 0x30	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002c2	            0x8810	                      mov byte [rax], dl	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002c4	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002c8	        0x4883c005	                              add rax, 5	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002cc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002d0	        0x48c1ea28	                           shr rdx, 0x28	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002d4	            0x8810	                      mov byte [rax], dl	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002d6	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002da	        0x4883c004	                              add rax, 4	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002de	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002e2	        0x48c1ea20	                           shr rdx, 0x20	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002e6	            0x8810	                      mov byte [rax], dl	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002e8	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002ec	        0x4883c003	                              add rax, 3	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002f0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002f4	        0x48c1ea18	                           shr rdx, 0x18	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002f8	            0x8810	                      mov byte [rax], dl	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002fa	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x40002fe	        0x4883c002	                              add rax, 2	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000302	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000306	        0x48c1ea10	                           shr rdx, 0x10	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x400030a	            0x8810	                      mov byte [rax], dl	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x400030c	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000310	        0x4883c001	                              add rax, 1	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000314	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000318	        0x48c1ea08	                              shr rdx, 8	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x400031c	            0x8810	                      mov byte [rax], dl	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x400031e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        84	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000322	            0x89c2	                            mov edx, eax	        84	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000324	        0x488b45f8	                mov rax, qword [rbp - 8]	        84	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000328	            0x8810	                      mov byte [rax], dl	        84	elfcomm.c	FUNCTION_3	SWITCH_1
0x400032a	            0xeb24	                           jmp 0x4000350	        85	elfcomm.c	FUNCTION_3	SWITCH_1
0x400032c	      0xbf00000000	                              mov edi, 0	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000331	      0xe800000000	                          call 0x4000336	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000336	          0x4889c2	                            mov rdx, rax	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000339	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x400033c	            0x89c6	                            mov esi, eax	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x400033e	          0x4889d7	                            mov rdi, rdx	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000341	      0xb800000000	                              mov eax, 0	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000346	      0xe800000000	                          call 0x400034b	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x400034b	      0xe800000000	                          call 0x4000350	        89	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_3
0x4000350	              0x90	                                     nop	        91	elfcomm.c	FUNCTION_3
0x4000351	              0xc9	                                   leave	        91	elfcomm.c	FUNCTION_3
0x4000352	              0xc3	                                     ret	        91	elfcomm.c	FUNCTION_3
error	CALL,6:ELSE,0:FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0	57
0x4000040	              0x55	                                push rbp	        35	elfcomm.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        35	elfcomm.c	FUNCTION_1
0x4000044	              0x53	                                push rbx	        35	elfcomm.c	FUNCTION_1
0x4000045	    0x4881ece80000	                           sub rsp, 0xe8	        35	elfcomm.c	FUNCTION_1
0x400004c	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	        35	elfcomm.c	FUNCTION_1
0x4000053	    0x4889b548ffff	             mov qword [rbp - 0xb8], rsi	        35	elfcomm.c	FUNCTION_1
0x400005a	    0x48899550ffff	             mov qword [rbp - 0xb0], rdx	        35	elfcomm.c	FUNCTION_1
0x4000061	    0x48898d58ffff	             mov qword [rbp - 0xa8], rcx	        35	elfcomm.c	FUNCTION_1
0x4000068	    0x4c898560ffff	              mov qword [rbp - 0xa0], r8	        35	elfcomm.c	FUNCTION_1
0x400006f	    0x4c898d68ffff	              mov qword [rbp - 0x98], r9	        35	elfcomm.c	FUNCTION_1
0x4000076	            0x84c0	                             test al, al	        35	elfcomm.c	FUNCTION_1
0x4000078	            0x7423	                            je 0x400009d	        35	elfcomm.c	FUNCTION_1
0x400007a	     0xf298570ffff	       movaps xmmword [rbp - 0x90], xmm0	        35	elfcomm.c	FUNCTION_1
0x4000081	         0xf294d80	       movaps xmmword [rbp - 0x80], xmm1	        35	elfcomm.c	FUNCTION_1
0x4000085	         0xf295590	       movaps xmmword [rbp - 0x70], xmm2	        35	elfcomm.c	FUNCTION_1
0x4000089	         0xf295da0	       movaps xmmword [rbp - 0x60], xmm3	        35	elfcomm.c	FUNCTION_1
0x400008d	         0xf2965b0	       movaps xmmword [rbp - 0x50], xmm4	        35	elfcomm.c	FUNCTION_1
0x4000091	         0xf296dc0	       movaps xmmword [rbp - 0x40], xmm5	        35	elfcomm.c	FUNCTION_1
0x4000095	         0xf2975d0	       movaps xmmword [rbp - 0x30], xmm6	        35	elfcomm.c	FUNCTION_1
0x4000099	         0xf297de0	       movaps xmmword [rbp - 0x20], xmm7	        35	elfcomm.c	FUNCTION_1
0x400009d	    0x64488b042528	                mov rax, qword fs:[0x28]	        35	elfcomm.c	FUNCTION_1
0x40000a6	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        35	elfcomm.c	FUNCTION_1
0x40000ad	            0x31c0	                            xor eax, eax	        35	elfcomm.c	FUNCTION_1
0x40000af	    0x488b05000000	            mov rax, qword [0x040000b6] 	        39	elfcomm.c	FUNCTION_1	CALL_1
0x40000b6	          0x4889c7	                            mov rdi, rax	        39	elfcomm.c	FUNCTION_1	CALL_1
0x40000b9	      0xe800000000	                          call 0x40000be	        39	elfcomm.c	FUNCTION_1	CALL_1
0x40000be	    0xc78520ffffff	               mov dword [rbp - 0xe0], 8	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000c8	    0xc78524ffffff	           mov dword [rbp - 0xdc], 0x30 	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000d2	        0x488d4510	                   lea rax, [rbp + 0x10]	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000d6	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000dd	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000e4	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000eb	    0x488b1d000000	            mov rbx, qword [0x040000f2] 	        42	elfcomm.c	FUNCTION_1	CALL_4
0x40000f2	      0xbf00000000	                              mov edi, 0	        42	elfcomm.c	FUNCTION_1	CALL_4
0x40000f7	      0xe800000000	                          call 0x40000fc	        42	elfcomm.c	FUNCTION_1	CALL_4
0x40000fc	          0x4889c1	                            mov rcx, rax	        42	elfcomm.c	FUNCTION_1	CALL_4
0x40000ff	    0x488b05000000	            mov rax, qword [0x04000106] 	        42	elfcomm.c	FUNCTION_1	CALL_4
0x4000106	          0x4889da	                            mov rdx, rbx	        42	elfcomm.c	FUNCTION_1	CALL_4
0x4000109	          0x4889ce	                            mov rsi, rcx	        42	elfcomm.c	FUNCTION_1	CALL_4
0x400010c	          0x4889c7	                            mov rdi, rax	        42	elfcomm.c	FUNCTION_1	CALL_4
0x400010f	      0xb800000000	                              mov eax, 0	        42	elfcomm.c	FUNCTION_1	CALL_4
0x4000114	      0xe800000000	                          call 0x4000119	        42	elfcomm.c	FUNCTION_1	CALL_4
0x4000119	    0x488b05000000	            mov rax, qword [0x04000120] 	        43	elfcomm.c	FUNCTION_1	CALL_5
0x4000120	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	        43	elfcomm.c	FUNCTION_1	CALL_5
0x4000127	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	        43	elfcomm.c	FUNCTION_1	CALL_5
0x400012e	          0x4889ce	                            mov rsi, rcx	        43	elfcomm.c	FUNCTION_1	CALL_5
0x4000131	          0x4889c7	                            mov rdi, rax	        43	elfcomm.c	FUNCTION_1	CALL_5
0x4000134	      0xe800000000	                          call 0x4000139	        43	elfcomm.c	FUNCTION_1	CALL_5
0x4000139	              0x90	                                     nop	        45	elfcomm.c	FUNCTION_1
0x400013a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        45	elfcomm.c	FUNCTION_1
0x4000141	    0x644833042528	                xor rax, qword fs:[0x28]	        45	elfcomm.c	FUNCTION_1
0x400014a	            0x7405	                            je 0x4000151	        45	elfcomm.c	FUNCTION_1
0x400014c	      0xe800000000	                          call 0x4000151	        45	elfcomm.c	FUNCTION_1
0x4000151	    0x4881c4e80000	                           add rsp, 0xe8	        45	elfcomm.c	FUNCTION_1
0x4000158	              0x5b	                                 pop rbx	        45	elfcomm.c	FUNCTION_1
0x4000159	              0x5d	                                 pop rbp	        45	elfcomm.c	FUNCTION_1
0x400015a	              0xc3	                                     ret	        45	elfcomm.c	FUNCTION_1
byte_get_64	CALL,4:ELSE,1:FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0	43
0x4000ad9	              0x55	                                push rbp	       377	elfcomm.c	FUNCTION_8
0x4000ada	          0x4889e5	                            mov rbp, rsp	       377	elfcomm.c	FUNCTION_8
0x4000add	        0x4883ec20	                           sub rsp, 0x20	       377	elfcomm.c	FUNCTION_8
0x4000ae1	        0x48897df8	                mov qword [rbp - 8], rdi	       377	elfcomm.c	FUNCTION_8
0x4000ae5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       377	elfcomm.c	FUNCTION_8
0x4000ae9	        0x488955e8	             mov qword [rbp - 0x18], rdx	       377	elfcomm.c	FUNCTION_8
0x4000aed	    0x488b05000000	            mov rax, qword [0x04000af4] 	       378	elfcomm.c	FUNCTION_8	IF_1
0x4000af4	    0x483d00000000	                              cmp rax, 0	       378	elfcomm.c	FUNCTION_8	IF_1
0x4000afa	            0x753c	                           jne 0x4000b38	       378	elfcomm.c	FUNCTION_8	IF_1
0x4000afc	        0x488b45f8	                mov rax, qword [rbp - 8]	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x4000b00	      0xbe04000000	                              mov esi, 4	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x4000b05	          0x4889c7	                            mov rdi, rax	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x4000b08	      0xe800000000	                          call 0x4000b0d	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x4000b0d	          0x4889c2	                            mov rdx, rax	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x4000b10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x4000b14	          0x488910	                    mov qword [rax], rdx	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x4000b17	        0x488b45f8	                mov rax, qword [rbp - 8]	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000b1b	        0x4883c004	                              add rax, 4	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000b1f	      0xbe04000000	                              mov esi, 4	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000b24	          0x4889c7	                            mov rdi, rax	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000b27	      0xe800000000	                          call 0x4000b2c	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000b2c	          0x4889c2	                            mov rdx, rax	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000b2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000b33	          0x488910	                    mov qword [rax], rdx	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000b36	            0xeb3b	                           jmp 0x4000b73	       388	elfcomm.c	FUNCTION_8
0x4000b38	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b3c	        0x4883c004	                              add rax, 4	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b40	      0xbe04000000	                              mov esi, 4	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b45	          0x4889c7	                            mov rdi, rax	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b48	      0xe800000000	                          call 0x4000b4d	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b4d	          0x4889c2	                            mov rdx, rax	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b50	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b54	          0x488910	                    mov qword [rax], rdx	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b57	        0x488b45f8	                mov rax, qword [rbp - 8]	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000b5b	      0xbe04000000	                              mov esi, 4	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000b60	          0x4889c7	                            mov rdi, rax	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000b63	      0xe800000000	                          call 0x4000b68	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000b68	          0x4889c2	                            mov rdx, rax	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000b6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000b6f	          0x488910	                    mov qword [rax], rdx	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000b72	              0x90	                                     nop	       388	elfcomm.c	FUNCTION_8
0x4000b73	              0xc9	                                   leave	       389	elfcomm.c	FUNCTION_8
0x4000b74	              0xc3	                                     ret	       389	elfcomm.c	FUNCTION_8
byte_get_signed	CALL,2:ELSE,0:FOR,0:SWITCH,1:DO,0:IF,0:functions,0:WHILE,0	38
0x4000a53	              0x55	                                push rbp	       345	elfcomm.c	FUNCTION_7
0x4000a54	          0x4889e5	                            mov rbp, rsp	       345	elfcomm.c	FUNCTION_7
0x4000a57	        0x4883ec20	                           sub rsp, 0x20	       345	elfcomm.c	FUNCTION_7
0x4000a5b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       345	elfcomm.c	FUNCTION_7
0x4000a5f	          0x8975e4	             mov dword [rbp - 0x1c], esi	       345	elfcomm.c	FUNCTION_7
0x4000a62	    0x488b05000000	            mov rax, qword [0x04000a69] 	       346	elfcomm.c	FUNCTION_7	CALL_1
0x4000a69	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       346	elfcomm.c	FUNCTION_7	CALL_1
0x4000a6c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       346	elfcomm.c	FUNCTION_7	CALL_1
0x4000a70	            0x89ce	                            mov esi, ecx	       346	elfcomm.c	FUNCTION_7	CALL_1
0x4000a72	          0x4889d7	                            mov rdi, rdx	       346	elfcomm.c	FUNCTION_7	CALL_1
0x4000a75	            0xffd0	                                call rax	       346	elfcomm.c	FUNCTION_7	CALL_1
0x4000a77	        0x488945f8	                mov qword [rbp - 8], rax	       346	elfcomm.c	FUNCTION_7	CALL_1
0x4000a7b	        0x837de408	               cmp dword [rbp - 0x1c], 8	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000a7f	            0x7751	                            ja 0x4000ad2	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000a81	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000a84	    0x488b04c50000	                  mov rax, qword [rax*8]	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000a8c	            0xffe0	                                 jmp rax	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000a8e	        0x488b45f8	                mov rax, qword [rbp - 8]	       351	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000a92	            0x3480	                            xor al, 0x80	       351	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000a94	        0x4883c080	             add rax, 0xffffffffffffff80	       351	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000a98	            0xeb3d	                           jmp 0x4000ad7	       351	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000a9a	        0x488b45f8	                mov rax, qword [rbp - 8]	       353	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000a9e	          0x80f480	                            xor ah, 0x80	       353	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000aa1	    0x482d00800000	                         sub rax, 0x8000	       353	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000aa7	            0xeb2e	                           jmp 0x4000ad7	       353	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000aa9	        0x488b45f8	                mov rax, qword [rbp - 8]	       355	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000aad	    0x483500008000	                       xor rax, 0x800000	       355	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000ab3	    0x482d00008000	                       sub rax, 0x800000	       355	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000ab9	            0xeb1c	                           jmp 0x4000ad7	       355	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000abb	      0xb800000080	                     mov eax, 0x80000000	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000ac0	        0x483345f8	                xor rax, qword [rbp - 8]	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000ac4	    0x480500000080	             add rax, 0xffffffff80000000	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000aca	            0xeb0b	                           jmp 0x4000ad7	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000acc	        0x488b45f8	                mov rax, qword [rbp - 8]	       366	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000ad0	            0xeb05	                           jmp 0x4000ad7	       366	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000ad2	      0xe800000000	                          call 0x4000ad7	       368	elfcomm.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000ad7	              0xc9	                                   leave	       370	elfcomm.c	FUNCTION_7
0x4000ad8	              0xc3	                                     ret	       370	elfcomm.c	FUNCTION_7
byte_put_big_endian	CALL,3:ELSE,0:FOR,0:SWITCH,1:DO,0:IF,0:functions,0:WHILE,0	64
0x4000353	              0x55	                                push rbp	        95	elfcomm.c	FUNCTION_4
0x4000354	          0x4889e5	                            mov rbp, rsp	        95	elfcomm.c	FUNCTION_4
0x4000357	        0x4883ec20	                           sub rsp, 0x20	        95	elfcomm.c	FUNCTION_4
0x400035b	        0x48897df8	                mov qword [rbp - 8], rdi	        95	elfcomm.c	FUNCTION_4
0x400035f	        0x488975f0	             mov qword [rbp - 0x10], rsi	        95	elfcomm.c	FUNCTION_4
0x4000363	          0x8955ec	             mov dword [rbp - 0x14], edx	        95	elfcomm.c	FUNCTION_4
0x4000366	        0x837dec08	               cmp dword [rbp - 0x14], 8	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x400036a	     0xf87a2000000	                            ja 0x4000412	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000370	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000373	    0x488b04c50000	                  mov rax, qword [rax*8]	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x400037b	            0xffe0	                                 jmp rax	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x400037d	        0x488b45f8	                mov rax, qword [rbp - 8]	        99	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000381	        0x4883c007	                              add rax, 7	        99	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000385	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        99	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000389	            0x8810	                      mov byte [rax], dl	        99	elfcomm.c	FUNCTION_4	SWITCH_1
0x400038b	        0x488b45f8	                mov rax, qword [rbp - 8]	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x400038f	        0x4883c006	                              add rax, 6	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000393	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000397	        0x48c1ea08	                              shr rdx, 8	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x400039b	            0x8810	                      mov byte [rax], dl	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x400039d	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003a1	        0x4883c005	                              add rax, 5	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003a5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003a9	        0x48c1ea10	                           shr rdx, 0x10	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003ad	            0x8810	                      mov byte [rax], dl	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003af	        0x488b45f8	                mov rax, qword [rbp - 8]	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003b3	        0x4883c004	                              add rax, 4	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003b7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003bb	        0x48c1ea18	                           shr rdx, 0x18	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003bf	            0x8810	                      mov byte [rax], dl	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003c1	      0x48c16df010	            shr qword [rbp - 0x10], 0x10	       103	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003c6	      0x48c16df010	            shr qword [rbp - 0x10], 0x10	       104	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       107	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003cf	        0x4883c003	                              add rax, 3	       107	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003d3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       107	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003d7	            0x8810	                      mov byte [rax], dl	       107	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003d9	      0x48c16df008	               shr qword [rbp - 0x10], 8	       108	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003de	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003e2	        0x4883c002	                              add rax, 2	       111	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003e6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       111	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003ea	            0x8810	                      mov byte [rax], dl	       111	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003ec	      0x48c16df008	               shr qword [rbp - 0x10], 8	       112	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       115	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003f5	        0x4883c001	                              add rax, 1	       115	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003f9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       115	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003fd	            0x8810	                      mov byte [rax], dl	       115	elfcomm.c	FUNCTION_4	SWITCH_1
0x40003ff	      0x48c16df008	               shr qword [rbp - 0x10], 8	       116	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000404	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       119	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000408	            0x89c2	                            mov edx, eax	       119	elfcomm.c	FUNCTION_4	SWITCH_1
0x400040a	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	elfcomm.c	FUNCTION_4	SWITCH_1
0x400040e	            0x8810	                      mov byte [rax], dl	       119	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000410	            0xeb24	                           jmp 0x4000436	       120	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000412	      0xbf00000000	                              mov edi, 0	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000417	      0xe800000000	                          call 0x400041c	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x400041c	          0x4889c2	                            mov rdx, rax	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x400041f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000422	            0x89c6	                            mov esi, eax	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000424	          0x4889d7	                            mov rdi, rdx	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000427	      0xb800000000	                              mov eax, 0	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x400042c	      0xe800000000	                          call 0x4000431	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000431	      0xe800000000	                          call 0x4000436	       124	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_3
0x4000436	              0x90	                                     nop	       126	elfcomm.c	FUNCTION_4
0x4000437	              0xc9	                                   leave	       126	elfcomm.c	FUNCTION_4
0x4000438	              0xc3	                                     ret	       126	elfcomm.c	FUNCTION_4
warn	CALL,6:ELSE,0:FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0	57
0x400015b	              0x55	                                push rbp	        49	elfcomm.c	FUNCTION_2
0x400015c	          0x4889e5	                            mov rbp, rsp	        49	elfcomm.c	FUNCTION_2
0x400015f	              0x53	                                push rbx	        49	elfcomm.c	FUNCTION_2
0x4000160	    0x4881ece80000	                           sub rsp, 0xe8	        49	elfcomm.c	FUNCTION_2
0x4000167	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	        49	elfcomm.c	FUNCTION_2
0x400016e	    0x4889b548ffff	             mov qword [rbp - 0xb8], rsi	        49	elfcomm.c	FUNCTION_2
0x4000175	    0x48899550ffff	             mov qword [rbp - 0xb0], rdx	        49	elfcomm.c	FUNCTION_2
0x400017c	    0x48898d58ffff	             mov qword [rbp - 0xa8], rcx	        49	elfcomm.c	FUNCTION_2
0x4000183	    0x4c898560ffff	              mov qword [rbp - 0xa0], r8	        49	elfcomm.c	FUNCTION_2
0x400018a	    0x4c898d68ffff	              mov qword [rbp - 0x98], r9	        49	elfcomm.c	FUNCTION_2
0x4000191	            0x84c0	                             test al, al	        49	elfcomm.c	FUNCTION_2
0x4000193	            0x7423	                            je 0x40001b8	        49	elfcomm.c	FUNCTION_2
0x4000195	     0xf298570ffff	       movaps xmmword [rbp - 0x90], xmm0	        49	elfcomm.c	FUNCTION_2
0x400019c	         0xf294d80	       movaps xmmword [rbp - 0x80], xmm1	        49	elfcomm.c	FUNCTION_2
0x40001a0	         0xf295590	       movaps xmmword [rbp - 0x70], xmm2	        49	elfcomm.c	FUNCTION_2
0x40001a4	         0xf295da0	       movaps xmmword [rbp - 0x60], xmm3	        49	elfcomm.c	FUNCTION_2
0x40001a8	         0xf2965b0	       movaps xmmword [rbp - 0x50], xmm4	        49	elfcomm.c	FUNCTION_2
0x40001ac	         0xf296dc0	       movaps xmmword [rbp - 0x40], xmm5	        49	elfcomm.c	FUNCTION_2
0x40001b0	         0xf2975d0	       movaps xmmword [rbp - 0x30], xmm6	        49	elfcomm.c	FUNCTION_2
0x40001b4	         0xf297de0	       movaps xmmword [rbp - 0x20], xmm7	        49	elfcomm.c	FUNCTION_2
0x40001b8	    0x64488b042528	                mov rax, qword fs:[0x28]	        49	elfcomm.c	FUNCTION_2
0x40001c1	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        49	elfcomm.c	FUNCTION_2
0x40001c8	            0x31c0	                            xor eax, eax	        49	elfcomm.c	FUNCTION_2
0x40001ca	    0x488b05000000	            mov rax, qword [0x040001d1] 	        53	elfcomm.c	FUNCTION_2	CALL_1
0x40001d1	          0x4889c7	                            mov rdi, rax	        53	elfcomm.c	FUNCTION_2	CALL_1
0x40001d4	      0xe800000000	                          call 0x40001d9	        53	elfcomm.c	FUNCTION_2	CALL_1
0x40001d9	    0xc78520ffffff	               mov dword [rbp - 0xe0], 8	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40001e3	    0xc78524ffffff	           mov dword [rbp - 0xdc], 0x30 	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40001ed	        0x488d4510	                   lea rax, [rbp + 0x10]	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40001f1	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40001f8	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40001ff	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	        55	elfcomm.c	FUNCTION_2	CALL_2
0x4000206	    0x488b1d000000	            mov rbx, qword [0x0400020d] 	        56	elfcomm.c	FUNCTION_2	CALL_4
0x400020d	      0xbf00000000	                              mov edi, 0	        56	elfcomm.c	FUNCTION_2	CALL_4
0x4000212	      0xe800000000	                          call 0x4000217	        56	elfcomm.c	FUNCTION_2	CALL_4
0x4000217	          0x4889c1	                            mov rcx, rax	        56	elfcomm.c	FUNCTION_2	CALL_4
0x400021a	    0x488b05000000	            mov rax, qword [0x04000221] 	        56	elfcomm.c	FUNCTION_2	CALL_4
0x4000221	          0x4889da	                            mov rdx, rbx	        56	elfcomm.c	FUNCTION_2	CALL_4
0x4000224	          0x4889ce	                            mov rsi, rcx	        56	elfcomm.c	FUNCTION_2	CALL_4
0x4000227	          0x4889c7	                            mov rdi, rax	        56	elfcomm.c	FUNCTION_2	CALL_4
0x400022a	      0xb800000000	                              mov eax, 0	        56	elfcomm.c	FUNCTION_2	CALL_4
0x400022f	      0xe800000000	                          call 0x4000234	        56	elfcomm.c	FUNCTION_2	CALL_4
0x4000234	    0x488b05000000	            mov rax, qword [0x0400023b] 	        57	elfcomm.c	FUNCTION_2	CALL_5
0x400023b	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	        57	elfcomm.c	FUNCTION_2	CALL_5
0x4000242	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	        57	elfcomm.c	FUNCTION_2	CALL_5
0x4000249	          0x4889ce	                            mov rsi, rcx	        57	elfcomm.c	FUNCTION_2	CALL_5
0x400024c	          0x4889c7	                            mov rdi, rax	        57	elfcomm.c	FUNCTION_2	CALL_5
0x400024f	      0xe800000000	                          call 0x4000254	        57	elfcomm.c	FUNCTION_2	CALL_5
0x4000254	              0x90	                                     nop	        59	elfcomm.c	FUNCTION_2
0x4000255	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        59	elfcomm.c	FUNCTION_2
0x400025c	    0x644833042528	                xor rax, qword fs:[0x28]	        59	elfcomm.c	FUNCTION_2
0x4000265	            0x7405	                            je 0x400026c	        59	elfcomm.c	FUNCTION_2
0x4000267	      0xe800000000	                          call 0x400026c	        59	elfcomm.c	FUNCTION_2
0x400026c	    0x4881c4e80000	                           add rsp, 0xe8	        59	elfcomm.c	FUNCTION_2
0x4000273	              0x5b	                                 pop rbx	        59	elfcomm.c	FUNCTION_2
0x4000274	              0x5d	                                 pop rbp	        59	elfcomm.c	FUNCTION_2
0x4000275	              0xc3	                                     ret	        59	elfcomm.c	FUNCTION_2
get_archive_member_name_at	CALL,10:ELSE,0:FOR,0:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0	74
0x4001aee	              0x55	                                push rbp	       856	elfcomm.c	FUNCTION_15
0x4001aef	          0x4889e5	                            mov rbp, rsp	       856	elfcomm.c	FUNCTION_15
0x4001af2	              0x53	                                push rbx	       856	elfcomm.c	FUNCTION_15
0x4001af3	        0x4883ec38	                           sub rsp, 0x38	       856	elfcomm.c	FUNCTION_15
0x4001af7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       856	elfcomm.c	FUNCTION_15
0x4001afb	        0x488975d0	             mov qword [rbp - 0x30], rsi	       856	elfcomm.c	FUNCTION_15
0x4001aff	        0x488955c8	             mov qword [rbp - 0x38], rdx	       856	elfcomm.c	FUNCTION_15
0x4001b03	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001b07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001b0b	        0x488b4008	                mov rax, qword [rax + 8]	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001b0f	      0xba00000000	                              mov edx, 0	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001b14	          0x4889ce	                            mov rsi, rcx	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001b17	          0x4889c7	                            mov rdi, rax	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001b1a	      0xe800000000	                          call 0x4001b1f	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001b1f	            0x85c0	                           test eax, eax	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001b21	            0x742b	                            je 0x4001b4e	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001b23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001b27	          0x488b18	                    mov rbx, qword [rax]	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001b2a	      0xbf00000000	                              mov edi, 0	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001b2f	      0xe800000000	                          call 0x4001b34	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001b34	          0x4889de	                            mov rsi, rbx	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001b37	          0x4889c7	                            mov rdi, rax	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001b3a	      0xb800000000	                              mov eax, 0	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001b3f	      0xe800000000	                          call 0x4001b44	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001b44	      0xb800000000	                              mov eax, 0	       862	elfcomm.c	FUNCTION_15	IF_1
0x4001b49	      0xe9b0000000	                           jmp 0x4001bfe	       862	elfcomm.c	FUNCTION_15	IF_1
0x4001b4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001b52	        0x488b4008	                mov rax, qword [rax + 8]	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001b56	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001b5a	        0x488d7a58	                   lea rdi, [rdx + 0x58]	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001b5e	          0x4889c1	                            mov rcx, rax	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001b61	      0xba3c000000	                           mov edx, 0x3c	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001b66	      0xbe01000000	                              mov esi, 1	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001b6b	      0xe800000000	                          call 0x4001b70	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001b70	        0x488945e8	             mov qword [rbp - 0x18], rax	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001b74	      0x48837de83c	           cmp qword [rbp - 0x18], 0x3c 	       865	elfcomm.c	FUNCTION_15	IF_2
0x4001b79	            0x7428	                            je 0x4001ba3	       865	elfcomm.c	FUNCTION_15	IF_2
0x4001b7b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001b7f	          0x488b18	                    mov rbx, qword [rax]	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001b82	      0xbf00000000	                              mov edi, 0	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001b87	      0xe800000000	                          call 0x4001b8c	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001b8c	          0x4889de	                            mov rsi, rbx	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001b8f	          0x4889c7	                            mov rdi, rax	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001b92	      0xb800000000	                              mov eax, 0	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001b97	      0xe800000000	                          call 0x4001b9c	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001b9c	      0xb800000000	                              mov eax, 0	       868	elfcomm.c	FUNCTION_15	IF_2
0x4001ba1	            0xeb5b	                           jmp 0x4001bfe	       868	elfcomm.c	FUNCTION_15	IF_2
0x4001ba3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x4001ba7	    0x480592000000	                           add rax, 0x92	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x4001bad	      0xba02000000	                              mov edx, 2	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x4001bb2	      0xbe00000000	                              mov esi, 0	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x4001bb7	          0x4889c7	                            mov rdi, rax	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x4001bba	      0xe800000000	                          call 0x4001bbf	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x4001bbf	            0x85c0	                           test eax, eax	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x4001bc1	            0x7428	                            je 0x4001beb	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x4001bc3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001bc7	          0x488b18	                    mov rbx, qword [rax]	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001bca	      0xbf00000000	                              mov edi, 0	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001bcf	      0xe800000000	                          call 0x4001bd4	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001bd4	          0x4889de	                            mov rsi, rbx	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001bd7	          0x4889c7	                            mov rdi, rax	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001bda	      0xb800000000	                              mov eax, 0	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001bdf	      0xe800000000	                          call 0x4001be4	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001be4	      0xb800000000	                              mov eax, 0	       874	elfcomm.c	FUNCTION_15	IF_3
0x4001be9	            0xeb13	                           jmp 0x4001bfe	       874	elfcomm.c	FUNCTION_15	IF_3
0x4001beb	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       877	elfcomm.c	FUNCTION_15	CALL_10
0x4001bef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       877	elfcomm.c	FUNCTION_15	CALL_10
0x4001bf3	          0x4889d6	                            mov rsi, rdx	       877	elfcomm.c	FUNCTION_15	CALL_10
0x4001bf6	          0x4889c7	                            mov rdi, rax	       877	elfcomm.c	FUNCTION_15	CALL_10
0x4001bf9	      0xe800000000	                          call 0x4001bfe	       877	elfcomm.c	FUNCTION_15	CALL_10
0x4001bfe	        0x4883c438	                           add rsp, 0x38	       878	elfcomm.c	FUNCTION_15
0x4001c02	              0x5b	                                 pop rbx	       878	elfcomm.c	FUNCTION_15
0x4001c03	              0x5d	                                 pop rbp	       878	elfcomm.c	FUNCTION_15
0x4001c04	              0xc3	                                     ret	       878	elfcomm.c	FUNCTION_15
get_archive_member_name	CALL,15:ELSE,0:FOR,1:SWITCH,0:DO,0:IF,11:functions,0:WHILE,1	232
0x4001784	              0x55	                                push rbp	       759	elfcomm.c	FUNCTION_14
0x4001785	          0x4889e5	                            mov rbp, rsp	       759	elfcomm.c	FUNCTION_14
0x4001788	        0x4883ec50	                           sub rsp, 0x50	       759	elfcomm.c	FUNCTION_14
0x400178c	        0x48897db8	             mov qword [rbp - 0x48], rdi	       759	elfcomm.c	FUNCTION_14
0x4001790	        0x488975b0	             mov qword [rbp - 0x50], rsi	       759	elfcomm.c	FUNCTION_14
0x4001794	    0x64488b042528	                mov rax, qword fs:[0x28]	       759	elfcomm.c	FUNCTION_14
0x400179d	        0x488945f8	                mov qword [rbp - 8], rax	       759	elfcomm.c	FUNCTION_14
0x40017a1	            0x31c0	                            xor eax, eax	       759	elfcomm.c	FUNCTION_14
0x40017a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       762	elfcomm.c	FUNCTION_14	IF_1
0x40017a7	         0xfb64058	           movzx eax, byte [rax + 0x58] 	       762	elfcomm.c	FUNCTION_14	IF_1
0x40017ab	            0x3c2f	                            cmp al, 0x2f	       762	elfcomm.c	FUNCTION_14	IF_1
0x40017ad	     0xf85a6020000	                           jne 0x4001a59	       762	elfcomm.c	FUNCTION_14	IF_1
0x40017b3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40017b7	        0x488b4030	            mov rax, qword [rax + 0x30] 	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40017bb	          0x4885c0	                           test rax, rax	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40017be	            0x740d	                            je 0x40017cd	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40017c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40017c4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40017c8	          0x4885c0	                           test rax, rax	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40017cb	            0x7521	                           jne 0x40017ee	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40017cd	      0xbf00000000	                              mov edi, 0	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x40017d2	      0xe800000000	                          call 0x40017d7	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x40017d7	          0x4889c7	                            mov rdi, rax	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x40017da	      0xb800000000	                              mov eax, 0	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x40017df	      0xe800000000	                          call 0x40017e4	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x40017e4	      0xb800000000	                              mov eax, 0	       773	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40017e9	      0xe9ea020000	                           jmp 0x4001ad8	       773	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40017ee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       776	elfcomm.c	FUNCTION_14	IF_1
0x40017f2	    0x48c740400000	               mov qword [rax + 0x40], 0	       776	elfcomm.c	FUNCTION_14	IF_1
0x40017fa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       777	elfcomm.c	FUNCTION_14	IF_1
0x40017fe	     0xfb680920000	           movzx eax, byte [rax + 0x92] 	       777	elfcomm.c	FUNCTION_14	IF_1
0x4001805	          0x8845c7	               mov byte [rbp - 0x39], al	       777	elfcomm.c	FUNCTION_14	IF_1
0x4001808	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       778	elfcomm.c	FUNCTION_14	IF_1
0x400180c	    0xc68092000000	                mov byte [rax + 0x92], 0	       778	elfcomm.c	FUNCTION_14	IF_1
0x4001813	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x4001817	        0x4883c058	                           add rax, 0x58	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x400181b	        0x488d4801	                      lea rcx, [rax + 1]	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x400181f	        0x488d45c8	                   lea rax, [rbp - 0x38]	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x4001823	      0xba0a000000	                            mov edx, 0xa	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x4001828	          0x4889c6	                            mov rsi, rax	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x400182b	          0x4889cf	                            mov rdi, rcx	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x400182e	      0xe800000000	                          call 0x4001833	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x4001833	        0x488945d0	             mov qword [rbp - 0x30], rax	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x4001837	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x400183b	        0x488945d8	             mov qword [rbp - 0x28], rax	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x400183f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001843	          0x8b4050	            mov eax, dword [rax + 0x50] 	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001846	            0x85c0	                           test eax, eax	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001848	            0x7439	                            je 0x4001883	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x400184a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x400184e	          0x4885c0	                           test rax, rax	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001851	            0x7430	                            je 0x4001883	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001853	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001857	           0xfb600	                   movzx eax, byte [rax]	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x400185a	            0x3c3a	                            cmp al, 0x3a	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x400185c	            0x7525	                           jne 0x4001883	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x400185e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x4001862	        0x4883c001	                              add rax, 1	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x4001866	      0xba0a000000	                            mov edx, 0xa	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x400186b	      0xbe00000000	                              mov esi, 0	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x4001870	          0x4889c7	                            mov rdi, rax	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x4001873	      0xe800000000	                          call 0x4001878	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x4001878	          0x4889c2	                            mov rdx, rax	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x400187b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x400187f	        0x48895040	             mov qword [rax + 0x40], rdx	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x4001883	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       782	elfcomm.c	FUNCTION_14	IF_1
0x4001887	         0xfb655c7	            movzx edx, byte [rbp - 0x39]	       782	elfcomm.c	FUNCTION_14	IF_1
0x400188b	    0x889092000000	               mov byte [rax + 0x92], dl	       782	elfcomm.c	FUNCTION_14	IF_1
0x4001891	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       784	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x4001895	        0x488b4038	            mov rax, qword [rax + 0x38] 	       784	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x4001899	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       784	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x400189d	            0x7330	                           jae 0x40018cf	       784	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x400189f	      0xbf00000000	                              mov edi, 0	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40018a4	      0xe800000000	                          call 0x40018a9	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40018a9	          0x4889c2	                            mov rdx, rax	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40018ac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40018b0	          0x4889c6	                            mov rsi, rax	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40018b3	          0x4889d7	                            mov rdi, rdx	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40018b6	      0xb800000000	                              mov eax, 0	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40018bb	      0xe800000000	                          call 0x40018c0	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40018c0	      0xb800000000	                              mov eax, 0	       787	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x40018c5	      0xe90e020000	                           jmp 0x4001ad8	       787	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x40018ca	      0x488345d001	               add qword [rbp - 0x30], 1	       792	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018cf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018d3	        0x488b4038	            mov rax, qword [rax + 0x38] 	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018d7	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018db	            0x762c	                           jbe 0x4001909	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018dd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018e1	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018e5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018e9	          0x4801d0	                            add rax, rdx	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018ec	           0xfb600	                   movzx eax, byte [rax]	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018ef	            0x3c0a	                             cmp al, 0xa	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018f1	            0x7416	                            je 0x4001909	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018f3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018f7	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018fb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40018ff	          0x4801d0	                            add rax, rdx	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001902	           0xfb600	                   movzx eax, byte [rax]	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001905	            0x84c0	                             test al, al	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001907	            0x75c1	                           jne 0x40018ca	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001909	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x400190e	            0x741f	                            je 0x400192f	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001910	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001914	        0x488b4030	            mov rax, qword [rax + 0x30] 	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001918	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x400191c	        0x4883ea01	                              sub rdx, 1	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001920	          0x4801d0	                            add rax, rdx	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001923	           0xfb600	                   movzx eax, byte [rax]	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001926	            0x3c2f	                            cmp al, 0x2f	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001928	            0x7505	                           jne 0x400192f	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x400192a	      0x48836dd001	               sub qword [rbp - 0x30], 1	       794	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x400192f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       795	elfcomm.c	FUNCTION_14	IF_1	IF_6
0x4001933	        0x488b4038	            mov rax, qword [rax + 0x38] 	       795	elfcomm.c	FUNCTION_14	IF_1	IF_6
0x4001937	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       795	elfcomm.c	FUNCTION_14	IF_1	IF_6
0x400193b	            0x730c	                           jae 0x4001949	       795	elfcomm.c	FUNCTION_14	IF_1	IF_6
0x400193d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       796	elfcomm.c	FUNCTION_14	IF_1	IF_6
0x4001941	        0x488b4038	            mov rax, qword [rax + 0x38] 	       796	elfcomm.c	FUNCTION_14	IF_1	IF_6
0x4001945	        0x488945d0	             mov qword [rbp - 0x30], rax	       796	elfcomm.c	FUNCTION_14	IF_1	IF_6
0x4001949	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       797	elfcomm.c	FUNCTION_14	IF_1
0x400194d	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       797	elfcomm.c	FUNCTION_14	IF_1
0x4001951	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       797	elfcomm.c	FUNCTION_14	IF_1
0x4001955	          0x4801d0	                            add rax, rdx	       797	elfcomm.c	FUNCTION_14	IF_1
0x4001958	          0xc60000	                       mov byte [rax], 0	       797	elfcomm.c	FUNCTION_14	IF_1
0x400195b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x400195f	          0x8b4050	            mov eax, dword [rax + 0x50] 	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001962	            0x85c0	                           test eax, eax	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001964	            0x740d	                            je 0x4001973	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001966	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x400196a	        0x488b4040	            mov rax, qword [rax + 0x40] 	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x400196e	          0x4885c0	                           test rax, rax	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001971	            0x7514	                           jne 0x4001987	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001973	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       800	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001977	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       800	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x400197b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       800	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x400197f	          0x4801d0	                            add rax, rdx	       800	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001982	      0xe951010000	                           jmp 0x4001ad8	       800	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001987	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       803	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x400198b	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       803	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x400198f	            0x7221	                            jb 0x40019b2	       803	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x4001991	      0xbf00000000	                              mov edi, 0	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x4001996	      0xe800000000	                          call 0x400199b	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x400199b	          0x4889c7	                            mov rdi, rax	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x400199e	      0xb800000000	                              mov eax, 0	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40019a3	      0xe800000000	                          call 0x40019a8	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40019a8	      0xb800000000	                              mov eax, 0	       806	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x40019ad	      0xe926010000	                           jmp 0x4001ad8	       806	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x40019b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019b6	        0x482b45d8	             sub rax, qword [rbp - 0x28]	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019ba	          0x4889c2	                            mov rdx, rax	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019bd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       812	elfcomm.c	FUNCTION_14	IF_1
0x40019c1	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       812	elfcomm.c	FUNCTION_14	IF_1
0x40019c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019c9	          0x4801c1	                            add rcx, rax	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019cc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019d0	          0x488b00	                    mov rax, qword [rax]	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019d3	          0x4889ce	                            mov rsi, rcx	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019d6	          0x4889c7	                            mov rdi, rax	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019d9	      0xe800000000	                          call 0x40019de	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019de	        0x488945e0	             mov qword [rbp - 0x20], rax	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40019e2	      0x48837de000	               cmp qword [rbp - 0x20], 0	       813	elfcomm.c	FUNCTION_14	IF_1	IF_9
0x40019e7	            0x7453	                            je 0x4001a3c	       813	elfcomm.c	FUNCTION_14	IF_1	IF_9
0x40019e9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40019ed	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40019f1	          0x4889d6	                            mov rsi, rdx	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40019f4	          0x4889c7	                            mov rdi, rax	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40019f7	      0xe800000000	                          call 0x40019fc	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40019fc	            0x85c0	                           test eax, eax	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40019fe	            0x753c	                           jne 0x4001a3c	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x4001a00	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x4001a04	        0x488b4840	            mov rcx, qword [rax + 0x40] 	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x4001a08	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x4001a0c	      0xba00000000	                              mov edx, 0	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x4001a11	          0x4889ce	                            mov rsi, rcx	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x4001a14	          0x4889c7	                            mov rdi, rax	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x4001a17	      0xe800000000	                          call 0x4001a1c	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x4001a1c	        0x488945e8	             mov qword [rbp - 0x18], rax	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x4001a20	      0x48837de800	               cmp qword [rbp - 0x18], 0	       819	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10
0x4001a25	            0x7415	                            je 0x4001a3c	       819	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10
0x4001a27	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       821	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10	CALL_12
0x4001a2b	          0x4889c7	                            mov rdi, rax	       821	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10	CALL_12
0x4001a2e	      0xe800000000	                          call 0x4001a33	       821	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10	CALL_12
0x4001a33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       822	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10
0x4001a37	      0xe99c000000	                           jmp 0x4001ad8	       822	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10
0x4001a3c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       825	elfcomm.c	FUNCTION_14	IF_1	CALL_13
0x4001a40	          0x4889c7	                            mov rdi, rax	       825	elfcomm.c	FUNCTION_14	IF_1	CALL_13
0x4001a43	      0xe800000000	                          call 0x4001a48	       825	elfcomm.c	FUNCTION_14	IF_1	CALL_13
0x4001a48	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       828	elfcomm.c	FUNCTION_14	IF_1
0x4001a4c	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       828	elfcomm.c	FUNCTION_14	IF_1
0x4001a50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       828	elfcomm.c	FUNCTION_14	IF_1
0x4001a54	          0x4801d0	                            add rax, rdx	       828	elfcomm.c	FUNCTION_14	IF_1
0x4001a57	            0xeb7f	                           jmp 0x4001ad8	       828	elfcomm.c	FUNCTION_14	IF_1
0x4001a59	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001a61	            0xeb37	                           jmp 0x4001a9a	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001a63	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a67	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a6b	          0x4801d0	                            add rax, rdx	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a6e	        0x4883c058	                           add rax, 0x58	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a72	           0xfb600	                   movzx eax, byte [rax]	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a75	            0x3c2f	                            cmp al, 0x2f	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a77	            0x751c	                           jne 0x4001a95	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a79	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       835	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a7d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       835	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a81	          0x4801d0	                            add rax, rdx	       835	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a84	        0x4883c058	                           add rax, 0x58	       835	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a88	          0xc60000	                       mov byte [rax], 0	       835	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a8b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       836	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a8f	        0x4883c058	                           add rax, 0x58	       836	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a93	            0xeb43	                           jmp 0x4001ad8	       836	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001a95	      0x488345d001	               add qword [rbp - 0x30], 1	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001a9a	      0x48837dd00f	            cmp qword [rbp - 0x30], 0xf 	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001a9f	            0x76c2	                           jbe 0x4001a63	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001aa1	      0xbf11000000	                           mov edi, 0x11	       842	elfcomm.c	FUNCTION_14	CALL_14
0x4001aa6	      0xe800000000	                          call 0x4001aab	       842	elfcomm.c	FUNCTION_14	CALL_14
0x4001aab	        0x488945f0	             mov qword [rbp - 0x10], rax	       842	elfcomm.c	FUNCTION_14	CALL_14
0x4001aaf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       843	elfcomm.c	FUNCTION_14	CALL_15
0x4001ab3	        0x4883c058	                           add rax, 0x58	       843	elfcomm.c	FUNCTION_14	CALL_15
0x4001ab7	        0x488b5008	                mov rdx, qword [rax + 8]	       843	elfcomm.c	FUNCTION_14	CALL_15
0x4001abb	          0x488b00	                    mov rax, qword [rax]	       843	elfcomm.c	FUNCTION_14	CALL_15
0x4001abe	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       843	elfcomm.c	FUNCTION_14	CALL_15
0x4001ac2	          0x488901	                    mov qword [rcx], rax	       843	elfcomm.c	FUNCTION_14	CALL_15
0x4001ac5	        0x48895108	                mov qword [rcx + 8], rdx	       843	elfcomm.c	FUNCTION_14	CALL_15
0x4001ac9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       844	elfcomm.c	FUNCTION_14
0x4001acd	        0x4883c010	                           add rax, 0x10	       844	elfcomm.c	FUNCTION_14
0x4001ad1	          0xc60000	                       mov byte [rax], 0	       844	elfcomm.c	FUNCTION_14
0x4001ad4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       845	elfcomm.c	FUNCTION_14
0x4001ad8	        0x488b75f8	                mov rsi, qword [rbp - 8]	       847	elfcomm.c	FUNCTION_14
0x4001adc	    0x644833342528	                xor rsi, qword fs:[0x28]	       847	elfcomm.c	FUNCTION_14
0x4001ae5	            0x7405	                            je 0x4001aec	       847	elfcomm.c	FUNCTION_14
0x4001ae7	      0xe800000000	                          call 0x4001aec	       847	elfcomm.c	FUNCTION_14
0x4001aec	              0xc9	                                   leave	       847	elfcomm.c	FUNCTION_14
0x4001aed	              0xc3	                                     ret	       847	elfcomm.c	FUNCTION_14
setup_nested_archive	CALL,5:ELSE,0:FOR,0:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0	48
0x4001659	              0x55	                                push rbp	       714	elfcomm.c	FUNCTION_12
0x400165a	          0x4889e5	                            mov rbp, rsp	       714	elfcomm.c	FUNCTION_12
0x400165d	        0x4883ec20	                           sub rsp, 0x20	       714	elfcomm.c	FUNCTION_12
0x4001661	        0x48897de8	             mov qword [rbp - 0x18], rdi	       714	elfcomm.c	FUNCTION_12
0x4001665	        0x488975e0	             mov qword [rbp - 0x20], rsi	       714	elfcomm.c	FUNCTION_12
0x4001669	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       718	elfcomm.c	FUNCTION_12	IF_1
0x400166d	          0x488b00	                    mov rax, qword [rax]	       718	elfcomm.c	FUNCTION_12	IF_1
0x4001670	          0x4885c0	                           test rax, rax	       718	elfcomm.c	FUNCTION_12	IF_1
0x4001673	            0x7421	                            je 0x4001696	       718	elfcomm.c	FUNCTION_12	IF_1
0x4001675	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x4001679	          0x488b00	                    mov rax, qword [rax]	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x400167c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x4001680	          0x4889d6	                            mov rsi, rdx	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x4001683	          0x4889c7	                            mov rdi, rax	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x4001686	      0xe800000000	                          call 0x400168b	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x400168b	            0x85c0	                           test eax, eax	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x400168d	            0x7507	                           jne 0x4001696	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x400168f	      0xb800000000	                              mov eax, 0	       720	elfcomm.c	FUNCTION_12	IF_1
0x4001694	            0xeb6b	                           jmp 0x4001701	       720	elfcomm.c	FUNCTION_12	IF_1
0x4001696	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       723	elfcomm.c	FUNCTION_12	IF_2
0x400169a	        0x488b4008	                mov rax, qword [rax + 8]	       723	elfcomm.c	FUNCTION_12	IF_2
0x400169e	          0x4885c0	                           test rax, rax	       723	elfcomm.c	FUNCTION_12	IF_2
0x40016a1	            0x7410	                            je 0x40016b3	       723	elfcomm.c	FUNCTION_12	IF_2
0x40016a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       724	elfcomm.c	FUNCTION_12	CALL_2
0x40016a7	        0x488b4008	                mov rax, qword [rax + 8]	       724	elfcomm.c	FUNCTION_12	CALL_2
0x40016ab	          0x4889c7	                            mov rdi, rax	       724	elfcomm.c	FUNCTION_12	CALL_2
0x40016ae	      0xe800000000	                          call 0x40016b3	       724	elfcomm.c	FUNCTION_12	CALL_2
0x40016b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       725	elfcomm.c	FUNCTION_12	CALL_3
0x40016b7	          0x4889c7	                            mov rdi, rax	       725	elfcomm.c	FUNCTION_12	CALL_3
0x40016ba	      0xe800000000	                          call 0x40016bf	       725	elfcomm.c	FUNCTION_12	CALL_3
0x40016bf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       727	elfcomm.c	FUNCTION_12	CALL_4
0x40016c3	      0xbe00000000	                              mov esi, 0	       727	elfcomm.c	FUNCTION_12	CALL_4
0x40016c8	          0x4889c7	                            mov rdi, rax	       727	elfcomm.c	FUNCTION_12	CALL_4
0x40016cb	      0xe800000000	                          call 0x40016d0	       727	elfcomm.c	FUNCTION_12	CALL_4
0x40016d0	        0x488945f8	                mov qword [rbp - 8], rax	       727	elfcomm.c	FUNCTION_12	CALL_4
0x40016d4	      0x48837df800	                  cmp qword [rbp - 8], 0	       728	elfcomm.c	FUNCTION_12	IF_3
0x40016d9	            0x7507	                           jne 0x40016e2	       728	elfcomm.c	FUNCTION_12	IF_3
0x40016db	      0xb801000000	                              mov eax, 1	       729	elfcomm.c	FUNCTION_12	IF_3
0x40016e0	            0xeb1f	                           jmp 0x4001701	       729	elfcomm.c	FUNCTION_12	IF_3
0x40016e2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       730	elfcomm.c	FUNCTION_12	CALL_5
0x40016e6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       730	elfcomm.c	FUNCTION_12	CALL_5
0x40016ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       730	elfcomm.c	FUNCTION_12	CALL_5
0x40016ee	    0x41b800000000	                              mov r8d, 0	       730	elfcomm.c	FUNCTION_12	CALL_5
0x40016f4	      0xb900000000	                              mov ecx, 0	       730	elfcomm.c	FUNCTION_12	CALL_5
0x40016f9	          0x4889c7	                            mov rdi, rax	       730	elfcomm.c	FUNCTION_12	CALL_5
0x40016fc	      0xe800000000	                          call 0x4001701	       730	elfcomm.c	FUNCTION_12	CALL_5
0x4001701	              0xc9	                                   leave	       732	elfcomm.c	FUNCTION_12
0x4001702	              0xc3	                                     ret	       732	elfcomm.c	FUNCTION_12
setup_archive	CALL,27:ELSE,2:FOR,0:SWITCH,0:DO,0:IF,14:functions,0:WHILE,0	258
0x400123b	              0x55	                                push rbp	       612	elfcomm.c	FUNCTION_11
0x400123c	          0x4889e5	                            mov rbp, rsp	       612	elfcomm.c	FUNCTION_11
0x400123f	              0x53	                                push rbx	       612	elfcomm.c	FUNCTION_11
0x4001240	        0x4883ec38	                           sub rsp, 0x38	       612	elfcomm.c	FUNCTION_11
0x4001244	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       612	elfcomm.c	FUNCTION_11
0x4001248	        0x488975d0	             mov qword [rbp - 0x30], rsi	       612	elfcomm.c	FUNCTION_11
0x400124c	        0x488955c8	             mov qword [rbp - 0x38], rdx	       612	elfcomm.c	FUNCTION_11
0x4001250	          0x894dc4	             mov dword [rbp - 0x3c], ecx	       612	elfcomm.c	FUNCTION_11
0x4001253	        0x448945c0	             mov dword [rbp - 0x40], r8d	       612	elfcomm.c	FUNCTION_11
0x4001257	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       615	elfcomm.c	FUNCTION_11	CALL_1
0x400125b	          0x4889c7	                            mov rdi, rax	       615	elfcomm.c	FUNCTION_11	CALL_1
0x400125e	      0xe800000000	                          call 0x4001263	       615	elfcomm.c	FUNCTION_11	CALL_1
0x4001263	          0x4889c2	                            mov rdx, rax	       615	elfcomm.c	FUNCTION_11	CALL_1
0x4001266	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       615	elfcomm.c	FUNCTION_11	CALL_1
0x400126a	          0x488910	                    mov qword [rax], rdx	       615	elfcomm.c	FUNCTION_11	CALL_1
0x400126d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       616	elfcomm.c	FUNCTION_11
0x4001271	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       616	elfcomm.c	FUNCTION_11
0x4001275	        0x48895008	                mov qword [rax + 8], rdx	       616	elfcomm.c	FUNCTION_11
0x4001279	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       617	elfcomm.c	FUNCTION_11
0x400127d	    0x48c740100000	               mov qword [rax + 0x10], 0	       617	elfcomm.c	FUNCTION_11
0x4001285	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       618	elfcomm.c	FUNCTION_11
0x4001289	    0x48c740180000	               mov qword [rax + 0x18], 0	       618	elfcomm.c	FUNCTION_11
0x4001291	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       619	elfcomm.c	FUNCTION_11
0x4001295	    0x48c740200000	               mov qword [rax + 0x20], 0	       619	elfcomm.c	FUNCTION_11
0x400129d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       620	elfcomm.c	FUNCTION_11
0x40012a1	    0x48c740280000	               mov qword [rax + 0x28], 0	       620	elfcomm.c	FUNCTION_11
0x40012a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       621	elfcomm.c	FUNCTION_11
0x40012ad	    0x48c740300000	               mov qword [rax + 0x30], 0	       621	elfcomm.c	FUNCTION_11
0x40012b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       622	elfcomm.c	FUNCTION_11
0x40012b9	    0x48c740380000	               mov qword [rax + 0x38], 0	       622	elfcomm.c	FUNCTION_11
0x40012c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       623	elfcomm.c	FUNCTION_11
0x40012c5	    0x48c740400000	               mov qword [rax + 0x40], 0	       623	elfcomm.c	FUNCTION_11
0x40012cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       624	elfcomm.c	FUNCTION_11
0x40012d1	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       624	elfcomm.c	FUNCTION_11
0x40012d4	          0x895050	             mov dword [rax + 0x50], edx	       624	elfcomm.c	FUNCTION_11
0x40012d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       625	elfcomm.c	FUNCTION_11
0x40012db	    0xc74054000000	               mov dword [rax + 0x54], 0	       625	elfcomm.c	FUNCTION_11
0x40012e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       626	elfcomm.c	FUNCTION_11
0x40012e6	    0x48c740480800	               mov qword [rax + 0x48], 8	       626	elfcomm.c	FUNCTION_11
0x40012ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x40012f2	      0xba00000000	                              mov edx, 0	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x40012f7	      0xbe08000000	                              mov esi, 8	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x40012fc	          0x4889c7	                            mov rdi, rax	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x40012ff	      0xe800000000	                          call 0x4001304	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x4001304	            0x85c0	                           test eax, eax	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x4001306	            0x742b	                            je 0x4001333	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x4001308	      0xbf00000000	                              mov edi, 0	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x400130d	      0xe800000000	                          call 0x4001312	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4001312	          0x4889c2	                            mov rdx, rax	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4001315	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4001319	          0x4889c6	                            mov rsi, rax	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x400131c	          0x4889d7	                            mov rdi, rdx	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x400131f	      0xb800000000	                              mov eax, 0	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4001324	      0xe800000000	                          call 0x4001329	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4001329	      0xb801000000	                              mov eax, 1	       632	elfcomm.c	FUNCTION_11	IF_1
0x400132e	      0xe91f030000	                           jmp 0x4001652	       632	elfcomm.c	FUNCTION_11	IF_1
0x4001333	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       634	elfcomm.c	FUNCTION_11	CALL_5
0x4001337	        0x488d7858	                   lea rdi, [rax + 0x58]	       634	elfcomm.c	FUNCTION_11	CALL_5
0x400133b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       634	elfcomm.c	FUNCTION_11	CALL_5
0x400133f	          0x4889c1	                            mov rcx, rax	       634	elfcomm.c	FUNCTION_11	CALL_5
0x4001342	      0xba3c000000	                           mov edx, 0x3c	       634	elfcomm.c	FUNCTION_11	CALL_5
0x4001347	      0xbe01000000	                              mov esi, 1	       634	elfcomm.c	FUNCTION_11	CALL_5
0x400134c	      0xe800000000	                          call 0x4001351	       634	elfcomm.c	FUNCTION_11	CALL_5
0x4001351	        0x488945e8	             mov qword [rbp - 0x18], rax	       634	elfcomm.c	FUNCTION_11	CALL_5
0x4001355	      0x48837de83c	           cmp qword [rbp - 0x18], 0x3c 	       635	elfcomm.c	FUNCTION_11	IF_2
0x400135a	            0x743c	                            je 0x4001398	       635	elfcomm.c	FUNCTION_11	IF_2
0x400135c	      0x48837de800	               cmp qword [rbp - 0x18], 0	       637	elfcomm.c	FUNCTION_11	IF_2	IF_3
0x4001361	            0x750a	                           jne 0x400136d	       637	elfcomm.c	FUNCTION_11	IF_2	IF_3
0x4001363	      0xb800000000	                              mov eax, 0	       638	elfcomm.c	FUNCTION_11	IF_2	IF_3
0x4001368	      0xe9e5020000	                           jmp 0x4001652	       638	elfcomm.c	FUNCTION_11	IF_2	IF_3
0x400136d	      0xbf00000000	                              mov edi, 0	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4001372	      0xe800000000	                          call 0x4001377	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4001377	          0x4889c2	                            mov rdx, rax	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x400137a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x400137e	          0x4889c6	                            mov rsi, rax	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4001381	          0x4889d7	                            mov rdi, rdx	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4001384	      0xb800000000	                              mov eax, 0	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4001389	      0xe800000000	                          call 0x400138e	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x400138e	      0xb801000000	                              mov eax, 1	       641	elfcomm.c	FUNCTION_11	IF_2
0x4001393	      0xe9ba020000	                           jmp 0x4001652	       641	elfcomm.c	FUNCTION_11	IF_2
0x4001398	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x400139c	        0x4883c058	                           add rax, 0x58	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x40013a0	      0xba10000000	                           mov edx, 0x10	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x40013a5	      0xbe00000000	                              mov esi, 0	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x40013aa	          0x4889c7	                            mov rdi, rax	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x40013ad	      0xe800000000	                          call 0x40013b2	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x40013b2	            0x85c0	                           test eax, eax	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x40013b4	            0x7522	                           jne 0x40013d8	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x40013b6	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x40013b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x40013bd	      0xbe04000000	                              mov esi, 4	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x40013c2	          0x4889c7	                            mov rdi, rax	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x40013c5	      0xe84df9ffff	call sym.process_archive_index_and_symbols	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x40013ca	            0x85c0	                           test eax, eax	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x40013cc	            0x757c	                           jne 0x400144a	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x40013ce	      0xb801000000	                              mov eax, 1	       648	elfcomm.c	FUNCTION_11	IF_4	IF_5
0x40013d3	      0xe97a020000	                           jmp 0x4001652	       648	elfcomm.c	FUNCTION_11	IF_4	IF_5
0x40013d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x40013dc	        0x4883c058	                           add rax, 0x58	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x40013e0	      0xba10000000	                           mov edx, 0x10	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x40013e5	      0xbe00000000	                              mov esi, 0	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x40013ea	          0x4889c7	                            mov rdi, rax	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x40013ed	      0xe800000000	                          call 0x40013f2	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x40013f2	            0x85c0	                           test eax, eax	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x40013f4	            0x752d	                           jne 0x4001423	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x40013f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       652	elfcomm.c	FUNCTION_11	ELSE_1	IF_6
0x40013fa	    0xc74054010000	               mov dword [rax + 0x54], 1	       652	elfcomm.c	FUNCTION_11	ELSE_1	IF_6
0x4001401	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4001404	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4001408	      0xbe08000000	                              mov esi, 8	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x400140d	          0x4889c7	                            mov rdi, rax	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4001410	      0xe802f9ffff	call sym.process_archive_index_and_symbols	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4001415	            0x85c0	                           test eax, eax	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4001417	            0x7531	                           jne 0x400144a	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4001419	      0xb801000000	                              mov eax, 1	       654	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7
0x400141e	      0xe92f020000	                           jmp 0x4001652	       654	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7
0x4001423	        0x837dc000	               cmp dword [rbp - 0x40], 0	       656	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4001427	            0x7421	                            je 0x400144a	       656	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4001429	      0xbf00000000	                              mov edi, 0	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x400142e	      0xe800000000	                          call 0x4001433	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4001433	          0x4889c2	                            mov rdx, rax	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4001436	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x400143a	          0x4889c6	                            mov rsi, rax	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x400143d	          0x4889d7	                            mov rdi, rdx	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4001440	      0xb800000000	                              mov eax, 0	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4001445	      0xe800000000	                          call 0x400144a	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x400144a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x400144e	        0x4883c058	                           add rax, 0x58	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x4001452	      0xba10000000	                           mov edx, 0x10	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x4001457	      0xbe00000000	                              mov esi, 0	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x400145c	          0x4889c7	                            mov rdi, rax	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x400145f	      0xe800000000	                          call 0x4001464	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x4001464	            0x85c0	                           test eax, eax	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x4001466	     0xf85e1010000	                           jne 0x400164d	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x400146c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       662	elfcomm.c	FUNCTION_11	IF_9
0x4001470	     0xfb680920000	           movzx eax, byte [rax + 0x92] 	       662	elfcomm.c	FUNCTION_11	IF_9
0x4001477	          0x8845e7	               mov byte [rbp - 0x19], al	       662	elfcomm.c	FUNCTION_11	IF_9
0x400147a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       663	elfcomm.c	FUNCTION_11	IF_9
0x400147e	    0xc68092000000	                mov byte [rax + 0x92], 0	       663	elfcomm.c	FUNCTION_11	IF_9
0x4001485	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_15
0x4001489	    0x480588000000	                           add rax, 0x88	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_15
0x400148f	      0xba0a000000	                            mov edx, 0xa	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_15
0x4001494	      0xbe00000000	                              mov esi, 0	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_15
0x4001499	          0x4889c7	                            mov rdi, rax	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_15
0x400149c	      0xe800000000	                          call 0x40014a1	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_15
0x40014a1	          0x4889c2	                            mov rdx, rax	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_15
0x40014a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_15
0x40014a8	        0x48895038	             mov qword [rax + 0x38], rdx	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_15
0x40014ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       665	elfcomm.c	FUNCTION_11	IF_9
0x40014b0	         0xfb655e7	            movzx edx, byte [rbp - 0x19]	       665	elfcomm.c	FUNCTION_11	IF_9
0x40014b4	    0x889092000000	               mov byte [rax + 0x92], dl	       665	elfcomm.c	FUNCTION_11	IF_9
0x40014ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       667	elfcomm.c	FUNCTION_11	IF_9	IF_10
0x40014be	        0x488b4038	            mov rax, qword [rax + 0x38] 	       667	elfcomm.c	FUNCTION_11	IF_9	IF_10
0x40014c2	        0x4883f807	                              cmp rax, 7	       667	elfcomm.c	FUNCTION_11	IF_9	IF_10
0x40014c6	            0x7736	                            ja 0x40014fe	       667	elfcomm.c	FUNCTION_11	IF_9	IF_10
0x40014c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014cc	        0x488b5838	            mov rbx, qword [rax + 0x38] 	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014d0	      0xbf00000000	                              mov edi, 0	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014d5	      0xe800000000	                          call 0x40014da	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014da	          0x4889c1	                            mov rcx, rax	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014e1	          0x4889da	                            mov rdx, rbx	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014e4	          0x4889c6	                            mov rsi, rax	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014e7	          0x4889cf	                            mov rdi, rcx	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014ea	      0xb800000000	                              mov eax, 0	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014ef	      0xe800000000	                          call 0x40014f4	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_17
0x40014f4	      0xb801000000	                              mov eax, 1	       671	elfcomm.c	FUNCTION_11	IF_9	IF_10
0x40014f9	      0xe954010000	                           jmp 0x4001652	       671	elfcomm.c	FUNCTION_11	IF_9	IF_10
0x40014fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       674	elfcomm.c	FUNCTION_11	IF_9	IF_11
0x4001502	        0x488b4038	            mov rax, qword [rax + 0x38] 	       674	elfcomm.c	FUNCTION_11	IF_9	IF_11
0x4001506	          0x4885c0	                           test rax, rax	       674	elfcomm.c	FUNCTION_11	IF_9	IF_11
0x4001509	            0x7936	                           jns 0x4001541	       674	elfcomm.c	FUNCTION_11	IF_9	IF_11
0x400150b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x400150f	        0x488b5838	            mov rbx, qword [rax + 0x38] 	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x4001513	      0xbf00000000	                              mov edi, 0	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x4001518	      0xe800000000	                          call 0x400151d	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x400151d	          0x4889c1	                            mov rcx, rax	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x4001520	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x4001524	          0x4889da	                            mov rdx, rbx	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x4001527	          0x4889c6	                            mov rsi, rax	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x400152a	          0x4889cf	                            mov rdi, rcx	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x400152d	      0xb800000000	                              mov eax, 0	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x4001532	      0xe800000000	                          call 0x4001537	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_19
0x4001537	      0xb801000000	                              mov eax, 1	       678	elfcomm.c	FUNCTION_11	IF_9	IF_11
0x400153c	      0xe911010000	                           jmp 0x4001652	       678	elfcomm.c	FUNCTION_11	IF_9	IF_11
0x4001541	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       681	elfcomm.c	FUNCTION_11	IF_9
0x4001545	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       681	elfcomm.c	FUNCTION_11	IF_9
0x4001549	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       681	elfcomm.c	FUNCTION_11	IF_9
0x400154d	        0x488b4038	            mov rax, qword [rax + 0x38] 	       681	elfcomm.c	FUNCTION_11	IF_9
0x4001551	          0x4801d0	                            add rax, rdx	       681	elfcomm.c	FUNCTION_11	IF_9
0x4001554	        0x488d503c	                   lea rdx, [rax + 0x3c]	       681	elfcomm.c	FUNCTION_11	IF_9
0x4001558	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       681	elfcomm.c	FUNCTION_11	IF_9
0x400155c	        0x48895048	             mov qword [rax + 0x48], rdx	       681	elfcomm.c	FUNCTION_11	IF_9
0x4001560	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_20
0x4001564	        0x488b4038	            mov rax, qword [rax + 0x38] 	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_20
0x4001568	        0x4883c001	                              add rax, 1	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_20
0x400156c	          0x4889c7	                            mov rdi, rax	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_20
0x400156f	      0xe800000000	                          call 0x4001574	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_20
0x4001574	          0x4889c2	                            mov rdx, rax	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_20
0x4001577	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_20
0x400157b	        0x48895030	             mov qword [rax + 0x30], rdx	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_20
0x400157f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       685	elfcomm.c	FUNCTION_11	IF_9	IF_12
0x4001583	        0x488b4030	            mov rax, qword [rax + 0x30] 	       685	elfcomm.c	FUNCTION_11	IF_9	IF_12
0x4001587	          0x4885c0	                           test rax, rax	       685	elfcomm.c	FUNCTION_11	IF_9	IF_12
0x400158a	            0x7521	                           jne 0x40015ad	       685	elfcomm.c	FUNCTION_11	IF_9	IF_12
0x400158c	      0xbf00000000	                              mov edi, 0	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_22
0x4001591	      0xe800000000	                          call 0x4001596	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_22
0x4001596	          0x4889c7	                            mov rdi, rax	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_22
0x4001599	      0xb800000000	                              mov eax, 0	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_22
0x400159e	      0xe800000000	                          call 0x40015a3	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_22
0x40015a3	      0xb801000000	                              mov eax, 1	       688	elfcomm.c	FUNCTION_11	IF_9	IF_12
0x40015a8	      0xe9a5000000	                           jmp 0x4001652	       688	elfcomm.c	FUNCTION_11	IF_9	IF_12
0x40015ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015b1	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015b9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015bd	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015c1	          0x4889d1	                            mov rcx, rdx	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015c4	      0xba01000000	                              mov edx, 1	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015c9	          0x4889c7	                            mov rdi, rax	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015cc	      0xe800000000	                          call 0x40015d1	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015d1	        0x4883f801	                              cmp rax, 1	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015d5	            0x7444	                            je 0x400161b	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x40015d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       693	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_24
0x40015db	        0x488b4030	            mov rax, qword [rax + 0x30] 	       693	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_24
0x40015df	          0x4889c7	                            mov rdi, rax	       693	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_24
0x40015e2	      0xe800000000	                          call 0x40015e7	       693	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_24
0x40015e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       694	elfcomm.c	FUNCTION_11	IF_9	IF_13
0x40015eb	    0x48c740300000	               mov qword [rax + 0x30], 0	       694	elfcomm.c	FUNCTION_11	IF_9	IF_13
0x40015f3	      0xbf00000000	                              mov edi, 0	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_26
0x40015f8	      0xe800000000	                          call 0x40015fd	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_26
0x40015fd	          0x4889c2	                            mov rdx, rax	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_26
0x4001600	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_26
0x4001604	          0x4889c6	                            mov rsi, rax	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_26
0x4001607	          0x4889d7	                            mov rdi, rdx	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_26
0x400160a	      0xb800000000	                              mov eax, 0	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_26
0x400160f	      0xe800000000	                          call 0x4001614	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_26
0x4001614	      0xb801000000	                              mov eax, 1	       697	elfcomm.c	FUNCTION_11	IF_9	IF_13
0x4001619	            0xeb37	                           jmp 0x4001652	       697	elfcomm.c	FUNCTION_11	IF_9	IF_13
0x400161b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       700	elfcomm.c	FUNCTION_11	IF_9	IF_14
0x400161f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       700	elfcomm.c	FUNCTION_11	IF_9	IF_14
0x4001623	          0x83e001	                              and eax, 1	       700	elfcomm.c	FUNCTION_11	IF_9	IF_14
0x4001626	          0x4885c0	                           test rax, rax	       700	elfcomm.c	FUNCTION_11	IF_9	IF_14
0x4001629	            0x740c	                            je 0x4001637	       700	elfcomm.c	FUNCTION_11	IF_9	IF_14
0x400162b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       701	elfcomm.c	FUNCTION_11	IF_9	CALL_27
0x400162f	          0x4889c7	                            mov rdi, rax	       701	elfcomm.c	FUNCTION_11	IF_9	CALL_27
0x4001632	      0xe800000000	                          call 0x4001637	       701	elfcomm.c	FUNCTION_11	IF_9	CALL_27
0x4001637	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	elfcomm.c	FUNCTION_11	IF_9
0x400163b	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       703	elfcomm.c	FUNCTION_11	IF_9
0x400163f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	elfcomm.c	FUNCTION_11	IF_9
0x4001643	        0x488b4038	            mov rax, qword [rax + 0x38] 	       703	elfcomm.c	FUNCTION_11	IF_9
0x4001647	          0x4801d0	                            add rax, rdx	       703	elfcomm.c	FUNCTION_11	IF_9
0x400164a	          0xc60000	                       mov byte [rax], 0	       703	elfcomm.c	FUNCTION_11	IF_9
0x400164d	      0xb800000000	                              mov eax, 0	       706	elfcomm.c	FUNCTION_11
0x4001652	        0x4883c438	                           add rsp, 0x38	       707	elfcomm.c	FUNCTION_11
0x4001656	              0x5b	                                 pop rbx	       707	elfcomm.c	FUNCTION_11
0x4001657	              0x5d	                                 pop rbp	       707	elfcomm.c	FUNCTION_11
0x4001658	              0xc3	                                     ret	       707	elfcomm.c	FUNCTION_11
byte_get_little_endian	CALL,3:ELSE,4:FOR,0:SWITCH,1:DO,0:IF,8:functions,0:WHILE,0	222
0x4000439	              0x55	                                push rbp	       132	elfcomm.c	FUNCTION_5
0x400043a	          0x4889e5	                            mov rbp, rsp	       132	elfcomm.c	FUNCTION_5
0x400043d	        0x4883ec10	                           sub rsp, 0x10	       132	elfcomm.c	FUNCTION_5
0x4000441	        0x48897df8	                mov qword [rbp - 8], rdi	       132	elfcomm.c	FUNCTION_5
0x4000445	          0x8975f4	              mov dword [rbp - 0xc], esi	       132	elfcomm.c	FUNCTION_5
0x4000448	        0x837df408	                cmp dword [rbp - 0xc], 8	       133	elfcomm.c	FUNCTION_5	SWITCH_1
0x400044c	     0xf87ce020000	                            ja 0x4000720	       133	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000452	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       133	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000455	    0x488b04c50000	                  mov rax, qword [rax*8]	       133	elfcomm.c	FUNCTION_5	SWITCH_1
0x400045d	            0xffe0	                                 jmp rax	       133	elfcomm.c	FUNCTION_5	SWITCH_1
0x400045f	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000463	           0xfb600	                   movzx eax, byte [rax]	       136	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000466	           0xfb6c0	                           movzx eax, al	       136	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000469	      0xe9d6020000	                           jmp 0x4000744	       136	elfcomm.c	FUNCTION_5	SWITCH_1
0x400046e	        0x488b45f8	                mov rax, qword [rbp - 8]	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000472	           0xfb600	                   movzx eax, byte [rax]	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000475	           0xfb6c0	                           movzx eax, al	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000478	        0x488b55f8	                mov rdx, qword [rbp - 8]	       140	elfcomm.c	FUNCTION_5	SWITCH_1
0x400047c	        0x4883c201	                              add rdx, 1	       140	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000480	           0xfb612	                   movzx edx, byte [rdx]	       140	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000483	           0xfb6d2	                           movzx edx, dl	       140	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000486	          0xc1e208	                              shl edx, 8	       140	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000489	             0x9d0	                             or eax, edx	       140	elfcomm.c	FUNCTION_5	SWITCH_1
0x400048b	            0x89c0	                            mov eax, eax	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x400048d	      0xe9b2020000	                           jmp 0x4000744	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000492	        0x488b45f8	                mov rax, qword [rbp - 8]	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000496	           0xfb600	                   movzx eax, byte [rax]	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000499	           0xfb6c0	                           movzx eax, al	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x400049c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       144	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004a0	        0x4883c201	                              add rdx, 1	       144	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004a4	           0xfb612	                   movzx edx, byte [rdx]	       144	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004a7	           0xfb6d2	                           movzx edx, dl	       144	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004aa	        0x48c1e208	                              shl rdx, 8	       144	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004ae	          0x4809c2	                             or rdx, rax	       144	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       145	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004b5	        0x4883c002	                              add rax, 2	       145	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004b9	           0xfb600	                   movzx eax, byte [rax]	       145	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004bc	           0xfb6c0	                           movzx eax, al	       145	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004bf	        0x48c1e010	                           shl rax, 0x10	       145	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004c3	          0x4809d0	                             or rax, rdx	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004c6	      0xe979020000	                           jmp 0x4000744	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004cf	           0xfb600	                   movzx eax, byte [rax]	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004d2	           0xfb6c0	                           movzx eax, al	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004d5	        0x488b55f8	                mov rdx, qword [rbp - 8]	       149	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004d9	        0x4883c201	                              add rdx, 1	       149	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004dd	           0xfb612	                   movzx edx, byte [rdx]	       149	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004e0	           0xfb6d2	                           movzx edx, dl	       149	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004e3	        0x48c1e208	                              shl rdx, 8	       149	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004e7	          0x4809c2	                             or rdx, rax	       149	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       150	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004ee	        0x4883c002	                              add rax, 2	       150	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004f2	           0xfb600	                   movzx eax, byte [rax]	       150	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004f5	           0xfb6c0	                           movzx eax, al	       150	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004f8	        0x48c1e010	                           shl rax, 0x10	       150	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004fc	          0x4809c2	                             or rdx, rax	       150	elfcomm.c	FUNCTION_5	SWITCH_1
0x40004ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       151	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000503	        0x4883c003	                              add rax, 3	       151	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000507	           0xfb600	                   movzx eax, byte [rax]	       151	elfcomm.c	FUNCTION_5	SWITCH_1
0x400050a	           0xfb6c0	                           movzx eax, al	       151	elfcomm.c	FUNCTION_5	SWITCH_1
0x400050d	        0x48c1e018	                           shl rax, 0x18	       151	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000511	          0x4809d0	                             or rax, rdx	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000514	      0xe92b020000	                           jmp 0x4000744	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000519	        0x488b45f8	                mov rax, qword [rbp - 8]	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400051d	           0xfb600	                   movzx eax, byte [rax]	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000520	           0xfb6c0	                           movzx eax, al	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000523	        0x488b55f8	                mov rdx, qword [rbp - 8]	       156	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000527	        0x4883c201	                              add rdx, 1	       156	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400052b	           0xfb612	                   movzx edx, byte [rdx]	       156	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400052e	           0xfb6d2	                           movzx edx, dl	       156	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000531	        0x48c1e208	                              shl rdx, 8	       156	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000535	          0x4809c2	                             or rdx, rax	       156	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000538	        0x488b45f8	                mov rax, qword [rbp - 8]	       157	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400053c	        0x4883c002	                              add rax, 2	       157	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000540	           0xfb600	                   movzx eax, byte [rax]	       157	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000543	           0xfb6c0	                           movzx eax, al	       157	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000546	        0x48c1e010	                           shl rax, 0x10	       157	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400054a	          0x4809c2	                             or rdx, rax	       157	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400054d	        0x488b45f8	                mov rax, qword [rbp - 8]	       158	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000551	        0x4883c003	                              add rax, 3	       158	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000555	           0xfb600	                   movzx eax, byte [rax]	       158	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000558	           0xfb6c0	                           movzx eax, al	       158	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400055b	        0x48c1e018	                           shl rax, 0x18	       158	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400055f	          0x4809c2	                             or rdx, rax	       158	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000562	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000566	        0x4883c004	                              add rax, 4	       159	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400056a	           0xfb600	                   movzx eax, byte [rax]	       159	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400056d	           0xfb6c0	                           movzx eax, al	       159	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000570	        0x48c1e020	                           shl rax, 0x20	       159	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000574	          0x4809d0	                             or rax, rdx	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000577	      0xe9c8010000	                           jmp 0x4000744	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x400057c	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000580	           0xfb600	                   movzx eax, byte [rax]	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000583	           0xfb6c0	                           movzx eax, al	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000586	        0x488b55f8	                mov rdx, qword [rbp - 8]	       173	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x400058a	        0x4883c201	                              add rdx, 1	       173	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x400058e	           0xfb612	                   movzx edx, byte [rdx]	       173	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000591	           0xfb6d2	                           movzx edx, dl	       173	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000594	        0x48c1e208	                              shl rdx, 8	       173	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000598	          0x4809c2	                             or rdx, rax	       173	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x400059b	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x400059f	        0x4883c002	                              add rax, 2	       174	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005a3	           0xfb600	                   movzx eax, byte [rax]	       174	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005a6	           0xfb6c0	                           movzx eax, al	       174	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005a9	        0x48c1e010	                           shl rax, 0x10	       174	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005ad	          0x4809c2	                             or rdx, rax	       174	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005b4	        0x4883c003	                              add rax, 3	       175	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005b8	           0xfb600	                   movzx eax, byte [rax]	       175	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005bb	           0xfb6c0	                           movzx eax, al	       175	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005be	        0x48c1e018	                           shl rax, 0x18	       175	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005c2	          0x4809c2	                             or rdx, rax	       175	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005c9	        0x4883c004	                              add rax, 4	       176	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005cd	           0xfb600	                   movzx eax, byte [rax]	       176	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005d0	           0xfb6c0	                           movzx eax, al	       176	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005d3	        0x48c1e020	                           shl rax, 0x20	       176	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005d7	          0x4809c2	                             or rdx, rax	       176	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005da	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005de	        0x4883c005	                              add rax, 5	       177	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005e2	           0xfb600	                   movzx eax, byte [rax]	       177	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005e5	           0xfb6c0	                           movzx eax, al	       177	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005e8	        0x48c1e028	                           shl rax, 0x28	       177	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005ec	          0x4809d0	                             or rax, rdx	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005ef	      0xe950010000	                           jmp 0x4000744	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x40005f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x40005f8	           0xfb600	                   movzx eax, byte [rax]	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x40005fb	           0xfb6c0	                           movzx eax, al	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x40005fe	        0x488b55f8	                mov rdx, qword [rbp - 8]	       191	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000602	        0x4883c201	                              add rdx, 1	       191	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000606	           0xfb612	                   movzx edx, byte [rdx]	       191	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000609	           0xfb6d2	                           movzx edx, dl	       191	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400060c	        0x48c1e208	                              shl rdx, 8	       191	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000610	          0x4809c2	                             or rdx, rax	       191	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000613	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000617	        0x4883c002	                              add rax, 2	       192	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400061b	           0xfb600	                   movzx eax, byte [rax]	       192	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400061e	           0xfb6c0	                           movzx eax, al	       192	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000621	        0x48c1e010	                           shl rax, 0x10	       192	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000625	          0x4809c2	                             or rdx, rax	       192	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000628	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400062c	        0x4883c003	                              add rax, 3	       193	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000630	           0xfb600	                   movzx eax, byte [rax]	       193	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000633	           0xfb6c0	                           movzx eax, al	       193	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000636	        0x48c1e018	                           shl rax, 0x18	       193	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400063a	          0x4809c2	                             or rdx, rax	       193	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400063d	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000641	        0x4883c004	                              add rax, 4	       194	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000645	           0xfb600	                   movzx eax, byte [rax]	       194	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000648	           0xfb6c0	                           movzx eax, al	       194	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400064b	        0x48c1e020	                           shl rax, 0x20	       194	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400064f	          0x4809c2	                             or rdx, rax	       194	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000652	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000656	        0x4883c005	                              add rax, 5	       195	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400065a	           0xfb600	                   movzx eax, byte [rax]	       195	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400065d	           0xfb6c0	                           movzx eax, al	       195	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000660	        0x48c1e028	                           shl rax, 0x28	       195	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000664	          0x4809c2	                             or rdx, rax	       195	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000667	        0x488b45f8	                mov rax, qword [rbp - 8]	       196	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400066b	        0x4883c006	                              add rax, 6	       196	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400066f	           0xfb600	                   movzx eax, byte [rax]	       196	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000672	           0xfb6c0	                           movzx eax, al	       196	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000675	        0x48c1e030	                           shl rax, 0x30	       196	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000679	          0x4809d0	                             or rax, rdx	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x400067c	      0xe9c3000000	                           jmp 0x4000744	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000681	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000685	           0xfb600	                   movzx eax, byte [rax]	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000688	           0xfb6c0	                           movzx eax, al	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x400068b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       210	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x400068f	        0x4883c201	                              add rdx, 1	       210	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000693	           0xfb612	                   movzx edx, byte [rdx]	       210	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000696	           0xfb6d2	                           movzx edx, dl	       210	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000699	        0x48c1e208	                              shl rdx, 8	       210	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x400069d	          0x4809c2	                             or rdx, rax	       210	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006a4	        0x4883c002	                              add rax, 2	       211	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006a8	           0xfb600	                   movzx eax, byte [rax]	       211	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006ab	           0xfb6c0	                           movzx eax, al	       211	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006ae	        0x48c1e010	                           shl rax, 0x10	       211	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006b2	          0x4809c2	                             or rdx, rax	       211	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006b9	        0x4883c003	                              add rax, 3	       212	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006bd	           0xfb600	                   movzx eax, byte [rax]	       212	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006c0	           0xfb6c0	                           movzx eax, al	       212	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006c3	        0x48c1e018	                           shl rax, 0x18	       212	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006c7	          0x4809c2	                             or rdx, rax	       212	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       213	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006ce	        0x4883c004	                              add rax, 4	       213	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006d2	           0xfb600	                   movzx eax, byte [rax]	       213	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006d5	           0xfb6c0	                           movzx eax, al	       213	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006d8	        0x48c1e020	                           shl rax, 0x20	       213	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006dc	          0x4809c2	                             or rdx, rax	       213	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006df	        0x488b45f8	                mov rax, qword [rbp - 8]	       214	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006e3	        0x4883c005	                              add rax, 5	       214	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006e7	           0xfb600	                   movzx eax, byte [rax]	       214	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006ea	           0xfb6c0	                           movzx eax, al	       214	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006ed	        0x48c1e028	                           shl rax, 0x28	       214	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006f1	          0x4809c2	                             or rdx, rax	       214	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       215	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006f8	        0x4883c006	                              add rax, 6	       215	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006fc	           0xfb600	                   movzx eax, byte [rax]	       215	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x40006ff	           0xfb6c0	                           movzx eax, al	       215	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000702	        0x48c1e030	                           shl rax, 0x30	       215	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000706	          0x4809c2	                             or rdx, rax	       215	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000709	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x400070d	        0x4883c007	                              add rax, 7	       216	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000711	           0xfb600	                   movzx eax, byte [rax]	       216	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000714	           0xfb6c0	                           movzx eax, al	       216	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000717	        0x48c1e038	                           shl rax, 0x38	       216	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x400071b	          0x4809d0	                             or rax, rdx	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x400071e	            0xeb24	                           jmp 0x4000744	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000720	      0xbf00000000	                              mov edi, 0	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000725	      0xe800000000	                          call 0x400072a	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x400072a	          0x4889c2	                            mov rdx, rax	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x400072d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000730	            0x89c6	                            mov esi, eax	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000732	          0x4889d7	                            mov rdi, rdx	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000735	      0xb800000000	                              mov eax, 0	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x400073a	      0xe800000000	                          call 0x400073f	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x400073f	      0xe800000000	                          call 0x4000744	       229	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000744	              0xc9	                                   leave	       231	elfcomm.c	FUNCTION_5
0x4000745	              0xc3	                                     ret	       231	elfcomm.c	FUNCTION_5
adjust_relative_path	CALL,13:ELSE,1:FOR,0:SWITCH,0:DO,0:IF,5:functions,0:WHILE,0	110
0x4000b75	              0x55	                                push rbp	       398	elfcomm.c	FUNCTION_9
0x4000b76	          0x4889e5	                            mov rbp, rsp	       398	elfcomm.c	FUNCTION_9
0x4000b79	        0x4883ec40	                           sub rsp, 0x40	       398	elfcomm.c	FUNCTION_9
0x4000b7d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       398	elfcomm.c	FUNCTION_9
0x4000b81	        0x488975d0	             mov qword [rbp - 0x30], rsi	       398	elfcomm.c	FUNCTION_9
0x4000b85	        0x488955c8	             mov qword [rbp - 0x38], rdx	       398	elfcomm.c	FUNCTION_9
0x4000b89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       400	elfcomm.c	FUNCTION_9	CALL_1
0x4000b8d	          0x4889c7	                            mov rdi, rax	       400	elfcomm.c	FUNCTION_9	CALL_1
0x4000b90	      0xe800000000	                          call 0x4000b95	       400	elfcomm.c	FUNCTION_9	CALL_1
0x4000b95	        0x488945e8	             mov qword [rbp - 0x18], rax	       400	elfcomm.c	FUNCTION_9	CALL_1
0x4000b99	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000b9d	           0xfb600	                   movzx eax, byte [rax]	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000ba0	            0x3c2f	                            cmp al, 0x2f	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000ba2	            0x740a	                            je 0x4000bae	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000ba4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000ba8	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000bac	            0x757f	                           jne 0x4000c2d	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000bae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       411	elfcomm.c	FUNCTION_9	IF_1
0x4000bb2	        0x4883c001	                              add rax, 1	       411	elfcomm.c	FUNCTION_9	IF_1
0x4000bb6	        0x488945f8	                mov qword [rbp - 8], rax	       411	elfcomm.c	FUNCTION_9	IF_1
0x4000bba	      0x48837df800	                  cmp qword [rbp - 8], 0	       412	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000bbf	            0x750a	                           jne 0x4000bcb	       412	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000bc1	      0xb800000000	                              mov eax, 0	       413	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000bc6	      0xe94a010000	                           jmp 0x4000d15	       413	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000bcb	        0x488b45f8	                mov rax, qword [rbp - 8]	       414	elfcomm.c	FUNCTION_9	IF_1	CALL_3
0x4000bcf	          0x4889c7	                            mov rdi, rax	       414	elfcomm.c	FUNCTION_9	IF_1	CALL_3
0x4000bd2	      0xe800000000	                          call 0x4000bd7	       414	elfcomm.c	FUNCTION_9	IF_1	CALL_3
0x4000bd7	        0x488945e0	             mov qword [rbp - 0x20], rax	       414	elfcomm.c	FUNCTION_9	IF_1	CALL_3
0x4000bdb	      0x48837de000	               cmp qword [rbp - 0x20], 0	       415	elfcomm.c	FUNCTION_9	IF_1	IF_3
0x4000be0	            0x7521	                           jne 0x4000c03	       415	elfcomm.c	FUNCTION_9	IF_1	IF_3
0x4000be2	      0xbf00000000	                              mov edi, 0	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000be7	      0xe800000000	                          call 0x4000bec	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000bec	          0x4889c7	                            mov rdi, rax	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000bef	      0xb800000000	                              mov eax, 0	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000bf4	      0xe800000000	                          call 0x4000bf9	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000bf9	      0xb800000000	                              mov eax, 0	       418	elfcomm.c	FUNCTION_9	IF_1	IF_3
0x4000bfe	      0xe912010000	                           jmp 0x4000d15	       418	elfcomm.c	FUNCTION_9	IF_1	IF_3
0x4000c03	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       420	elfcomm.c	FUNCTION_9	IF_1	CALL_6
0x4000c07	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       420	elfcomm.c	FUNCTION_9	IF_1	CALL_6
0x4000c0b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       420	elfcomm.c	FUNCTION_9	IF_1	CALL_6
0x4000c0f	          0x4889ce	                            mov rsi, rcx	       420	elfcomm.c	FUNCTION_9	IF_1	CALL_6
0x4000c12	          0x4889c7	                            mov rdi, rax	       420	elfcomm.c	FUNCTION_9	IF_1	CALL_6
0x4000c15	      0xe800000000	                          call 0x4000c1a	       420	elfcomm.c	FUNCTION_9	IF_1	CALL_6
0x4000c1a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000c1e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000c22	          0x4801d0	                            add rax, rdx	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000c25	          0xc60000	                       mov byte [rax], 0	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000c28	      0xe9e4000000	                           jmp 0x4000d11	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000c2d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       427	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c35	          0x4829c2	                            sub rdx, rax	       427	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c38	          0x4889d0	                            mov rax, rdx	       427	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c3b	        0x488945f0	             mov qword [rbp - 0x10], rax	       427	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c3f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       429	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c43	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       429	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c47	          0x4801d0	                            add rax, rdx	       429	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c4a	        0x4883c001	                              add rax, 1	       429	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c4e	        0x488945f8	                mov qword [rbp - 8], rax	       429	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c52	        0x488b45f8	                mov rax, qword [rbp - 8]	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c56	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c5a	            0x720a	                            jb 0x4000c66	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c5c	        0x488b45f8	                mov rax, qword [rbp - 8]	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c60	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c64	            0x732b	                           jae 0x4000c91	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c66	      0xbf00000000	                              mov edi, 0	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c6b	      0xe800000000	                          call 0x4000c70	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c70	          0x4889c2	                            mov rdx, rax	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c73	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c77	          0x4889c6	                            mov rsi, rax	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c7a	          0x4889d7	                            mov rdi, rdx	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c7d	      0xb800000000	                              mov eax, 0	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c82	      0xe800000000	                          call 0x4000c87	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c87	      0xb800000000	                              mov eax, 0	       436	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c8c	      0xe984000000	                           jmp 0x4000d15	       436	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c91	        0x488b45f8	                mov rax, qword [rbp - 8]	       439	elfcomm.c	FUNCTION_9	ELSE_1	CALL_9
0x4000c95	          0x4889c7	                            mov rdi, rax	       439	elfcomm.c	FUNCTION_9	ELSE_1	CALL_9
0x4000c98	      0xe800000000	                          call 0x4000c9d	       439	elfcomm.c	FUNCTION_9	ELSE_1	CALL_9
0x4000c9d	        0x488945e0	             mov qword [rbp - 0x20], rax	       439	elfcomm.c	FUNCTION_9	ELSE_1	CALL_9
0x4000ca1	      0x48837de000	               cmp qword [rbp - 0x20], 0	       440	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
0x4000ca6	            0x751e	                           jne 0x4000cc6	       440	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
0x4000ca8	      0xbf00000000	                              mov edi, 0	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cad	      0xe800000000	                          call 0x4000cb2	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cb2	          0x4889c7	                            mov rdi, rax	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cb5	      0xb800000000	                              mov eax, 0	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cba	      0xe800000000	                          call 0x4000cbf	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cbf	      0xb800000000	                              mov eax, 0	       443	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
0x4000cc4	            0xeb4f	                           jmp 0x4000d15	       443	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
0x4000cc6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       445	elfcomm.c	FUNCTION_9	ELSE_1	CALL_12
0x4000cca	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       445	elfcomm.c	FUNCTION_9	ELSE_1	CALL_12
0x4000cce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       445	elfcomm.c	FUNCTION_9	ELSE_1	CALL_12
0x4000cd2	          0x4889ce	                            mov rsi, rcx	       445	elfcomm.c	FUNCTION_9	ELSE_1	CALL_12
0x4000cd5	          0x4889c7	                            mov rdi, rax	       445	elfcomm.c	FUNCTION_9	ELSE_1	CALL_12
0x4000cd8	      0xe800000000	                          call 0x4000cdd	       445	elfcomm.c	FUNCTION_9	ELSE_1	CALL_12
0x4000cdd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       446	elfcomm.c	FUNCTION_9	ELSE_1	CALL_13
0x4000ce1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       446	elfcomm.c	FUNCTION_9	ELSE_1	CALL_13
0x4000ce5	        0x488d0c02	                    lea rcx, [rdx + rax]	       446	elfcomm.c	FUNCTION_9	ELSE_1	CALL_13
0x4000ce9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       446	elfcomm.c	FUNCTION_9	ELSE_1	CALL_13
0x4000ced	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       446	elfcomm.c	FUNCTION_9	ELSE_1	CALL_13
0x4000cf1	          0x4889c6	                            mov rsi, rax	       446	elfcomm.c	FUNCTION_9	ELSE_1	CALL_13
0x4000cf4	          0x4889cf	                            mov rdi, rcx	       446	elfcomm.c	FUNCTION_9	ELSE_1	CALL_13
0x4000cf7	      0xe800000000	                          call 0x4000cfc	       446	elfcomm.c	FUNCTION_9	ELSE_1	CALL_13
0x4000cfc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       447	elfcomm.c	FUNCTION_9	ELSE_1
0x4000d00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       447	elfcomm.c	FUNCTION_9	ELSE_1
0x4000d04	          0x4801c2	                            add rdx, rax	       447	elfcomm.c	FUNCTION_9	ELSE_1
0x4000d07	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       447	elfcomm.c	FUNCTION_9	ELSE_1
0x4000d0b	          0x4801d0	                            add rax, rdx	       447	elfcomm.c	FUNCTION_9	ELSE_1
0x4000d0e	          0xc60000	                       mov byte [rax], 0	       447	elfcomm.c	FUNCTION_9	ELSE_1
0x4000d11	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       449	elfcomm.c	FUNCTION_9
0x4000d15	              0xc9	                                   leave	       450	elfcomm.c	FUNCTION_9
0x4000d16	              0xc3	                                     ret	       450	elfcomm.c	FUNCTION_9
process_archive_index_and_symbols	CALL,39:ELSE,1:FOR,1:SWITCH,0:DO,0:IF,13:functions,0:WHILE,0	333
0x4000d17	              0x55	                                push rbp	       466	elfcomm.c	FUNCTION_10
0x4000d18	          0x4889e5	                            mov rbp, rsp	       466	elfcomm.c	FUNCTION_10
0x4000d1b	            0x4154	                                push r12	       466	elfcomm.c	FUNCTION_10
0x4000d1d	              0x53	                                push rbx	       466	elfcomm.c	FUNCTION_10
0x4000d1e	        0x4883ec50	                           sub rsp, 0x50	       466	elfcomm.c	FUNCTION_10
0x4000d22	        0x48897da8	             mov qword [rbp - 0x58], rdi	       466	elfcomm.c	FUNCTION_10
0x4000d26	          0x8975a4	             mov dword [rbp - 0x5c], esi	       466	elfcomm.c	FUNCTION_10
0x4000d29	          0x8955a0	             mov dword [rbp - 0x60], edx	       466	elfcomm.c	FUNCTION_10
0x4000d2c	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	elfcomm.c	FUNCTION_10
0x4000d35	        0x488945e8	             mov qword [rbp - 0x18], rax	       466	elfcomm.c	FUNCTION_10
0x4000d39	            0x31c0	                            xor eax, eax	       466	elfcomm.c	FUNCTION_10
0x4000d3b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       471	elfcomm.c	FUNCTION_10
0x4000d3f	     0xfb680920000	           movzx eax, byte [rax + 0x92] 	       471	elfcomm.c	FUNCTION_10
0x4000d46	          0x8845bf	               mov byte [rbp - 0x41], al	       471	elfcomm.c	FUNCTION_10
0x4000d49	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       472	elfcomm.c	FUNCTION_10
0x4000d4d	    0xc68092000000	                mov byte [rax + 0x92], 0	       472	elfcomm.c	FUNCTION_10
0x4000d54	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       473	elfcomm.c	FUNCTION_10	CALL_1
0x4000d58	    0x480588000000	                           add rax, 0x88	       473	elfcomm.c	FUNCTION_10	CALL_1
0x4000d5e	      0xba0a000000	                            mov edx, 0xa	       473	elfcomm.c	FUNCTION_10	CALL_1
0x4000d63	      0xbe00000000	                              mov esi, 0	       473	elfcomm.c	FUNCTION_10	CALL_1
0x4000d68	          0x4889c7	                            mov rdi, rax	       473	elfcomm.c	FUNCTION_10	CALL_1
0x4000d6b	      0xe800000000	                          call 0x4000d70	       473	elfcomm.c	FUNCTION_10	CALL_1
0x4000d70	        0x488945c8	             mov qword [rbp - 0x38], rax	       473	elfcomm.c	FUNCTION_10	CALL_1
0x4000d74	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       474	elfcomm.c	FUNCTION_10
0x4000d78	         0xfb655bf	            movzx edx, byte [rbp - 0x41]	       474	elfcomm.c	FUNCTION_10
0x4000d7c	    0x889092000000	               mov byte [rax + 0x92], dl	       474	elfcomm.c	FUNCTION_10
0x4000d82	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       476	elfcomm.c	FUNCTION_10	IF_1
0x4000d86	          0x4885c0	                           test rax, rax	       476	elfcomm.c	FUNCTION_10	IF_1
0x4000d89	            0x7935	                           jns 0x4000dc0	       476	elfcomm.c	FUNCTION_10	IF_1
0x4000d8b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000d8f	          0x488b18	                    mov rbx, qword [rax]	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000d92	      0xbf00000000	                              mov edi, 0	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000d97	      0xe800000000	                          call 0x4000d9c	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000d9c	          0x4889c1	                            mov rcx, rax	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000d9f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000da3	          0x4889c2	                            mov rdx, rax	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000da6	          0x4889de	                            mov rsi, rbx	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000da9	          0x4889cf	                            mov rdi, rcx	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000dac	      0xb800000000	                              mov eax, 0	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000db1	      0xe800000000	                          call 0x4000db6	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000db6	      0xb800000000	                              mov eax, 0	       480	elfcomm.c	FUNCTION_10	IF_1
0x4000dbb	      0xe95e040000	                           jmp 0x400121e	       480	elfcomm.c	FUNCTION_10	IF_1
0x4000dc0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       483	elfcomm.c	FUNCTION_10
0x4000dc4	          0x83e001	                              and eax, 1	       483	elfcomm.c	FUNCTION_10
0x4000dc7	        0x480145c8	            add qword [rbp - 0x38], rax 	       483	elfcomm.c	FUNCTION_10
0x4000dcb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       485	elfcomm.c	FUNCTION_10
0x4000dcf	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       485	elfcomm.c	FUNCTION_10
0x4000dd3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       485	elfcomm.c	FUNCTION_10
0x4000dd7	          0x4801d0	                            add rax, rdx	       485	elfcomm.c	FUNCTION_10
0x4000dda	        0x488d503c	                   lea rdx, [rax + 0x3c]	       485	elfcomm.c	FUNCTION_10
0x4000dde	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       485	elfcomm.c	FUNCTION_10
0x4000de2	        0x48895048	             mov qword [rax + 0x48], rdx	       485	elfcomm.c	FUNCTION_10
0x4000de6	        0x837da000	               cmp dword [rbp - 0x60], 0	       487	elfcomm.c	FUNCTION_10	IF_2
0x4000dea	            0x754f	                           jne 0x4000e3b	       487	elfcomm.c	FUNCTION_10	IF_2
0x4000dec	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000df0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000df4	        0x488b4008	                mov rax, qword [rax + 8]	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000df8	      0xba01000000	                              mov edx, 1	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000dfd	          0x4889ce	                            mov rsi, rcx	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000e00	          0x4889c7	                            mov rdi, rax	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000e03	      0xe800000000	                          call 0x4000e08	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000e08	            0x85c0	                           test eax, eax	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000e0a	     0xf84ad030000	                            je 0x40011bd	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000e10	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000e14	          0x488b18	                    mov rbx, qword [rax]	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000e17	      0xbf00000000	                              mov edi, 0	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000e1c	      0xe800000000	                          call 0x4000e21	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000e21	          0x4889de	                            mov rsi, rbx	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000e24	          0x4889c7	                            mov rdi, rax	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000e27	      0xb800000000	                              mov eax, 0	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000e2c	      0xe800000000	                          call 0x4000e31	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000e31	      0xb800000000	                              mov eax, 0	       493	elfcomm.c	FUNCTION_10	IF_2	IF_3
0x4000e36	      0xe9e3030000	                           jmp 0x400121e	       493	elfcomm.c	FUNCTION_10	IF_2	IF_3
0x4000e3b	        0x837da408	               cmp dword [rbp - 0x5c], 8	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000e3f	            0x7619	                           jbe 0x4000e5a	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000e41	      0xb900000000	                              mov ecx, 0	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000e46	      0xbaf9010000	                          mov edx, 0x1f9	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000e4b	      0xbe00000000	                              mov esi, 0	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000e50	      0xbf00000000	                              mov edi, 0	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000e55	      0xe800000000	                          call 0x4000e5a	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000e5a	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       508	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x4000e5d	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       508	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x4000e61	            0x762b	                           jbe 0x4000e8e	       508	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x4000e63	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000e67	          0x488b18	                    mov rbx, qword [rax]	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000e6a	      0xbf00000000	                              mov edi, 0	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000e6f	      0xe800000000	                          call 0x4000e74	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000e74	          0x4889de	                            mov rsi, rbx	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000e77	          0x4889c7	                            mov rdi, rax	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000e7a	      0xb800000000	                              mov eax, 0	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000e7f	      0xe800000000	                          call 0x4000e84	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000e84	      0xb800000000	                              mov eax, 0	       511	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x4000e89	      0xe990030000	                           jmp 0x400121e	       511	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x4000e8e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       515	elfcomm.c	FUNCTION_10	ELSE_1	CALL_10
0x4000e92	        0x488b4808	                mov rcx, qword [rax + 8]	       515	elfcomm.c	FUNCTION_10	ELSE_1	CALL_10
0x4000e96	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       515	elfcomm.c	FUNCTION_10	ELSE_1	CALL_10
0x4000e99	        0x488d45e0	                   lea rax, [rbp - 0x20]	       515	elfcomm.c	FUNCTION_10	ELSE_1	CALL_10
0x4000e9d	      0xbe01000000	                              mov esi, 1	       515	elfcomm.c	FUNCTION_10	ELSE_1	CALL_10
0x4000ea2	          0x4889c7	                            mov rdi, rax	       515	elfcomm.c	FUNCTION_10	ELSE_1	CALL_10
0x4000ea5	      0xe800000000	                          call 0x4000eaa	       515	elfcomm.c	FUNCTION_10	ELSE_1	CALL_10
0x4000eaa	        0x488945d0	             mov qword [rbp - 0x30], rax	       515	elfcomm.c	FUNCTION_10	ELSE_1	CALL_10
0x4000eae	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       516	elfcomm.c	FUNCTION_10	ELSE_1	IF_5
0x4000eb1	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       516	elfcomm.c	FUNCTION_10	ELSE_1	IF_5
0x4000eb5	            0x742b	                            je 0x4000ee2	       516	elfcomm.c	FUNCTION_10	ELSE_1	IF_5
0x4000eb7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000ebb	          0x488b18	                    mov rbx, qword [rax]	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000ebe	      0xbf00000000	                              mov edi, 0	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000ec3	      0xe800000000	                          call 0x4000ec8	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000ec8	          0x4889de	                            mov rsi, rbx	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000ecb	          0x4889c7	                            mov rdi, rax	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000ece	      0xb800000000	                              mov eax, 0	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000ed3	      0xe800000000	                          call 0x4000ed8	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000ed8	      0xb800000000	                              mov eax, 0	       519	elfcomm.c	FUNCTION_10	ELSE_1	IF_5
0x4000edd	      0xe93c030000	                           jmp 0x400121e	       519	elfcomm.c	FUNCTION_10	ELSE_1	IF_5
0x4000ee2	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x4000ee5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x4000ee9	            0x89d6	                            mov esi, edx	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x4000eeb	          0x4889c7	                            mov rdi, rax	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x4000eee	      0xe800000000	                          call 0x4000ef3	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x4000ef3	          0x4889c2	                            mov rdx, rax	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x4000ef6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x4000efa	        0x48895010	             mov qword [rax + 0x10], rdx	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x4000efe	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       523	elfcomm.c	FUNCTION_10	ELSE_1
0x4000f01	        0x482945c8	             sub qword [rbp - 0x38], rax	       523	elfcomm.c	FUNCTION_10	ELSE_1
0x4000f05	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       525	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f09	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       525	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f0d	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       525	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f10	        0x480fafc2	                           imul rax, rdx	       525	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f14	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       525	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f18	            0x770e	                            ja 0x4000f28	       525	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f1a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f1e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f22	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f26	            0x7645	                           jbe 0x4000f6d	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f28	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       530	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f2c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       530	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f30	          0x4989c4	                            mov r12, rax	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f33	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f37	          0x488b18	                    mov rbx, qword [rax]	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f3a	      0xbf00000000	                              mov edi, 0	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f3f	      0xe800000000	                          call 0x4000f44	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f44	          0x4889c7	                            mov rdi, rax	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f47	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f4b	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f4e	          0x4989d0	                             mov r8, rdx	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f51	            0x89c1	                            mov ecx, eax	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f53	          0x4c89e2	                            mov rdx, r12	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f56	          0x4889de	                            mov rsi, rbx	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f59	      0xb800000000	                              mov eax, 0	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f5e	      0xe800000000	                          call 0x4000f63	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000f63	      0xb800000000	                              mov eax, 0	       531	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f68	      0xe9b1020000	                           jmp 0x400121e	       531	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000f6d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       536	elfcomm.c	FUNCTION_10	ELSE_1	CALL_16
0x4000f71	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       536	elfcomm.c	FUNCTION_10	ELSE_1	CALL_16
0x4000f75	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       536	elfcomm.c	FUNCTION_10	ELSE_1	CALL_16
0x4000f78	        0x480fafc2	                           imul rax, rdx	       536	elfcomm.c	FUNCTION_10	ELSE_1	CALL_16
0x4000f7c	          0x4889c7	                            mov rdi, rax	       535	elfcomm.c	FUNCTION_10	ELSE_1
0x4000f7f	      0xe800000000	                          call 0x4000f84	       535	elfcomm.c	FUNCTION_10	ELSE_1
0x4000f84	        0x488945d8	             mov qword [rbp - 0x28], rax	       535	elfcomm.c	FUNCTION_10	ELSE_1
0x4000f88	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       537	elfcomm.c	FUNCTION_10	ELSE_1	IF_7
0x4000f8d	            0x7521	                           jne 0x4000fb0	       537	elfcomm.c	FUNCTION_10	ELSE_1	IF_7
0x4000f8f	      0xbf00000000	                              mov edi, 0	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x4000f94	      0xe800000000	                          call 0x4000f99	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x4000f99	          0x4889c7	                            mov rdi, rax	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x4000f9c	      0xb800000000	                              mov eax, 0	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x4000fa1	      0xe800000000	                          call 0x4000fa6	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x4000fa6	      0xb800000000	                              mov eax, 0	       540	elfcomm.c	FUNCTION_10	ELSE_1	IF_7
0x4000fab	      0xe96e020000	                           jmp 0x400121e	       540	elfcomm.c	FUNCTION_10	ELSE_1	IF_7
0x4000fb0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       543	elfcomm.c	FUNCTION_10	ELSE_1	CALL_19
0x4000fb4	        0x488b4808	                mov rcx, qword [rax + 8]	       543	elfcomm.c	FUNCTION_10	ELSE_1	CALL_19
0x4000fb8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       543	elfcomm.c	FUNCTION_10	ELSE_1	CALL_19
0x4000fbc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       543	elfcomm.c	FUNCTION_10	ELSE_1	CALL_19
0x4000fc0	          0x8b75a4	             mov esi, dword [rbp - 0x5c]	       543	elfcomm.c	FUNCTION_10	ELSE_1	CALL_19
0x4000fc3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       543	elfcomm.c	FUNCTION_10	ELSE_1	CALL_19
0x4000fc7	          0x4889c7	                            mov rdi, rax	       543	elfcomm.c	FUNCTION_10	ELSE_1	CALL_19
0x4000fca	      0xe800000000	                          call 0x4000fcf	       543	elfcomm.c	FUNCTION_10	ELSE_1	CALL_19
0x4000fcf	        0x488945d0	             mov qword [rbp - 0x30], rax	       543	elfcomm.c	FUNCTION_10	ELSE_1	CALL_19
0x4000fd3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       544	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x4000fd7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       544	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x4000fdb	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       544	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x4000fdf	            0x7437	                            je 0x4001018	       544	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x4000fe1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       546	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_20
0x4000fe5	          0x4889c7	                            mov rdi, rax	       546	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_20
0x4000fe8	      0xe800000000	                          call 0x4000fed	       546	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_20
0x4000fed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000ff1	          0x488b18	                    mov rbx, qword [rax]	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000ff4	      0xbf00000000	                              mov edi, 0	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000ff9	      0xe800000000	                          call 0x4000ffe	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000ffe	          0x4889de	                            mov rsi, rbx	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4001001	          0x4889c7	                            mov rdi, rax	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4001004	      0xb800000000	                              mov eax, 0	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4001009	      0xe800000000	                          call 0x400100e	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x400100e	      0xb800000000	                              mov eax, 0	       548	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x4001013	      0xe906020000	                           jmp 0x400121e	       548	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x4001018	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x400101c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x4001020	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x4001023	        0x480fafc2	                           imul rax, rdx	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x4001027	        0x482945c8	             sub qword [rbp - 0x38], rax	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x400102b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       555	elfcomm.c	FUNCTION_10	ELSE_1	CALL_23
0x400102f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       555	elfcomm.c	FUNCTION_10	ELSE_1	CALL_23
0x4001033	        0x48c1e003	                              shl rax, 3	       555	elfcomm.c	FUNCTION_10	ELSE_1	CALL_23
0x4001037	          0x4889c7	                            mov rdi, rax	       555	elfcomm.c	FUNCTION_10	ELSE_1	CALL_23
0x400103a	      0xe800000000	                          call 0x400103f	       555	elfcomm.c	FUNCTION_10	ELSE_1	CALL_23
0x400103f	          0x4889c2	                            mov rdx, rax	       555	elfcomm.c	FUNCTION_10	ELSE_1	CALL_23
0x4001042	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       554	elfcomm.c	FUNCTION_10	ELSE_1
0x4001046	        0x48895018	             mov qword [rax + 0x18], rdx	       554	elfcomm.c	FUNCTION_10	ELSE_1
0x400104a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       556	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x400104e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       556	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x4001052	          0x4885c0	                           test rax, rax	       556	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x4001055	            0x752d	                           jne 0x4001084	       556	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x4001057	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       558	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_24
0x400105b	          0x4889c7	                            mov rdi, rax	       558	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_24
0x400105e	      0xe800000000	                          call 0x4001063	       558	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_24
0x4001063	      0xbf00000000	                              mov edi, 0	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x4001068	      0xe800000000	                          call 0x400106d	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x400106d	          0x4889c7	                            mov rdi, rax	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x4001070	      0xb800000000	                              mov eax, 0	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x4001075	      0xe800000000	                          call 0x400107a	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x400107a	      0xb800000000	                              mov eax, 0	       560	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x400107f	      0xe99a010000	                           jmp 0x400121e	       560	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x4001084	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x400108c	            0xeb3b	                           jmp 0x40010c9	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x400108e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4001092	        0x488b4018	            mov rax, qword [rax + 0x18] 	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4001096	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x400109a	        0x48c1e203	                              shl rdx, 3	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x400109e	        0x488d1c10	                    lea rbx, [rax + rdx]	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40010a2	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40010a5	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40010a8	          0x4889d1	                            mov rcx, rdx	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40010ab	      0x480faf4dc0	            imul rcx, qword [rbp - 0x40]	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40010b0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40010b4	          0x4801ca	                            add rdx, rcx	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40010b7	            0x89c6	                            mov esi, eax	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40010b9	          0x4889d7	                            mov rdi, rdx	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40010bc	      0xe800000000	                          call 0x40010c1	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40010c1	          0x488903	                    mov qword [rbx], rax	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40010c4	      0x488345c001	               add qword [rbp - 0x40], 1	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40010c9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40010cd	        0x488b4010	            mov rax, qword [rax + 0x10] 	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40010d1	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40010d5	            0x77b7	                            ja 0x400108e	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40010d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       567	elfcomm.c	FUNCTION_10	ELSE_1	CALL_28
0x40010db	          0x4889c7	                            mov rdi, rax	       567	elfcomm.c	FUNCTION_10	ELSE_1	CALL_28
0x40010de	      0xe800000000	                          call 0x40010e3	       567	elfcomm.c	FUNCTION_10	ELSE_1	CALL_28
0x40010e3	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       570	elfcomm.c	FUNCTION_10	ELSE_1	IF_10
0x40010e8	            0x752b	                           jne 0x4001115	       570	elfcomm.c	FUNCTION_10	ELSE_1	IF_10
0x40010ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x40010ee	          0x488b18	                    mov rbx, qword [rax]	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x40010f1	      0xbf00000000	                              mov edi, 0	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x40010f6	      0xe800000000	                          call 0x40010fb	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x40010fb	          0x4889de	                            mov rsi, rbx	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x40010fe	          0x4889c7	                            mov rdi, rax	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x4001101	      0xb800000000	                              mov eax, 0	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x4001106	      0xe800000000	                          call 0x400110b	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x400110b	      0xb800000000	                              mov eax, 0	       574	elfcomm.c	FUNCTION_10	ELSE_1	IF_10
0x4001110	      0xe909010000	                           jmp 0x400121e	       574	elfcomm.c	FUNCTION_10	ELSE_1	IF_10
0x4001115	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x4001119	          0x4889c7	                            mov rdi, rax	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x400111c	      0xe800000000	                          call 0x4001121	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x4001121	          0x4889c2	                            mov rdx, rax	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x4001124	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x4001128	        0x48895020	             mov qword [rax + 0x20], rdx	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x400112c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       578	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x4001130	        0x488b4020	            mov rax, qword [rax + 0x20] 	       578	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x4001134	          0x4885c0	                           test rax, rax	       578	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x4001137	            0x7521	                           jne 0x400115a	       578	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x4001139	      0xbf00000000	                              mov edi, 0	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x400113e	      0xe800000000	                          call 0x4001143	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x4001143	          0x4889c7	                            mov rdi, rax	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x4001146	      0xb800000000	                              mov eax, 0	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x400114b	      0xe800000000	                          call 0x4001150	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x4001150	      0xb800000000	                              mov eax, 0	       581	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x4001155	      0xe9c4000000	                           jmp 0x400121e	       581	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x400115a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       584	elfcomm.c	FUNCTION_10	ELSE_1
0x400115e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       584	elfcomm.c	FUNCTION_10	ELSE_1
0x4001162	        0x48895028	             mov qword [rax + 0x28], rdx	       584	elfcomm.c	FUNCTION_10	ELSE_1
0x4001166	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       585	elfcomm.c	FUNCTION_10	ELSE_1	CALL_34
0x400116a	        0x488b4808	                mov rcx, qword [rax + 8]	       585	elfcomm.c	FUNCTION_10	ELSE_1	CALL_34
0x400116e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       585	elfcomm.c	FUNCTION_10	ELSE_1	CALL_34
0x4001172	        0x488b4020	            mov rax, qword [rax + 0x20] 	       585	elfcomm.c	FUNCTION_10	ELSE_1	CALL_34
0x4001176	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       585	elfcomm.c	FUNCTION_10	ELSE_1	CALL_34
0x400117a	      0xbe01000000	                              mov esi, 1	       585	elfcomm.c	FUNCTION_10	ELSE_1	CALL_34
0x400117f	          0x4889c7	                            mov rdi, rax	       585	elfcomm.c	FUNCTION_10	ELSE_1	CALL_34
0x4001182	      0xe800000000	                          call 0x4001187	       585	elfcomm.c	FUNCTION_10	ELSE_1	CALL_34
0x4001187	        0x488945d0	             mov qword [rbp - 0x30], rax	       585	elfcomm.c	FUNCTION_10	ELSE_1	CALL_34
0x400118b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       586	elfcomm.c	FUNCTION_10	ELSE_1	IF_12
0x400118f	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       586	elfcomm.c	FUNCTION_10	ELSE_1	IF_12
0x4001193	            0x7428	                            je 0x40011bd	       586	elfcomm.c	FUNCTION_10	ELSE_1	IF_12
0x4001195	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x4001199	          0x488b18	                    mov rbx, qword [rax]	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x400119c	      0xbf00000000	                              mov edi, 0	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40011a1	      0xe800000000	                          call 0x40011a6	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40011a6	          0x4889de	                            mov rsi, rbx	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40011a9	          0x4889c7	                            mov rdi, rax	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40011ac	      0xb800000000	                              mov eax, 0	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40011b1	      0xe800000000	                          call 0x40011b6	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40011b6	      0xb800000000	                              mov eax, 0	       590	elfcomm.c	FUNCTION_10	ELSE_1	IF_12
0x40011bb	            0xeb61	                           jmp 0x400121e	       590	elfcomm.c	FUNCTION_10	ELSE_1	IF_12
0x40011bd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       595	elfcomm.c	FUNCTION_10	CALL_37
0x40011c1	        0x488b4008	                mov rax, qword [rax + 8]	       595	elfcomm.c	FUNCTION_10	CALL_37
0x40011c5	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       595	elfcomm.c	FUNCTION_10	CALL_37
0x40011c9	        0x488d7a58	                   lea rdi, [rdx + 0x58]	       595	elfcomm.c	FUNCTION_10	CALL_37
0x40011cd	          0x4889c1	                            mov rcx, rax	       595	elfcomm.c	FUNCTION_10	CALL_37
0x40011d0	      0xba3c000000	                           mov edx, 0x3c	       595	elfcomm.c	FUNCTION_10	CALL_37
0x40011d5	      0xbe01000000	                              mov esi, 1	       595	elfcomm.c	FUNCTION_10	CALL_37
0x40011da	      0xe800000000	                          call 0x40011df	       595	elfcomm.c	FUNCTION_10	CALL_37
0x40011df	        0x488945d0	             mov qword [rbp - 0x30], rax	       595	elfcomm.c	FUNCTION_10	CALL_37
0x40011e3	      0x48837dd03c	           cmp qword [rbp - 0x30], 0x3c 	       596	elfcomm.c	FUNCTION_10	IF_13
0x40011e8	            0x742f	                            je 0x4001219	       596	elfcomm.c	FUNCTION_10	IF_13
0x40011ea	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       596	elfcomm.c	FUNCTION_10	IF_13
0x40011ef	            0x7428	                            je 0x4001219	       596	elfcomm.c	FUNCTION_10	IF_13
0x40011f1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x40011f5	          0x488b18	                    mov rbx, qword [rax]	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x40011f8	      0xbf00000000	                              mov edi, 0	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x40011fd	      0xe800000000	                          call 0x4001202	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x4001202	          0x4889de	                            mov rsi, rbx	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x4001205	          0x4889c7	                            mov rdi, rax	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x4001208	      0xb800000000	                              mov eax, 0	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x400120d	      0xe800000000	                          call 0x4001212	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x4001212	      0xb800000000	                              mov eax, 0	       600	elfcomm.c	FUNCTION_10	IF_13
0x4001217	            0xeb05	                           jmp 0x400121e	       600	elfcomm.c	FUNCTION_10	IF_13
0x4001219	      0xb801000000	                              mov eax, 1	       603	elfcomm.c	FUNCTION_10
0x400121e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       604	elfcomm.c	FUNCTION_10
0x4001222	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       604	elfcomm.c	FUNCTION_10
0x400122b	            0x7405	                            je 0x4001232	       604	elfcomm.c	FUNCTION_10
0x400122d	      0xe800000000	                          call 0x4001232	       604	elfcomm.c	FUNCTION_10
0x4001232	        0x4883c450	                           add rsp, 0x50	       604	elfcomm.c	FUNCTION_10
0x4001236	              0x5b	                                 pop rbx	       604	elfcomm.c	FUNCTION_10
0x4001237	            0x415c	                                 pop r12	       604	elfcomm.c	FUNCTION_10
0x4001239	              0x5d	                                 pop rbp	       604	elfcomm.c	FUNCTION_10
0x400123a	              0xc3	                                     ret	       604	elfcomm.c	FUNCTION_10
byte_get_big_endian	CALL,3:ELSE,4:FOR,0:SWITCH,1:DO,0:IF,8:functions,0:WHILE,0	222
0x4000746	              0x55	                                push rbp	       235	elfcomm.c	FUNCTION_6
0x4000747	          0x4889e5	                            mov rbp, rsp	       235	elfcomm.c	FUNCTION_6
0x400074a	        0x4883ec10	                           sub rsp, 0x10	       235	elfcomm.c	FUNCTION_6
0x400074e	        0x48897df8	                mov qword [rbp - 8], rdi	       235	elfcomm.c	FUNCTION_6
0x4000752	          0x8975f4	              mov dword [rbp - 0xc], esi	       235	elfcomm.c	FUNCTION_6
0x4000755	        0x837df408	                cmp dword [rbp - 0xc], 8	       236	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000759	     0xf87ce020000	                            ja 0x4000a2d	       236	elfcomm.c	FUNCTION_6	SWITCH_1
0x400075f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       236	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000762	    0x488b04c50000	                  mov rax, qword [rax*8]	       236	elfcomm.c	FUNCTION_6	SWITCH_1
0x400076a	            0xffe0	                                 jmp rax	       236	elfcomm.c	FUNCTION_6	SWITCH_1
0x400076c	        0x488b45f8	                mov rax, qword [rbp - 8]	       239	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000770	           0xfb600	                   movzx eax, byte [rax]	       239	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000773	           0xfb6c0	                           movzx eax, al	       239	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000776	      0xe9d6020000	                           jmp 0x4000a51	       239	elfcomm.c	FUNCTION_6	SWITCH_1
0x400077b	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x400077f	        0x4883c001	                              add rax, 1	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000783	           0xfb600	                   movzx eax, byte [rax]	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000786	           0xfb6d0	                           movzx edx, al	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000789	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x400078d	           0xfb600	                   movzx eax, byte [rax]	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000790	           0xfb6c0	                           movzx eax, al	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000793	          0xc1e008	                              shl eax, 8	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000796	             0x9d0	                             or eax, edx	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000798	            0x89c0	                            mov eax, eax	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x400079a	      0xe9b2020000	                           jmp 0x4000a51	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x400079f	        0x488b45f8	                mov rax, qword [rbp - 8]	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007a3	        0x4883c002	                              add rax, 2	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007a7	           0xfb600	                   movzx eax, byte [rax]	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007aa	           0xfb6c0	                           movzx eax, al	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007ad	        0x488b55f8	                mov rdx, qword [rbp - 8]	       246	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007b1	        0x4883c201	                              add rdx, 1	       246	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007b5	           0xfb612	                   movzx edx, byte [rdx]	       246	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007b8	           0xfb6d2	                           movzx edx, dl	       246	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007bb	        0x48c1e208	                              shl rdx, 8	       246	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007bf	          0x4809c2	                             or rdx, rax	       246	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       247	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007c6	           0xfb600	                   movzx eax, byte [rax]	       247	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007c9	           0xfb6c0	                           movzx eax, al	       247	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007cc	        0x48c1e010	                           shl rax, 0x10	       247	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007d0	          0x4809d0	                             or rax, rdx	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007d3	      0xe979020000	                           jmp 0x4000a51	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007dc	        0x4883c003	                              add rax, 3	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007e0	           0xfb600	                   movzx eax, byte [rax]	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007e3	           0xfb6c0	                           movzx eax, al	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007e6	        0x488b55f8	                mov rdx, qword [rbp - 8]	       251	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007ea	        0x4883c202	                              add rdx, 2	       251	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007ee	           0xfb612	                   movzx edx, byte [rdx]	       251	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007f1	           0xfb6d2	                           movzx edx, dl	       251	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007f4	        0x48c1e208	                              shl rdx, 8	       251	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007f8	          0x4809c2	                             or rdx, rax	       251	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	elfcomm.c	FUNCTION_6	SWITCH_1
0x40007ff	        0x4883c001	                              add rax, 1	       252	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000803	           0xfb600	                   movzx eax, byte [rax]	       252	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000806	           0xfb6c0	                           movzx eax, al	       252	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000809	        0x48c1e010	                           shl rax, 0x10	       252	elfcomm.c	FUNCTION_6	SWITCH_1
0x400080d	          0x4809c2	                             or rdx, rax	       252	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000810	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000814	           0xfb600	                   movzx eax, byte [rax]	       253	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000817	           0xfb6c0	                           movzx eax, al	       253	elfcomm.c	FUNCTION_6	SWITCH_1
0x400081a	        0x48c1e018	                           shl rax, 0x18	       253	elfcomm.c	FUNCTION_6	SWITCH_1
0x400081e	          0x4809d0	                             or rax, rdx	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000821	      0xe92b020000	                           jmp 0x4000a51	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000826	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x400082a	        0x4883c004	                              add rax, 4	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x400082e	           0xfb600	                   movzx eax, byte [rax]	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000831	           0xfb6c0	                           movzx eax, al	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000834	        0x488b55f8	                mov rdx, qword [rbp - 8]	       258	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000838	        0x4883c203	                              add rdx, 3	       258	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x400083c	           0xfb612	                   movzx edx, byte [rdx]	       258	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x400083f	           0xfb6d2	                           movzx edx, dl	       258	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000842	        0x48c1e208	                              shl rdx, 8	       258	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000846	          0x4809c2	                             or rdx, rax	       258	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000849	        0x488b45f8	                mov rax, qword [rbp - 8]	       259	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x400084d	        0x4883c002	                              add rax, 2	       259	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000851	           0xfb600	                   movzx eax, byte [rax]	       259	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000854	           0xfb6c0	                           movzx eax, al	       259	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000857	        0x48c1e010	                           shl rax, 0x10	       259	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x400085b	          0x4809c2	                             or rdx, rax	       259	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x400085e	        0x488b45f8	                mov rax, qword [rbp - 8]	       260	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000862	        0x4883c001	                              add rax, 1	       260	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000866	           0xfb600	                   movzx eax, byte [rax]	       260	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000869	           0xfb6c0	                           movzx eax, al	       260	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x400086c	        0x48c1e018	                           shl rax, 0x18	       260	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000870	          0x4809c2	                             or rdx, rax	       260	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000873	        0x488b45f8	                mov rax, qword [rbp - 8]	       261	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000877	           0xfb600	                   movzx eax, byte [rax]	       261	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x400087a	           0xfb6c0	                           movzx eax, al	       261	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x400087d	        0x48c1e020	                           shl rax, 0x20	       261	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000881	          0x4809d0	                             or rax, rdx	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000884	      0xe9c8010000	                           jmp 0x4000a51	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000889	        0x488b45f8	                mov rax, qword [rbp - 8]	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x400088d	        0x4883c005	                              add rax, 5	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000891	           0xfb600	                   movzx eax, byte [rax]	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000894	           0xfb6c0	                           movzx eax, al	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000897	        0x488b55f8	                mov rdx, qword [rbp - 8]	       277	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x400089b	        0x4883c204	                              add rdx, 4	       277	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x400089f	           0xfb612	                   movzx edx, byte [rdx]	       277	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008a2	           0xfb6d2	                           movzx edx, dl	       277	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008a5	        0x48c1e208	                              shl rdx, 8	       277	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008a9	          0x4809c2	                             or rdx, rax	       277	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008b0	        0x4883c003	                              add rax, 3	       278	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008b4	           0xfb600	                   movzx eax, byte [rax]	       278	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008b7	           0xfb6c0	                           movzx eax, al	       278	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008ba	        0x48c1e010	                           shl rax, 0x10	       278	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008be	          0x4809c2	                             or rdx, rax	       278	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008c5	        0x4883c002	                              add rax, 2	       279	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008c9	           0xfb600	                   movzx eax, byte [rax]	       279	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008cc	           0xfb6c0	                           movzx eax, al	       279	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008cf	        0x48c1e018	                           shl rax, 0x18	       279	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008d3	          0x4809c2	                             or rdx, rax	       279	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       280	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008da	        0x4883c001	                              add rax, 1	       280	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008de	           0xfb600	                   movzx eax, byte [rax]	       280	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008e1	           0xfb6c0	                           movzx eax, al	       280	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008e4	        0x48c1e020	                           shl rax, 0x20	       280	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008e8	          0x4809c2	                             or rdx, rax	       280	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       281	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008ef	           0xfb600	                   movzx eax, byte [rax]	       281	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008f2	           0xfb6c0	                           movzx eax, al	       281	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008f5	        0x48c1e028	                           shl rax, 0x28	       281	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008f9	          0x4809d0	                             or rax, rdx	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x40008fc	      0xe950010000	                           jmp 0x4000a51	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000901	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000905	        0x4883c006	                              add rax, 6	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000909	           0xfb600	                   movzx eax, byte [rax]	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400090c	           0xfb6c0	                           movzx eax, al	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400090f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       297	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000913	        0x4883c205	                              add rdx, 5	       297	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000917	           0xfb612	                   movzx edx, byte [rdx]	       297	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400091a	           0xfb6d2	                           movzx edx, dl	       297	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400091d	        0x48c1e208	                              shl rdx, 8	       297	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000921	          0x4809c2	                             or rdx, rax	       297	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000924	        0x488b45f8	                mov rax, qword [rbp - 8]	       298	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000928	        0x4883c004	                              add rax, 4	       298	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400092c	           0xfb600	                   movzx eax, byte [rax]	       298	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400092f	           0xfb6c0	                           movzx eax, al	       298	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000932	        0x48c1e010	                           shl rax, 0x10	       298	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000936	          0x4809c2	                             or rdx, rax	       298	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000939	        0x488b45f8	                mov rax, qword [rbp - 8]	       299	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400093d	        0x4883c003	                              add rax, 3	       299	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000941	           0xfb600	                   movzx eax, byte [rax]	       299	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000944	           0xfb6c0	                           movzx eax, al	       299	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000947	        0x48c1e018	                           shl rax, 0x18	       299	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400094b	          0x4809c2	                             or rdx, rax	       299	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400094e	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000952	        0x4883c002	                              add rax, 2	       300	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000956	           0xfb600	                   movzx eax, byte [rax]	       300	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000959	           0xfb6c0	                           movzx eax, al	       300	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400095c	        0x48c1e020	                           shl rax, 0x20	       300	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000960	          0x4809c2	                             or rdx, rax	       300	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000963	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000967	        0x4883c001	                              add rax, 1	       301	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400096b	           0xfb600	                   movzx eax, byte [rax]	       301	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400096e	           0xfb6c0	                           movzx eax, al	       301	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000971	        0x48c1e028	                           shl rax, 0x28	       301	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000975	          0x4809c2	                             or rdx, rax	       301	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000978	        0x488b45f8	                mov rax, qword [rbp - 8]	       302	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400097c	           0xfb600	                   movzx eax, byte [rax]	       302	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400097f	           0xfb6c0	                           movzx eax, al	       302	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000982	        0x48c1e030	                           shl rax, 0x30	       302	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000986	          0x4809d0	                             or rax, rdx	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000989	      0xe9c3000000	                           jmp 0x4000a51	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400098e	        0x488b45f8	                mov rax, qword [rbp - 8]	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000992	        0x4883c007	                              add rax, 7	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000996	           0xfb600	                   movzx eax, byte [rax]	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000999	           0xfb6c0	                           movzx eax, al	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x400099c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       318	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009a0	        0x4883c206	                              add rdx, 6	       318	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009a4	           0xfb612	                   movzx edx, byte [rdx]	       318	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009a7	           0xfb6d2	                           movzx edx, dl	       318	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009aa	        0x48c1e208	                              shl rdx, 8	       318	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009ae	          0x4809c2	                             or rdx, rax	       318	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       319	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009b5	        0x4883c005	                              add rax, 5	       319	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009b9	           0xfb600	                   movzx eax, byte [rax]	       319	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009bc	           0xfb6c0	                           movzx eax, al	       319	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009bf	        0x48c1e010	                           shl rax, 0x10	       319	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009c3	          0x4809c2	                             or rdx, rax	       319	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       320	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009ca	        0x4883c004	                              add rax, 4	       320	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009ce	           0xfb600	                   movzx eax, byte [rax]	       320	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009d1	           0xfb6c0	                           movzx eax, al	       320	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009d4	        0x48c1e018	                           shl rax, 0x18	       320	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009d8	          0x4809c2	                             or rdx, rax	       320	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009db	        0x488b45f8	                mov rax, qword [rbp - 8]	       321	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009df	        0x4883c003	                              add rax, 3	       321	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009e3	           0xfb600	                   movzx eax, byte [rax]	       321	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009e6	           0xfb6c0	                           movzx eax, al	       321	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009e9	        0x48c1e020	                           shl rax, 0x20	       321	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009ed	          0x4809c2	                             or rdx, rax	       321	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       322	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009f4	        0x4883c002	                              add rax, 2	       322	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009f8	           0xfb600	                   movzx eax, byte [rax]	       322	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009fb	           0xfb6c0	                           movzx eax, al	       322	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40009fe	        0x48c1e028	                           shl rax, 0x28	       322	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a02	          0x4809c2	                             or rdx, rax	       322	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a05	        0x488b45f8	                mov rax, qword [rbp - 8]	       323	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a09	        0x4883c001	                              add rax, 1	       323	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a0d	           0xfb600	                   movzx eax, byte [rax]	       323	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a10	           0xfb6c0	                           movzx eax, al	       323	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a13	        0x48c1e030	                           shl rax, 0x30	       323	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a17	          0x4809c2	                             or rdx, rax	       323	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       324	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a1e	           0xfb600	                   movzx eax, byte [rax]	       324	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a21	           0xfb6c0	                           movzx eax, al	       324	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a24	        0x48c1e038	                           shl rax, 0x38	       324	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a28	          0x4809d0	                             or rax, rdx	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a2b	            0xeb24	                           jmp 0x4000a51	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000a2d	      0xbf00000000	                              mov edi, 0	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000a32	      0xe800000000	                          call 0x4000a37	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000a37	          0x4889c2	                            mov rdx, rax	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000a3a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000a3d	            0x89c6	                            mov esi, eax	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000a3f	          0x4889d7	                            mov rdi, rdx	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000a42	      0xb800000000	                              mov eax, 0	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000a47	      0xe800000000	                          call 0x4000a4c	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000a4c	      0xe800000000	                          call 0x4000a51	       339	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000a51	              0xc9	                                   leave	       341	elfcomm.c	FUNCTION_6
0x4000a52	              0xc3	                                     ret	       341	elfcomm.c	FUNCTION_6
release_archive	CALL,4:ELSE,0:FOR,0:SWITCH,0:DO,0:IF,4:functions,0:WHILE,0	39
0x4001703	              0x55	                                push rbp	       738	elfcomm.c	FUNCTION_13
0x4001704	          0x4889e5	                            mov rbp, rsp	       738	elfcomm.c	FUNCTION_13
0x4001707	        0x4883ec10	                           sub rsp, 0x10	       738	elfcomm.c	FUNCTION_13
0x400170b	        0x48897df8	                mov qword [rbp - 8], rdi	       738	elfcomm.c	FUNCTION_13
0x400170f	        0x488b45f8	                mov rax, qword [rbp - 8]	       739	elfcomm.c	FUNCTION_13	IF_1
0x4001713	          0x488b00	                    mov rax, qword [rax]	       739	elfcomm.c	FUNCTION_13	IF_1
0x4001716	          0x4885c0	                           test rax, rax	       739	elfcomm.c	FUNCTION_13	IF_1
0x4001719	            0x740f	                            je 0x400172a	       739	elfcomm.c	FUNCTION_13	IF_1
0x400171b	        0x488b45f8	                mov rax, qword [rbp - 8]	       740	elfcomm.c	FUNCTION_13	CALL_1
0x400171f	          0x488b00	                    mov rax, qword [rax]	       740	elfcomm.c	FUNCTION_13	CALL_1
0x4001722	          0x4889c7	                            mov rdi, rax	       740	elfcomm.c	FUNCTION_13	CALL_1
0x4001725	      0xe800000000	                          call 0x400172a	       740	elfcomm.c	FUNCTION_13	CALL_1
0x400172a	        0x488b45f8	                mov rax, qword [rbp - 8]	       741	elfcomm.c	FUNCTION_13	IF_2
0x400172e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       741	elfcomm.c	FUNCTION_13	IF_2
0x4001732	          0x4885c0	                           test rax, rax	       741	elfcomm.c	FUNCTION_13	IF_2
0x4001735	            0x7410	                            je 0x4001747	       741	elfcomm.c	FUNCTION_13	IF_2
0x4001737	        0x488b45f8	                mov rax, qword [rbp - 8]	       742	elfcomm.c	FUNCTION_13	CALL_2
0x400173b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       742	elfcomm.c	FUNCTION_13	CALL_2
0x400173f	          0x4889c7	                            mov rdi, rax	       742	elfcomm.c	FUNCTION_13	CALL_2
0x4001742	      0xe800000000	                          call 0x4001747	       742	elfcomm.c	FUNCTION_13	CALL_2
0x4001747	        0x488b45f8	                mov rax, qword [rbp - 8]	       743	elfcomm.c	FUNCTION_13	IF_3
0x400174b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       743	elfcomm.c	FUNCTION_13	IF_3
0x400174f	          0x4885c0	                           test rax, rax	       743	elfcomm.c	FUNCTION_13	IF_3
0x4001752	            0x7410	                            je 0x4001764	       743	elfcomm.c	FUNCTION_13	IF_3
0x4001754	        0x488b45f8	                mov rax, qword [rbp - 8]	       744	elfcomm.c	FUNCTION_13	CALL_3
0x4001758	        0x488b4020	            mov rax, qword [rax + 0x20] 	       744	elfcomm.c	FUNCTION_13	CALL_3
0x400175c	          0x4889c7	                            mov rdi, rax	       744	elfcomm.c	FUNCTION_13	CALL_3
0x400175f	      0xe800000000	                          call 0x4001764	       744	elfcomm.c	FUNCTION_13	CALL_3
0x4001764	        0x488b45f8	                mov rax, qword [rbp - 8]	       745	elfcomm.c	FUNCTION_13	IF_4
0x4001768	        0x488b4030	            mov rax, qword [rax + 0x30] 	       745	elfcomm.c	FUNCTION_13	IF_4
0x400176c	          0x4885c0	                           test rax, rax	       745	elfcomm.c	FUNCTION_13	IF_4
0x400176f	            0x7410	                            je 0x4001781	       745	elfcomm.c	FUNCTION_13	IF_4
0x4001771	        0x488b45f8	                mov rax, qword [rbp - 8]	       746	elfcomm.c	FUNCTION_13	CALL_4
0x4001775	        0x488b4030	            mov rax, qword [rax + 0x30] 	       746	elfcomm.c	FUNCTION_13	CALL_4
0x4001779	          0x4889c7	                            mov rdi, rax	       746	elfcomm.c	FUNCTION_13	CALL_4
0x400177c	      0xe800000000	                          call 0x4001781	       746	elfcomm.c	FUNCTION_13	CALL_4
0x4001781	              0x90	                                     nop	       747	elfcomm.c	FUNCTION_13
0x4001782	              0xc9	                                   leave	       747	elfcomm.c	FUNCTION_13
0x4001783	              0xc3	                                     ret	       747	elfcomm.c	FUNCTION_13
make_qualified_name	CALL,12:ELSE,4:FOR,0:SWITCH,0:DO,0:IF,6:functions,0:WHILE,0	137
0x4001c05	              0x55	                                push rbp	       890	elfcomm.c	FUNCTION_16
0x4001c06	          0x4889e5	                            mov rbp, rsp	       890	elfcomm.c	FUNCTION_16
0x4001c09	              0x53	                                push rbx	       890	elfcomm.c	FUNCTION_16
0x4001c0a	        0x4883ec48	                           sub rsp, 0x48	       890	elfcomm.c	FUNCTION_16
0x4001c0e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       890	elfcomm.c	FUNCTION_16
0x4001c12	        0x488975c0	             mov qword [rbp - 0x40], rsi	       890	elfcomm.c	FUNCTION_16
0x4001c16	        0x488955b8	             mov qword [rbp - 0x48], rdx	       890	elfcomm.c	FUNCTION_16
0x4001c1a	      0xbf00000000	                              mov edi, 0	       891	elfcomm.c	FUNCTION_16	CALL_1
0x4001c1f	      0xe800000000	                          call 0x4001c24	       891	elfcomm.c	FUNCTION_16	CALL_1
0x4001c24	        0x488945e0	             mov qword [rbp - 0x20], rax	       891	elfcomm.c	FUNCTION_16	CALL_1
0x4001c28	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c2c	          0x488b00	                    mov rax, qword [rax]	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c2f	          0x4889c7	                            mov rdi, rax	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c32	      0xe800000000	                          call 0x4001c37	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c37	          0x4889c3	                            mov rbx, rax	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c3a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c3e	          0x4889c7	                            mov rdi, rax	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c41	      0xe800000000	                          call 0x4001c46	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c46	          0x4801d8	                            add rax, rbx	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c49	        0x4883c003	                              add rax, 3	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c4d	        0x488945d8	             mov qword [rbp - 0x28], rax	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001c51	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       896	elfcomm.c	FUNCTION_16	IF_1
0x4001c55	          0x8b4050	            mov eax, dword [rax + 0x50] 	       896	elfcomm.c	FUNCTION_16	IF_1
0x4001c58	            0x85c0	                           test eax, eax	       896	elfcomm.c	FUNCTION_16	IF_1
0x4001c5a	            0x745a	                            je 0x4001cb6	       896	elfcomm.c	FUNCTION_16	IF_1
0x4001c5c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       897	elfcomm.c	FUNCTION_16	IF_1
0x4001c60	        0x488b4040	            mov rax, qword [rax + 0x40] 	       897	elfcomm.c	FUNCTION_16	IF_1
0x4001c64	          0x4885c0	                           test rax, rax	       897	elfcomm.c	FUNCTION_16	IF_1
0x4001c67	            0x744d	                            je 0x4001cb6	       897	elfcomm.c	FUNCTION_16	IF_1
0x4001c69	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       900	elfcomm.c	FUNCTION_16	IF_1	IF_2
0x4001c6d	          0x488b00	                    mov rax, qword [rax]	       900	elfcomm.c	FUNCTION_16	IF_1	IF_2
0x4001c70	          0x4885c0	                           test rax, rax	       900	elfcomm.c	FUNCTION_16	IF_1	IF_2
0x4001c73	            0x7423	                            je 0x4001c98	       900	elfcomm.c	FUNCTION_16	IF_1	IF_2
0x4001c75	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x4001c79	          0x488b00	                    mov rax, qword [rax]	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x4001c7c	          0x4889c7	                            mov rdi, rax	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x4001c7f	      0xe800000000	                          call 0x4001c84	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x4001c84	          0x4889c2	                            mov rdx, rax	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x4001c87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x4001c8b	          0x4801d0	                            add rax, rdx	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x4001c8e	        0x4883c002	                              add rax, 2	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x4001c92	        0x488945d8	             mov qword [rbp - 0x28], rax	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x4001c96	            0xeb1e	                           jmp 0x4001cb6	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x4001c98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001c9c	          0x4889c7	                            mov rdi, rax	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001c9f	      0xe800000000	                          call 0x4001ca4	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001ca4	          0x4889c2	                            mov rdx, rax	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001ca7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001cab	          0x4801d0	                            add rax, rdx	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001cae	        0x4883c002	                              add rax, 2	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001cb2	        0x488945d8	             mov qword [rbp - 0x28], rax	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001cb6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001cba	          0x4889c7	                            mov rdi, rax	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001cbd	      0xe800000000	                          call 0x4001cc2	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001cc2	        0x488945e8	             mov qword [rbp - 0x18], rax	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001cc6	      0x48837de800	               cmp qword [rbp - 0x18], 0	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001ccb	            0x7521	                           jne 0x4001cee	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001ccd	      0xbf00000000	                              mov edi, 0	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001cd2	      0xe800000000	                          call 0x4001cd7	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001cd7	          0x4889c7	                            mov rdi, rax	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001cda	      0xb800000000	                              mov eax, 0	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001cdf	      0xe800000000	                          call 0x4001ce4	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001ce4	      0xb800000000	                              mov eax, 0	       910	elfcomm.c	FUNCTION_16	IF_3
0x4001ce9	      0xe9fd000000	                           jmp 0x4001deb	       910	elfcomm.c	FUNCTION_16	IF_3
0x4001cee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       913	elfcomm.c	FUNCTION_16	IF_4
0x4001cf2	          0x8b4050	            mov eax, dword [rax + 0x50] 	       913	elfcomm.c	FUNCTION_16	IF_4
0x4001cf5	            0x85c0	                           test eax, eax	       913	elfcomm.c	FUNCTION_16	IF_4
0x4001cf7	     0xf8487000000	                            je 0x4001d84	       913	elfcomm.c	FUNCTION_16	IF_4
0x4001cfd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       914	elfcomm.c	FUNCTION_16	IF_4
0x4001d01	        0x488b4040	            mov rax, qword [rax + 0x40] 	       914	elfcomm.c	FUNCTION_16	IF_4
0x4001d05	          0x4885c0	                           test rax, rax	       914	elfcomm.c	FUNCTION_16	IF_4
0x4001d08	            0x747a	                            je 0x4001d84	       914	elfcomm.c	FUNCTION_16	IF_4
0x4001d0a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001d0e	          0x488b00	                    mov rax, qword [rax]	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001d11	          0x4885c0	                           test rax, rax	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001d14	            0x743a	                            je 0x4001d50	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001d16	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d1a	          0x488b08	                    mov rcx, qword [rax]	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d1d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d21	          0x488b10	                    mov rdx, qword [rax]	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d24	        0x488b7db8	             mov rdi, qword [rbp - 0x48]	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d28	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d2c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d30	          0x4989f9	                             mov r9, rdi	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d33	          0x4989c8	                             mov r8, rcx	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d36	          0x4889d1	                            mov rcx, rdx	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d39	      0xba00000000	                              mov edx, 0	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d3e	          0x4889c7	                            mov rdi, rax	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d41	      0xb800000000	                              mov eax, 0	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d46	      0xe800000000	                          call 0x4001d4b	       917	elfcomm.c	FUNCTION_16	IF_4	IF_5	CALL_9
0x4001d4b	      0xe997000000	                           jmp 0x4001de7	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001d50	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d54	          0x488b10	                    mov rdx, qword [rax]	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d57	        0x488b7db8	             mov rdi, qword [rbp - 0x48]	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d5b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d5f	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d67	          0x4989f9	                             mov r9, rdi	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d6a	          0x4989c8	                             mov r8, rcx	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d6d	          0x4889d1	                            mov rcx, rdx	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d70	      0xba00000000	                              mov edx, 0	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d75	          0x4889c7	                            mov rdi, rax	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d78	      0xb800000000	                              mov eax, 0	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d7d	      0xe800000000	                          call 0x4001d82	       920	elfcomm.c	FUNCTION_16	IF_4	ELSE_2	CALL_10
0x4001d82	            0xeb63	                           jmp 0x4001de7	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001d84	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       923	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001d88	          0x8b4050	            mov eax, dword [rax + 0x50] 	       923	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001d8b	            0x85c0	                           test eax, eax	       923	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001d8d	            0x742d	                            je 0x4001dbc	       923	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001d8f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001d93	          0x488b10	                    mov rdx, qword [rax]	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001d96	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001d9a	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001d9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001da2	          0x4989c8	                             mov r8, rcx	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001da5	          0x4889d1	                            mov rcx, rdx	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001da8	      0xba00000000	                              mov edx, 0	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001dad	          0x4889c7	                            mov rdi, rax	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001db0	      0xb800000000	                              mov eax, 0	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001db5	      0xe800000000	                          call 0x4001dba	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001dba	            0xeb2b	                           jmp 0x4001de7	       924	elfcomm.c	FUNCTION_16	ELSE_3	IF_6
0x4001dbc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001dc0	          0x488b10	                    mov rdx, qword [rax]	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001dc3	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001dc7	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001dcb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001dcf	          0x4989c8	                             mov r8, rcx	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001dd2	          0x4889d1	                            mov rcx, rdx	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001dd5	      0xba00000000	                              mov edx, 0	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001dda	          0x4889c7	                            mov rdi, rax	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001ddd	      0xb800000000	                              mov eax, 0	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001de2	      0xe800000000	                          call 0x4001de7	       926	elfcomm.c	FUNCTION_16	CALL_12
0x4001de7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       928	elfcomm.c	FUNCTION_16
0x4001deb	        0x4883c448	                           add rsp, 0x48	       929	elfcomm.c	FUNCTION_16
0x4001def	              0x5b	                                 pop rbx	       929	elfcomm.c	FUNCTION_16
0x4001df0	              0x5d	                                 pop rbp	       929	elfcomm.c	FUNCTION_16
0x4001df1	              0xc3	                                     ret	       929	elfcomm.c	FUNCTION_16
