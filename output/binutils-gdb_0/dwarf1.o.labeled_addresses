parse_functions_in_unit	WHILE,0:ELSE,1:SWITCH,0:IF,5:CALL,2:functions,0:FOR,1:DO,0	80
0x40006db	              0x55	                                push rbp	       379	dwarf1.c	FUNCTION_5
0x40006dc	          0x4889e5	                            mov rbp, rsp	       379	dwarf1.c	FUNCTION_5
0x40006df	        0x4883ec60	                           sub rsp, 0x60	       379	dwarf1.c	FUNCTION_5
0x40006e3	        0x48897da8	             mov qword [rbp - 0x58], rdi	       379	dwarf1.c	FUNCTION_5
0x40006e7	        0x488975a0	             mov qword [rbp - 0x60], rsi	       379	dwarf1.c	FUNCTION_5
0x40006eb	    0x64488b042528	                mov rax, qword fs:[0x28]	       379	dwarf1.c	FUNCTION_5
0x40006f4	        0x488945f8	                mov qword [rbp - 8], rax	       379	dwarf1.c	FUNCTION_5
0x40006f8	            0x31c0	                            xor eax, eax	       379	dwarf1.c	FUNCTION_5
0x40006fa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       382	dwarf1.c	FUNCTION_5	IF_1
0x40006fe	        0x488b4030	            mov rax, qword [rax + 0x30] 	       382	dwarf1.c	FUNCTION_5	IF_1
0x4000702	          0x4885c0	                           test rax, rax	       382	dwarf1.c	FUNCTION_5	IF_1
0x4000705	     0xf84e0000000	                            je 0x40007eb	       382	dwarf1.c	FUNCTION_5	IF_1
0x400070b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x400070f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x4000713	        0x488945b0	             mov qword [rbp - 0x50], rax	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x4000717	      0xe9ba000000	                           jmp 0x40007d6	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x400071c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x4000720	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x4000724	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x4000728	          0x488b00	                    mov rax, qword [rax]	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x400072b	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x400072f	        0x488d75c0	                   lea rsi, [rbp - 0x40]	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x4000733	          0x4889c7	                            mov rdi, rax	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x4000736	      0xe8b5f9ffff	                      call sym.parse_die	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x400073b	            0x85c0	                           test eax, eax	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x400073d	            0x750a	                           jne 0x4000749	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x400073f	      0xb800000000	                              mov eax, 0	       391	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2
0x4000744	      0xe9a7000000	                           jmp 0x40007f0	       391	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2
0x4000749	         0xfb745f4	             movzx eax, word [rbp - 0xc]	       393	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400074d	        0x6683f806	                               cmp ax, 6	       393	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000751	            0x741e	                            je 0x4000771	       393	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000753	         0xfb745f4	             movzx eax, word [rbp - 0xc]	       394	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000757	        0x6683f814	                            cmp ax, 0x14	       394	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400075b	            0x7414	                            je 0x4000771	       394	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400075d	         0xfb745f4	             movzx eax, word [rbp - 0xc]	       395	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000761	        0x6683f81d	                            cmp ax, 0x1d	       395	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000765	            0x740a	                            je 0x4000771	       395	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000767	         0xfb745f4	             movzx eax, word [rbp - 0xc]	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400076b	        0x6683f803	                               cmp ax, 3	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400076f	            0x7549	                           jne 0x40007ba	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000771	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       398	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3	CALL_2
0x4000775	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       398	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3	CALL_2
0x4000779	          0x4889d6	                            mov rsi, rdx	       398	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3	CALL_2
0x400077c	          0x4889c7	                            mov rdi, rax	       398	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3	CALL_2
0x400077f	      0xe812f9ffff	              call sym.alloc_dwarf1_func	       398	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3	CALL_2
0x4000784	        0x488945b8	             mov qword [rbp - 0x48], rax	       398	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3	CALL_2
0x4000788	      0x48837db800	               cmp qword [rbp - 0x48], 0	       399	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3	IF_4
0x400078d	            0x7507	                           jne 0x4000796	       399	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3	IF_4
0x400078f	      0xb800000000	                              mov eax, 0	       400	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3	IF_4
0x4000794	            0xeb5a	                           jmp 0x40007f0	       400	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3	IF_4
0x4000796	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       402	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400079a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       402	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400079e	        0x48895008	                mov qword [rax + 8], rdx	       402	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40007a2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       403	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40007a6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       403	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40007aa	        0x48895010	             mov qword [rax + 0x10], rdx	       403	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40007ae	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       404	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40007b2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       404	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40007b6	        0x48895018	             mov qword [rax + 0x18], rdx	       404	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40007ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       408	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40007be	          0x4885c0	                           test rax, rax	       408	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40007c1	            0x7427	                            je 0x40007ea	       408	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40007c3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       409	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40007c7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       409	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40007cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       409	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40007cf	          0x4801d0	                            add rax, rdx	       409	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40007d2	        0x488945b0	             mov qword [rbp - 0x50], rax	       409	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40007d6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       384	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40007da	        0x488b4020	            mov rax, qword [rax + 0x20] 	       384	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40007de	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40007e2	     0xf8734ffffff	                            ja 0x400071c	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40007e8	            0xeb01	                           jmp 0x40007eb	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40007ea	              0x90	                                     nop	       411	dwarf1.c	FUNCTION_5	IF_1	FOR_1	ELSE_1
0x40007eb	      0xb801000000	                              mov eax, 1	       414	dwarf1.c	FUNCTION_5	ELSE_1
0x40007f0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       415	dwarf1.c	FUNCTION_5	ELSE_1
0x40007f4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       415	dwarf1.c	FUNCTION_5	ELSE_1
0x40007fd	            0x7405	                            je 0x4000804	       415	dwarf1.c	FUNCTION_5	ELSE_1
0x40007ff	      0xe800000000	                          call 0x4000804	       415	dwarf1.c	FUNCTION_5	ELSE_1
0x4000804	              0xc9	                                   leave	       415	dwarf1.c	FUNCTION_5	ELSE_1
0x4000805	              0xc3	                                     ret	       415	dwarf1.c	FUNCTION_5	ELSE_1
dwarf1_unit_find_nearest_line	WHILE,0:ELSE,0:SWITCH,0:IF,8:CALL,2:functions,0:FOR,2:DO,0	121
0x4000806	              0x55	                                push rbp	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000807	          0x4889e5	                            mov rbp, rsp	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400080a	        0x4883ec50	                           sub rsp, 0x50	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400080e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000812	        0x488975d0	             mov qword [rbp - 0x30], rsi	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000816	        0x488955c8	             mov qword [rbp - 0x38], rdx	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400081a	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400081e	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000822	        0x4c894db0	              mov qword [rbp - 0x50], r9	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000826	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       428	dwarf1.c	ELSE_1	FUNCTION_6
0x400082d	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       429	dwarf1.c	ELSE_1	FUNCTION_6
0x4000834	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000838	        0x488b4010	            mov rax, qword [rax + 0x10] 	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x400083c	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000840	     0xf8765010000	                            ja 0x40009ab	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000846	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x400084a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x400084e	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000852	     0xf8653010000	                           jbe 0x40009ab	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000858	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       433	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2
0x400085c	          0x8b4020	            mov eax, dword [rax + 0x20] 	       433	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2
0x400085f	            0x85c0	                           test eax, eax	       433	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2
0x4000861	     0xf8444010000	                            je 0x40009ab	       433	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2
0x4000867	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       438	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3
0x400086b	        0x488b4040	            mov rax, qword [rax + 0x40] 	       438	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3
0x400086f	          0x4885c0	                           test rax, rax	       438	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3
0x4000872	            0x7521	                           jne 0x4000895	       438	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3
0x4000874	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       440	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4	CALL_1
0x4000878	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       440	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4	CALL_1
0x400087c	          0x4889d6	                            mov rsi, rdx	       440	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4	CALL_1
0x400087f	          0x4889c7	                            mov rdi, rax	       440	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4	CALL_1
0x4000882	      0xe8befbffff	               call sym.parse_line_table	       440	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4	CALL_1
0x4000887	            0x85c0	                           test eax, eax	       440	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4	CALL_1
0x4000889	            0x750a	                           jne 0x4000895	       440	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4	CALL_1
0x400088b	      0xb800000000	                              mov eax, 0	       441	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4
0x4000890	      0xe92f010000	                           jmp 0x40009c4	       441	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4
0x4000895	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       444	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5
0x4000899	        0x488b4048	            mov rax, qword [rax + 0x48] 	       444	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5
0x400089d	          0x4885c0	                           test rax, rax	       444	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5
0x40008a0	            0x7521	                           jne 0x40008c3	       444	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5
0x40008a2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       446	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6	CALL_2
0x40008a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       446	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6	CALL_2
0x40008aa	          0x4889d6	                            mov rsi, rdx	       446	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6	CALL_2
0x40008ad	          0x4889c7	                            mov rdi, rax	       446	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6	CALL_2
0x40008b0	      0xe826feffff	        call sym.parse_functions_in_unit	       446	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6	CALL_2
0x40008b5	            0x85c0	                           test eax, eax	       446	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6	CALL_2
0x40008b7	            0x750a	                           jne 0x40008c3	       446	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6	CALL_2
0x40008b9	      0xb800000000	                              mov eax, 0	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x40008be	      0xe901010000	                           jmp 0x40009c4	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x40008c3	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40008cb	            0xeb78	                           jmp 0x4000945	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40008cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008d1	        0x488b4040	            mov rax, qword [rax + 0x40] 	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008d5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008d9	        0x48c1e204	                              shl rdx, 4	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008dd	          0x4801d0	                            add rax, rdx	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008e0	          0x488b00	                    mov rax, qword [rax]	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008e3	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008e7	            0x7757	                            ja 0x4000940	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008e9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008ed	        0x488b4040	            mov rax, qword [rax + 0x40] 	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008f1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008f5	        0x4883c201	                              add rdx, 1	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008f9	        0x48c1e204	                              shl rdx, 4	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40008fd	          0x4801d0	                            add rax, rdx	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000900	          0x488b00	                    mov rax, qword [rax]	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000903	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000907	            0x7637	                           jbe 0x4000940	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000909	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       455	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400090d	        0x488b5008	                mov rdx, qword [rax + 8]	       455	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000911	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       455	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000915	          0x488910	                    mov qword [rax], rdx	       455	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000918	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400091c	        0x488b4040	            mov rax, qword [rax + 0x40] 	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000920	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000924	        0x48c1e204	                              shl rdx, 4	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000928	          0x4801d0	                            add rax, rdx	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400092b	        0x488b4008	                mov rax, qword [rax + 8]	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400092f	            0x89c2	                            mov edx, eax	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000931	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000935	            0x8910	                    mov dword [rax], edx	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000937	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       457	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400093e	            0xeb17	                           jmp 0x4000957	       458	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000940	      0x488345f001	               add qword [rbp - 0x10], 1	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000945	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000949	        0x488b4038	            mov rax, qword [rax + 0x38] 	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x400094d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000951	     0xf8776ffffff	                            ja 0x40008cd	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000957	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x400095b	        0x488b4048	            mov rax, qword [rax + 0x48] 	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x400095f	        0x488945f8	                mov qword [rbp - 8], rax	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x4000963	            0xeb3f	                           jmp 0x40009a4	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x4000965	        0x488b45f8	                mov rax, qword [rbp - 8]	       466	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000969	        0x488b4010	            mov rax, qword [rax + 0x10] 	       466	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400096d	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       466	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000971	            0x7726	                            ja 0x4000999	       466	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000973	        0x488b45f8	                mov rax, qword [rbp - 8]	       467	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000977	        0x488b4018	            mov rax, qword [rax + 0x18] 	       467	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400097b	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       467	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400097f	            0x7618	                           jbe 0x4000999	       467	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000981	        0x488b45f8	                mov rax, qword [rbp - 8]	       469	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000985	        0x488b5008	                mov rdx, qword [rax + 8]	       469	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000989	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       469	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400098d	          0x488910	                    mov qword [rax], rdx	       469	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000990	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       470	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000997	            0xeb12	                           jmp 0x40009ab	       471	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000999	        0x488b45f8	                mov rax, qword [rbp - 8]	       464	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x400099d	          0x488b00	                    mov rax, qword [rax]	       464	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x40009a0	        0x488945f8	                mov qword [rbp - 8], rax	       464	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x40009a4	      0x48837df800	                  cmp qword [rbp - 8], 0	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x40009a9	            0x75ba	                           jne 0x4000965	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x40009ab	        0x837de800	               cmp dword [rbp - 0x18], 0	       477	dwarf1.c	ELSE_1	FUNCTION_6
0x40009af	            0x7506	                           jne 0x40009b7	       477	dwarf1.c	ELSE_1	FUNCTION_6
0x40009b1	        0x837dec00	               cmp dword [rbp - 0x14], 0	       477	dwarf1.c	ELSE_1	FUNCTION_6
0x40009b5	            0x7407	                            je 0x40009be	       477	dwarf1.c	ELSE_1	FUNCTION_6
0x40009b7	      0xb801000000	                              mov eax, 1	       477	dwarf1.c	ELSE_1	FUNCTION_6
0x40009bc	            0xeb05	                           jmp 0x40009c3	       477	dwarf1.c	ELSE_1	FUNCTION_6
0x40009be	      0xb800000000	                              mov eax, 0	       477	dwarf1.c	ELSE_1	FUNCTION_6
0x40009c3	              0x90	                                     nop	       477	dwarf1.c	ELSE_1	FUNCTION_6
0x40009c4	              0xc9	                                   leave	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x40009c5	              0xc3	                                     ret	       478	dwarf1.c	ELSE_1	FUNCTION_6
alloc_dwarf1_func	WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,1:functions,0:FOR,0:DO,0	25
0x4000096	              0x55	                                push rbp	       160	dwarf1.c	FUNCTION_2
0x4000097	          0x4889e5	                            mov rbp, rsp	       160	dwarf1.c	FUNCTION_2
0x400009a	        0x4883ec20	                           sub rsp, 0x20	       160	dwarf1.c	FUNCTION_2
0x400009e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       160	dwarf1.c	FUNCTION_2
0x40000a2	        0x488975e0	             mov qword [rbp - 0x20], rsi	       160	dwarf1.c	FUNCTION_2
0x40000a6	    0x48c745f02000	           mov qword [rbp - 0x10], 0x20 	       161	dwarf1.c	FUNCTION_2
0x40000ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	dwarf1.c	FUNCTION_2	CALL_1
0x40000b2	          0x488b00	                    mov rax, qword [rax]	       163	dwarf1.c	FUNCTION_2	CALL_1
0x40000b5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       163	dwarf1.c	FUNCTION_2	CALL_1
0x40000b9	          0x4889d6	                            mov rsi, rdx	       163	dwarf1.c	FUNCTION_2	CALL_1
0x40000bc	          0x4889c7	                            mov rdi, rax	       163	dwarf1.c	FUNCTION_2	CALL_1
0x40000bf	      0xe800000000	                          call 0x40000c4	       163	dwarf1.c	FUNCTION_2	CALL_1
0x40000c4	        0x488945f8	                mov qword [rbp - 8], rax	       163	dwarf1.c	FUNCTION_2	CALL_1
0x40000c8	      0x48837df800	                  cmp qword [rbp - 8], 0	       164	dwarf1.c	FUNCTION_2	IF_1
0x40000cd	            0x741b	                            je 0x40000ea	       164	dwarf1.c	FUNCTION_2	IF_1
0x40000cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       166	dwarf1.c	FUNCTION_2	IF_1
0x40000d3	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       166	dwarf1.c	FUNCTION_2	IF_1
0x40000d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	dwarf1.c	FUNCTION_2	IF_1
0x40000db	          0x488910	                    mov qword [rax], rdx	       166	dwarf1.c	FUNCTION_2	IF_1
0x40000de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       167	dwarf1.c	FUNCTION_2	IF_1
0x40000e2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       167	dwarf1.c	FUNCTION_2	IF_1
0x40000e6	        0x48895048	             mov qword [rax + 0x48], rdx	       167	dwarf1.c	FUNCTION_2	IF_1
0x40000ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	dwarf1.c	FUNCTION_2
0x40000ee	              0xc9	                                   leave	       171	dwarf1.c	FUNCTION_2
0x40000ef	              0xc3	                                     ret	       171	dwarf1.c	FUNCTION_2
parse_die	WHILE,1:ELSE,2:SWITCH,1:IF,15:CALL,11:functions,0:FOR,0:DO,0	231
0x40000f0	              0x55	                                push rbp	       185	dwarf1.c	FUNCTION_3
0x40000f1	          0x4889e5	                            mov rbp, rsp	       185	dwarf1.c	FUNCTION_3
0x40000f4	        0x4883ec40	                           sub rsp, 0x40	       185	dwarf1.c	FUNCTION_3
0x40000f8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       185	dwarf1.c	FUNCTION_3
0x40000fc	        0x488975d0	             mov qword [rbp - 0x30], rsi	       185	dwarf1.c	FUNCTION_3
0x4000100	        0x488955c8	             mov qword [rbp - 0x38], rdx	       185	dwarf1.c	FUNCTION_3
0x4000104	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       185	dwarf1.c	FUNCTION_3
0x4000108	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       186	dwarf1.c	FUNCTION_3
0x400010c	        0x488945f8	                mov qword [rbp - 8], rax	       186	dwarf1.c	FUNCTION_3
0x4000110	        0x488b45f8	                mov rax, qword [rbp - 8]	       187	dwarf1.c	FUNCTION_3
0x4000114	        0x488945f0	             mov qword [rbp - 0x10], rax	       187	dwarf1.c	FUNCTION_3
0x4000118	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       189	dwarf1.c	FUNCTION_3	CALL_1
0x400011c	      0xba38000000	                           mov edx, 0x38	       189	dwarf1.c	FUNCTION_3	CALL_1
0x4000121	      0xbe00000000	                              mov esi, 0	       189	dwarf1.c	FUNCTION_3	CALL_1
0x4000126	          0x4889c7	                            mov rdi, rax	       189	dwarf1.c	FUNCTION_3	CALL_1
0x4000129	      0xe800000000	                          call 0x400012e	       189	dwarf1.c	FUNCTION_3	CALL_1
0x400012e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       192	dwarf1.c	FUNCTION_3	IF_1
0x4000132	        0x4883c004	                              add rax, 4	       192	dwarf1.c	FUNCTION_3	IF_1
0x4000136	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       192	dwarf1.c	FUNCTION_3	IF_1
0x400013a	            0x760a	                           jbe 0x4000146	       192	dwarf1.c	FUNCTION_3	IF_1
0x400013c	      0xb800000000	                              mov eax, 0	       193	dwarf1.c	FUNCTION_3	IF_1
0x4000141	      0xe9fd020000	                           jmp 0x4000443	       193	dwarf1.c	FUNCTION_3	IF_1
0x4000146	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       194	dwarf1.c	FUNCTION_3	CALL_2
0x400014a	        0x488b4008	                mov rax, qword [rax + 8]	       194	dwarf1.c	FUNCTION_3	CALL_2
0x400014e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000152	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000156	          0x4889d7	                            mov rdi, rdx	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000159	            0xffd0	                                call rax	       194	dwarf1.c	FUNCTION_3	CALL_2
0x400015b	          0x4889c2	                            mov rdx, rax	       194	dwarf1.c	FUNCTION_3	CALL_2
0x400015e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000162	          0x488910	                    mov qword [rax], rdx	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000165	      0x488345f004	               add qword [rbp - 0x10], 4	       195	dwarf1.c	FUNCTION_3
0x400016a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       196	dwarf1.c	FUNCTION_3	IF_2
0x400016e	          0x488b00	                    mov rax, qword [rax]	       196	dwarf1.c	FUNCTION_3	IF_2
0x4000171	          0x4885c0	                           test rax, rax	       196	dwarf1.c	FUNCTION_3	IF_2
0x4000174	            0x7414	                            je 0x400018a	       196	dwarf1.c	FUNCTION_3	IF_2
0x4000176	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       197	dwarf1.c	FUNCTION_3	IF_2
0x400017a	          0x488b10	                    mov rdx, qword [rax]	       197	dwarf1.c	FUNCTION_3	IF_2
0x400017d	        0x488b45f8	                mov rax, qword [rbp - 8]	       197	dwarf1.c	FUNCTION_3	IF_2
0x4000181	          0x4801d0	                            add rax, rdx	       197	dwarf1.c	FUNCTION_3	IF_2
0x4000184	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       197	dwarf1.c	FUNCTION_3	IF_2
0x4000188	            0x760a	                           jbe 0x4000194	       197	dwarf1.c	FUNCTION_3	IF_2
0x400018a	      0xb800000000	                              mov eax, 0	       198	dwarf1.c	FUNCTION_3	IF_2
0x400018f	      0xe9af020000	                           jmp 0x4000443	       198	dwarf1.c	FUNCTION_3	IF_2
0x4000194	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       199	dwarf1.c	FUNCTION_3
0x4000198	          0x488b10	                    mov rdx, qword [rax]	       199	dwarf1.c	FUNCTION_3
0x400019b	        0x488b45f8	                mov rax, qword [rbp - 8]	       199	dwarf1.c	FUNCTION_3
0x400019f	          0x4801d0	                            add rax, rdx	       199	dwarf1.c	FUNCTION_3
0x40001a2	        0x488945c0	             mov qword [rbp - 0x40], rax	       199	dwarf1.c	FUNCTION_3
0x40001a6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       200	dwarf1.c	FUNCTION_3	IF_3
0x40001aa	          0x488b00	                    mov rax, qword [rax]	       200	dwarf1.c	FUNCTION_3	IF_3
0x40001ad	        0x4883f805	                              cmp rax, 5	       200	dwarf1.c	FUNCTION_3	IF_3
0x40001b1	            0x7714	                            ja 0x40001c7	       200	dwarf1.c	FUNCTION_3	IF_3
0x40001b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       203	dwarf1.c	FUNCTION_3	IF_3
0x40001b7	    0x66c740340000	                mov word [rax + 0x34], 0	       203	dwarf1.c	FUNCTION_3	IF_3
0x40001bd	      0xb801000000	                              mov eax, 1	       204	dwarf1.c	FUNCTION_3	IF_3
0x40001c2	      0xe97c020000	                           jmp 0x4000443	       204	dwarf1.c	FUNCTION_3	IF_3
0x40001c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       208	dwarf1.c	FUNCTION_3	IF_4
0x40001cb	        0x4883c002	                              add rax, 2	       208	dwarf1.c	FUNCTION_3	IF_4
0x40001cf	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       208	dwarf1.c	FUNCTION_3	IF_4
0x40001d3	            0x760a	                           jbe 0x40001df	       208	dwarf1.c	FUNCTION_3	IF_4
0x40001d5	      0xb800000000	                              mov eax, 0	       209	dwarf1.c	FUNCTION_3	IF_4
0x40001da	      0xe964020000	                           jmp 0x4000443	       209	dwarf1.c	FUNCTION_3	IF_4
0x40001df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40001e3	        0x488b4008	                mov rax, qword [rax + 8]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40001e7	        0x488b4050	            mov rax, qword [rax + 0x50] 	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40001eb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40001ef	          0x4889d7	                            mov rdi, rdx	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40001f2	            0xffd0	                                call rax	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40001f4	            0x89c2	                            mov edx, eax	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40001f6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40001fa	        0x66895034	               mov word [rax + 0x34], dx	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40001fe	      0x488345f002	               add qword [rbp - 0x10], 2	       211	dwarf1.c	FUNCTION_3
0x4000203	      0xe924020000	                           jmp 0x400042c	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x4000208	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x400020c	        0x488b4008	                mov rax, qword [rax + 8]	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x4000210	        0x488b4050	            mov rax, qword [rax + 0x50] 	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x4000214	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x4000218	          0x4889d7	                            mov rdi, rdx	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x400021b	            0xffd0	                                call rax	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x400021d	        0x668945ea	               mov word [rbp - 0x16], ax	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x4000221	      0x488345f002	               add qword [rbp - 0x10], 2	       223	dwarf1.c	FUNCTION_3	WHILE_1
0x4000226	         0xfb745ea	            movzx eax, word [rbp - 0x16]	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400022a	          0x83e00f	                            and eax, 0xf	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400022d	          0x83f808	                              cmp eax, 8	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000230	     0xf87f6010000	                            ja 0x400042c	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000236	            0x89c0	                            mov eax, eax	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000238	    0x488b04c50000	                  mov rax, qword [rax*8]	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000240	            0xffe0	                                 jmp rax	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000242	      0x488345f002	               add qword [rbp - 0x10], 2	       228	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000247	      0xe9e0010000	                           jmp 0x400042c	       229	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400024c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x4000250	        0x4883c004	                              add rax, 4	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x4000254	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x4000258	            0x775c	                            ja 0x40002b6	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x400025a	      0x66837dea12	            cmp word [rbp - 0x16], 0x12 	       234	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	IF_6
0x400025f	            0x7522	                           jne 0x4000283	       234	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	IF_6
0x4000261	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000265	        0x488b4008	                mov rax, qword [rax + 8]	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000269	        0x488b4038	            mov rax, qword [rax + 0x38] 	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x400026d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000271	          0x4889d7	                            mov rdi, rdx	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000274	            0xffd0	                                call rax	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000276	          0x4889c2	                            mov rdx, rax	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000279	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x400027d	        0x48895008	                mov qword [rax + 8], rdx	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000281	            0xeb33	                           jmp 0x40002b6	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000283	    0x66817dea0601	           cmp word [rbp - 0x16], 0x106 	       236	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x4000289	            0x752b	                           jne 0x40002b6	       236	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x400028b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400028f	        0x488b4008	                mov rax, qword [rax + 8]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x4000293	        0x488b4038	            mov rax, qword [rax + 0x38] 	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x4000297	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400029b	          0x4889d7	                            mov rdi, rdx	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400029e	            0xffd0	                                call rax	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x40002a0	          0x4889c2	                            mov rdx, rax	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x40002a3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x40002a7	        0x48895020	             mov qword [rax + 0x20], rdx	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x40002ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       239	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x40002af	    0xc74030010000	               mov dword [rax + 0x30], 1	       239	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x40002b6	      0x488345f004	               add qword [rbp - 0x10], 4	       242	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40002bb	      0xe96c010000	                           jmp 0x400042c	       243	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40002c0	      0x488345f008	               add qword [rbp - 0x10], 8	       245	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40002c5	      0xe962010000	                           jmp 0x400042c	       246	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40002ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x40002ce	        0x4883c004	                              add rax, 4	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x40002d2	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x40002d6	            0x7752	                            ja 0x400032a	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x40002d8	    0x66817dea1101	           cmp word [rbp - 0x16], 0x111 	       250	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	IF_9
0x40002de	            0x7522	                           jne 0x4000302	       250	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	IF_9
0x40002e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40002e4	        0x488b4008	                mov rax, qword [rax + 8]	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40002e8	        0x488b4038	            mov rax, qword [rax + 0x38] 	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40002ec	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40002f0	          0x4889d7	                            mov rdi, rdx	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40002f3	            0xffd0	                                call rax	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40002f5	          0x4889c2	                            mov rdx, rax	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40002f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40002fc	        0x48895010	             mov qword [rax + 0x10], rdx	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x4000300	            0xeb28	                           jmp 0x400032a	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x4000302	    0x66817dea2101	           cmp word [rbp - 0x16], 0x121 	       252	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x4000308	            0x7520	                           jne 0x400032a	       252	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x400030a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x400030e	        0x488b4008	                mov rax, qword [rax + 8]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x4000312	        0x488b4038	            mov rax, qword [rax + 0x38] 	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x4000316	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x400031a	          0x4889d7	                            mov rdi, rdx	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x400031d	            0xffd0	                                call rax	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x400031f	          0x4889c2	                            mov rdx, rax	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x4000322	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x4000326	        0x48895018	             mov qword [rax + 0x18], rdx	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x400032a	      0x488345f004	               add qword [rbp - 0x10], 4	       255	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400032f	      0xe9f8000000	                           jmp 0x400042c	       256	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000334	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x4000338	        0x4883c002	                              add rax, 2	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x400033c	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x4000340	            0x7749	                            ja 0x400038b	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x4000342	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x4000346	        0x488b4008	                mov rax, qword [rax + 8]	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x400034a	        0x488b4050	            mov rax, qword [rax + 0x50] 	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x400034e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x4000352	          0x4889d7	                            mov rdi, rdx	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x4000355	            0xffd0	                                call rax	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x4000357	          0x8945ec	             mov dword [rbp - 0x14], eax	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x400035a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x400035d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000361	          0x4801d0	                            add rax, rdx	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000364	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000368	            0x7710	                            ja 0x400037a	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x400036a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       262	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x400036d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       262	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000371	          0x4801d0	                            add rax, rdx	       262	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000374	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       262	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000378	            0x730a	                           jae 0x4000384	       262	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x400037a	      0xb800000000	                              mov eax, 0	       263	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x400037f	      0xe9bf000000	                           jmp 0x4000443	       263	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000384	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       264	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x4000387	        0x480145f0	            add qword [rbp - 0x10], rax 	       264	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x400038b	      0x488345f002	               add qword [rbp - 0x10], 2	       266	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000390	      0xe997000000	                           jmp 0x400042c	       267	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000395	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x4000399	        0x4883c004	                              add rax, 4	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x400039d	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x40003a1	            0x7746	                            ja 0x40003e9	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x40003a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40003a7	        0x488b4008	                mov rax, qword [rax + 8]	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40003ab	        0x488b4038	            mov rax, qword [rax + 0x38] 	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40003af	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40003b3	          0x4889d7	                            mov rdi, rdx	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40003b6	            0xffd0	                                call rax	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40003b8	          0x8945ec	             mov dword [rbp - 0x14], eax	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40003bb	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003c2	          0x4801d0	                            add rax, rdx	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003c5	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003c9	            0x7710	                            ja 0x40003db	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003cb	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       273	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       273	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003d2	          0x4801d0	                            add rax, rdx	       273	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003d5	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       273	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003d9	            0x7307	                           jae 0x40003e2	       273	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003db	      0xb800000000	                              mov eax, 0	       274	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003e0	            0xeb61	                           jmp 0x4000443	       274	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40003e2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       275	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x40003e5	        0x480145f0	            add qword [rbp - 0x10], rax 	       275	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x40003e9	      0x488345f004	               add qword [rbp - 0x10], 4	       277	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003ee	            0xeb3c	                           jmp 0x400042c	       278	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003f0	      0x66837dea38	            cmp word [rbp - 0x16], 0x38 	       280	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x40003f5	            0x750c	                           jne 0x4000403	       280	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x40003f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       281	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x40003fb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       281	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x40003ff	        0x48895028	             mov qword [rax + 0x28], rdx	       281	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x4000403	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000407	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400040b	          0x4829c2	                            sub rdx, rax	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400040e	          0x4889d0	                            mov rax, rdx	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000411	          0x4889c2	                            mov rdx, rax	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000414	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000418	          0x4889d6	                            mov rsi, rdx	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400041b	          0x4889c7	                            mov rdi, rax	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400041e	      0xe800000000	                          call 0x4000423	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000423	        0x4883c001	                              add rax, 1	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000427	        0x480145f0	            add qword [rbp - 0x10], rax 	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400042b	              0x90	                                     nop	       283	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400042c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x4000430	        0x4883c002	                              add rax, 2	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x4000434	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x4000438	     0xf86cafdffff	                           jbe 0x4000208	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x400043e	      0xb801000000	                              mov eax, 1	       287	dwarf1.c	FUNCTION_3
0x4000443	              0xc9	                                   leave	       288	dwarf1.c	FUNCTION_3
0x4000444	              0xc3	                                     ret	       288	dwarf1.c	FUNCTION_3
alloc_dwarf1_unit	WHILE,0:ELSE,0:SWITCH,0:IF,1:CALL,1:functions,0:FOR,0:DO,0	24
0x4000040	              0x55	                                push rbp	       142	dwarf1.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       142	dwarf1.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	       142	dwarf1.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       142	dwarf1.c	FUNCTION_1
0x400004c	    0x48c745f05000	           mov qword [rbp - 0x10], 0x50 	       143	dwarf1.c	FUNCTION_1
0x4000054	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	dwarf1.c	FUNCTION_1	CALL_1
0x4000058	          0x488b00	                    mov rax, qword [rax]	       145	dwarf1.c	FUNCTION_1	CALL_1
0x400005b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       145	dwarf1.c	FUNCTION_1	CALL_1
0x400005f	          0x4889d6	                            mov rsi, rdx	       145	dwarf1.c	FUNCTION_1	CALL_1
0x4000062	          0x4889c7	                            mov rdi, rax	       145	dwarf1.c	FUNCTION_1	CALL_1
0x4000065	      0xe800000000	                          call 0x400006a	       145	dwarf1.c	FUNCTION_1	CALL_1
0x400006a	        0x488945f8	                mov qword [rbp - 8], rax	       145	dwarf1.c	FUNCTION_1	CALL_1
0x400006e	      0x48837df800	                  cmp qword [rbp - 8], 0	       146	dwarf1.c	FUNCTION_1	IF_1
0x4000073	            0x741b	                            je 0x4000090	       146	dwarf1.c	FUNCTION_1	IF_1
0x4000075	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	dwarf1.c	FUNCTION_1	IF_1
0x4000079	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       148	dwarf1.c	FUNCTION_1	IF_1
0x400007d	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	dwarf1.c	FUNCTION_1	IF_1
0x4000081	          0x488910	                    mov qword [rax], rdx	       148	dwarf1.c	FUNCTION_1	IF_1
0x4000084	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	dwarf1.c	FUNCTION_1	IF_1
0x4000088	        0x488b55f8	                mov rdx, qword [rbp - 8]	       149	dwarf1.c	FUNCTION_1	IF_1
0x400008c	        0x48895010	             mov qword [rax + 0x10], rdx	       149	dwarf1.c	FUNCTION_1	IF_1
0x4000090	        0x488b45f8	                mov rax, qword [rbp - 8]	       152	dwarf1.c	FUNCTION_1
0x4000094	              0xc9	                                   leave	       153	dwarf1.c	FUNCTION_1
0x4000095	              0xc3	                                     ret	       153	dwarf1.c	FUNCTION_1
_bfd_dwarf1_find_nearest_line	WHILE,1:ELSE,2:SWITCH,0:IF,12:CALL,9:functions,0:FOR,1:DO,0	252
0x40009c6	              0x55	                                push rbp	       491	dwarf1.c	FUNCTION_7
0x40009c7	          0x4889e5	                            mov rbp, rsp	       491	dwarf1.c	FUNCTION_7
0x40009ca	              0x53	                                push rbx	       491	dwarf1.c	FUNCTION_7
0x40009cb	    0x4881ecb80000	                           sub rsp, 0xb8	       491	dwarf1.c	FUNCTION_7
0x40009d2	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       491	dwarf1.c	FUNCTION_7
0x40009d9	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       491	dwarf1.c	FUNCTION_7
0x40009e0	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       491	dwarf1.c	FUNCTION_7
0x40009e7	    0x48898d60ffff	             mov qword [rbp - 0xa0], rcx	       491	dwarf1.c	FUNCTION_7
0x40009ee	    0x4c898558ffff	              mov qword [rbp - 0xa8], r8	       491	dwarf1.c	FUNCTION_7
0x40009f5	    0x4c898d50ffff	              mov qword [rbp - 0xb0], r9	       491	dwarf1.c	FUNCTION_7
0x40009fc	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       491	dwarf1.c	FUNCTION_7
0x4000a00	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       491	dwarf1.c	FUNCTION_7
0x4000a07	    0x64488b042528	                mov rax, qword fs:[0x28]	       491	dwarf1.c	FUNCTION_7
0x4000a10	        0x488945e8	             mov qword [rbp - 0x18], rax	       491	dwarf1.c	FUNCTION_7
0x4000a14	            0x31c0	                            xor eax, eax	       491	dwarf1.c	FUNCTION_7
0x4000a16	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       492	dwarf1.c	FUNCTION_7	CALL_1
0x4000a1d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       492	dwarf1.c	FUNCTION_7	CALL_1
0x4000a24	    0x488b80280300	           mov rax, qword [rax + 0x328] 	       492	dwarf1.c	FUNCTION_7	CALL_1
0x4000a2b	        0x48894580	             mov qword [rbp - 0x80], rax	       492	dwarf1.c	FUNCTION_7	CALL_1
0x4000a2f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       497	dwarf1.c	FUNCTION_7
0x4000a36	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       497	dwarf1.c	FUNCTION_7
0x4000a3a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       497	dwarf1.c	FUNCTION_7
0x4000a41	          0x4801d0	                            add rax, rdx	       497	dwarf1.c	FUNCTION_7
0x4000a44	        0x48894590	             mov qword [rbp - 0x70], rax	       497	dwarf1.c	FUNCTION_7
0x4000a48	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       499	dwarf1.c	FUNCTION_7
0x4000a4f	    0x48c700000000	                      mov qword [rax], 0	       499	dwarf1.c	FUNCTION_7
0x4000a56	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       500	dwarf1.c	FUNCTION_7
0x4000a5d	    0x48c700000000	                      mov qword [rax], 0	       500	dwarf1.c	FUNCTION_7
0x4000a64	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       501	dwarf1.c	FUNCTION_7
0x4000a6b	    0xc70000000000	                      mov dword [rax], 0	       501	dwarf1.c	FUNCTION_7
0x4000a71	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       503	dwarf1.c	FUNCTION_7	IF_1
0x4000a76	     0xf8523010000	                           jne 0x4000b9f	       503	dwarf1.c	FUNCTION_7	IF_1
0x4000a7c	    0x48c745984000	           mov qword [rbp - 0x68], 0x40 	       506	dwarf1.c	FUNCTION_7	IF_1
0x4000a84	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       508	dwarf1.c	FUNCTION_7	IF_1	CALL_2
0x4000a8b	    0x488b98f80000	            mov rbx, qword [rax + 0xf8] 	       508	dwarf1.c	FUNCTION_7	IF_1	CALL_2
0x4000a92	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000a96	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000a9d	          0x4889d6	                            mov rsi, rdx	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000aa0	          0x4889c7	                            mov rdi, rax	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000aa3	      0xe800000000	                          call 0x4000aa8	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000aa8	    0x488983280300	            mov qword [rbx + 0x328], rax	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000aaf	    0x488b83280300	           mov rax, qword [rbx + 0x328] 	       508	dwarf1.c	FUNCTION_7	IF_1	CALL_2
0x4000ab6	        0x48894580	             mov qword [rbp - 0x80], rax	       508	dwarf1.c	FUNCTION_7	IF_1	CALL_2
0x4000aba	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       511	dwarf1.c	FUNCTION_7	IF_1	IF_2
0x4000abf	            0x750a	                           jne 0x4000acb	       511	dwarf1.c	FUNCTION_7	IF_1	IF_2
0x4000ac1	      0xb800000000	                              mov eax, 0	       512	dwarf1.c	FUNCTION_7	IF_1	IF_2
0x4000ac6	      0xe90c030000	                           jmp 0x4000dd7	       512	dwarf1.c	FUNCTION_7	IF_1	IF_2
0x4000acb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x4000ad2	      0xbe00000000	                              mov esi, 0	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x4000ad7	          0x4889c7	                            mov rdi, rax	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x4000ada	      0xe800000000	                          call 0x4000adf	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x4000adf	        0x488945a0	             mov qword [rbp - 0x60], rax	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x4000ae3	      0x48837da000	               cmp qword [rbp - 0x60], 0	       515	dwarf1.c	FUNCTION_7	IF_1	IF_3
0x4000ae8	            0x750a	                           jne 0x4000af4	       515	dwarf1.c	FUNCTION_7	IF_1	IF_3
0x4000aea	      0xb800000000	                              mov eax, 0	       519	dwarf1.c	FUNCTION_7	IF_1	IF_3
0x4000aef	      0xe9e3020000	                           jmp 0x4000dd7	       519	dwarf1.c	FUNCTION_7	IF_1	IF_3
0x4000af4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000af8	        0x488b4040	            mov rax, qword [rax + 0x40] 	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000afc	          0x4885c0	                           test rax, rax	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000aff	            0x740a	                            je 0x4000b0b	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b01	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b05	        0x488b4040	            mov rax, qword [rax + 0x40] 	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b09	            0xeb08	                           jmp 0x4000b13	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b0b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b0f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b13	        0x48894598	             mov qword [rbp - 0x68], rax	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b17	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b1e	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b22	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b29	          0x4889d1	                            mov rcx, rdx	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b2c	      0xba00000000	                              mov edx, 0	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b31	          0x4889c7	                            mov rdi, rax	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b34	      0xe800000000	                          call 0x4000b39	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b39	          0x4889c2	                            mov rdx, rax	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b3c	        0x488b4580	             mov rax, qword [rbp - 0x80]	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b40	        0x48895018	             mov qword [rax + 0x18], rdx	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b44	        0x488b4580	             mov rax, qword [rbp - 0x80]	       526	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x4000b48	        0x488b4018	            mov rax, qword [rax + 0x18] 	       526	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x4000b4c	          0x4885c0	                           test rax, rax	       526	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x4000b4f	            0x750a	                           jne 0x4000b5b	       526	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x4000b51	      0xb800000000	                              mov eax, 0	       527	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x4000b56	      0xe97c020000	                           jmp 0x4000dd7	       527	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x4000b5b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       529	dwarf1.c	FUNCTION_7	IF_1
0x4000b5f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       529	dwarf1.c	FUNCTION_7	IF_1
0x4000b63	        0x488b4598	             mov rax, qword [rbp - 0x68]	       529	dwarf1.c	FUNCTION_7	IF_1
0x4000b67	          0x4801c2	                            add rdx, rax	       529	dwarf1.c	FUNCTION_7	IF_1
0x4000b6a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       529	dwarf1.c	FUNCTION_7	IF_1
0x4000b6e	        0x48895020	             mov qword [rax + 0x20], rdx	       529	dwarf1.c	FUNCTION_7	IF_1
0x4000b72	        0x488b4580	             mov rax, qword [rbp - 0x80]	       530	dwarf1.c	FUNCTION_7	IF_1
0x4000b76	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       530	dwarf1.c	FUNCTION_7	IF_1
0x4000b7a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       530	dwarf1.c	FUNCTION_7	IF_1
0x4000b7e	        0x48895038	             mov qword [rax + 0x38], rdx	       530	dwarf1.c	FUNCTION_7	IF_1
0x4000b82	        0x488b4580	             mov rax, qword [rbp - 0x80]	       531	dwarf1.c	FUNCTION_7	IF_1
0x4000b86	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       531	dwarf1.c	FUNCTION_7	IF_1
0x4000b8d	          0x488910	                    mov qword [rax], rdx	       531	dwarf1.c	FUNCTION_7	IF_1
0x4000b90	        0x488b4580	             mov rax, qword [rbp - 0x80]	       532	dwarf1.c	FUNCTION_7	IF_1
0x4000b94	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       532	dwarf1.c	FUNCTION_7	IF_1
0x4000b9b	        0x48895008	                mov qword [rax + 8], rdx	       532	dwarf1.c	FUNCTION_7	IF_1
0x4000b9f	        0x488b4580	             mov rax, qword [rbp - 0x80]	       538	dwarf1.c	FUNCTION_7	IF_5
0x4000ba3	        0x488b4018	            mov rax, qword [rax + 0x18] 	       538	dwarf1.c	FUNCTION_7	IF_5
0x4000ba7	          0x4885c0	                           test rax, rax	       538	dwarf1.c	FUNCTION_7	IF_5
0x4000baa	            0x750a	                           jne 0x4000bb6	       538	dwarf1.c	FUNCTION_7	IF_5
0x4000bac	      0xb800000000	                              mov eax, 0	       539	dwarf1.c	FUNCTION_7	IF_5
0x4000bb1	      0xe921020000	                           jmp 0x4000dd7	       539	dwarf1.c	FUNCTION_7	IF_5
0x4000bb6	        0x488b4580	             mov rax, qword [rbp - 0x80]	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000bba	        0x488b4010	            mov rax, qword [rax + 0x10] 	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000bbe	        0x48894588	             mov qword [rbp - 0x78], rax	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000bc2	            0xeb5b	                           jmp 0x4000c1f	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000bc4	        0x488b4588	             mov rax, qword [rbp - 0x78]	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x4000bc8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x4000bcc	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x4000bd0	            0x7742	                            ja 0x4000c14	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x4000bd2	        0x488b4588	             mov rax, qword [rbp - 0x78]	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x4000bd6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x4000bda	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x4000bde	            0x7634	                           jbe 0x4000c14	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x4000be0	    0x4c8b8548ffff	              mov r8, qword [rbp - 0xb8]	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000be7	    0x488bbd50ffff	             mov rdi, qword [rbp - 0xb0]	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000bee	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000bf5	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000bf9	        0x488b7588	             mov rsi, qword [rbp - 0x78]	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000bfd	        0x488b4580	             mov rax, qword [rbp - 0x80]	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000c01	          0x4d89c1	                              mov r9, r8	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000c04	          0x4989f8	                             mov r8, rdi	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000c07	          0x4889c7	                            mov rdi, rax	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000c0a	      0xe8f7fbffff	  call sym.dwarf1_unit_find_nearest_line	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000c0f	      0xe9c3010000	                           jmp 0x4000dd7	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000c14	        0x488b4588	             mov rax, qword [rbp - 0x78]	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000c18	          0x488b00	                    mov rax, qword [rax]	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000c1b	        0x48894588	             mov qword [rbp - 0x78], rax	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000c1f	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000c24	            0x759e	                           jne 0x4000bc4	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000c26	      0xe98e010000	                           jmp 0x4000db9	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000c2b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c2f	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c33	        0x488b4580	             mov rax, qword [rbp - 0x80]	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c37	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c3b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c3f	          0x488b00	                    mov rax, qword [rax]	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c42	        0x488d75b0	                   lea rsi, [rbp - 0x50]	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c46	          0x4889c7	                            mov rdi, rax	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c49	      0xe8a2f4ffff	                      call sym.parse_die	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c4e	            0x85c0	                           test eax, eax	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c50	            0x750a	                           jne 0x4000c5c	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000c52	      0xb800000000	                              mov eax, 0	       556	dwarf1.c	FUNCTION_7	WHILE_1	IF_7
0x4000c57	      0xe97b010000	                           jmp 0x4000dd7	       556	dwarf1.c	FUNCTION_7	WHILE_1	IF_7
0x4000c5c	         0xfb745e4	            movzx eax, word [rbp - 0x1c]	       558	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c60	        0x6683f811	                            cmp ax, 0x11	       558	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c64	     0xf8516010000	                           jne 0x4000d80	       558	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c6a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       560	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c6e	          0x4889c7	                            mov rdi, rax	       560	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c71	      0xe8caf3ffff	              call sym.alloc_dwarf1_unit	       560	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c76	        0x488945a8	             mov qword [rbp - 0x58], rax	       560	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c7a	      0x48837da800	               cmp qword [rbp - 0x58], 0	       562	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_9
0x4000c7f	            0x750a	                           jne 0x4000c8b	       562	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_9
0x4000c81	      0xb800000000	                              mov eax, 0	       563	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_9
0x4000c86	      0xe94c010000	                           jmp 0x4000dd7	       563	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_9
0x4000c8b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       565	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c8f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       565	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c93	        0x48895008	                mov qword [rax + 8], rdx	       565	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c97	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       566	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c9b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       566	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000c9f	        0x48895010	             mov qword [rax + 0x10], rdx	       566	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000ca3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       567	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000ca7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       567	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000cab	        0x48895018	             mov qword [rax + 0x18], rdx	       567	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000caf	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       568	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000cb2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       568	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000cb6	          0x895020	             mov dword [rax + 0x20], edx	       568	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000cb9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       569	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000cbd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       569	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000cc1	        0x48895028	             mov qword [rax + 0x28], rdx	       569	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000cc5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       573	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cc9	          0x4885c0	                           test rax, rax	       573	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000ccc	            0x7459	                            je 0x4000d27	       573	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cce	        0x488b4580	             mov rax, qword [rbp - 0x80]	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cd2	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cd6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cda	          0x4801c2	                            add rdx, rax	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cdd	        0x488b4580	             mov rax, qword [rbp - 0x80]	       575	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000ce1	        0x488b4020	            mov rax, qword [rax + 0x20] 	       575	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000ce5	          0x4839c2	                            cmp rdx, rax	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000ce8	            0x733d	                           jae 0x4000d27	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cea	        0x488b4580	             mov rax, qword [rbp - 0x80]	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cee	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cf2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cf6	        0x488d0c02	                    lea rcx, [rdx + rax]	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cfa	        0x488b4580	             mov rax, qword [rbp - 0x80]	       577	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000cfe	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       577	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d02	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       577	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d06	          0x4801d0	                            add rax, rdx	       577	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d09	          0x4839c1	                            cmp rcx, rax	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d0c	            0x7419	                            je 0x4000d27	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d0e	        0x488b4580	             mov rax, qword [rbp - 0x80]	       578	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d12	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       578	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d16	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       578	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d1a	          0x4801c2	                            add rdx, rax	       578	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d1d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       578	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d21	        0x48895030	             mov qword [rax + 0x30], rdx	       578	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d25	            0xeb0c	                           jmp 0x4000d33	       578	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000d27	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       580	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	ELSE_1
0x4000d2b	    0x48c740300000	               mov qword [rax + 0x30], 0	       580	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	ELSE_1
0x4000d33	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000d37	        0x488b4010	            mov rax, qword [rax + 0x10] 	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000d3b	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000d3f	            0x773f	                            ja 0x4000d80	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000d41	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000d45	        0x488b4018	            mov rax, qword [rax + 0x18] 	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000d49	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000d4d	            0x7631	                           jbe 0x4000d80	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000d4f	    0x4c8b8548ffff	              mov r8, qword [rbp - 0xb8]	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d56	    0x488bbd50ffff	             mov rdi, qword [rbp - 0xb0]	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d5d	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d64	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d68	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d6c	        0x488b4580	             mov rax, qword [rbp - 0x80]	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d70	          0x4d89c1	                              mov r9, r8	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d73	          0x4989f8	                             mov r8, rdi	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d76	          0x4889c7	                            mov rdi, rax	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d79	      0xe888faffff	  call sym.dwarf1_unit_find_nearest_line	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d7e	            0xeb57	                           jmp 0x4000dd7	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000d80	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000d84	          0x4885c0	                           test rax, rax	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000d87	            0x7419	                            je 0x4000da2	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000d89	        0x488b4580	             mov rax, qword [rbp - 0x80]	       590	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000d8d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       590	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000d91	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       590	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000d95	          0x4801c2	                            add rdx, rax	       590	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000d98	        0x488b4580	             mov rax, qword [rbp - 0x80]	       590	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000d9c	        0x48895038	             mov qword [rax + 0x38], rdx	       590	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000da0	            0xeb17	                           jmp 0x4000db9	       590	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000da2	        0x488b4580	             mov rax, qword [rbp - 0x80]	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x4000da6	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x4000daa	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x4000dae	          0x4801c2	                            add rdx, rax	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x4000db1	        0x488b4580	             mov rax, qword [rbp - 0x80]	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x4000db5	        0x48895038	             mov qword [rax + 0x38], rdx	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x4000db9	        0x488b4580	             mov rax, qword [rbp - 0x80]	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000dbd	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000dc1	        0x488b4580	             mov rax, qword [rbp - 0x80]	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000dc5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000dc9	          0x4839c2	                            cmp rdx, rax	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000dcc	     0xf8259feffff	                            jb 0x4000c2b	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000dd2	      0xb800000000	                              mov eax, 0	       595	dwarf1.c	FUNCTION_7
0x4000dd7	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       596	dwarf1.c	FUNCTION_7
0x4000ddb	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       596	dwarf1.c	FUNCTION_7
0x4000de4	            0x7405	                            je 0x4000deb	       596	dwarf1.c	FUNCTION_7
0x4000de6	      0xe800000000	                          call 0x4000deb	       596	dwarf1.c	FUNCTION_7
0x4000deb	    0x4881c4b80000	                           add rsp, 0xb8	       596	dwarf1.c	FUNCTION_7
0x4000df2	              0x5b	                                 pop rbx	       596	dwarf1.c	FUNCTION_7
0x4000df3	              0x5d	                                 pop rbp	       596	dwarf1.c	FUNCTION_7
0x4000df4	              0xc3	                                     ret	       596	dwarf1.c	FUNCTION_7
parse_line_table	WHILE,0:ELSE,0:SWITCH,0:IF,6:CALL,7:functions,0:FOR,1:DO,0	175
0x4000445	              0x55	                                push rbp	       296	dwarf1.c	FUNCTION_4
0x4000446	          0x4889e5	                            mov rbp, rsp	       296	dwarf1.c	FUNCTION_4
0x4000449	              0x53	                                push rbx	       296	dwarf1.c	FUNCTION_4
0x400044a	        0x4883ec58	                           sub rsp, 0x58	       296	dwarf1.c	FUNCTION_4
0x400044e	        0x48897da8	             mov qword [rbp - 0x58], rdi	       296	dwarf1.c	FUNCTION_4
0x4000452	        0x488975a0	             mov qword [rbp - 0x60], rsi	       296	dwarf1.c	FUNCTION_4
0x4000456	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       300	dwarf1.c	FUNCTION_4	IF_1
0x400045a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       300	dwarf1.c	FUNCTION_4	IF_1
0x400045e	          0x4885c0	                           test rax, rax	       300	dwarf1.c	FUNCTION_4	IF_1
0x4000461	     0xf85a8000000	                           jne 0x400050f	       300	dwarf1.c	FUNCTION_4	IF_1
0x4000467	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x400046b	          0x488b00	                    mov rax, qword [rax]	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x400046e	      0xbe00000000	                              mov esi, 0	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x4000473	          0x4889c7	                            mov rdi, rax	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x4000476	      0xe800000000	                          call 0x400047b	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x400047b	        0x488945c8	             mov qword [rbp - 0x38], rax	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x400047f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       306	dwarf1.c	FUNCTION_4	IF_1	IF_2
0x4000484	            0x750a	                           jne 0x4000490	       306	dwarf1.c	FUNCTION_4	IF_1	IF_2
0x4000486	      0xb800000000	                              mov eax, 0	       307	dwarf1.c	FUNCTION_4	IF_1	IF_2
0x400048b	      0xe944020000	                           jmp 0x40006d4	       307	dwarf1.c	FUNCTION_4	IF_1	IF_2
0x4000490	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       309	dwarf1.c	FUNCTION_4	IF_1
0x4000494	        0x488b4040	            mov rax, qword [rax + 0x40] 	       309	dwarf1.c	FUNCTION_4	IF_1
0x4000498	          0x4885c0	                           test rax, rax	       309	dwarf1.c	FUNCTION_4	IF_1
0x400049b	            0x740a	                            je 0x40004a7	       309	dwarf1.c	FUNCTION_4	IF_1
0x400049d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       309	dwarf1.c	FUNCTION_4	IF_1
0x40004a1	        0x488b4040	            mov rax, qword [rax + 0x40] 	       309	dwarf1.c	FUNCTION_4	IF_1
0x40004a5	            0xeb08	                           jmp 0x40004af	       309	dwarf1.c	FUNCTION_4	IF_1
0x40004a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       309	dwarf1.c	FUNCTION_4	IF_1
0x40004ab	        0x488b4038	            mov rax, qword [rax + 0x38] 	       309	dwarf1.c	FUNCTION_4	IF_1
0x40004af	        0x488945d0	             mov qword [rbp - 0x30], rax	       309	dwarf1.c	FUNCTION_4	IF_1
0x40004b3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004b7	        0x488b5008	                mov rdx, qword [rax + 8]	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004bb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004bf	          0x488b00	                    mov rax, qword [rax]	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004c2	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004c6	          0x4889d1	                            mov rcx, rdx	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004c9	      0xba00000000	                              mov edx, 0	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004ce	          0x4889c7	                            mov rdi, rax	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004d1	      0xe800000000	                          call 0x40004d6	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004d6	          0x4889c2	                            mov rdx, rax	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004d9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004dd	        0x48895028	             mov qword [rax + 0x28], rdx	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40004e1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       314	dwarf1.c	FUNCTION_4	IF_1	IF_3
0x40004e5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       314	dwarf1.c	FUNCTION_4	IF_1	IF_3
0x40004e9	          0x4885c0	                           test rax, rax	       314	dwarf1.c	FUNCTION_4	IF_1	IF_3
0x40004ec	            0x750a	                           jne 0x40004f8	       314	dwarf1.c	FUNCTION_4	IF_1	IF_3
0x40004ee	      0xb800000000	                              mov eax, 0	       315	dwarf1.c	FUNCTION_4	IF_1	IF_3
0x40004f3	      0xe9dc010000	                           jmp 0x40006d4	       315	dwarf1.c	FUNCTION_4	IF_1	IF_3
0x40004f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       317	dwarf1.c	FUNCTION_4	IF_1
0x40004fc	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       317	dwarf1.c	FUNCTION_4	IF_1
0x4000500	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       317	dwarf1.c	FUNCTION_4	IF_1
0x4000504	          0x4801c2	                            add rdx, rax	       317	dwarf1.c	FUNCTION_4	IF_1
0x4000507	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       317	dwarf1.c	FUNCTION_4	IF_1
0x400050b	        0x48895030	             mov qword [rax + 0x30], rdx	       317	dwarf1.c	FUNCTION_4	IF_1
0x400050f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       320	dwarf1.c	FUNCTION_4
0x4000513	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       320	dwarf1.c	FUNCTION_4
0x4000517	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       320	dwarf1.c	FUNCTION_4
0x400051b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       320	dwarf1.c	FUNCTION_4
0x400051f	          0x4801d0	                            add rax, rdx	       320	dwarf1.c	FUNCTION_4
0x4000522	        0x488945b8	             mov qword [rbp - 0x48], rax	       320	dwarf1.c	FUNCTION_4
0x4000526	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       321	dwarf1.c	FUNCTION_4	IF_4
0x400052a	        0x488d5008	                      lea rdx, [rax + 8]	       321	dwarf1.c	FUNCTION_4	IF_4
0x400052e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       321	dwarf1.c	FUNCTION_4	IF_4
0x4000532	        0x488b4030	            mov rax, qword [rax + 0x30] 	       321	dwarf1.c	FUNCTION_4	IF_4
0x4000536	          0x4839c2	                            cmp rdx, rax	       321	dwarf1.c	FUNCTION_4	IF_4
0x4000539	     0xf8790010000	                            ja 0x40006cf	       321	dwarf1.c	FUNCTION_4	IF_4
0x400053f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000543	          0x488b00	                    mov rax, qword [rax]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000546	        0x488b4008	                mov rax, qword [rax + 8]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x400054a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x400054e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000552	          0x4889d7	                            mov rdi, rdx	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000555	            0xffd0	                                call rax	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000557	          0x4889c2	                            mov rdx, rax	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x400055a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x400055e	          0x4801d0	                            add rax, rdx	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000561	        0x488945d8	             mov qword [rbp - 0x28], rax	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000565	      0x488345b804	               add qword [rbp - 0x48], 4	       330	dwarf1.c	FUNCTION_4	IF_4
0x400056a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x400056e	          0x488b00	                    mov rax, qword [rax]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x4000571	        0x488b4008	                mov rax, qword [rax + 8]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x4000575	        0x488b4038	            mov rax, qword [rax + 0x38] 	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x4000579	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x400057d	          0x4889d7	                            mov rdi, rdx	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x4000580	            0xffd0	                                call rax	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x4000582	        0x488945e0	             mov qword [rbp - 0x20], rax	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x4000586	      0x488345b804	               add qword [rbp - 0x48], 4	       334	dwarf1.c	FUNCTION_4	IF_4
0x400058b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       338	dwarf1.c	FUNCTION_4	IF_4
0x400058f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       338	dwarf1.c	FUNCTION_4	IF_4
0x4000593	          0x4889d1	                            mov rcx, rdx	       338	dwarf1.c	FUNCTION_4	IF_4
0x4000596	          0x4829c1	                            sub rcx, rax	       338	dwarf1.c	FUNCTION_4	IF_4
0x4000599	    0x48ba67666666	          movabs rdx, 0x6666666666666667	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005a3	          0x4889c8	                            mov rax, rcx	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005a6	          0x48f7ea	                                imul rdx	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005a9	        0x48c1fa02	                              sar rdx, 2	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005ad	          0x4889c8	                            mov rax, rcx	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005b0	        0x48c1f83f	                           sar rax, 0x3f	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005b4	          0x4829c2	                            sub rdx, rax	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005b7	          0x4889d0	                            mov rax, rdx	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005ba	          0x4889c2	                            mov rdx, rax	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005bd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005c1	        0x48895038	             mov qword [rax + 0x38], rdx	       338	dwarf1.c	FUNCTION_4	IF_4
0x40005c5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       341	dwarf1.c	FUNCTION_4	IF_4
0x40005c9	        0x488b4038	            mov rax, qword [rax + 0x38] 	       341	dwarf1.c	FUNCTION_4	IF_4
0x40005cd	        0x48c1e004	                              shl rax, 4	       341	dwarf1.c	FUNCTION_4	IF_4
0x40005d1	        0x488945e8	             mov qword [rbp - 0x18], rax	       341	dwarf1.c	FUNCTION_4	IF_4
0x40005d5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40005d9	          0x488b00	                    mov rax, qword [rax]	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40005dc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40005e0	          0x4889d6	                            mov rsi, rdx	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40005e3	          0x4889c7	                            mov rdi, rax	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40005e6	      0xe800000000	                          call 0x40005eb	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40005eb	          0x4889c2	                            mov rdx, rax	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40005ee	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40005f2	        0x48895040	             mov qword [rax + 0x40], rdx	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40005f6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       344	dwarf1.c	FUNCTION_4	IF_4	IF_5
0x40005fa	        0x488b4040	            mov rax, qword [rax + 0x40] 	       344	dwarf1.c	FUNCTION_4	IF_4	IF_5
0x40005fe	          0x4885c0	                           test rax, rax	       344	dwarf1.c	FUNCTION_4	IF_4	IF_5
0x4000601	            0x750a	                           jne 0x400060d	       344	dwarf1.c	FUNCTION_4	IF_4	IF_5
0x4000603	      0xb800000000	                              mov eax, 0	       345	dwarf1.c	FUNCTION_4	IF_4	IF_5
0x4000608	      0xe9c7000000	                           jmp 0x40006d4	       345	dwarf1.c	FUNCTION_4	IF_4	IF_5
0x400060d	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000615	      0xe9a3000000	                           jmp 0x40006bd	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400061a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x400061e	        0x488d500a	                    lea rdx, [rax + 0xa]	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000622	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000626	        0x488b4030	            mov rax, qword [rax + 0x30] 	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x400062a	          0x4839c2	                            cmp rdx, rax	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x400062d	            0x7611	                           jbe 0x4000640	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x400062f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       351	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000633	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       351	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000637	        0x48895038	             mov qword [rax + 0x38], rdx	       351	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x400063b	      0xe98f000000	                           jmp 0x40006cf	       352	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000640	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000644	        0x488b4040	            mov rax, qword [rax + 0x40] 	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000648	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400064c	        0x48c1e204	                              shl rdx, 4	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000650	        0x488d1c10	                    lea rbx, [rax + rdx]	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000654	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x4000658	          0x488b00	                    mov rax, qword [rax]	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x400065b	        0x488b4008	                mov rax, qword [rax + 8]	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x400065f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x4000663	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x4000667	          0x4889d7	                            mov rdi, rdx	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x400066a	            0xffd0	                                call rax	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x400066c	        0x48894308	                mov qword [rbx + 8], rax	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x4000670	      0x488345b804	               add qword [rbp - 0x48], 4	       357	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000675	      0x488345b802	               add qword [rbp - 0x48], 2	       360	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400067a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       363	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400067e	        0x488b4040	            mov rax, qword [rax + 0x40] 	       363	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000682	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       363	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000686	        0x48c1e204	                              shl rdx, 4	       363	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400068a	        0x488d1c10	                    lea rbx, [rax + rdx]	       363	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400068e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x4000692	          0x488b00	                    mov rax, qword [rax]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x4000695	        0x488b4008	                mov rax, qword [rax + 8]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x4000699	        0x488b4038	            mov rax, qword [rax + 0x38] 	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x400069d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x40006a1	          0x4889d7	                            mov rdi, rdx	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x40006a4	            0xffd0	                                call rax	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x40006a6	          0x4889c2	                            mov rdx, rax	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x40006a9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x40006ad	          0x4801d0	                            add rax, rdx	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x40006b0	          0x488903	                    mov qword [rbx], rax	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x40006b3	      0x488345b804	               add qword [rbp - 0x48], 4	       365	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40006b8	      0x488345c001	               add qword [rbp - 0x40], 1	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40006bd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40006c1	        0x488b4038	            mov rax, qword [rax + 0x38] 	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40006c5	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40006c9	     0xf874bffffff	                            ja 0x400061a	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40006cf	      0xb801000000	                              mov eax, 1	       369	dwarf1.c	FUNCTION_4
0x40006d4	        0x4883c458	                           add rsp, 0x58	       370	dwarf1.c	FUNCTION_4
0x40006d8	              0x5b	                                 pop rbx	       370	dwarf1.c	FUNCTION_4
0x40006d9	              0x5d	                                 pop rbp	       370	dwarf1.c	FUNCTION_4
0x40006da	              0xc3	                                     ret	       370	dwarf1.c	FUNCTION_4
