C_alloca	CALL,4:SWITCH,0:ELSE,1:DO,0:IF,4:functions,0:WHILE,0:FOR,1	52
0x4000040	              0x55	                                push rbp	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000041	          0x4889e5	                            mov rbp, rsp	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000044	            0x4155	                                push r13	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000046	            0x4154	                                push r12	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000048	              0x53	                                push rbx	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000049	        0x4883ec28	                           sub rsp, 0x28	       163	alloca.c	ELSE_2	FUNCTION_2
0x400004d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000051	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	alloca.c	ELSE_2	FUNCTION_2
0x400005a	        0x488945d8	             mov qword [rbp - 0x28], rax	       163	alloca.c	ELSE_2	FUNCTION_2
0x400005e	            0x31c0	                            xor eax, eax	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000060	        0x4c8d65d7	                   lea r12, [rbp - 0x29]	       165	alloca.c	ELSE_2	FUNCTION_2
0x4000064	    0x488b1d000000	            mov rbx, qword [0x0400006b] 	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x400006b	            0xeb17	                           jmp 0x4000084	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x400006d	        0x488b4308	                mov rax, qword [rbx + 8]	       180	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000071	          0x4c39e0	                            cmp rax, r12	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000074	            0x7315	                           jae 0x400008b	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000076	          0x4c8b2b	                    mov r13, qword [rbx]	       182	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000079	          0x4889df	                            mov rdi, rbx	       184	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2	CALL_2
0x400007c	      0xe800000000	                          call 0x4000081	       184	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4000081	          0x4c89eb	                            mov rbx, r13	       186	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000084	          0x4885db	                           test rbx, rbx	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000087	            0x75e4	                           jne 0x400006d	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000089	            0xeb01	                           jmp 0x400008c	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x400008b	              0x90	                                     nop	       189	alloca.c	ELSE_2	FUNCTION_2	ELSE_1
0x400008c	    0x48891d000000	            mov qword [0x04000093], rbx 	       191	alloca.c	ELSE_2	FUNCTION_2
0x4000093	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       194	alloca.c	ELSE_2	FUNCTION_2	IF_3
0x4000098	            0x7507	                           jne 0x40000a1	       194	alloca.c	ELSE_2	FUNCTION_2	IF_3
0x400009a	      0xb800000000	                              mov eax, 0	       195	alloca.c	ELSE_2	FUNCTION_2	IF_3
0x400009f	            0xeb36	                           jmp 0x40000d7	       195	alloca.c	ELSE_2	FUNCTION_2	IF_3
0x40000a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       200	alloca.c	ELSE_2	FUNCTION_2	CALL_3
0x40000a5	        0x4883c010	                           add rax, 0x10	       200	alloca.c	ELSE_2	FUNCTION_2	CALL_3
0x40000a9	          0x4889c7	                            mov rdi, rax	       200	alloca.c	ELSE_2	FUNCTION_2	CALL_3
0x40000ac	      0xe800000000	                          call 0x40000b1	       200	alloca.c	ELSE_2	FUNCTION_2	CALL_3
0x40000b1	          0x4889c3	                            mov rbx, rax	       200	alloca.c	ELSE_2	FUNCTION_2	CALL_3
0x40000b4	          0x4885db	                           test rbx, rbx	       203	alloca.c	ELSE_2	FUNCTION_2	IF_4
0x40000b7	            0x7505	                           jne 0x40000be	       203	alloca.c	ELSE_2	FUNCTION_2	IF_4
0x40000b9	      0xe800000000	                          call 0x40000be	       204	alloca.c	ELSE_2	FUNCTION_2	CALL_4
0x40000be	    0x488b05000000	            mov rax, qword [0x040000c5] 	       206	alloca.c	ELSE_2	FUNCTION_2
0x40000c5	          0x488903	                    mov qword [rbx], rax	       206	alloca.c	ELSE_2	FUNCTION_2
0x40000c8	        0x4c896308	                mov qword [rbx + 8], r12	       207	alloca.c	ELSE_2	FUNCTION_2
0x40000cc	    0x48891d000000	            mov qword [0x040000d3], rbx 	       209	alloca.c	ELSE_2	FUNCTION_2
0x40000d3	        0x488d4310	                   lea rax, [rbx + 0x10]	       213	alloca.c	ELSE_2	FUNCTION_2
0x40000d7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000db	    0x644833142528	                xor rdx, qword fs:[0x28]	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000e4	            0x7405	                            je 0x40000eb	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000e6	      0xe800000000	                          call 0x40000eb	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000eb	        0x4883c428	                           add rsp, 0x28	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000ef	              0x5b	                                 pop rbx	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000f0	            0x415c	                                 pop r12	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000f2	            0x415d	                                 pop r13	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000f4	              0x5d	                                 pop rbp	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000f5	              0xc3	                                     ret	       215	alloca.c	ELSE_2	FUNCTION_2
