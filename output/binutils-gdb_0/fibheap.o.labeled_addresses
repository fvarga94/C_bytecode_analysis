fibheap_ins_root	WHILE,0:IF,1:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0	27
0x40006ba	              0x55	                                push rbp	       328	fibheap.c	FUNCTION_17
0x40006bb	          0x4889e5	                            mov rbp, rsp	       328	fibheap.c	FUNCTION_17
0x40006be	        0x4883ec10	                           sub rsp, 0x10	       328	fibheap.c	FUNCTION_17
0x40006c2	        0x48897df8	                mov qword [rbp - 8], rdi	       328	fibheap.c	FUNCTION_17
0x40006c6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       328	fibheap.c	FUNCTION_17
0x40006ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       331	fibheap.c	FUNCTION_17	IF_1
0x40006ce	        0x488b4010	            mov rax, qword [rax + 0x10] 	       331	fibheap.c	FUNCTION_17	IF_1
0x40006d2	          0x4885c0	                           test rax, rax	       331	fibheap.c	FUNCTION_17	IF_1
0x40006d5	            0x7526	                           jne 0x40006fd	       331	fibheap.c	FUNCTION_17	IF_1
0x40006d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       333	fibheap.c	FUNCTION_17	IF_1
0x40006db	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       333	fibheap.c	FUNCTION_17	IF_1
0x40006df	        0x48895010	             mov qword [rax + 0x10], rdx	       333	fibheap.c	FUNCTION_17	IF_1
0x40006e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       334	fibheap.c	FUNCTION_17	IF_1
0x40006e7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       334	fibheap.c	FUNCTION_17	IF_1
0x40006eb	        0x48895010	             mov qword [rax + 0x10], rdx	       334	fibheap.c	FUNCTION_17	IF_1
0x40006ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       335	fibheap.c	FUNCTION_17	IF_1
0x40006f3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       335	fibheap.c	FUNCTION_17	IF_1
0x40006f7	        0x48895018	             mov qword [rax + 0x18], rdx	       335	fibheap.c	FUNCTION_17	IF_1
0x40006fb	            0xeb17	                           jmp 0x4000714	       336	fibheap.c	FUNCTION_17	IF_1
0x40006fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       341	fibheap.c	FUNCTION_17	CALL_1
0x4000701	        0x488b4010	            mov rax, qword [rax + 0x10] 	       341	fibheap.c	FUNCTION_17	CALL_1
0x4000705	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       341	fibheap.c	FUNCTION_17	CALL_1
0x4000709	          0x4889d6	                            mov rsi, rdx	       341	fibheap.c	FUNCTION_17	CALL_1
0x400070c	          0x4889c7	                            mov rdi, rax	       341	fibheap.c	FUNCTION_17	CALL_1
0x400070f	      0xe821040000	           call sym.fibnode_insert_after	       341	fibheap.c	FUNCTION_17	CALL_1
0x4000714	              0xc9	                                   leave	       342	fibheap.c	FUNCTION_17
0x4000715	              0xc3	                                     ret	       342	fibheap.c	FUNCTION_17
fibheap_replace_key_data	WHILE,0:IF,4:FOR,0:functions,0:SWITCH,0:CALL,5:DO,0:ELSE,0	76
0x400037b	              0x55	                                push rbp	       200	fibheap.c	FUNCTION_10
0x400037c	          0x4889e5	                            mov rbp, rsp	       200	fibheap.c	FUNCTION_10
0x400037f	        0x4883ec40	                           sub rsp, 0x40	       200	fibheap.c	FUNCTION_10
0x4000383	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       200	fibheap.c	FUNCTION_10
0x4000387	        0x488975d0	             mov qword [rbp - 0x30], rsi	       200	fibheap.c	FUNCTION_10
0x400038b	        0x488955c8	             mov qword [rbp - 0x38], rdx	       200	fibheap.c	FUNCTION_10
0x400038f	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       200	fibheap.c	FUNCTION_10
0x4000393	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       208	fibheap.c	FUNCTION_10	IF_1	CALL_1
0x4000397	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       208	fibheap.c	FUNCTION_10	IF_1	CALL_1
0x400039b	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       208	fibheap.c	FUNCTION_10	IF_1	CALL_1
0x400039f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       208	fibheap.c	FUNCTION_10	IF_1	CALL_1
0x40003a3	          0x4889c7	                            mov rdi, rax	       208	fibheap.c	FUNCTION_10	IF_1	CALL_1
0x40003a6	      0xe832fdffff	              call sym.fibheap_comp_data	       208	fibheap.c	FUNCTION_10	IF_1	CALL_1
0x40003ab	            0x85c0	                           test eax, eax	       208	fibheap.c	FUNCTION_10	IF_1	CALL_1
0x40003ad	            0x7e0a	                           jle 0x40003b9	       208	fibheap.c	FUNCTION_10	IF_1	CALL_1
0x40003af	      0xb800000000	                              mov eax, 0	       209	fibheap.c	FUNCTION_10	IF_1
0x40003b4	      0xe9d6000000	                           jmp 0x400048f	       209	fibheap.c	FUNCTION_10	IF_1
0x40003b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       211	fibheap.c	FUNCTION_10
0x40003bd	        0x488b4028	            mov rax, qword [rax + 0x28] 	       211	fibheap.c	FUNCTION_10
0x40003c1	        0x488945e8	             mov qword [rbp - 0x18], rax	       211	fibheap.c	FUNCTION_10
0x40003c5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       212	fibheap.c	FUNCTION_10
0x40003c9	        0x488b4020	            mov rax, qword [rax + 0x20] 	       212	fibheap.c	FUNCTION_10
0x40003cd	        0x488945f0	             mov qword [rbp - 0x10], rax	       212	fibheap.c	FUNCTION_10
0x40003d1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       213	fibheap.c	FUNCTION_10
0x40003d5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       213	fibheap.c	FUNCTION_10
0x40003d9	        0x48895028	             mov qword [rax + 0x28], rdx	       213	fibheap.c	FUNCTION_10
0x40003dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       214	fibheap.c	FUNCTION_10
0x40003e1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       214	fibheap.c	FUNCTION_10
0x40003e5	        0x48895020	             mov qword [rax + 0x20], rdx	       214	fibheap.c	FUNCTION_10
0x40003e9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       215	fibheap.c	FUNCTION_10
0x40003ed	          0x488b00	                    mov rax, qword [rax]	       215	fibheap.c	FUNCTION_10
0x40003f0	        0x488945f8	                mov qword [rbp - 8], rax	       215	fibheap.c	FUNCTION_10
0x40003f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       220	fibheap.c	FUNCTION_10	IF_2
0x40003f8	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       220	fibheap.c	FUNCTION_10	IF_2
0x40003fc	            0x7516	                           jne 0x4000414	       220	fibheap.c	FUNCTION_10	IF_2
0x40003fe	    0x48b800000000	          movabs rax, 0x8000000000000000	       220	fibheap.c	FUNCTION_10	IF_2
0x4000408	        0x483945f0	            cmp qword [rbp - 0x10], rax 	       220	fibheap.c	FUNCTION_10	IF_2
0x400040c	            0x7406	                            je 0x4000414	       220	fibheap.c	FUNCTION_10	IF_2
0x400040e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       221	fibheap.c	FUNCTION_10	IF_2
0x4000412	            0xeb7b	                           jmp 0x400048f	       221	fibheap.c	FUNCTION_10	IF_2
0x4000414	      0x48837df800	                  cmp qword [rbp - 8], 0	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000419	            0x7445	                            je 0x4000460	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x400041b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x400041f	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000423	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000427	          0x4889ce	                            mov rsi, rcx	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x400042a	          0x4889c7	                            mov rdi, rax	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x400042d	      0xe85cfcffff	                call sym.fibheap_compare	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000432	            0x85c0	                           test eax, eax	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000434	            0x7f2a	                            jg 0x4000460	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000436	        0x488b55f8	                mov rdx, qword [rbp - 8]	       228	fibheap.c	FUNCTION_10	IF_3	CALL_3
0x400043a	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       228	fibheap.c	FUNCTION_10	IF_3	CALL_3
0x400043e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       228	fibheap.c	FUNCTION_10	IF_3	CALL_3
0x4000442	          0x4889ce	                            mov rsi, rcx	       228	fibheap.c	FUNCTION_10	IF_3	CALL_3
0x4000445	          0x4889c7	                            mov rdi, rax	       228	fibheap.c	FUNCTION_10	IF_3	CALL_3
0x4000448	      0xe807060000	                    call sym.fibheap_cut	       228	fibheap.c	FUNCTION_10	IF_3	CALL_3
0x400044d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	fibheap.c	FUNCTION_10	IF_3	CALL_4
0x4000451	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       229	fibheap.c	FUNCTION_10	IF_3	CALL_4
0x4000455	          0x4889d6	                            mov rsi, rdx	       229	fibheap.c	FUNCTION_10	IF_3	CALL_4
0x4000458	          0x4889c7	                            mov rdi, rax	       229	fibheap.c	FUNCTION_10	IF_3	CALL_4
0x400045b	      0xe871060000	          call sym.fibheap_cascading_cut	       229	fibheap.c	FUNCTION_10	IF_3	CALL_4
0x4000460	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x4000464	        0x488b5008	                mov rdx, qword [rax + 8]	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x4000468	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x400046c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x4000470	          0x4889ce	                            mov rsi, rcx	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x4000473	          0x4889c7	                            mov rdi, rax	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x4000476	      0xe813fcffff	                call sym.fibheap_compare	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x400047b	            0x85c0	                           test eax, eax	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x400047d	            0x7f0c	                            jg 0x400048b	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x400047f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       233	fibheap.c	FUNCTION_10	IF_4
0x4000483	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       233	fibheap.c	FUNCTION_10	IF_4
0x4000487	        0x48895008	                mov qword [rax + 8], rdx	       233	fibheap.c	FUNCTION_10	IF_4
0x400048b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       235	fibheap.c	FUNCTION_10
0x400048f	              0xc9	                                   leave	       236	fibheap.c	FUNCTION_10
0x4000490	              0xc3	                                     ret	       236	fibheap.c	FUNCTION_10
fibheap_empty	WHILE,0:IF,0:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,0	10
0x40005bf	              0x55	                                push rbp	       285	fibheap.c	FUNCTION_15
0x40005c0	          0x4889e5	                            mov rbp, rsp	       285	fibheap.c	FUNCTION_15
0x40005c3	        0x48897df8	                mov qword [rbp - 8], rdi	       285	fibheap.c	FUNCTION_15
0x40005c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	fibheap.c	FUNCTION_15
0x40005cb	          0x488b00	                    mov rax, qword [rax]	       286	fibheap.c	FUNCTION_15
0x40005ce	          0x4885c0	                           test rax, rax	       286	fibheap.c	FUNCTION_15
0x40005d1	           0xf94c0	                                 sete al	       286	fibheap.c	FUNCTION_15
0x40005d4	           0xfb6c0	                           movzx eax, al	       286	fibheap.c	FUNCTION_15
0x40005d7	              0x5d	                                 pop rbp	       287	fibheap.c	FUNCTION_15
0x40005d8	              0xc3	                                     ret	       287	fibheap.c	FUNCTION_15
fibheap_min_key	WHILE,0:IF,1:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,0	14
0x40001fd	              0x55	                                push rbp	       135	fibheap.c	FUNCTION_7
0x40001fe	          0x4889e5	                            mov rbp, rsp	       135	fibheap.c	FUNCTION_7
0x4000201	        0x48897df8	                mov qword [rbp - 8], rdi	       135	fibheap.c	FUNCTION_7
0x4000205	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	fibheap.c	FUNCTION_7	IF_1
0x4000209	        0x488b4008	                mov rax, qword [rax + 8]	       137	fibheap.c	FUNCTION_7	IF_1
0x400020d	          0x4885c0	                           test rax, rax	       137	fibheap.c	FUNCTION_7	IF_1
0x4000210	            0x7507	                           jne 0x4000219	       137	fibheap.c	FUNCTION_7	IF_1
0x4000212	      0xb800000000	                              mov eax, 0	       138	fibheap.c	FUNCTION_7	IF_1
0x4000217	            0xeb0c	                           jmp 0x4000225	       138	fibheap.c	FUNCTION_7	IF_1
0x4000219	        0x488b45f8	                mov rax, qword [rbp - 8]	       139	fibheap.c	FUNCTION_7
0x400021d	        0x488b4008	                mov rax, qword [rax + 8]	       139	fibheap.c	FUNCTION_7
0x4000221	        0x488b4020	            mov rax, qword [rax + 0x20] 	       139	fibheap.c	FUNCTION_7
0x4000225	              0x5d	                                 pop rbp	       140	fibheap.c	FUNCTION_7
0x4000226	              0xc3	                                     ret	       140	fibheap.c	FUNCTION_7
fibheap_union	WHILE,0:IF,3:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,0	70
0x4000227	              0x55	                                push rbp	       145	fibheap.c	FUNCTION_8
0x4000228	          0x4889e5	                            mov rbp, rsp	       145	fibheap.c	FUNCTION_8
0x400022b	        0x4883ec30	                           sub rsp, 0x30	       145	fibheap.c	FUNCTION_8
0x400022f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       145	fibheap.c	FUNCTION_8
0x4000233	        0x488975d0	             mov qword [rbp - 0x30], rsi	       145	fibheap.c	FUNCTION_8
0x4000237	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       149	fibheap.c	FUNCTION_8	IF_1
0x400023b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       149	fibheap.c	FUNCTION_8	IF_1
0x400023f	        0x488945e8	             mov qword [rbp - 0x18], rax	       149	fibheap.c	FUNCTION_8	IF_1
0x4000243	      0x48837de800	               cmp qword [rbp - 0x18], 0	       149	fibheap.c	FUNCTION_8	IF_1
0x4000248	            0x7515	                           jne 0x400025f	       149	fibheap.c	FUNCTION_8	IF_1
0x400024a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       151	fibheap.c	FUNCTION_8	IF_1	CALL_1
0x400024e	          0x4889c7	                            mov rdi, rax	       151	fibheap.c	FUNCTION_8	IF_1	CALL_1
0x4000251	      0xe800000000	                          call 0x4000256	       151	fibheap.c	FUNCTION_8	IF_1	CALL_1
0x4000256	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       152	fibheap.c	FUNCTION_8	IF_1
0x400025a	      0xe9cb000000	                           jmp 0x400032a	       152	fibheap.c	FUNCTION_8	IF_1
0x400025f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       154	fibheap.c	FUNCTION_8	IF_2
0x4000263	        0x488b4010	            mov rax, qword [rax + 0x10] 	       154	fibheap.c	FUNCTION_8	IF_2
0x4000267	        0x488945f0	             mov qword [rbp - 0x10], rax	       154	fibheap.c	FUNCTION_8	IF_2
0x400026b	      0x48837df000	               cmp qword [rbp - 0x10], 0	       154	fibheap.c	FUNCTION_8	IF_2
0x4000270	            0x7515	                           jne 0x4000287	       154	fibheap.c	FUNCTION_8	IF_2
0x4000272	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       156	fibheap.c	FUNCTION_8	IF_2	CALL_2
0x4000276	          0x4889c7	                            mov rdi, rax	       156	fibheap.c	FUNCTION_8	IF_2	CALL_2
0x4000279	      0xe800000000	                          call 0x400027e	       156	fibheap.c	FUNCTION_8	IF_2	CALL_2
0x400027e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       157	fibheap.c	FUNCTION_8	IF_2
0x4000282	      0xe9a3000000	                           jmp 0x400032a	       157	fibheap.c	FUNCTION_8	IF_2
0x4000287	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       161	fibheap.c	FUNCTION_8
0x400028b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       161	fibheap.c	FUNCTION_8
0x400028f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       161	fibheap.c	FUNCTION_8
0x4000293	        0x48895018	             mov qword [rax + 0x18], rdx	       161	fibheap.c	FUNCTION_8
0x4000297	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       162	fibheap.c	FUNCTION_8
0x400029b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       162	fibheap.c	FUNCTION_8
0x400029f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       162	fibheap.c	FUNCTION_8
0x40002a3	        0x48895018	             mov qword [rax + 0x18], rdx	       162	fibheap.c	FUNCTION_8
0x40002a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	fibheap.c	FUNCTION_8
0x40002ab	        0x488b4010	            mov rax, qword [rax + 0x10] 	       163	fibheap.c	FUNCTION_8
0x40002af	        0x488945f8	                mov qword [rbp - 8], rax	       163	fibheap.c	FUNCTION_8
0x40002b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       164	fibheap.c	FUNCTION_8
0x40002b7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       164	fibheap.c	FUNCTION_8
0x40002bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	fibheap.c	FUNCTION_8
0x40002bf	        0x48895010	             mov qword [rax + 0x10], rdx	       164	fibheap.c	FUNCTION_8
0x40002c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       165	fibheap.c	FUNCTION_8
0x40002c7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       165	fibheap.c	FUNCTION_8
0x40002cb	        0x48895010	             mov qword [rax + 0x10], rdx	       165	fibheap.c	FUNCTION_8
0x40002cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       166	fibheap.c	FUNCTION_8
0x40002d3	          0x488b10	                    mov rdx, qword [rax]	       166	fibheap.c	FUNCTION_8
0x40002d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       166	fibheap.c	FUNCTION_8
0x40002da	          0x488b00	                    mov rax, qword [rax]	       166	fibheap.c	FUNCTION_8
0x40002dd	          0x4801c2	                            add rdx, rax	       166	fibheap.c	FUNCTION_8
0x40002e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       166	fibheap.c	FUNCTION_8
0x40002e4	          0x488910	                    mov qword [rax], rdx	       166	fibheap.c	FUNCTION_8
0x40002e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x40002eb	        0x488b5008	                mov rdx, qword [rax + 8]	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x40002ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x40002f3	        0x488b4808	                mov rcx, qword [rax + 8]	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x40002f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x40002fb	          0x4889ce	                            mov rsi, rcx	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x40002fe	          0x4889c7	                            mov rdi, rax	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x4000301	      0xe888fdffff	                call sym.fibheap_compare	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x4000306	            0x85c0	                           test eax, eax	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x4000308	            0x7910	                           jns 0x400031a	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x400030a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       170	fibheap.c	FUNCTION_8	IF_3
0x400030e	        0x488b5008	                mov rdx, qword [rax + 8]	       170	fibheap.c	FUNCTION_8	IF_3
0x4000312	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       170	fibheap.c	FUNCTION_8	IF_3
0x4000316	        0x48895008	                mov qword [rax + 8], rdx	       170	fibheap.c	FUNCTION_8	IF_3
0x400031a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       172	fibheap.c	FUNCTION_8	CALL_4
0x400031e	          0x4889c7	                            mov rdi, rax	       172	fibheap.c	FUNCTION_8	CALL_4
0x4000321	      0xe800000000	                          call 0x4000326	       172	fibheap.c	FUNCTION_8	CALL_4
0x4000326	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       173	fibheap.c	FUNCTION_8
0x400032a	              0xc9	                                   leave	       174	fibheap.c	FUNCTION_8
0x400032b	              0xc3	                                     ret	       174	fibheap.c	FUNCTION_8
fibheap_comp_data	WHILE,0:IF,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0	26
0x40000dd	              0x55	                                push rbp	        87	fibheap.c	FUNCTION_4
0x40000de	          0x4889e5	                            mov rbp, rsp	        87	fibheap.c	FUNCTION_4
0x40000e1	        0x4883ec60	                           sub rsp, 0x60	        87	fibheap.c	FUNCTION_4
0x40000e5	        0x48897db8	             mov qword [rbp - 0x48], rdi	        87	fibheap.c	FUNCTION_4
0x40000e9	        0x488975b0	             mov qword [rbp - 0x50], rsi	        87	fibheap.c	FUNCTION_4
0x40000ed	        0x488955a8	             mov qword [rbp - 0x58], rdx	        87	fibheap.c	FUNCTION_4
0x40000f1	        0x48894da0	             mov qword [rbp - 0x60], rcx	        87	fibheap.c	FUNCTION_4
0x40000f5	    0x64488b042528	                mov rax, qword fs:[0x28]	        87	fibheap.c	FUNCTION_4
0x40000fe	        0x488945f8	                mov qword [rbp - 8], rax	        87	fibheap.c	FUNCTION_4
0x4000102	            0x31c0	                            xor eax, eax	        87	fibheap.c	FUNCTION_4
0x4000104	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        90	fibheap.c	FUNCTION_4
0x4000108	        0x488945e0	             mov qword [rbp - 0x20], rax	        90	fibheap.c	FUNCTION_4
0x400010c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        91	fibheap.c	FUNCTION_4
0x4000110	        0x488945e8	             mov qword [rbp - 0x18], rax	        91	fibheap.c	FUNCTION_4
0x4000114	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	        93	fibheap.c	FUNCTION_4	CALL_1
0x4000118	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	        93	fibheap.c	FUNCTION_4	CALL_1
0x400011c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        93	fibheap.c	FUNCTION_4	CALL_1
0x4000120	          0x4889ce	                            mov rsi, rcx	        93	fibheap.c	FUNCTION_4	CALL_1
0x4000123	          0x4889c7	                            mov rdi, rax	        93	fibheap.c	FUNCTION_4	CALL_1
0x4000126	      0xe863ffffff	                call sym.fibheap_compare	        93	fibheap.c	FUNCTION_4	CALL_1
0x400012b	        0x488b75f8	                mov rsi, qword [rbp - 8]	        94	fibheap.c	FUNCTION_4
0x400012f	    0x644833342528	                xor rsi, qword fs:[0x28]	        94	fibheap.c	FUNCTION_4
0x4000138	            0x7405	                            je 0x400013f	        94	fibheap.c	FUNCTION_4
0x400013a	      0xe800000000	                          call 0x400013f	        94	fibheap.c	FUNCTION_4
0x400013f	              0xc9	                                   leave	        94	fibheap.c	FUNCTION_4
0x4000140	              0xc3	                                     ret	        94	fibheap.c	FUNCTION_4
fibheap_delete	WHILE,1:IF,0:FOR,0:functions,0:SWITCH,0:CALL,3:DO,0:ELSE,0	20
0x4000581	              0x55	                                push rbp	       275	fibheap.c	FUNCTION_14
0x4000582	          0x4889e5	                            mov rbp, rsp	       275	fibheap.c	FUNCTION_14
0x4000585	        0x4883ec10	                           sub rsp, 0x10	       275	fibheap.c	FUNCTION_14
0x4000589	        0x48897df8	                mov qword [rbp - 8], rdi	       275	fibheap.c	FUNCTION_14
0x400058d	            0xeb14	                           jmp 0x40005a3	       276	fibheap.c	FUNCTION_14	WHILE_1
0x400058f	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000593	          0x4889c7	                            mov rdi, rax	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000596	      0xe83e000000	          call sym.fibheap_extr_min_node	       277	fibheap.c	FUNCTION_14	CALL_2
0x400059b	          0x4889c7	                            mov rdi, rax	       277	fibheap.c	FUNCTION_14	CALL_2
0x400059e	      0xe800000000	                          call 0x40005a3	       277	fibheap.c	FUNCTION_14	CALL_2
0x40005a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       276	fibheap.c	FUNCTION_14	WHILE_1
0x40005a7	        0x488b4008	                mov rax, qword [rax + 8]	       276	fibheap.c	FUNCTION_14	WHILE_1
0x40005ab	          0x4885c0	                           test rax, rax	       276	fibheap.c	FUNCTION_14	WHILE_1
0x40005ae	            0x75df	                           jne 0x400058f	       276	fibheap.c	FUNCTION_14	WHILE_1
0x40005b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	fibheap.c	FUNCTION_14	CALL_3
0x40005b4	          0x4889c7	                            mov rdi, rax	       279	fibheap.c	FUNCTION_14	CALL_3
0x40005b7	      0xe800000000	                          call 0x40005bc	       279	fibheap.c	FUNCTION_14	CALL_3
0x40005bc	              0x90	                                     nop	       280	fibheap.c	FUNCTION_14
0x40005bd	              0xc9	                                   leave	       280	fibheap.c	FUNCTION_14
0x40005be	              0xc3	                                     ret	       280	fibheap.c	FUNCTION_14
fibheap_delete_node	WHILE,0:IF,1:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,0	31
0x4000505	              0x55	                                push rbp	       257	fibheap.c	FUNCTION_13
0x4000506	          0x4889e5	                            mov rbp, rsp	       257	fibheap.c	FUNCTION_13
0x4000509	        0x4883ec20	                           sub rsp, 0x20	       257	fibheap.c	FUNCTION_13
0x400050d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       257	fibheap.c	FUNCTION_13
0x4000511	        0x488975e0	             mov qword [rbp - 0x20], rsi	       257	fibheap.c	FUNCTION_13
0x4000515	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       258	fibheap.c	FUNCTION_13
0x4000519	        0x488b4028	            mov rax, qword [rax + 0x28] 	       258	fibheap.c	FUNCTION_13
0x400051d	        0x488945f8	                mov qword [rbp - 8], rax	       258	fibheap.c	FUNCTION_13
0x4000521	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       261	fibheap.c	FUNCTION_13	CALL_1
0x4000525	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       261	fibheap.c	FUNCTION_13	CALL_1
0x4000529	    0x48ba00000000	          movabs rdx, 0x8000000000000000	       261	fibheap.c	FUNCTION_13	CALL_1
0x4000533	          0x4889ce	                            mov rsi, rcx	       261	fibheap.c	FUNCTION_13	CALL_1
0x4000536	          0x4889c7	                            mov rdi, rax	       261	fibheap.c	FUNCTION_13	CALL_1
0x4000539	      0xe800000000	                          call 0x400053e	       261	fibheap.c	FUNCTION_13	CALL_1
0x400053e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       262	fibheap.c	FUNCTION_13	IF_1
0x4000542	        0x488b4008	                mov rax, qword [rax + 8]	       262	fibheap.c	FUNCTION_13	IF_1
0x4000546	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       262	fibheap.c	FUNCTION_13	IF_1
0x400054a	            0x7423	                            je 0x400056f	       262	fibheap.c	FUNCTION_13	IF_1
0x400054c	    0x488b05000000	            mov rax, qword [0x04000553] 	       264	fibheap.c	FUNCTION_13	IF_1	CALL_2
0x4000553	          0x4889c1	                            mov rcx, rax	       264	fibheap.c	FUNCTION_13	IF_1	CALL_2
0x4000556	      0xba20000000	                           mov edx, 0x20	       264	fibheap.c	FUNCTION_13	IF_1	CALL_2
0x400055b	      0xbe01000000	                              mov esi, 1	       264	fibheap.c	FUNCTION_13	IF_1	CALL_2
0x4000560	      0xbf00000000	                              mov edi, 0	       264	fibheap.c	FUNCTION_13	IF_1	CALL_2
0x4000565	      0xe800000000	                          call 0x400056a	       264	fibheap.c	FUNCTION_13	IF_1	CALL_2
0x400056a	      0xe800000000	                          call 0x400056f	       265	fibheap.c	FUNCTION_13	IF_1	CALL_3
0x400056f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       267	fibheap.c	FUNCTION_13	CALL_4
0x4000573	          0x4889c7	                            mov rdi, rax	       267	fibheap.c	FUNCTION_13	CALL_4
0x4000576	      0xe800000000	                          call 0x400057b	       267	fibheap.c	FUNCTION_13	CALL_4
0x400057b	        0x488b45f8	                mov rax, qword [rbp - 8]	       269	fibheap.c	FUNCTION_13
0x400057f	              0xc9	                                   leave	       270	fibheap.c	FUNCTION_13
0x4000580	              0xc3	                                     ret	       270	fibheap.c	FUNCTION_13
fibnode_remove	WHILE,0:IF,2:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,1	46
0x4000bbc	              0x55	                                push rbp	       467	fibheap.c	FUNCTION_24
0x4000bbd	          0x4889e5	                            mov rbp, rsp	       467	fibheap.c	FUNCTION_24
0x4000bc0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       467	fibheap.c	FUNCTION_24
0x4000bc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	fibheap.c	FUNCTION_24	IF_1
0x4000bc8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       470	fibheap.c	FUNCTION_24	IF_1
0x4000bcc	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       470	fibheap.c	FUNCTION_24	IF_1
0x4000bd0	            0x750a	                           jne 0x4000bdc	       470	fibheap.c	FUNCTION_24	IF_1
0x4000bd2	    0x48c745f80000	                  mov qword [rbp - 8], 0	       471	fibheap.c	FUNCTION_24	IF_1
0x4000bda	            0xeb0c	                           jmp 0x4000be8	       471	fibheap.c	FUNCTION_24	IF_1
0x4000bdc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       473	fibheap.c	FUNCTION_24	ELSE_1
0x4000be0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       473	fibheap.c	FUNCTION_24	ELSE_1
0x4000be4	        0x488945f8	                mov qword [rbp - 8], rax	       473	fibheap.c	FUNCTION_24	ELSE_1
0x4000be8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000bec	          0x488b00	                    mov rax, qword [rax]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000bef	          0x4885c0	                           test rax, rax	       475	fibheap.c	FUNCTION_24	IF_2
0x4000bf2	            0x7420	                            je 0x4000c14	       475	fibheap.c	FUNCTION_24	IF_2
0x4000bf4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000bf8	          0x488b00	                    mov rax, qword [rax]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000bfb	        0x488b4008	                mov rax, qword [rax + 8]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000bff	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000c03	            0x750f	                           jne 0x4000c14	       475	fibheap.c	FUNCTION_24	IF_2
0x4000c05	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       476	fibheap.c	FUNCTION_24	IF_2
0x4000c09	          0x488b00	                    mov rax, qword [rax]	       476	fibheap.c	FUNCTION_24	IF_2
0x4000c0c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       476	fibheap.c	FUNCTION_24	IF_2
0x4000c10	        0x48895008	                mov qword [rax + 8], rdx	       476	fibheap.c	FUNCTION_24	IF_2
0x4000c14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       478	fibheap.c	FUNCTION_24
0x4000c18	        0x488b4018	            mov rax, qword [rax + 0x18] 	       478	fibheap.c	FUNCTION_24
0x4000c1c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       478	fibheap.c	FUNCTION_24
0x4000c20	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       478	fibheap.c	FUNCTION_24
0x4000c24	        0x48895010	             mov qword [rax + 0x10], rdx	       478	fibheap.c	FUNCTION_24
0x4000c28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       479	fibheap.c	FUNCTION_24
0x4000c2c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       479	fibheap.c	FUNCTION_24
0x4000c30	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       479	fibheap.c	FUNCTION_24
0x4000c34	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       479	fibheap.c	FUNCTION_24
0x4000c38	        0x48895018	             mov qword [rax + 0x18], rdx	       479	fibheap.c	FUNCTION_24
0x4000c3c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       481	fibheap.c	FUNCTION_24
0x4000c40	    0x48c700000000	                      mov qword [rax], 0	       481	fibheap.c	FUNCTION_24
0x4000c47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       482	fibheap.c	FUNCTION_24
0x4000c4b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       482	fibheap.c	FUNCTION_24
0x4000c4f	        0x48895010	             mov qword [rax + 0x10], rdx	       482	fibheap.c	FUNCTION_24
0x4000c53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       483	fibheap.c	FUNCTION_24
0x4000c57	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       483	fibheap.c	FUNCTION_24
0x4000c5b	        0x48895018	             mov qword [rax + 0x18], rdx	       483	fibheap.c	FUNCTION_24
0x4000c5f	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	fibheap.c	FUNCTION_24
0x4000c63	              0x5d	                                 pop rbp	       486	fibheap.c	FUNCTION_24
0x4000c64	              0xc3	                                     ret	       486	fibheap.c	FUNCTION_24
fibnode_insert_after	WHILE,0:IF,1:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,1	38
0x4000b35	              0x55	                                push rbp	       448	fibheap.c	FUNCTION_23
0x4000b36	          0x4889e5	                            mov rbp, rsp	       448	fibheap.c	FUNCTION_23
0x4000b39	        0x48897df8	                mov qword [rbp - 8], rdi	       448	fibheap.c	FUNCTION_23
0x4000b3d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       448	fibheap.c	FUNCTION_23
0x4000b41	        0x488b45f8	                mov rax, qword [rbp - 8]	       449	fibheap.c	FUNCTION_23	IF_1
0x4000b45	        0x488b4018	            mov rax, qword [rax + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x4000b49	        0x483b45f8	                cmp rax, qword [rbp - 8]	       449	fibheap.c	FUNCTION_23	IF_1
0x4000b4d	            0x7532	                           jne 0x4000b81	       449	fibheap.c	FUNCTION_23	IF_1
0x4000b4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       451	fibheap.c	FUNCTION_23	IF_1
0x4000b53	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       451	fibheap.c	FUNCTION_23	IF_1
0x4000b57	        0x48895018	             mov qword [rax + 0x18], rdx	       451	fibheap.c	FUNCTION_23	IF_1
0x4000b5b	        0x488b45f8	                mov rax, qword [rbp - 8]	       452	fibheap.c	FUNCTION_23	IF_1
0x4000b5f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       452	fibheap.c	FUNCTION_23	IF_1
0x4000b63	        0x48895010	             mov qword [rax + 0x10], rdx	       452	fibheap.c	FUNCTION_23	IF_1
0x4000b67	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       453	fibheap.c	FUNCTION_23	IF_1
0x4000b6b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       453	fibheap.c	FUNCTION_23	IF_1
0x4000b6f	        0x48895018	             mov qword [rax + 0x18], rdx	       453	fibheap.c	FUNCTION_23	IF_1
0x4000b73	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       454	fibheap.c	FUNCTION_23	IF_1
0x4000b77	        0x488b55f8	                mov rdx, qword [rbp - 8]	       454	fibheap.c	FUNCTION_23	IF_1
0x4000b7b	        0x48895010	             mov qword [rax + 0x10], rdx	       454	fibheap.c	FUNCTION_23	IF_1
0x4000b7f	            0xeb38	                           jmp 0x4000bb9	       463	fibheap.c	FUNCTION_23
0x4000b81	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	fibheap.c	FUNCTION_23	ELSE_1
0x4000b85	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       458	fibheap.c	FUNCTION_23	ELSE_1
0x4000b89	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       458	fibheap.c	FUNCTION_23	ELSE_1
0x4000b8d	        0x48895018	             mov qword [rax + 0x18], rdx	       458	fibheap.c	FUNCTION_23	ELSE_1
0x4000b91	        0x488b45f8	                mov rax, qword [rbp - 8]	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000b95	        0x488b4018	            mov rax, qword [rax + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000b99	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000b9d	        0x48895010	             mov qword [rax + 0x10], rdx	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000ba1	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	fibheap.c	FUNCTION_23	ELSE_1
0x4000ba5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       460	fibheap.c	FUNCTION_23	ELSE_1
0x4000ba9	        0x48895018	             mov qword [rax + 0x18], rdx	       460	fibheap.c	FUNCTION_23	ELSE_1
0x4000bad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       461	fibheap.c	FUNCTION_23	ELSE_1
0x4000bb1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       461	fibheap.c	FUNCTION_23	ELSE_1
0x4000bb5	        0x48895010	             mov qword [rax + 0x10], rdx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x4000bb9	              0x90	                                     nop	       463	fibheap.c	FUNCTION_23
0x4000bba	              0x5d	                                 pop rbp	       463	fibheap.c	FUNCTION_23
0x4000bbb	              0xc3	                                     ret	       463	fibheap.c	FUNCTION_23
fibheap_extr_min_node	WHILE,0:IF,2:FOR,1:functions,0:SWITCH,0:CALL,3:DO,0:ELSE,1	60
0x40005d9	              0x55	                                push rbp	       292	fibheap.c	FUNCTION_16
0x40005da	          0x4889e5	                            mov rbp, rsp	       292	fibheap.c	FUNCTION_16
0x40005dd	        0x4883ec30	                           sub rsp, 0x30	       292	fibheap.c	FUNCTION_16
0x40005e1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       292	fibheap.c	FUNCTION_16
0x40005e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       293	fibheap.c	FUNCTION_16
0x40005e9	        0x488b4008	                mov rax, qword [rax + 8]	       293	fibheap.c	FUNCTION_16
0x40005ed	        0x488945f0	             mov qword [rbp - 0x10], rax	       293	fibheap.c	FUNCTION_16
0x40005f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       298	fibheap.c	FUNCTION_16	FOR_1
0x40005f5	        0x488b4008	                mov rax, qword [rax + 8]	       298	fibheap.c	FUNCTION_16	FOR_1
0x40005f9	        0x488945e0	             mov qword [rbp - 0x20], rax	       298	fibheap.c	FUNCTION_16	FOR_1
0x40005fd	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000605	            0xeb41	                           jmp 0x4000648	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000607	      0x48837de800	               cmp qword [rbp - 0x18], 0	       300	fibheap.c	FUNCTION_16	FOR_1	IF_1
0x400060c	            0x7508	                           jne 0x4000616	       300	fibheap.c	FUNCTION_16	FOR_1	IF_1
0x400060e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       301	fibheap.c	FUNCTION_16	FOR_1	IF_1
0x4000612	        0x488945e8	             mov qword [rbp - 0x18], rax	       301	fibheap.c	FUNCTION_16	FOR_1	IF_1
0x4000616	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       302	fibheap.c	FUNCTION_16	FOR_1
0x400061a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       302	fibheap.c	FUNCTION_16	FOR_1
0x400061e	        0x488945f8	                mov qword [rbp - 8], rax	       302	fibheap.c	FUNCTION_16	FOR_1
0x4000622	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       303	fibheap.c	FUNCTION_16	FOR_1
0x4000626	    0x48c700000000	                      mov qword [rax], 0	       303	fibheap.c	FUNCTION_16	FOR_1
0x400062d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       304	fibheap.c	FUNCTION_16	FOR_1	CALL_1
0x4000631	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       304	fibheap.c	FUNCTION_16	FOR_1	CALL_1
0x4000635	          0x4889d6	                            mov rsi, rdx	       304	fibheap.c	FUNCTION_16	FOR_1	CALL_1
0x4000638	          0x4889c7	                            mov rdi, rax	       304	fibheap.c	FUNCTION_16	FOR_1	CALL_1
0x400063b	      0xe87a000000	               call sym.fibheap_ins_root	       304	fibheap.c	FUNCTION_16	FOR_1	CALL_1
0x4000640	        0x488b45f8	                mov rax, qword [rbp - 8]	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000644	        0x488945e0	             mov qword [rbp - 0x20], rax	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000648	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       298	fibheap.c	FUNCTION_16	FOR_1
0x400064c	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000650	            0x7407	                            je 0x4000659	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000652	      0x48837de000	               cmp qword [rbp - 0x20], 0	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000657	            0x75ae	                           jne 0x4000607	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000659	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       308	fibheap.c	FUNCTION_16	CALL_2
0x400065d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	fibheap.c	FUNCTION_16	CALL_2
0x4000661	          0x4889d6	                            mov rsi, rdx	       308	fibheap.c	FUNCTION_16	CALL_2
0x4000664	          0x4889c7	                            mov rdi, rax	       308	fibheap.c	FUNCTION_16	CALL_2
0x4000667	      0xe8aa000000	               call sym.fibheap_rem_root	       308	fibheap.c	FUNCTION_16	CALL_2
0x400066c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       309	fibheap.c	FUNCTION_16
0x4000670	          0x488b00	                    mov rax, qword [rax]	       309	fibheap.c	FUNCTION_16
0x4000673	        0x488d50ff	                      lea rdx, [rax - 1]	       309	fibheap.c	FUNCTION_16
0x4000677	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       309	fibheap.c	FUNCTION_16
0x400067b	          0x488910	                    mov qword [rax], rdx	       309	fibheap.c	FUNCTION_16
0x400067e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       312	fibheap.c	FUNCTION_16	IF_2
0x4000682	          0x488b00	                    mov rax, qword [rax]	       312	fibheap.c	FUNCTION_16	IF_2
0x4000685	          0x4885c0	                           test rax, rax	       312	fibheap.c	FUNCTION_16	IF_2
0x4000688	            0x750e	                           jne 0x4000698	       312	fibheap.c	FUNCTION_16	IF_2
0x400068a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       313	fibheap.c	FUNCTION_16	IF_2
0x400068e	    0x48c740080000	                  mov qword [rax + 8], 0	       313	fibheap.c	FUNCTION_16	IF_2
0x4000696	            0xeb1c	                           jmp 0x40006b4	       313	fibheap.c	FUNCTION_16	IF_2
0x4000698	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       318	fibheap.c	FUNCTION_16	ELSE_1
0x400069c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       318	fibheap.c	FUNCTION_16	ELSE_1
0x40006a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       318	fibheap.c	FUNCTION_16	ELSE_1
0x40006a4	        0x48895008	                mov qword [rax + 8], rdx	       318	fibheap.c	FUNCTION_16	ELSE_1
0x40006a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       319	fibheap.c	FUNCTION_16	ELSE_1	CALL_3
0x40006ac	          0x4889c7	                            mov rdi, rax	       319	fibheap.c	FUNCTION_16	ELSE_1	CALL_3
0x40006af	      0xe8a8000000	            call sym.fibheap_consolidate	       319	fibheap.c	FUNCTION_16	ELSE_1	CALL_3
0x40006b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       322	fibheap.c	FUNCTION_16
0x40006b8	              0xc9	                                   leave	       323	fibheap.c	FUNCTION_16
0x40006b9	              0xc3	                                     ret	       323	fibheap.c	FUNCTION_16
fibheap_extract_min	WHILE,0:IF,1:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0	22
0x400032c	              0x55	                                push rbp	       179	fibheap.c	FUNCTION_9
0x400032d	          0x4889e5	                            mov rbp, rsp	       179	fibheap.c	FUNCTION_9
0x4000330	        0x4883ec20	                           sub rsp, 0x20	       179	fibheap.c	FUNCTION_9
0x4000334	        0x48897de8	             mov qword [rbp - 0x18], rdi	       179	fibheap.c	FUNCTION_9
0x4000338	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       181	fibheap.c	FUNCTION_9
0x4000340	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       184	fibheap.c	FUNCTION_9	IF_1
0x4000344	        0x488b4008	                mov rax, qword [rax + 8]	       184	fibheap.c	FUNCTION_9	IF_1
0x4000348	          0x4885c0	                           test rax, rax	       184	fibheap.c	FUNCTION_9	IF_1
0x400034b	            0x7428	                            je 0x4000375	       184	fibheap.c	FUNCTION_9	IF_1
0x400034d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       188	fibheap.c	FUNCTION_9	IF_1	CALL_1
0x4000351	          0x4889c7	                            mov rdi, rax	       188	fibheap.c	FUNCTION_9	IF_1	CALL_1
0x4000354	      0xe880020000	          call sym.fibheap_extr_min_node	       188	fibheap.c	FUNCTION_9	IF_1	CALL_1
0x4000359	        0x488945f8	                mov qword [rbp - 8], rax	       188	fibheap.c	FUNCTION_9	IF_1	CALL_1
0x400035d	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	fibheap.c	FUNCTION_9	IF_1
0x4000361	        0x488b4028	            mov rax, qword [rax + 0x28] 	       189	fibheap.c	FUNCTION_9	IF_1
0x4000365	        0x488945f0	             mov qword [rbp - 0x10], rax	       189	fibheap.c	FUNCTION_9	IF_1
0x4000369	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	fibheap.c	FUNCTION_9	IF_1	CALL_2
0x400036d	          0x4889c7	                            mov rdi, rax	       190	fibheap.c	FUNCTION_9	IF_1	CALL_2
0x4000370	      0xe800000000	                          call 0x4000375	       190	fibheap.c	FUNCTION_9	IF_1	CALL_2
0x4000375	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       193	fibheap.c	FUNCTION_9
0x4000379	              0xc9	                                   leave	       194	fibheap.c	FUNCTION_9
0x400037a	              0xc3	                                     ret	       194	fibheap.c	FUNCTION_9
fibheap_replace_data	WHILE,0:IF,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0	15
0x4000491	              0x55	                                push rbp	       241	fibheap.c	FUNCTION_11
0x4000492	          0x4889e5	                            mov rbp, rsp	       241	fibheap.c	FUNCTION_11
0x4000495	        0x4883ec20	                           sub rsp, 0x20	       241	fibheap.c	FUNCTION_11
0x4000499	        0x48897df8	                mov qword [rbp - 8], rdi	       241	fibheap.c	FUNCTION_11
0x400049d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       241	fibheap.c	FUNCTION_11
0x40004a1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       241	fibheap.c	FUNCTION_11
0x40004a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       242	fibheap.c	FUNCTION_11	CALL_1
0x40004a9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       242	fibheap.c	FUNCTION_11	CALL_1
0x40004ad	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       242	fibheap.c	FUNCTION_11	CALL_1
0x40004b1	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       242	fibheap.c	FUNCTION_11	CALL_1
0x40004b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	fibheap.c	FUNCTION_11	CALL_1
0x40004b9	          0x4889c7	                            mov rdi, rax	       242	fibheap.c	FUNCTION_11	CALL_1
0x40004bc	      0xe800000000	                          call 0x40004c1	       242	fibheap.c	FUNCTION_11	CALL_1
0x40004c1	              0xc9	                                   leave	       243	fibheap.c	FUNCTION_11
0x40004c2	              0xc3	                                     ret	       243	fibheap.c	FUNCTION_11
fibheap_new	WHILE,0:IF,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0	7
0x4000040	              0x55	                                push rbp	        58	fibheap.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        58	fibheap.c	FUNCTION_1
0x4000044	      0xbe18000000	                           mov esi, 0x18	        59	fibheap.c	FUNCTION_1	CALL_1
0x4000049	      0xbf01000000	                              mov edi, 1	        59	fibheap.c	FUNCTION_1	CALL_1
0x400004e	      0xe800000000	                          call 0x4000053	        59	fibheap.c	FUNCTION_1	CALL_1
0x4000053	              0x5d	                                 pop rbp	        60	fibheap.c	FUNCTION_1
0x4000054	              0xc3	                                     ret	        60	fibheap.c	FUNCTION_1
fibheap_consolidate	WHILE,2:IF,3:FOR,1:functions,0:SWITCH,0:CALL,6:DO,0:ELSE,0	117
0x400075c	              0x55	                                push rbp	       357	fibheap.c	FUNCTION_19
0x400075d	          0x4889e5	                            mov rbp, rsp	       357	fibheap.c	FUNCTION_19
0x4000760	    0x4881ec500200	                          sub rsp, 0x250	       357	fibheap.c	FUNCTION_19
0x4000767	    0x4889bdb8fdff	            mov qword [rbp - 0x248], rdi	       357	fibheap.c	FUNCTION_19
0x400076e	    0x64488b042528	                mov rax, qword fs:[0x28]	       357	fibheap.c	FUNCTION_19
0x4000777	        0x488945f8	                mov qword [rbp - 8], rax	       357	fibheap.c	FUNCTION_19
0x400077b	            0x31c0	                            xor eax, eax	       357	fibheap.c	FUNCTION_19
0x400077d	    0xc785ccfdffff	          mov dword [rbp - 0x234], 0x41 	       366	fibheap.c	FUNCTION_19
0x4000787	    0x8b85ccfdffff	            mov eax, dword [rbp - 0x234]	       368	fibheap.c	FUNCTION_19	CALL_1
0x400078d	            0x4898	                                    cdqe	       368	fibheap.c	FUNCTION_19	CALL_1
0x400078f	    0x488d14c50000	                        lea rdx, [rax*8]	       368	fibheap.c	FUNCTION_19	CALL_1
0x4000797	    0x488d85f0fdff	                  lea rax, [rbp - 0x210]	       368	fibheap.c	FUNCTION_19	CALL_1
0x400079e	      0xbe00000000	                              mov esi, 0	       368	fibheap.c	FUNCTION_19	CALL_1
0x40007a3	          0x4889c7	                            mov rdi, rax	       368	fibheap.c	FUNCTION_19	CALL_1
0x40007a6	      0xe800000000	                          call 0x40007ab	       368	fibheap.c	FUNCTION_19	CALL_1
0x40007ab	      0xe911010000	                           jmp 0x40008c1	       370	fibheap.c	FUNCTION_19	WHILE_1
0x40007b0	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	       372	fibheap.c	FUNCTION_19	WHILE_1
0x40007b7	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	       372	fibheap.c	FUNCTION_19	WHILE_1
0x40007be	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	       373	fibheap.c	FUNCTION_19	WHILE_1	CALL_2
0x40007c5	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       373	fibheap.c	FUNCTION_19	WHILE_1	CALL_2
0x40007cc	          0x4889d6	                            mov rsi, rdx	       373	fibheap.c	FUNCTION_19	WHILE_1	CALL_2
0x40007cf	          0x4889c7	                            mov rdi, rax	       373	fibheap.c	FUNCTION_19	WHILE_1	CALL_2
0x40007d2	      0xe83fffffff	               call sym.fibheap_rem_root	       373	fibheap.c	FUNCTION_19	WHILE_1	CALL_2
0x40007d7	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       374	fibheap.c	FUNCTION_19	WHILE_1
0x40007de	          0x8b4030	            mov eax, dword [rax + 0x30] 	       374	fibheap.c	FUNCTION_19	WHILE_1
0x40007e1	      0x25ffffff7f	                     and eax, 0x7fffffff	       374	fibheap.c	FUNCTION_19	WHILE_1
0x40007e6	    0x8985c8fdffff	            mov dword [rbp - 0x238], eax	       374	fibheap.c	FUNCTION_19	WHILE_1
0x40007ec	      0xe9a0000000	                           jmp 0x4000891	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40007f1	    0x8b85c8fdffff	            mov eax, dword [rbp - 0x238]	       377	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40007f7	            0x4898	                                    cdqe	       377	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40007f9	    0x488b84c5f0fd	    mov rax, qword [rbp + rax*8 - 0x210]	       377	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000801	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	       377	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000808	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x400080f	    0x488b8dd8fdff	            mov rcx, qword [rbp - 0x228]	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x4000816	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x400081d	          0x4889ce	                            mov rsi, rcx	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x4000820	          0x4889c7	                            mov rdi, rax	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x4000823	      0xe866f8ffff	                call sym.fibheap_compare	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x4000828	            0x85c0	                           test eax, eax	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x400082a	            0x7e2a	                           jle 0x4000856	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x400082c	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       381	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1
0x4000833	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	       381	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1
0x400083a	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	       382	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1
0x4000841	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	       382	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1
0x4000848	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	       383	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1
0x400084f	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	       383	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1
0x4000856	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	       385	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	CALL_4
0x400085d	    0x488b8dd0fdff	            mov rcx, qword [rbp - 0x230]	       385	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	CALL_4
0x4000864	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       385	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	CALL_4
0x400086b	          0x4889ce	                            mov rsi, rcx	       385	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	CALL_4
0x400086e	          0x4889c7	                            mov rdi, rax	       385	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	CALL_4
0x4000871	      0xe84c010000	                   call sym.fibheap_link	       385	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	CALL_4
0x4000876	    0x8b85c8fdffff	            mov eax, dword [rbp - 0x238]	       386	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400087c	            0x4898	                                    cdqe	       386	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400087e	    0x48c784c5f0fd	      mov qword [rbp + rax*8 - 0x210], 0	       386	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400088a	    0x8385c8fdffff	              add dword [rbp - 0x238], 1	       387	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000891	    0x8b85c8fdffff	            mov eax, dword [rbp - 0x238]	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000897	            0x4898	                                    cdqe	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000899	    0x488b84c5f0fd	    mov rax, qword [rbp + rax*8 - 0x210]	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40008a1	          0x4885c0	                           test rax, rax	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40008a4	     0xf8547ffffff	                           jne 0x40007f1	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40008aa	    0x8b85c8fdffff	            mov eax, dword [rbp - 0x238]	       389	fibheap.c	FUNCTION_19	WHILE_1
0x40008b0	            0x4898	                                    cdqe	       389	fibheap.c	FUNCTION_19	WHILE_1
0x40008b2	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	       389	fibheap.c	FUNCTION_19	WHILE_1
0x40008b9	    0x488994c5f0fd	    mov qword [rbp + rax*8 - 0x210], rdx	       389	fibheap.c	FUNCTION_19	WHILE_1
0x40008c1	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       370	fibheap.c	FUNCTION_19	WHILE_1
0x40008c8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       370	fibheap.c	FUNCTION_19	WHILE_1
0x40008cc	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	       370	fibheap.c	FUNCTION_19	WHILE_1
0x40008d3	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	       370	fibheap.c	FUNCTION_19	WHILE_1
0x40008db	     0xf85cffeffff	                           jne 0x40007b0	       370	fibheap.c	FUNCTION_19	WHILE_1
0x40008e1	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       391	fibheap.c	FUNCTION_19
0x40008e8	    0x48c740080000	                  mov qword [rax + 8], 0	       391	fibheap.c	FUNCTION_19
0x40008f0	    0xc785c4fdffff	              mov dword [rbp - 0x23c], 0	       392	fibheap.c	FUNCTION_19	FOR_1
0x40008fa	      0xe99a000000	                           jmp 0x4000999	       392	fibheap.c	FUNCTION_19	FOR_1
0x40008ff	    0x8b85c4fdffff	            mov eax, dword [rbp - 0x23c]	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x4000905	            0x4898	                                    cdqe	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x4000907	    0x488b84c5f0fd	    mov rax, qword [rbp + rax*8 - 0x210]	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x400090f	          0x4885c0	                           test rax, rax	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x4000912	            0x747e	                            je 0x4000992	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x4000914	    0x8b85c4fdffff	            mov eax, dword [rbp - 0x23c]	       395	fibheap.c	FUNCTION_19	FOR_1	IF_2	CALL_5
0x400091a	            0x4898	                                    cdqe	       395	fibheap.c	FUNCTION_19	FOR_1	IF_2	CALL_5
0x400091c	    0x488b94c5f0fd	    mov rdx, qword [rbp + rax*8 - 0x210]	       395	fibheap.c	FUNCTION_19	FOR_1	IF_2	CALL_5
0x4000924	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       395	fibheap.c	FUNCTION_19	FOR_1	IF_2	CALL_5
0x400092b	          0x4889d6	                            mov rsi, rdx	       395	fibheap.c	FUNCTION_19	FOR_1	IF_2	CALL_5
0x400092e	          0x4889c7	                            mov rdi, rax	       395	fibheap.c	FUNCTION_19	FOR_1	IF_2	CALL_5
0x4000931	      0xe884fdffff	               call sym.fibheap_ins_root	       395	fibheap.c	FUNCTION_19	FOR_1	IF_2	CALL_5
0x4000936	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x400093d	        0x488b4008	                mov rax, qword [rax + 8]	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000941	          0x4885c0	                           test rax, rax	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000944	            0x7431	                            je 0x4000977	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000946	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x400094d	        0x488b5008	                mov rdx, qword [rax + 8]	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000951	    0x8b85c4fdffff	            mov eax, dword [rbp - 0x23c]	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000957	            0x4898	                                    cdqe	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000959	    0x488b8cc5f0fd	    mov rcx, qword [rbp + rax*8 - 0x210]	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000961	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000968	          0x4889ce	                            mov rsi, rcx	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x400096b	          0x4889c7	                            mov rdi, rax	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x400096e	      0xe81bf7ffff	                call sym.fibheap_compare	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000973	            0x85c0	                           test eax, eax	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000975	            0x791b	                           jns 0x4000992	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000977	    0x8b85c4fdffff	            mov eax, dword [rbp - 0x23c]	       397	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x400097d	            0x4898	                                    cdqe	       397	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x400097f	    0x488b94c5f0fd	    mov rdx, qword [rbp + rax*8 - 0x210]	       397	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x4000987	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       397	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x400098e	        0x48895008	                mov qword [rax + 8], rdx	       397	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x4000992	    0x8385c4fdffff	              add dword [rbp - 0x23c], 1	       392	fibheap.c	FUNCTION_19	FOR_1
0x4000999	    0x8b85c4fdffff	            mov eax, dword [rbp - 0x23c]	       392	fibheap.c	FUNCTION_19	FOR_1
0x400099f	    0x3b85ccfdffff	            cmp eax, dword [rbp - 0x234]	       392	fibheap.c	FUNCTION_19	FOR_1
0x40009a5	     0xf8c54ffffff	                            jl 0x40008ff	       392	fibheap.c	FUNCTION_19	FOR_1
0x40009ab	              0x90	                                     nop	       399	fibheap.c	FUNCTION_19
0x40009ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       399	fibheap.c	FUNCTION_19
0x40009b0	    0x644833042528	                xor rax, qword fs:[0x28]	       399	fibheap.c	FUNCTION_19
0x40009b9	            0x7405	                            je 0x40009c0	       399	fibheap.c	FUNCTION_19
0x40009bb	      0xe800000000	                          call 0x40009c0	       399	fibheap.c	FUNCTION_19
0x40009c0	              0xc9	                                   leave	       399	fibheap.c	FUNCTION_19
0x40009c1	              0xc3	                                     ret	       399	fibheap.c	FUNCTION_19
fibheap_cascading_cut	WHILE,1:IF,1:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,1	31
0x4000ad1	              0x55	                                push rbp	       428	fibheap.c	FUNCTION_22
0x4000ad2	          0x4889e5	                            mov rbp, rsp	       428	fibheap.c	FUNCTION_22
0x4000ad5	        0x4883ec20	                           sub rsp, 0x20	       428	fibheap.c	FUNCTION_22
0x4000ad9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       428	fibheap.c	FUNCTION_22
0x4000add	        0x488975e0	             mov qword [rbp - 0x20], rsi	       428	fibheap.c	FUNCTION_22
0x4000ae1	            0xeb3e	                           jmp 0x4000b21	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000ae3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000ae7	         0xfb64033	           movzx eax, byte [rax + 0x33] 	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000aeb	          0x83e080	                     and eax, 0xffffff80	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000aee	            0x84c0	                             test al, al	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000af0	            0x7510	                           jne 0x4000b02	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000af2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000af6	         0xfb65033	           movzx edx, byte [rax + 0x33] 	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000afa	          0x83ca80	                      or edx, 0xffffff80	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000afd	          0x885033	               mov byte [rax + 0x33], dl	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000b00	            0xeb31	                           jmp 0x4000b33	       436	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000b02	        0x488b55f8	                mov rdx, qword [rbp - 8]	       440	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1	CALL_1
0x4000b06	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       440	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1	CALL_1
0x4000b0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       440	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1	CALL_1
0x4000b0e	          0x4889ce	                            mov rsi, rcx	       440	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1	CALL_1
0x4000b11	          0x4889c7	                            mov rdi, rax	       440	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1	CALL_1
0x4000b14	      0xe83bffffff	                    call sym.fibheap_cut	       440	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1	CALL_1
0x4000b19	        0x488b45f8	                mov rax, qword [rbp - 8]	       441	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1
0x4000b1d	        0x488945e0	             mov qword [rbp - 0x20], rax	       441	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1
0x4000b21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000b25	          0x488b00	                    mov rax, qword [rax]	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000b28	        0x488945f8	                mov qword [rbp - 8], rax	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000b2c	      0x48837df800	                  cmp qword [rbp - 8], 0	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000b31	            0x75b0	                           jne 0x4000ae3	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000b33	              0xc9	                                   leave	       444	fibheap.c	FUNCTION_22
0x4000b34	              0xc3	                                     ret	       444	fibheap.c	FUNCTION_22
fibheap_insert	WHILE,0:IF,1:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0	41
0x4000141	              0x55	                                push rbp	        99	fibheap.c	FUNCTION_5
0x4000142	          0x4889e5	                            mov rbp, rsp	        99	fibheap.c	FUNCTION_5
0x4000145	        0x4883ec30	                           sub rsp, 0x30	        99	fibheap.c	FUNCTION_5
0x4000149	        0x48897de8	             mov qword [rbp - 0x18], rdi	        99	fibheap.c	FUNCTION_5
0x400014d	        0x488975e0	             mov qword [rbp - 0x20], rsi	        99	fibheap.c	FUNCTION_5
0x4000151	        0x488955d8	             mov qword [rbp - 0x28], rdx	        99	fibheap.c	FUNCTION_5
0x4000155	      0xe8fbfeffff	                    call sym.fibnode_new	       103	fibheap.c	FUNCTION_5	CALL_1
0x400015a	        0x488945f8	                mov qword [rbp - 8], rax	       103	fibheap.c	FUNCTION_5	CALL_1
0x400015e	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	fibheap.c	FUNCTION_5
0x4000162	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       106	fibheap.c	FUNCTION_5
0x4000166	        0x48895028	             mov qword [rax + 0x28], rdx	       106	fibheap.c	FUNCTION_5
0x400016a	        0x488b45f8	                mov rax, qword [rbp - 8]	       107	fibheap.c	FUNCTION_5
0x400016e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       107	fibheap.c	FUNCTION_5
0x4000172	        0x48895020	             mov qword [rax + 0x20], rdx	       107	fibheap.c	FUNCTION_5
0x4000176	        0x488b55f8	                mov rdx, qword [rbp - 8]	       110	fibheap.c	FUNCTION_5	CALL_2
0x400017a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       110	fibheap.c	FUNCTION_5	CALL_2
0x400017e	          0x4889d6	                            mov rsi, rdx	       110	fibheap.c	FUNCTION_5	CALL_2
0x4000181	          0x4889c7	                            mov rdi, rax	       110	fibheap.c	FUNCTION_5	CALL_2
0x4000184	      0xe831050000	               call sym.fibheap_ins_root	       110	fibheap.c	FUNCTION_5	CALL_2
0x4000189	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       114	fibheap.c	FUNCTION_5	IF_1
0x400018d	        0x488b4008	                mov rax, qword [rax + 8]	       114	fibheap.c	FUNCTION_5	IF_1
0x4000191	          0x4885c0	                           test rax, rax	       114	fibheap.c	FUNCTION_5	IF_1
0x4000194	            0x7419	                            je 0x40001af	       114	fibheap.c	FUNCTION_5	IF_1
0x4000196	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	fibheap.c	FUNCTION_5	IF_1
0x400019a	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       114	fibheap.c	FUNCTION_5	IF_1
0x400019e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       114	fibheap.c	FUNCTION_5	IF_1
0x40001a2	        0x488b4008	                mov rax, qword [rax + 8]	       114	fibheap.c	FUNCTION_5	IF_1
0x40001a6	        0x488b4020	            mov rax, qword [rax + 0x20] 	       114	fibheap.c	FUNCTION_5	IF_1
0x40001aa	          0x4839c2	                            cmp rdx, rax	       114	fibheap.c	FUNCTION_5	IF_1
0x40001ad	            0x7d0c	                           jge 0x40001bb	       114	fibheap.c	FUNCTION_5	IF_1
0x40001af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       115	fibheap.c	FUNCTION_5	IF_1
0x40001b3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       115	fibheap.c	FUNCTION_5	IF_1
0x40001b7	        0x48895008	                mov qword [rax + 8], rdx	       115	fibheap.c	FUNCTION_5	IF_1
0x40001bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       117	fibheap.c	FUNCTION_5
0x40001bf	          0x488b00	                    mov rax, qword [rax]	       117	fibheap.c	FUNCTION_5
0x40001c2	        0x488d5001	                      lea rdx, [rax + 1]	       117	fibheap.c	FUNCTION_5
0x40001c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       117	fibheap.c	FUNCTION_5
0x40001ca	          0x488910	                    mov qword [rax], rdx	       117	fibheap.c	FUNCTION_5
0x40001cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	fibheap.c	FUNCTION_5
0x40001d1	              0xc9	                                   leave	       120	fibheap.c	FUNCTION_5
0x40001d2	              0xc3	                                     ret	       120	fibheap.c	FUNCTION_5
fibheap_min	WHILE,0:IF,1:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,0	14
0x40001d3	              0x55	                                push rbp	       125	fibheap.c	FUNCTION_6
0x40001d4	          0x4889e5	                            mov rbp, rsp	       125	fibheap.c	FUNCTION_6
0x40001d7	        0x48897df8	                mov qword [rbp - 8], rdi	       125	fibheap.c	FUNCTION_6
0x40001db	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	fibheap.c	FUNCTION_6	IF_1
0x40001df	        0x488b4008	                mov rax, qword [rax + 8]	       127	fibheap.c	FUNCTION_6	IF_1
0x40001e3	          0x4885c0	                           test rax, rax	       127	fibheap.c	FUNCTION_6	IF_1
0x40001e6	            0x7507	                           jne 0x40001ef	       127	fibheap.c	FUNCTION_6	IF_1
0x40001e8	      0xb800000000	                              mov eax, 0	       128	fibheap.c	FUNCTION_6	IF_1
0x40001ed	            0xeb0c	                           jmp 0x40001fb	       128	fibheap.c	FUNCTION_6	IF_1
0x40001ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	fibheap.c	FUNCTION_6
0x40001f3	        0x488b4008	                mov rax, qword [rax + 8]	       129	fibheap.c	FUNCTION_6
0x40001f7	        0x488b4028	            mov rax, qword [rax + 0x28] 	       129	fibheap.c	FUNCTION_6
0x40001fb	              0x5d	                                 pop rbp	       130	fibheap.c	FUNCTION_6
0x40001fc	              0xc3	                                     ret	       130	fibheap.c	FUNCTION_6
fibnode_new	WHILE,0:IF,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0	16
0x4000055	              0x55	                                push rbp	        65	fibheap.c	FUNCTION_2
0x4000056	          0x4889e5	                            mov rbp, rsp	        65	fibheap.c	FUNCTION_2
0x4000059	        0x4883ec10	                           sub rsp, 0x10	        65	fibheap.c	FUNCTION_2
0x400005d	      0xbe38000000	                           mov esi, 0x38	        68	fibheap.c	FUNCTION_2	CALL_1
0x4000062	      0xbf01000000	                              mov edi, 1	        68	fibheap.c	FUNCTION_2	CALL_1
0x4000067	      0xe800000000	                          call 0x400006c	        68	fibheap.c	FUNCTION_2	CALL_1
0x400006c	        0x488945f8	                mov qword [rbp - 8], rax	        68	fibheap.c	FUNCTION_2	CALL_1
0x4000070	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	fibheap.c	FUNCTION_2
0x4000074	        0x488b55f8	                mov rdx, qword [rbp - 8]	        69	fibheap.c	FUNCTION_2
0x4000078	        0x48895010	             mov qword [rax + 0x10], rdx	        69	fibheap.c	FUNCTION_2
0x400007c	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	fibheap.c	FUNCTION_2
0x4000080	        0x488b55f8	                mov rdx, qword [rbp - 8]	        70	fibheap.c	FUNCTION_2
0x4000084	        0x48895018	             mov qword [rax + 0x18], rdx	        70	fibheap.c	FUNCTION_2
0x4000088	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	fibheap.c	FUNCTION_2
0x400008c	              0xc9	                                   leave	        73	fibheap.c	FUNCTION_2
0x400008d	              0xc3	                                     ret	        73	fibheap.c	FUNCTION_2
fibheap_link	WHILE,0:IF,1:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,1	43
0x40009c2	              0x55	                                push rbp	       405	fibheap.c	FUNCTION_20
0x40009c3	          0x4889e5	                            mov rbp, rsp	       405	fibheap.c	FUNCTION_20
0x40009c6	        0x4883ec20	                           sub rsp, 0x20	       405	fibheap.c	FUNCTION_20
0x40009ca	        0x48897df8	                mov qword [rbp - 8], rdi	       405	fibheap.c	FUNCTION_20
0x40009ce	        0x488975f0	             mov qword [rbp - 0x10], rsi	       405	fibheap.c	FUNCTION_20
0x40009d2	        0x488955e8	             mov qword [rbp - 0x18], rdx	       405	fibheap.c	FUNCTION_20
0x40009d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       406	fibheap.c	FUNCTION_20	IF_1
0x40009da	        0x488b4008	                mov rax, qword [rax + 8]	       406	fibheap.c	FUNCTION_20	IF_1
0x40009de	          0x4885c0	                           test rax, rax	       406	fibheap.c	FUNCTION_20	IF_1
0x40009e1	            0x750e	                           jne 0x40009f1	       406	fibheap.c	FUNCTION_20	IF_1
0x40009e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	fibheap.c	FUNCTION_20	IF_1
0x40009e7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       407	fibheap.c	FUNCTION_20	IF_1
0x40009eb	        0x48895008	                mov qword [rax + 8], rdx	       407	fibheap.c	FUNCTION_20	IF_1
0x40009ef	            0xeb1b	                           jmp 0x4000a0c	       407	fibheap.c	FUNCTION_20	IF_1
0x40009f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       409	fibheap.c	FUNCTION_20	ELSE_1
0x40009f5	        0x488b4008	                mov rax, qword [rax + 8]	       409	fibheap.c	FUNCTION_20	ELSE_1
0x40009f9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       409	fibheap.c	FUNCTION_20	ELSE_1
0x40009fd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       409	fibheap.c	FUNCTION_20	ELSE_1
0x4000a01	          0x4889d6	                            mov rsi, rdx	       409	fibheap.c	FUNCTION_20	ELSE_1
0x4000a04	          0x4889c7	                            mov rdi, rax	       409	fibheap.c	FUNCTION_20	ELSE_1
0x4000a07	      0xe829010000	           call sym.fibnode_insert_after	       409	fibheap.c	FUNCTION_20	ELSE_1
0x4000a0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       410	fibheap.c	FUNCTION_20
0x4000a10	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       410	fibheap.c	FUNCTION_20
0x4000a14	          0x488910	                    mov qword [rax], rdx	       410	fibheap.c	FUNCTION_20
0x4000a17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       411	fibheap.c	FUNCTION_20
0x4000a1b	          0x8b4030	            mov eax, dword [rax + 0x30] 	       411	fibheap.c	FUNCTION_20
0x4000a1e	      0x25ffffff7f	                     and eax, 0x7fffffff	       411	fibheap.c	FUNCTION_20
0x4000a23	          0x83c001	                              add eax, 1	       411	fibheap.c	FUNCTION_20
0x4000a26	      0x25ffffff7f	                     and eax, 0x7fffffff	       411	fibheap.c	FUNCTION_20
0x4000a2b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       411	fibheap.c	FUNCTION_20
0x4000a2f	      0x25ffffff7f	                     and eax, 0x7fffffff	       411	fibheap.c	FUNCTION_20
0x4000a34	            0x89c1	                            mov ecx, eax	       411	fibheap.c	FUNCTION_20
0x4000a36	          0x8b4230	            mov eax, dword [rdx + 0x30] 	       411	fibheap.c	FUNCTION_20
0x4000a39	      0x2500000080	                     and eax, 0x80000000	       411	fibheap.c	FUNCTION_20
0x4000a3e	             0x9c8	                             or eax, ecx	       411	fibheap.c	FUNCTION_20
0x4000a40	          0x894230	             mov dword [rdx + 0x30], eax	       411	fibheap.c	FUNCTION_20
0x4000a43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       412	fibheap.c	FUNCTION_20
0x4000a47	         0xfb65033	           movzx edx, byte [rax + 0x33] 	       412	fibheap.c	FUNCTION_20
0x4000a4b	          0x83e27f	                           and edx, 0x7f	       412	fibheap.c	FUNCTION_20
0x4000a4e	          0x885033	               mov byte [rax + 0x33], dl	       412	fibheap.c	FUNCTION_20
0x4000a51	              0x90	                                     nop	       413	fibheap.c	FUNCTION_20
0x4000a52	              0xc9	                                   leave	       413	fibheap.c	FUNCTION_20
0x4000a53	              0xc3	                                     ret	       413	fibheap.c	FUNCTION_20
fibheap_cut	WHILE,0:IF,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0	35
0x4000a54	              0x55	                                push rbp	       418	fibheap.c	FUNCTION_21
0x4000a55	          0x4889e5	                            mov rbp, rsp	       418	fibheap.c	FUNCTION_21
0x4000a58	        0x4883ec20	                           sub rsp, 0x20	       418	fibheap.c	FUNCTION_21
0x4000a5c	        0x48897df8	                mov qword [rbp - 8], rdi	       418	fibheap.c	FUNCTION_21
0x4000a60	        0x488975f0	             mov qword [rbp - 0x10], rsi	       418	fibheap.c	FUNCTION_21
0x4000a64	        0x488955e8	             mov qword [rbp - 0x18], rdx	       418	fibheap.c	FUNCTION_21
0x4000a68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       419	fibheap.c	FUNCTION_21	CALL_1
0x4000a6c	          0x4889c7	                            mov rdi, rax	       419	fibheap.c	FUNCTION_21	CALL_1
0x4000a6f	      0xe848010000	                 call sym.fibnode_remove	       419	fibheap.c	FUNCTION_21	CALL_1
0x4000a74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       420	fibheap.c	FUNCTION_21
0x4000a78	          0x8b4030	            mov eax, dword [rax + 0x30] 	       420	fibheap.c	FUNCTION_21
0x4000a7b	      0x25ffffff7f	                     and eax, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x4000a80	       0x5ffffff7f	                     add eax, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x4000a85	      0x25ffffff7f	                     and eax, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x4000a8a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       420	fibheap.c	FUNCTION_21
0x4000a8e	      0x25ffffff7f	                     and eax, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x4000a93	            0x89c1	                            mov ecx, eax	       420	fibheap.c	FUNCTION_21
0x4000a95	          0x8b4230	            mov eax, dword [rdx + 0x30] 	       420	fibheap.c	FUNCTION_21
0x4000a98	      0x2500000080	                     and eax, 0x80000000	       420	fibheap.c	FUNCTION_21
0x4000a9d	             0x9c8	                             or eax, ecx	       420	fibheap.c	FUNCTION_21
0x4000a9f	          0x894230	             mov dword [rdx + 0x30], eax	       420	fibheap.c	FUNCTION_21
0x4000aa2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       421	fibheap.c	FUNCTION_21	CALL_2
0x4000aa6	        0x488b45f8	                mov rax, qword [rbp - 8]	       421	fibheap.c	FUNCTION_21	CALL_2
0x4000aaa	          0x4889d6	                            mov rsi, rdx	       421	fibheap.c	FUNCTION_21	CALL_2
0x4000aad	          0x4889c7	                            mov rdi, rax	       421	fibheap.c	FUNCTION_21	CALL_2
0x4000ab0	      0xe805fcffff	               call sym.fibheap_ins_root	       421	fibheap.c	FUNCTION_21	CALL_2
0x4000ab5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       422	fibheap.c	FUNCTION_21
0x4000ab9	    0x48c700000000	                      mov qword [rax], 0	       422	fibheap.c	FUNCTION_21
0x4000ac0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       423	fibheap.c	FUNCTION_21
0x4000ac4	         0xfb65033	           movzx edx, byte [rax + 0x33] 	       423	fibheap.c	FUNCTION_21
0x4000ac8	          0x83e27f	                           and edx, 0x7f	       423	fibheap.c	FUNCTION_21
0x4000acb	          0x885033	               mov byte [rax + 0x33], dl	       423	fibheap.c	FUNCTION_21
0x4000ace	              0x90	                                     nop	       424	fibheap.c	FUNCTION_21
0x4000acf	              0xc9	                                   leave	       424	fibheap.c	FUNCTION_21
0x4000ad0	              0xc3	                                     ret	       424	fibheap.c	FUNCTION_21
fibheap_replace_key	WHILE,0:IF,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0	20
0x40004c3	              0x55	                                push rbp	       248	fibheap.c	FUNCTION_12
0x40004c4	          0x4889e5	                            mov rbp, rsp	       248	fibheap.c	FUNCTION_12
0x40004c7	        0x4883ec30	                           sub rsp, 0x30	       248	fibheap.c	FUNCTION_12
0x40004cb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       248	fibheap.c	FUNCTION_12
0x40004cf	        0x488975e0	             mov qword [rbp - 0x20], rsi	       248	fibheap.c	FUNCTION_12
0x40004d3	        0x488955d8	             mov qword [rbp - 0x28], rdx	       248	fibheap.c	FUNCTION_12
0x40004d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       249	fibheap.c	FUNCTION_12
0x40004db	        0x488b4020	            mov rax, qword [rax + 0x20] 	       249	fibheap.c	FUNCTION_12
0x40004df	          0x8945fc	                mov dword [rbp - 4], eax	       249	fibheap.c	FUNCTION_12
0x40004e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       250	fibheap.c	FUNCTION_12	CALL_1
0x40004e6	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       250	fibheap.c	FUNCTION_12	CALL_1
0x40004ea	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       250	fibheap.c	FUNCTION_12	CALL_1
0x40004ee	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       250	fibheap.c	FUNCTION_12	CALL_1
0x40004f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       250	fibheap.c	FUNCTION_12	CALL_1
0x40004f6	          0x4889c7	                            mov rdi, rax	       250	fibheap.c	FUNCTION_12	CALL_1
0x40004f9	      0xe800000000	                          call 0x40004fe	       250	fibheap.c	FUNCTION_12	CALL_1
0x40004fe	          0x8b45fc	                mov eax, dword [rbp - 4]	       251	fibheap.c	FUNCTION_12
0x4000501	            0x4898	                                    cdqe	       251	fibheap.c	FUNCTION_12
0x4000503	              0xc9	                                   leave	       252	fibheap.c	FUNCTION_12
0x4000504	              0xc3	                                     ret	       252	fibheap.c	FUNCTION_12
fibheap_compare	WHILE,0:IF,2:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,0	24
0x400008e	              0x55	                                push rbp	        77	fibheap.c	FUNCTION_3
0x400008f	          0x4889e5	                            mov rbp, rsp	        77	fibheap.c	FUNCTION_3
0x4000092	        0x48897df8	                mov qword [rbp - 8], rdi	        77	fibheap.c	FUNCTION_3
0x4000096	        0x488975f0	             mov qword [rbp - 0x10], rsi	        77	fibheap.c	FUNCTION_3
0x400009a	        0x488955e8	             mov qword [rbp - 0x18], rdx	        77	fibheap.c	FUNCTION_3
0x400009e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        78	fibheap.c	FUNCTION_3	IF_1
0x40000a2	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x40000a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        78	fibheap.c	FUNCTION_3	IF_1
0x40000aa	        0x488b4020	            mov rax, qword [rax + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x40000ae	          0x4839c2	                            cmp rdx, rax	        78	fibheap.c	FUNCTION_3	IF_1
0x40000b1	            0x7d07	                           jge 0x40000ba	        78	fibheap.c	FUNCTION_3	IF_1
0x40000b3	      0xb8ffffffff	                     mov eax, 0xffffffff	        79	fibheap.c	FUNCTION_3	IF_1
0x40000b8	            0xeb21	                           jmp 0x40000db	        79	fibheap.c	FUNCTION_3	IF_1
0x40000ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        80	fibheap.c	FUNCTION_3	IF_2
0x40000be	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        80	fibheap.c	FUNCTION_3	IF_2
0x40000c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        80	fibheap.c	FUNCTION_3	IF_2
0x40000c6	        0x488b4020	            mov rax, qword [rax + 0x20] 	        80	fibheap.c	FUNCTION_3	IF_2
0x40000ca	          0x4839c2	                            cmp rdx, rax	        80	fibheap.c	FUNCTION_3	IF_2
0x40000cd	            0x7e07	                           jle 0x40000d6	        80	fibheap.c	FUNCTION_3	IF_2
0x40000cf	      0xb801000000	                              mov eax, 1	        81	fibheap.c	FUNCTION_3	IF_2
0x40000d4	            0xeb05	                           jmp 0x40000db	        81	fibheap.c	FUNCTION_3	IF_2
0x40000d6	      0xb800000000	                              mov eax, 0	        82	fibheap.c	FUNCTION_3
0x40000db	              0x5d	                                 pop rbp	        83	fibheap.c	FUNCTION_3
0x40000dc	              0xc3	                                     ret	        83	fibheap.c	FUNCTION_3
fibheap_rem_root	WHILE,0:IF,1:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,1	21
0x4000716	              0x55	                                push rbp	       347	fibheap.c	FUNCTION_18
0x4000717	          0x4889e5	                            mov rbp, rsp	       347	fibheap.c	FUNCTION_18
0x400071a	        0x4883ec10	                           sub rsp, 0x10	       347	fibheap.c	FUNCTION_18
0x400071e	        0x48897df8	                mov qword [rbp - 8], rdi	       347	fibheap.c	FUNCTION_18
0x4000722	        0x488975f0	             mov qword [rbp - 0x10], rsi	       347	fibheap.c	FUNCTION_18
0x4000726	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       348	fibheap.c	FUNCTION_18	IF_1
0x400072a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       348	fibheap.c	FUNCTION_18	IF_1
0x400072e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       348	fibheap.c	FUNCTION_18	IF_1
0x4000732	            0x750e	                           jne 0x4000742	       348	fibheap.c	FUNCTION_18	IF_1
0x4000734	        0x488b45f8	                mov rax, qword [rbp - 8]	       349	fibheap.c	FUNCTION_18	IF_1
0x4000738	    0x48c740100000	               mov qword [rax + 0x10], 0	       349	fibheap.c	FUNCTION_18	IF_1
0x4000740	            0xeb17	                           jmp 0x4000759	       352	fibheap.c	FUNCTION_18
0x4000742	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       351	fibheap.c	FUNCTION_18	CALL_1
0x4000746	          0x4889c7	                            mov rdi, rax	       351	fibheap.c	FUNCTION_18	CALL_1
0x4000749	      0xe86e040000	                 call sym.fibnode_remove	       351	fibheap.c	FUNCTION_18	CALL_1
0x400074e	          0x4889c2	                            mov rdx, rax	       351	fibheap.c	FUNCTION_18	CALL_1
0x4000751	        0x488b45f8	                mov rax, qword [rbp - 8]	       351	fibheap.c	FUNCTION_18	CALL_1
0x4000755	        0x48895010	             mov qword [rax + 0x10], rdx	       351	fibheap.c	FUNCTION_18	CALL_1
0x4000759	              0x90	                                     nop	       352	fibheap.c	FUNCTION_18
0x400075a	              0xc9	                                   leave	       352	fibheap.c	FUNCTION_18
0x400075b	              0xc3	                                     ret	       352	fibheap.c	FUNCTION_18
