bfd_coff_get_syment	CALL,3:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	72
0x4000040	              0x55	                                push rbp	        34	coff-bfd.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        34	coff-bfd.c	FUNCTION_1
0x4000044	        0x4883ec30	                           sub rsp, 0x30	        34	coff-bfd.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	        34	coff-bfd.c	FUNCTION_1
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	        34	coff-bfd.c	FUNCTION_1
0x4000050	        0x488955d8	             mov qword [rbp - 0x28], rdx	        34	coff-bfd.c	FUNCTION_1
0x4000054	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000058	          0x488b00	                    mov rax, qword [rax]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400005b	        0x488b4008	                mov rax, qword [rax + 8]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400005f	          0x8b4008	                mov eax, dword [rax + 8]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000062	          0x83f802	                              cmp eax, 2	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000065	            0x7413	                            je 0x400007a	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000067	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400006b	          0x488b00	                    mov rax, qword [rax]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400006e	        0x488b4008	                mov rax, qword [rax + 8]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000072	          0x8b4008	                mov eax, dword [rax + 8]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000075	          0x83f804	                              cmp eax, 4	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000078	            0x7519	                           jne 0x4000093	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400007a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400007e	          0x488b00	                    mov rax, qword [rax]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000081	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000088	          0x4885c0	                           test rax, rax	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400008b	            0x7406	                            je 0x4000093	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400008d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000091	            0xeb05	                           jmp 0x4000098	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000093	      0xb800000000	                              mov eax, 0	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000098	        0x488945f8	                mov qword [rbp - 8], rax	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400009c	      0x48837df800	                  cmp qword [rbp - 8], 0	        38	coff-bfd.c	FUNCTION_1	IF_1
0x40000a1	            0x741c	                            je 0x40000bf	        38	coff-bfd.c	FUNCTION_1	IF_1
0x40000a3	        0x488b45f8	                mov rax, qword [rbp - 8]	        38	coff-bfd.c	FUNCTION_1	IF_1
0x40000a7	        0x488b4030	            mov rax, qword [rax + 0x30] 	        38	coff-bfd.c	FUNCTION_1	IF_1
0x40000ab	          0x4885c0	                           test rax, rax	        38	coff-bfd.c	FUNCTION_1	IF_1
0x40000ae	            0x740f	                            je 0x40000bf	        38	coff-bfd.c	FUNCTION_1	IF_1
0x40000b0	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	coff-bfd.c	FUNCTION_1	IF_1
0x40000b4	        0x488b4030	            mov rax, qword [rax + 0x30] 	        39	coff-bfd.c	FUNCTION_1	IF_1
0x40000b8	          0x8b4030	            mov eax, dword [rax + 0x30] 	        39	coff-bfd.c	FUNCTION_1	IF_1
0x40000bb	            0x85c0	                           test eax, eax	        39	coff-bfd.c	FUNCTION_1	IF_1
0x40000bd	            0x7511	                           jne 0x40000d0	        39	coff-bfd.c	FUNCTION_1	IF_1
0x40000bf	      0xbf05000000	                              mov edi, 5	        41	coff-bfd.c	FUNCTION_1	IF_1	CALL_2
0x40000c4	      0xe800000000	                          call 0x40000c9	        41	coff-bfd.c	FUNCTION_1	IF_1	CALL_2
0x40000c9	      0xb800000000	                              mov eax, 0	        42	coff-bfd.c	FUNCTION_1	IF_1
0x40000ce	            0xeb6d	                           jmp 0x400013d	        42	coff-bfd.c	FUNCTION_1	IF_1
0x40000d0	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	coff-bfd.c	FUNCTION_1
0x40000d4	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        45	coff-bfd.c	FUNCTION_1
0x40000d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        45	coff-bfd.c	FUNCTION_1
0x40000dc	        0x488b4a08	                mov rcx, qword [rdx + 8]	        45	coff-bfd.c	FUNCTION_1
0x40000e0	          0x488908	                    mov qword [rax], rcx	        45	coff-bfd.c	FUNCTION_1
0x40000e3	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	        45	coff-bfd.c	FUNCTION_1
0x40000e7	        0x48894808	                mov qword [rax + 8], rcx	        45	coff-bfd.c	FUNCTION_1
0x40000eb	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	        45	coff-bfd.c	FUNCTION_1
0x40000ef	        0x48894810	             mov qword [rax + 0x10], rcx	        45	coff-bfd.c	FUNCTION_1
0x40000f3	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	        45	coff-bfd.c	FUNCTION_1
0x40000f7	        0x48894818	             mov qword [rax + 0x18], rcx	        45	coff-bfd.c	FUNCTION_1
0x40000fb	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	        45	coff-bfd.c	FUNCTION_1
0x40000ff	        0x48895020	             mov qword [rax + 0x20], rdx	        45	coff-bfd.c	FUNCTION_1
0x4000103	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	coff-bfd.c	FUNCTION_1	IF_2
0x4000107	        0x488b4030	            mov rax, qword [rax + 0x30] 	        47	coff-bfd.c	FUNCTION_1	IF_2
0x400010b	         0xfb64004	               movzx eax, byte [rax + 4]	        47	coff-bfd.c	FUNCTION_1	IF_2
0x400010f	          0x83e001	                              and eax, 1	        47	coff-bfd.c	FUNCTION_1	IF_2
0x4000112	            0x84c0	                             test al, al	        47	coff-bfd.c	FUNCTION_1	IF_2
0x4000114	            0x7422	                            je 0x4000138	        47	coff-bfd.c	FUNCTION_1	IF_2
0x4000116	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        48	coff-bfd.c	FUNCTION_1	IF_2
0x400011a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        48	coff-bfd.c	FUNCTION_1	IF_2
0x400011e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        49	coff-bfd.c	FUNCTION_1	CALL_3
0x4000122	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        49	coff-bfd.c	FUNCTION_1	CALL_3
0x4000129	        0x488b4020	            mov rax, qword [rax + 0x20] 	        49	coff-bfd.c	FUNCTION_1	CALL_3
0x400012d	          0x4829c2	                            sub rdx, rax	        48	coff-bfd.c	FUNCTION_1	IF_2
0x4000130	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        48	coff-bfd.c	FUNCTION_1	IF_2
0x4000134	        0x48895010	             mov qword [rax + 0x10], rdx	        48	coff-bfd.c	FUNCTION_1	IF_2
0x4000138	      0xb801000000	                              mov eax, 1	        53	coff-bfd.c	FUNCTION_1
0x400013d	              0xc9	                                   leave	        54	coff-bfd.c	FUNCTION_1
0x400013e	              0xc3	                                     ret	        54	coff-bfd.c	FUNCTION_1
bfd_coff_get_auxent	CALL,6:WHILE,0:IF,4:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	142
0x400013f	              0x55	                                push rbp	        63	coff-bfd.c	FUNCTION_2
0x4000140	          0x4889e5	                            mov rbp, rsp	        63	coff-bfd.c	FUNCTION_2
0x4000143	        0x4883ec30	                           sub rsp, 0x30	        63	coff-bfd.c	FUNCTION_2
0x4000147	        0x48897de8	             mov qword [rbp - 0x18], rdi	        63	coff-bfd.c	FUNCTION_2
0x400014b	        0x488975e0	             mov qword [rbp - 0x20], rsi	        63	coff-bfd.c	FUNCTION_2
0x400014f	          0x8955dc	             mov dword [rbp - 0x24], edx	        63	coff-bfd.c	FUNCTION_2
0x4000152	        0x48894dd0	             mov qword [rbp - 0x30], rcx	        63	coff-bfd.c	FUNCTION_2
0x4000156	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x400015a	          0x488b00	                    mov rax, qword [rax]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x400015d	        0x488b4008	                mov rax, qword [rax + 8]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000161	          0x8b4008	                mov eax, dword [rax + 8]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000164	          0x83f802	                              cmp eax, 2	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000167	            0x7413	                            je 0x400017c	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000169	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x400016d	          0x488b00	                    mov rax, qword [rax]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000170	        0x488b4008	                mov rax, qword [rax + 8]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000174	          0x8b4008	                mov eax, dword [rax + 8]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000177	          0x83f804	                              cmp eax, 4	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x400017a	            0x7519	                           jne 0x4000195	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x400017c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000180	          0x488b00	                    mov rax, qword [rax]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000183	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x400018a	          0x4885c0	                           test rax, rax	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x400018d	            0x7406	                            je 0x4000195	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x400018f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000193	            0xeb05	                           jmp 0x400019a	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x4000195	      0xb800000000	                              mov eax, 0	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x400019a	        0x488945f0	             mov qword [rbp - 0x10], rax	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x400019e	      0x48837df000	               cmp qword [rbp - 0x10], 0	        69	coff-bfd.c	FUNCTION_2	IF_1
0x40001a3	            0x7430	                            je 0x40001d5	        69	coff-bfd.c	FUNCTION_2	IF_1
0x40001a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        70	coff-bfd.c	FUNCTION_2	IF_1
0x40001a9	        0x488b4030	            mov rax, qword [rax + 0x30] 	        70	coff-bfd.c	FUNCTION_2	IF_1
0x40001ad	          0x4885c0	                           test rax, rax	        70	coff-bfd.c	FUNCTION_2	IF_1
0x40001b0	            0x7423	                            je 0x40001d5	        70	coff-bfd.c	FUNCTION_2	IF_1
0x40001b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        71	coff-bfd.c	FUNCTION_2	IF_1
0x40001b6	        0x488b4030	            mov rax, qword [rax + 0x30] 	        71	coff-bfd.c	FUNCTION_2	IF_1
0x40001ba	          0x8b4030	            mov eax, dword [rax + 0x30] 	        71	coff-bfd.c	FUNCTION_2	IF_1
0x40001bd	            0x85c0	                           test eax, eax	        71	coff-bfd.c	FUNCTION_2	IF_1
0x40001bf	            0x7414	                            je 0x40001d5	        71	coff-bfd.c	FUNCTION_2	IF_1
0x40001c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        72	coff-bfd.c	FUNCTION_2	IF_1
0x40001c5	        0x488b4030	            mov rax, qword [rax + 0x30] 	        72	coff-bfd.c	FUNCTION_2	IF_1
0x40001c9	         0xfb64029	           movzx eax, byte [rax + 0x29] 	        72	coff-bfd.c	FUNCTION_2	IF_1
0x40001cd	           0xfb6c0	                           movzx eax, al	        72	coff-bfd.c	FUNCTION_2	IF_1
0x40001d0	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	        72	coff-bfd.c	FUNCTION_2	IF_1
0x40001d3	            0x7f14	                            jg 0x40001e9	        72	coff-bfd.c	FUNCTION_2	IF_1
0x40001d5	      0xbf05000000	                              mov edi, 5	        74	coff-bfd.c	FUNCTION_2	IF_1	CALL_2
0x40001da	      0xe800000000	                          call 0x40001df	        74	coff-bfd.c	FUNCTION_2	IF_1	CALL_2
0x40001df	      0xb800000000	                              mov eax, 0	        75	coff-bfd.c	FUNCTION_2	IF_1
0x40001e4	      0xe961010000	                           jmp 0x400034a	        75	coff-bfd.c	FUNCTION_2	IF_1
0x40001e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        78	coff-bfd.c	FUNCTION_2
0x40001ed	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        78	coff-bfd.c	FUNCTION_2
0x40001f1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	        78	coff-bfd.c	FUNCTION_2
0x40001f4	            0x4898	                                    cdqe	        78	coff-bfd.c	FUNCTION_2
0x40001f6	        0x4883c001	                              add rax, 1	        78	coff-bfd.c	FUNCTION_2
0x40001fa	        0x48c1e003	                              shl rax, 3	        78	coff-bfd.c	FUNCTION_2
0x40001fe	    0x488d0cc50000	                        lea rcx, [rax*8]	        78	coff-bfd.c	FUNCTION_2
0x4000206	          0x4829c1	                            sub rcx, rax	        78	coff-bfd.c	FUNCTION_2
0x4000209	          0x4889c8	                            mov rax, rcx	        78	coff-bfd.c	FUNCTION_2
0x400020c	          0x4801d0	                            add rax, rdx	        78	coff-bfd.c	FUNCTION_2
0x400020f	        0x488945f8	                mov qword [rbp - 8], rax	        78	coff-bfd.c	FUNCTION_2
0x4000213	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x4000217	          0x8b4030	            mov eax, dword [rax + 0x30] 	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x400021a	            0x85c0	                           test eax, eax	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x400021c	            0x740f	                            je 0x400022d	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x400021e	      0xbe50000000	                           mov esi, 0x50	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x4000223	      0xbf00000000	                              mov edi, 0	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x4000228	      0xe800000000	                          call 0x400022d	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x400022d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        81	coff-bfd.c	FUNCTION_2
0x4000231	        0x488b55f8	                mov rdx, qword [rbp - 8]	        81	coff-bfd.c	FUNCTION_2
0x4000235	        0x488b4a08	                mov rcx, qword [rdx + 8]	        81	coff-bfd.c	FUNCTION_2
0x4000239	          0x488908	                    mov qword [rax], rcx	        81	coff-bfd.c	FUNCTION_2
0x400023c	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	        81	coff-bfd.c	FUNCTION_2
0x4000240	        0x48894808	                mov qword [rax + 8], rcx	        81	coff-bfd.c	FUNCTION_2
0x4000244	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	        81	coff-bfd.c	FUNCTION_2
0x4000248	        0x48894810	             mov qword [rax + 0x10], rcx	        81	coff-bfd.c	FUNCTION_2
0x400024c	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	        81	coff-bfd.c	FUNCTION_2
0x4000250	        0x48894818	             mov qword [rax + 0x18], rcx	        81	coff-bfd.c	FUNCTION_2
0x4000254	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	        81	coff-bfd.c	FUNCTION_2
0x4000258	        0x48895020	             mov qword [rax + 0x20], rdx	        81	coff-bfd.c	FUNCTION_2
0x400025c	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	coff-bfd.c	FUNCTION_2	IF_2
0x4000260	         0xfb64004	               movzx eax, byte [rax + 4]	        83	coff-bfd.c	FUNCTION_2	IF_2
0x4000264	          0x83e002	                              and eax, 2	        83	coff-bfd.c	FUNCTION_2	IF_2
0x4000267	            0x84c0	                             test al, al	        83	coff-bfd.c	FUNCTION_2	IF_2
0x4000269	            0x743e	                            je 0x40002a9	        83	coff-bfd.c	FUNCTION_2	IF_2
0x400026b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        85	coff-bfd.c	FUNCTION_2	IF_2
0x400026f	          0x488b00	                    mov rax, qword [rax]	        85	coff-bfd.c	FUNCTION_2	IF_2
0x4000272	          0x4889c2	                            mov rdx, rax	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x4000275	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x4000279	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x4000280	        0x488b4020	            mov rax, qword [rax + 0x20] 	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x4000284	          0x4829c2	                            sub rdx, rax	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x4000287	          0x4889d0	                            mov rax, rdx	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x400028a	        0x48c1f803	                              sar rax, 3	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x400028e	          0x4889c2	                            mov rdx, rax	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x4000291	    0x48b8b76ddbb6	          movabs rax, 0x6db6db6db6db6db7	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x400029b	        0x480fafc2	                           imul rax, rdx	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x400029f	          0x4889c2	                            mov rdx, rax	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x40002a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        84	coff-bfd.c	FUNCTION_2	IF_2
0x40002a6	          0x488910	                    mov qword [rax], rdx	        84	coff-bfd.c	FUNCTION_2	IF_2
0x40002a9	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	coff-bfd.c	FUNCTION_2	IF_3
0x40002ad	         0xfb64004	               movzx eax, byte [rax + 4]	        88	coff-bfd.c	FUNCTION_2	IF_3
0x40002b1	          0x83e004	                              and eax, 4	        88	coff-bfd.c	FUNCTION_2	IF_3
0x40002b4	            0x84c0	                             test al, al	        88	coff-bfd.c	FUNCTION_2	IF_3
0x40002b6	            0x7440	                            je 0x40002f8	        88	coff-bfd.c	FUNCTION_2	IF_3
0x40002b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        90	coff-bfd.c	FUNCTION_2	IF_3
0x40002bc	        0x488b4018	            mov rax, qword [rax + 0x18] 	        90	coff-bfd.c	FUNCTION_2	IF_3
0x40002c0	          0x4889c2	                            mov rdx, rax	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002c7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002ce	        0x488b4020	            mov rax, qword [rax + 0x20] 	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002d2	          0x4829c2	                            sub rdx, rax	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002d5	          0x4889d0	                            mov rax, rdx	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002d8	        0x48c1f803	                              sar rax, 3	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002dc	          0x4889c2	                            mov rdx, rax	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002df	    0x48b8b76ddbb6	          movabs rax, 0x6db6db6db6db6db7	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002e9	        0x480fafc2	                           imul rax, rdx	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002ed	          0x4889c2	                            mov rdx, rax	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40002f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        89	coff-bfd.c	FUNCTION_2	IF_3
0x40002f4	        0x48895018	             mov qword [rax + 0x18], rdx	        89	coff-bfd.c	FUNCTION_2	IF_3
0x40002f8	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	coff-bfd.c	FUNCTION_2	IF_4
0x40002fc	         0xfb64004	               movzx eax, byte [rax + 4]	        93	coff-bfd.c	FUNCTION_2	IF_4
0x4000300	          0x83e008	                              and eax, 8	        93	coff-bfd.c	FUNCTION_2	IF_4
0x4000303	            0x84c0	                             test al, al	        93	coff-bfd.c	FUNCTION_2	IF_4
0x4000305	            0x743e	                            je 0x4000345	        93	coff-bfd.c	FUNCTION_2	IF_4
0x4000307	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        95	coff-bfd.c	FUNCTION_2	IF_4
0x400030b	          0x488b00	                    mov rax, qword [rax]	        95	coff-bfd.c	FUNCTION_2	IF_4
0x400030e	          0x4889c2	                            mov rdx, rax	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x4000311	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x4000315	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x400031c	        0x488b4020	            mov rax, qword [rax + 0x20] 	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x4000320	          0x4829c2	                            sub rdx, rax	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x4000323	          0x4889d0	                            mov rax, rdx	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x4000326	        0x48c1f803	                              sar rax, 3	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x400032a	          0x4889c2	                            mov rdx, rax	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x400032d	    0x48b8b76ddbb6	          movabs rax, 0x6db6db6db6db6db7	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x4000337	        0x480fafc2	                           imul rax, rdx	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x400033b	          0x4889c2	                            mov rdx, rax	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x400033e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        94	coff-bfd.c	FUNCTION_2	IF_4
0x4000342	          0x488910	                    mov qword [rax], rdx	        94	coff-bfd.c	FUNCTION_2	IF_4
0x4000345	      0xb801000000	                              mov eax, 1	        98	coff-bfd.c	FUNCTION_2
0x400034a	              0xc9	                                   leave	        99	coff-bfd.c	FUNCTION_2
0x400034b	              0xc3	                                     ret	        99	coff-bfd.c	FUNCTION_2
