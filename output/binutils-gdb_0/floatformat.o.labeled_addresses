get_field	IF,1:DO,1:SWITCH,0:WHILE,0:functions,0:CALL,0:FOR,0:ELSE,1	89
0x4000424	              0x55	                                push rbp	       427	floatformat.c	FUNCTION_5
0x4000425	          0x4889e5	                            mov rbp, rsp	       427	floatformat.c	FUNCTION_5
0x4000428	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       427	floatformat.c	FUNCTION_5
0x400042c	          0x8975c4	             mov dword [rbp - 0x3c], esi	       427	floatformat.c	FUNCTION_5
0x400042f	          0x8955c0	             mov dword [rbp - 0x40], edx	       427	floatformat.c	FUNCTION_5
0x4000432	          0x894dbc	             mov dword [rbp - 0x44], ecx	       427	floatformat.c	FUNCTION_5
0x4000435	        0x448945b8	             mov dword [rbp - 0x48], r8d	       427	floatformat.c	FUNCTION_5
0x4000439	    0x48c745f80000	                  mov qword [rbp - 8], 0	       428	floatformat.c	FUNCTION_5
0x4000441	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       430	floatformat.c	FUNCTION_5
0x4000448	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       431	floatformat.c	FUNCTION_5
0x400044c	            0x7507	                           jne 0x4000455	       431	floatformat.c	FUNCTION_5
0x400044e	      0xb801000000	                              mov eax, 1	       431	floatformat.c	FUNCTION_5
0x4000453	            0xeb05	                           jmp 0x400045a	       431	floatformat.c	FUNCTION_5
0x4000455	      0xb8ffffffff	                     mov eax, 0xffffffff	       431	floatformat.c	FUNCTION_5
0x400045a	          0x8945e8	             mov dword [rbp - 0x18], eax	       431	floatformat.c	FUNCTION_5
0x400045d	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       434	floatformat.c	FUNCTION_5
0x4000460	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       434	floatformat.c	FUNCTION_5
0x4000463	             0x1c2	                            add edx, eax	       434	floatformat.c	FUNCTION_5
0x4000465	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       434	floatformat.c	FUNCTION_5
0x4000468	            0x29d0	                            sub eax, edx	       434	floatformat.c	FUNCTION_5
0x400046a	          0x8945bc	             mov dword [rbp - 0x44], eax	       434	floatformat.c	FUNCTION_5
0x400046d	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       437	floatformat.c	FUNCTION_5	IF_1
0x4000471	            0x750b	                           jne 0x400047e	       437	floatformat.c	FUNCTION_5	IF_1
0x4000473	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       438	floatformat.c	FUNCTION_5	IF_1
0x4000476	          0xc1e803	                              shr eax, 3	       438	floatformat.c	FUNCTION_5	IF_1
0x4000479	          0x8945d8	             mov dword [rbp - 0x28], eax	       438	floatformat.c	FUNCTION_5	IF_1
0x400047c	            0xeb0f	                           jmp 0x400048d	       438	floatformat.c	FUNCTION_5	IF_1
0x400047e	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       440	floatformat.c	FUNCTION_5	ELSE_1
0x4000481	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       440	floatformat.c	FUNCTION_5	ELSE_1
0x4000484	          0x83e801	                              sub eax, 1	       440	floatformat.c	FUNCTION_5	ELSE_1
0x4000487	          0xc1e803	                              shr eax, 3	       440	floatformat.c	FUNCTION_5	ELSE_1
0x400048a	          0x8945d8	             mov dword [rbp - 0x28], eax	       440	floatformat.c	FUNCTION_5	ELSE_1
0x400048d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       442	floatformat.c	FUNCTION_5
0x4000490	          0x83e007	                              and eax, 7	       442	floatformat.c	FUNCTION_5
0x4000493	          0x8945dc	             mov dword [rbp - 0x24], eax	       442	floatformat.c	FUNCTION_5
0x4000496	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       443	floatformat.c	FUNCTION_5
0x4000499	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       443	floatformat.c	FUNCTION_5
0x400049c	             0x1d0	                            add eax, edx	       443	floatformat.c	FUNCTION_5
0x400049e	      0xba08000000	                              mov edx, 8	       443	floatformat.c	FUNCTION_5
0x40004a3	          0x83f808	                              cmp eax, 8	       443	floatformat.c	FUNCTION_5
0x40004a6	           0xf47c2	                          cmova eax, edx	       443	floatformat.c	FUNCTION_5
0x40004a9	          0x8945e0	             mov dword [rbp - 0x20], eax	       443	floatformat.c	FUNCTION_5
0x40004ac	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       447	floatformat.c	FUNCTION_5	DO_1
0x40004af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       447	floatformat.c	FUNCTION_5	DO_1
0x40004b3	          0x4801d0	                            add rax, rdx	       447	floatformat.c	FUNCTION_5	DO_1
0x40004b6	           0xfb600	                   movzx eax, byte [rax]	       447	floatformat.c	FUNCTION_5	DO_1
0x40004b9	           0xfb6d0	                           movzx edx, al	       447	floatformat.c	FUNCTION_5	DO_1
0x40004bc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       447	floatformat.c	FUNCTION_5	DO_1
0x40004bf	            0x89c1	                            mov ecx, eax	       447	floatformat.c	FUNCTION_5	DO_1
0x40004c1	            0xd3fa	                             sar edx, cl	       447	floatformat.c	FUNCTION_5	DO_1
0x40004c3	            0x89d0	                            mov eax, edx	       447	floatformat.c	FUNCTION_5	DO_1
0x40004c5	          0x8945ec	             mov dword [rbp - 0x14], eax	       447	floatformat.c	FUNCTION_5	DO_1
0x40004c8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       448	floatformat.c	FUNCTION_5	DO_1
0x40004cb	          0x2b45dc	             sub eax, dword [rbp - 0x24]	       448	floatformat.c	FUNCTION_5	DO_1
0x40004ce	          0x8945f0	             mov dword [rbp - 0x10], eax	       448	floatformat.c	FUNCTION_5	DO_1
0x40004d1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       449	floatformat.c	FUNCTION_5	DO_1
0x40004d4	      0xba01000000	                              mov edx, 1	       449	floatformat.c	FUNCTION_5	DO_1
0x40004d9	            0x89c1	                            mov ecx, eax	       449	floatformat.c	FUNCTION_5	DO_1
0x40004db	            0xd3e2	                             shl edx, cl	       449	floatformat.c	FUNCTION_5	DO_1
0x40004dd	            0x89d0	                            mov eax, edx	       449	floatformat.c	FUNCTION_5	DO_1
0x40004df	          0x83e801	                              sub eax, 1	       449	floatformat.c	FUNCTION_5	DO_1
0x40004e2	          0x8945f4	              mov dword [rbp - 0xc], eax	       449	floatformat.c	FUNCTION_5	DO_1
0x40004e5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       450	floatformat.c	FUNCTION_5	DO_1
0x40004e8	          0x2345f4	              and eax, dword [rbp - 0xc]	       450	floatformat.c	FUNCTION_5	DO_1
0x40004eb	            0x89c2	                            mov edx, eax	       450	floatformat.c	FUNCTION_5	DO_1
0x40004ed	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       450	floatformat.c	FUNCTION_5	DO_1
0x40004f0	            0x89c1	                            mov ecx, eax	       450	floatformat.c	FUNCTION_5	DO_1
0x40004f2	            0xd3e2	                             shl edx, cl	       450	floatformat.c	FUNCTION_5	DO_1
0x40004f4	            0x89d0	                            mov eax, edx	       450	floatformat.c	FUNCTION_5	DO_1
0x40004f6	            0x89c0	                            mov eax, eax	       450	floatformat.c	FUNCTION_5	DO_1
0x40004f8	        0x480945f8	                 or qword [rbp - 8], rax	       450	floatformat.c	FUNCTION_5	DO_1
0x40004fc	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       451	floatformat.c	FUNCTION_5	DO_1
0x40004ff	          0x2945b8	             sub dword [rbp - 0x48], eax	       451	floatformat.c	FUNCTION_5	DO_1
0x4000502	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       452	floatformat.c	FUNCTION_5	DO_1
0x4000505	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       452	floatformat.c	FUNCTION_5	DO_1
0x4000508	             0x1d0	                            add eax, edx	       452	floatformat.c	FUNCTION_5	DO_1
0x400050a	          0x8945e4	             mov dword [rbp - 0x1c], eax	       452	floatformat.c	FUNCTION_5	DO_1
0x400050d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       453	floatformat.c	FUNCTION_5	DO_1
0x4000510	           0x145d8	             add dword [rbp - 0x28], eax	       453	floatformat.c	FUNCTION_5	DO_1
0x4000513	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       454	floatformat.c	FUNCTION_5	DO_1
0x400051a	      0xb808000000	                              mov eax, 8	       455	floatformat.c	FUNCTION_5	DO_1
0x400051f	        0x837db808	               cmp dword [rbp - 0x48], 8	       455	floatformat.c	FUNCTION_5	DO_1
0x4000523	         0xf4645b8	          cmovbe eax, dword [rbp - 0x48]	       455	floatformat.c	FUNCTION_5	DO_1
0x4000527	          0x8945e0	             mov dword [rbp - 0x20], eax	       455	floatformat.c	FUNCTION_5	DO_1
0x400052a	        0x837db800	               cmp dword [rbp - 0x48], 0	       457	floatformat.c	FUNCTION_5
0x400052e	     0xf8578ffffff	                           jne 0x40004ac	       457	floatformat.c	FUNCTION_5
0x4000534	        0x488b45f8	                mov rax, qword [rbp - 8]	       459	floatformat.c	FUNCTION_5
0x4000538	              0x5d	                                 pop rbp	       460	floatformat.c	FUNCTION_5
0x4000539	              0xc3	                                     ret	       460	floatformat.c	FUNCTION_5
mant_bits_set	IF,1:DO,0:SWITCH,0:WHILE,1:functions,0:CALL,1:FOR,0:ELSE,0	40
0x40003a4	              0x55	                                push rbp	       402	floatformat.c	FUNCTION_4
0x40003a5	          0x4889e5	                            mov rbp, rsp	       402	floatformat.c	FUNCTION_4
0x40003a8	        0x4883ec20	                           sub rsp, 0x20	       402	floatformat.c	FUNCTION_4
0x40003ac	        0x48897de8	             mov qword [rbp - 0x18], rdi	       402	floatformat.c	FUNCTION_4
0x40003b0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       402	floatformat.c	FUNCTION_4
0x40003b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       406	floatformat.c	FUNCTION_4
0x40003b8	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       406	floatformat.c	FUNCTION_4
0x40003bb	          0x8945f4	              mov dword [rbp - 0xc], eax	       406	floatformat.c	FUNCTION_4
0x40003be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	floatformat.c	FUNCTION_4
0x40003c2	          0x8b4020	            mov eax, dword [rax + 0x20] 	       407	floatformat.c	FUNCTION_4
0x40003c5	          0x8945f8	                mov dword [rbp - 8], eax	       407	floatformat.c	FUNCTION_4
0x40003c8	            0xeb4d	                           jmp 0x4000417	       408	floatformat.c	FUNCTION_4	WHILE_1
0x40003ca	      0xb820000000	                           mov eax, 0x20	       410	floatformat.c	FUNCTION_4	WHILE_1
0x40003cf	        0x837df820	               cmp dword [rbp - 8], 0x20	       410	floatformat.c	FUNCTION_4	WHILE_1
0x40003d3	         0xf4e45f8	             cmovle eax, dword [rbp - 8]	       410	floatformat.c	FUNCTION_4	WHILE_1
0x40003d7	          0x8945fc	                mov dword [rbp - 4], eax	       410	floatformat.c	FUNCTION_4	WHILE_1
0x40003da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003de	          0x8b5004	                mov edx, dword [rax + 4]	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003e5	            0x8b30	                    mov esi, dword [rax]	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003e7	          0x8b7dfc	                mov edi, dword [rbp - 4]	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003ea	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003f1	          0x4189f8	                            mov r8d, edi	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003f4	          0x4889c7	                            mov rdi, rax	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003f7	      0xe828000000	                      call sym.get_field	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003fc	          0x4885c0	                           test rax, rax	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x40003ff	            0x7407	                            je 0x4000408	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000401	      0xb801000000	                              mov eax, 1	       414	floatformat.c	FUNCTION_4	WHILE_1	IF_1
0x4000406	            0xeb1a	                           jmp 0x4000422	       414	floatformat.c	FUNCTION_4	WHILE_1	IF_1
0x4000408	          0x8b45fc	                mov eax, dword [rbp - 4]	       416	floatformat.c	FUNCTION_4	WHILE_1
0x400040b	           0x145f4	              add dword [rbp - 0xc], eax	       416	floatformat.c	FUNCTION_4	WHILE_1
0x400040e	          0x8b45f8	                mov eax, dword [rbp - 8]	       417	floatformat.c	FUNCTION_4	WHILE_1
0x4000411	          0x2b45fc	                sub eax, dword [rbp - 4]	       417	floatformat.c	FUNCTION_4	WHILE_1
0x4000414	          0x8945f8	                mov dword [rbp - 8], eax	       417	floatformat.c	FUNCTION_4	WHILE_1
0x4000417	        0x837df800	                  cmp dword [rbp - 8], 0	       408	floatformat.c	FUNCTION_4	WHILE_1
0x400041b	            0x7fad	                            jg 0x40003ca	       408	floatformat.c	FUNCTION_4	WHILE_1
0x400041d	      0xb800000000	                              mov eax, 0	       419	floatformat.c	FUNCTION_4
0x4000422	              0xc9	                                   leave	       420	floatformat.c	FUNCTION_4
0x4000423	              0xc3	                                     ret	       420	floatformat.c	FUNCTION_4
put_field	IF,1:DO,1:SWITCH,0:WHILE,0:functions,0:CALL,0:FOR,0:ELSE,1	94
0x400079d	              0x55	                                push rbp	       566	floatformat.c	FUNCTION_7
0x400079e	          0x4889e5	                            mov rbp, rsp	       566	floatformat.c	FUNCTION_7
0x40007a1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       566	floatformat.c	FUNCTION_7
0x40007a5	          0x8975d4	             mov dword [rbp - 0x2c], esi	       566	floatformat.c	FUNCTION_7
0x40007a8	          0x8955d0	             mov dword [rbp - 0x30], edx	       566	floatformat.c	FUNCTION_7
0x40007ab	          0x894dcc	             mov dword [rbp - 0x34], ecx	       566	floatformat.c	FUNCTION_7
0x40007ae	        0x448945c8	             mov dword [rbp - 0x38], r8d	       566	floatformat.c	FUNCTION_7
0x40007b2	        0x4c894dc0	              mov qword [rbp - 0x40], r9	       566	floatformat.c	FUNCTION_7
0x40007b6	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       569	floatformat.c	FUNCTION_7
0x40007ba	            0x7507	                           jne 0x40007c3	       569	floatformat.c	FUNCTION_7
0x40007bc	      0xb801000000	                              mov eax, 1	       569	floatformat.c	FUNCTION_7
0x40007c1	            0xeb05	                           jmp 0x40007c8	       569	floatformat.c	FUNCTION_7
0x40007c3	      0xb8ffffffff	                     mov eax, 0xffffffff	       569	floatformat.c	FUNCTION_7
0x40007c8	          0x8945ec	             mov dword [rbp - 0x14], eax	       569	floatformat.c	FUNCTION_7
0x40007cb	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       572	floatformat.c	FUNCTION_7
0x40007ce	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       572	floatformat.c	FUNCTION_7
0x40007d1	             0x1c2	                            add edx, eax	       572	floatformat.c	FUNCTION_7
0x40007d3	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       572	floatformat.c	FUNCTION_7
0x40007d6	            0x29d0	                            sub eax, edx	       572	floatformat.c	FUNCTION_7
0x40007d8	          0x8945cc	             mov dword [rbp - 0x34], eax	       572	floatformat.c	FUNCTION_7
0x40007db	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       575	floatformat.c	FUNCTION_7	IF_1
0x40007df	            0x750b	                           jne 0x40007ec	       575	floatformat.c	FUNCTION_7	IF_1
0x40007e1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       576	floatformat.c	FUNCTION_7	IF_1
0x40007e4	          0xc1e803	                              shr eax, 3	       576	floatformat.c	FUNCTION_7	IF_1
0x40007e7	          0x8945e0	             mov dword [rbp - 0x20], eax	       576	floatformat.c	FUNCTION_7	IF_1
0x40007ea	            0xeb0f	                           jmp 0x40007fb	       576	floatformat.c	FUNCTION_7	IF_1
0x40007ec	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       578	floatformat.c	FUNCTION_7	ELSE_1
0x40007ef	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       578	floatformat.c	FUNCTION_7	ELSE_1
0x40007f2	          0x83e801	                              sub eax, 1	       578	floatformat.c	FUNCTION_7	ELSE_1
0x40007f5	          0xc1e803	                              shr eax, 3	       578	floatformat.c	FUNCTION_7	ELSE_1
0x40007f8	          0x8945e0	             mov dword [rbp - 0x20], eax	       578	floatformat.c	FUNCTION_7	ELSE_1
0x40007fb	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       580	floatformat.c	FUNCTION_7
0x40007fe	          0x83e007	                              and eax, 7	       580	floatformat.c	FUNCTION_7
0x4000801	          0x8945e4	             mov dword [rbp - 0x1c], eax	       580	floatformat.c	FUNCTION_7
0x4000804	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       581	floatformat.c	FUNCTION_7
0x4000807	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       581	floatformat.c	FUNCTION_7
0x400080a	             0x1d0	                            add eax, edx	       581	floatformat.c	FUNCTION_7
0x400080c	      0xba08000000	                              mov edx, 8	       581	floatformat.c	FUNCTION_7
0x4000811	          0x83f808	                              cmp eax, 8	       581	floatformat.c	FUNCTION_7
0x4000814	           0xf47c2	                          cmova eax, edx	       581	floatformat.c	FUNCTION_7
0x4000817	          0x8945e8	             mov dword [rbp - 0x18], eax	       581	floatformat.c	FUNCTION_7
0x400081a	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       585	floatformat.c	FUNCTION_7	DO_1
0x400081d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       585	floatformat.c	FUNCTION_7	DO_1
0x4000821	          0x4801d0	                            add rax, rdx	       585	floatformat.c	FUNCTION_7	DO_1
0x4000824	        0x488945f8	                mov qword [rbp - 8], rax	       585	floatformat.c	FUNCTION_7	DO_1
0x4000828	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       586	floatformat.c	FUNCTION_7	DO_1
0x400082b	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	       586	floatformat.c	FUNCTION_7	DO_1
0x400082e	          0x8945f0	             mov dword [rbp - 0x10], eax	       586	floatformat.c	FUNCTION_7	DO_1
0x4000831	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       587	floatformat.c	FUNCTION_7	DO_1
0x4000834	      0xba01000000	                              mov edx, 1	       587	floatformat.c	FUNCTION_7	DO_1
0x4000839	            0x89c1	                            mov ecx, eax	       587	floatformat.c	FUNCTION_7	DO_1
0x400083b	            0xd3e2	                             shl edx, cl	       587	floatformat.c	FUNCTION_7	DO_1
0x400083d	            0x89d0	                            mov eax, edx	       587	floatformat.c	FUNCTION_7	DO_1
0x400083f	          0x8d50ff	                      lea edx, [rax - 1]	       587	floatformat.c	FUNCTION_7	DO_1
0x4000842	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       587	floatformat.c	FUNCTION_7	DO_1
0x4000845	            0x89c1	                            mov ecx, eax	       587	floatformat.c	FUNCTION_7	DO_1
0x4000847	            0xd3e2	                             shl edx, cl	       587	floatformat.c	FUNCTION_7	DO_1
0x4000849	            0x89d0	                            mov eax, edx	       587	floatformat.c	FUNCTION_7	DO_1
0x400084b	          0x8945f4	              mov dword [rbp - 0xc], eax	       587	floatformat.c	FUNCTION_7	DO_1
0x400084e	        0x488b45f8	                mov rax, qword [rbp - 8]	       588	floatformat.c	FUNCTION_7	DO_1
0x4000852	           0xfb600	                   movzx eax, byte [rax]	       588	floatformat.c	FUNCTION_7	DO_1
0x4000855	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       588	floatformat.c	FUNCTION_7	DO_1
0x4000858	            0xf7d2	                                 not edx	       588	floatformat.c	FUNCTION_7	DO_1
0x400085a	            0x21d0	                            and eax, edx	       588	floatformat.c	FUNCTION_7	DO_1
0x400085c	            0x89c6	                            mov esi, eax	       588	floatformat.c	FUNCTION_7	DO_1
0x400085e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       588	floatformat.c	FUNCTION_7	DO_1
0x4000861	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       588	floatformat.c	FUNCTION_7	DO_1
0x4000865	            0x89c1	                            mov ecx, eax	       588	floatformat.c	FUNCTION_7	DO_1
0x4000867	          0x48d3e2	                             shl rdx, cl	       588	floatformat.c	FUNCTION_7	DO_1
0x400086a	          0x4889d0	                            mov rax, rdx	       588	floatformat.c	FUNCTION_7	DO_1
0x400086d	            0x89c2	                            mov edx, eax	       588	floatformat.c	FUNCTION_7	DO_1
0x400086f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       588	floatformat.c	FUNCTION_7	DO_1
0x4000872	            0x21d0	                            and eax, edx	       588	floatformat.c	FUNCTION_7	DO_1
0x4000874	             0x9c6	                             or esi, eax	       588	floatformat.c	FUNCTION_7	DO_1
0x4000876	            0x89f2	                            mov edx, esi	       588	floatformat.c	FUNCTION_7	DO_1
0x4000878	        0x488b45f8	                mov rax, qword [rbp - 8]	       588	floatformat.c	FUNCTION_7	DO_1
0x400087c	            0x8810	                      mov byte [rax], dl	       588	floatformat.c	FUNCTION_7	DO_1
0x400087e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       589	floatformat.c	FUNCTION_7	DO_1
0x4000881	            0x89c1	                            mov ecx, eax	       589	floatformat.c	FUNCTION_7	DO_1
0x4000883	        0x48d36dc0	              shr qword [rbp - 0x40], cl	       589	floatformat.c	FUNCTION_7	DO_1
0x4000887	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       590	floatformat.c	FUNCTION_7	DO_1
0x400088a	          0x2945c8	             sub dword [rbp - 0x38], eax	       590	floatformat.c	FUNCTION_7	DO_1
0x400088d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       591	floatformat.c	FUNCTION_7	DO_1
0x4000890	           0x145e0	             add dword [rbp - 0x20], eax	       591	floatformat.c	FUNCTION_7	DO_1
0x4000893	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       592	floatformat.c	FUNCTION_7	DO_1
0x400089a	      0xb808000000	                              mov eax, 8	       593	floatformat.c	FUNCTION_7	DO_1
0x400089f	        0x837dc808	               cmp dword [rbp - 0x38], 8	       593	floatformat.c	FUNCTION_7	DO_1
0x40008a3	         0xf4645c8	          cmovbe eax, dword [rbp - 0x38]	       593	floatformat.c	FUNCTION_7	DO_1
0x40008a7	          0x8945e8	             mov dword [rbp - 0x18], eax	       593	floatformat.c	FUNCTION_7	DO_1
0x40008aa	        0x837dc800	               cmp dword [rbp - 0x38], 0	       595	floatformat.c	FUNCTION_7
0x40008ae	     0xf8566ffffff	                           jne 0x400081a	       595	floatformat.c	FUNCTION_7
0x40008b4	              0x90	                                     nop	       596	floatformat.c	FUNCTION_7
0x40008b5	              0x5d	                                 pop rbp	       596	floatformat.c	FUNCTION_7
0x40008b6	              0xc3	                                     ret	       596	floatformat.c	FUNCTION_7
floatformat_is_valid	IF,0:DO,0:SWITCH,0:WHILE,0:functions,0:CALL,1:FOR,0:ELSE,0	14
0x4000c8f	              0x55	                                push rbp	       704	floatformat.c	FUNCTION_9
0x4000c90	          0x4889e5	                            mov rbp, rsp	       704	floatformat.c	FUNCTION_9
0x4000c93	        0x4883ec10	                           sub rsp, 0x10	       704	floatformat.c	FUNCTION_9
0x4000c97	        0x48897df8	                mov qword [rbp - 8], rdi	       704	floatformat.c	FUNCTION_9
0x4000c9b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       704	floatformat.c	FUNCTION_9
0x4000c9f	        0x488b45f8	                mov rax, qword [rbp - 8]	       705	floatformat.c	FUNCTION_9	CALL_1
0x4000ca3	        0x488b4030	            mov rax, qword [rax + 0x30] 	       705	floatformat.c	FUNCTION_9	CALL_1
0x4000ca7	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       705	floatformat.c	FUNCTION_9	CALL_1
0x4000cab	        0x488b55f8	                mov rdx, qword [rbp - 8]	       705	floatformat.c	FUNCTION_9	CALL_1
0x4000caf	          0x4889ce	                            mov rsi, rcx	       705	floatformat.c	FUNCTION_9	CALL_1
0x4000cb2	          0x4889d7	                            mov rdi, rdx	       705	floatformat.c	FUNCTION_9	CALL_1
0x4000cb5	            0xffd0	                                call rax	       705	floatformat.c	FUNCTION_9	CALL_1
0x4000cb7	              0xc9	                                   leave	       706	floatformat.c	FUNCTION_9
0x4000cb8	              0xc3	                                     ret	       706	floatformat.c	FUNCTION_9
floatformat_i387_ext_is_valid	IF,1:DO,0:SWITCH,0:WHILE,0:functions,0:CALL,2:FOR,0:ELSE,1	43
0x4000053	              0x55	                                push rbp	       175	floatformat.c	FUNCTION_2
0x4000054	          0x4889e5	                            mov rbp, rsp	       175	floatformat.c	FUNCTION_2
0x4000057	        0x4883ec30	                           sub rsp, 0x30	       175	floatformat.c	FUNCTION_2
0x400005b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       175	floatformat.c	FUNCTION_2
0x400005f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       175	floatformat.c	FUNCTION_2
0x4000063	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       181	floatformat.c	FUNCTION_2
0x4000067	        0x488945e8	             mov qword [rbp - 0x18], rax	       181	floatformat.c	FUNCTION_2
0x400006b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       183	floatformat.c	FUNCTION_2	CALL_1
0x400006f	          0x8b7810	            mov edi, dword [rax + 0x10] 	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000072	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000076	          0x8b480c	              mov ecx, dword [rax + 0xc]	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000079	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       183	floatformat.c	FUNCTION_2	CALL_1
0x400007d	          0x8b5004	                mov edx, dword [rax + 4]	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000080	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000084	            0x8b30	                    mov esi, dword [rax]	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000086	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	floatformat.c	FUNCTION_2	CALL_1
0x400008a	          0x4189f8	                            mov r8d, edi	       183	floatformat.c	FUNCTION_2	CALL_1
0x400008d	          0x4889c7	                            mov rdi, rax	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000090	      0xe88f030000	                      call sym.get_field	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000095	        0x488945f0	             mov qword [rbp - 0x10], rax	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000099	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       185	floatformat.c	FUNCTION_2	CALL_2
0x400009d	          0x8b481c	            mov ecx, dword [rax + 0x1c] 	       185	floatformat.c	FUNCTION_2	CALL_2
0x40000a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       185	floatformat.c	FUNCTION_2	CALL_2
0x40000a4	          0x8b5004	                mov edx, dword [rax + 4]	       185	floatformat.c	FUNCTION_2	CALL_2
0x40000a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       185	floatformat.c	FUNCTION_2	CALL_2
0x40000ab	            0x8b30	                    mov esi, dword [rax]	       185	floatformat.c	FUNCTION_2	CALL_2
0x40000ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       185	floatformat.c	FUNCTION_2	CALL_2
0x40000b1	    0x41b801000000	                              mov r8d, 1	       185	floatformat.c	FUNCTION_2	CALL_2
0x40000b7	          0x4889c7	                            mov rdi, rax	       185	floatformat.c	FUNCTION_2	CALL_2
0x40000ba	      0xe865030000	                      call sym.get_field	       185	floatformat.c	FUNCTION_2	CALL_2
0x40000bf	        0x488945f8	                mov qword [rbp - 8], rax	       185	floatformat.c	FUNCTION_2	CALL_2
0x40000c3	      0x48837df000	               cmp qword [rbp - 0x10], 0	       188	floatformat.c	FUNCTION_2	IF_1
0x40000c8	           0xf94c2	                                 sete dl	       188	floatformat.c	FUNCTION_2	IF_1
0x40000cb	      0x48837df800	                  cmp qword [rbp - 8], 0	       188	floatformat.c	FUNCTION_2	IF_1
0x40000d0	           0xf94c0	                                 sete al	       188	floatformat.c	FUNCTION_2	IF_1
0x40000d3	            0x31d0	                            xor eax, edx	       188	floatformat.c	FUNCTION_2	IF_1
0x40000d5	            0x84c0	                             test al, al	       188	floatformat.c	FUNCTION_2	IF_1
0x40000d7	            0x7407	                            je 0x40000e0	       188	floatformat.c	FUNCTION_2	IF_1
0x40000d9	      0xb800000000	                              mov eax, 0	       189	floatformat.c	FUNCTION_2	IF_1
0x40000de	            0xeb05	                           jmp 0x40000e5	       189	floatformat.c	FUNCTION_2	IF_1
0x40000e0	      0xb801000000	                              mov eax, 1	       191	floatformat.c	FUNCTION_2	ELSE_1
0x40000e5	              0xc9	                                   leave	       192	floatformat.c	FUNCTION_2	ELSE_1
0x40000e6	              0xc3	                                     ret	       192	floatformat.c	FUNCTION_2	ELSE_1
floatformat_always_valid	IF,0:DO,0:SWITCH,0:WHILE,0:functions,0:CALL,0:FOR,0:ELSE,0	7
0x4000040	              0x55	                                push rbp	        72	floatformat.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        72	floatformat.c	FUNCTION_1
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	        72	floatformat.c	FUNCTION_1
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	        72	floatformat.c	FUNCTION_1
0x400004c	      0xb801000000	                              mov eax, 1	        73	floatformat.c	FUNCTION_1
0x4000051	              0x5d	                                 pop rbp	        74	floatformat.c	FUNCTION_1
0x4000052	              0xc3	                                     ret	        74	floatformat.c	FUNCTION_1
floatformat_to_double	IF,6:DO,0:SWITCH,0:WHILE,1:functions,0:CALL,7:FOR,0:ELSE,3	162
0x400053a	              0x55	                                push rbp	       469	floatformat.c	FUNCTION_6
0x400053b	          0x4889e5	                            mov rbp, rsp	       469	floatformat.c	FUNCTION_6
0x400053e	        0x4883ec50	                           sub rsp, 0x50	       469	floatformat.c	FUNCTION_6
0x4000542	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       469	floatformat.c	FUNCTION_6
0x4000546	        0x488975c0	             mov qword [rbp - 0x40], rsi	       469	floatformat.c	FUNCTION_6
0x400054a	        0x488955b8	             mov qword [rbp - 0x48], rdx	       469	floatformat.c	FUNCTION_6
0x400054e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       470	floatformat.c	FUNCTION_6
0x4000552	        0x488945f0	             mov qword [rbp - 0x10], rax	       470	floatformat.c	FUNCTION_6
0x4000556	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       481	floatformat.c	FUNCTION_6	CALL_1
0x400055a	          0x8b7810	            mov edi, dword [rax + 0x10] 	       481	floatformat.c	FUNCTION_6	CALL_1
0x400055d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000561	          0x8b480c	              mov ecx, dword [rax + 0xc]	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000564	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000568	          0x8b5004	                mov edx, dword [rax + 4]	       481	floatformat.c	FUNCTION_6	CALL_1
0x400056b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       481	floatformat.c	FUNCTION_6	CALL_1
0x400056f	            0x8b30	                    mov esi, dword [rax]	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000571	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000575	          0x4189f8	                            mov r8d, edi	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000578	          0x4889c7	                            mov rdi, rax	       481	floatformat.c	FUNCTION_6	CALL_1
0x400057b	      0xe8a4feffff	                      call sym.get_field	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000580	        0x488945e8	             mov qword [rbp - 0x18], rax	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000584	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       487	floatformat.c	FUNCTION_6	IF_1
0x4000588	          0x8b4018	            mov eax, dword [rax + 0x18] 	       487	floatformat.c	FUNCTION_6	IF_1
0x400058b	            0x89c2	                            mov edx, eax	       487	floatformat.c	FUNCTION_6	IF_1
0x400058d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       487	floatformat.c	FUNCTION_6	IF_1
0x4000591	          0x4839c2	                            cmp rdx, rax	       487	floatformat.c	FUNCTION_6	IF_1
0x4000594	     0xf858b000000	                           jne 0x4000625	       487	floatformat.c	FUNCTION_6	IF_1
0x400059a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       489	floatformat.c	FUNCTION_6	IF_1	CALL_2
0x400059e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       489	floatformat.c	FUNCTION_6	IF_1	CALL_2
0x40005a2	          0x4889d6	                            mov rsi, rdx	       489	floatformat.c	FUNCTION_6	IF_1	CALL_2
0x40005a5	          0x4889c7	                            mov rdi, rax	       489	floatformat.c	FUNCTION_6	IF_1	CALL_2
0x40005a8	      0xe8f7fdffff	                  call sym.mant_bits_set	       489	floatformat.c	FUNCTION_6	IF_1	CALL_2
0x40005ad	          0x8945d8	             mov dword [rbp - 0x28], eax	       489	floatformat.c	FUNCTION_6	IF_1	CALL_2
0x40005b0	        0x837dd800	               cmp dword [rbp - 0x28], 0	       498	floatformat.c	FUNCTION_6	IF_1	IF_2
0x40005b4	            0x740f	                            je 0x40005c5	       498	floatformat.c	FUNCTION_6	IF_1	IF_2
0x40005b6	    0xf20f10050000	         movsd xmm0, qword [0x040005be] 	       499	floatformat.c	FUNCTION_6	IF_1	IF_2
0x40005be	      0xf20f1145e0	          movsd qword [rbp - 0x20], xmm0	       499	floatformat.c	FUNCTION_6	IF_1	IF_2
0x40005c3	            0xeb0d	                           jmp 0x40005d2	       499	floatformat.c	FUNCTION_6	IF_1	IF_2
0x40005c5	    0xf20f10050000	         movsd xmm0, qword [0x040005cd] 	       501	floatformat.c	FUNCTION_6	IF_1	ELSE_1
0x40005cd	      0xf20f1145e0	          movsd qword [rbp - 0x20], xmm0	       501	floatformat.c	FUNCTION_6	IF_1	ELSE_1
0x40005d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005d6	          0x8b4808	                mov ecx, dword [rax + 8]	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005d9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005dd	          0x8b5004	                mov edx, dword [rax + 4]	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005e4	            0x8b30	                    mov esi, dword [rax]	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005ea	    0x41b801000000	                              mov r8d, 1	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005f0	          0x4889c7	                            mov rdi, rax	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005f3	      0xe82cfeffff	                      call sym.get_field	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005f8	          0x4885c0	                           test rax, rax	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005fb	            0x7416	                            je 0x4000613	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005fd	      0xf20f104de0	          movsd xmm1, qword [rbp - 0x20]	       504	floatformat.c	FUNCTION_6	IF_1	IF_3
0x4000602	    0xf20f10050000	         movsd xmm0, qword [0x0400060a] 	       504	floatformat.c	FUNCTION_6	IF_1	IF_3
0x400060a	        0x660f57c1	                        xorpd xmm0, xmm1	       504	floatformat.c	FUNCTION_6	IF_1	IF_3
0x400060e	      0xf20f1145e0	          movsd qword [rbp - 0x20], xmm0	       504	floatformat.c	FUNCTION_6	IF_1	IF_3
0x4000613	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       506	floatformat.c	FUNCTION_6	IF_1
0x4000617	      0xf20f1045e0	          movsd xmm0, qword [rbp - 0x20]	       506	floatformat.c	FUNCTION_6	IF_1
0x400061c	        0xf20f1100	                 movsd qword [rax], xmm0	       506	floatformat.c	FUNCTION_6	IF_1
0x4000620	      0xe976010000	                           jmp 0x400079b	       508	floatformat.c	FUNCTION_6	IF_1
0x4000625	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       511	floatformat.c	FUNCTION_6
0x4000629	          0x8b4020	            mov eax, dword [rax + 0x20] 	       511	floatformat.c	FUNCTION_6
0x400062c	          0x8945d4	             mov dword [rbp - 0x2c], eax	       511	floatformat.c	FUNCTION_6
0x400062f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       512	floatformat.c	FUNCTION_6
0x4000633	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       512	floatformat.c	FUNCTION_6
0x4000636	          0x8945d0	             mov dword [rbp - 0x30], eax	       512	floatformat.c	FUNCTION_6
0x4000639	        0x660fefc0	                         pxor xmm0, xmm0	       513	floatformat.c	FUNCTION_6
0x400063d	      0xf20f1145e0	          movsd qword [rbp - 0x20], xmm0	       513	floatformat.c	FUNCTION_6
0x4000642	      0x48837de800	               cmp qword [rbp - 0x18], 0	       519	floatformat.c	FUNCTION_6	IF_4
0x4000647	            0x751b	                           jne 0x4000664	       519	floatformat.c	FUNCTION_6	IF_4
0x4000649	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       520	floatformat.c	FUNCTION_6	IF_4
0x400064d	          0x8b4014	            mov eax, dword [rax + 0x14] 	       520	floatformat.c	FUNCTION_6	IF_4
0x4000650	      0xba01000000	                              mov edx, 1	       520	floatformat.c	FUNCTION_6	IF_4
0x4000655	            0x29c2	                            sub edx, eax	       520	floatformat.c	FUNCTION_6	IF_4
0x4000657	            0x89d0	                            mov eax, edx	       520	floatformat.c	FUNCTION_6	IF_4
0x4000659	            0x4898	                                    cdqe	       520	floatformat.c	FUNCTION_6	IF_4
0x400065b	        0x488945e8	             mov qword [rbp - 0x18], rax	       520	floatformat.c	FUNCTION_6	IF_4
0x400065f	      0xe9df000000	                           jmp 0x4000743	       520	floatformat.c	FUNCTION_6	IF_4
0x4000664	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       523	floatformat.c	FUNCTION_6	ELSE_2
0x4000668	          0x8b4014	            mov eax, dword [rax + 0x14] 	       523	floatformat.c	FUNCTION_6	ELSE_2
0x400066b	            0x4898	                                    cdqe	       523	floatformat.c	FUNCTION_6	ELSE_2
0x400066d	        0x482945e8	             sub qword [rbp - 0x18], rax	       523	floatformat.c	FUNCTION_6	ELSE_2
0x4000671	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       529	floatformat.c	FUNCTION_6	ELSE_2	IF_5
0x4000675	          0x8b4024	            mov eax, dword [rax + 0x24] 	       529	floatformat.c	FUNCTION_6	ELSE_2	IF_5
0x4000678	          0x83f801	                              cmp eax, 1	       529	floatformat.c	FUNCTION_6	ELSE_2	IF_5
0x400067b	            0x7521	                           jne 0x400069e	       529	floatformat.c	FUNCTION_6	ELSE_2	IF_5
0x400067d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x4000681	            0x89c7	                            mov edi, eax	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x4000683	    0xf20f10050000	         movsd xmm0, qword [0x0400068b] 	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x400068b	      0xe800000000	                          call 0x4000690	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x4000690	      0x66480f7ec0	                          movq rax, xmm0	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x4000695	        0x488945e0	             mov qword [rbp - 0x20], rax	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x4000699	      0xe9a5000000	                           jmp 0x4000743	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x400069e	      0x488345e801	               add qword [rbp - 0x18], 1	       532	floatformat.c	FUNCTION_6	ELSE_2	ELSE_3
0x40006a3	      0xe99b000000	                           jmp 0x4000743	       535	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40006a8	      0xb820000000	                           mov eax, 0x20	       537	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40006ad	        0x837dd420	           cmp dword [rbp - 0x2c], 0x20 	       537	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40006b1	         0xf4e45d4	          cmovle eax, dword [rbp - 0x2c]	       537	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40006b5	          0x8945dc	             mov dword [rbp - 0x24], eax	       537	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40006b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006bc	          0x8b5004	                mov edx, dword [rax + 4]	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006c3	            0x8b30	                    mov esi, dword [rax]	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006c5	          0x8b7ddc	             mov edi, dword [rbp - 0x24]	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006c8	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006cf	          0x4189f8	                            mov r8d, edi	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006d2	          0x4889c7	                            mov rdi, rax	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006d5	      0xe84afdffff	                      call sym.get_field	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006da	        0x488945f8	                mov qword [rbp - 8], rax	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x40006de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40006e2	          0x2b45dc	             sub eax, dword [rbp - 0x24]	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40006e5	            0x89c1	                            mov ecx, eax	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40006e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40006eb	          0x4885c0	                           test rax, rax	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40006ee	            0x780b	                            js 0x40006fb	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40006f0	        0x660fefc0	                         pxor xmm0, xmm0	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40006f4	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40006f9	            0xeb19	                           jmp 0x4000714	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40006fb	          0x4889c2	                            mov rdx, rax	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40006fe	          0x48d1ea	                              shr rdx, 1	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000701	          0x83e001	                              and eax, 1	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000704	          0x4809c2	                             or rdx, rax	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000707	        0x660fefc0	                         pxor xmm0, xmm0	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x400070b	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000710	        0xf20f58c0	                        addsd xmm0, xmm0	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000714	            0x89cf	                            mov edi, ecx	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000716	      0xe800000000	                          call 0x400071b	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x400071b	        0x660f28c8	                       movapd xmm1, xmm0	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x400071f	      0xf20f1045e0	          movsd xmm0, qword [rbp - 0x20]	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000724	        0xf20f58c1	                        addsd xmm0, xmm1	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000728	      0xf20f1145e0	          movsd qword [rbp - 0x20], xmm0	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x400072d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       543	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x4000730	        0x482945e8	             sub qword [rbp - 0x18], rax	       543	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x4000734	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       544	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x4000737	           0x145d0	             add dword [rbp - 0x30], eax	       544	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x400073a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       545	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x400073d	          0x2b45dc	             sub eax, dword [rbp - 0x24]	       545	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x4000740	          0x8945d4	             mov dword [rbp - 0x2c], eax	       545	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x4000743	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       535	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x4000747	     0xf8f5bffffff	                            jg 0x40006a8	       535	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x400074d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x4000751	          0x8b4808	                mov ecx, dword [rax + 8]	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x4000754	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x4000758	          0x8b5004	                mov edx, dword [rax + 4]	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x400075b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x400075f	            0x8b30	                    mov esi, dword [rax]	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x4000761	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x4000765	    0x41b801000000	                              mov r8d, 1	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x400076b	          0x4889c7	                            mov rdi, rax	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x400076e	      0xe8b1fcffff	                      call sym.get_field	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x4000773	          0x4885c0	                           test rax, rax	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x4000776	            0x7416	                            je 0x400078e	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x4000778	      0xf20f104de0	          movsd xmm1, qword [rbp - 0x20]	       550	floatformat.c	FUNCTION_6	IF_6
0x400077d	    0xf20f10050000	         movsd xmm0, qword [0x04000785] 	       550	floatformat.c	FUNCTION_6	IF_6
0x4000785	        0x660f57c1	                        xorpd xmm0, xmm1	       550	floatformat.c	FUNCTION_6	IF_6
0x4000789	      0xf20f1145e0	          movsd qword [rbp - 0x20], xmm0	       550	floatformat.c	FUNCTION_6	IF_6
0x400078e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       551	floatformat.c	FUNCTION_6
0x4000792	      0xf20f1045e0	          movsd xmm0, qword [rbp - 0x20]	       551	floatformat.c	FUNCTION_6
0x4000797	        0xf20f1100	                 movsd qword [rax], xmm0	       551	floatformat.c	FUNCTION_6
0x400079b	              0xc9	                                   leave	       552	floatformat.c	FUNCTION_6
0x400079c	              0xc3	                                     ret	       552	floatformat.c	FUNCTION_6
floatformat_from_double	IF,7:DO,0:SWITCH,0:WHILE,1:functions,0:CALL,10:FOR,0:ELSE,2	263
0x40008b7	              0x55	                                push rbp	       605	floatformat.c	FUNCTION_8
0x40008b8	          0x4889e5	                            mov rbp, rsp	       605	floatformat.c	FUNCTION_8
0x40008bb	        0x4883ec60	                           sub rsp, 0x60	       605	floatformat.c	FUNCTION_8
0x40008bf	        0x48897db8	             mov qword [rbp - 0x48], rdi	       605	floatformat.c	FUNCTION_8
0x40008c3	        0x488975b0	             mov qword [rbp - 0x50], rsi	       605	floatformat.c	FUNCTION_8
0x40008c7	        0x488955a8	             mov qword [rbp - 0x58], rdx	       605	floatformat.c	FUNCTION_8
0x40008cb	    0x64488b042528	                mov rax, qword fs:[0x28]	       605	floatformat.c	FUNCTION_8
0x40008d4	        0x488945f8	                mov qword [rbp - 8], rax	       605	floatformat.c	FUNCTION_8
0x40008d8	            0x31c0	                            xor eax, eax	       605	floatformat.c	FUNCTION_8
0x40008da	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       611	floatformat.c	FUNCTION_8
0x40008de	        0x488945f0	             mov qword [rbp - 0x10], rax	       611	floatformat.c	FUNCTION_8
0x40008e2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       613	floatformat.c	FUNCTION_8
0x40008e6	        0xf20f1000	                 movsd xmm0, qword [rax]	       613	floatformat.c	FUNCTION_8
0x40008ea	      0xf20f1145d8	          movsd qword [rbp - 0x28], xmm0	       613	floatformat.c	FUNCTION_8
0x40008ef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       614	floatformat.c	FUNCTION_8	CALL_1
0x40008f3	          0x8b4004	                mov eax, dword [rax + 4]	       614	floatformat.c	FUNCTION_8	CALL_1
0x40008f6	          0xc1e803	                              shr eax, 3	       614	floatformat.c	FUNCTION_8	CALL_1
0x40008f9	            0x89c2	                            mov edx, eax	       614	floatformat.c	FUNCTION_8	CALL_1
0x40008fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       614	floatformat.c	FUNCTION_8	CALL_1
0x40008ff	      0xbe00000000	                              mov esi, 0	       614	floatformat.c	FUNCTION_8	CALL_1
0x4000904	          0x4889c7	                            mov rdi, rax	       614	floatformat.c	FUNCTION_8	CALL_1
0x4000907	      0xe800000000	                          call 0x400090c	       614	floatformat.c	FUNCTION_8	CALL_1
0x400090c	        0x660fefc0	                         pxor xmm0, xmm0	       621	floatformat.c	FUNCTION_8	IF_1
0x4000910	      0x660f2e45d8	        ucomisd xmm0, qword [rbp - 0x28]	       621	floatformat.c	FUNCTION_8	IF_1
0x4000915	            0x7642	                           jbe 0x4000959	       621	floatformat.c	FUNCTION_8	IF_1
0x4000917	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x400091b	          0x8b4808	                mov ecx, dword [rax + 8]	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x400091e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x4000922	          0x8b5004	                mov edx, dword [rax + 4]	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x4000925	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x4000929	            0x8b30	                    mov esi, dword [rax]	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x400092b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x400092f	    0x41b901000000	                              mov r9d, 1	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x4000935	    0x41b801000000	                              mov r8d, 1	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x400093b	          0x4889c7	                            mov rdi, rax	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x400093e	      0xe85afeffff	                      call sym.put_field	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x4000943	      0xf20f104dd8	          movsd xmm1, qword [rbp - 0x28]	       624	floatformat.c	FUNCTION_8	IF_1
0x4000948	    0xf20f10050000	         movsd xmm0, qword [0x04000950] 	       624	floatformat.c	FUNCTION_8	IF_1
0x4000950	        0x660f57c1	                        xorpd xmm0, xmm1	       624	floatformat.c	FUNCTION_8	IF_1
0x4000954	      0xf20f1145d8	          movsd qword [rbp - 0x28], xmm0	       624	floatformat.c	FUNCTION_8	IF_1
0x4000959	        0x660fefc0	                         pxor xmm0, xmm0	       627	floatformat.c	FUNCTION_8	IF_2
0x400095d	      0x660f2e45d8	        ucomisd xmm0, qword [rbp - 0x28]	       627	floatformat.c	FUNCTION_8	IF_2
0x4000962	            0x7a0f	                            jp 0x4000973	       627	floatformat.c	FUNCTION_8	IF_2
0x4000964	        0x660fefc0	                         pxor xmm0, xmm0	       627	floatformat.c	FUNCTION_8	IF_2
0x4000968	      0x660f2e45d8	        ucomisd xmm0, qword [rbp - 0x28]	       627	floatformat.c	FUNCTION_8	IF_2
0x400096d	     0xf8405030000	                            je 0x4000c78	       627	floatformat.c	FUNCTION_8	IF_2
0x4000973	      0xf20f1045d8	          movsd xmm0, qword [rbp - 0x28]	       633	floatformat.c	FUNCTION_8	IF_3
0x4000978	      0x660f2e45d8	        ucomisd xmm0, qword [rbp - 0x28]	       633	floatformat.c	FUNCTION_8	IF_3
0x400097d	            0x7a0c	                            jp 0x400098b	       633	floatformat.c	FUNCTION_8	IF_3
0x400097f	      0xf20f1045d8	          movsd xmm0, qword [rbp - 0x28]	       633	floatformat.c	FUNCTION_8	IF_3
0x4000984	      0x660f2e45d8	        ucomisd xmm0, qword [rbp - 0x28]	       633	floatformat.c	FUNCTION_8	IF_3
0x4000989	            0x7468	                            je 0x40009f3	       633	floatformat.c	FUNCTION_8	IF_3
0x400098b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       637	floatformat.c	FUNCTION_8	IF_3
0x400098f	          0x8b4018	            mov eax, dword [rax + 0x18] 	       637	floatformat.c	FUNCTION_8	IF_3
0x4000992	          0x4189c0	                            mov r8d, eax	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x4000995	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x4000999	          0x8b7810	            mov edi, dword [rax + 0x10] 	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x400099c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009a0	          0x8b480c	              mov ecx, dword [rax + 0xc]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009a7	          0x8b5004	                mov edx, dword [rax + 4]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009aa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009ae	            0x8b30	                    mov esi, dword [rax]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009b4	          0x4d89c1	                              mov r9, r8	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009b7	          0x4189f8	                            mov r8d, edi	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009ba	          0x4889c7	                            mov rdi, rax	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009bd	      0xe8dbfdffff	                      call sym.put_field	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40009c2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009c6	          0x8b481c	            mov ecx, dword [rax + 0x1c] 	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009cd	          0x8b5004	                mov edx, dword [rax + 4]	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009d4	            0x8b30	                    mov esi, dword [rax]	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009da	    0x41b901000000	                              mov r9d, 1	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009e0	    0x41b820000000	                           mov r8d, 0x20	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009e6	          0x4889c7	                            mov rdi, rax	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009e9	      0xe8affdffff	                      call sym.put_field	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40009ee	      0xe986020000	                           jmp 0x4000c79	       641	floatformat.c	FUNCTION_8	IF_3
0x40009f3	      0xf20f1045d8	          movsd xmm0, qword [rbp - 0x28]	       644	floatformat.c	FUNCTION_8	IF_4
0x40009f8	        0xf20f58c0	                        addsd xmm0, xmm0	       644	floatformat.c	FUNCTION_8	IF_4
0x40009fc	      0x660f2e45d8	        ucomisd xmm0, qword [rbp - 0x28]	       644	floatformat.c	FUNCTION_8	IF_4
0x4000a01	            0x7a43	                            jp 0x4000a46	       644	floatformat.c	FUNCTION_8	IF_4
0x4000a03	      0x660f2e45d8	        ucomisd xmm0, qword [rbp - 0x28]	       644	floatformat.c	FUNCTION_8	IF_4
0x4000a08	            0x753c	                           jne 0x4000a46	       644	floatformat.c	FUNCTION_8	IF_4
0x4000a0a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       649	floatformat.c	FUNCTION_8	IF_4
0x4000a0e	          0x8b4018	            mov eax, dword [rax + 0x18] 	       649	floatformat.c	FUNCTION_8	IF_4
0x4000a11	          0x4189c0	                            mov r8d, eax	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a14	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a18	          0x8b7810	            mov edi, dword [rax + 0x10] 	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a1b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a1f	          0x8b480c	              mov ecx, dword [rax + 0xc]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a22	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a26	          0x8b5004	                mov edx, dword [rax + 4]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a29	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a2d	            0x8b30	                    mov esi, dword [rax]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a2f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a33	          0x4d89c1	                              mov r9, r8	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a36	          0x4189f8	                            mov r8d, edi	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a39	          0x4889c7	                            mov rdi, rax	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a3c	      0xe85cfdffff	                      call sym.put_field	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000a41	      0xe933020000	                           jmp 0x4000c79	       650	floatformat.c	FUNCTION_8	IF_4
0x4000a46	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       653	floatformat.c	FUNCTION_8	CALL_6
0x4000a4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       653	floatformat.c	FUNCTION_8	CALL_6
0x4000a4e	          0x4889d7	                            mov rdi, rdx	       653	floatformat.c	FUNCTION_8	CALL_6
0x4000a51	        0x488945a0	             mov qword [rbp - 0x60], rax	       653	floatformat.c	FUNCTION_8	CALL_6
0x4000a55	      0xf20f1045a0	          movsd xmm0, qword [rbp - 0x60]	       653	floatformat.c	FUNCTION_8	CALL_6
0x4000a5a	      0xe800000000	                          call 0x4000a5f	       653	floatformat.c	FUNCTION_8	CALL_6
0x4000a5f	      0x66480f7ec0	                          movq rax, xmm0	       653	floatformat.c	FUNCTION_8	CALL_6
0x4000a64	        0x488945e0	             mov qword [rbp - 0x20], rax	       653	floatformat.c	FUNCTION_8	CALL_6
0x4000a68	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       654	floatformat.c	FUNCTION_8	IF_5
0x4000a6c	          0x8b5014	            mov edx, dword [rax + 0x14] 	       654	floatformat.c	FUNCTION_8	IF_5
0x4000a6f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       654	floatformat.c	FUNCTION_8	IF_5
0x4000a72	             0x1d0	                            add eax, edx	       654	floatformat.c	FUNCTION_8	IF_5
0x4000a74	          0x83e801	                              sub eax, 1	       654	floatformat.c	FUNCTION_8	IF_5
0x4000a77	            0x85c0	                           test eax, eax	       654	floatformat.c	FUNCTION_8	IF_5
0x4000a79	            0x7e41	                           jle 0x4000abc	       654	floatformat.c	FUNCTION_8	IF_5
0x4000a7b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       656	floatformat.c	FUNCTION_8	IF_5
0x4000a7f	          0x8b5014	            mov edx, dword [rax + 0x14] 	       656	floatformat.c	FUNCTION_8	IF_5
0x4000a82	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       656	floatformat.c	FUNCTION_8	IF_5
0x4000a85	             0x1d0	                            add eax, edx	       656	floatformat.c	FUNCTION_8	IF_5
0x4000a87	          0x83e801	                              sub eax, 1	       656	floatformat.c	FUNCTION_8	IF_5
0x4000a8a	          0x4c63c0	                          movsxd r8, eax	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000a8d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000a91	          0x8b7810	            mov edi, dword [rax + 0x10] 	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000a94	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000a98	          0x8b480c	              mov ecx, dword [rax + 0xc]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000a9b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000a9f	          0x8b5004	                mov edx, dword [rax + 4]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000aa2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000aa6	            0x8b30	                    mov esi, dword [rax]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000aa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000aac	          0x4d89c1	                              mov r9, r8	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000aaf	          0x4189f8	                            mov r8d, edi	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000ab2	          0x4889c7	                            mov rdi, rax	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000ab5	      0xe8e3fcffff	                      call sym.put_field	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000aba	            0xeb5c	                           jmp 0x4000b18	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000abc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000ac0	          0x8b7810	            mov edi, dword [rax + 0x10] 	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000ac3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000ac7	          0x8b480c	              mov ecx, dword [rax + 0xc]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000aca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000ace	          0x8b5004	                mov edx, dword [rax + 4]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000ad1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000ad5	            0x8b30	                    mov esi, dword [rax]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000ad7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000adb	    0x41b900000000	                              mov r9d, 0	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000ae1	          0x4189f8	                            mov r8d, edi	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000ae4	          0x4889c7	                            mov rdi, rax	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000ae7	      0xe8b1fcffff	                      call sym.put_field	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000aec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000af0	          0x8b5014	            mov edx, dword [rax + 0x14] 	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000af3	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000af6	             0x1d0	                            add eax, edx	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000af8	          0x8d50ff	                      lea edx, [rax - 1]	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000afb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000aff	            0x89d7	                            mov edi, edx	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000b01	        0x488945a0	             mov qword [rbp - 0x60], rax	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000b05	      0xf20f1045a0	          movsd xmm0, qword [rbp - 0x60]	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000b0a	      0xe800000000	                          call 0x4000b0f	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000b0f	      0x66480f7ec0	                          movq rax, xmm0	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000b14	        0x488945e0	             mov qword [rbp - 0x20], rax	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000b18	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       666	floatformat.c	FUNCTION_8
0x4000b1c	          0x8b4020	            mov eax, dword [rax + 0x20] 	       666	floatformat.c	FUNCTION_8
0x4000b1f	          0x8945d4	             mov dword [rbp - 0x2c], eax	       666	floatformat.c	FUNCTION_8
0x4000b22	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       667	floatformat.c	FUNCTION_8
0x4000b26	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       667	floatformat.c	FUNCTION_8
0x4000b29	          0x8945d0	             mov dword [rbp - 0x30], eax	       667	floatformat.c	FUNCTION_8
0x4000b2c	      0xe93b010000	                           jmp 0x4000c6c	       668	floatformat.c	FUNCTION_8	WHILE_1
0x4000b31	      0xb820000000	                           mov eax, 0x20	       671	floatformat.c	FUNCTION_8	WHILE_1
0x4000b36	        0x837dd420	           cmp dword [rbp - 0x2c], 0x20 	       671	floatformat.c	FUNCTION_8	WHILE_1
0x4000b3a	         0xf4e45d4	          cmovle eax, dword [rbp - 0x2c]	       671	floatformat.c	FUNCTION_8	WHILE_1
0x4000b3e	          0x8945cc	             mov dword [rbp - 0x34], eax	       671	floatformat.c	FUNCTION_8	WHILE_1
0x4000b41	      0xf20f104de0	          movsd xmm1, qword [rbp - 0x20]	       673	floatformat.c	FUNCTION_8	WHILE_1
0x4000b46	    0xf20f10050000	         movsd xmm0, qword [0x04000b4e] 	       673	floatformat.c	FUNCTION_8	WHILE_1
0x4000b4e	        0xf20f59c1	                        mulsd xmm0, xmm1	       673	floatformat.c	FUNCTION_8	WHILE_1
0x4000b52	      0xf20f1145e0	          movsd qword [rbp - 0x20], xmm0	       673	floatformat.c	FUNCTION_8	WHILE_1
0x4000b57	      0xf20f1045e0	          movsd xmm0, qword [rbp - 0x20]	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b5c	    0x660f2e050000	        ucomisd xmm0, qword [0x04000b64]	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b64	            0x7310	                           jae 0x4000b76	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b66	      0xf20f1045e0	          movsd xmm0, qword [rbp - 0x20]	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b6b	      0xf2480f2cc0	                     cvttsd2si rax, xmm0	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b70	        0x488945e8	             mov qword [rbp - 0x18], rax	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b74	            0xeb28	                           jmp 0x4000b9e	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b76	      0xf20f1045e0	          movsd xmm0, qword [rbp - 0x20]	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b7b	    0xf20f100d0000	         movsd xmm1, qword [0x04000b83] 	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b83	        0xf20f5cc1	                        subsd xmm0, xmm1	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b87	      0xf2480f2cc0	                     cvttsd2si rax, xmm0	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b8c	        0x488945e8	             mov qword [rbp - 0x18], rax	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b90	    0x48b800000000	          movabs rax, 0x8000000000000000	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b9a	        0x483145e8	             xor qword [rbp - 0x18], rax	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000b9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000ba2	        0x488945e8	             mov qword [rbp - 0x18], rax	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000ba6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000baa	          0x4885c0	                           test rax, rax	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bad	            0x780b	                            js 0x4000bba	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000baf	        0x660fefc0	                         pxor xmm0, xmm0	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bb3	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bb8	            0xeb19	                           jmp 0x4000bd3	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bba	          0x4889c2	                            mov rdx, rax	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bbd	          0x48d1ea	                              shr rdx, 1	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bc0	          0x83e001	                              and eax, 1	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bc3	          0x4809c2	                             or rdx, rax	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bc6	        0x660fefc0	                         pxor xmm0, xmm0	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bca	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bcf	        0xf20f58c0	                        addsd xmm0, xmm0	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bd3	      0xf20f104de0	          movsd xmm1, qword [rbp - 0x20]	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bd8	        0xf20f5cc8	                        subsd xmm1, xmm0	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000bdc	        0x660f28c1	                       movapd xmm0, xmm1	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000be0	      0xf20f1145e0	          movsd qword [rbp - 0x20], xmm0	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000be5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       679	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000be9	          0x8b5020	            mov edx, dword [rax + 0x20] 	       679	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000bec	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       679	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000bef	            0x39c2	                            cmp edx, eax	       679	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000bf1	            0x752d	                           jne 0x4000c20	       679	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000bf3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       680	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000bf7	          0x8b4024	            mov eax, dword [rax + 0x24] 	       680	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000bfa	          0x83f801	                              cmp eax, 1	       680	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000bfd	            0x7521	                           jne 0x4000c20	       680	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000bff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000c03	          0x8b5014	            mov edx, dword [rax + 0x14] 	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000c06	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000c09	             0x1d0	                            add eax, edx	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000c0b	          0x83e801	                              sub eax, 1	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000c0e	            0x85c0	                           test eax, eax	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000c10	            0x7e0e	                           jle 0x4000c20	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000c12	    0x488165e8ffff	      and qword [rbp - 0x18], 0x7fffffff	       683	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000c1a	        0x836dcc01	               sub dword [rbp - 0x34], 1	       684	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000c1e	            0xeb14	                           jmp 0x4000c34	       684	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000c20	        0x837dcc1f	           cmp dword [rbp - 0x34], 0x1f 	       686	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x4000c24	            0x770e	                            ja 0x4000c34	       686	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x4000c26	      0xb820000000	                           mov eax, 0x20	       690	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x4000c2b	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       690	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x4000c2e	            0x89c1	                            mov ecx, eax	       690	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x4000c30	        0x48d36de8	              shr qword [rbp - 0x18], cl	       690	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x4000c34	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c38	          0x8b5004	                mov edx, dword [rax + 4]	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c3b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c3f	            0x8b30	                    mov esi, dword [rax]	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c41	        0x4c8b45e8	              mov r8, qword [rbp - 0x18]	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c45	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c48	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c4f	          0x4d89c1	                              mov r9, r8	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c52	          0x4189f8	                            mov r8d, edi	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c55	          0x4889c7	                            mov rdi, rax	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c58	      0xe840fbffff	                      call sym.put_field	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000c5d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       695	floatformat.c	FUNCTION_8	WHILE_1
0x4000c60	           0x145d0	             add dword [rbp - 0x30], eax	       695	floatformat.c	FUNCTION_8	WHILE_1
0x4000c63	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       696	floatformat.c	FUNCTION_8	WHILE_1
0x4000c66	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       696	floatformat.c	FUNCTION_8	WHILE_1
0x4000c69	          0x8945d4	             mov dword [rbp - 0x2c], eax	       696	floatformat.c	FUNCTION_8	WHILE_1
0x4000c6c	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       668	floatformat.c	FUNCTION_8	WHILE_1
0x4000c70	     0xf8fbbfeffff	                            jg 0x4000b31	       668	floatformat.c	FUNCTION_8	WHILE_1
0x4000c76	            0xeb01	                           jmp 0x4000c79	       668	floatformat.c	FUNCTION_8	WHILE_1
0x4000c78	              0x90	                                     nop	       630	floatformat.c	FUNCTION_8	IF_2
0x4000c79	        0x488b45f8	                mov rax, qword [rbp - 8]	       698	floatformat.c	FUNCTION_8
0x4000c7d	    0x644833042528	                xor rax, qword fs:[0x28]	       698	floatformat.c	FUNCTION_8
0x4000c86	            0x7405	                            je 0x4000c8d	       698	floatformat.c	FUNCTION_8
0x4000c88	      0xe800000000	                          call 0x4000c8d	       698	floatformat.c	FUNCTION_8
0x4000c8d	              0xc9	                                   leave	       698	floatformat.c	FUNCTION_8
0x4000c8e	              0xc3	                                     ret	       698	floatformat.c	FUNCTION_8
floatformat_ibm_long_double_is_valid	IF,14:DO,0:SWITCH,0:WHILE,0:functions,0:CALL,8:FOR,1:ELSE,2	198
0x40000e7	              0x55	                                push rbp	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40000e8	          0x4889e5	                            mov rbp, rsp	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40000eb	        0x4883ec40	                           sub rsp, 0x40	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40000ef	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40000f3	        0x488975c0	             mov qword [rbp - 0x40], rsi	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40000f7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       293	floatformat.c	ELSE_1	FUNCTION_3
0x40000fb	        0x488945e0	             mov qword [rbp - 0x20], rax	       293	floatformat.c	ELSE_1	FUNCTION_3
0x40000ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       294	floatformat.c	ELSE_1	FUNCTION_3
0x4000103	        0x488b4038	            mov rax, qword [rax + 0x38] 	       294	floatformat.c	ELSE_1	FUNCTION_3
0x4000107	        0x488945e8	             mov qword [rbp - 0x18], rax	       294	floatformat.c	ELSE_1	FUNCTION_3
0x400010b	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       296	floatformat.c	ELSE_1	FUNCTION_3
0x4000112	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x4000116	          0x8b7810	            mov edi, dword [rax + 0x10] 	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x4000119	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x400011d	          0x8b480c	              mov ecx, dword [rax + 0xc]	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x4000120	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x4000124	          0x8b5004	                mov edx, dword [rax + 4]	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x4000127	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x400012b	            0x8b30	                    mov esi, dword [rax]	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x400012d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x4000131	          0x4189f8	                            mov r8d, edi	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x4000134	          0x4889c7	                            mov rdi, rax	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x4000137	      0xe8e8020000	                      call sym.get_field	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x400013c	        0x488945f0	             mov qword [rbp - 0x10], rax	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x4000140	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000144	          0x8b7010	            mov esi, dword [rax + 0x10] 	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000147	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x400014b	          0x8b480c	              mov ecx, dword [rax + 0xc]	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x400014e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000152	          0x8b5004	                mov edx, dword [rax + 4]	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000155	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000159	            0x8b00	                    mov eax, dword [rax]	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x400015b	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x400015f	        0x4883c708	                              add rdi, 8	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000163	          0x4189f0	                            mov r8d, esi	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000166	            0x89c6	                            mov esi, eax	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000168	      0xe8b7020000	                      call sym.get_field	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x400016d	        0x488945f8	                mov qword [rbp - 8], rax	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000171	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       303	floatformat.c	ELSE_1	FUNCTION_3	IF_1
0x4000175	          0x8b4018	            mov eax, dword [rax + 0x18] 	       303	floatformat.c	ELSE_1	FUNCTION_3	IF_1
0x4000178	            0x89c2	                            mov edx, eax	       303	floatformat.c	ELSE_1	FUNCTION_3	IF_1
0x400017a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       303	floatformat.c	ELSE_1	FUNCTION_3	IF_1
0x400017e	          0x4839c2	                            cmp rdx, rax	       303	floatformat.c	ELSE_1	FUNCTION_3	IF_1
0x4000181	            0x7516	                           jne 0x4000199	       303	floatformat.c	ELSE_1	FUNCTION_3	IF_1
0x4000183	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       304	floatformat.c	ELSE_1	FUNCTION_3	CALL_3
0x4000187	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       304	floatformat.c	ELSE_1	FUNCTION_3	CALL_3
0x400018b	          0x4889d6	                            mov rsi, rdx	       304	floatformat.c	ELSE_1	FUNCTION_3	CALL_3
0x400018e	          0x4889c7	                            mov rdi, rax	       304	floatformat.c	ELSE_1	FUNCTION_3	CALL_3
0x4000191	      0xe80e020000	                  call sym.mant_bits_set	       304	floatformat.c	ELSE_1	FUNCTION_3	CALL_3
0x4000196	          0x8945d0	             mov dword [rbp - 0x30], eax	       304	floatformat.c	ELSE_1	FUNCTION_3	CALL_3
0x4000199	        0x837dd000	               cmp dword [rbp - 0x30], 0	       307	floatformat.c	ELSE_1	FUNCTION_3	IF_2
0x400019d	            0x740a	                            je 0x40001a9	       307	floatformat.c	ELSE_1	FUNCTION_3	IF_2
0x400019f	      0xb801000000	                              mov eax, 1	       308	floatformat.c	ELSE_1	FUNCTION_3	IF_2
0x40001a4	      0xe9f9010000	                           jmp 0x40003a2	       308	floatformat.c	ELSE_1	FUNCTION_3	IF_2
0x40001a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40001ad	          0x8b4018	            mov eax, dword [rax + 0x18] 	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40001b0	            0x89c2	                            mov edx, eax	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40001b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40001b6	          0x4839c2	                            cmp rdx, rax	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40001b9	            0x7407	                            je 0x40001c2	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40001bb	      0x48837df000	               cmp qword [rbp - 0x10], 0	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40001c0	            0x7535	                           jne 0x40001f7	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40001c2	      0x48837df800	                  cmp qword [rbp - 8], 0	       314	floatformat.c	ELSE_1	FUNCTION_3	IF_3	IF_4
0x40001c7	            0x740a	                            je 0x40001d3	       314	floatformat.c	ELSE_1	FUNCTION_3	IF_3	IF_4
0x40001c9	      0xb800000000	                              mov eax, 0	       315	floatformat.c	ELSE_1	FUNCTION_3	IF_3	IF_4
0x40001ce	      0xe9cf010000	                           jmp 0x40003a2	       315	floatformat.c	ELSE_1	FUNCTION_3	IF_3	IF_4
0x40001d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x40001d7	        0x488d5008	                      lea rdx, [rax + 8]	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x40001db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x40001df	          0x4889d6	                            mov rsi, rdx	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x40001e2	          0x4889c7	                            mov rdi, rax	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x40001e5	      0xe8ba010000	                  call sym.mant_bits_set	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x40001ea	            0x85c0	                           test eax, eax	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x40001ec	           0xf94c0	                                 sete al	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x40001ef	           0xfb6c0	                           movzx eax, al	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x40001f2	      0xe9ab010000	                           jmp 0x40003a2	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x40001f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       326	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x40001fb	        0x4883e835	                           sub rax, 0x35	       326	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x40001ff	        0x483b45f8	                cmp rax, qword [rbp - 8]	       326	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x4000203	            0x7e0a	                           jle 0x400020f	       326	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x4000205	      0xb801000000	                              mov eax, 1	       327	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x400020a	      0xe993010000	                           jmp 0x40003a2	       327	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x400020f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       328	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x4000213	        0x4883e835	                           sub rax, 0x35	       328	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x4000217	        0x483b45f8	                cmp rax, qword [rbp - 8]	       328	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x400021b	            0x7d11	                           jge 0x400022e	       328	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x400021d	      0x48837df800	                  cmp qword [rbp - 8], 0	       328	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x4000222	            0x740a	                            je 0x400022e	       328	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x4000224	      0xb800000000	                              mov eax, 0	       329	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x4000229	      0xe974010000	                           jmp 0x40003a2	       329	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x400022e	      0x48837df800	                  cmp qword [rbp - 8], 0	       330	floatformat.c	ELSE_1	FUNCTION_3	IF_7
0x4000233	     0xf850c010000	                           jne 0x4000345	       330	floatformat.c	ELSE_1	FUNCTION_3	IF_7
0x4000239	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	       334	floatformat.c	ELSE_1	FUNCTION_3	IF_7
0x4000240	    0xc745d8ffffff	     mov dword [rbp - 0x28], 0xffffffff 	       334	floatformat.c	ELSE_1	FUNCTION_3	IF_7
0x4000247	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x400024e	            0xeb4e	                           jmp 0x400029e	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x4000250	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       337	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8
0x4000254	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       337	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8
0x4000257	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x400025a	          0x8d0c02	                    lea ecx, [rdx + rax]	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x400025d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x4000261	          0x8b5004	                mov edx, dword [rax + 4]	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x4000264	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x4000268	            0x8b00	                    mov eax, dword [rax]	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x400026a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x400026e	        0x488d7e08	                      lea rdi, [rsi + 8]	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x4000272	    0x41b801000000	                              mov r8d, 1	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x4000278	            0x89c6	                            mov esi, eax	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x400027a	      0xe8a5010000	                      call sym.get_field	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x400027f	          0x4885c0	                           test rax, rax	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x4000282	            0x7416	                            je 0x400029a	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x4000284	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	       339	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	IF_9
0x4000288	            0x7508	                           jne 0x4000292	       339	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	IF_9
0x400028a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       340	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	IF_9
0x400028d	          0x8945d4	             mov dword [rbp - 0x2c], eax	       340	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	IF_9
0x4000290	            0xeb08	                           jmp 0x400029a	       340	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	IF_9
0x4000292	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       343	floatformat.c	FUNCTION_3	IF_7	FOR_1	IF_8
0x4000295	          0x8945d8	             mov dword [rbp - 0x28], eax	       343	floatformat.c	FUNCTION_3	IF_7	FOR_1	IF_8
0x4000298	            0xeb12	                           jmp 0x40002ac	       344	floatformat.c	FUNCTION_3	IF_7	FOR_1	IF_8
0x400029a	        0x8345dc01	               add dword [rbp - 0x24], 1	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x400029e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x40002a2	          0x8b5020	            mov edx, dword [rax + 0x20] 	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x40002a5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x40002a8	            0x39c2	                            cmp edx, eax	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x40002aa	            0x77a4	                            ja 0x4000250	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x40002ac	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	       348	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_10
0x40002b0	            0x750a	                           jne 0x40002bc	       348	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_10
0x40002b2	      0xb801000000	                              mov eax, 1	       349	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_10
0x40002b7	      0xe9e6000000	                           jmp 0x40003a2	       349	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_10
0x40002bc	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x40002bf	            0xf7d8	                                 neg eax	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x40002c1	            0x4898	                                    cdqe	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x40002c3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x40002c7	        0x4883ea35	                           sub rdx, 0x35	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x40002cb	          0x4839d0	                            cmp rax, rdx	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x40002ce	            0x7d0a	                           jge 0x40002da	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x40002d0	      0xb801000000	                              mov eax, 1	       352	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x40002d5	      0xe9c8000000	                           jmp 0x40003a2	       352	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x40002da	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       353	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_12
0x40002dd	            0xf7d8	                                 neg eax	       353	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_12
0x40002df	            0x4898	                                    cdqe	       353	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_12
0x40002e1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       353	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_12
0x40002e5	        0x4883ea35	                           sub rdx, 0x35	       353	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_12
0x40002e9	          0x4839d0	                            cmp rax, rdx	       353	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_12
0x40002ec	            0x7e0a	                           jle 0x40002f8	       353	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_12
0x40002ee	      0xb800000000	                              mov eax, 0	       354	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_12
0x40002f3	      0xe9aa000000	                           jmp 0x40003a2	       354	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_12
0x40002f8	        0x837dd8ff	cmp dword [rbp - 0x28], 0xffffffffffffffff	       358	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_13
0x40002fc	            0x740a	                            je 0x4000308	       358	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_13
0x40002fe	      0xb800000000	                              mov eax, 0	       359	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_13
0x4000303	      0xe99a000000	                           jmp 0x40003a2	       359	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_13
0x4000308	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       361	floatformat.c	FUNCTION_3	IF_7	ELSE_1
0x400030c	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       361	floatformat.c	FUNCTION_3	IF_7	ELSE_1
0x400030f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       361	floatformat.c	FUNCTION_3	IF_7	ELSE_1
0x4000313	          0x8b4020	            mov eax, dword [rax + 0x20] 	       361	floatformat.c	FUNCTION_3	IF_7	ELSE_1
0x4000316	             0x1d0	                            add eax, edx	       361	floatformat.c	FUNCTION_3	IF_7	ELSE_1
0x4000318	          0x8d48ff	                      lea ecx, [rax - 1]	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x400031b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x400031f	          0x8b5004	                mov edx, dword [rax + 4]	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000322	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000326	            0x8b30	                    mov esi, dword [rax]	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000328	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x400032c	    0x41b801000000	                              mov r8d, 1	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000332	          0x4889c7	                            mov rdi, rax	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000335	      0xe8ea000000	                      call sym.get_field	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x400033a	          0x4885c0	                           test rax, rax	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x400033d	           0xf94c0	                                 sete al	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000340	           0xfb6c0	                           movzx eax, al	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000343	            0xeb5d	                           jmp 0x40003a2	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000345	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       369	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14
0x4000349	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       369	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14
0x400034c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       369	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14
0x4000350	          0x8b4020	            mov eax, dword [rax + 0x20] 	       369	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14
0x4000353	             0x1d0	                            add eax, edx	       369	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14
0x4000355	          0x8d48ff	                      lea ecx, [rax - 1]	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000358	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x400035c	          0x8b5004	                mov edx, dword [rax + 4]	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x400035f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000363	            0x8b30	                    mov esi, dword [rax]	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000365	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000369	    0x41b801000000	                              mov r8d, 1	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x400036f	          0x4889c7	                            mov rdi, rax	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000372	      0xe8ad000000	                      call sym.get_field	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000377	          0x4885c0	                           test rax, rax	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x400037a	            0x7407	                            je 0x4000383	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x400037c	      0xb800000000	                              mov eax, 0	       370	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14
0x4000381	            0xeb1f	                           jmp 0x40003a2	       370	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14
0x4000383	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x4000387	        0x488d5008	                      lea rdx, [rax + 8]	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x400038b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x400038f	          0x4889d6	                            mov rsi, rdx	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x4000392	          0x4889c7	                            mov rdi, rax	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x4000395	      0xe80a000000	                  call sym.mant_bits_set	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x400039a	            0x85c0	                           test eax, eax	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x400039c	           0xf94c0	                                 sete al	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x400039f	           0xfb6c0	                           movzx eax, al	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x40003a2	              0xc9	                                   leave	       373	floatformat.c	FUNCTION_3	ELSE_1
0x40003a3	              0xc3	                                     ret	       373	floatformat.c	FUNCTION_3	ELSE_1
