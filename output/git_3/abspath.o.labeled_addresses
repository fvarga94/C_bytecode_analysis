prefix_filename	CALL,6:IF,2:DO,0:SWITCH,0:functions,0:ELSE,2:WHILE,0:FOR,0	45
0x4000890	            0x4154	                                push r12	       254	abspath.c	FUNCTION_11
0x4000892	              0x55	                                push rbp	       254	abspath.c	FUNCTION_11
0x4000893	              0x53	                                push rbx	       254	abspath.c	FUNCTION_11
0x4000894	          0x4889f3	                            mov rbx, rsi	       254	abspath.c	FUNCTION_11
0x4000897	        0x4883ec20	                           sub rsp, 0x20	       254	abspath.c	FUNCTION_11
0x400089b	    0x64488b042528	                mov rax, qword fs:[0x28]	       254	abspath.c	FUNCTION_11
0x40008a4	      0x4889442418	             mov qword [rsp + 0x18], rax	       254	abspath.c	FUNCTION_11
0x40008a9	            0x31c0	                            xor eax, eax	       254	abspath.c	FUNCTION_11
0x40008ab	          0x4885ff	                           test rdi, rdi	       256	abspath.c	FUNCTION_11	CALL_1
0x40008ae	    0x48c704240000	                      mov qword [rsp], 0	       255	abspath.c	FUNCTION_11
0x40008b6	    0x48c744240800	                  mov qword [rsp + 8], 0	       255	abspath.c	FUNCTION_11
0x40008bf	    0x48c744241000	               mov qword [rsp + 0x10], 0	       255	abspath.c	FUNCTION_11
0x40008c8	            0x7466	                            je 0x4000930	       256	abspath.c	FUNCTION_11	CALL_1
0x40008ca	          0x4989fc	                            mov r12, rdi	       256	abspath.c	FUNCTION_11	CALL_1
0x40008cd	      0xe800000000	                          call 0x40008d2	       256	abspath.c	FUNCTION_11	CALL_1
0x40008d2	          0x4885c0	                           test rax, rax	       258	abspath.c	FUNCTION_11	IF_1
0x40008d5	            0x7459	                            je 0x4000930	       258	abspath.c	FUNCTION_11	IF_1
0x40008d7	          0x803b2f	                    cmp byte [rbx], 0x2f	      1154	cache.h	FUNCTION_32
0x40008da	          0x4889e5	                            mov rbp, rsp	      1154	cache.h	FUNCTION_32
0x40008dd	            0x740e	                            je 0x40008ed	      1154	cache.h	FUNCTION_32
0x40008df	          0x4889c2	                            mov rdx, rax	       263	abspath.c	FUNCTION_11	CALL_3
0x40008e2	          0x4c89e6	                            mov rsi, r12	       263	abspath.c	FUNCTION_11	CALL_3
0x40008e5	          0x4889e7	                            mov rdi, rsp	       263	abspath.c	FUNCTION_11	CALL_3
0x40008e8	      0xe800000000	                          call 0x40008ed	       263	abspath.c	FUNCTION_11	CALL_3
0x40008ed	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008f0	      0xe800000000	                          call 0x40008f5	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008f5	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008f8	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008fb	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008fe	      0xe800000000	                          call 0x4000903	       279	strbuf.h	FUNCTION_43	CALL_2
0x4000903	            0x31f6	                            xor esi, esi	       269	abspath.c	FUNCTION_11	CALL_6
0x4000905	          0x4889ef	                            mov rdi, rbp	       269	abspath.c	FUNCTION_11	CALL_6
0x4000908	      0xe800000000	                          call 0x400090d	       269	abspath.c	FUNCTION_11	CALL_6
0x400090d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       270	abspath.c	FUNCTION_11
0x4000912	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       270	abspath.c	FUNCTION_11
0x400091b	            0x7518	                           jne 0x4000935	       270	abspath.c	FUNCTION_11
0x400091d	        0x4883c420	                           add rsp, 0x20	       270	abspath.c	FUNCTION_11
0x4000921	              0x5b	                                 pop rbx	       270	abspath.c	FUNCTION_11
0x4000922	              0x5d	                                 pop rbp	       270	abspath.c	FUNCTION_11
0x4000923	            0x415c	                                 pop r12	       270	abspath.c	FUNCTION_11
0x4000925	              0xc3	                                     ret	       270	abspath.c	FUNCTION_11
0x4000926	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       270	abspath.c	FUNCTION_11
0x4000930	          0x4889e5	                            mov rbp, rsp	       270	abspath.c	FUNCTION_11
0x4000933	            0xebb8	                           jmp 0x40008ed	       270	abspath.c	FUNCTION_11
0x4000935	      0xe800000000	                  call section_end..text	       270	abspath.c	FUNCTION_11
absolute_path	CALL,1:IF,0:DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0	16
0x40007e0	        0x4883ec08	                              sub rsp, 8	       239	abspath.c	FUNCTION_9
0x40007e4	    0x488b05000000	            mov rax, qword [0x040007eb] 	       165	strbuf.h	FUNCTION_41	IF_2
0x40007eb	    0x48c705000000	               mov qword [0x040007f6], 0	       164	strbuf.h	FUNCTION_41
0x40007f6	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_41	IF_2
0x40007fc	            0x7422	                            je 0x4000820	       165	strbuf.h	FUNCTION_41	IF_2
0x40007fe	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_41	IF_2
0x4000801	          0x4889fe	                            mov rsi, rdi	       242	abspath.c	FUNCTION_9	CALL_1
0x4000804	      0xbf00000000	                              mov edi, 0	       242	abspath.c	FUNCTION_9	CALL_1
0x4000809	      0xe800000000	                          call 0x400080e	       242	abspath.c	FUNCTION_9	CALL_1
0x400080e	    0x488b05000000	            mov rax, qword [0x04000815] 	       244	abspath.c	FUNCTION_9
0x4000815	        0x4883c408	                              add rsp, 8	       244	abspath.c	FUNCTION_9
0x4000819	              0xc3	                                     ret	       244	abspath.c	FUNCTION_9
0x400081a	    0x660f1f440000	                    nop word [rax + rax]	       244	abspath.c	FUNCTION_9
0x4000820	    0x803d00000000	                cmp byte [0x04000827], 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000827	            0x74d8	                            je 0x4000801	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000829	      0xe800000000	                          call 0x400082e	       168	strbuf.h	FUNCTION_41	CALL_2
strip_last_component	CALL,1:IF,0:DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,2:FOR,0	47
0x40000a0	        0x4883ec08	                              sub rsp, 8	        16	abspath.c	FUNCTION_2
0x40000a4	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	        17	abspath.c	FUNCTION_2
0x40000a8	            0x31c9	                            xor ecx, ecx	        17	abspath.c	FUNCTION_2
0x40000aa	        0x488b4708	                mov rax, qword [rdi + 8]	        18	abspath.c	FUNCTION_2
0x40000ae	          0x803a2f	                    cmp byte [rdx], 0x2f	        17	abspath.c	FUNCTION_2
0x40000b1	           0xf94c1	                                 sete cl	        17	abspath.c	FUNCTION_2
0x40000b4	          0x4839c1	                            cmp rcx, rax	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000b7	            0x720c	                            jb 0x40000c5	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000b9	            0xeb30	                           jmp 0x40000eb	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000bb	       0xf1f440000	                   nop dword [rax + rax]	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000c0	          0x4839c1	                            cmp rcx, rax	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000c3	            0x7426	                            je 0x40000eb	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000c5	        0x4883e801	                              sub rax, 1	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000c9	        0x803c022f	              cmp byte [rdx + rax], 0x2f	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000cd	            0x75f1	                           jne 0x40000c0	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000cf	            0xeb15	                           jmp 0x40000e6	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000d1	     0xf1f80000000	                         nop dword [rax]	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000d8	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	        24	abspath.c	FUNCTION_2	WHILE_2
0x40000dd	        0x488d70ff	                      lea rsi, [rax - 1]	        24	abspath.c	FUNCTION_2	WHILE_2
0x40000e1	            0x752d	                           jne 0x4000110	        24	abspath.c	FUNCTION_2	WHILE_2
0x40000e3	          0x4889f0	                            mov rax, rsi	        24	abspath.c	FUNCTION_2	WHILE_2
0x40000e6	          0x4839c1	                            cmp rcx, rax	        24	abspath.c	FUNCTION_2	WHILE_2
0x40000e9	            0x72ed	                            jb 0x40000d8	        24	abspath.c	FUNCTION_2	WHILE_2
0x40000eb	          0x488b0f	                    mov rcx, qword [rdi]	       162	strbuf.h	FUNCTION_41	IF_1
0x40000ee	          0x4885c9	                           test rcx, rcx	       162	strbuf.h	FUNCTION_41	IF_1
0x40000f1	            0x7525	                           jne 0x4000118	       162	strbuf.h	FUNCTION_41	IF_1
0x40000f3	          0x4839c1	                            cmp rcx, rax	       162	strbuf.h	FUNCTION_41	IF_1
0x40000f6	            0x7236	                            jb 0x400012e	       162	strbuf.h	FUNCTION_41	IF_1
0x40000f8	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_41	IF_2
0x40000ff	        0x48894708	                mov qword [rdi + 8], rax	       164	strbuf.h	FUNCTION_41
0x4000103	            0x741b	                            je 0x4000120	       165	strbuf.h	FUNCTION_41	IF_2
0x4000105	        0xc6040200	                 mov byte [rdx + rax], 0	       166	strbuf.h	FUNCTION_41	IF_2
0x4000109	        0x4883c408	                              add rsp, 8	        28	abspath.c	FUNCTION_2
0x400010d	              0xc3	                                     ret	        28	abspath.c	FUNCTION_2
0x400010e	            0x6690	                                     nop	        28	abspath.c	FUNCTION_2
0x4000110	          0x488b0f	                    mov rcx, qword [rdi]	       162	strbuf.h	FUNCTION_41	IF_1
0x4000113	          0x4885c9	                           test rcx, rcx	       162	strbuf.h	FUNCTION_41	IF_1
0x4000116	            0x7416	                            je 0x400012e	       162	strbuf.h	FUNCTION_41	IF_1
0x4000118	        0x4883e901	                              sub rcx, 1	       162	strbuf.h	FUNCTION_41	IF_1
0x400011c	            0xebd5	                           jmp 0x40000f3	       162	strbuf.h	FUNCTION_41	IF_1
0x400011e	            0x6690	                                     nop	       162	strbuf.h	FUNCTION_41	IF_1
0x4000120	    0x803d00000000	                cmp byte [0x04000127], 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000127	            0x74e0	                            je 0x4000109	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000129	      0xe800000000	                          call 0x400012e	       168	strbuf.h	FUNCTION_41	CALL_2
0x400012e	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_41	CALL_1
0x4000133	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_41	CALL_1
0x4000135	      0xe800000000	                          call 0x400013a	       163	strbuf.h	FUNCTION_41	CALL_1
real_pathdup	CALL,3:IF,1:DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0	31
0x4000760	              0x53	                                push rbx	       222	abspath.c	FUNCTION_8
0x4000761	            0x89f2	                            mov edx, esi	       222	abspath.c	FUNCTION_8
0x4000763	          0x4889fe	                            mov rsi, rdi	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000766	        0x4883ec20	                           sub rsp, 0x20	       222	abspath.c	FUNCTION_8
0x400076a	          0x4889e7	                            mov rdi, rsp	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x400076d	    0x48c704240000	                      mov qword [rsp], 0	       223	abspath.c	FUNCTION_8
0x4000775	    0x48c744240800	                  mov qword [rsp + 8], 0	       223	abspath.c	FUNCTION_8
0x400077e	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	abspath.c	FUNCTION_8
0x4000787	      0x4889442418	             mov qword [rsp + 0x18], rax	       222	abspath.c	FUNCTION_8
0x400078c	            0x31c0	                            xor eax, eax	       222	abspath.c	FUNCTION_8
0x400078e	    0x48c744241000	               mov qword [rsp + 0x10], 0	       223	abspath.c	FUNCTION_8
0x4000797	      0xe800000000	                          call 0x400079c	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x400079c	          0x4885c0	                           test rax, rax	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x400079f	            0x742f	                            je 0x40007d0	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x40007a1	            0x31f6	                            xor esi, esi	       227	abspath.c	FUNCTION_8	CALL_2
0x40007a3	          0x4889e7	                            mov rdi, rsp	       227	abspath.c	FUNCTION_8	CALL_2
0x40007a6	      0xe800000000	                          call 0x40007ab	       227	abspath.c	FUNCTION_8	CALL_2
0x40007ab	          0x4889c3	                            mov rbx, rax	       227	abspath.c	FUNCTION_8	CALL_2
0x40007ae	          0x4889e7	                            mov rdi, rsp	       229	abspath.c	FUNCTION_8	CALL_3
0x40007b1	      0xe800000000	                          call 0x40007b6	       229	abspath.c	FUNCTION_8	CALL_3
0x40007b6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       232	abspath.c	FUNCTION_8
0x40007bb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       232	abspath.c	FUNCTION_8
0x40007c4	          0x4889d8	                            mov rax, rbx	       232	abspath.c	FUNCTION_8
0x40007c7	            0x750b	                           jne 0x40007d4	       232	abspath.c	FUNCTION_8
0x40007c9	        0x4883c420	                           add rsp, 0x20	       232	abspath.c	FUNCTION_8
0x40007cd	              0x5b	                                 pop rbx	       232	abspath.c	FUNCTION_8
0x40007ce	              0xc3	                                     ret	       232	abspath.c	FUNCTION_8
0x40007cf	              0x90	                                     nop	       232	abspath.c	FUNCTION_8
0x40007d0	            0x31db	                            xor ebx, ebx	       224	abspath.c	FUNCTION_8
0x40007d2	            0xebda	                           jmp 0x40007ae	       224	abspath.c	FUNCTION_8
0x40007d4	      0xe800000000	                          call 0x40007d9	       232	abspath.c	FUNCTION_8
get_root_part	CALL,3:IF,0:DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0	27
0x4000040	              0x55	                                push rbp	       160	strbuf.h	
0x4000041	              0x53	                                push rbx	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000042	          0x4889f5	                            mov rbp, rsi	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000045	        0x4883ec08	                              sub rsp, 8	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000049	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	       168	strbuf.h	FUNCTION_41	CALL_2
0x400004d	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000051	          0x803e2f	                    cmp byte [rsi], 0x2f	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000054	    0x48c747080000	                  mov qword [rdi + 8], 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x400005c	           0xf94c3	                                 sete bl	       364	git-compat-util.h	FUNCTION_64
0x400005f	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_41	IF_2
0x4000065	            0x7429	                            je 0x4000090	       165	strbuf.h	FUNCTION_41	IF_2
0x4000067	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_41	IF_2
0x400006a	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       166	strbuf.h	FUNCTION_41	IF_2
0x400006e	           0xfb6db	                           movzx ebx, bl	        57	abspath.c	FUNCTION_4	CALL_1
0x4000071	          0x4889da	                            mov rdx, rbx	        57	abspath.c	FUNCTION_4	CALL_1
0x4000074	      0xe800000000	                          call 0x4000079	        57	abspath.c	FUNCTION_4	CALL_1
0x4000079	        0x4883c408	                              add rsp, 8	        62	abspath.c	FUNCTION_4
0x400007d	          0x4889da	                            mov rdx, rbx	        61	abspath.c	FUNCTION_4	CALL_3
0x4000080	          0x4889ef	                            mov rdi, rbp	        61	abspath.c	FUNCTION_4	CALL_3
0x4000083	              0x5b	                                 pop rbx	        62	abspath.c	FUNCTION_4
0x4000084	              0x5d	                                 pop rbp	        62	abspath.c	FUNCTION_4
0x4000085	            0x31f6	                            xor esi, esi	        61	abspath.c	FUNCTION_4	CALL_3
0x4000087	      0xe900000000	                           jmp 0x400008c	        61	abspath.c	FUNCTION_4	CALL_3
0x400008c	         0xf1f4000	                         nop dword [rax]	        61	abspath.c	FUNCTION_4	CALL_3
0x4000090	    0x803d00000000	                cmp byte [0x04000097], 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000097	            0x74d5	                            je 0x400006e	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000099	      0xe800000000	                          call 0x400009e	       168	strbuf.h	FUNCTION_41	CALL_2
absolute_pathdup	CALL,2:IF,0:DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0	19
0x4000830	        0x4883ec28	                           sub rsp, 0x28	       247	abspath.c	FUNCTION_10
0x4000834	          0x4889fe	                            mov rsi, rdi	       247	abspath.c	FUNCTION_10
0x4000837	          0x4889e7	                            mov rdi, rsp	       249	abspath.c	FUNCTION_10	CALL_1
0x400083a	    0x48c704240000	                      mov qword [rsp], 0	       248	abspath.c	FUNCTION_10
0x4000842	    0x48c744240800	                  mov qword [rsp + 8], 0	       248	abspath.c	FUNCTION_10
0x400084b	    0x64488b042528	                mov rax, qword fs:[0x28]	       247	abspath.c	FUNCTION_10
0x4000854	      0x4889442418	             mov qword [rsp + 0x18], rax	       247	abspath.c	FUNCTION_10
0x4000859	            0x31c0	                            xor eax, eax	       247	abspath.c	FUNCTION_10
0x400085b	    0x48c744241000	               mov qword [rsp + 0x10], 0	       248	abspath.c	FUNCTION_10
0x4000864	      0xe800000000	                          call 0x4000869	       249	abspath.c	FUNCTION_10	CALL_1
0x4000869	            0x31f6	                            xor esi, esi	       250	abspath.c	FUNCTION_10	CALL_2
0x400086b	          0x4889e7	                            mov rdi, rsp	       250	abspath.c	FUNCTION_10	CALL_2
0x400086e	      0xe800000000	                          call 0x4000873	       250	abspath.c	FUNCTION_10	CALL_2
0x4000873	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       251	abspath.c	FUNCTION_10
0x4000878	    0x644833142528	                xor rdx, qword fs:[0x28]	       251	abspath.c	FUNCTION_10
0x4000881	            0x7505	                           jne 0x4000888	       251	abspath.c	FUNCTION_10
0x4000883	        0x4883c428	                           add rsp, 0x28	       251	abspath.c	FUNCTION_10
0x4000887	              0xc3	                                     ret	       251	abspath.c	FUNCTION_10
0x4000888	      0xe800000000	                          call 0x400088d	       251	abspath.c	FUNCTION_10
real_path	CALL,1:IF,0:DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0	4
0x4000730	          0x4889fe	                            mov rsi, rdi	       210	abspath.c	FUNCTION_6
0x4000733	      0xba01000000	                              mov edx, 1	       212	abspath.c	FUNCTION_6	CALL_1
0x4000738	      0xbf00000000	                              mov edi, 0	       212	abspath.c	FUNCTION_6	CALL_1
0x400073d	      0xe96efaffff	                 jmp sym.strbuf_realpath	       212	abspath.c	FUNCTION_6	CALL_1
real_path_if_valid	CALL,1:IF,0:DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0	4
0x4000750	          0x4889fe	                            mov rsi, rdi	       216	abspath.c	FUNCTION_7
0x4000753	            0x31d2	                            xor edx, edx	       218	abspath.c	FUNCTION_7	CALL_1
0x4000755	      0xbf00000000	                              mov edi, 0	       218	abspath.c	FUNCTION_7	CALL_1
0x400075a	      0xe951faffff	                 jmp sym.strbuf_realpath	       218	abspath.c	FUNCTION_7	CALL_1
