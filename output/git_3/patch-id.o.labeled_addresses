flush_one_hunk	DO,0:ELSE,0:CALL,2:IF,0:FOR,1:WHILE,0:SWITCH,0:functions,0	31
0x4000080	              0x55	                                push rbp	        58	patch-id.c	FUNCTION_4
0x4000081	              0x53	                                push rbx	        58	patch-id.c	FUNCTION_4
0x4000082	          0x4889f5	                            mov rbp, rsi	        58	patch-id.c	FUNCTION_4
0x4000085	          0x4889fb	                            mov rbx, rdi	        58	patch-id.c	FUNCTION_4
0x4000088	        0x4883ec28	                           sub rsp, 0x28	        58	patch-id.c	FUNCTION_4
0x400008c	          0x4889e7	                            mov rdi, rsp	        63	patch-id.c	FUNCTION_4	CALL_1
0x400008f	    0x64488b042528	                mov rax, qword fs:[0x28]	        58	patch-id.c	FUNCTION_4
0x4000098	      0x4889442418	             mov qword [rsp + 0x18], rax	        58	patch-id.c	FUNCTION_4
0x400009d	            0x31c0	                            xor eax, eax	        58	patch-id.c	FUNCTION_4
0x400009f	      0xe800000000	                          call 0x40000a4	        63	patch-id.c	FUNCTION_4	CALL_1
0x40000a4	          0x4889ef	                            mov rdi, rbp	        64	patch-id.c	FUNCTION_4	CALL_2
0x40000a7	      0xe800000000	                          call 0x40000ac	        64	patch-id.c	FUNCTION_4	CALL_2
0x40000ac	            0x31c0	                            xor eax, eax	        64	patch-id.c	FUNCTION_4	CALL_2
0x40000ae	            0x31d2	                            xor edx, edx	        60	patch-id.c	FUNCTION_4
0x40000b0	         0xfb63403	             movzx esi, byte [rbx + rax]	        67	patch-id.c	FUNCTION_4	FOR_1
0x40000b4	         0xfb60c04	             movzx ecx, byte [rsp + rax]	        67	patch-id.c	FUNCTION_4	FOR_1
0x40000b8	             0x1f1	                            add ecx, esi	        67	patch-id.c	FUNCTION_4	FOR_1
0x40000ba	             0x1ca	                            add edx, ecx	        67	patch-id.c	FUNCTION_4	FOR_1
0x40000bc	          0x881403	                mov byte [rbx + rax], dl	        68	patch-id.c	FUNCTION_4	FOR_1
0x40000bf	        0x4883c001	                              add rax, 1	        68	patch-id.c	FUNCTION_4	FOR_1
0x40000c3	        0x66c1ea08	                               shr dx, 8	        69	patch-id.c	FUNCTION_4	FOR_1
0x40000c7	        0x4883f814	                           cmp rax, 0x14	        66	patch-id.c	FUNCTION_4	FOR_1
0x40000cb	            0x75e3	                           jne 0x40000b0	        66	patch-id.c	FUNCTION_4	FOR_1
0x40000cd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        71	patch-id.c	FUNCTION_4
0x40000d2	    0x644833042528	                xor rax, qword fs:[0x28]	        71	patch-id.c	FUNCTION_4
0x40000db	            0x7507	                           jne 0x40000e4	        71	patch-id.c	FUNCTION_4
0x40000dd	        0x4883c428	                           add rsp, 0x28	        71	patch-id.c	FUNCTION_4
0x40000e1	              0x5b	                                 pop rbx	        71	patch-id.c	FUNCTION_4
0x40000e2	              0x5d	                                 pop rbp	        71	patch-id.c	FUNCTION_4
0x40000e3	              0xc3	                                     ret	        71	patch-id.c	FUNCTION_4
0x40000e4	      0xe800000000	                          call 0x40000e9	        71	patch-id.c	FUNCTION_4
git_patch_id_config	DO,0:ELSE,0:CALL,3:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0	20
0x4000040	          0x4889f8	                            mov rax, rdi	       169	patch-id.c	FUNCTION_7
0x4000043	          0x4989f0	                             mov r8, rsi	       169	patch-id.c	FUNCTION_7
0x4000046	      0xbf00000000	                              mov edi, 0	       172	patch-id.c	FUNCTION_7	IF_1	CALL_1
0x400004b	      0xb90f000000	                            mov ecx, 0xf	       172	patch-id.c	FUNCTION_7	IF_1	CALL_1
0x4000050	          0x4889c6	                            mov rsi, rax	       172	patch-id.c	FUNCTION_7	IF_1	CALL_1
0x4000053	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       172	patch-id.c	FUNCTION_7	IF_1	CALL_1
0x4000055	            0x7411	                            je 0x4000068	       172	patch-id.c	FUNCTION_7	IF_1	CALL_1
0x4000057	          0x4c89c6	                             mov rsi, r8	       177	patch-id.c	FUNCTION_7	CALL_3
0x400005a	          0x4889c7	                            mov rdi, rax	       177	patch-id.c	FUNCTION_7	CALL_3
0x400005d	      0xe900000000	                           jmp 0x4000062	       177	patch-id.c	FUNCTION_7	CALL_3
0x4000062	    0x660f1f440000	                    nop word [rax + rax]	       177	patch-id.c	FUNCTION_7	CALL_3
0x4000068	              0x53	                                push rbx	       169	patch-id.c	FUNCTION_7
0x4000069	          0x4c89c6	                             mov rsi, r8	       169	patch-id.c	FUNCTION_7
0x400006c	          0x4889d3	                            mov rbx, rdx	       169	patch-id.c	FUNCTION_7
0x400006f	          0x4889c7	                            mov rdi, rax	       169	patch-id.c	FUNCTION_7
0x4000072	      0xe800000000	                          call 0x4000077	       173	patch-id.c	FUNCTION_7	IF_1	CALL_2
0x4000077	            0x8903	                    mov dword [rbx], eax	       173	patch-id.c	FUNCTION_7	IF_1	CALL_2
0x4000079	            0x31c0	                            xor eax, eax	       178	patch-id.c	FUNCTION_7
0x400007b	              0x5b	                                 pop rbx	       178	patch-id.c	FUNCTION_7
0x400007c	              0xc3	                                     ret	       178	patch-id.c	FUNCTION_7
cmd_patch_id	DO,0:ELSE,2:CALL,5:IF,4:FOR,0:WHILE,0:SWITCH,0:functions,0	107
0x4000510	              0x55	                                push rbp	       181	patch-id.c	FUNCTION_8
0x4000511	              0x53	                                push rbx	       181	patch-id.c	FUNCTION_8
0x4000512	          0x4889f5	                            mov rbp, rsi	       181	patch-id.c	FUNCTION_8
0x4000515	            0x89fb	                            mov ebx, edi	       181	patch-id.c	FUNCTION_8
0x4000517	      0xbf00000000	                              mov edi, 0	       184	patch-id.c	FUNCTION_8	CALL_1
0x400051c	    0x4881ecd80000	                           sub rsp, 0xd8	       181	patch-id.c	FUNCTION_8
0x4000523	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       184	patch-id.c	FUNCTION_8	CALL_1
0x4000528	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	       182	patch-id.c	FUNCTION_8
0x4000530	    0x64488b042528	                mov rax, qword fs:[0x28]	       181	patch-id.c	FUNCTION_8
0x4000539	    0x48898424c800	             mov qword [rsp + 0xc8], rax	       181	patch-id.c	FUNCTION_8
0x4000541	            0x31c0	                            xor eax, eax	       181	patch-id.c	FUNCTION_8
0x4000543	      0xe800000000	                          call 0x4000548	       184	patch-id.c	FUNCTION_8	CALL_1
0x4000548	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       187	patch-id.c	FUNCTION_8	IF_1
0x400054c	            0x85c0	                           test eax, eax	       187	patch-id.c	FUNCTION_8	IF_1
0x400054e	     0xf888c010000	                            js 0x40006e0	       187	patch-id.c	FUNCTION_8	IF_1
0x4000554	          0x83fb02	                              cmp ebx, 2	       190	patch-id.c	FUNCTION_8	IF_2	CALL_2
0x4000557	     0xf8443010000	                            je 0x40006a0	       190	patch-id.c	FUNCTION_8	IF_2	CALL_2
0x400055d	          0x83fb01	                              cmp ebx, 1	       194	patch-id.c	FUNCTION_8	ELSE_2	IF_4
0x4000560	     0xf856d010000	                           jne 0x40006d3	       194	patch-id.c	FUNCTION_8	ELSE_2	IF_4
0x4000566	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	       194	patch-id.c	FUNCTION_8	ELSE_2	IF_4
0x400056a	    0x48c744241000	               mov qword [rsp + 0x10], 0	       155	patch-id.c	FUNCTION_6
0x4000573	    0x48c744241800	               mov qword [rsp + 0x18], 0	       155	patch-id.c	FUNCTION_6
0x400057c	    0x48c744242000	               mov qword [rsp + 0x20], 0	       155	patch-id.c	FUNCTION_6
0x4000585	    0x48c744243000	               mov qword [rsp + 0x30], 0	        90	string3.h	FUNCTION_12	CALL_6
0x400058e	    0x48c744243800	               mov qword [rsp + 0x38], 0	        90	string3.h	FUNCTION_12	CALL_6
0x4000597	    0xc74424400000	               mov dword [rsp + 0x40], 0	        90	string3.h	FUNCTION_12	CALL_6
0x400059f	            0xeb23	                           jmp 0x40005c4	        90	string3.h	FUNCTION_12	CALL_6
0x40005a1	     0xf1f80000000	                         nop dword [rax]	        90	string3.h	FUNCTION_12	CALL_6
0x40005a8	      0x488b442450	            mov rax, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_9	CALL_3
0x40005ad	      0x4889442430	             mov qword [rsp + 0x30], rax	        53	string3.h	FUNCTION_9	CALL_3
0x40005b2	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_9	CALL_3
0x40005b7	      0x4889442438	             mov qword [rsp + 0x38], rax	        53	string3.h	FUNCTION_9	CALL_3
0x40005bc	        0x8b442460	            mov eax, dword [rsp + 0x60] 	        53	string3.h	FUNCTION_9	CALL_3
0x40005c0	        0x89442440	             mov dword [rsp + 0x40], eax	        53	string3.h	FUNCTION_9	CALL_3
0x40005c4	    0x488b3d000000	            mov rdi, qword [0x040005cb] 	       158	patch-id.c	FUNCTION_6	WHILE_1	CALL_2
0x40005cb	      0xe800000000	                          call 0x40005d0	       158	patch-id.c	FUNCTION_6	WHILE_1	CALL_2
0x40005d0	            0x85c0	                           test eax, eax	       158	patch-id.c	FUNCTION_6	WHILE_1	CALL_2
0x40005d2	     0xf8598000000	                           jne 0x4000670	       158	patch-id.c	FUNCTION_6	WHILE_1	CALL_2
0x40005d8	      0x488d542410	                   lea rdx, [rsp + 0x10]	       159	patch-id.c	FUNCTION_6	WHILE_1	CALL_3
0x40005dd	      0x488d742470	                   lea rsi, [rsp + 0x70]	       159	patch-id.c	FUNCTION_6	WHILE_1	CALL_3
0x40005e2	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       159	patch-id.c	FUNCTION_6	WHILE_1	CALL_3
0x40005e7	            0x89d9	                            mov ecx, ebx	       159	patch-id.c	FUNCTION_6	WHILE_1	CALL_3
0x40005e9	      0xe802fbffff	                call sym.get_one_patchid	       159	patch-id.c	FUNCTION_6	WHILE_1	CALL_3
0x40005ee	            0x85c0	                           test eax, eax	         8	patch-id.c	FUNCTION_1	IF_1
0x40005f0	            0x74b6	                            je 0x40005a8	         8	patch-id.c	FUNCTION_1	IF_1
0x40005f2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        11	patch-id.c	FUNCTION_1	CALL_2
0x40005f7	      0xe800000000	                          call 0x40005fc	        11	patch-id.c	FUNCTION_1	CALL_2
0x40005fc	          0x488b10	                    mov rdx, qword [rax]	        53	string3.h	FUNCTION_9	CALL_3
0x40005ff	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        12	patch-id.c	FUNCTION_1	CALL_3
0x4000604	    0x488994249000	             mov qword [rsp + 0x90], rdx	        53	string3.h	FUNCTION_9	CALL_3
0x400060c	        0x488b5008	                mov rdx, qword [rax + 8]	        53	string3.h	FUNCTION_9	CALL_3
0x4000610	    0x488994249800	             mov qword [rsp + 0x98], rdx	        53	string3.h	FUNCTION_9	CALL_3
0x4000618	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        53	string3.h	FUNCTION_9	CALL_3
0x400061c	    0x48899424a000	             mov qword [rsp + 0xa0], rdx	        53	string3.h	FUNCTION_9	CALL_3
0x4000624	        0x488b5018	            mov rdx, qword [rax + 0x18] 	        53	string3.h	FUNCTION_9	CALL_3
0x4000628	    0x48899424a800	             mov qword [rsp + 0xa8], rdx	        53	string3.h	FUNCTION_9	CALL_3
0x4000630	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        53	string3.h	FUNCTION_9	CALL_3
0x4000634	    0x48899424b000	             mov qword [rsp + 0xb0], rdx	        53	string3.h	FUNCTION_9	CALL_3
0x400063c	         0xfb64028	           movzx eax, byte [rax + 0x28] 	        53	string3.h	FUNCTION_9	CALL_3
0x4000640	    0x888424b80000	               mov byte [rsp + 0xb8], al	        53	string3.h	FUNCTION_9	CALL_3
0x4000647	      0xe800000000	                          call 0x400064c	        12	patch-id.c	FUNCTION_1	CALL_3
0x400064c	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	       104	stdio2.h	CALL_106
0x4000654	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_106
0x4000657	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_106
0x400065c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_106
0x4000661	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_106
0x4000663	      0xe800000000	                          call 0x4000668	       104	stdio2.h	CALL_106
0x4000668	      0xe93bffffff	                           jmp 0x40005a8	       104	stdio2.h	CALL_106
0x400066d	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_106
0x4000670	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       163	patch-id.c	FUNCTION_6	CALL_6
0x4000675	      0xe800000000	                          call 0x400067a	       163	patch-id.c	FUNCTION_6	CALL_6
0x400067a	            0x31c0	                            xor eax, eax	       199	patch-id.c	FUNCTION_8
0x400067c	    0x488b9c24c800	            mov rbx, qword [rsp + 0xc8] 	       199	patch-id.c	FUNCTION_8
0x4000684	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       199	patch-id.c	FUNCTION_8
0x400068d	            0x757d	                           jne 0x400070c	       199	patch-id.c	FUNCTION_8
0x400068f	    0x4881c4d80000	                           add rsp, 0xd8	       199	patch-id.c	FUNCTION_8
0x4000696	              0x5b	                                 pop rbx	       199	patch-id.c	FUNCTION_8
0x4000697	              0x5d	                                 pop rbp	       199	patch-id.c	FUNCTION_8
0x4000698	              0xc3	                                     ret	       199	patch-id.c	FUNCTION_8
0x4000699	     0xf1f80000000	                         nop dword [rax]	       199	patch-id.c	FUNCTION_8
0x40006a0	        0x488b4508	                mov rax, qword [rbp + 8]	       190	patch-id.c	FUNCTION_8	IF_2	CALL_2
0x40006a4	      0xbf00000000	                              mov edi, 0	       190	patch-id.c	FUNCTION_8	IF_2	CALL_2
0x40006a9	      0xb909000000	                              mov ecx, 9	       190	patch-id.c	FUNCTION_8	IF_2	CALL_2
0x40006ae	          0x4889c6	                            mov rsi, rax	       190	patch-id.c	FUNCTION_8	IF_2	CALL_2
0x40006b1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       190	patch-id.c	FUNCTION_8	IF_2	CALL_2
0x40006b3	            0x7438	                            je 0x40006ed	       190	patch-id.c	FUNCTION_8	IF_2	CALL_2
0x40006b5	          0x4889c6	                            mov rsi, rax	       192	patch-id.c	FUNCTION_8	ELSE_1	IF_3	CALL_3
0x40006b8	      0xbf00000000	                              mov edi, 0	       192	patch-id.c	FUNCTION_8	ELSE_1	IF_3	CALL_3
0x40006bd	      0xb90b000000	                            mov ecx, 0xb	       192	patch-id.c	FUNCTION_8	ELSE_1	IF_3	CALL_3
0x40006c2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       192	patch-id.c	FUNCTION_8	ELSE_1	IF_3	CALL_3
0x40006c4	           0xf97c3	                                 seta bl	       192	patch-id.c	FUNCTION_8	ELSE_1	IF_3	CALL_3
0x40006c7	           0xf92c0	                                 setb al	       192	patch-id.c	FUNCTION_8	ELSE_1	IF_3	CALL_3
0x40006ca	            0x29c3	                            sub ebx, eax	       192	patch-id.c	FUNCTION_8	ELSE_1	IF_3	CALL_3
0x40006cc	           0xfbedb	                           movsx ebx, bl	       192	patch-id.c	FUNCTION_8	ELSE_1	IF_3	CALL_3
0x40006cf	            0x85db	                           test ebx, ebx	       192	patch-id.c	FUNCTION_8	ELSE_1	IF_3	CALL_3
0x40006d1	            0x742c	                            je 0x40006ff	       192	patch-id.c	FUNCTION_8	ELSE_1	IF_3	CALL_3
0x40006d3	      0xbf00000000	                              mov edi, 0	       195	patch-id.c	FUNCTION_8	ELSE_2	IF_4
0x40006d8	      0xe800000000	                          call 0x40006dd	       195	patch-id.c	FUNCTION_8	ELSE_2	IF_4
0x40006dd	           0xf1f00	                         nop dword [rax]	       195	patch-id.c	FUNCTION_8	ELSE_2	IF_4
0x40006e0	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       188	patch-id.c	FUNCTION_8	IF_1
0x40006e8	      0xe967feffff	                           jmp 0x4000554	       188	patch-id.c	FUNCTION_8	IF_1
0x40006ed	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       191	patch-id.c	FUNCTION_8	IF_2
0x40006f5	      0xbb01000000	                              mov ebx, 1	       191	patch-id.c	FUNCTION_8	IF_2
0x40006fa	      0xe96bfeffff	                           jmp 0x400056a	       191	patch-id.c	FUNCTION_8	IF_2
0x40006ff	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       193	patch-id.c	FUNCTION_8	ELSE_1	IF_3
0x4000707	      0xe95efeffff	                           jmp 0x400056a	       193	patch-id.c	FUNCTION_8	ELSE_1	IF_3
0x400070c	      0xe800000000	                 call str.patchid.stable	       199	patch-id.c	FUNCTION_8
