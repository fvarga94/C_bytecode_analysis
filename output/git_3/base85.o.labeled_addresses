encode_85	IF,1:functions,0:SWITCH,0:FOR,2:WHILE,1:CALL,0:DO,0:ELSE,0	37
0x4000170	            0x85d2	                           test edx, edx	        82	base85.c	FUNCTION_3	WHILE_1
0x4000172	          0x4189d1	                            mov r9d, edx	        80	base85.c	FUNCTION_3
0x4000175	            0x746a	                            je 0x40001e1	        82	base85.c	FUNCTION_3	WHILE_1
0x4000177	    0x41bac1c0c0c0	                    mov r10d, 0xc0c0c0c1	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x400017d	           0xf1f00	                         nop dword [rax]	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000180	      0xb918000000	                           mov ecx, 0x18	        80	base85.c	FUNCTION_3
0x4000185	          0x4531c0	                            xor r8d, r8d	        80	base85.c	FUNCTION_3
0x4000188	        0x4883c601	                              add rsi, 1	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400018c	         0xfb646ff	               movzx eax, byte [rsi - 1]	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000190	            0xd3e0	                             shl eax, cl	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000192	          0x4109c0	                             or r8d, eax	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000195	        0x4183e901	                              sub r9d, 1	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x4000199	            0x7408	                            je 0x40001a3	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x400019b	          0x83e908	                              sub ecx, 8	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400019e	          0x83f9f8	             cmp ecx, 0xfffffffffffffff8	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001a1	            0x75e5	                           jne 0x4000188	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001a3	        0x488d4f04	                      lea rcx, [rdi + 4]	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001a7	        0x4c8d5fff	                      lea r11, [rdi - 1]	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001ab	          0x4489c0	                            mov eax, r8d	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001ae	        0x4883e901	                              sub rcx, 1	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001b2	          0x41f7e2	                                mul r10d	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001b5	            0x89d0	                            mov eax, edx	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001b7	          0xc1ea06	                              shr edx, 6	        94	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001ba	          0xc1e806	                              shr eax, 6	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001bd	          0x6bc055	                     imul eax, eax, 0x55	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001c0	          0x4129c0	                            sub r8d, eax	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001c3	          0x4963c0	                         movsxd rax, r8d	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001c6	          0x4189d0	                            mov r8d, edx	        94	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001c9	     0xfb680000000	                   movzx eax, byte [rax]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001d0	          0x884101	                  mov byte [rcx + 1], al	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001d3	          0x4939cb	                            cmp r11, rcx	        92	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001d6	            0x75d3	                           jne 0x40001ab	        92	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001d8	        0x4883c705	                              add rdi, 5	        97	base85.c	FUNCTION_3	WHILE_1
0x40001dc	          0x4585c9	                           test r9d, r9d	        82	base85.c	FUNCTION_3	WHILE_1
0x40001df	            0x759f	                           jne 0x4000180	        82	base85.c	FUNCTION_3	WHILE_1
0x40001e1	          0xc60700	                       mov byte [rdi], 0	       101	base85.c	FUNCTION_3
0x40001e4	              0xc3	                                     ret	       101	base85.c	FUNCTION_3
decode_85	IF,3:functions,0:SWITCH,0:FOR,0:WHILE,1:CALL,4:DO,2:ELSE,0	81
0x4000040	        0x4883ec08	                              sub rsp, 8	        41	base85.c	FUNCTION_2
0x4000044	    0x803d00000000	                cmp byte [0x0400004b], 0	        32	base85.c	FUNCTION_1	IF_1
0x400004b	            0x7529	                           jne 0x4000076	        32	base85.c	FUNCTION_1	IF_1
0x400004d	    0x41b800000000	                              mov r8d, 0	        32	base85.c	FUNCTION_1	IF_1
0x4000053	      0xb801000000	                              mov eax, 1	        32	base85.c	FUNCTION_1	IF_1
0x4000058	      0xb930000000	                           mov ecx, 0x30	        32	base85.c	FUNCTION_1	IF_1
0x400005d	            0xeb09	                           jmp 0x4000068	        32	base85.c	FUNCTION_1	IF_1
0x400005f	              0x90	                                     nop	        32	base85.c	FUNCTION_1	IF_1
0x4000060	        0x490fbe08	                    movsx rcx, byte [r8]	        32	base85.c	FUNCTION_1	IF_1
0x4000064	        0x4983c001	                               add r8, 1	        32	base85.c	FUNCTION_1	IF_1
0x4000068	    0x888100000000	                      mov byte [rcx], al	        36	base85.c	FUNCTION_1	FOR_1
0x400006e	          0x83c001	                              add eax, 1	        36	base85.c	FUNCTION_1	FOR_1
0x4000071	          0x83f856	                           cmp eax, 0x56	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x4000074	            0x75ea	                           jne 0x4000060	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x4000076	            0x85d2	                           test edx, edx	        45	base85.c	FUNCTION_2	WHILE_1
0x4000078	     0xf84ae000000	                            je 0x400012c	        45	base85.c	FUNCTION_2	WHILE_1
0x400007e	    0x41ba04000000	                             mov r10d, 4	        67	base85.c	FUNCTION_2	WHILE_1
0x4000084	        0x4c8d5e04	                      lea r11, [rsi + 4]	        67	base85.c	FUNCTION_2	WHILE_1
0x4000088	          0x4989f1	                             mov r9, rsi	        32	base85.c	FUNCTION_1	IF_1
0x400008b	            0x31c9	                            xor ecx, ecx	        32	base85.c	FUNCTION_1	IF_1
0x400008d	        0x4d8d4101	                        lea r8, [r9 + 1]	        50	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000091	      0x410fb640ff	                movzx eax, byte [r8 - 1]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000096	          0x4889c6	                            mov rsi, rax	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000099	     0xfbe80000000	                   movsx eax, byte [rax]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000a0	          0x83e801	                              sub eax, 1	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40000a3	     0xf888f000000	                            js 0x4000138	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40000a9	          0x6bc955	                     imul ecx, ecx, 0x55	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000ac	             0x1c1	                            add ecx, eax	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000ae	          0x4d39c3	                             cmp r11, r8	        55	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000b1	            0x740d	                            je 0x40000c0	        55	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000b3	          0x4d89c1	                              mov r9, r8	        55	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000b6	            0xebd5	                           jmp 0x400008d	        55	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000b8	     0xf1f84000000	                   nop dword [rax + rax]	        55	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000c0	      0x410fb64101	                movzx eax, byte [r9 + 1]	        57	base85.c	FUNCTION_2	WHILE_1
0x40000c5	        0x498d7102	                       lea rsi, [r9 + 2]	        56	base85.c	FUNCTION_2	WHILE_1
0x40000c9	          0x4989c0	                             mov r8, rax	        57	base85.c	FUNCTION_2	WHILE_1
0x40000cc	     0xfbe80000000	                   movsx eax, byte [rax]	        57	base85.c	FUNCTION_2	WHILE_1
0x40000d3	          0x83e801	                              sub eax, 1	        58	base85.c	FUNCTION_2	WHILE_1	IF_2
0x40000d6	            0x7858	                            js 0x4000130	        58	base85.c	FUNCTION_2	WHILE_1	IF_2
0x40000d8	    0x81f903030303	                      cmp ecx, 0x3030303	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x40000de	            0x776e	                            ja 0x400014e	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x40000e0	          0x6bc955	                     imul ecx, ecx, 0x55	        62	base85.c	FUNCTION_2	WHILE_1	IF_3
0x40000e3	          0x4189c0	                            mov r8d, eax	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x40000e6	          0x41f7d0	                                 not r8d	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x40000e9	          0x4139c8	                            cmp r8d, ecx	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x40000ec	            0x7260	                            jb 0x400014e	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x40000ee	             0x1c8	                            add eax, ecx	        64	base85.c	FUNCTION_2	WHILE_1
0x40000f0	          0x4589d1	                           mov r9d, r10d	        67	base85.c	FUNCTION_2	WHILE_1
0x40000f3	          0x83fa04	                              cmp edx, 4	        67	base85.c	FUNCTION_2	WHILE_1
0x40000f6	        0x440f4eca	                         cmovle r9d, edx	        67	base85.c	FUNCTION_2	WHILE_1
0x40000fa	        0x418d49ff	                       lea ecx, [r9 - 1]	        67	base85.c	FUNCTION_2	WHILE_1
0x40000fe	          0x4429ca	                            sub edx, r9d	        68	base85.c	FUNCTION_2	WHILE_1
0x4000101	      0x4c8d440f01	                 lea r8, [rdi + rcx + 1]	        68	base85.c	FUNCTION_2	WHILE_1
0x4000106	          0x4989c9	                             mov r9, rcx	        68	base85.c	FUNCTION_2	WHILE_1
0x4000109	          0x4889f9	                            mov rcx, rdi	        68	base85.c	FUNCTION_2	WHILE_1
0x400010c	         0xf1f4000	                         nop dword [rax]	        68	base85.c	FUNCTION_2	WHILE_1
0x4000110	        0x4883c101	                              add rcx, 1	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000114	          0xc1c008	                              rol eax, 8	        70	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000117	          0x4c39c1	                             cmp rcx, r8	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x400011a	          0x8841ff	                  mov byte [rcx - 1], al	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x400011d	            0x75f1	                           jne 0x4000110	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x400011f	            0x85d2	                           test edx, edx	        45	base85.c	FUNCTION_2	WHILE_1
0x4000121	      0x4a8d7c0f01	                 lea rdi, [rdi + r9 + 1]	        45	base85.c	FUNCTION_2	WHILE_1
0x4000126	     0xf8558ffffff	                           jne 0x4000084	        45	base85.c	FUNCTION_2	WHILE_1
0x400012c	            0x31c0	                            xor eax, eax	        76	base85.c	FUNCTION_2
0x400012e	            0xeb19	                           jmp 0x4000149	        76	base85.c	FUNCTION_2
0x4000130	          0x4489c6	                            mov esi, r8d	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x4000133	       0xf1f440000	                   nop dword [rax + rax]	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x4000138	      0xbf00000000	                              mov edi, 0	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x400013d	            0x31c0	                            xor eax, eax	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x400013f	      0xe800000000	                          call 0x4000144	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x4000144	      0xb8ffffffff	                     mov eax, 0xffffffff	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x4000149	        0x4883c408	                              add rsp, 8	        77	base85.c	FUNCTION_2
0x400014d	              0xc3	                                     ret	        77	base85.c	FUNCTION_2
0x400014e	        0x498d71fd	                       lea rsi, [r9 - 3]	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x4000152	      0xbf00000000	                              mov edi, 0	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x4000157	            0x31c0	                            xor eax, eax	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x4000159	      0xe800000000	                          call 0x400015e	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x400015e	      0xb8ffffffff	                     mov eax, 0xffffffff	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x4000163	        0x4883c408	                              add rsp, 8	        77	base85.c	FUNCTION_2
0x4000167	              0xc3	                                     ret	        77	base85.c	FUNCTION_2
