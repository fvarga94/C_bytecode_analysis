unmerge_index	WHILE,0:CALL,2:functions,0:FOR,1:ELSE,0:IF,2:SWITCH,0:DO,0	45
0x4000670	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       184	resolve-undo.c	FUNCTION_7	IF_1
0x4000675	     0xf847c000000	                            je 0x40006f7	       184	resolve-undo.c	FUNCTION_7	IF_1
0x400067b	          0x8b470c	              mov eax, dword [rdi + 0xc]	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x400067e	            0x85c0	                           test eax, eax	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x4000680	            0x7475	                            je 0x40006f7	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x4000682	            0x4154	                                push r12	       181	resolve-undo.c	FUNCTION_7
0x4000684	          0x4989fc	                            mov r12, rdi	       181	resolve-undo.c	FUNCTION_7
0x4000687	              0x55	                                push rbp	       181	resolve-undo.c	FUNCTION_7
0x4000688	          0x4889f5	                            mov rbp, rsi	       181	resolve-undo.c	FUNCTION_7
0x400068b	              0x53	                                push rbx	       181	resolve-undo.c	FUNCTION_7
0x400068c	            0x31db	                            xor ebx, ebx	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x400068e	            0xeb0a	                           jmp 0x400069a	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x4000690	          0x83c301	                              add ebx, 1	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x4000693	      0x41395c240c	              cmp dword [r12 + 0xc], ebx	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x4000698	            0x7659	                           jbe 0x40006f3	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x400069a	        0x498b1424	                    mov rdx, qword [r12]	       188	resolve-undo.c	FUNCTION_7	FOR_1
0x400069e	          0x4863c3	                         movsxd rax, ebx	       188	resolve-undo.c	FUNCTION_7	FOR_1
0x40006a1	          0x4889ef	                            mov rdi, rbp	       336	dir.h	FUNCTION_9	CALL_2
0x40006a4	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       188	resolve-undo.c	FUNCTION_7	FOR_1
0x40006a8	          0x8b4634	            mov eax, dword [rsi + 0x34] 	       337	dir.h	FUNCTION_9	CALL_4
0x40006ab	          0x8b563c	            mov edx, dword [rsi + 0x3c] 	       336	dir.h	FUNCTION_9	CALL_2
0x40006ae	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_9	CALL_4
0x40006b3	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_9	CALL_2
0x40006b8	        0x410f94c1	                                sete r9b	       336	dir.h	FUNCTION_9	CALL_2
0x40006bc	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_9	CALL_2
0x40006c1	           0xf94c0	                                 sete al	       336	dir.h	FUNCTION_9	CALL_2
0x40006c4	        0x4883c658	                           add rsi, 0x58	       336	dir.h	FUNCTION_9	CALL_2
0x40006c8	          0x4531c0	                            xor r8d, r8d	       336	dir.h	FUNCTION_9	CALL_2
0x40006cb	          0x4109c1	                             or r9d, eax	       336	dir.h	FUNCTION_9	CALL_2
0x40006ce	            0x31c9	                            xor ecx, ecx	       336	dir.h	FUNCTION_9	CALL_2
0x40006d0	        0x4183e101	                              and r9d, 1	       336	dir.h	FUNCTION_9	CALL_2
0x40006d4	      0xe800000000	                          call 0x40006d9	       336	dir.h	FUNCTION_9	CALL_2
0x40006d9	            0x85c0	                           test eax, eax	       189	resolve-undo.c	FUNCTION_7	FOR_1	IF_2	CALL_1
0x40006db	            0x74b3	                            je 0x4000690	       189	resolve-undo.c	FUNCTION_7	FOR_1	IF_2	CALL_1
0x40006dd	            0x89de	                            mov esi, ebx	       191	resolve-undo.c	FUNCTION_7	FOR_1	CALL_2
0x40006df	          0x4c89e7	                            mov rdi, r12	       191	resolve-undo.c	FUNCTION_7	FOR_1	CALL_2
0x40006e2	      0xe800000000	                          call 0x40006e7	       191	resolve-undo.c	FUNCTION_7	FOR_1	CALL_2
0x40006e7	            0x89c3	                            mov ebx, eax	       191	resolve-undo.c	FUNCTION_7	FOR_1	CALL_2
0x40006e9	          0x83c301	                              add ebx, 1	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x40006ec	      0x41395c240c	              cmp dword [r12 + 0xc], ebx	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x40006f1	            0x77a7	                            ja 0x400069a	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x40006f3	              0x5b	                                 pop rbx	       193	resolve-undo.c	FUNCTION_7
0x40006f4	              0x5d	                                 pop rbp	       193	resolve-undo.c	FUNCTION_7
0x40006f5	            0x415c	                                 pop r12	       193	resolve-undo.c	FUNCTION_7
0x40006f7	            0xf3c3	                                     ret	       193	resolve-undo.c	FUNCTION_7
unmerge_index_entry_at	WHILE,1:CALL,11:functions,0:FOR,1:ELSE,0:IF,8:SWITCH,0:DO,0	135
0x4000420	            0x4157	                                push r15	       118	resolve-undo.c	FUNCTION_5
0x4000422	            0x4156	                                push r14	       118	resolve-undo.c	FUNCTION_5
0x4000424	            0x4155	                                push r13	       118	resolve-undo.c	FUNCTION_5
0x4000426	            0x4154	                                push r12	       118	resolve-undo.c	FUNCTION_5
0x4000428	              0x55	                                push rbp	       118	resolve-undo.c	FUNCTION_5
0x4000429	              0x53	                                push rbx	       118	resolve-undo.c	FUNCTION_5
0x400042a	          0x4889fd	                            mov rbp, rdi	       118	resolve-undo.c	FUNCTION_5
0x400042d	        0x4883ec28	                           sub rsp, 0x28	       118	resolve-undo.c	FUNCTION_5
0x4000431	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       125	resolve-undo.c	FUNCTION_5	IF_1
0x4000435	        0x89742414	             mov dword [rsp + 0x14], esi	       118	resolve-undo.c	FUNCTION_5
0x4000439	          0x4885ff	                           test rdi, rdi	       125	resolve-undo.c	FUNCTION_5	IF_1
0x400043c	     0xf84c3010000	                            je 0x4000605	       125	resolve-undo.c	FUNCTION_5	IF_1
0x4000442	      0x4863542414	         movsxd rdx, dword [rsp + 0x14] 	       128	resolve-undo.c	FUNCTION_5
0x4000447	        0x488b4500	                    mov rax, qword [rbp]	       128	resolve-undo.c	FUNCTION_5
0x400044b	        0x4c8b2cd0	            mov r13, qword [rax + rdx*8]	       128	resolve-undo.c	FUNCTION_5
0x400044f	    0x488d0cd50000	                        lea rcx, [rdx*8]	       128	resolve-undo.c	FUNCTION_5
0x4000457	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       128	resolve-undo.c	FUNCTION_5
0x400045c	    0x41f745380030	        test dword [r13 + 0x38], 0x3000 	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x4000464	     0xf8534010000	                           jne 0x400059e	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x400046a	    0x660f1f440000	                    nop word [rax + rax]	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x4000470	        0x4d8d7558	                   lea r14, [r13 + 0x58]	       136	resolve-undo.c	FUNCTION_5	CALL_3
0x4000474	          0x4c89f6	                            mov rsi, r14	       136	resolve-undo.c	FUNCTION_5	CALL_3
0x4000477	      0xe800000000	                          call 0x400047c	       136	resolve-undo.c	FUNCTION_5	CALL_3
0x400047c	          0x4885c0	                           test rax, rax	       137	resolve-undo.c	FUNCTION_5	IF_3
0x400047f	          0x4989c4	                            mov r12, rax	       136	resolve-undo.c	FUNCTION_5	CALL_3
0x4000482	     0xf847d010000	                            je 0x4000605	       137	resolve-undo.c	FUNCTION_5	IF_3
0x4000488	        0x488b5808	                mov rbx, qword [rax + 8]	       139	resolve-undo.c	FUNCTION_5
0x400048c	          0x4885db	                           test rbx, rbx	       140	resolve-undo.c	FUNCTION_5	IF_4
0x400048f	     0xf8470010000	                            je 0x4000605	       140	resolve-undo.c	FUNCTION_5	IF_4
0x4000495	        0x458b6d38	           mov r13d, dword [r13 + 0x38] 	       142	resolve-undo.c	FUNCTION_5
0x4000499	          0x4c89f7	                            mov rdi, r14	       143	resolve-undo.c	FUNCTION_5	CALL_4
0x400049c	          0x4989de	                            mov r14, rbx	       143	resolve-undo.c	FUNCTION_5	CALL_4
0x400049f	        0x4c8d7b0c	                    lea r15, [rbx + 0xc]	       143	resolve-undo.c	FUNCTION_5	CALL_4
0x40004a3	    0x4181e5000000	        and r13d, loc.imp.match_pathspec	       142	resolve-undo.c	FUNCTION_5
0x40004aa	      0x44896c2410	            mov dword [rsp + 0x10], r13d	       142	resolve-undo.c	FUNCTION_5
0x40004af	    0x41bd01000000	                             mov r13d, 1	       144	resolve-undo.c	FUNCTION_5	CALL_5
0x40004b5	      0xe800000000	                          call 0x40004ba	       143	resolve-undo.c	FUNCTION_5	CALL_4
0x40004ba	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       144	resolve-undo.c	FUNCTION_5	CALL_5
0x40004be	          0x4889ef	                            mov rdi, rbp	       144	resolve-undo.c	FUNCTION_5	CALL_5
0x40004c1	        0x48890424	                    mov qword [rsp], rax	       143	resolve-undo.c	FUNCTION_5	CALL_4
0x40004c5	      0xe800000000	                          call 0x40004ca	       144	resolve-undo.c	FUNCTION_5	CALL_5
0x40004ca	          0x418b3e	                    mov edi, dword [r14]	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004cd	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       122	resolve-undo.c	FUNCTION_5
0x40004d5	            0x85ff	                           test edi, edi	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004d7	            0x7519	                           jne 0x40004f2	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004d9	        0x4183fd03	                             cmp r13d, 3	       145	resolve-undo.c	FUNCTION_5	FOR_1
0x40004dd	            0x7471	                            je 0x4000550	       145	resolve-undo.c	FUNCTION_5	FOR_1
0x40004df	        0x4983c604	                              add r14, 4	       145	resolve-undo.c	FUNCTION_5	FOR_1
0x40004e3	          0x418b3e	                    mov edi, dword [r14]	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004e6	        0x4183c501	                             add r13d, 1	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004ea	        0x4983c714	                           add r15, 0x14	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004ee	            0x85ff	                           test edi, edi	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004f0	            0x74e7	                            je 0x40004d9	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004f2	        0x488b1424	                    mov rdx, qword [rsp]	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40004f6	          0x4531c0	                            xor r8d, r8d	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40004f9	          0x4489e9	                           mov ecx, r13d	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40004fc	          0x4c89fe	                            mov rsi, r15	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40004ff	      0xe800000000	                          call 0x4000504	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x4000504	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       151	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x4000508	            0x85d2	                           test edx, edx	       151	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x400050a	            0x7407	                            je 0x4000513	       151	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x400050c	    0x814838000000	or dword [rax + 0x38], loc.imp.match_pathspec	       152	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x4000513	      0xba01000000	                              mov edx, 1	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000518	          0x4889c6	                            mov rsi, rax	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x400051b	          0x4889ef	                            mov rdi, rbp	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x400051e	      0xe800000000	                          call 0x4000523	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000523	            0x85c0	                           test eax, eax	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000525	            0x74b2	                            je 0x40004d9	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000527	        0x488b3424	                    mov rsi, qword [rsp]	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x400052b	            0x31c0	                            xor eax, eax	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x400052d	      0xbf00000000	                              mov edi, 0	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x4000532	      0xe800000000	                          call 0x4000537	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x4000537	        0x4183fd03	                             cmp r13d, 3	       145	resolve-undo.c	FUNCTION_5	FOR_1
0x400053b	     0xf84bb000000	                            je 0x40005fc	       145	resolve-undo.c	FUNCTION_5	FOR_1
0x4000541	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       154	resolve-undo.c	FUNCTION_5	FOR_1	IF_7
0x4000549	            0xeb94	                           jmp 0x40004df	       154	resolve-undo.c	FUNCTION_5	FOR_1	IF_7
0x400054b	       0xf1f440000	                   nop dword [rax + rax]	       154	resolve-undo.c	FUNCTION_5	FOR_1	IF_7
0x4000550	        0x488b3c24	                    mov rdi, qword [rsp]	       158	resolve-undo.c	FUNCTION_5	CALL_9
0x4000554	      0xe800000000	                          call 0x4000559	       158	resolve-undo.c	FUNCTION_5	CALL_9
0x4000559	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       159	resolve-undo.c	FUNCTION_5	IF_8
0x400055d	            0x85c0	                           test eax, eax	       159	resolve-undo.c	FUNCTION_5	IF_8
0x400055f	     0xf85a0000000	                           jne 0x4000605	       159	resolve-undo.c	FUNCTION_5	IF_8
0x4000565	          0x4889df	                            mov rdi, rbx	       161	resolve-undo.c	FUNCTION_5	CALL_10
0x4000568	      0xe800000000	                          call 0x400056d	       161	resolve-undo.c	FUNCTION_5	CALL_10
0x400056d	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       125	resolve-undo.c	FUNCTION_5	IF_1
0x4000571	    0x49c744240800	                  mov qword [r12 + 8], 0	       162	resolve-undo.c	FUNCTION_5
0x400057a	          0x4885ff	                           test rdi, rdi	       125	resolve-undo.c	FUNCTION_5	IF_1
0x400057d	     0xf8482000000	                            je 0x4000605	       125	resolve-undo.c	FUNCTION_5	IF_1
0x4000583	        0x488b4500	                    mov rax, qword [rbp]	       128	resolve-undo.c	FUNCTION_5
0x4000587	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       128	resolve-undo.c	FUNCTION_5
0x400058c	        0x4c8b2c08	              mov r13, qword [rax + rcx]	       128	resolve-undo.c	FUNCTION_5
0x4000590	    0x41f745380030	        test dword [r13 + 0x38], 0x3000 	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x4000598	     0xf84d2feffff	                            je 0x4000470	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x400059e	          0x8b5d0c	              mov ebx, dword [rbp + 0xc]	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005a1	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005a5	            0x39cb	                            cmp ebx, ecx	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005a7	            0x763d	                           jbe 0x40005e6	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005a9	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005ae	        0x4983c558	                           add r13, 0x58	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005b2	          0x4189cc	                           mov r12d, ecx	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005b5	          0x4801c5	                            add rbp, rax	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005b8	            0xeb13	                           jmp 0x40005cd	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005ba	    0x660f1f440000	                    nop word [rax + rax]	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005c0	        0x4183c401	                             add r12d, 1	       133	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005c4	        0x4883c508	                              add rbp, 8	       133	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005c8	          0x4439e3	                           cmp ebx, r12d	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005cb	            0x7614	                           jbe 0x40005e1	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005cd	        0x488b4500	                    mov rax, qword [rbp]	       132	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1	CALL_2
0x40005d1	          0x4c89ee	                            mov rsi, r13	       132	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1	CALL_2
0x40005d4	        0x488d7858	                   lea rdi, [rax + 0x58]	       132	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1	CALL_2
0x40005d8	      0xe800000000	                          call 0x40005dd	       132	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1	CALL_2
0x40005dd	            0x85c0	                           test eax, eax	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005df	            0x74df	                            je 0x40005c0	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005e1	      0x4489642414	            mov dword [rsp + 0x14], r12d	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40005e6	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       134	resolve-undo.c	FUNCTION_5	IF_2
0x40005ea	        0x4883c428	                           add rsp, 0x28	       164	resolve-undo.c	FUNCTION_5
0x40005ee	              0x5b	                                 pop rbx	       164	resolve-undo.c	FUNCTION_5
0x40005ef	              0x5d	                                 pop rbp	       164	resolve-undo.c	FUNCTION_5
0x40005f0	          0x83e801	                              sub eax, 1	       134	resolve-undo.c	FUNCTION_5	IF_2
0x40005f3	            0x415c	                                 pop r12	       164	resolve-undo.c	FUNCTION_5
0x40005f5	            0x415d	                                 pop r13	       164	resolve-undo.c	FUNCTION_5
0x40005f7	            0x415e	                                 pop r14	       164	resolve-undo.c	FUNCTION_5
0x40005f9	            0x415f	                                 pop r15	       164	resolve-undo.c	FUNCTION_5
0x40005fb	              0xc3	                                     ret	       164	resolve-undo.c	FUNCTION_5
0x40005fc	        0x488b3c24	                    mov rdi, qword [rsp]	       158	resolve-undo.c	FUNCTION_5	CALL_9
0x4000600	      0xe800000000	                          call 0x4000605	       158	resolve-undo.c	FUNCTION_5	CALL_9
0x4000605	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       160	resolve-undo.c	FUNCTION_5	IF_8
0x4000609	        0x4883c428	                           add rsp, 0x28	       164	resolve-undo.c	FUNCTION_5
0x400060d	              0x5b	                                 pop rbx	       164	resolve-undo.c	FUNCTION_5
0x400060e	              0x5d	                                 pop rbp	       164	resolve-undo.c	FUNCTION_5
0x400060f	            0x415c	                                 pop r12	       164	resolve-undo.c	FUNCTION_5
0x4000611	            0x415d	                                 pop r13	       164	resolve-undo.c	FUNCTION_5
0x4000613	            0x415e	                                 pop r14	       164	resolve-undo.c	FUNCTION_5
0x4000615	            0x415f	                                 pop r15	       164	resolve-undo.c	FUNCTION_5
0x4000617	              0xc3	                                     ret	       164	resolve-undo.c	FUNCTION_5
resolve_undo_read	WHILE,1:CALL,8:functions,0:FOR,2:ELSE,0:IF,6:SWITCH,0:DO,0	115
0x4000240	            0x4157	                                push r15	        53	resolve-undo.c	FUNCTION_3
0x4000242	            0x4156	                                push r14	        53	resolve-undo.c	FUNCTION_3
0x4000244	            0x4155	                                push r13	        53	resolve-undo.c	FUNCTION_3
0x4000246	            0x4154	                                push r12	        53	resolve-undo.c	FUNCTION_3
0x4000248	          0x4989f4	                            mov r12, rsi	        53	resolve-undo.c	FUNCTION_3
0x400024b	              0x55	                                push rbp	        53	resolve-undo.c	FUNCTION_3
0x400024c	              0x53	                                push rbx	        53	resolve-undo.c	FUNCTION_3
0x400024d	      0xbe20000000	                           mov esi, 0x20	        60	resolve-undo.c	FUNCTION_3	CALL_1
0x4000252	          0x4889fb	                            mov rbx, rdi	        53	resolve-undo.c	FUNCTION_3
0x4000255	      0xbf01000000	                              mov edi, 1	        60	resolve-undo.c	FUNCTION_3	CALL_1
0x400025a	        0x4883ec38	                           sub rsp, 0x38	        53	resolve-undo.c	FUNCTION_3
0x400025e	    0x64488b042528	                mov rax, qword fs:[0x28]	        53	resolve-undo.c	FUNCTION_3
0x4000267	      0x4889442428	             mov qword [rsp + 0x28], rax	        53	resolve-undo.c	FUNCTION_3
0x400026c	            0x31c0	                            xor eax, eax	        53	resolve-undo.c	FUNCTION_3
0x400026e	    0x488b05000000	            mov rax, qword [0x04000275] 	        58	resolve-undo.c	FUNCTION_3
0x4000275	        0x488b4058	            mov rax, qword [rax + 0x58] 	        58	resolve-undo.c	FUNCTION_3
0x4000279	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	        58	resolve-undo.c	FUNCTION_3
0x400027d	      0xe800000000	                          call 0x4000282	        60	resolve-undo.c	FUNCTION_3	CALL_1
0x4000282	        0x80481001	                 or byte [rax + 0x10], 1	        61	resolve-undo.c	FUNCTION_3
0x4000286	          0x4d85e4	                           test r12, r12	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x4000289	      0x4889442410	             mov qword [rsp + 0x10], rax	        60	resolve-undo.c	FUNCTION_3	CALL_1
0x400028e	     0xf84e3000000	                            je 0x4000377	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x4000294	          0x4489e8	                           mov eax, r13d	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x4000297	      0x4889442418	             mov qword [rsp + 0x18], rax	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x400029c	          0x4889df	                            mov rdi, rbx	        67	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_2
0x400029f	      0xe800000000	                          call 0x40002a4	        67	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_2
0x40002a4	        0x488d6801	                      lea rbp, [rax + 1]	        67	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_2
0x40002a8	          0x4939ec	                            cmp r12, rbp	        68	resolve-undo.c	FUNCTION_3	WHILE_1	IF_1
0x40002ab	     0xf86cf000000	                           jbe 0x4000380	        68	resolve-undo.c	FUNCTION_3	WHILE_1	IF_1
0x40002b1	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        70	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_3
0x40002b6	          0x4889de	                            mov rsi, rbx	        70	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_3
0x40002b9	      0xe800000000	                          call 0x40002be	        70	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_3
0x40002be	        0x4c8b7008	                mov r14, qword [rax + 8]	        71	resolve-undo.c	FUNCTION_3	WHILE_1	IF_2
0x40002c2	          0x4989c7	                            mov r15, rax	        70	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_3
0x40002c5	          0x4d85f6	                           test r14, r14	        71	resolve-undo.c	FUNCTION_3	WHILE_1	IF_2
0x40002c8	     0xf84f2000000	                            je 0x40003c0	        71	resolve-undo.c	FUNCTION_3	WHILE_1	IF_2
0x40002ce	        0x4d8d6e0c	                    lea r13, [r14 + 0xc]	        71	resolve-undo.c	FUNCTION_3	WHILE_1	IF_2
0x40002d2	          0x4929ec	                            sub r12, rbp	        74	resolve-undo.c	FUNCTION_3	WHILE_1
0x40002d5	          0x4d89f7	                            mov r15, r14	        74	resolve-undo.c	FUNCTION_3	WHILE_1
0x40002d8	          0x4801dd	                            add rbp, rbx	        75	resolve-undo.c	FUNCTION_3	WHILE_1
0x40002db	          0x4d89f0	                             mov r8, r14	        75	resolve-undo.c	FUNCTION_3	WHILE_1
0x40002de	      0x488d742420	                   lea rsi, [rsp + 0x20]	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x40002e3	      0xba08000000	                              mov edx, 8	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x40002e8	          0x4889ef	                            mov rdi, rbp	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x40002eb	      0x4c89442408	                 mov qword [rsp + 8], r8	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x40002f0	      0xe800000000	                          call 0x40002f5	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x40002f5	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x40002fa	      0x4c8b442408	                 mov r8, qword [rsp + 8]	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x40002ff	          0x4885db	                           test rbx, rbx	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x4000302	          0x418900	                     mov dword [r8], eax	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x4000305	            0x7479	                            je 0x4000380	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x4000307	          0x4839eb	                            cmp rbx, rbp	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x400030a	            0x7474	                            je 0x4000380	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x400030c	          0x803b00	                       cmp byte [rbx], 0	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x400030f	            0x756f	                           jne 0x4000380	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x4000311	        0x4883c301	                              add rbx, 1	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000315	          0x4889d8	                            mov rax, rbx	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000318	          0x4829e8	                            sub rax, rbp	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x400031b	          0x4c39e0	                            cmp rax, r12	        82	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_4
0x400031e	            0x7360	                           jae 0x4000380	        82	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_4
0x4000320	        0x4983c004	                               add r8, 4	        82	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_4
0x4000324	          0x4929c4	                            sub r12, rax	        84	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000327	          0x4d39c5	                             cmp r13, r8	        77	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x400032a	            0x740c	                            je 0x4000338	        77	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x400032c	          0x4889dd	                            mov rbp, rbx	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x400032f	            0xebad	                           jmp 0x40002de	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000331	     0xf1f80000000	                         nop dword [rax]	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000338	        0x498d6e48	                   lea rbp, [r14 + 0x48]	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x400033c	          0x418b07	                    mov eax, dword [r15]	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x400033f	            0x85c0	                           test eax, eax	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x4000341	            0x741e	                            je 0x4000361	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x4000343	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	        91	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_6
0x4000348	          0x4d39e6	                            cmp r14, r12	        91	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_6
0x400034b	            0x7733	                            ja 0x4000380	        91	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_6
0x400034d	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_11	CALL_3
0x4000350	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_11	CALL_3
0x4000353	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_11	CALL_3
0x4000356	          0x4d29f4	                            sub r12, r14	        94	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2
0x4000359	          0x4c01f3	                            add rbx, r14	        95	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2
0x400035c	      0xe800000000	                          call 0x4000361	        53	string3.h	FUNCTION_11	CALL_3
0x4000361	        0x4983c514	                           add r13, 0x14	        53	string3.h	FUNCTION_11	CALL_3
0x4000365	        0x4983c704	                              add r15, 4	        53	string3.h	FUNCTION_11	CALL_3
0x4000369	          0x4c39ed	                            cmp rbp, r13	        88	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2
0x400036c	            0x75ce	                           jne 0x400033c	        88	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2
0x400036e	          0x4d85e4	                           test r12, r12	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x4000371	     0xf8525ffffff	                           jne 0x400029c	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x4000377	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x400037c	            0xeb1f	                           jmp 0x400039d	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x400037e	            0x6690	                                     nop	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x4000380	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       101	resolve-undo.c	FUNCTION_3	CALL_7
0x4000385	      0xbe01000000	                              mov esi, 1	       101	resolve-undo.c	FUNCTION_3	CALL_7
0x400038a	      0xe800000000	                          call 0x400038f	       101	resolve-undo.c	FUNCTION_3	CALL_7
0x400038f	      0xbf00000000	                              mov edi, 0	       102	resolve-undo.c	FUNCTION_3	CALL_8
0x4000394	            0x31c0	                            xor eax, eax	       102	resolve-undo.c	FUNCTION_3	CALL_8
0x4000396	      0xe800000000	                          call 0x400039b	       102	resolve-undo.c	FUNCTION_3	CALL_8
0x400039b	            0x31c0	                            xor eax, eax	       103	resolve-undo.c	FUNCTION_3
0x400039d	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       104	resolve-undo.c	FUNCTION_3
0x40003a2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       104	resolve-undo.c	FUNCTION_3
0x40003ab	            0x752e	                           jne 0x40003db	       104	resolve-undo.c	FUNCTION_3
0x40003ad	        0x4883c438	                           add rsp, 0x38	       104	resolve-undo.c	FUNCTION_3
0x40003b1	              0x5b	                                 pop rbx	       104	resolve-undo.c	FUNCTION_3
0x40003b2	              0x5d	                                 pop rbp	       104	resolve-undo.c	FUNCTION_3
0x40003b3	            0x415c	                                 pop r12	       104	resolve-undo.c	FUNCTION_3
0x40003b5	            0x415d	                                 pop r13	       104	resolve-undo.c	FUNCTION_3
0x40003b7	            0x415e	                                 pop r14	       104	resolve-undo.c	FUNCTION_3
0x40003b9	            0x415f	                                 pop r15	       104	resolve-undo.c	FUNCTION_3
0x40003bb	              0xc3	                                     ret	       104	resolve-undo.c	FUNCTION_3
0x40003bc	         0xf1f4000	                         nop dword [rax]	       104	resolve-undo.c	FUNCTION_3
0x40003c0	      0xbe48000000	                           mov esi, 0x48	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x40003c5	      0xbf01000000	                              mov edi, 1	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x40003ca	      0xe800000000	                          call 0x40003cf	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x40003cf	          0x4989c6	                            mov r14, rax	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x40003d2	        0x49894708	                mov qword [r15 + 8], rax	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x40003d6	      0xe9f3feffff	                           jmp 0x40002ce	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x40003db	      0xe800000000	       call sym.resolve_undo_clear_index	       104	resolve-undo.c	FUNCTION_3
resolve_undo_write	WHILE,0:CALL,0:functions,1:FOR,0:ELSE,0:IF,0:SWITCH,0:DO,0	92
0x40000f0	            0x4157	                                push r15	        32	resolve-undo.c	FUNCTION_2
0x40000f2	            0x4156	                                push r14	        32	resolve-undo.c	FUNCTION_2
0x40000f4	            0x4155	                                push r13	        32	resolve-undo.c	FUNCTION_2
0x40000f6	            0x4154	                                push r12	        32	resolve-undo.c	FUNCTION_2
0x40000f8	              0x55	                                push rbp	        32	resolve-undo.c	FUNCTION_2
0x40000f9	              0x53	                                push rbx	        32	resolve-undo.c	FUNCTION_2
0x40000fa	        0x4883ec18	                           sub rsp, 0x18	        32	resolve-undo.c	FUNCTION_2
0x40000fe	          0x4c8b36	                    mov r14, qword [rsi]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000101	          0x4d85f6	                           test r14, r14	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000104	     0xf84e0000000	                            je 0x40001ea	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x400010a	          0x8b4608	                mov eax, dword [rsi + 8]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x400010d	      0x4889742408	                mov qword [rsp + 8], rsi	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000112	          0x4989fc	                            mov r12, rdi	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000115	        0x48c1e004	                              shl rax, 4	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000119	          0x4c01f0	                            add rax, r14	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x400011c	          0x4939c6	                            cmp r14, rax	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x400011f	     0xf83c5000000	                           jae 0x40001ea	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000125	           0xf1f00	                         nop dword [rax]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000128	        0x4d8b6e08	                mov r13, qword [r14 + 8]	        35	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x400012c	          0x4d85ed	                           test r13, r13	        38	resolve-undo.c	FUNCTION_2	FUNCTION_1	IF_1
0x400012f	     0xf8497000000	                            je 0x40001cc	        38	resolve-undo.c	FUNCTION_2	FUNCTION_1	IF_1
0x4000135	          0x498b1e	                    mov rbx, qword [r14]	        40	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_1
0x4000138	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_27	CALL_2
0x400013b	      0xe800000000	                          call 0x4000140	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000140	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000143	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000146	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000149	      0xe800000000	                          call 0x400014e	       279	strbuf.h	FUNCTION_27	CALL_2
0x400014e	        0x498b0424	                    mov rax, qword [r12]	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000152	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_24
0x4000155	     0xf85c5000000	                           jne 0x4000220	       141	strbuf.h	FUNCTION_24
0x400015b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000160	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000163	      0xe800000000	                          call 0x4000168	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000168	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_26	CALL_2
0x400016d	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_26
0x4000172	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_26
0x4000176	        0x498d5d0c	                    lea rbx, [r13 + 0xc]	       229	strbuf.h	FUNCTION_26
0x400017a	          0x4d89ef	                            mov r15, r13	       229	strbuf.h	FUNCTION_26
0x400017d	          0x4c89ed	                            mov rbp, r13	       230	strbuf.h	FUNCTION_26
0x4000180	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_26
0x4000185	        0xc6041000	                 mov byte [rax + rdx], 0	       229	strbuf.h	FUNCTION_26
0x4000189	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_26
0x400018e	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_26
0x4000193	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_26
0x4000197	          0x8b5500	                    mov edx, dword [rbp]	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x400019a	            0x31c9	                            xor ecx, ecx	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x400019c	            0x31c0	                            xor eax, eax	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x400019e	      0xbe00000000	                              mov esi, 0	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x40001a3	          0x4c89e7	                            mov rdi, r12	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x40001a6	        0x4883c504	                              add rbp, 4	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x40001aa	      0xe800000000	                          call 0x40001af	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x40001af	          0x4839dd	                            cmp rbp, rbx	        42	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_1
0x40001b2	            0x75e3	                           jne 0x4000197	        42	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_1
0x40001b4	        0x4983c548	                           add r13, 0x48	        42	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_1
0x40001b8	          0x418b07	                    mov eax, dword [r15]	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001bb	            0x85c0	                           test eax, eax	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001bd	            0x7541	                           jne 0x4000200	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001bf	        0x4883c314	                           add rbx, 0x14	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001c3	        0x4983c704	                              add r15, 4	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001c7	          0x4c39eb	                            cmp rbx, r13	        44	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2
0x40001ca	            0x75ec	                           jne 0x40001b8	        44	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2
0x40001cc	        0x4983c610	                           add r14, 0x10	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001d0	            0x7418	                            je 0x40001ea	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001d2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001d7	          0x8b4108	                mov eax, dword [rcx + 8]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001da	        0x48c1e004	                              shl rax, 4	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001de	          0x480301	                    add rax, qword [rcx]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001e1	          0x4939c6	                            cmp r14, rax	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001e4	     0xf823effffff	                            jb 0x4000128	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001ea	        0x4883c418	                           add rsp, 0x18	        50	resolve-undo.c	FUNCTION_2
0x40001ee	              0x5b	                                 pop rbx	        50	resolve-undo.c	FUNCTION_2
0x40001ef	              0x5d	                                 pop rbp	        50	resolve-undo.c	FUNCTION_2
0x40001f0	            0x415c	                                 pop r12	        50	resolve-undo.c	FUNCTION_2
0x40001f2	            0x415d	                                 pop r13	        50	resolve-undo.c	FUNCTION_2
0x40001f4	            0x415e	                                 pop r14	        50	resolve-undo.c	FUNCTION_2
0x40001f6	            0x415f	                                 pop r15	        50	resolve-undo.c	FUNCTION_2
0x40001f8	              0xc3	                                     ret	        50	resolve-undo.c	FUNCTION_2
0x40001f9	     0xf1f80000000	                         nop dword [rax]	        50	resolve-undo.c	FUNCTION_2
0x4000200	    0x488b05000000	            mov rax, qword [0x04000207] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000207	          0x4889de	                            mov rsi, rbx	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400020a	          0x4c89e7	                            mov rdi, r12	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400020d	        0x488b4058	            mov rax, qword [rax + 0x58] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000211	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000215	      0xe800000000	                          call 0x400021a	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400021a	            0xeba3	                           jmp 0x40001bf	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400021c	         0xf1f4000	                         nop dword [rax]	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000220	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_24
0x4000225	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000229	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x400022c	     0xf853bffffff	                           jne 0x400016d	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000232	      0xe924ffffff	                           jmp 0x400015b	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
record_resolve_undo	WHILE,0:CALL,5:functions,0:FOR,0:ELSE,0:IF,3:SWITCH,0:DO,0	50
0x4000040	            0x4154	                                push r12	         8	resolve-undo.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	         8	resolve-undo.c	FUNCTION_1
0x4000043	              0x53	                                push rbx	         8	resolve-undo.c	FUNCTION_1
0x4000044	          0x8b5e38	            mov ebx, dword [rsi + 0x38] 	        12	resolve-undo.c	FUNCTION_1	CALL_1
0x4000047	    0x81e300300000	                         and ebx, 0x3000	        12	resolve-undo.c	FUNCTION_1	CALL_1
0x400004d	          0xc1eb0c	                            shr ebx, 0xc	        12	resolve-undo.c	FUNCTION_1	CALL_1
0x4000050	            0x85db	                           test ebx, ebx	        14	resolve-undo.c	FUNCTION_1	IF_1
0x4000052	            0x7452	                            je 0x40000a6	        14	resolve-undo.c	FUNCTION_1	IF_1
0x4000054	          0x4989fc	                            mov r12, rdi	        14	resolve-undo.c	FUNCTION_1	IF_1
0x4000057	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	        17	resolve-undo.c	FUNCTION_1	IF_2
0x400005b	          0x4889f5	                            mov rbp, rsi	        17	resolve-undo.c	FUNCTION_1	IF_2
0x400005e	          0x4885ff	                           test rdi, rdi	        17	resolve-undo.c	FUNCTION_1	IF_2
0x4000061	            0x744d	                            je 0x40000b0	        17	resolve-undo.c	FUNCTION_1	IF_2
0x4000063	        0x488d7558	                   lea rsi, [rbp + 0x58]	        23	resolve-undo.c	FUNCTION_1	CALL_3
0x4000067	      0xe800000000	                          call 0x400006c	        23	resolve-undo.c	FUNCTION_1	CALL_3
0x400006c	          0x4989c4	                            mov r12, rax	        23	resolve-undo.c	FUNCTION_1	CALL_3
0x400006f	        0x488b4008	                mov rax, qword [rax + 8]	        24	resolve-undo.c	FUNCTION_1	IF_3
0x4000073	          0x4885c0	                           test rax, rax	        24	resolve-undo.c	FUNCTION_1	IF_3
0x4000076	            0x7458	                            je 0x40000d0	        24	resolve-undo.c	FUNCTION_1	IF_3
0x4000078	          0x83eb01	                              sub ebx, 1	        27	resolve-undo.c	FUNCTION_1	CALL_5
0x400007b	        0x488b7d44	            mov rdi, qword [rbp + 0x44] 	        53	string3.h	FUNCTION_11	CALL_3
0x400007f	          0x4863db	                         movsxd rbx, ebx	        53	string3.h	FUNCTION_11	CALL_3
0x4000082	        0x488d149b	                  lea rdx, [rbx + rbx*4]	        53	string3.h	FUNCTION_11	CALL_3
0x4000086	        0x488d3490	                  lea rsi, [rax + rdx*4]	        53	string3.h	FUNCTION_11	CALL_3
0x400008a	        0x48897e0c	              mov qword [rsi + 0xc], rdi	        53	string3.h	FUNCTION_11	CALL_3
0x400008e	        0x488d560c	                    lea rdx, [rsi + 0xc]	        53	string3.h	FUNCTION_11	CALL_3
0x4000092	        0x488b754c	            mov rsi, qword [rbp + 0x4c] 	        53	string3.h	FUNCTION_11	CALL_3
0x4000096	        0x48897208	                mov qword [rdx + 8], rsi	        53	string3.h	FUNCTION_11	CALL_3
0x400009a	          0x8b4d54	            mov ecx, dword [rbp + 0x54] 	        53	string3.h	FUNCTION_11	CALL_3
0x400009d	          0x894a10	             mov dword [rdx + 0x10], ecx	        53	string3.h	FUNCTION_11	CALL_3
0x40000a0	          0x8b5534	            mov edx, dword [rbp + 0x34] 	        28	resolve-undo.c	FUNCTION_1
0x40000a3	          0x891498	            mov dword [rax + rbx*4], edx	        28	resolve-undo.c	FUNCTION_1
0x40000a6	              0x5b	                                 pop rbx	        29	resolve-undo.c	FUNCTION_1
0x40000a7	              0x5d	                                 pop rbp	        29	resolve-undo.c	FUNCTION_1
0x40000a8	            0x415c	                                 pop r12	        29	resolve-undo.c	FUNCTION_1
0x40000aa	              0xc3	                                     ret	        29	resolve-undo.c	FUNCTION_1
0x40000ab	       0xf1f440000	                   nop dword [rax + rax]	        29	resolve-undo.c	FUNCTION_1
0x40000b0	      0xbf01000000	                              mov edi, 1	        18	resolve-undo.c	FUNCTION_1	IF_2	CALL_2
0x40000b5	      0xbe20000000	                           mov esi, 0x20	        18	resolve-undo.c	FUNCTION_1	IF_2	CALL_2
0x40000ba	      0xe800000000	                          call 0x40000bf	        18	resolve-undo.c	FUNCTION_1	IF_2	CALL_2
0x40000bf	        0x80481001	                 or byte [rax + 0x10], 1	        19	resolve-undo.c	FUNCTION_1	IF_2
0x40000c3	          0x4889c7	                            mov rdi, rax	        20	resolve-undo.c	FUNCTION_1	IF_2
0x40000c6	      0x4989442418	             mov qword [r12 + 0x18], rax	        20	resolve-undo.c	FUNCTION_1	IF_2
0x40000cb	            0xeb96	                           jmp 0x4000063	        20	resolve-undo.c	FUNCTION_1	IF_2
0x40000cd	           0xf1f00	                         nop dword [rax]	        20	resolve-undo.c	FUNCTION_1	IF_2
0x40000d0	      0xbe48000000	                           mov esi, 0x48	        25	resolve-undo.c	FUNCTION_1	CALL_4
0x40000d5	      0xbf01000000	                              mov edi, 1	        25	resolve-undo.c	FUNCTION_1	CALL_4
0x40000da	      0xe800000000	                          call 0x40000df	        25	resolve-undo.c	FUNCTION_1	CALL_4
0x40000df	      0x4989442408	                mov qword [r12 + 8], rax	        25	resolve-undo.c	FUNCTION_1	CALL_4
0x40000e4	            0xeb92	                           jmp 0x4000078	        25	resolve-undo.c	FUNCTION_1	CALL_4
resolve_undo_clear_index	WHILE,0:CALL,2:functions,0:FOR,0:ELSE,0:IF,1:SWITCH,0:DO,0	18
0x40003e0	              0x55	                                push rbp	       107	resolve-undo.c	FUNCTION_4
0x40003e1	              0x53	                                push rbx	       107	resolve-undo.c	FUNCTION_4
0x40003e2	        0x4883ec08	                              sub rsp, 8	       107	resolve-undo.c	FUNCTION_4
0x40003e6	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	       108	resolve-undo.c	FUNCTION_4
0x40003ea	          0x4885ed	                           test rbp, rbp	       109	resolve-undo.c	FUNCTION_4	IF_1
0x40003ed	            0x7424	                            je 0x4000413	       109	resolve-undo.c	FUNCTION_4	IF_1
0x40003ef	          0x4889fb	                            mov rbx, rdi	       109	resolve-undo.c	FUNCTION_4	IF_1
0x40003f2	      0xbe01000000	                              mov esi, 1	       111	resolve-undo.c	FUNCTION_4	CALL_1
0x40003f7	          0x4889ef	                            mov rdi, rbp	       111	resolve-undo.c	FUNCTION_4	CALL_1
0x40003fa	      0xe800000000	                          call 0x40003ff	       111	resolve-undo.c	FUNCTION_4	CALL_1
0x40003ff	          0x4889ef	                            mov rdi, rbp	       112	resolve-undo.c	FUNCTION_4	CALL_2
0x4000402	      0xe800000000	                          call 0x4000407	       112	resolve-undo.c	FUNCTION_4	CALL_2
0x4000407	        0x834b1410	             or dword [rbx + 0x14], 0x10	       114	resolve-undo.c	FUNCTION_4
0x400040b	    0x48c743180000	               mov qword [rbx + 0x18], 0	       113	resolve-undo.c	FUNCTION_4
0x4000413	        0x4883c408	                              add rsp, 8	       115	resolve-undo.c	FUNCTION_4
0x4000417	              0x5b	                                 pop rbx	       115	resolve-undo.c	FUNCTION_4
0x4000418	              0x5d	                                 pop rbp	       115	resolve-undo.c	FUNCTION_4
0x4000419	              0xc3	                                     ret	       115	resolve-undo.c	FUNCTION_4
unmerge_marked_index	WHILE,0:CALL,1:functions,0:FOR,1:ELSE,0:IF,2:SWITCH,0:DO,0	26
0x4000620	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       170	resolve-undo.c	FUNCTION_6	IF_1
0x4000625	            0x7444	                            je 0x400066b	       170	resolve-undo.c	FUNCTION_6	IF_1
0x4000627	          0x8b470c	              mov eax, dword [rdi + 0xc]	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x400062a	            0x85c0	                           test eax, eax	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x400062c	            0x743d	                            je 0x400066b	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x400062e	              0x53	                                push rbx	       167	resolve-undo.c	FUNCTION_6
0x400062f	            0x31c0	                            xor eax, eax	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000631	          0x4889fb	                            mov rbx, rdi	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000634	            0xeb12	                           jmp 0x4000648	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000636	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000640	          0x83c001	                              add eax, 1	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000643	          0x39430c	              cmp dword [rbx + 0xc], eax	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000646	            0x7622	                           jbe 0x400066a	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000648	          0x488b0b	                    mov rcx, qword [rbx]	       174	resolve-undo.c	FUNCTION_6	FOR_1
0x400064b	          0x4863d0	                         movsxd rdx, eax	       174	resolve-undo.c	FUNCTION_6	FOR_1
0x400064e	        0x488b14d1	            mov rdx, qword [rcx + rdx*8]	       175	resolve-undo.c	FUNCTION_6	FOR_1	IF_2
0x4000652	        0xf6423b04	               test byte [rdx + 0x3b], 4	       175	resolve-undo.c	FUNCTION_6	FOR_1	IF_2
0x4000656	            0x74e8	                            je 0x4000640	       175	resolve-undo.c	FUNCTION_6	FOR_1	IF_2
0x4000658	            0x89c6	                            mov esi, eax	       176	resolve-undo.c	FUNCTION_6	FOR_1	CALL_1
0x400065a	          0x4889df	                            mov rdi, rbx	       176	resolve-undo.c	FUNCTION_6	FOR_1	CALL_1
0x400065d	      0xe800000000	                          call 0x4000662	       176	resolve-undo.c	FUNCTION_6	FOR_1	CALL_1
0x4000662	          0x83c001	                              add eax, 1	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000665	          0x39430c	              cmp dword [rbx + 0xc], eax	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000668	            0x77de	                            ja 0x4000648	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x400066a	              0x5b	                                 pop rbx	       178	resolve-undo.c	FUNCTION_6
0x400066b	            0xf3c3	                                     ret	       178	resolve-undo.c	FUNCTION_6
