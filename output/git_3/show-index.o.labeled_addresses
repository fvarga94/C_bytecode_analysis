cmd_main	CALL,24:IF,15:DO,0:SWITCH,0:ELSE,3:WHILE,0:functions,0:FOR,6	235
0x4000040	            0x4157	                                push r15	         8	show-index.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	         8	show-index.c	FUNCTION_1
0x4000044	            0x4155	                                push r13	         8	show-index.c	FUNCTION_1
0x4000046	            0x4154	                                push r12	         8	show-index.c	FUNCTION_1
0x4000048	              0x55	                                push rbp	         8	show-index.c	FUNCTION_1
0x4000049	              0x53	                                push rbx	         8	show-index.c	FUNCTION_1
0x400004a	        0x4883ec28	                           sub rsp, 0x28	         8	show-index.c	FUNCTION_1
0x400004e	    0x64488b042528	                mov rax, qword fs:[0x28]	         8	show-index.c	FUNCTION_1
0x4000057	      0x4889442418	             mov qword [rsp + 0x18], rax	         8	show-index.c	FUNCTION_1
0x400005c	            0x31c0	                            xor eax, eax	         8	show-index.c	FUNCTION_1
0x400005e	          0x83ff01	                              cmp edi, 1	        14	show-index.c	FUNCTION_1	IF_1
0x4000061	     0xf8559030000	                           jne 0x40003c0	        14	show-index.c	FUNCTION_1	IF_1
0x4000067	    0x488b0d000000	            mov rcx, qword [0x0400006e] 	       295	stdio2.h	FUNCTION_16	CALL_9
0x400006e	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000073	      0xbe08000000	                              mov esi, 8	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000078	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_16	CALL_9
0x400007d	      0xe800000000	                          call 0x4000082	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000082	        0x4883f801	                              cmp rax, 1	        16	show-index.c	FUNCTION_1	IF_2	CALL_2
0x4000086	     0xf8510030000	                           jne 0x400039c	        16	show-index.c	FUNCTION_1	IF_2	CALL_2
0x400008c	    0x813d00000000	     cmp dword [0x04000096], 0x634f74ff 	        18	show-index.c	FUNCTION_1	IF_3
0x4000096	     0xf8401020000	                            je 0x400029d	        18	show-index.c	FUNCTION_1	IF_3
0x400009c	    0x488b0d000000	            mov rcx, qword [0x040000a3] 	       295	stdio2.h	FUNCTION_16	CALL_9
0x40000a3	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_16	CALL_9
0x40000a8	      0xbef8030000	                          mov esi, 0x3f8	       295	stdio2.h	FUNCTION_16	CALL_9
0x40000ad	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_16	CALL_9
0x40000b2	      0xe800000000	                          call 0x40000b7	       295	stdio2.h	FUNCTION_16	CALL_9
0x40000b7	        0x4883f801	                              cmp rax, 1	        26	show-index.c	FUNCTION_1	ELSE_1	IF_6	CALL_7
0x40000bb	     0xf8515020000	                           jne 0x40002d6	        26	show-index.c	FUNCTION_1	ELSE_1	IF_6	CALL_7
0x40000c1	    0x41bc01000000	                             mov r12d, 1	        25	show-index.c	FUNCTION_1	ELSE_1
0x40000c7	      0xb800000000	                              mov eax, 0	        25	show-index.c	FUNCTION_1	ELSE_1
0x40000cc	            0x31ed	                            xor ebp, ebp	        29	show-index.c	FUNCTION_1
0x40000ce	            0x6690	                                     nop	        29	show-index.c	FUNCTION_1
0x40000d0	            0x8b18	                    mov ebx, dword [rax]	        44	bswap.h	FUNCTION_21	CALL_3
0x40000d2	             0xfcb	                               bswap ebx	        44	bswap.h	FUNCTION_21	CALL_3
0x40000d4	            0x39eb	                            cmp ebx, ebp	        32	show-index.c	FUNCTION_1	FOR_1	IF_7
0x40000d6	     0xf8284020000	                            jb 0x4000360	        32	show-index.c	FUNCTION_1	FOR_1	IF_7
0x40000dc	        0x4883c004	                              add rax, 4	        32	show-index.c	FUNCTION_1	FOR_1	IF_7
0x40000e0	            0x89dd	                            mov ebp, ebx	        32	show-index.c	FUNCTION_1	FOR_1	IF_7
0x40000e2	    0x483d00000000	                              cmp rax, 0	        30	show-index.c	FUNCTION_1	FOR_1
0x40000e8	            0x75e6	                           jne 0x40000d0	        30	show-index.c	FUNCTION_1	FOR_1
0x40000ea	        0x4183fc01	                             cmp r12d, 1	        36	show-index.c	FUNCTION_1	IF_8
0x40000ee	     0xf84f4010000	                            je 0x40002e8	        36	show-index.c	FUNCTION_1	IF_8
0x40000f4	            0x89d8	                            mov eax, ebx	        52	show-index.c	FUNCTION_1	ELSE_2	CALL_13
0x40000f6	    0x488d14850000	                        lea rdx, [rax*4]	        52	show-index.c	FUNCTION_1	ELSE_2	CALL_13
0x40000fe	        0x48c1e005	                              shl rax, 5	        52	show-index.c	FUNCTION_1	ELSE_2	CALL_13
0x4000102	          0x4829d0	                            sub rax, rdx	        52	show-index.c	FUNCTION_1	ELSE_2	CALL_13
0x4000105	          0x4889c7	                            mov rdi, rax	        52	show-index.c	FUNCTION_1	ELSE_2	CALL_13
0x4000108	      0xe800000000	                          call 0x400010d	        52	show-index.c	FUNCTION_1	ELSE_2	CALL_13
0x400010d	            0x85db	                           test ebx, ebx	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x400010f	          0x4989c4	                            mov r12, rax	        52	show-index.c	FUNCTION_1	ELSE_2	CALL_13
0x4000112	     0xf8458010000	                            je 0x4000270	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x4000118	          0x4989c5	                            mov r13, rax	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x400011b	            0x31ed	                            xor ebp, ebp	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x400011d	           0xf1f00	                         nop dword [rax]	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x4000120	    0x488b0d000000	            mov rcx, qword [0x04000127] 	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000127	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_16	CALL_9
0x400012c	      0xbe14000000	                           mov esi, 0x14	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000131	          0x4c89ef	                            mov rdi, r13	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000134	      0xe800000000	                          call 0x4000139	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000139	        0x4883f801	                              cmp rax, 1	        54	show-index.c	FUNCTION_1	ELSE_2	FOR_3	IF_10	CALL_14
0x400013d	     0xf8529020000	                           jne 0x400036c	        54	show-index.c	FUNCTION_1	ELSE_2	FOR_3	IF_10	CALL_14
0x4000143	          0x83c501	                              add ebp, 1	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x4000146	        0x4983c51c	                           add r13, 0x1c	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x400014a	            0x39dd	                            cmp ebp, ebx	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x400014c	            0x75d2	                           jne 0x4000120	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x400014e	      0x4d8d6c2414	                   lea r13, [r12 + 0x14]	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x4000153	            0x31ed	                            xor ebp, ebp	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x4000155	           0xf1f00	                         nop dword [rax]	        53	show-index.c	FUNCTION_1	ELSE_2	FOR_3
0x4000158	    0x488b0d000000	            mov rcx, qword [0x0400015f] 	       295	stdio2.h	FUNCTION_16	CALL_9
0x400015f	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000164	      0xbe04000000	                              mov esi, 4	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000169	          0x4c89ef	                            mov rdi, r13	       295	stdio2.h	FUNCTION_16	CALL_9
0x400016c	      0xe800000000	                          call 0x4000171	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000171	        0x4883f801	                              cmp rax, 1	        57	show-index.c	FUNCTION_1	ELSE_2	FOR_4	IF_11	CALL_16
0x4000175	     0xf8511020000	                           jne 0x400038c	        57	show-index.c	FUNCTION_1	ELSE_2	FOR_4	IF_11	CALL_16
0x400017b	          0x83c501	                              add ebp, 1	        56	show-index.c	FUNCTION_1	ELSE_2	FOR_4
0x400017e	        0x4983c51c	                           add r13, 0x1c	        56	show-index.c	FUNCTION_1	ELSE_2	FOR_4
0x4000182	            0x39eb	                            cmp ebx, ebp	        56	show-index.c	FUNCTION_1	ELSE_2	FOR_4
0x4000184	            0x75d2	                           jne 0x4000158	        56	show-index.c	FUNCTION_1	ELSE_2	FOR_4
0x4000186	      0x4d8d6c2418	                   lea r13, [r12 + 0x18]	        56	show-index.c	FUNCTION_1	ELSE_2	FOR_4
0x400018b	            0x31ed	                            xor ebp, ebp	        56	show-index.c	FUNCTION_1	ELSE_2	FOR_4
0x400018d	           0xf1f00	                         nop dword [rax]	        56	show-index.c	FUNCTION_1	ELSE_2	FOR_4
0x4000190	    0x488b0d000000	            mov rcx, qword [0x04000197] 	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000197	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_16	CALL_9
0x400019c	      0xbe04000000	                              mov esi, 4	       295	stdio2.h	FUNCTION_16	CALL_9
0x40001a1	          0x4c89ef	                            mov rdi, r13	       295	stdio2.h	FUNCTION_16	CALL_9
0x40001a4	      0xe800000000	                          call 0x40001a9	       295	stdio2.h	FUNCTION_16	CALL_9
0x40001a9	        0x4883f801	                              cmp rax, 1	        60	show-index.c	FUNCTION_1	ELSE_2	FOR_5	IF_12	CALL_18
0x40001ad	     0xf85c9010000	                           jne 0x400037c	        60	show-index.c	FUNCTION_1	ELSE_2	FOR_5	IF_12	CALL_18
0x40001b3	          0x83c501	                              add ebp, 1	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001b6	        0x4983c51c	                           add r13, 0x1c	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001ba	            0x39dd	                            cmp ebp, ebx	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001bc	            0x75d2	                           jne 0x4000190	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001be	          0x8d45ff	                      lea eax, [rbp - 1]	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001c1	          0x4d89e6	                            mov r14, r12	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001c4	          0x4531ed	                          xor r13d, r13d	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001c7	        0x4883c001	                              add rax, 1	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001cb	    0x488d14850000	                        lea rdx, [rax*4]	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001d3	        0x48c1e005	                              shl rax, 5	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001d7	          0x4829d0	                            sub rax, rdx	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001da	        0x498d2c04	                    lea rbp, [r12 + rax]	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001de	            0xeb32	                           jmp 0x4000212	        59	show-index.c	FUNCTION_1	ELSE_2	FOR_5
0x40001e0	          0x4c89f7	                            mov rdi, r14	        77	show-index.c	FUNCTION_1	ELSE_2	FOR_6
0x40001e3	        0x458b7e14	           mov r15d, dword [r14 + 0x14] 	        44	bswap.h	FUNCTION_21	CALL_3
0x40001e7	        0x4983c61c	                           add r14, 0x1c	        44	bswap.h	FUNCTION_21	CALL_3
0x40001eb	      0xe800000000	                          call 0x40001f0	        77	show-index.c	FUNCTION_1	ELSE_2	FOR_6
0x40001f0	          0x410fcf	                              bswap r15d	        44	bswap.h	FUNCTION_21	CALL_3
0x40001f3	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_12
0x40001f6	          0x4589f8	                           mov r8d, r15d	       104	stdio2.h	CALL_12
0x40001f9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_12
0x40001fb	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_12
0x40001fe	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x4000203	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x4000208	      0xe800000000	                          call 0x400020d	       104	stdio2.h	CALL_12
0x400020d	          0x4c39f5	                            cmp rbp, r14	        62	show-index.c	FUNCTION_1	ELSE_2	FOR_6
0x4000210	            0x745e	                            je 0x4000270	        62	show-index.c	FUNCTION_1	ELSE_2	FOR_6
0x4000212	        0x418b5618	            mov edx, dword [r14 + 0x18] 	        44	bswap.h	FUNCTION_21	CALL_3
0x4000216	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_21	CALL_3
0x4000218	            0x85d2	                           test edx, edx	        65	show-index.c	FUNCTION_1	ELSE_2	FOR_6	IF_13
0x400021a	            0x89d3	                            mov ebx, edx	        66	show-index.c	FUNCTION_1	ELSE_2	FOR_6	IF_13
0x400021c	            0x79c2	                           jns 0x40001e0	        65	show-index.c	FUNCTION_1	ELSE_2	FOR_6	IF_13
0x400021e	    0x81e2ffffff7f	                     and edx, 0x7fffffff	        69	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	IF_14
0x4000224	          0x4439ea	                           cmp edx, r13d	        69	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	IF_14
0x4000227	     0xf857b010000	                           jne 0x40003a8	        69	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	IF_14
0x400022d	    0x488b0d000000	            mov rcx, qword [0x04000234] 	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000234	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000239	      0xbe08000000	                              mov esi, 8	       295	stdio2.h	FUNCTION_16	CALL_9
0x400023e	          0x4889e7	                            mov rdi, rsp	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000241	      0xe800000000	                          call 0x4000246	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000246	        0x4883f801	                              cmp rax, 1	        71	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_21
0x400024a	     0xf857a010000	                           jne 0x40003ca	        71	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_21
0x4000250	          0x8b1424	                    mov edx, dword [rsp]	        44	bswap.h	FUNCTION_21	CALL_3
0x4000253	        0x8b442404	                mov eax, dword [rsp + 4]	        44	bswap.h	FUNCTION_21	CALL_3
0x4000257	        0x4183c501	                             add r13d, 1	        75	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3
0x400025b	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_21	CALL_3
0x400025d	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_21	CALL_3
0x400025f	        0x48c1e220	                           shl rdx, 0x20	        73	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3
0x4000263	            0x89c0	                            mov eax, eax	        73	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3
0x4000265	          0x4809c2	                             or rdx, rax	        73	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3
0x4000268	          0x4889d3	                            mov rbx, rdx	        73	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3
0x400026b	      0xe970ffffff	                           jmp 0x40001e0	        73	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3
0x4000270	          0x4c89e7	                            mov rdi, r12	        82	show-index.c	FUNCTION_1	ELSE_2	CALL_24
0x4000273	      0xe800000000	                          call 0x4000278	        82	show-index.c	FUNCTION_1	ELSE_2	CALL_24
0x4000278	            0x31c0	                            xor eax, eax	        85	show-index.c	FUNCTION_1
0x400027a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        85	show-index.c	FUNCTION_1
0x400027f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        85	show-index.c	FUNCTION_1
0x4000288	     0xf854b010000	                           jne 0x40003d9	        85	show-index.c	FUNCTION_1
0x400028e	        0x4883c428	                           add rsp, 0x28	        85	show-index.c	FUNCTION_1
0x4000292	              0x5b	                                 pop rbx	        85	show-index.c	FUNCTION_1
0x4000293	              0x5d	                                 pop rbp	        85	show-index.c	FUNCTION_1
0x4000294	            0x415c	                                 pop r12	        85	show-index.c	FUNCTION_1
0x4000296	            0x415d	                                 pop r13	        85	show-index.c	FUNCTION_1
0x4000298	            0x415e	                                 pop r14	        85	show-index.c	FUNCTION_1
0x400029a	            0x415f	                                 pop r15	        85	show-index.c	FUNCTION_1
0x400029c	              0xc3	                                     ret	        85	show-index.c	FUNCTION_1
0x400029d	    0x448b25000000	           mov r12d, dword [0x040002a4] 	        44	bswap.h	FUNCTION_21	CALL_3
0x40002a4	          0x410fcc	                              bswap r12d	        44	bswap.h	FUNCTION_21	CALL_3
0x40002a7	        0x4183fc02	                             cmp r12d, 2	        20	show-index.c	FUNCTION_1	IF_3	IF_4
0x40002ab	     0xf8503010000	                           jne 0x40003b4	        20	show-index.c	FUNCTION_1	IF_3	IF_4
0x40002b1	    0x488b0d000000	            mov rcx, qword [0x040002b8] 	       295	stdio2.h	FUNCTION_16	CALL_9
0x40002b8	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_16	CALL_9
0x40002bd	      0xbe00040000	                          mov esi, 0x400	       295	stdio2.h	FUNCTION_16	CALL_9
0x40002c2	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_16	CALL_9
0x40002c7	      0xe800000000	                          call 0x40002cc	       295	stdio2.h	FUNCTION_16	CALL_9
0x40002cc	        0x4883f801	                              cmp rax, 1	        22	show-index.c	FUNCTION_1	IF_3	IF_5	CALL_5
0x40002d0	     0xf84f1fdffff	                            je 0x40000c7	        22	show-index.c	FUNCTION_1	IF_3	IF_5	CALL_5
0x40002d6	      0xbf00000000	                              mov edi, 0	        23	show-index.c	FUNCTION_1	IF_3	CALL_6
0x40002db	            0x31c0	                            xor eax, eax	        23	show-index.c	FUNCTION_1	IF_3	CALL_6
0x40002dd	      0xe800000000	                          call 0x40002e2	        23	show-index.c	FUNCTION_1	IF_3	CALL_6
0x40002e2	    0x660f1f440000	                    nop word [rax + rax]	        23	show-index.c	FUNCTION_1	IF_3	CALL_6
0x40002e8	          0x4531e4	                          xor r12d, r12d	        37	show-index.c	FUNCTION_1	IF_8	FOR_2
0x40002eb	            0x85db	                           test ebx, ebx	        37	show-index.c	FUNCTION_1	IF_8	FOR_2
0x40002ed	      0x4c8d6c2404	                      lea r13, [rsp + 4]	        43	show-index.c	FUNCTION_1	IF_8	FOR_2	CALL_12
0x40002f2	            0x753c	                           jne 0x4000330	        37	show-index.c	FUNCTION_1	IF_8	FOR_2
0x40002f4	            0xeb82	                           jmp 0x4000278	        37	show-index.c	FUNCTION_1	IF_8	FOR_2
0x40002f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        37	show-index.c	FUNCTION_1	IF_8	FOR_2
0x4000300	          0x4c89ef	                            mov rdi, r13	        43	show-index.c	FUNCTION_1	IF_8	FOR_2	CALL_12
0x4000303	          0x8b2c24	                    mov ebp, dword [rsp]	        44	bswap.h	FUNCTION_21	CALL_3
0x4000306	        0x4183c401	                             add r12d, 1	        37	show-index.c	FUNCTION_1	IF_8	FOR_2
0x400030a	      0xe800000000	                          call 0x400030f	        43	show-index.c	FUNCTION_1	IF_8	FOR_2	CALL_12
0x400030f	             0xfcd	                               bswap ebp	        44	bswap.h	FUNCTION_21	CALL_3
0x4000311	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_12
0x4000314	            0x89ea	                            mov edx, ebp	       104	stdio2.h	CALL_12
0x4000316	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_12
0x4000318	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x400031d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x4000322	      0xe800000000	                          call 0x4000327	       104	stdio2.h	CALL_12
0x4000327	          0x4439e3	                           cmp ebx, r12d	        37	show-index.c	FUNCTION_1	IF_8	FOR_2
0x400032a	     0xf8448ffffff	                            je 0x4000278	        37	show-index.c	FUNCTION_1	IF_8	FOR_2
0x4000330	    0x488b0d000000	            mov rcx, qword [0x04000337] 	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000337	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_16	CALL_9
0x400033c	      0xbe18000000	                           mov esi, 0x18	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000341	          0x4889e7	                            mov rdi, rsp	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000344	      0xe800000000	                          call 0x4000349	       295	stdio2.h	FUNCTION_16	CALL_9
0x4000349	        0x4883f801	                              cmp rax, 1	        40	show-index.c	FUNCTION_1	IF_8	FOR_2	IF_9	CALL_10
0x400034d	            0x74b1	                            je 0x4000300	        40	show-index.c	FUNCTION_1	IF_8	FOR_2	IF_9	CALL_10
0x400034f	            0x89da	                            mov edx, ebx	        41	show-index.c	FUNCTION_1	IF_8	FOR_2	CALL_11
0x4000351	          0x4489e6	                           mov esi, r12d	        41	show-index.c	FUNCTION_1	IF_8	FOR_2	CALL_11
0x4000354	      0xbf00000000	                              mov edi, 0	        41	show-index.c	FUNCTION_1	IF_8	FOR_2	CALL_11
0x4000359	            0x31c0	                            xor eax, eax	        41	show-index.c	FUNCTION_1	IF_8	FOR_2	CALL_11
0x400035b	      0xe800000000	                          call 0x4000360	        41	show-index.c	FUNCTION_1	IF_8	FOR_2	CALL_11
0x4000360	      0xbf00000000	                              mov edi, 0	        33	show-index.c	FUNCTION_1	FOR_1	CALL_9
0x4000365	            0x31c0	                            xor eax, eax	        33	show-index.c	FUNCTION_1	FOR_1	CALL_9
0x4000367	      0xe800000000	                          call 0x400036c	        33	show-index.c	FUNCTION_1	FOR_1	CALL_9
0x400036c	            0x89da	                            mov edx, ebx	        55	show-index.c	FUNCTION_1	ELSE_2	FOR_3	IF_10
0x400036e	            0x89ee	                            mov esi, ebp	        55	show-index.c	FUNCTION_1	ELSE_2	FOR_3	IF_10
0x4000370	      0xbf00000000	                              mov edi, 0	        55	show-index.c	FUNCTION_1	ELSE_2	FOR_3	IF_10
0x4000375	            0x31c0	                            xor eax, eax	        55	show-index.c	FUNCTION_1	ELSE_2	FOR_3	IF_10
0x4000377	      0xe800000000	                          call 0x400037c	        55	show-index.c	FUNCTION_1	ELSE_2	FOR_3	IF_10
0x400037c	            0x89da	                            mov edx, ebx	        61	show-index.c	FUNCTION_1	ELSE_2	FOR_5	IF_12
0x400037e	            0x89ee	                            mov esi, ebp	        61	show-index.c	FUNCTION_1	ELSE_2	FOR_5	IF_12
0x4000380	      0xbf00000000	                              mov edi, 0	        61	show-index.c	FUNCTION_1	ELSE_2	FOR_5	IF_12
0x4000385	            0x31c0	                            xor eax, eax	        61	show-index.c	FUNCTION_1	ELSE_2	FOR_5	IF_12
0x4000387	      0xe800000000	                          call 0x400038c	        61	show-index.c	FUNCTION_1	ELSE_2	FOR_5	IF_12
0x400038c	            0x89da	                            mov edx, ebx	        58	show-index.c	FUNCTION_1	ELSE_2	FOR_4	IF_11
0x400038e	            0x89ee	                            mov esi, ebp	        58	show-index.c	FUNCTION_1	ELSE_2	FOR_4	IF_11
0x4000390	      0xbf00000000	                              mov edi, 0	        58	show-index.c	FUNCTION_1	ELSE_2	FOR_4	IF_11
0x4000395	            0x31c0	                            xor eax, eax	        58	show-index.c	FUNCTION_1	ELSE_2	FOR_4	IF_11
0x4000397	      0xe800000000	                          call 0x400039c	        58	show-index.c	FUNCTION_1	ELSE_2	FOR_4	IF_11
0x400039c	      0xbf00000000	                              mov edi, 0	        17	show-index.c	FUNCTION_1	CALL_3
0x40003a1	            0x31c0	                            xor eax, eax	        17	show-index.c	FUNCTION_1	CALL_3
0x40003a3	      0xe800000000	                          call 0x40003a8	        17	show-index.c	FUNCTION_1	CALL_3
0x40003a8	      0xbf00000000	                              mov edi, 0	        70	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	CALL_20
0x40003ad	            0x31c0	                            xor eax, eax	        70	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	CALL_20
0x40003af	      0xe800000000	                          call 0x40003b4	        70	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	CALL_20
0x40003b4	      0xbf00000000	                              mov edi, 0	        21	show-index.c	FUNCTION_1	IF_3	CALL_4
0x40003b9	            0x31c0	                            xor eax, eax	        21	show-index.c	FUNCTION_1	IF_3	CALL_4
0x40003bb	      0xe800000000	                          call 0x40003c0	        21	show-index.c	FUNCTION_1	IF_3	CALL_4
0x40003c0	      0xbf00000000	                              mov edi, 0	        15	show-index.c	FUNCTION_1	CALL_1
0x40003c5	      0xe800000000	                          call 0x40003ca	        15	show-index.c	FUNCTION_1	CALL_1
0x40003ca	          0x4489ee	                           mov esi, r13d	        72	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	CALL_22
0x40003cd	      0xbf00000000	                              mov edi, 0	        72	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	CALL_22
0x40003d2	            0x31c0	                            xor eax, eax	        72	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	CALL_22
0x40003d4	      0xe800000000	                          call 0x40003d9	        72	show-index.c	FUNCTION_1	ELSE_2	FOR_6	ELSE_3	CALL_22
0x40003d9	      0xe800000000	                  call section_end..data	        85	show-index.c	FUNCTION_1
