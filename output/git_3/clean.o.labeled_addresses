quit_cmd	DO,0:ELSE,0:CALL,2:FOR,0:WHILE,0:IF,0:SWITCH,0:functions,0	15
0x4000410	        0x4883ec08	                              sub rsp, 8	       786	clean.c	FUNCTION_18
0x4000414	            0x31f6	                            xor esi, esi	       787	clean.c	FUNCTION_18	CALL_1
0x4000416	      0xbf00000000	                              mov edi, 0	       787	clean.c	FUNCTION_18	CALL_1
0x400041b	      0xe800000000	                          call 0x4000420	       787	clean.c	FUNCTION_18	CALL_1
0x4000420	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_25
0x4000425	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_25
0x400042a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_25
0x400042c	      0xe800000000	                          call 0x4000431	        54	gettext.h	FUNCTION_25
0x4000431	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000436	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4000439	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400043b	      0xe800000000	                          call 0x4000440	       104	stdio2.h	CALL_16
0x4000440	      0xb80a000000	                            mov eax, 0xa	       790	clean.c	FUNCTION_18
0x4000445	        0x4883c408	                              add rsp, 8	       790	clean.c	FUNCTION_18
0x4000449	              0xc3	                                     ret	       790	clean.c	FUNCTION_18
clean_print_color	DO,0:ELSE,0:CALL,1:FOR,0:WHILE,0:IF,0:SWITCH,0:functions,0	19
0x4000280	    0x8b3500000000	            mov esi, dword [0x04000286] 	       135	clean.c	FUNCTION_3	IF_1	CALL_1
0x4000286	              0x53	                                push rbx	       141	clean.c	FUNCTION_4
0x4000287	            0x89fb	                            mov ebx, edi	       141	clean.c	FUNCTION_4
0x4000289	      0xbf01000000	                              mov edi, 1	       135	clean.c	FUNCTION_3	IF_1	CALL_1
0x400028e	      0xe800000000	                          call 0x4000293	       135	clean.c	FUNCTION_3	IF_1	CALL_1
0x4000293	            0x85c0	                           test eax, eax	       135	clean.c	FUNCTION_3	IF_1	CALL_1
0x4000295	      0xba00000000	                              mov edx, 0	       135	clean.c	FUNCTION_3	IF_1	CALL_1
0x400029a	            0x7417	                            je 0x40002b3	       135	clean.c	FUNCTION_3	IF_1	CALL_1
0x400029c	            0x89df	                            mov edi, ebx	       136	clean.c	FUNCTION_3	IF_1
0x400029e	        0x488d04bf	                  lea rax, [rdi + rdi*4]	       136	clean.c	FUNCTION_3	IF_1
0x40002a2	          0x4889c2	                            mov rdx, rax	       136	clean.c	FUNCTION_3	IF_1
0x40002a5	        0x48c1e204	                              shl rdx, 4	       136	clean.c	FUNCTION_3	IF_1
0x40002a9	          0x4829c2	                            sub rdx, rax	       136	clean.c	FUNCTION_3	IF_1
0x40002ac	    0x4881c2000000	                              add rdx, 0	       136	clean.c	FUNCTION_3	IF_1
0x40002b3	              0x5b	                                 pop rbx	       143	clean.c	FUNCTION_4
0x40002b4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40002b9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40002be	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40002c0	      0xe900000000	                           jmp 0x40002c5	       104	stdio2.h	CALL_16
git_clean_config	DO,0:ELSE,0:CALL,11:FOR,0:WHILE,0:IF,6:SWITCH,0:functions,0	153
0x4000070	            0x4156	                                push r14	       103	clean.c	FUNCTION_2
0x4000072	            0x4155	                                push r13	       103	clean.c	FUNCTION_2
0x4000074	          0x4989fe	                            mov r14, rdi	       103	clean.c	FUNCTION_2
0x4000077	            0x4154	                                push r12	       103	clean.c	FUNCTION_2
0x4000079	              0x55	                                push rbp	       103	clean.c	FUNCTION_2
0x400007a	          0x4989f4	                            mov r12, rsi	       103	clean.c	FUNCTION_2
0x400007d	              0x53	                                push rbx	       103	clean.c	FUNCTION_2
0x400007e	      0xbe00000000	                              mov esi, 0	       106	clean.c	FUNCTION_2	IF_1	CALL_1
0x4000083	          0x4989d5	                            mov r13, rdx	       103	clean.c	FUNCTION_2
0x4000086	      0xe800000000	                          call 0x400008b	       106	clean.c	FUNCTION_2	IF_1	CALL_1
0x400008b	            0x85c0	                           test eax, eax	       106	clean.c	FUNCTION_2	IF_1	CALL_1
0x400008d	     0xf85fd000000	                           jne 0x4000190	       106	clean.c	FUNCTION_2	IF_1	CALL_1
0x4000093	      0xbf00000000	                              mov edi, 0	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x4000098	      0xb912000000	                           mov ecx, 0x12	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x400009d	          0x4c89f6	                            mov rsi, r14	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000a0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000a2	          0x4c89f3	                            mov rbx, r14	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000a5	           0xf92c0	                                 setb al	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000a8	        0x400f97c5	                                seta bpl	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000ac	            0x29c5	                            sub ebp, eax	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000ae	      0xb800000000	                              mov eax, 0	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000b3	        0x400fbeed	                          movsx ebp, bpl	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000b7	            0x85ed	                           test ebp, ebp	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000b9	            0x7516	                           jne 0x40000d1	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000bb	      0xe918010000	                           jmp 0x40001d8	       111	clean.c	FUNCTION_2	IF_2	CALL_3
0x40000c0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_50	DO_1
0x40000c4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_50	DO_1
0x40000c8	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_50	DO_1
0x40000cb	     0xf857f000000	                           jne 0x4000150	       488	git-compat-util.h	FUNCTION_50	DO_1
0x40000d1	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x40000d4	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x40000d6	            0x75e8	                           jne 0x40000c0	       484	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x40000d8	      0xbe00000000	                              mov esi, 0	        87	clean.c	FUNCTION_1	IF_1	CALL_1
0x40000dd	          0x4889df	                            mov rdi, rbx	        87	clean.c	FUNCTION_1	IF_1	CALL_1
0x40000e0	      0xe800000000	                          call 0x40000e5	        87	clean.c	FUNCTION_1	IF_1	CALL_1
0x40000e5	            0x85c0	                           test eax, eax	        87	clean.c	FUNCTION_1	IF_1	CALL_1
0x40000e7	            0x7431	                            je 0x400011a	        87	clean.c	FUNCTION_1	IF_1	CALL_1
0x40000e9	      0xbe00000000	                              mov esi, 0	        89	clean.c	FUNCTION_1	IF_2	CALL_2
0x40000ee	          0x4889df	                            mov rdi, rbx	        89	clean.c	FUNCTION_1	IF_2	CALL_2
0x40000f1	      0xe800000000	                          call 0x40000f6	        89	clean.c	FUNCTION_1	IF_2	CALL_2
0x40000f6	            0x85c0	                           test eax, eax	        89	clean.c	FUNCTION_1	IF_2	CALL_2
0x40000f8	     0xf84fa000000	                            je 0x40001f8	        89	clean.c	FUNCTION_1	IF_2	CALL_2
0x40000fe	      0xbe00000000	                              mov esi, 0	        91	clean.c	FUNCTION_1	IF_3	CALL_3
0x4000103	          0x4889df	                            mov rdi, rbx	        91	clean.c	FUNCTION_1	IF_3	CALL_3
0x4000106	      0xe800000000	                          call 0x400010b	        91	clean.c	FUNCTION_1	IF_3	CALL_3
0x400010b	            0x89c2	                            mov edx, eax	        91	clean.c	FUNCTION_1	IF_3	CALL_3
0x400010d	      0xb802000000	                              mov eax, 2	        92	clean.c	FUNCTION_1	IF_3
0x4000112	            0x85d2	                           test edx, edx	        91	clean.c	FUNCTION_1	IF_3	CALL_3
0x4000114	     0xf85e8000000	                           jne 0x4000202	        91	clean.c	FUNCTION_1	IF_3	CALL_3
0x400011a	          0x4d85e4	                           test r12, r12	       119	clean.c	FUNCTION_2	IF_3	IF_5
0x400011d	     0xf843d010000	                            je 0x4000260	       119	clean.c	FUNCTION_2	IF_3	IF_5
0x4000123	            0x4898	                                    cdqe	       121	clean.c	FUNCTION_2	IF_3	CALL_8
0x4000125	          0x4c89e7	                            mov rdi, r12	       121	clean.c	FUNCTION_2	IF_3	CALL_8
0x4000128	        0x488d0480	                  lea rax, [rax + rax*4]	       121	clean.c	FUNCTION_2	IF_3	CALL_8
0x400012c	              0x5b	                                 pop rbx	       131	clean.c	FUNCTION_2
0x400012d	          0x4889c6	                            mov rsi, rax	       121	clean.c	FUNCTION_2	IF_3	CALL_8
0x4000130	              0x5d	                                 pop rbp	       131	clean.c	FUNCTION_2
0x4000131	            0x415c	                                 pop r12	       131	clean.c	FUNCTION_2
0x4000133	            0x415d	                                 pop r13	       131	clean.c	FUNCTION_2
0x4000135	            0x415e	                                 pop r14	       131	clean.c	FUNCTION_2
0x4000137	        0x48c1e604	                              shl rsi, 4	       121	clean.c	FUNCTION_2	IF_3	CALL_8
0x400013b	          0x4829c6	                            sub rsi, rax	       121	clean.c	FUNCTION_2	IF_3	CALL_8
0x400013e	    0x4881c6000000	                              add rsi, 0	       121	clean.c	FUNCTION_2	IF_3	CALL_8
0x4000145	      0xe900000000	                           jmp 0x400014a	       121	clean.c	FUNCTION_2	IF_3	CALL_8
0x400014a	    0x660f1f440000	                    nop word [rax + rax]	       121	clean.c	FUNCTION_2	IF_3	CALL_8
0x4000150	      0xbf00000000	                              mov edi, 0	       124	clean.c	FUNCTION_2	IF_6	CALL_9
0x4000155	      0xb913000000	                           mov ecx, 0x13	       124	clean.c	FUNCTION_2	IF_6	CALL_9
0x400015a	          0x4c89f6	                            mov rsi, r14	       124	clean.c	FUNCTION_2	IF_6	CALL_9
0x400015d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       124	clean.c	FUNCTION_2	IF_6	CALL_9
0x400015f	        0x400f97c5	                                seta bpl	       124	clean.c	FUNCTION_2	IF_6	CALL_9
0x4000163	           0xf92c0	                                 setb al	       124	clean.c	FUNCTION_2	IF_6	CALL_9
0x4000166	            0x29c5	                            sub ebp, eax	       124	clean.c	FUNCTION_2	IF_6	CALL_9
0x4000168	        0x400fbeed	                          movsx ebp, bpl	       124	clean.c	FUNCTION_2	IF_6	CALL_9
0x400016c	            0x85ed	                           test ebp, ebp	       124	clean.c	FUNCTION_2	IF_6	CALL_9
0x400016e	            0x7440	                            je 0x40001b0	       124	clean.c	FUNCTION_2	IF_6	CALL_9
0x4000170	              0x5b	                                 pop rbx	       131	clean.c	FUNCTION_2
0x4000171	          0x4c89ea	                            mov rdx, r13	       130	clean.c	FUNCTION_2	CALL_11
0x4000174	          0x4c89e6	                            mov rsi, r12	       130	clean.c	FUNCTION_2	CALL_11
0x4000177	          0x4c89f7	                            mov rdi, r14	       130	clean.c	FUNCTION_2	CALL_11
0x400017a	              0x5d	                                 pop rbp	       131	clean.c	FUNCTION_2
0x400017b	            0x415c	                                 pop r12	       131	clean.c	FUNCTION_2
0x400017d	            0x415d	                                 pop r13	       131	clean.c	FUNCTION_2
0x400017f	            0x415e	                                 pop r14	       131	clean.c	FUNCTION_2
0x4000181	      0xe900000000	                           jmp 0x4000186	       130	clean.c	FUNCTION_2	CALL_11
0x4000186	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       130	clean.c	FUNCTION_2	CALL_11
0x4000190	              0x5b	                                 pop rbx	       131	clean.c	FUNCTION_2
0x4000191	          0x4c89e6	                            mov rsi, r12	       107	clean.c	FUNCTION_2	CALL_2
0x4000194	          0x4c89f7	                            mov rdi, r14	       107	clean.c	FUNCTION_2	CALL_2
0x4000197	      0xb900000000	                              mov ecx, 0	       107	clean.c	FUNCTION_2	CALL_2
0x400019c	              0x5d	                                 pop rbp	       131	clean.c	FUNCTION_2
0x400019d	            0x415c	                                 pop r12	       131	clean.c	FUNCTION_2
0x400019f	            0x415d	                                 pop r13	       131	clean.c	FUNCTION_2
0x40001a1	            0x415e	                                 pop r14	       131	clean.c	FUNCTION_2
0x40001a3	      0xba00000000	                              mov edx, 0	       107	clean.c	FUNCTION_2	CALL_2
0x40001a8	      0xe900000000	                           jmp 0x40001ad	       107	clean.c	FUNCTION_2	CALL_2
0x40001ad	           0xf1f00	                         nop dword [rax]	       107	clean.c	FUNCTION_2	CALL_2
0x40001b0	          0x4c89e6	                            mov rsi, r12	       125	clean.c	FUNCTION_2	IF_6	CALL_10
0x40001b3	          0x4c89f7	                            mov rdi, r14	       125	clean.c	FUNCTION_2	IF_6	CALL_10
0x40001b6	      0xe800000000	                          call 0x40001bb	       125	clean.c	FUNCTION_2	IF_6	CALL_10
0x40001bb	            0x85c0	                           test eax, eax	       125	clean.c	FUNCTION_2	IF_6	CALL_10
0x40001bd	           0xf94c0	                                 sete al	       125	clean.c	FUNCTION_2	IF_6	CALL_10
0x40001c0	           0xfb6c0	                           movzx eax, al	       125	clean.c	FUNCTION_2	IF_6	CALL_10
0x40001c3	    0x890500000000	            mov dword [0x040001c9], eax 	       125	clean.c	FUNCTION_2	IF_6	CALL_10
0x40001c9	              0x5b	                                 pop rbx	       131	clean.c	FUNCTION_2
0x40001ca	            0x89e8	                            mov eax, ebp	       131	clean.c	FUNCTION_2
0x40001cc	              0x5d	                                 pop rbp	       131	clean.c	FUNCTION_2
0x40001cd	            0x415c	                                 pop r12	       131	clean.c	FUNCTION_2
0x40001cf	            0x415d	                                 pop r13	       131	clean.c	FUNCTION_2
0x40001d1	            0x415e	                                 pop r14	       131	clean.c	FUNCTION_2
0x40001d3	              0xc3	                                     ret	       131	clean.c	FUNCTION_2
0x40001d4	         0xf1f4000	                         nop dword [rax]	       131	clean.c	FUNCTION_2
0x40001d8	          0x4c89e6	                            mov rsi, r12	       112	clean.c	FUNCTION_2	IF_2	CALL_4
0x40001db	          0x4c89f7	                            mov rdi, r14	       112	clean.c	FUNCTION_2	IF_2	CALL_4
0x40001de	      0xe800000000	                          call 0x40001e3	       112	clean.c	FUNCTION_2	IF_2	CALL_4
0x40001e3	              0x5b	                                 pop rbx	       131	clean.c	FUNCTION_2
0x40001e4	    0x890500000000	            mov dword [0x040001ea], eax 	       112	clean.c	FUNCTION_2	IF_2	CALL_4
0x40001ea	            0x89e8	                            mov eax, ebp	       131	clean.c	FUNCTION_2
0x40001ec	              0x5d	                                 pop rbp	       131	clean.c	FUNCTION_2
0x40001ed	            0x415c	                                 pop r12	       131	clean.c	FUNCTION_2
0x40001ef	            0x415d	                                 pop r13	       131	clean.c	FUNCTION_2
0x40001f1	            0x415e	                                 pop r14	       131	clean.c	FUNCTION_2
0x40001f3	              0xc3	                                     ret	       131	clean.c	FUNCTION_2
0x40001f4	         0xf1f4000	                         nop dword [rax]	       131	clean.c	FUNCTION_2
0x40001f8	      0xb801000000	                              mov eax, 1	        90	clean.c	FUNCTION_1	IF_2
0x40001fd	      0xe918ffffff	                           jmp 0x400011a	        90	clean.c	FUNCTION_1	IF_2
0x4000202	      0xbe00000000	                              mov esi, 0	        93	clean.c	FUNCTION_1	IF_4	CALL_4
0x4000207	          0x4889df	                            mov rdi, rbx	        93	clean.c	FUNCTION_1	IF_4	CALL_4
0x400020a	      0xe800000000	                          call 0x400020f	        93	clean.c	FUNCTION_1	IF_4	CALL_4
0x400020f	            0x89c2	                            mov edx, eax	        93	clean.c	FUNCTION_1	IF_4	CALL_4
0x4000211	      0xb803000000	                              mov eax, 3	        94	clean.c	FUNCTION_1	IF_4
0x4000216	            0x85d2	                           test edx, edx	        93	clean.c	FUNCTION_1	IF_4	CALL_4
0x4000218	     0xf84fcfeffff	                            je 0x400011a	        93	clean.c	FUNCTION_1	IF_4	CALL_4
0x400021e	      0xbe00000000	                              mov esi, 0	        95	clean.c	FUNCTION_1	IF_5	CALL_5
0x4000223	          0x4889df	                            mov rdi, rbx	        95	clean.c	FUNCTION_1	IF_5	CALL_5
0x4000226	      0xe800000000	                          call 0x400022b	        95	clean.c	FUNCTION_1	IF_5	CALL_5
0x400022b	            0x89c2	                            mov edx, eax	        95	clean.c	FUNCTION_1	IF_5	CALL_5
0x400022d	      0xb804000000	                              mov eax, 4	        96	clean.c	FUNCTION_1	IF_5
0x4000232	            0x85d2	                           test edx, edx	        95	clean.c	FUNCTION_1	IF_5	CALL_5
0x4000234	     0xf84e0feffff	                            je 0x400011a	        95	clean.c	FUNCTION_1	IF_5	CALL_5
0x400023a	      0xbe00000000	                              mov esi, 0	        97	clean.c	FUNCTION_1	IF_6	CALL_6
0x400023f	          0x4889df	                            mov rdi, rbx	        97	clean.c	FUNCTION_1	IF_6	CALL_6
0x4000242	            0x31ed	                            xor ebp, ebp	       118	clean.c	FUNCTION_2	IF_3	IF_4
0x4000244	      0xe800000000	                          call 0x4000249	        97	clean.c	FUNCTION_1	IF_6	CALL_6
0x4000249	            0x89c2	                            mov edx, eax	        97	clean.c	FUNCTION_1	IF_6	CALL_6
0x400024b	      0xb805000000	                              mov eax, 5	        98	clean.c	FUNCTION_1	IF_6
0x4000250	            0x85d2	                           test edx, edx	        97	clean.c	FUNCTION_1	IF_6	CALL_6
0x4000252	     0xf84c2feffff	                            je 0x400011a	        97	clean.c	FUNCTION_1	IF_6	CALL_6
0x4000258	      0xe96cffffff	                           jmp 0x40001c9	        97	clean.c	FUNCTION_1	IF_6	CALL_6
0x400025d	           0xf1f00	                         nop dword [rax]	        97	clean.c	FUNCTION_1	IF_6	CALL_6
0x4000260	          0x4c89f7	                            mov rdi, r14	       120	clean.c	FUNCTION_2	IF_3	CALL_7
0x4000263	      0xbdffffffff	                     mov ebp, 0xffffffff	       120	clean.c	FUNCTION_2	IF_3	CALL_7
0x4000268	      0xe800000000	                          call 0x400026d	       120	clean.c	FUNCTION_2	IF_3	CALL_7
0x400026d	      0xe957ffffff	                           jmp 0x40001c9	       120	clean.c	FUNCTION_2	IF_3	CALL_7
clean_cmd	DO,0:ELSE,0:CALL,0:FOR,0:WHILE,0:IF,0:SWITCH,0:functions,0	2
0x4000040	      0xb80a000000	                            mov eax, 0xa	       645	clean.c	FUNCTION_14
0x4000045	              0xc3	                                     ret	       645	clean.c	FUNCTION_14
pretty_print_dels	DO,0:ELSE,0:CALL,4:FOR,0:WHILE,0:IF,0:SWITCH,0:functions,1	69
0x40002d0	            0x4154	                                push r12	       261	clean.c	FUNCTION_7
0x40002d2	              0x55	                                push rbp	       261	clean.c	FUNCTION_7
0x40002d3	              0x53	                                push rbx	       261	clean.c	FUNCTION_7
0x40002d4	        0x4883ec70	                           sub rsp, 0x70	       261	clean.c	FUNCTION_7
0x40002d8	    0x488b1d000000	            mov rbx, qword [0x040002df] 	       268	clean.c	FUNCTION_7	FUNCTION_1
0x40002df	    0x64488b042528	                mov rax, qword fs:[0x28]	       261	clean.c	FUNCTION_7
0x40002e8	      0x4889442468	             mov qword [rsp + 0x68], rax	       261	clean.c	FUNCTION_7
0x40002ed	            0x31c0	                            xor eax, eax	       261	clean.c	FUNCTION_7
0x40002ef	      0x804c245001	                 or byte [rsp + 0x50], 1	       262	clean.c	FUNCTION_7
0x40002f4	    0x48c744244000	               mov qword [rsp + 0x40], 0	       262	clean.c	FUNCTION_7
0x40002fd	          0x4885db	                           test rbx, rbx	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000300	    0xc74424480000	               mov dword [rsp + 0x48], 0	       262	clean.c	FUNCTION_7
0x4000308	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       262	clean.c	FUNCTION_7
0x4000310	    0x48c744245800	               mov qword [rsp + 0x58], 0	       262	clean.c	FUNCTION_7
0x4000319	    0x48c704240000	                      mov qword [rsp], 0	       264	clean.c	FUNCTION_7
0x4000321	    0x48c744240800	                  mov qword [rsp + 8], 0	       264	clean.c	FUNCTION_7
0x400032a	    0x48c744241000	               mov qword [rsp + 0x10], 0	       264	clean.c	FUNCTION_7
0x4000333	     0xf84c8000000	                            je 0x4000401	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000339	    0x8b0500000000	            mov eax, dword [0x0400033f] 	       268	clean.c	FUNCTION_7	FUNCTION_1
0x400033f	        0x48c1e004	                              shl rax, 4	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000343	          0x4801d8	                            add rax, rbx	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000346	          0x4839c3	                            cmp rbx, rax	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000349	     0xf83b2000000	                           jae 0x4000401	       268	clean.c	FUNCTION_7	FUNCTION_1
0x400034f	      0x488d6c2440	                   lea rbp, [rsp + 0x40]	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000354	          0x4989e4	                            mov r12, rsp	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000357	            0xeb1d	                           jmp 0x4000376	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000359	     0xf1f80000000	                         nop dword [rax]	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000360	    0x8b0500000000	            mov eax, dword [0x04000366] 	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000366	        0x48c1e004	                              shl rax, 4	       268	clean.c	FUNCTION_7	FUNCTION_1
0x400036a	    0x480305000000	             add rax, qword [0x04000371]	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000371	          0x4839c3	                            cmp rbx, rax	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000374	            0x731e	                           jae 0x4000394	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000376	          0x488b3b	                    mov rdi, qword [rbx]	       269	clean.c	FUNCTION_7	FUNCTION_1	CALL_1
0x4000379	            0x31f6	                            xor esi, esi	       269	clean.c	FUNCTION_7	FUNCTION_1	CALL_1
0x400037b	          0x4c89e2	                            mov rdx, r12	       269	clean.c	FUNCTION_7	FUNCTION_1	CALL_1
0x400037e	      0xe800000000	                          call 0x4000383	       269	clean.c	FUNCTION_7	FUNCTION_1	CALL_1
0x4000383	          0x4889ef	                            mov rdi, rbp	       270	clean.c	FUNCTION_7	FUNCTION_1	CALL_2
0x4000386	          0x4889c6	                            mov rsi, rax	       270	clean.c	FUNCTION_7	FUNCTION_1	CALL_2
0x4000389	      0xe800000000	                          call 0x400038e	       270	clean.c	FUNCTION_7	FUNCTION_1	CALL_2
0x400038e	        0x4883c310	                           add rbx, 0x10	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000392	            0x75cc	                           jne 0x4000360	       268	clean.c	FUNCTION_7	FUNCTION_1
0x4000394	    0x8b3500000000	            mov esi, dword [0x0400039a] 	       277	clean.c	FUNCTION_7
0x400039a	      0x488d542420	                   lea rdx, [rsp + 0x20]	       281	clean.c	FUNCTION_7	CALL_2
0x400039f	          0x4889ef	                            mov rdi, rbp	       281	clean.c	FUNCTION_7	CALL_2
0x40003a2	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_85	CALL_6
0x40003ab	    0x48c744243000	               mov qword [rsp + 0x30], 0	        90	string3.h	FUNCTION_85	CALL_6
0x40003b4	    0x48c744242800	               mov qword [rsp + 0x28], 0	       279	clean.c	FUNCTION_7
0x40003bd	    0xc74424240200	               mov dword [rsp + 0x24], 2	       280	clean.c	FUNCTION_7
0x40003c5	          0x83e6cf	                     and esi, 0xffffffcf	       277	clean.c	FUNCTION_7
0x40003c8	          0x83ce10	                            or esi, 0x10	       277	clean.c	FUNCTION_7
0x40003cb	    0x893500000000	            mov dword [0x040003d1], esi 	       277	clean.c	FUNCTION_7
0x40003d1	      0xe800000000	                          call 0x40003d6	       281	clean.c	FUNCTION_7	CALL_2
0x40003d6	          0x4c89e7	                            mov rdi, r12	       282	clean.c	FUNCTION_7	CALL_3
0x40003d9	      0xe800000000	                          call 0x40003de	       282	clean.c	FUNCTION_7	CALL_3
0x40003de	            0x31f6	                            xor esi, esi	       283	clean.c	FUNCTION_7	CALL_4
0x40003e0	          0x4889ef	                            mov rdi, rbp	       283	clean.c	FUNCTION_7	CALL_4
0x40003e3	      0xe800000000	                          call 0x40003e8	       283	clean.c	FUNCTION_7	CALL_4
0x40003e8	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       284	clean.c	FUNCTION_7
0x40003ed	    0x644833042528	                xor rax, qword fs:[0x28]	       284	clean.c	FUNCTION_7
0x40003f6	            0x7513	                           jne 0x400040b	       284	clean.c	FUNCTION_7
0x40003f8	        0x4883c470	                           add rsp, 0x70	       284	clean.c	FUNCTION_7
0x40003fc	              0x5b	                                 pop rbx	       284	clean.c	FUNCTION_7
0x40003fd	              0x5d	                                 pop rbp	       284	clean.c	FUNCTION_7
0x40003fe	            0x415c	                                 pop r12	       284	clean.c	FUNCTION_7
0x4000400	              0xc3	                                     ret	       284	clean.c	FUNCTION_7
0x4000401	      0x488d6c2440	                   lea rbp, [rsp + 0x40]	       284	clean.c	FUNCTION_7
0x4000406	          0x4989e4	                            mov r12, rsp	       284	clean.c	FUNCTION_7
0x4000409	            0xeb89	                           jmp 0x4000394	       284	clean.c	FUNCTION_7
0x400040b	      0xe800000000	                       call sym.quit_cmd	       284	clean.c	FUNCTION_7
select_by_numbers_cmd	DO,0:ELSE,2:CALL,3:FOR,1:WHILE,0:IF,2:SWITCH,0:functions,0	52
0x40015d0	              0x53	                                push rbx	       714	clean.c	FUNCTION_16
0x40015d1	        0x4883ec30	                           sub rsp, 0x30	       714	clean.c	FUNCTION_16
0x40015d5	    0x64488b042528	                mov rax, qword fs:[0x28]	       714	clean.c	FUNCTION_16
0x40015de	      0x4889442428	             mov qword [rsp + 0x28], rax	       714	clean.c	FUNCTION_16
0x40015e3	            0x31c0	                            xor eax, eax	       714	clean.c	FUNCTION_16
0x40015e5	    0x8b0500000000	            mov eax, dword [0x040015eb] 	       727	clean.c	FUNCTION_16
0x40015eb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       729	clean.c	FUNCTION_16	CALL_1
0x40015f0	          0x4889e6	                            mov rsi, rsp	       729	clean.c	FUNCTION_16	CALL_1
0x40015f3	    0x48c744241000	               mov qword [rsp + 0x10], 0	       721	clean.c	FUNCTION_16
0x40015fc	    0x48c744241800	               mov qword [rsp + 0x18], 0	       722	clean.c	FUNCTION_16
0x4001605	    0xc74424200000	               mov dword [rsp + 0x20], 0	       723	clean.c	FUNCTION_16
0x400160d	    0xc70424010000	                      mov dword [rsp], 1	       725	clean.c	FUNCTION_16
0x4001614	    0x48c744240800	                  mov qword [rsp + 8], 0	       726	clean.c	FUNCTION_16
0x400161d	        0x89442404	                mov dword [rsp + 4], eax	       727	clean.c	FUNCTION_16
0x4001621	      0xe8caf2ffff	                call sym.list_and_choose	       729	clean.c	FUNCTION_16	CALL_1
0x4001626	          0x4889c3	                            mov rbx, rax	       729	clean.c	FUNCTION_16	CALL_1
0x4001629	    0x8b0500000000	            mov eax, dword [0x0400162f] 	       731	clean.c	FUNCTION_16	FOR_1
0x400162f	            0x31ff	                            xor edi, edi	       731	clean.c	FUNCTION_16	FOR_1
0x4001631	            0x31d2	                            xor edx, edx	       731	clean.c	FUNCTION_16	FOR_1
0x4001633	    0x488b0d000000	            mov rcx, qword [0x0400163a] 	       730	clean.c	FUNCTION_16
0x400163a	            0x85c0	                           test eax, eax	       731	clean.c	FUNCTION_16	FOR_1
0x400163c	            0x7517	                           jne 0x4001655	       731	clean.c	FUNCTION_16	FOR_1
0x400163e	            0xeb38	                           jmp 0x4001678	       731	clean.c	FUNCTION_16	FOR_1
0x4001640	          0x488b01	                    mov rax, qword [rcx]	       740	clean.c	FUNCTION_16	FOR_1	ELSE_2
0x4001643	          0x83c201	                              add edx, 1	       731	clean.c	FUNCTION_16	FOR_1
0x4001646	        0x4883c110	                           add rcx, 0x10	       731	clean.c	FUNCTION_16	FOR_1
0x400164a	          0xc60000	                       mov byte [rax], 0	       740	clean.c	FUNCTION_16	FOR_1	ELSE_2
0x400164d	    0x391500000000	            cmp dword [0x04001653], edx 	       731	clean.c	FUNCTION_16	FOR_1
0x4001653	            0x7623	                           jbe 0x4001678	       731	clean.c	FUNCTION_16	FOR_1
0x4001655	          0x4863f7	                         movsxd rsi, edi	       732	clean.c	FUNCTION_16	FOR_1	IF_1
0x4001658	          0x3914b3	           cmp dword [rbx + rsi*4], edx 	       732	clean.c	FUNCTION_16	FOR_1	IF_1
0x400165b	            0x7fe3	                            jg 0x4001640	       732	clean.c	FUNCTION_16	FOR_1	IF_1
0x400165d	            0x75e1	                           jne 0x4001640	       734	clean.c	FUNCTION_16	FOR_1	ELSE_1	IF_2
0x400165f	          0x83c701	                              add edi, 1	       736	clean.c	FUNCTION_16	FOR_1	ELSE_1	IF_2
0x4001662	          0x83c201	                              add edx, 1	       731	clean.c	FUNCTION_16	FOR_1
0x4001665	        0x4883c110	                           add rcx, 0x10	       731	clean.c	FUNCTION_16	FOR_1
0x4001669	    0x391500000000	            cmp dword [0x0400166f], edx 	       731	clean.c	FUNCTION_16	FOR_1
0x400166f	            0x77e4	                            ja 0x4001655	       731	clean.c	FUNCTION_16	FOR_1
0x4001671	     0xf1f80000000	                         nop dword [rax]	       731	clean.c	FUNCTION_16	FOR_1
0x4001678	            0x31f6	                            xor esi, esi	       744	clean.c	FUNCTION_16	CALL_2
0x400167a	      0xbf00000000	                              mov edi, 0	       744	clean.c	FUNCTION_16	CALL_2
0x400167f	      0xe800000000	                          call 0x4001684	       744	clean.c	FUNCTION_16	CALL_2
0x4001684	          0x4889df	                            mov rdi, rbx	       746	clean.c	FUNCTION_16	CALL_3
0x4001687	      0xe800000000	                          call 0x400168c	       746	clean.c	FUNCTION_16	CALL_3
0x400168c	            0x31c0	                            xor eax, eax	       748	clean.c	FUNCTION_16
0x400168e	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       748	clean.c	FUNCTION_16
0x4001693	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       748	clean.c	FUNCTION_16
0x400169c	            0x7506	                           jne 0x40016a4	       748	clean.c	FUNCTION_16
0x400169e	        0x4883c430	                           add rsp, 0x30	       748	clean.c	FUNCTION_16
0x40016a2	              0x5b	                                 pop rbx	       748	clean.c	FUNCTION_16
0x40016a3	              0xc3	                                     ret	       748	clean.c	FUNCTION_16
0x40016a4	      0xe800000000	                          call 0x40016a9	       748	clean.c	FUNCTION_16
help_cmd	DO,0:ELSE,0:CALL,4:FOR,0:WHILE,0:IF,0:SWITCH,0:functions,0	15
0x4000450	        0x4883ec08	                              sub rsp, 8	       793	clean.c	FUNCTION_19
0x4000454	      0xbf04000000	                              mov edi, 4	       794	clean.c	FUNCTION_19	CALL_1
0x4000459	      0xe822feffff	              call sym.clean_print_color	       794	clean.c	FUNCTION_19	CALL_1
0x400045e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_25
0x4000463	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_25
0x4000468	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_25
0x400046a	      0xe800000000	                          call 0x400046f	        54	gettext.h	FUNCTION_25
0x400046f	          0x4889c7	                            mov rdi, rax	       795	clean.c	FUNCTION_19	CALL_3
0x4000472	            0x31c0	                            xor eax, eax	       795	clean.c	FUNCTION_19	CALL_3
0x4000474	      0xe800000000	                          call 0x4000479	       795	clean.c	FUNCTION_19	CALL_3
0x4000479	            0x31ff	                            xor edi, edi	       804	clean.c	FUNCTION_19	CALL_4
0x400047b	      0xe800feffff	              call sym.clean_print_color	       804	clean.c	FUNCTION_19	CALL_4
0x4000480	            0x31c0	                            xor eax, eax	       806	clean.c	FUNCTION_19
0x4000482	        0x4883c408	                              add rsp, 8	       806	clean.c	FUNCTION_19
0x4000486	              0xc3	                                     ret	       806	clean.c	FUNCTION_19
exclude_cb	DO,0:ELSE,0:CALL,1:FOR,0:WHILE,0:IF,0:SWITCH,0:functions,0	6
0x4000050	        0x4883ec08	                              sub rsp, 8	       146	clean.c	FUNCTION_5
0x4000054	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       148	clean.c	FUNCTION_5	CALL_1
0x4000058	      0xe800000000	                          call 0x400005d	       148	clean.c	FUNCTION_5	CALL_1
0x400005d	            0x31c0	                            xor eax, eax	       150	clean.c	FUNCTION_5
0x400005f	        0x4883c408	                              add rsp, 8	       150	clean.c	FUNCTION_5
0x4000063	              0xc3	                                     ret	       150	clean.c	FUNCTION_5
