am_append_signoff	CALL,3:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,0:functions,0	29
0x4000040	              0x53	                                push rbx	      1174	am.c	FUNCTION_36
0x4000041	          0x4889fb	                            mov rbx, rdi	      1174	am.c	FUNCTION_36
0x4000044	        0x4883ec20	                           sub rsp, 0x20	      1174	am.c	FUNCTION_36
0x4000048	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	      1177	am.c	FUNCTION_36	CALL_1
0x400004c	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	      1177	am.c	FUNCTION_36	CALL_1
0x4000050	          0x4889e7	                            mov rdi, rsp	      1177	am.c	FUNCTION_36	CALL_1
0x4000053	    0x48c704240000	                      mov qword [rsp], 0	      1175	am.c	FUNCTION_36
0x400005b	    0x48c744240800	                  mov qword [rsp + 8], 0	      1175	am.c	FUNCTION_36
0x4000064	    0x64488b042528	                mov rax, qword fs:[0x28]	      1174	am.c	FUNCTION_36
0x400006d	      0x4889442418	             mov qword [rsp + 0x18], rax	      1174	am.c	FUNCTION_36
0x4000072	            0x31c0	                            xor eax, eax	      1174	am.c	FUNCTION_36
0x4000074	          0x4889d1	                            mov rcx, rdx	      1177	am.c	FUNCTION_36	CALL_1
0x4000077	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1175	am.c	FUNCTION_36
0x4000080	      0xe800000000	                          call 0x4000085	      1177	am.c	FUNCTION_36	CALL_1
0x4000085	            0x31d2	                            xor edx, edx	      1178	am.c	FUNCTION_36	CALL_2
0x4000087	            0x31f6	                            xor esi, esi	      1178	am.c	FUNCTION_36	CALL_2
0x4000089	          0x4889e7	                            mov rdi, rsp	      1178	am.c	FUNCTION_36	CALL_2
0x400008c	      0xe800000000	                          call 0x4000091	      1178	am.c	FUNCTION_36	CALL_2
0x4000091	        0x488d7330	                   lea rsi, [rbx + 0x30]	      1179	am.c	FUNCTION_36	CALL_3
0x4000095	          0x4889e7	                            mov rdi, rsp	      1179	am.c	FUNCTION_36	CALL_3
0x4000098	      0xe800000000	                          call 0x400009d	      1179	am.c	FUNCTION_36	CALL_3
0x400009d	        0x48894328	             mov qword [rbx + 0x28], rax	      1179	am.c	FUNCTION_36	CALL_3
0x40000a1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1180	am.c	FUNCTION_36
0x40000a6	    0x644833042528	                xor rax, qword fs:[0x28]	      1180	am.c	FUNCTION_36
0x40000af	            0x7506	                           jne 0x40000b7	      1180	am.c	FUNCTION_36
0x40000b1	        0x4883c420	                           add rsp, 0x20	      1180	am.c	FUNCTION_36
0x40000b5	              0x5b	                                 pop rbx	      1180	am.c	FUNCTION_36
0x40000b6	              0xc3	                                     ret	      1180	am.c	FUNCTION_36
0x40000b7	      0xe800000000	                          call 0x40000bc	      1180	am.c	FUNCTION_36
say	CALL,4:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,1:functions,0	42
0x4000740	              0x53	                                push rbx	       212	am.c	FUNCTION_10
0x4000741	          0x4889f3	                            mov rbx, rsi	       212	am.c	FUNCTION_10
0x4000744	    0x4881ecd00000	                           sub rsp, 0xd0	       212	am.c	FUNCTION_10
0x400074b	            0x84c0	                             test al, al	       212	am.c	FUNCTION_10
0x400074d	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       212	am.c	FUNCTION_10
0x4000752	      0x4c89442440	              mov qword [rsp + 0x40], r8	       212	am.c	FUNCTION_10
0x4000757	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       212	am.c	FUNCTION_10
0x400075c	            0x7437	                            je 0x4000795	       212	am.c	FUNCTION_10
0x400075e	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       212	am.c	FUNCTION_10
0x4000763	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       212	am.c	FUNCTION_10
0x4000768	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       212	am.c	FUNCTION_10
0x400076d	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       212	am.c	FUNCTION_10
0x4000775	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       212	am.c	FUNCTION_10
0x400077d	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       212	am.c	FUNCTION_10
0x4000785	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       212	am.c	FUNCTION_10
0x400078d	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       212	am.c	FUNCTION_10
0x4000795	    0x64488b042528	                mov rax, qword fs:[0x28]	       212	am.c	FUNCTION_10
0x400079e	      0x4889442418	             mov qword [rsp + 0x18], rax	       212	am.c	FUNCTION_10
0x40007a3	            0x31c0	                            xor eax, eax	       212	am.c	FUNCTION_10
0x40007a5	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       215	am.c	FUNCTION_10	CALL_1
0x40007ad	      0x4889442408	                mov qword [rsp + 8], rax	       215	am.c	FUNCTION_10	CALL_1
0x40007b2	      0x488d442420	                   lea rax, [rsp + 0x20]	       215	am.c	FUNCTION_10	CALL_1
0x40007b7	    0xc70424180000	                   mov dword [rsp], 0x18	       215	am.c	FUNCTION_10	CALL_1
0x40007be	    0xc74424043000	               mov dword [rsp + 4], 0x30	       215	am.c	FUNCTION_10	CALL_1
0x40007c6	      0x4889442410	             mov qword [rsp + 0x10], rax	       215	am.c	FUNCTION_10	CALL_1
0x40007cb	          0x8b4758	            mov eax, dword [rdi + 0x58] 	       216	am.c	FUNCTION_10	IF_1
0x40007ce	            0x85c0	                           test eax, eax	       216	am.c	FUNCTION_10	IF_1
0x40007d0	            0x751d	                           jne 0x40007ef	       216	am.c	FUNCTION_10	IF_1
0x40007d2	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_94	CALL_1
0x40007d7	          0x4889df	                            mov rdi, rbx	       127	stdio2.h	FUNCTION_94	CALL_1
0x40007da	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_94	CALL_1
0x40007dd	      0xe800000000	                          call 0x40007e2	       127	stdio2.h	FUNCTION_94	CALL_1
0x40007e2	          0x4889de	                            mov rsi, rbx	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x40007e5	      0xbf0a000000	                            mov edi, 0xa	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x40007ea	      0xe800000000	                          call 0x40007ef	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x40007ef	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       221	am.c	FUNCTION_10
0x40007f4	    0x644833042528	                xor rax, qword fs:[0x28]	       221	am.c	FUNCTION_10
0x40007fd	            0x7509	                           jne 0x4000808	       221	am.c	FUNCTION_10
0x40007ff	    0x4881c4d00000	                           add rsp, 0xd0	       221	am.c	FUNCTION_10
0x4000806	              0x5b	                                 pop rbx	       221	am.c	FUNCTION_10
0x4000807	              0xc3	                                     ret	       221	am.c	FUNCTION_10
0x4000808	      0xe800000000	                          call 0x400080d	       221	am.c	FUNCTION_10
write_state_count	CALL,2:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,0:functions,0	13
0x40002d0	              0x53	                                push rbx	       197	am.c	FUNCTION_8
0x40002d1	            0x89d3	                            mov ebx, edx	       197	am.c	FUNCTION_8
0x40002d3	          0x4889f2	                            mov rdx, rsi	       183	am.c	FUNCTION_6	CALL_1
0x40002d6	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x40002d9	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40002db	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40002e0	      0xe800000000	                          call 0x40002e5	       183	am.c	FUNCTION_6	CALL_1
0x40002e5	            0x89da	                            mov edx, ebx	       198	am.c	FUNCTION_8	CALL_2
0x40002e7	          0x4889c7	                            mov rdi, rax	       198	am.c	FUNCTION_8	CALL_2
0x40002ea	      0xbe00000000	                              mov esi, 0	       198	am.c	FUNCTION_8	CALL_2
0x40002ef	              0x5b	                                 pop rbx	       199	am.c	FUNCTION_8
0x40002f0	            0x31c0	                            xor eax, eax	       198	am.c	FUNCTION_8	CALL_2
0x40002f2	      0xe900000000	                           jmp 0x40002f7	       198	am.c	FUNCTION_8	CALL_2
fall_back_threeway	CALL,25:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,8:functions,0	208
0x40021d0	            0x4155	                                push r13	      1537	am.c	FUNCTION_45
0x40021d2	            0x4154	                                push r12	      1537	am.c	FUNCTION_45
0x40021d4	              0x55	                                push rbp	      1537	am.c	FUNCTION_45
0x40021d5	              0x53	                                push rbx	      1537	am.c	FUNCTION_45
0x40021d6	          0x4889f5	                            mov rbp, rsi	      1537	am.c	FUNCTION_45
0x40021d9	          0x4889fb	                            mov rbx, rdi	      1537	am.c	FUNCTION_45
0x40021dc	      0xbf00000000	                              mov edi, 0	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x40021e1	    0x4881ec980900	                          sub rsp, 0x998	      1537	am.c	FUNCTION_45
0x40021e8	      0x4c8d6c2470	                   lea r13, [rsp + 0x70]	      1539	am.c	FUNCTION_45
0x40021ed	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x40021f5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1537	am.c	FUNCTION_45
0x40021fe	    0x488984248809	            mov qword [rsp + 0x988], rax	      1537	am.c	FUNCTION_45
0x4002206	            0x31c0	                            xor eax, eax	      1537	am.c	FUNCTION_45
0x4002208	      0x4c896c2460	             mov qword [rsp + 0x60], r13	      1539	am.c	FUNCTION_45
0x400220d	      0xe800000000	                          call 0x4002212	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4002212	            0x85c0	                           test eax, eax	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4002214	     0xf882e020000	                            js 0x4002448	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x400221a	      0x4c8d642408	                      lea r12, [rsp + 8]	      1522	am.c	FUNCTION_44	CALL_1
0x400221f	            0x31c0	                            xor eax, eax	      1519	am.c	FUNCTION_44
0x4002221	          0x4889e7	                            mov rdi, rsp	      1519	am.c	FUNCTION_44
0x4002224	      0xb90c000000	                            mov ecx, 0xc	      1519	am.c	FUNCTION_44
0x4002229	      0xbe00000000	                              mov esi, 0	      1522	am.c	FUNCTION_44	CALL_1
0x400222e	          0xf348ab	              rep stosq qword [rdi], rax	      1519	am.c	FUNCTION_44
0x4002231	          0x4c89e7	                            mov rdi, r12	      1522	am.c	FUNCTION_44	CALL_1
0x4002234	    0x48c744240800	                  mov qword [rsp + 8], 0	      1519	am.c	FUNCTION_44
0x400223d	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1519	am.c	FUNCTION_44
0x4002246	      0xc644244808	                mov byte [rsp + 0x48], 8	      1521	am.c	FUNCTION_44
0x400224b	      0xe800000000	                          call 0x4002250	      1522	am.c	FUNCTION_44	CALL_1
0x4002250	        0x488b7370	            mov rsi, qword [rbx + 0x70] 	      1523	am.c	FUNCTION_44	CALL_2
0x4002254	          0x4c89e7	                            mov rdi, r12	      1523	am.c	FUNCTION_44	CALL_2
0x4002257	      0xe800000000	                          call 0x400225c	      1523	am.c	FUNCTION_44	CALL_2
0x400225c	            0x31c0	                            xor eax, eax	      1524	am.c	FUNCTION_44	CALL_3
0x400225e	          0x4889ea	                            mov rdx, rbp	      1524	am.c	FUNCTION_44	CALL_3
0x4002261	      0xbe00000000	                              mov esi, 0	      1524	am.c	FUNCTION_44	CALL_3
0x4002266	          0x4c89e7	                            mov rdi, r12	      1524	am.c	FUNCTION_44	CALL_3
0x4002269	      0xe800000000	                          call 0x400226e	      1524	am.c	FUNCTION_44	CALL_3
0x400226e	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4002271	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002276	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400227b	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x400227d	      0xe800000000	                          call 0x4002282	       183	am.c	FUNCTION_6	CALL_1
0x4002282	          0x4c89e7	                            mov rdi, r12	      1525	am.c	FUNCTION_44	CALL_5
0x4002285	          0x4889c6	                            mov rsi, rax	      1525	am.c	FUNCTION_44	CALL_5
0x4002288	      0xe800000000	                          call 0x400228d	      1525	am.c	FUNCTION_44	CALL_5
0x400228d	          0x4889e7	                            mov rdi, rsp	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x4002290	      0xe800000000	                          call 0x4002295	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x4002295	            0x85c0	                           test eax, eax	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x4002297	     0xf85a3020000	                           jne 0x4002540	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x400229d	      0xbf00000000	                              mov edi, 0	      1550	am.c	FUNCTION_45
0x40022a2	      0xe800000000	                          call 0x40022a7	      1550	am.c	FUNCTION_45
0x40022a7	      0xe800000000	                          call 0x40022ac	      1551	am.c	FUNCTION_45
0x40022ac	          0x4889ee	                            mov rsi, rbp	      1551	am.c	FUNCTION_45
0x40022af	          0x4889c2	                            mov rdx, rax	      1551	am.c	FUNCTION_45
0x40022b2	      0xbf00000000	                              mov edi, 0	      1551	am.c	FUNCTION_45
0x40022b7	      0xe800000000	                          call 0x40022bc	      1551	am.c	FUNCTION_45
0x40022bc	          0x4531c0	                            xor r8d, r8d	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40022bf	            0x31c9	                            xor ecx, ecx	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40022c1	          0x4889ea	                            mov rdx, rbp	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40022c4	      0xbe00000000	                              mov esi, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40022c9	          0x4c89ef	                            mov rdi, r13	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40022cc	      0xe800000000	                          call 0x40022d1	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40022d1	            0x85c0	                           test eax, eax	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40022d3	     0xf8587020000	                           jne 0x4002560	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40022d9	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x40022db	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x40022e0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x40022e5	      0xe800000000	                          call 0x40022ea	        54	gettext.h	FUNCTION_119
0x40022ea	    0x488b35000000	            mov rsi, qword [0x040022f1] 	      1556	am.c	FUNCTION_45	CALL_7
0x40022f1	          0x4889c2	                            mov rdx, rax	      1556	am.c	FUNCTION_45	CALL_7
0x40022f4	          0x4889df	                            mov rdi, rbx	      1556	am.c	FUNCTION_45	CALL_7
0x40022f7	            0x31c0	                            xor eax, eax	      1556	am.c	FUNCTION_45	CALL_7
0x40022f9	      0xe842e4ffff	                            call sym.say	      1556	am.c	FUNCTION_45	CALL_7
0x40022fe	          0x8b5358	            mov edx, dword [rbx + 0x58] 	      1558	am.c	FUNCTION_45	IF_4
0x4002301	            0x85d2	                           test edx, edx	      1558	am.c	FUNCTION_45	IF_4
0x4002303	     0xf8477010000	                            je 0x4002480	      1558	am.c	FUNCTION_45	IF_4
0x4002309	          0x4889ee	                            mov rsi, rbp	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x400230c	          0x4889df	                            mov rdi, rbx	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x400230f	      0xe83ce2ffff	                      call sym.run_apply	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x4002314	            0x85c0	                           test eax, eax	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x4002316	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x400231b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x4002320	     0xf85f7010000	                           jne 0x400251d	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x4002326	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400232e	          0x4531c0	                            xor r8d, r8d	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4002331	            0x31c9	                            xor ecx, ecx	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4002333	          0x4889ea	                            mov rdx, rbp	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4002336	      0xbe00000000	                              mov esi, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400233b	      0xe800000000	                          call 0x4002340	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4002340	            0x85c0	                           test eax, eax	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4002342	     0xf8528020000	                           jne 0x4002570	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4002348	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x400234a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x400234f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x4002354	      0xe800000000	                          call 0x4002359	        54	gettext.h	FUNCTION_119
0x4002359	    0x488b35000000	            mov rsi, qword [0x04002360] 	      1581	am.c	FUNCTION_45	CALL_17
0x4002360	          0x4889c2	                            mov rdx, rax	      1581	am.c	FUNCTION_45	CALL_17
0x4002363	          0x4889df	                            mov rdi, rbx	      1581	am.c	FUNCTION_45	CALL_17
0x4002366	            0x31c0	                            xor eax, eax	      1581	am.c	FUNCTION_45	CALL_17
0x4002368	      0xe8d3e3ffff	                            call sym.say	      1581	am.c	FUNCTION_45	CALL_17
0x400236d	      0xbf00000000	                              mov edi, 0	      1583	am.c	FUNCTION_45
0x4002372	      0xe800000000	                          call 0x4002377	      1583	am.c	FUNCTION_45
0x4002377	      0xbf00000000	                              mov edi, 0	      1584	am.c	FUNCTION_45
0x400237c	      0xe800000000	                          call 0x4002381	      1584	am.c	FUNCTION_45
0x4002381	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1594	am.c	FUNCTION_45	CALL_18
0x4002389	      0xe800000000	                          call 0x400238e	      1594	am.c	FUNCTION_45	CALL_18
0x400238e	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1597	am.c	FUNCTION_45	CALL_20
0x4002392	      0xbe0a000000	                            mov esi, 0xa	        57	am.c	FUNCTION_2
0x4002397	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	      1596	am.c	FUNCTION_45
0x40023a3	          0x4889ef	                            mov rdi, rbp	        57	am.c	FUNCTION_2
0x40023a6	      0xe800000000	                          call 0x40023ab	        57	am.c	FUNCTION_2
0x40023ab	          0x4829e8	                            sub rax, rbp	      1597	am.c	FUNCTION_45	CALL_20
0x40023ae	          0x4889ea	                            mov rdx, rbp	      1597	am.c	FUNCTION_45	CALL_20
0x40023b1	      0xbf00000000	                              mov edi, 0	      1597	am.c	FUNCTION_45	CALL_20
0x40023b6	          0x4889c6	                            mov rsi, rax	      1597	am.c	FUNCTION_45	CALL_20
0x40023b9	            0x31c0	                            xor eax, eax	      1597	am.c	FUNCTION_45	CALL_20
0x40023bb	      0xe800000000	                          call 0x40023c0	      1597	am.c	FUNCTION_45	CALL_20
0x40023c0	          0x4989c4	                            mov r12, rax	      1597	am.c	FUNCTION_45	CALL_20
0x40023c3	    0x48898424e000	             mov qword [rsp + 0xe0], rax	      1598	am.c	FUNCTION_45
0x40023cb	          0x8b4358	            mov eax, dword [rbx + 0x58] 	      1600	am.c	FUNCTION_45	IF_7
0x40023ce	            0x85c0	                           test eax, eax	      1600	am.c	FUNCTION_45	IF_7
0x40023d0	            0x7566	                           jne 0x4002438	      1600	am.c	FUNCTION_45	IF_7
0x40023d2	      0x4c8d442460	                    lea r8, [rsp + 0x60]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40023d7	    0x488d94249000	                   lea rdx, [rsp + 0x90]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40023df	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40023e7	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40023ef	          0x4989e1	                             mov r9, rsp	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40023f2	      0xb901000000	                              mov ecx, 1	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40023f7	      0xe800000000	                          call 0x40023fc	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40023fc	            0x85c0	                           test eax, eax	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40023fe	            0x89c5	                            mov ebp, eax	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4002400	     0xf85fa000000	                           jne 0x4002500	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4002406	          0x4c89e7	                            mov rdi, r12	      1609	am.c	FUNCTION_45	CALL_25
0x4002409	      0xe800000000	                          call 0x400240e	      1609	am.c	FUNCTION_45	CALL_25
0x400240e	    0x488b8c248809	           mov rcx, qword [rsp + 0x988] 	      1611	am.c	FUNCTION_45
0x4002416	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1611	am.c	FUNCTION_45
0x400241f	            0x89e8	                            mov eax, ebp	      1611	am.c	FUNCTION_45
0x4002421	     0xf855f010000	                           jne 0x4002586	      1611	am.c	FUNCTION_45
0x4002427	    0x4881c4980900	                          add rsp, 0x998	      1611	am.c	FUNCTION_45
0x400242e	              0x5b	                                 pop rbx	      1611	am.c	FUNCTION_45
0x400242f	              0x5d	                                 pop rbp	      1611	am.c	FUNCTION_45
0x4002430	            0x415c	                                 pop r12	      1611	am.c	FUNCTION_45
0x4002432	            0x415d	                                 pop r13	      1611	am.c	FUNCTION_45
0x4002434	              0xc3	                                     ret	      1611	am.c	FUNCTION_45
0x4002435	           0xf1f00	                         nop dword [rax]	      1611	am.c	FUNCTION_45
0x4002438	    0xc78424080100	              mov dword [rsp + 0x108], 0	      1601	am.c	FUNCTION_45	IF_7
0x4002443	            0xeb8d	                           jmp 0x40023d2	      1601	am.c	FUNCTION_45	IF_7
0x4002445	           0xf1f00	                         nop dword [rax]	      1601	am.c	FUNCTION_45	IF_7
0x4002448	    0x488b05000000	            mov rax, qword [0x0400244f] 	        53	string3.h	FUNCTION_121	CALL_3
0x400244f	    0x48898424b000	             mov qword [rsp + 0xb0], rax	        53	string3.h	FUNCTION_121	CALL_3
0x4002457	    0x488b05000000	            mov rax, qword [0x0400245e] 	        53	string3.h	FUNCTION_121	CALL_3
0x400245e	    0x48898424b800	             mov qword [rsp + 0xb8], rax	        53	string3.h	FUNCTION_121	CALL_3
0x4002466	    0x8b0500000000	            mov eax, dword [0x0400246c] 	        53	string3.h	FUNCTION_121	CALL_3
0x400246c	    0x898424c00000	             mov dword [rsp + 0xc0], eax	        53	string3.h	FUNCTION_121	CALL_3
0x4002473	      0xe9a2fdffff	                           jmp 0x400221a	        53	string3.h	FUNCTION_121	CALL_3
0x4002478	     0xf1f84000000	                   nop dword [rax + rax]	        53	string3.h	FUNCTION_121	CALL_3
0x4002480	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x4002488	            0x31f6	                            xor esi, esi	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x400248a	    0x4c8da424c805	                  lea r12, [rsp + 0x5c8]	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x4002492	    0x48c704240000	                      mov qword [rsp], 0	      1564	am.c	FUNCTION_45	IF_4
0x400249a	      0xe800000000	                          call 0x400249f	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x400249f	    0x488b8c241001	           mov rcx, qword [rsp + 0x110] 	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40024a7	          0x4889e6	                            mov rsi, rsp	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40024aa	          0x4c89e7	                            mov rdi, r12	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40024ad	      0xba01000000	                              mov edx, 1	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40024b2	    0xc78424280600	         mov dword [rsp + 0x628], 0x200 	      1567	am.c	FUNCTION_45	IF_4
0x40024bd	      0xe800000000	                          call 0x40024c2	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40024c2	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40024ca	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40024d2	            0x31c9	                            xor ecx, ecx	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40024d4	      0xbe00000000	                              mov esi, 0	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40024d9	      0xe800000000	                          call 0x40024de	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40024de	          0x4c89e7	                            mov rdi, r12	      1570	am.c	FUNCTION_45	IF_4	CALL_11
0x40024e1	      0xe800000000	                          call 0x40024e6	      1570	am.c	FUNCTION_45	IF_4	CALL_11
0x40024e6	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x40024ee	      0xbe01000000	                              mov esi, 1	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x40024f3	      0xe800000000	                          call 0x40024f8	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x40024f8	      0xe90cfeffff	                           jmp 0x4002309	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x40024fd	           0xf1f00	                         nop dword [rax]	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x4002500	    0x8bbb90000000	            mov edi, dword [rbx + 0x90] 	      1604	am.c	FUNCTION_45	IF_8	CALL_22
0x4002506	      0xe800000000	                          call 0x400250b	      1604	am.c	FUNCTION_45	IF_8	CALL_22
0x400250b	          0x4c89e7	                            mov rdi, r12	      1605	am.c	FUNCTION_45	IF_8	CALL_23
0x400250e	      0xe800000000	                          call 0x4002513	      1605	am.c	FUNCTION_45	IF_8	CALL_23
0x4002513	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4002518	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x400251d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x400251f	      0xbdffffffff	                     mov ebp, 0xffffffff	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x4002524	      0xe800000000	                          call 0x4002529	        54	gettext.h	FUNCTION_119
0x4002529	          0x4889c7	                            mov rdi, rax	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x400252c	            0x31c0	                            xor eax, eax	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x400252e	      0xe800000000	                          call 0x4002533	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x4002533	      0xe9d6feffff	                           jmp 0x400240e	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x4002538	     0xf1f84000000	                   nop dword [rax + rax]	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x4002540	      0xbf00000000	                              mov edi, 0	      1548	am.c	FUNCTION_45	IF_2
0x4002545	            0x31c0	                            xor eax, eax	      1548	am.c	FUNCTION_45	IF_2
0x4002547	      0xbdffffffff	                     mov ebp, 0xffffffff	      1548	am.c	FUNCTION_45	IF_2
0x400254c	      0xe800000000	                          call 0x4002551	      1548	am.c	FUNCTION_45	IF_2
0x4002551	      0xe9b8feffff	                           jmp 0x400240e	      1548	am.c	FUNCTION_45	IF_2
0x4002556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1548	am.c	FUNCTION_45	IF_2
0x4002560	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4002565	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x400256a	            0xebb1	                           jmp 0x400251d	        54	gettext.h	FUNCTION_119
0x400256c	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_119
0x4002570	      0xbf00000000	                              mov edi, 0	      1579	am.c	FUNCTION_45	IF_6
0x4002575	            0x31c0	                            xor eax, eax	      1579	am.c	FUNCTION_45	IF_6
0x4002577	      0xbdffffffff	                     mov ebp, 0xffffffff	      1579	am.c	FUNCTION_45	IF_6
0x400257c	      0xe800000000	                          call 0x4002581	      1579	am.c	FUNCTION_45	IF_6
0x4002581	      0xe988feffff	                           jmp 0x400240e	      1579	am.c	FUNCTION_45	IF_6
0x4002586	      0xe800000000	                          call 0x400258b	      1611	am.c	FUNCTION_45
split_mail_mbox	CALL,11:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,3:functions,0	99
0x4000100	            0x4156	                                push r14	       708	am.c	FUNCTION_25
0x4000102	            0x4155	                                push r13	       708	am.c	FUNCTION_25
0x4000104	          0x4189cd	                           mov r13d, ecx	       708	am.c	FUNCTION_25
0x4000107	            0x4154	                                push r12	       708	am.c	FUNCTION_25
0x4000109	              0x55	                                push rbp	       708	am.c	FUNCTION_25
0x400010a	          0x4889fd	                            mov rbp, rdi	       708	am.c	FUNCTION_25
0x400010d	              0x53	                                push rbx	       708	am.c	FUNCTION_25
0x400010e	      0xb90c000000	                            mov ecx, 0xc	       709	am.c	FUNCTION_25
0x4000113	          0x4989f4	                            mov r12, rsi	       708	am.c	FUNCTION_25
0x4000116	      0xbe00000000	                              mov esi, 0	       714	am.c	FUNCTION_25	CALL_1
0x400011b	          0x4189d6	                           mov r14d, edx	       708	am.c	FUNCTION_25
0x400011e	    0x4881ec900000	                           sub rsp, 0x90	       708	am.c	FUNCTION_25
0x4000125	    0x64488b042528	                mov rax, qword fs:[0x28]	       708	am.c	FUNCTION_25
0x400012e	    0x488984248800	             mov qword [rsp + 0x88], rax	       708	am.c	FUNCTION_25
0x4000136	            0x31c0	                            xor eax, eax	       708	am.c	FUNCTION_25
0x4000138	      0x488d5c2428	                   lea rbx, [rsp + 0x28]	       714	am.c	FUNCTION_25	CALL_1
0x400013d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       709	am.c	FUNCTION_25
0x4000142	    0x48c704240000	                      mov qword [rsp], 0	       710	am.c	FUNCTION_25
0x400014a	    0x48c744240800	                  mov qword [rsp + 8], 0	       710	am.c	FUNCTION_25
0x4000153	    0x48c744241000	               mov qword [rsp + 0x10], 0	       710	am.c	FUNCTION_25
0x400015c	          0xf348ab	              rep stosq qword [rdi], rax	       709	am.c	FUNCTION_25
0x400015f	          0x4889df	                            mov rdi, rbx	       714	am.c	FUNCTION_25	CALL_1
0x4000162	    0x48c744242800	               mov qword [rsp + 0x28], 0	       709	am.c	FUNCTION_25
0x400016b	    0x48c744243800	               mov qword [rsp + 0x38], 0	       709	am.c	FUNCTION_25
0x4000174	      0xc644246808	                mov byte [rsp + 0x68], 8	       713	am.c	FUNCTION_25
0x4000179	      0xe800000000	                          call 0x400017e	       714	am.c	FUNCTION_25	CALL_1
0x400017e	          0x8b554c	            mov edx, dword [rbp + 0x4c] 	       715	am.c	FUNCTION_25	CALL_2
0x4000181	            0x31c0	                            xor eax, eax	       715	am.c	FUNCTION_25	CALL_2
0x4000183	      0xbe00000000	                              mov esi, 0	       715	am.c	FUNCTION_25	CALL_2
0x4000188	          0x4889df	                            mov rdi, rbx	       715	am.c	FUNCTION_25	CALL_2
0x400018b	      0xe800000000	                          call 0x4000190	       715	am.c	FUNCTION_25	CALL_2
0x4000190	        0x488b5500	                    mov rdx, qword [rbp]	       716	am.c	FUNCTION_25	CALL_3
0x4000194	            0x31c0	                            xor eax, eax	       716	am.c	FUNCTION_25	CALL_3
0x4000196	      0xbe00000000	                              mov esi, 0	       716	am.c	FUNCTION_25	CALL_3
0x400019b	          0x4889df	                            mov rdi, rbx	       716	am.c	FUNCTION_25	CALL_3
0x400019e	      0xe800000000	                          call 0x40001a3	       716	am.c	FUNCTION_25	CALL_3
0x40001a3	      0xbe00000000	                              mov esi, 0	       717	am.c	FUNCTION_25	CALL_4
0x40001a8	          0x4889df	                            mov rdi, rbx	       717	am.c	FUNCTION_25	CALL_4
0x40001ab	      0xe800000000	                          call 0x40001b0	       717	am.c	FUNCTION_25	CALL_4
0x40001b0	          0x4585f6	                         test r14d, r14d	       718	am.c	FUNCTION_25	IF_1
0x40001b3	     0xf8587000000	                           jne 0x4000240	       718	am.c	FUNCTION_25	IF_1
0x40001b9	          0x4585ed	                         test r13d, r13d	       720	am.c	FUNCTION_25	IF_2
0x40001bc	     0xf8594000000	                           jne 0x4000256	       720	am.c	FUNCTION_25	IF_2
0x40001c2	      0x488d5c2428	                   lea rbx, [rsp + 0x28]	       722	am.c	FUNCTION_25	CALL_7
0x40001c7	      0xbe00000000	                              mov esi, 0	       722	am.c	FUNCTION_25	CALL_7
0x40001cc	          0x4889df	                            mov rdi, rbx	       722	am.c	FUNCTION_25	CALL_7
0x40001cf	      0xe800000000	                          call 0x40001d4	       722	am.c	FUNCTION_25	CALL_7
0x40001d4	          0x4889df	                            mov rdi, rbx	       723	am.c	FUNCTION_25	CALL_8
0x40001d7	          0x4c89e6	                            mov rsi, r12	       723	am.c	FUNCTION_25	CALL_8
0x40001da	      0xe800000000	                          call 0x40001df	       723	am.c	FUNCTION_25	CALL_8
0x40001df	        0x4883ec08	                              sub rsp, 8	       112	run-command.h	FUNCTION_148	CALL_1
0x40001e3	            0x31d2	                            xor edx, edx	       112	run-command.h	FUNCTION_148	CALL_1
0x40001e5	          0x4531c9	                            xor r9d, r9d	       112	run-command.h	FUNCTION_148	CALL_1
0x40001e8	            0x6a00	                                  push 0	       112	run-command.h	FUNCTION_148	CALL_1
0x40001ea	            0x31f6	                            xor esi, esi	       112	run-command.h	FUNCTION_148	CALL_1
0x40001ec	    0x41b808000000	                              mov r8d, 8	       112	run-command.h	FUNCTION_148	CALL_1
0x40001f2	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       112	run-command.h	FUNCTION_148	CALL_1
0x40001f7	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       112	run-command.h	FUNCTION_148	CALL_1
0x40001fc	      0xe800000000	                          call 0x4000201	       112	run-command.h	FUNCTION_148	CALL_1
0x4000201	            0x89c3	                            mov ebx, eax	       112	run-command.h	FUNCTION_148	CALL_1
0x4000203	            0x85db	                           test ebx, ebx	       726	am.c	FUNCTION_25	IF_3
0x4000205	              0x58	                                 pop rax	       726	am.c	FUNCTION_25	IF_3
0x4000206	              0x5a	                                 pop rdx	       726	am.c	FUNCTION_25	IF_3
0x4000207	            0x7467	                            je 0x4000270	       726	am.c	FUNCTION_25	IF_3
0x4000209	          0x4889e7	                            mov rdi, rsp	       733	am.c	FUNCTION_25	CALL_11
0x400020c	      0xbbffffffff	                     mov ebx, 0xffffffff	       734	am.c	FUNCTION_25
0x4000211	      0xe800000000	                          call 0x4000216	       733	am.c	FUNCTION_25	CALL_11
0x4000216	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	       735	am.c	FUNCTION_25
0x400021e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       735	am.c	FUNCTION_25
0x4000227	            0x89d8	                            mov eax, ebx	       735	am.c	FUNCTION_25
0x4000229	            0x756a	                           jne 0x4000295	       735	am.c	FUNCTION_25
0x400022b	    0x4881c4900000	                           add rsp, 0x90	       735	am.c	FUNCTION_25
0x4000232	              0x5b	                                 pop rbx	       735	am.c	FUNCTION_25
0x4000233	              0x5d	                                 pop rbp	       735	am.c	FUNCTION_25
0x4000234	            0x415c	                                 pop r12	       735	am.c	FUNCTION_25
0x4000236	            0x415d	                                 pop r13	       735	am.c	FUNCTION_25
0x4000238	            0x415e	                                 pop r14	       735	am.c	FUNCTION_25
0x400023a	              0xc3	                                     ret	       735	am.c	FUNCTION_25
0x400023b	       0xf1f440000	                   nop dword [rax + rax]	       735	am.c	FUNCTION_25
0x4000240	      0xbe00000000	                              mov esi, 0	       719	am.c	FUNCTION_25	CALL_5
0x4000245	          0x4889df	                            mov rdi, rbx	       719	am.c	FUNCTION_25	CALL_5
0x4000248	      0xe800000000	                          call 0x400024d	       719	am.c	FUNCTION_25	CALL_5
0x400024d	          0x4585ed	                         test r13d, r13d	       720	am.c	FUNCTION_25	IF_2
0x4000250	     0xf846cffffff	                            je 0x40001c2	       720	am.c	FUNCTION_25	IF_2
0x4000256	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       721	am.c	FUNCTION_25	CALL_6
0x400025b	      0xbe00000000	                              mov esi, 0	       721	am.c	FUNCTION_25	CALL_6
0x4000260	      0xe800000000	                          call 0x4000265	       721	am.c	FUNCTION_25	CALL_6
0x4000265	      0xe958ffffff	                           jmp 0x40001c2	       721	am.c	FUNCTION_25	CALL_6
0x400026a	    0x660f1f440000	                    nop word [rax + rax]	       721	am.c	FUNCTION_25	CALL_6
0x4000270	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       730	am.c	FUNCTION_25	CALL_10
0x4000275	    0xc74508010000	                  mov dword [rbp + 8], 1	       729	am.c	FUNCTION_25
0x400027c	      0xba0a000000	                            mov edx, 0xa	       730	am.c	FUNCTION_25	CALL_10
0x4000281	            0x31f6	                            xor esi, esi	       730	am.c	FUNCTION_25	CALL_10
0x4000283	      0xe800000000	                          call 0x4000288	       730	am.c	FUNCTION_25	CALL_10
0x4000288	          0x4889e7	                            mov rdi, rsp	       733	am.c	FUNCTION_25	CALL_11
0x400028b	          0x89450c	              mov dword [rbp + 0xc], eax	       730	am.c	FUNCTION_25	CALL_10
0x400028e	      0xe800000000	                          call 0x4000293	       733	am.c	FUNCTION_25	CALL_11
0x4000293	            0xeb81	                           jmp 0x4000216	       733	am.c	FUNCTION_25	CALL_11
0x4000295	      0xe800000000	                          call 0x400029a	       735	am.c	FUNCTION_25
am_run	CALL,51:DO,0:ELSE,2:WHILE,1:SWITCH,0:FOR,0:IF,15:functions,0	998
0x40027b0	            0x4157	                                push r15	      1758	am.c	FUNCTION_49
0x40027b2	            0x4156	                                push r14	      1758	am.c	FUNCTION_49
0x40027b4	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40027b9	            0x4155	                                push r13	      1758	am.c	FUNCTION_49
0x40027bb	            0x4154	                                push r12	      1758	am.c	FUNCTION_49
0x40027bd	          0x4189f4	                           mov r12d, esi	      1758	am.c	FUNCTION_49
0x40027c0	              0x55	                                push rbp	      1758	am.c	FUNCTION_49
0x40027c1	              0x53	                                push rbx	      1758	am.c	FUNCTION_49
0x40027c2	          0x4889fb	                            mov rbx, rdi	      1758	am.c	FUNCTION_49
0x40027c5	    0x4881ec880200	                          sub rsp, 0x288	      1758	am.c	FUNCTION_49
0x40027cc	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x40027cf	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40027d4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1758	am.c	FUNCTION_49
0x40027dd	    0x488984247802	            mov qword [rsp + 0x278], rax	      1758	am.c	FUNCTION_49
0x40027e5	            0x31c0	                            xor eax, eax	      1758	am.c	FUNCTION_49
0x40027e7	    0x488dac24c000	                   lea rbp, [rsp + 0xc0]	      1145	am.c	FUNCTION_34	CALL_1
0x40027ef	    0x48c784244001	              mov qword [rsp + 0x140], 0	      1759	am.c	FUNCTION_49
0x40027fb	    0x48c784244801	              mov qword [rsp + 0x148], 0	      1759	am.c	FUNCTION_49
0x4002807	    0x48c784245001	              mov qword [rsp + 0x150], 0	      1759	am.c	FUNCTION_49
0x4002813	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1760	am.c	FUNCTION_49
0x400281c	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1760	am.c	FUNCTION_49
0x4002825	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1760	am.c	FUNCTION_49
0x400282e	      0xe800000000	                          call 0x4002833	       183	am.c	FUNCTION_6	CALL_1
0x4002833	          0x4889c7	                            mov rdi, rax	      1762	am.c	FUNCTION_49	CALL_2
0x4002836	      0xe800000000	                          call 0x400283b	      1762	am.c	FUNCTION_49	CALL_2
0x400283b	      0xbe01000000	                              mov esi, 1	      1145	am.c	FUNCTION_34	CALL_1
0x4002840	          0x4889ef	                            mov rdi, rbp	      1145	am.c	FUNCTION_34	CALL_1
0x4002843	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      1143	am.c	FUNCTION_34
0x400284f	      0xe800000000	                          call 0x4002854	      1145	am.c	FUNCTION_34	CALL_1
0x4002854	          0x4531c0	                            xor r8d, r8d	      1146	am.c	FUNCTION_34
0x4002857	            0x31c9	                            xor ecx, ecx	      1146	am.c	FUNCTION_34
0x4002859	            0x31d2	                            xor edx, edx	      1146	am.c	FUNCTION_34
0x400285b	      0xbe04000000	                              mov esi, 4	      1146	am.c	FUNCTION_34
0x4002860	      0xbf00000000	                              mov edi, 0	      1146	am.c	FUNCTION_34
0x4002865	      0xe800000000	                          call 0x400286a	      1146	am.c	FUNCTION_34
0x400286a	      0xba01000000	                              mov edx, 1	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x400286f	          0x4889ee	                            mov rsi, rbp	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x4002872	      0xbf00000000	                              mov edi, 0	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x4002877	      0xe800000000	                          call 0x400287c	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x400287c	            0x85c0	                           test eax, eax	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x400287e	     0xf8596110000	                           jne 0x4003a1a	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x4002884	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4002889	      0xe800000000	                          call 0x400288e	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x400288e	            0x85c0	                           test eax, eax	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4002890	     0xf8563110000	                           jne 0x40039f9	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4002896	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1771	am.c	FUNCTION_49	CALL_8
0x400289b	      0xe800000000	                          call 0x40028a0	      1771	am.c	FUNCTION_49	CALL_8
0x40028a0	    0x488d84245002	                  lea rax, [rsp + 0x250]	      1276	am.c	FUNCTION_37	CALL_34
0x40028a8	      0x4889442418	             mov qword [rsp + 0x18], rax	      1276	am.c	FUNCTION_37	CALL_34
0x40028ad	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1773	am.c	FUNCTION_49	WHILE_1
0x40028b0	          0x394308	                cmp dword [rbx + 8], eax	      1773	am.c	FUNCTION_49	WHILE_1
0x40028b3	     0xf8f60050000	                            jg 0x4002e19	      1773	am.c	FUNCTION_49	WHILE_1
0x40028b9	     0xf1f80000000	                         nop dword [rax]	      1773	am.c	FUNCTION_49	WHILE_1
0x40028c0	        0x4c8d7308	                      lea r14, [rbx + 8]	      1773	am.c	FUNCTION_49	WHILE_1
0x40028c4	        0x4c8d7b4c	                   lea r15, [rbx + 0x4c]	      1773	am.c	FUNCTION_49	WHILE_1
0x40028c8	          0x4c89f7	                            mov rdi, r14	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x40028cb	          0x4c89fe	                            mov rsi, r15	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x40028ce	      0xe8cde6ffff	                 call sym.msgnum.isra.13	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x40028d3	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x40028d6	          0x4889c2	                            mov rdx, rax	       183	am.c	FUNCTION_6	CALL_1
0x40028d9	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40028de	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40028e0	      0xe800000000	                          call 0x40028e5	       183	am.c	FUNCTION_6	CALL_1
0x40028e5	          0x4989c5	                            mov r13, rax	       183	am.c	FUNCTION_6	CALL_1
0x40028e8	      0xe800000000	                          call 0x40028ed	      1777	am.c	FUNCTION_49	WHILE_1	CALL_11
0x40028ed	          0x4c89ef	                            mov rdi, r13	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x40028f0	      0xe800000000	                          call 0x40028f5	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x40028f5	            0x85c0	                           test eax, eax	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x40028f7	     0xf84fc040000	                            je 0x4002df9	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x40028fd	          0x4585e4	                         test r12d, r12d	      1782	am.c	FUNCTION_49	WHILE_1	IF_3
0x4002900	     0xf858a070000	                           jne 0x4003090	      1782	am.c	FUNCTION_49	WHILE_1	IF_3
0x4002906	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x400290c	            0x85c0	                           test eax, eax	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x400290e	     0xf848c060000	                            je 0x4002fa0	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4002914	      0xbe00000000	                              mov esi, 0	      1308	am.c	FUNCTION_38	CALL_1
0x4002919	          0x4c89ef	                            mov rdi, r13	      1308	am.c	FUNCTION_38	CALL_1
0x400291c	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      1307	am.c	FUNCTION_38
0x4002928	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      1307	am.c	FUNCTION_38
0x4002934	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1307	am.c	FUNCTION_38
0x4002940	      0xe800000000	                          call 0x4002945	      1308	am.c	FUNCTION_38	CALL_1
0x4002945	          0x4889ef	                            mov rdi, rbp	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x4002948	          0x4889c6	                            mov rsi, rax	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x400294b	      0x4889442408	                mov qword [rsp + 8], rax	      1308	am.c	FUNCTION_38	CALL_1
0x4002950	      0xe800000000	                          call 0x4002955	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x4002955	            0x85c0	                           test eax, eax	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x4002957	     0xf85730d0000	                           jne 0x40036d0	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x400295d	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x4002965	      0xb800000000	                              mov eax, 0	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x400296a	            0xeb15	                           jmp 0x4002981	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x400296c	         0xf1f4000	                         nop dword [rax]	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x4002970	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4002974	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4002978	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x400297b	     0xf854f0d0000	                           jne 0x40036d0	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4002981	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4002984	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4002986	            0x75e8	                           jne 0x4002970	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4002988	    0x488db4246001	                  lea rsi, [rsp + 0x160]	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x4002990	      0xe800000000	                          call 0x4002995	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x4002995	            0x85c0	                           test eax, eax	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x4002997	     0xf88330d0000	                            js 0x40036d0	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x400299d	          0x4889ef	                            mov rdi, rbp	      1317	am.c	FUNCTION_38	CALL_5
0x40029a0	      0xe800000000	                          call 0x40029a5	      1317	am.c	FUNCTION_38	CALL_5
0x40029a5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1318	am.c	FUNCTION_38	CALL_6
0x40029aa	      0xe800000000	                          call 0x40029af	      1318	am.c	FUNCTION_38	CALL_6
0x40029af	    0x488dbc246001	                  lea rdi, [rsp + 0x160]	      1438	am.c	FUNCTION_42	CALL_4
0x40029b7	          0x4c89ee	                            mov rsi, r13	      1438	am.c	FUNCTION_42	CALL_4
0x40029ba	      0xe800000000	                          call 0x40029bf	      1438	am.c	FUNCTION_42	CALL_4
0x40029bf	          0x4989c5	                            mov r13, rax	      1438	am.c	FUNCTION_42	CALL_4
0x40029c2	      0xe800000000	                          call 0x40029c7	      1332	am.c	FUNCTION_39	CALL_2
0x40029c7	            0x31f6	                            xor esi, esi	      1332	am.c	FUNCTION_39	CALL_2
0x40029c9	          0x4889c2	                            mov rdx, rax	      1332	am.c	FUNCTION_39	CALL_2
0x40029cc	          0x4c89ef	                            mov rdi, r13	      1332	am.c	FUNCTION_39	CALL_2
0x40029cf	      0xe800000000	                          call 0x40029d4	      1332	am.c	FUNCTION_39	CALL_2
0x40029d4	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      1334	am.c	FUNCTION_39	CALL_3
0x40029dc	      0xbe00000000	                              mov esi, 0	      1334	am.c	FUNCTION_39	CALL_3
0x40029e1	          0x4889c7	                            mov rdi, rax	      1334	am.c	FUNCTION_39	CALL_3
0x40029e4	      0x4889442408	                mov qword [rsp + 8], rax	      1332	am.c	FUNCTION_39	CALL_2
0x40029e9	      0xe800000000	                          call 0x40029ee	      1334	am.c	FUNCTION_39	CALL_3
0x40029ee	    0x8b9424a00000	            mov edx, dword [rsp + 0xa0] 	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x40029f5	          0x4889c6	                            mov rsi, rax	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x40029f8	          0x4889ef	                            mov rdi, rbp	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x40029fb	      0x4889442410	             mov qword [rsp + 0x10], rax	      1334	am.c	FUNCTION_39	CALL_3
0x4002a00	      0xe800000000	                          call 0x4002a05	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x4002a05	            0x85c0	                           test eax, eax	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x4002a07	     0xf88550f0000	                            js 0x4003962	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x4002a0d	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1339	am.c	FUNCTION_39	CALL_7
0x4002a12	     0xf85310f0000	                           jne 0x4003949	      1339	am.c	FUNCTION_39	CALL_7
0x4002a18	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	      1340	am.c	FUNCTION_39	IF_2
0x4002a20	          0x4885ff	                           test rdi, rdi	      1340	am.c	FUNCTION_39	IF_2
0x4002a23	     0xf84940c0000	                            je 0x40036bd	      1340	am.c	FUNCTION_39	IF_2
0x4002a29	    0x488bb424c800	            mov rsi, qword [rsp + 0xc8] 	      1342	am.c	FUNCTION_39	CALL_8
0x4002a31	          0x4829fe	                            sub rsi, rdi	      1342	am.c	FUNCTION_39	CALL_8
0x4002a34	      0xe800000000	                          call 0x4002a39	      1342	am.c	FUNCTION_39	CALL_8
0x4002a39	        0x48894310	             mov qword [rbx + 0x10], rax	      1341	am.c	FUNCTION_39	IF_2
0x4002a3d	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1346	am.c	FUNCTION_39	CALL_10
0x4002a42	     0xf85500f0000	                           jne 0x4003998	      1346	am.c	FUNCTION_39	CALL_10
0x4002a48	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	      1347	am.c	FUNCTION_39	IF_3
0x4002a50	          0x4885ff	                           test rdi, rdi	      1347	am.c	FUNCTION_39	IF_3
0x4002a53	     0xf84510c0000	                            je 0x40036aa	      1347	am.c	FUNCTION_39	IF_3
0x4002a59	    0x488bb424d800	            mov rsi, qword [rsp + 0xd8] 	      1349	am.c	FUNCTION_39	CALL_11
0x4002a61	          0x4829fe	                            sub rsi, rdi	      1349	am.c	FUNCTION_39	CALL_11
0x4002a64	      0xe800000000	                          call 0x4002a69	      1349	am.c	FUNCTION_39	CALL_11
0x4002a69	        0x48894318	             mov qword [rbx + 0x18], rax	      1348	am.c	FUNCTION_39	IF_3
0x4002a6d	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1353	am.c	FUNCTION_39	CALL_13
0x4002a72	     0xf85090e0000	                           jne 0x4003881	      1353	am.c	FUNCTION_39	CALL_13
0x4002a78	            0x31ff	                            xor edi, edi	      1354	am.c	FUNCTION_39	CALL_15
0x4002a7a	      0xe800000000	                          call 0x4002a7f	      1354	am.c	FUNCTION_39	CALL_15
0x4002a7f	          0x4889ef	                            mov rdi, rbp	      1354	am.c	FUNCTION_39	CALL_15
0x4002a82	          0x4889c6	                            mov rsi, rax	      1354	am.c	FUNCTION_39	CALL_15
0x4002a85	      0xe800000000	                          call 0x4002a8a	      1354	am.c	FUNCTION_39	CALL_15
0x4002a8a	          0x4889c7	                            mov rdi, rax	      1354	am.c	FUNCTION_39	CALL_15
0x4002a8d	      0xe800000000	                          call 0x4002a92	      1354	am.c	FUNCTION_39	CALL_15
0x4002a92	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      1356	am.c	FUNCTION_39	CALL_16
0x4002a97	        0x48894320	             mov qword [rbx + 0x20], rax	      1354	am.c	FUNCTION_39	CALL_15
0x4002a9b	     0xf853f0f0000	                           jne 0x40039e0	      1356	am.c	FUNCTION_39	CALL_16
0x4002aa1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1357	am.c	FUNCTION_39	CALL_17
0x4002aa6	      0xbe00000000	                              mov esi, 0	      1357	am.c	FUNCTION_39	CALL_17
0x4002aab	      0xe800000000	                          call 0x4002ab0	      1357	am.c	FUNCTION_39	CALL_17
0x4002ab0	          0x4885c0	                           test rax, rax	      1358	am.c	FUNCTION_39	IF_4
0x4002ab3	     0xf84110f0000	                            je 0x40039ca	      1358	am.c	FUNCTION_39	IF_4
0x4002ab9	        0x488d7802	                      lea rdi, [rax + 2]	      1360	am.c	FUNCTION_39	CALL_21
0x4002abd	      0xe800000000	                          call 0x4002ac2	      1360	am.c	FUNCTION_39	CALL_21
0x4002ac2	          0x4889c7	                            mov rdi, rax	      1361	am.c	FUNCTION_39	CALL_22
0x4002ac5	        0x48894328	             mov qword [rbx + 0x28], rax	      1360	am.c	FUNCTION_39	CALL_21
0x4002ac9	      0xe800000000	                          call 0x4002ace	      1361	am.c	FUNCTION_39	CALL_22
0x4002ace	      0x488b742408	                mov rsi, qword [rsp + 8]	      1362	am.c	FUNCTION_39	CALL_23
0x4002ad3	        0x48894330	             mov qword [rbx + 0x30], rax	      1361	am.c	FUNCTION_39	CALL_22
0x4002ad7	          0x4c89ef	                            mov rdi, r13	      1362	am.c	FUNCTION_39	CALL_23
0x4002ada	      0xe800000000	                          call 0x4002adf	      1362	am.c	FUNCTION_39	CALL_23
0x4002adf	          0x4c89ee	                            mov rsi, r13	      1442	am.c	FUNCTION_42	CALL_6
0x4002ae2	          0x4889df	                            mov rdi, rbx	      1442	am.c	FUNCTION_42	CALL_6
0x4002ae5	      0xe876d9ffff	             call sym.write_commit_patch	      1442	am.c	FUNCTION_42	CALL_6
0x4002aea	    0x488b84246001	           mov rax, qword [rsp + 0x160] 	        53	string3.h	FUNCTION_121	CALL_3
0x4002af2	    0x488dbc246001	                  lea rdi, [rsp + 0x160]	      1445	am.c	FUNCTION_42	CALL_9
0x4002afa	        0x48894338	             mov qword [rbx + 0x38], rax	        53	string3.h	FUNCTION_121	CALL_3
0x4002afe	    0x488b84246801	           mov rax, qword [rsp + 0x168] 	        53	string3.h	FUNCTION_121	CALL_3
0x4002b06	        0x48894340	             mov qword [rbx + 0x40], rax	        53	string3.h	FUNCTION_121	CALL_3
0x4002b0a	    0x8b8424700100	           mov eax, dword [rsp + 0x170] 	        53	string3.h	FUNCTION_121	CALL_3
0x4002b11	          0x894348	             mov dword [rbx + 0x48], eax	        53	string3.h	FUNCTION_121	CALL_3
0x4002b14	      0xe800000000	                          call 0x4002b19	      1445	am.c	FUNCTION_42	CALL_9
0x4002b19	      0xbe00000000	                              mov esi, 0	      1445	am.c	FUNCTION_42	CALL_9
0x4002b1e	          0x4889c2	                            mov rdx, rax	      1445	am.c	FUNCTION_42	CALL_9
0x4002b21	          0x4889df	                            mov rdi, rbx	      1445	am.c	FUNCTION_42	CALL_9
0x4002b24	      0xe877d7ffff	               call sym.write_state_text	      1445	am.c	FUNCTION_42	CALL_9
0x4002b29	    0x488d94246001	                  lea rdx, [rsp + 0x160]	      1446	am.c	FUNCTION_42	CALL_10
0x4002b31	    0x41b901000000	                              mov r9d, 1	      1446	am.c	FUNCTION_42	CALL_10
0x4002b37	            0x31c9	                            xor ecx, ecx	      1446	am.c	FUNCTION_42	CALL_10
0x4002b39	    0x41b801000000	                              mov r8d, 1	      1446	am.c	FUNCTION_42	CALL_10
0x4002b3f	      0xbe00000000	                              mov esi, 0	      1446	am.c	FUNCTION_42	CALL_10
0x4002b44	      0xbf00000000	                              mov edi, 0	      1446	am.c	FUNCTION_42	CALL_10
0x4002b49	      0xe800000000	                          call 0x4002b4e	      1446	am.c	FUNCTION_42	CALL_10
0x4002b4e	        0x448b4b5c	            mov r9d, dword [rbx + 0x5c] 	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4002b52	          0x4585c9	                           test r9d, r9d	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4002b55	     0xf853d090000	                           jne 0x4003498	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4002b5b	      0xba10000000	                           mov edx, 0x10	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002b60	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002b65	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002b68	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       348	am.c	FUNCTION_15
0x4002b74	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       348	am.c	FUNCTION_15
0x4002b80	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	       348	am.c	FUNCTION_15
0x4002b8c	      0xe800000000	                          call 0x4002b91	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002b91	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       351	am.c	FUNCTION_15	CALL_2
0x4002b95	          0x4889ef	                            mov rdi, rbp	       351	am.c	FUNCTION_15	CALL_2
0x4002b98	      0xe800000000	                          call 0x4002b9d	       351	am.c	FUNCTION_15	CALL_2
0x4002b9d	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	       351	am.c	FUNCTION_15	CALL_2
0x4002ba5	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x4002ba8	     0xf85690a0000	                           jne 0x4003617	       141	strbuf.h	FUNCTION_107
0x4002bae	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002bb3	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002bb6	      0xe800000000	                          call 0x4002bbb	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002bbb	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002bc3	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x4002bc7	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002bcc	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002bcf	    0x48898424c800	             mov qword [rsp + 0xc8], rax	       229	strbuf.h	FUNCTION_109
0x4002bd7	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	       229	strbuf.h	FUNCTION_109
0x4002bdf	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x4002be3	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	       230	strbuf.h	FUNCTION_109
0x4002beb	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	       230	strbuf.h	FUNCTION_109
0x4002bf3	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4002bf7	      0xba11000000	                           mov edx, 0x11	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002bfc	      0xe800000000	                          call 0x4002c01	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002c01	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       355	am.c	FUNCTION_15	CALL_5
0x4002c05	          0x4889ef	                            mov rdi, rbp	       355	am.c	FUNCTION_15	CALL_5
0x4002c08	      0xe800000000	                          call 0x4002c0d	       355	am.c	FUNCTION_15	CALL_5
0x4002c0d	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	       355	am.c	FUNCTION_15	CALL_5
0x4002c15	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x4002c18	     0xf853a0a0000	                           jne 0x4003658	       141	strbuf.h	FUNCTION_107
0x4002c1e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002c23	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002c26	      0xe800000000	                          call 0x4002c2b	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002c2b	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002c33	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x4002c37	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002c3c	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002c3f	    0x48898424c800	             mov qword [rsp + 0xc8], rax	       229	strbuf.h	FUNCTION_109
0x4002c47	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	       229	strbuf.h	FUNCTION_109
0x4002c4f	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x4002c53	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	       230	strbuf.h	FUNCTION_109
0x4002c5b	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	       230	strbuf.h	FUNCTION_109
0x4002c63	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4002c67	      0xba10000000	                           mov edx, 0x10	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002c6c	      0xe800000000	                          call 0x4002c71	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002c71	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       359	am.c	FUNCTION_15	CALL_8
0x4002c75	          0x4889ef	                            mov rdi, rbp	       359	am.c	FUNCTION_15	CALL_8
0x4002c78	      0xe800000000	                          call 0x4002c7d	       359	am.c	FUNCTION_15	CALL_8
0x4002c7d	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	       359	am.c	FUNCTION_15	CALL_8
0x4002c85	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x4002c88	     0xf85aa090000	                           jne 0x4003638	       141	strbuf.h	FUNCTION_107
0x4002c8e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002c93	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002c96	      0xe800000000	                          call 0x4002c9b	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002c9b	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002ca3	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x4002ca7	      0xbe00000000	                              mov esi, 0	       362	am.c	FUNCTION_15	CALL_10
0x4002cac	          0x4889df	                            mov rdi, rbx	       362	am.c	FUNCTION_15	CALL_10
0x4002caf	    0x48898424c800	             mov qword [rsp + 0xc8], rax	       229	strbuf.h	FUNCTION_109
0x4002cb7	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	       229	strbuf.h	FUNCTION_109
0x4002cbf	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x4002cc3	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	       230	strbuf.h	FUNCTION_109
0x4002ccb	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	       230	strbuf.h	FUNCTION_109
0x4002cd3	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4002cd7	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	       362	am.c	FUNCTION_15	CALL_10
0x4002cdf	      0xe8bcd5ffff	               call sym.write_state_text	       362	am.c	FUNCTION_15	CALL_10
0x4002ce4	          0x4889ef	                            mov rdi, rbp	       364	am.c	FUNCTION_15	CALL_11
0x4002ce7	      0xe800000000	                          call 0x4002cec	       364	am.c	FUNCTION_15	CALL_11
0x4002cec	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4002cef	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002cf4	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002cf9	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4002cfb	      0xe800000000	                          call 0x4002d00	       183	am.c	FUNCTION_6	CALL_1
0x4002d00	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       395	am.c	FUNCTION_17	CALL_2
0x4002d04	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       395	am.c	FUNCTION_17	CALL_2
0x4002d08	          0x4889c7	                            mov rdi, rax	       395	am.c	FUNCTION_17	CALL_2
0x4002d0b	      0xe800000000	                          call 0x4002d10	       395	am.c	FUNCTION_17	CALL_2
0x4002d10	        0x448b4350	            mov r8d, dword [rbx + 0x50] 	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4002d14	          0x4585c0	                           test r8d, r8d	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4002d17	            0x7410	                            je 0x4002d29	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4002d19	          0x4889df	                            mov rdi, rbx	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4002d1c	      0xe84fe0ffff	                 call sym.do_interactive	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4002d21	            0x85c0	                           test eax, eax	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4002d23	     0xf85d0000000	                           jne 0x4002df9	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4002d29	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       492	am.c	FUNCTION_20	CALL_1
0x4002d2e	     0xf847d0c0000	                            je 0x40039b1	       492	am.c	FUNCTION_20	CALL_1
0x4002d34	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4002d37	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d3c	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d41	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4002d43	      0xe800000000	                          call 0x4002d48	       183	am.c	FUNCTION_6	CALL_1
0x4002d48	            0x31c9	                            xor ecx, ecx	       493	am.c	FUNCTION_20	CALL_3
0x4002d4a	          0x4889c2	                            mov rdx, rax	       493	am.c	FUNCTION_20	CALL_3
0x4002d4d	            0x31ff	                            xor edi, edi	       493	am.c	FUNCTION_20	CALL_3
0x4002d4f	            0x31c0	                            xor eax, eax	       493	am.c	FUNCTION_20	CALL_3
0x4002d51	      0xbe00000000	                              mov esi, 0	       493	am.c	FUNCTION_20	CALL_3
0x4002d56	      0xe800000000	                          call 0x4002d5b	       493	am.c	FUNCTION_20	CALL_3
0x4002d5b	            0x85c0	                           test eax, eax	       495	am.c	FUNCTION_20	IF_1
0x4002d5d	     0xf8495070000	                            je 0x40034f8	       495	am.c	FUNCTION_20	IF_1
0x4002d63	      0xbf01000000	                              mov edi, 1	      1806	am.c	FUNCTION_49	WHILE_1	CALL_21
0x4002d68	      0xe800000000	                          call 0x4002d6d	      1806	am.c	FUNCTION_49	WHILE_1	CALL_21
0x4002d6d	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4002d70	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d75	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d7a	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4002d7c	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x4002d88	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x4002d94	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x4002da0	      0xe800000000	                          call 0x4002da5	       183	am.c	FUNCTION_6	CALL_1
0x4002da5	          0x4989c5	                            mov r13, rax	       183	am.c	FUNCTION_6	CALL_1
0x4002da8	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002dab	      0xe800000000	                          call 0x4002db0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002db0	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002db3	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002db6	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002db9	      0xe800000000	                          call 0x4002dbe	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002dbe	    0x488bb424d000	            mov rsi, qword [rsp + 0xd0] 	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4002dc6	          0x4889df	                            mov rdi, rbx	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4002dc9	      0xe802f4ffff	             call sym.fall_back_threeway	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4002dce	          0x4889ef	                            mov rdi, rbp	      1817	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_29
0x4002dd1	          0x4189c5	                           mov r13d, eax	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4002dd4	      0xe800000000	                          call 0x4002dd9	      1817	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_29
0x4002dd9	          0x4585ed	                         test r13d, r13d	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4002ddc	     0xf859d070000	                           jne 0x400357f	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4002de2	            0x31ff	                            xor edi, edi	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4002de4	      0xe800000000	                          call 0x4002de9	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4002de9	            0x85c0	                           test eax, eax	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4002deb	     0xf84330a0000	                            je 0x4003824	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4002df1	          0x4889df	                            mov rdi, rbx	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4002df4	      0xe8f7ebffff	                      call sym.do_commit	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4002df9	          0x4889df	                            mov rdi, rbx	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x4002dfc	      0xe8ffd4ffff	                        call sym.am_next	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x4002e01	          0x4585e4	                         test r12d, r12d	      1848	am.c	FUNCTION_49	WHILE_1	IF_13
0x4002e04	     0xf850a0a0000	                           jne 0x4003814	      1848	am.c	FUNCTION_49	WHILE_1	IF_13
0x4002e0a	          0x4531e4	                          xor r12d, r12d	      1848	am.c	FUNCTION_49	WHILE_1	IF_13
0x4002e0d	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1773	am.c	FUNCTION_49	WHILE_1
0x4002e10	          0x394308	                cmp dword [rbx + 8], eax	      1773	am.c	FUNCTION_49	WHILE_1
0x4002e13	     0xf8ea7faffff	                           jle 0x40028c0	      1773	am.c	FUNCTION_49	WHILE_1
0x4002e19	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4002e1c	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002e21	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002e26	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4002e28	      0xe800000000	                          call 0x4002e2d	       183	am.c	FUNCTION_6	CALL_1
0x4002e2d	          0x4889c7	                            mov rdi, rax	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4002e30	      0xe8fbdaffff	                  call sym.is_empty_file	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4002e35	            0x85c0	                           test eax, eax	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4002e37	     0xf857e090000	                           jne 0x40037bb	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4002e3d	    0x8b8ba0000000	            mov ecx, dword [rbx + 0xa0] 	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4002e43	            0x85c9	                           test ecx, ecx	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4002e45	     0xf84cc0a0000	                            je 0x4003917	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4002e4b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4002e50	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x4002e52	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x4002e57	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       538	am.c	FUNCTION_22
0x4002e63	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       538	am.c	FUNCTION_22
0x4002e6f	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	       538	am.c	FUNCTION_22
0x4002e7b	      0xe800000000	                          call 0x4002e80	        54	gettext.h	FUNCTION_119
0x4002e80	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	       544	am.c	FUNCTION_22	CALL_2
0x4002e86	          0x4989c6	                            mov r14, rax	        54	gettext.h	FUNCTION_119
0x4002e89	            0x85d2	                           test edx, edx	       544	am.c	FUNCTION_22	CALL_2
0x4002e8b	     0xf846d0a0000	                            je 0x40038fe	       544	am.c	FUNCTION_22	CALL_2
0x4002e91	      0xbf00000000	                              mov edi, 0	       546	am.c	FUNCTION_22	CALL_3
0x4002e96	      0xe800000000	                          call 0x4002e9b	       546	am.c	FUNCTION_22	CALL_3
0x4002e9b	          0x4885c0	                           test rax, rax	       547	am.c	FUNCTION_22	IF_1
0x4002e9e	          0x4989c4	                            mov r12, rax	       546	am.c	FUNCTION_22	CALL_3
0x4002ea1	     0xf8481080000	                            je 0x4003728	       547	am.c	FUNCTION_22	IF_1
0x4002ea7	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4002eaa	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002eaf	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002eb4	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4002eb6	      0xe800000000	                          call 0x4002ebb	       183	am.c	FUNCTION_6	CALL_1
0x4002ebb	      0xbe00000000	                              mov esi, 0	       550	am.c	FUNCTION_22	CALL_5
0x4002ec0	          0x4889c7	                            mov rdi, rax	       550	am.c	FUNCTION_22	CALL_5
0x4002ec3	      0xe800000000	                          call 0x4002ec8	       550	am.c	FUNCTION_22	CALL_5
0x4002ec8	          0x4989c5	                            mov r13, rax	       550	am.c	FUNCTION_22	CALL_5
0x4002ecb	          0x4c89ee	                            mov rsi, r13	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4002ece	          0x4889ef	                            mov rdi, rbp	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4002ed1	      0xe800000000	                          call 0x4002ed6	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4002ed6	            0x85c0	                           test eax, eax	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4002ed8	     0xf852d080000	                           jne 0x400370b	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4002ede	    0x4883bc24c800	           cmp qword [rsp + 0xc8], 0x51 	       555	am.c	FUNCTION_22	WHILE_1	IF_2
0x4002ee7	     0xf850c080000	                           jne 0x40036f9	       555	am.c	FUNCTION_22	WHILE_1	IF_2
0x4002eed	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4002ef5	    0x488db4242001	                  lea rsi, [rsp + 0x120]	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4002efd	      0xe800000000	                          call 0x4002f02	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4002f02	            0x85c0	                           test eax, eax	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4002f04	    0x488bb424d000	            mov rsi, qword [rsp + 0xd0] 	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x4002f0c	     0xf85ef070000	                           jne 0x4003701	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4002f12	        0x807e2820	            cmp byte [rsi + 0x28], 0x20 	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x4002f16	     0xf85e5070000	                           jne 0x4003701	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x4002f1c	        0x488d7e29	                   lea rdi, [rsi + 0x29]	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x4002f20	    0x488db4246001	                  lea rsi, [rsp + 0x160]	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x4002f28	      0xe800000000	                          call 0x4002f2d	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x4002f2d	            0x85c0	                           test eax, eax	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x4002f2f	     0xf85c4070000	                           jne 0x40036f9	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x4002f35	    0x488d94246001	                  lea rdx, [rsp + 0x160]	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4002f3d	    0x488db4242001	                  lea rsi, [rsp + 0x120]	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4002f45	          0x4c89e7	                            mov rdi, r12	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4002f48	      0xe800000000	                          call 0x4002f4d	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4002f4d	            0x85c0	                           test eax, eax	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4002f4f	     0xf8476ffffff	                            je 0x4002ecb	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4002f55	    0x488dbc246001	                  lea rdi, [rsp + 0x160]	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f5d	      0xe800000000	                          call 0x4002f62	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f62	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f6a	          0x4989c7	                            mov r15, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f6d	      0xe800000000	                          call 0x4002f72	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f72	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x4002f74	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4002f79	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x4002f7e	      0x4889442408	                mov qword [rsp + 8], rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f83	      0xe800000000	                          call 0x4002f88	        54	gettext.h	FUNCTION_119
0x4002f88	      0x488b742408	                mov rsi, qword [rsp + 8]	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f8d	          0x4889c7	                            mov rdi, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f90	          0x4c89fa	                            mov rdx, r15	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f93	            0x31c0	                            xor eax, eax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f95	      0xe800000000	                          call 0x4002f9a	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f9a	      0xe92cffffff	                           jmp 0x4002ecb	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002f9f	              0x90	                                     nop	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4002fa0	    0x488dbc246001	                  lea rdi, [rsp + 0x160]	      1202	am.c	FUNCTION_37	CALL_1
0x4002fa8	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1194	am.c	FUNCTION_37
0x4002fb1	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1194	am.c	FUNCTION_37
0x4002fba	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1194	am.c	FUNCTION_37
0x4002fc3	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1195	am.c	FUNCTION_37
0x4002fcc	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1195	am.c	FUNCTION_37
0x4002fd5	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1195	am.c	FUNCTION_37
0x4002fde	    0x48c784248000	               mov qword [rsp + 0x80], 0	      1196	am.c	FUNCTION_37
0x4002fea	    0x48c784248800	               mov qword [rsp + 0x88], 0	      1196	am.c	FUNCTION_37
0x4002ff6	    0x48c784249000	               mov qword [rsp + 0x90], 0	      1196	am.c	FUNCTION_37
0x4003002	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      1197	am.c	FUNCTION_37
0x400300e	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      1197	am.c	FUNCTION_37
0x400301a	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      1197	am.c	FUNCTION_37
0x4003026	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      1198	am.c	FUNCTION_37
0x4003032	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      1198	am.c	FUNCTION_37
0x400303e	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1198	am.c	FUNCTION_37
0x400304a	      0xe800000000	                          call 0x400304f	      1202	am.c	FUNCTION_37	CALL_1
0x400304f	        0x448b5b60	           mov r11d, dword [rbx + 0x60] 	      1204	am.c	FUNCTION_37	IF_1
0x4003053	          0x4585db	                         test r11d, r11d	      1204	am.c	FUNCTION_37	IF_1
0x4003056	     0xf851c060000	                           jne 0x4003678	      1204	am.c	FUNCTION_37	IF_1
0x400305c	    0x48c78424c001	              mov qword [rsp + 0x1c0], 0	      1207	am.c	FUNCTION_37	ELSE_1
0x4003068	          0x8b4364	            mov eax, dword [rbx + 0x64] 	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400306b	          0x83f801	                              cmp eax, 1	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400306e	            0x742d	                            je 0x400309d	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003070	          0x83f802	                              cmp eax, 2	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003073	     0xf8411060000	                            je 0x400368a	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003079	            0x85c0	                           test eax, eax	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400307b	            0x742b	                            je 0x40030a8	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400307d	      0xbf00000000	                              mov edi, 0	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x4003082	            0x31c0	                            xor eax, eax	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x4003084	      0xe800000000	                          call 0x4003089	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x4003089	     0xf1f80000000	                         nop dword [rax]	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x4003090	          0x4889df	                            mov rdi, rbx	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4003093	      0xe838d8ffff	          call sym.validate_resume_state	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4003098	      0xe973fcffff	                           jmp 0x4002d10	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x400309d	    0xc78424a80100	              mov dword [rsp + 0x1a8], 1	      1213	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x40030a8	        0x448b5368	           mov r10d, dword [rbx + 0x68] 	      1222	am.c	FUNCTION_37	IF_2
0x40030ac	          0x4585d2	                         test r10d, r10d	      1222	am.c	FUNCTION_37	IF_2
0x40030af	            0x740b	                            je 0x40030bc	      1222	am.c	FUNCTION_37	IF_2
0x40030b1	    0xc78424b00100	              mov dword [rsp + 0x1b0], 1	      1223	am.c	FUNCTION_37	IF_2
0x40030bc	          0x8b436c	            mov eax, dword [rbx + 0x6c] 	      1225	am.c	FUNCTION_37	SWITCH_2
0x40030bf	            0x85c0	                           test eax, eax	      1225	am.c	FUNCTION_37	SWITCH_2
0x40030c1	            0x741a	                            je 0x40030dd	      1225	am.c	FUNCTION_37	SWITCH_2
0x40030c3	          0x83f801	                              cmp eax, 1	      1225	am.c	FUNCTION_37	SWITCH_2
0x40030c6	     0xf84ce050000	                            je 0x400369a	      1225	am.c	FUNCTION_37	SWITCH_2
0x40030cc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1225	am.c	FUNCTION_37	SWITCH_2
0x40030cf	            0x7417	                            je 0x40030e8	      1225	am.c	FUNCTION_37	SWITCH_2
0x40030d1	      0xbf00000000	                              mov edi, 0	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x40030d6	            0x31c0	                            xor eax, eax	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x40030d8	      0xe800000000	                          call 0x40030dd	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x40030dd	    0xc78424b40100	              mov dword [rsp + 0x1b4], 0	      1229	am.c	FUNCTION_37	SWITCH_2
0x40030e8	          0x4c89ef	                            mov rdi, r13	      1238	am.c	FUNCTION_37	CALL_5
0x40030eb	      0xbe00000000	                              mov esi, 0	      1238	am.c	FUNCTION_37	CALL_5
0x40030f0	      0xe800000000	                          call 0x40030f5	      1238	am.c	FUNCTION_37	CALL_5
0x40030f5	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x40030f8	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40030fd	    0x488984246001	            mov qword [rsp + 0x160], rax	      1238	am.c	FUNCTION_37	CALL_5
0x4003105	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400310a	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x400310c	      0xe800000000	                          call 0x4003111	       183	am.c	FUNCTION_6	CALL_1
0x4003111	      0xbe00000000	                              mov esi, 0	      1239	am.c	FUNCTION_37	CALL_7
0x4003116	          0x4889c7	                            mov rdi, rax	      1239	am.c	FUNCTION_37	CALL_7
0x4003119	      0xe800000000	                          call 0x400311e	      1239	am.c	FUNCTION_37	CALL_7
0x400311e	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4003121	    0x488984246801	            mov qword [rsp + 0x168], rax	      1239	am.c	FUNCTION_37	CALL_7
0x4003129	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400312e	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003133	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4003135	      0xe800000000	                          call 0x400313a	       183	am.c	FUNCTION_6	CALL_1
0x400313a	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x400313d	          0x4989c5	                            mov r13, rax	       183	am.c	FUNCTION_6	CALL_1
0x4003140	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003145	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400314a	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x400314c	      0xe800000000	                          call 0x4003151	       183	am.c	FUNCTION_6	CALL_1
0x4003151	    0x488dbc246001	                  lea rdi, [rsp + 0x160]	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4003159	          0x4c89ea	                            mov rdx, r13	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x400315c	          0x4889c6	                            mov rsi, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x400315f	      0xe800000000	                          call 0x4003164	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4003164	            0x85c0	                           test eax, eax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4003166	     0xf8520080000	                           jne 0x400398c	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x400316c	    0x488bbc246001	           mov rdi, qword [rsp + 0x160] 	      1243	am.c	FUNCTION_37	CALL_12
0x4003174	      0xe800000000	                          call 0x4003179	      1243	am.c	FUNCTION_37	CALL_12
0x4003179	    0x488bbc246801	           mov rdi, qword [rsp + 0x168] 	      1244	am.c	FUNCTION_37	CALL_13
0x4003181	      0xe800000000	                          call 0x4003186	      1244	am.c	FUNCTION_37	CALL_13
0x4003186	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4003189	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400318e	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003193	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4003195	      0xe800000000	                          call 0x400319a	       183	am.c	FUNCTION_6	CALL_1
0x400319a	      0xbe00000000	                              mov esi, 0	      1247	am.c	FUNCTION_37	CALL_15
0x400319f	          0x4889c7	                            mov rdi, rax	      1247	am.c	FUNCTION_37	CALL_15
0x40031a2	      0xe800000000	                          call 0x40031a7	      1247	am.c	FUNCTION_37	CALL_15
0x40031a7	      0x4889442408	                mov qword [rsp + 8], rax	      1247	am.c	FUNCTION_37	CALL_15
0x40031ac	         0xf1f4000	                         nop dword [rax]	      1247	am.c	FUNCTION_37	CALL_15
0x40031b0	      0x488b742408	                mov rsi, qword [rsp + 8]	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x40031b5	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x40031ba	      0xe800000000	                          call 0x40031bf	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x40031bf	            0x85c0	                           test eax, eax	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x40031c1	     0xf859d010000	                           jne 0x4003364	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x40031c7	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x40031cc	      0xb800000000	                              mov eax, 0	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x40031d1	          0x4889f1	                            mov rcx, rsi	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x40031d4	            0xeb17	                           jmp 0x40031ed	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x40031d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x40031e0	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40031e4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40031e8	          0x3a51ff	                  cmp dl, byte [rcx - 1]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40031eb	            0x7543	                           jne 0x4003230	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40031ed	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x40031f0	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x40031f2	            0x75ec	                           jne 0x40031e0	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x40031f4	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40031f9	      0x4c8d6c2460	                   lea r13, [rsp + 0x60]	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40031fe	          0x4885c0	                           test rax, rax	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4003201	     0xf8509010000	                           jne 0x4003310	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4003207	          0x4889cf	                            mov rdi, rcx	       279	strbuf.h	FUNCTION_110	CALL_2
0x400320a	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       279	strbuf.h	FUNCTION_110	CALL_2
0x400320f	      0xe800000000	                          call 0x4003214	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003214	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003219	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x400321c	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x400321f	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003222	      0xe800000000	                          call 0x4003227	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003227	            0xeb87	                           jmp 0x40031b0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003229	     0xf1f80000000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003230	          0x4989f5	                            mov r13, rsi	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003233	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003238	            0xeb14	                           jmp 0x400324e	       488	git-compat-util.h	FUNCTION_68	DO_1
0x400323a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003240	        0x4983c501	                              add r13, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003244	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003248	        0x413a55ff	                  cmp dl, byte [r13 - 1]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x400324c	            0x752a	                           jne 0x4003278	       488	git-compat-util.h	FUNCTION_68	DO_1
0x400324e	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4003251	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4003253	            0x75eb	                           jne 0x4003240	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4003255	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003258	      0xe800000000	                          call 0x400325d	       279	strbuf.h	FUNCTION_110	CALL_2
0x400325d	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003265	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003268	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x400326b	      0xe800000000	                          call 0x4003270	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003270	      0xe93bffffff	                           jmp 0x40031b0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003275	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003278	          0x4989f5	                            mov r13, rsi	       488	git-compat-util.h	FUNCTION_68	DO_1
0x400327b	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003280	            0xeb14	                           jmp 0x4003296	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003282	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003288	        0x4983c501	                              add r13, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x400328c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003290	        0x413a55ff	                  cmp dl, byte [r13 - 1]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003294	            0x752a	                           jne 0x40032c0	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4003296	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4003299	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x400329b	            0x75eb	                           jne 0x4003288	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x400329d	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032a0	      0xe800000000	                          call 0x40032a5	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032a5	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032a8	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032ab	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032ae	      0xe800000000	                          call 0x40032b3	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032b3	      0xe9f8feffff	                           jmp 0x40031b0	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032b8	     0xf1f84000000	                   nop dword [rax + rax]	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032c0	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40032c5	            0xeb1a	                           jmp 0x40032e1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40032c7	    0x660f1f840000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40032d0	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40032d4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40032d8	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40032db	     0xf85cffeffff	                           jne 0x40031b0	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40032e1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x40032e4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x40032e6	            0x75e8	                           jne 0x40032d0	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x40032e8	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032eb	      0x4889742410	             mov qword [rsp + 0x10], rsi	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032f0	      0xe800000000	                          call 0x40032f5	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032f5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x40032fa	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003302	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003305	      0xe800000000	                          call 0x400330a	       279	strbuf.h	FUNCTION_110	CALL_2
0x400330a	      0xe9a1feffff	                           jmp 0x40031b0	       279	strbuf.h	FUNCTION_110	CALL_2
0x400330f	              0x90	                                     nop	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003310	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003315	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_107
0x4003318	     0xf85e2020000	                           jne 0x4003600	       141	strbuf.h	FUNCTION_107
0x400331e	      0x4c8d6c2460	                   lea r13, [rsp + 0x60]	       228	strbuf.h	FUNCTION_109	CALL_2
0x4003323	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4003328	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       228	strbuf.h	FUNCTION_109	CALL_2
0x400332d	          0x4c89ef	                            mov rdi, r13	       228	strbuf.h	FUNCTION_109	CALL_2
0x4003330	      0xe800000000	                          call 0x4003335	       228	strbuf.h	FUNCTION_109	CALL_2
0x4003335	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x400333a	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x400333f	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_109
0x4003343	      0x4889542468	             mov qword [rsp + 0x68], rdx	       229	strbuf.h	FUNCTION_109
0x4003348	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       229	strbuf.h	FUNCTION_109
0x400334d	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_109
0x4003351	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       230	strbuf.h	FUNCTION_109
0x4003356	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       230	strbuf.h	FUNCTION_109
0x400335b	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x400335f	      0xe9a3feffff	                           jmp 0x4003207	       230	strbuf.h	FUNCTION_109
0x4003364	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1262	am.c	FUNCTION_37	CALL_26
0x4003369	      0xe800000000	                          call 0x400336e	      1262	am.c	FUNCTION_37	CALL_26
0x400336e	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4003376	      0xbf00000000	                              mov edi, 0	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x400337b	      0xb91a000000	                           mov ecx, 0x1a	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4003380	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4003382	     0xf841d010000	                            je 0x40034a5	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4003388	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x400338b	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003390	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003395	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4003397	      0xe800000000	                          call 0x400339c	       183	am.c	FUNCTION_6	CALL_1
0x400339c	          0x4889c7	                            mov rdi, rax	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x400339f	      0xe88cd5ffff	                  call sym.is_empty_file	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x40033a4	            0x85c0	                           test eax, eax	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x40033a6	     0xf85d9050000	                           jne 0x4003985	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x40033ac	      0x4c8d6c2460	                   lea r13, [rsp + 0x60]	       279	strbuf.h	FUNCTION_110	CALL_2
0x40033b1	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_110	CALL_2
0x40033b6	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x40033bb	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x40033be	      0xe800000000	                          call 0x40033c3	       279	strbuf.h	FUNCTION_110	CALL_2
0x40033c3	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1276	am.c	FUNCTION_37	CALL_34
0x40033c8	          0x4c89ef	                            mov rdi, r13	      1276	am.c	FUNCTION_37	CALL_34
0x40033cb	      0xe800000000	                          call 0x40033d0	      1276	am.c	FUNCTION_37	CALL_34
0x40033d0	            0x31f6	                            xor esi, esi	      1277	am.c	FUNCTION_37	CALL_35
0x40033d2	          0x4c89ef	                            mov rdi, r13	      1277	am.c	FUNCTION_37	CALL_35
0x40033d5	      0xe800000000	                          call 0x40033da	      1277	am.c	FUNCTION_37	CALL_35
0x40033da	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1279	am.c	FUNCTION_37	CALL_36
0x40033df	     0xf85ce040000	                           jne 0x40038b3	      1279	am.c	FUNCTION_37	CALL_36
0x40033e5	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1280	am.c	FUNCTION_37	CALL_37
0x40033ed	            0x31f6	                            xor esi, esi	      1280	am.c	FUNCTION_37	CALL_37
0x40033ef	      0xe800000000	                          call 0x40033f4	      1280	am.c	FUNCTION_37	CALL_37
0x40033f4	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1282	am.c	FUNCTION_37	CALL_38
0x40033f9	        0x48894310	             mov qword [rbx + 0x10], rax	      1280	am.c	FUNCTION_37	CALL_37
0x40033fd	     0xf8597040000	                           jne 0x400389a	      1282	am.c	FUNCTION_37	CALL_38
0x4003403	            0x31f6	                            xor esi, esi	      1283	am.c	FUNCTION_37	CALL_39
0x4003405	          0x4889ef	                            mov rdi, rbp	      1283	am.c	FUNCTION_37	CALL_39
0x4003408	      0xe800000000	                          call 0x400340d	      1283	am.c	FUNCTION_37	CALL_39
0x400340d	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1285	am.c	FUNCTION_37	CALL_40
0x4003412	        0x48894318	             mov qword [rbx + 0x18], rax	      1283	am.c	FUNCTION_37	CALL_39
0x4003416	     0xf85c9040000	                           jne 0x40038e5	      1285	am.c	FUNCTION_37	CALL_40
0x400341c	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1286	am.c	FUNCTION_37	CALL_41
0x4003424	            0x31f6	                            xor esi, esi	      1286	am.c	FUNCTION_37	CALL_41
0x4003426	      0xe800000000	                          call 0x400342b	      1286	am.c	FUNCTION_37	CALL_41
0x400342b	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      1288	am.c	FUNCTION_37	CALL_42
0x4003430	        0x48894320	             mov qword [rbx + 0x20], rax	      1286	am.c	FUNCTION_37	CALL_41
0x4003434	     0xf8592040000	                           jne 0x40038cc	      1288	am.c	FUNCTION_37	CALL_42
0x400343a	        0x488d7330	                   lea rsi, [rbx + 0x30]	      1289	am.c	FUNCTION_37	CALL_43
0x400343e	          0x4c89ef	                            mov rdi, r13	      1289	am.c	FUNCTION_37	CALL_43
0x4003441	      0xe800000000	                          call 0x4003446	      1289	am.c	FUNCTION_37	CALL_43
0x4003446	          0x4c89ef	                            mov rdi, r13	      1292	am.c	FUNCTION_37	CALL_44
0x4003449	        0x48894328	             mov qword [rbx + 0x28], rax	      1289	am.c	FUNCTION_37	CALL_43
0x400344d	      0xe800000000	                          call 0x4003452	      1292	am.c	FUNCTION_37	CALL_44
0x4003452	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1293	am.c	FUNCTION_37	CALL_45
0x400345a	      0xe800000000	                          call 0x400345f	      1293	am.c	FUNCTION_37	CALL_45
0x400345f	          0x4889ef	                            mov rdi, rbp	      1294	am.c	FUNCTION_37	CALL_46
0x4003462	      0xe800000000	                          call 0x4003467	      1294	am.c	FUNCTION_37	CALL_46
0x4003467	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1295	am.c	FUNCTION_37	CALL_47
0x400346f	      0xe800000000	                          call 0x4003474	      1295	am.c	FUNCTION_37	CALL_47
0x4003474	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1296	am.c	FUNCTION_37	CALL_48
0x4003479	      0xe800000000	                          call 0x400347e	      1296	am.c	FUNCTION_37	CALL_48
0x400347e	    0x488dbc246001	                  lea rdi, [rsp + 0x160]	      1297	am.c	FUNCTION_37	CALL_49
0x4003486	      0xe800000000	                          call 0x400348b	      1297	am.c	FUNCTION_37	CALL_49
0x400348b	        0x448b4b5c	            mov r9d, dword [rbx + 0x5c] 	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x400348f	          0x4585c9	                           test r9d, r9d	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4003492	     0xf84c3f6ffff	                            je 0x4002b5b	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4003498	          0x4889df	                            mov rdi, rbx	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x400349b	      0xe8a0cbffff	              call sym.am_append_signoff	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x40034a0	      0xe9b6f6ffff	                           jmp 0x4002b5b	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x40034a5	      0x4c8d6c2460	                   lea r13, [rsp + 0x60]	      1292	am.c	FUNCTION_37	CALL_44
0x40034aa	          0x4c89ef	                            mov rdi, r13	      1292	am.c	FUNCTION_37	CALL_44
0x40034ad	      0xe800000000	                          call 0x40034b2	      1292	am.c	FUNCTION_37	CALL_44
0x40034b2	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1293	am.c	FUNCTION_37	CALL_45
0x40034ba	      0xe800000000	                          call 0x40034bf	      1293	am.c	FUNCTION_37	CALL_45
0x40034bf	          0x4889ef	                            mov rdi, rbp	      1294	am.c	FUNCTION_37	CALL_46
0x40034c2	      0xe800000000	                          call 0x40034c7	      1294	am.c	FUNCTION_37	CALL_46
0x40034c7	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1295	am.c	FUNCTION_37	CALL_47
0x40034cf	      0xe800000000	                          call 0x40034d4	      1295	am.c	FUNCTION_37	CALL_47
0x40034d4	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1296	am.c	FUNCTION_37	CALL_48
0x40034d9	      0xe800000000	                          call 0x40034de	      1296	am.c	FUNCTION_37	CALL_48
0x40034de	    0x488dbc246001	                  lea rdi, [rsp + 0x160]	      1297	am.c	FUNCTION_37	CALL_49
0x40034e6	      0xe800000000	                          call 0x40034eb	      1297	am.c	FUNCTION_37	CALL_49
0x40034eb	          0x4889df	                            mov rdi, rbx	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x40034ee	      0xe80dceffff	                        call sym.am_next	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x40034f3	      0xe912f9ffff	                           jmp 0x4002e0a	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x40034f8	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       496	am.c	FUNCTION_20	IF_1
0x40034fc	      0xe800000000	                          call 0x4003501	       496	am.c	FUNCTION_20	IF_1
0x4003501	    0x48c743280000	               mov qword [rbx + 0x28], 0	       496	am.c	FUNCTION_20	IF_1
0x4003509	          0x4889df	                            mov rdi, rbx	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x400350c	      0xe8cfdbffff	                call sym.read_commit_msg	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x4003511	            0x85c0	                           test eax, eax	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x4003513	     0xf883a030000	                            js 0x4003853	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x4003519	        0x4c8b4328	              mov r8, qword [rbx + 0x28]	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x400351d	      0xbe0a000000	                            mov esi, 0xa	        57	am.c	FUNCTION_2
0x4003522	          0x4c89c7	                             mov rdi, r8	        57	am.c	FUNCTION_2
0x4003525	      0x4c89442408	                 mov qword [rsp + 8], r8	        57	am.c	FUNCTION_2
0x400352a	      0xe800000000	                          call 0x400352f	        57	am.c	FUNCTION_2
0x400352f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x4003531	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4003536	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x400353b	          0x4989c5	                            mov r13, rax	        57	am.c	FUNCTION_2
0x400353e	      0xe800000000	                          call 0x4003543	        54	gettext.h	FUNCTION_119
0x4003543	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003548	    0x488b35000000	            mov rsi, qword [0x0400354f] 	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x400354f	          0x4c89e9	                            mov rcx, r13	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003552	          0x4889c2	                            mov rdx, rax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003555	          0x4889df	                            mov rdi, rbx	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003558	            0x31c0	                            xor eax, eax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x400355a	          0x4c29c1	                             sub rcx, r8	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x400355d	      0xe8ded1ffff	                            call sym.say	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003562	            0x31f6	                            xor esi, esi	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4003564	          0x4889df	                            mov rdi, rbx	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4003567	      0xe8e4cfffff	                      call sym.run_apply	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x400356c	            0x85c0	                           test eax, eax	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x400356e	     0xf847df8ffff	                            je 0x4002df1	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4003574	          0x8b7b54	            mov edi, dword [rbx + 0x54] 	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4003577	            0x85ff	                           test edi, edi	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4003579	     0xf85eef7ffff	                           jne 0x4002d6d	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x400357f	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      1833	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_36
0x4003583	      0xbe0a000000	                            mov esi, 0xa	        57	am.c	FUNCTION_2
0x4003588	    0xc78424c00000	               mov dword [rsp + 0xc0], 1	      1830	am.c	FUNCTION_49	WHILE_1	IF_11
0x4003593	          0x4c89ef	                            mov rdi, r13	        57	am.c	FUNCTION_2
0x4003596	      0xe800000000	                          call 0x400359b	        57	am.c	FUNCTION_2
0x400359b	          0x4c89f7	                            mov rdi, r14	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x400359e	          0x4c89fe	                            mov rsi, r15	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40035a1	          0x4989c4	                            mov r12, rax	        57	am.c	FUNCTION_2
0x40035a4	      0xe8f7d9ffff	                 call sym.msgnum.isra.13	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40035a9	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x40035ab	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x40035b0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x40035b5	          0x4989c6	                            mov r14, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40035b8	      0xe800000000	                          call 0x40035bd	        54	gettext.h	FUNCTION_119
0x40035bd	          0x4c89e2	                            mov rdx, r12	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40035c0	          0x4889c7	                            mov rdi, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40035c3	          0x4c89e9	                            mov rcx, r13	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40035c6	          0x4c29ea	                            sub rdx, r13	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40035c9	          0x4c89f6	                            mov rsi, r14	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40035cc	            0x31c0	                            xor eax, eax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40035ce	      0xe800000000	                          call 0x40035d3	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40035d3	          0x4889ee	                            mov rsi, rbp	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x40035d6	      0xbf00000000	                              mov edi, 0	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x40035db	      0xe800000000	                          call 0x40035e0	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x40035e0	    0x8bb424c00000	            mov esi, dword [rsp + 0xc0] 	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x40035e7	            0x85f6	                           test esi, esi	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x40035e9	     0xf8541030000	                           jne 0x4003930	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x40035ef	    0x488bb3800000	            mov rsi, qword [rbx + 0x80] 	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x40035f6	          0x8b7b50	            mov edi, dword [rbx + 0x50] 	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x40035f9	      0xe8c2d3ffff	       call sym.die_user_resolve.isra.11	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x40035fe	            0x6690	                                     nop	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x4003600	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003604	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003607	     0xf8411fdffff	                            je 0x400331e	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400360d	      0x4c8d6c2460	                   lea r13, [rsp + 0x60]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003612	      0xe928fdffff	                           jmp 0x400333f	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003617	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	       141	strbuf.h	FUNCTION_107
0x400361f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003623	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003626	     0xf8597f5ffff	                           jne 0x4002bc3	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400362c	      0xe97df5ffff	                           jmp 0x4002bae	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003631	     0xf1f80000000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003638	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	       141	strbuf.h	FUNCTION_107
0x4003640	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003644	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003647	     0xf8556f6ffff	                           jne 0x4002ca3	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400364d	      0xe93cf6ffff	                           jmp 0x4002c8e	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003652	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003658	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	       141	strbuf.h	FUNCTION_107
0x4003660	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003664	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003667	     0xf85c6f5ffff	                           jne 0x4002c33	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400366d	      0xe9acf5ffff	                           jmp 0x4002c1e	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003672	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003678	      0xe800000000	                          call 0x400367d	      1205	am.c	FUNCTION_37	CALL_2
0x400367d	    0x48898424c001	            mov qword [rsp + 0x1c0], rax	      1205	am.c	FUNCTION_37	CALL_2
0x4003685	      0xe9def9ffff	                           jmp 0x4003068	      1205	am.c	FUNCTION_37	CALL_2
0x400368a	    0xc78424ac0100	              mov dword [rsp + 0x1ac], 1	      1216	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003695	      0xe90efaffff	                           jmp 0x40030a8	      1216	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400369a	    0xc78424b40100	              mov dword [rsp + 0x1b4], 1	      1232	am.c	FUNCTION_37	SWITCH_2
0x40036a5	      0xe93efaffff	                           jmp 0x40030e8	      1232	am.c	FUNCTION_37	SWITCH_2
0x40036aa	      0xbf00000000	                              mov edi, 0	      1351	am.c	FUNCTION_39	CALL_12
0x40036af	      0xe800000000	                          call 0x40036b4	      1351	am.c	FUNCTION_39	CALL_12
0x40036b4	        0x48894318	             mov qword [rbx + 0x18], rax	      1351	am.c	FUNCTION_39	CALL_12
0x40036b8	      0xe9b0f3ffff	                           jmp 0x4002a6d	      1351	am.c	FUNCTION_39	CALL_12
0x40036bd	      0xbf00000000	                              mov edi, 0	      1344	am.c	FUNCTION_39	CALL_9
0x40036c2	      0xe800000000	                          call 0x40036c7	      1344	am.c	FUNCTION_39	CALL_9
0x40036c7	        0x48894310	             mov qword [rbx + 0x10], rax	      1344	am.c	FUNCTION_39	CALL_9
0x40036cb	      0xe96df3ffff	                           jmp 0x4002a3d	      1344	am.c	FUNCTION_39	CALL_9
0x40036d0	          0x4889ef	                            mov rdi, rbp	      1317	am.c	FUNCTION_38	CALL_5
0x40036d3	      0xe800000000	                          call 0x40036d8	      1317	am.c	FUNCTION_38	CALL_5
0x40036d8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1318	am.c	FUNCTION_38	CALL_6
0x40036dd	      0xe800000000	                          call 0x40036e2	      1318	am.c	FUNCTION_38	CALL_6
0x40036e2	      0xbf00000000	                              mov edi, 0	      1318	am.c	FUNCTION_38	CALL_6
0x40036e7	      0xe8d4d1ffff	                       call sym._.part.6	      1318	am.c	FUNCTION_38	CALL_6
0x40036ec	          0x4c89ee	                            mov rsi, r13	      1436	am.c	FUNCTION_42	CALL_3
0x40036ef	          0x4889c7	                            mov rdi, rax	      1436	am.c	FUNCTION_42	CALL_3
0x40036f2	            0x31c0	                            xor eax, eax	      1436	am.c	FUNCTION_42	CALL_3
0x40036f4	      0xe800000000	                          call 0x40036f9	      1436	am.c	FUNCTION_42	CALL_3
0x40036f9	    0x488bb424d000	            mov rsi, qword [rsp + 0xd0] 	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x4003701	          0x4c89f7	                            mov rdi, r14	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x4003704	            0x31c0	                            xor eax, eax	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x4003706	      0xe800000000	                          call 0x400370b	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x400370b	      0xbe00000000	                              mov esi, 0	       581	am.c	FUNCTION_22	CALL_13
0x4003710	          0x4c89e7	                            mov rdi, r12	       581	am.c	FUNCTION_22	CALL_13
0x4003713	      0xe800000000	                          call 0x4003718	       581	am.c	FUNCTION_22	CALL_13
0x4003718	          0x4c89ef	                            mov rdi, r13	       582	am.c	FUNCTION_22	CALL_14
0x400371b	      0xe800000000	                          call 0x4003720	       582	am.c	FUNCTION_22	CALL_14
0x4003720	          0x4889ef	                            mov rdi, rbp	       583	am.c	FUNCTION_22	CALL_15
0x4003723	      0xe800000000	                          call 0x4003728	       583	am.c	FUNCTION_22	CALL_15
0x4003728	            0x31c0	                            xor eax, eax	       510	am.c	FUNCTION_21
0x400372a	      0xb90c000000	                            mov ecx, 0xc	       510	am.c	FUNCTION_21
0x400372f	          0x4889ef	                            mov rdi, rbp	       510	am.c	FUNCTION_21
0x4003732	          0xf348ab	              rep stosq qword [rdi], rax	       510	am.c	FUNCTION_21
0x4003735	      0xbf00000000	                              mov edi, 0	       511	am.c	FUNCTION_21	CALL_1
0x400373a	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       510	am.c	FUNCTION_21
0x4003746	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	       510	am.c	FUNCTION_21
0x4003752	      0xe800000000	                          call 0x4003757	       511	am.c	FUNCTION_21	CALL_1
0x4003757	          0x4885c0	                           test rax, rax	       514	am.c	FUNCTION_21	IF_1
0x400375a	            0x745f	                            je 0x40037bb	       514	am.c	FUNCTION_21	IF_1
0x400375c	        0x4c8d6508	                      lea r12, [rbp + 8]	       517	am.c	FUNCTION_21	CALL_2
0x4003760	          0x4889c6	                            mov rsi, rax	       517	am.c	FUNCTION_21	CALL_2
0x4003763	          0x4c89e7	                            mov rdi, r12	       517	am.c	FUNCTION_21	CALL_2
0x4003766	      0xe800000000	                          call 0x400376b	       517	am.c	FUNCTION_21	CALL_2
0x400376b	      0xbe00000000	                              mov esi, 0	       518	am.c	FUNCTION_21	CALL_3
0x4003770	          0x4c89e7	                            mov rdi, r12	       518	am.c	FUNCTION_21	CALL_3
0x4003773	      0xe800000000	                          call 0x4003778	       518	am.c	FUNCTION_21	CALL_3
0x4003778	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x400377b	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003780	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003785	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4003787	      0xe800000000	                          call 0x400378c	       183	am.c	FUNCTION_6	CALL_1
0x400378c	            0x31f6	                            xor esi, esi	       520	am.c	FUNCTION_21	CALL_5
0x400378e	          0x4889c7	                            mov rdi, rax	       520	am.c	FUNCTION_21	CALL_5
0x4003791	            0x31c0	                            xor eax, eax	       520	am.c	FUNCTION_21	CALL_5
0x4003793	      0xe800000000	                          call 0x4003798	       520	am.c	FUNCTION_21	CALL_5
0x4003798	          0x4889ef	                            mov rdi, rbp	       523	am.c	FUNCTION_21	CALL_6
0x400379b	    0x898424ec0000	             mov dword [rsp + 0xec], eax	       520	am.c	FUNCTION_21	CALL_5
0x40037a2	    0x808c24080100	             or byte [rsp + 0x108], 0x20	       521	am.c	FUNCTION_21
0x40037aa	      0xe800000000	                          call 0x40037af	       523	am.c	FUNCTION_21	CALL_6
0x40037af	    0x8bbc24ec0000	            mov edi, dword [rsp + 0xec] 	       525	am.c	FUNCTION_21	CALL_7
0x40037b6	      0xe800000000	                          call 0x40037bb	       525	am.c	FUNCTION_21	CALL_7
0x40037bb	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1863	am.c	FUNCTION_49	IF_15
0x40037c1	            0x85c0	                           test eax, eax	      1863	am.c	FUNCTION_49	IF_15
0x40037c3	            0x752a	                           jne 0x40037ef	      1863	am.c	FUNCTION_49	IF_15
0x40037c5	          0x488b3b	                    mov rdi, qword [rbx]	      1864	am.c	FUNCTION_49	IF_15	CALL_49
0x40037c8	      0xe823d5ffff	             call sym.am_destroy.isra.14	      1864	am.c	FUNCTION_49	IF_15	CALL_49
0x40037cd	    0x488b05000000	            mov rax, qword [0x040037d4] 	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x40037d4	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x40037d8	      0xe800000000	                          call 0x40037dd	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x40037dd	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x40037e5	      0xbe02000000	                              mov esi, 2	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x40037ea	      0xe800000000	                          call 0x40037ef	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x40037ef	    0x488b84247802	           mov rax, qword [rsp + 0x278] 	      1868	am.c	FUNCTION_49
0x40037f7	    0x644833042528	                xor rax, qword fs:[0x28]	      1868	am.c	FUNCTION_49
0x4003800	            0x754c	                           jne 0x400384e	      1868	am.c	FUNCTION_49
0x4003802	    0x4881c4880200	                          add rsp, 0x288	      1868	am.c	FUNCTION_49
0x4003809	              0x5b	                                 pop rbx	      1868	am.c	FUNCTION_49
0x400380a	              0x5d	                                 pop rbp	      1868	am.c	FUNCTION_49
0x400380b	            0x415c	                                 pop r12	      1868	am.c	FUNCTION_49
0x400380d	            0x415d	                                 pop r13	      1868	am.c	FUNCTION_49
0x400380f	            0x415e	                                 pop r14	      1868	am.c	FUNCTION_49
0x4003811	            0x415f	                                 pop r15	      1868	am.c	FUNCTION_49
0x4003813	              0xc3	                                     ret	      1868	am.c	FUNCTION_49
0x4003814	          0x4889df	                            mov rdi, rbx	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x4003817	          0x4531e4	                          xor r12d, r12d	      1850	am.c	FUNCTION_49	WHILE_1
0x400381a	      0xe871d9ffff	                        call sym.am_load	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x400381f	      0xe989f0ffff	                           jmp 0x40028ad	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x4003824	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x4003826	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x400382b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x4003830	      0xe800000000	                          call 0x4003835	        54	gettext.h	FUNCTION_119
0x4003835	    0x488b35000000	            mov rsi, qword [0x0400383c] 	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x400383c	          0x4889c2	                            mov rdx, rax	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x400383f	          0x4889df	                            mov rdi, rbx	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4003842	            0x31c0	                            xor eax, eax	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4003844	      0xe8f7ceffff	                            call sym.say	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4003849	      0xe9abf5ffff	                           jmp 0x4002df9	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x400384e	      0xe800000000	                          call 0x4003853	      1868	am.c	FUNCTION_49
0x4003853	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4003856	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400385b	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003860	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4003862	      0xe800000000	                          call 0x4003867	       183	am.c	FUNCTION_6	CALL_1
0x4003867	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400386c	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x400386f	      0xe84cd0ffff	                       call sym._.part.6	       183	am.c	FUNCTION_6	CALL_1
0x4003874	          0x4889de	                            mov rsi, rbx	      1359	am.c	FUNCTION_39	CALL_20
0x4003877	          0x4889c7	                            mov rdi, rax	      1359	am.c	FUNCTION_39	CALL_20
0x400387a	            0x31c0	                            xor eax, eax	      1359	am.c	FUNCTION_39	CALL_20
0x400387c	      0xe800000000	                          call 0x4003881	      1359	am.c	FUNCTION_39	CALL_20
0x4003881	      0xb900000000	                              mov ecx, 0	      1353	am.c	FUNCTION_39	CALL_13
0x4003886	      0xba49050000	                          mov edx, 0x549	      1353	am.c	FUNCTION_39	CALL_13
0x400388b	      0xbe00000000	                              mov esi, 0	      1353	am.c	FUNCTION_39	CALL_13
0x4003890	      0xbf00000000	                              mov edi, 0	      1353	am.c	FUNCTION_39	CALL_13
0x4003895	      0xe800000000	                          call 0x400389a	      1353	am.c	FUNCTION_39	CALL_13
0x400389a	      0xb900000000	                              mov ecx, 0	      1282	am.c	FUNCTION_37	CALL_38
0x400389f	      0xba02050000	                          mov edx, 0x502	      1282	am.c	FUNCTION_37	CALL_38
0x40038a4	      0xbe00000000	                              mov esi, 0	      1282	am.c	FUNCTION_37	CALL_38
0x40038a9	      0xbf00000000	                              mov edi, 0	      1282	am.c	FUNCTION_37	CALL_38
0x40038ae	      0xe800000000	                          call 0x40038b3	      1282	am.c	FUNCTION_37	CALL_38
0x40038b3	      0xb900000000	                              mov ecx, 0	      1279	am.c	FUNCTION_37	CALL_36
0x40038b8	      0xbaff040000	                          mov edx, 0x4ff	      1279	am.c	FUNCTION_37	CALL_36
0x40038bd	      0xbe00000000	                              mov esi, 0	      1279	am.c	FUNCTION_37	CALL_36
0x40038c2	      0xbf00000000	                              mov edi, 0	      1279	am.c	FUNCTION_37	CALL_36
0x40038c7	      0xe800000000	                          call 0x40038cc	      1279	am.c	FUNCTION_37	CALL_36
0x40038cc	      0xb900000000	                              mov ecx, 0	      1288	am.c	FUNCTION_37	CALL_42
0x40038d1	      0xba08050000	                          mov edx, 0x508	      1288	am.c	FUNCTION_37	CALL_42
0x40038d6	      0xbe00000000	                              mov esi, 0	      1288	am.c	FUNCTION_37	CALL_42
0x40038db	      0xbf00000000	                              mov edi, 0	      1288	am.c	FUNCTION_37	CALL_42
0x40038e0	      0xe800000000	                          call 0x40038e5	      1288	am.c	FUNCTION_37	CALL_42
0x40038e5	      0xb900000000	                              mov ecx, 0	      1285	am.c	FUNCTION_37	CALL_40
0x40038ea	      0xba05050000	                          mov edx, 0x505	      1285	am.c	FUNCTION_37	CALL_40
0x40038ef	      0xbe00000000	                              mov esi, 0	      1285	am.c	FUNCTION_37	CALL_40
0x40038f4	      0xbf00000000	                              mov edi, 0	      1285	am.c	FUNCTION_37	CALL_40
0x40038f9	      0xe800000000	                          call 0x40038fe	      1285	am.c	FUNCTION_37	CALL_40
0x40038fe	      0xb900000000	                              mov ecx, 0	       544	am.c	FUNCTION_22	CALL_2
0x4003903	      0xba20020000	                          mov edx, 0x220	       544	am.c	FUNCTION_22	CALL_2
0x4003908	      0xbe00000000	                              mov esi, 0	       544	am.c	FUNCTION_22	CALL_2
0x400390d	      0xbf00000000	                              mov edi, 0	       544	am.c	FUNCTION_22	CALL_2
0x4003912	      0xe800000000	                          call 0x4003917	       544	am.c	FUNCTION_22	CALL_2
0x4003917	      0xb900000000	                              mov ecx, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x400391c	      0xba3e070000	                          mov edx, 0x73e	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4003921	      0xbe00000000	                              mov esi, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4003926	      0xbf00000000	                              mov edi, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x400392b	      0xe800000000	                          call 0x4003930	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4003930	      0xbf00000000	                              mov edi, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4003935	      0xe886cfffff	                       call sym._.part.6	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x400393a	          0x4889c7	                            mov rdi, rax	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x400393d	            0x31c0	                            xor eax, eax	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x400393f	      0xe800000000	                          call 0x4003944	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4003944	      0xe9a6fcffff	                           jmp 0x40035ef	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4003949	      0xb900000000	                              mov ecx, 0	      1339	am.c	FUNCTION_39	CALL_7
0x400394e	      0xba3b050000	                          mov edx, 0x53b	      1339	am.c	FUNCTION_39	CALL_7
0x4003953	      0xbe00000000	                              mov esi, 0	      1339	am.c	FUNCTION_39	CALL_7
0x4003958	      0xbf00000000	                              mov edi, 0	      1339	am.c	FUNCTION_39	CALL_7
0x400395d	      0xe800000000	                          call 0x4003962	      1339	am.c	FUNCTION_39	CALL_7
0x4003962	    0x488b9c24a000	            mov rbx, qword [rsp + 0xa0] 	      1337	am.c	FUNCTION_39	CALL_6
0x400396a	      0xbf00000000	                              mov edi, 0	      1337	am.c	FUNCTION_39	CALL_6
0x400396f	      0xe84ccfffff	                       call sym._.part.6	      1337	am.c	FUNCTION_39	CALL_6
0x4003974	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1337	am.c	FUNCTION_39	CALL_6
0x4003979	          0x4889c7	                            mov rdi, rax	      1337	am.c	FUNCTION_39	CALL_6
0x400397c	            0x31c0	                            xor eax, eax	      1337	am.c	FUNCTION_39	CALL_6
0x400397e	            0x89de	                            mov esi, ebx	      1337	am.c	FUNCTION_39	CALL_6
0x4003980	      0xe800000000	                          call 0x4003985	      1337	am.c	FUNCTION_39	CALL_6
0x4003985	      0xbf00000000	                              mov edi, 0	      1337	am.c	FUNCTION_39	CALL_6
0x400398a	            0xeba9	                           jmp 0x4003935	      1337	am.c	FUNCTION_39	CALL_6
0x400398c	      0xbf00000000	                              mov edi, 0	      1241	am.c	FUNCTION_37	CALL_11
0x4003991	            0x31c0	                            xor eax, eax	      1241	am.c	FUNCTION_37	CALL_11
0x4003993	      0xe800000000	                          call 0x4003998	      1241	am.c	FUNCTION_37	CALL_11
0x4003998	      0xb900000000	                              mov ecx, 0	      1346	am.c	FUNCTION_39	CALL_10
0x400399d	      0xba42050000	                          mov edx, 0x542	      1346	am.c	FUNCTION_39	CALL_10
0x40039a2	      0xbe00000000	                              mov esi, 0	      1346	am.c	FUNCTION_39	CALL_10
0x40039a7	      0xbf00000000	                              mov edi, 0	      1346	am.c	FUNCTION_39	CALL_10
0x40039ac	      0xe800000000	                          call 0x40039b1	      1346	am.c	FUNCTION_39	CALL_10
0x40039b1	      0xb900000000	                              mov ecx, 0	       492	am.c	FUNCTION_20	CALL_1
0x40039b6	      0xbaec010000	                          mov edx, 0x1ec	       492	am.c	FUNCTION_20	CALL_1
0x40039bb	      0xbe00000000	                              mov esi, 0	       492	am.c	FUNCTION_20	CALL_1
0x40039c0	      0xbf00000000	                              mov edi, 0	       492	am.c	FUNCTION_20	CALL_1
0x40039c5	      0xe800000000	                          call 0x40039ca	       492	am.c	FUNCTION_20	CALL_1
0x40039ca	        0x498d7d04	                      lea rdi, [r13 + 4]	      1359	am.c	FUNCTION_39	CALL_20
0x40039ce	      0xe800000000	                          call 0x40039d3	      1359	am.c	FUNCTION_39	CALL_20
0x40039d3	      0xbf00000000	                              mov edi, 0	      1359	am.c	FUNCTION_39	CALL_20
0x40039d8	          0x4889c3	                            mov rbx, rax	      1359	am.c	FUNCTION_39	CALL_20
0x40039db	      0xe98ffeffff	                           jmp 0x400386f	      1359	am.c	FUNCTION_39	CALL_20
0x40039e0	      0xb900000000	                              mov ecx, 0	      1356	am.c	FUNCTION_39	CALL_16
0x40039e5	      0xba4c050000	                          mov edx, 0x54c	      1356	am.c	FUNCTION_39	CALL_16
0x40039ea	      0xbe00000000	                              mov esi, 0	      1356	am.c	FUNCTION_39	CALL_16
0x40039ef	      0xbf00000000	                              mov edi, 0	      1356	am.c	FUNCTION_39	CALL_16
0x40039f4	      0xe800000000	                          call 0x40039f9	      1356	am.c	FUNCTION_39	CALL_16
0x40039f9	          0x4889df	                            mov rdi, rbx	       204	am.c	FUNCTION_9	CALL_1
0x40039fc	      0xba00000000	                              mov edx, 0	       204	am.c	FUNCTION_9	CALL_1
0x4003a01	      0xbe00000000	                              mov esi, 0	       204	am.c	FUNCTION_9	CALL_1
0x4003a06	      0xe895c8ffff	               call sym.write_state_text	       204	am.c	FUNCTION_9	CALL_1
0x4003a0b	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4003a10	      0xbf00000000	                              mov edi, 0	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4003a15	      0xe955feffff	                           jmp 0x400386f	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4003a1a	      0xbf00000000	                              mov edi, 0	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4003a1f	      0xe89cceffff	                       call sym._.part.6	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4003a24	          0x4889c7	                            mov rdi, rax	      1148	am.c	FUNCTION_34	CALL_4
0x4003a27	            0x31c0	                            xor eax, eax	      1148	am.c	FUNCTION_34	CALL_4
0x4003a29	      0xe800000000	                          call 0x4003a2e	      1148	am.c	FUNCTION_34	CALL_4
stgit_patch_to_mail	CALL,8:DO,0:ELSE,4:WHILE,2:SWITCH,0:FOR,0:IF,4:functions,0	116
0x4001820	            0x4154	                                push r12	       803	am.c	FUNCTION_27
0x4001822	              0x55	                                push rbp	       803	am.c	FUNCTION_27
0x4001823	          0x4531e4	                          xor r12d, r12d	       805	am.c	FUNCTION_27
0x4001826	              0x53	                                push rbx	       803	am.c	FUNCTION_27
0x4001827	          0x4889fd	                            mov rbp, rdi	       803	am.c	FUNCTION_27
0x400182a	          0x4889f3	                            mov rbx, rsi	       803	am.c	FUNCTION_27
0x400182d	        0x4883ec20	                           sub rsp, 0x20	       803	am.c	FUNCTION_27
0x4001831	    0x64488b042528	                mov rax, qword fs:[0x28]	       803	am.c	FUNCTION_27
0x400183a	      0x4889442418	             mov qword [rsp + 0x18], rax	       803	am.c	FUNCTION_27
0x400183f	            0x31c0	                            xor eax, eax	       803	am.c	FUNCTION_27
0x4001841	    0x48c704240000	                      mov qword [rsp], 0	       804	am.c	FUNCTION_27
0x4001849	    0x48c744240800	                  mov qword [rsp + 8], 0	       804	am.c	FUNCTION_27
0x4001852	    0x48c744241000	               mov qword [rsp + 0x10], 0	       804	am.c	FUNCTION_27
0x400185b	       0xf1f440000	                   nop dword [rax + rax]	       804	am.c	FUNCTION_27
0x4001860	          0x4889de	                            mov rsi, rbx	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4001863	          0x4889e7	                            mov rdi, rsp	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4001866	      0xe800000000	                          call 0x400186b	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x400186b	            0x85c0	                           test eax, eax	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x400186d	     0xf85a0000000	                           jne 0x4001913	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4001873	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x4001878	           0xfb607	                   movzx eax, byte [rdi]	        65	am.c	FUNCTION_3	FOR_1
0x400187b	            0x84c0	                             test al, al	        65	am.c	FUNCTION_3	FOR_1
0x400187d	            0x74e1	                            je 0x4001860	        65	am.c	FUNCTION_3	FOR_1
0x400187f	    0xf68000000000	                      test byte [rax], 1	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4001886	            0x741c	                            je 0x40018a4	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4001888	          0x4889fa	                            mov rdx, rdi	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x400188b	       0xf1f440000	                   nop dword [rax + rax]	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4001890	        0x4883c201	                              add rdx, 1	        65	am.c	FUNCTION_3	FOR_1
0x4001894	           0xfb602	                   movzx eax, byte [rdx]	        65	am.c	FUNCTION_3	FOR_1
0x4001897	            0x84c0	                             test al, al	        65	am.c	FUNCTION_3	FOR_1
0x4001899	            0x74c5	                            je 0x4001860	        65	am.c	FUNCTION_3	FOR_1
0x400189b	    0xf68000000000	                      test byte [rax], 1	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40018a2	            0x75ec	                           jne 0x4001890	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40018a4	          0x4889f9	                            mov rcx, rdi	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40018a7	      0xb800000000	                              mov eax, 0	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40018ac	            0xeb13	                           jmp 0x40018c1	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40018ae	            0x6690	                                     nop	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40018b0	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40018b4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40018b8	          0x3a51ff	                  cmp dl, byte [rcx - 1]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40018bb	     0xf857f000000	                           jne 0x4001940	       488	git-compat-util.h	FUNCTION_68	DO_1
0x40018c1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x40018c4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x40018c6	            0x75e8	                           jne 0x40018b0	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x40018c8	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_100
0x40018cd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_100
0x40018d2	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_100
0x40018d5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_100
0x40018d7	      0xe800000000	                          call 0x40018dc	        97	stdio2.h	CALL_100
0x40018dc	            0xeb82	                           jmp 0x4001860	        97	stdio2.h	CALL_100
0x40018de	            0x6690	                                     nop	        97	stdio2.h	CALL_100
0x40018e0	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x40018e3	          0x4889da	                            mov rdx, rbx	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x40018e6	      0xbe00200000	                         mov esi, 0x2000	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x40018eb	          0x4889e7	                            mov rdi, rsp	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x40018ee	      0xe800000000	                          call 0x40018f3	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x40018f3	          0x4885c0	                           test rax, rax	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x40018f6	     0xf84b2000000	                            je 0x40019ae	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x40018fc	      0x488b542408	                mov rdx, qword [rsp + 8]	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4001901	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4001906	          0x4889e9	                            mov rcx, rbp	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4001909	      0xbe01000000	                              mov esi, 1	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x400190e	      0xe800000000	                          call 0x4001913	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4001913	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_108	IF_2
0x4001918	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_108
0x4001921	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x4001927	            0x75b7	                           jne 0x40018e0	       165	strbuf.h	FUNCTION_108	IF_2
0x4001929	    0x803d00000000	                cmp byte [0x04001930], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x4001930	            0x74b1	                            je 0x40018e3	       168	strbuf.h	FUNCTION_108	CALL_2
0x4001932	      0xe800000000	                          call 0x4001937	       168	strbuf.h	FUNCTION_108	CALL_2
0x4001937	    0x660f1f840000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x4001940	      0xbe00000000	                              mov esi, 0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4001945	      0xe800000000	                          call 0x400194a	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x400194a	            0x85c0	                           test eax, eax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x400194c	            0x7542	                           jne 0x4001990	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x400194e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4001953	      0xbe00000000	                              mov esi, 0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4001958	      0xe800000000	                          call 0x400195d	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x400195d	            0x85c0	                           test eax, eax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x400195f	            0x752f	                           jne 0x4001990	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4001961	          0x4585e4	                         test r12d, r12d	       816	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4001964	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        97	stdio2.h	CALL_100
0x4001969	            0x7566	                           jne 0x40019d1	       816	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x400196b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_100
0x4001970	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_100
0x4001975	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_100
0x4001978	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_100
0x400197a	    0x41bc01000000	                             mov r12d, 1	       818	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4001980	      0xe800000000	                          call 0x4001985	        97	stdio2.h	CALL_100
0x4001985	      0xe9d6feffff	                           jmp 0x4001860	        97	stdio2.h	CALL_100
0x400198a	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_100
0x4001990	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        97	stdio2.h	CALL_100
0x4001995	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_100
0x400199a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_100
0x400199f	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_100
0x40019a2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_100
0x40019a4	      0xe800000000	                          call 0x40019a9	        97	stdio2.h	CALL_100
0x40019a9	      0xe9b2feffff	                           jmp 0x4001860	        97	stdio2.h	CALL_100
0x40019ae	          0x4889e7	                            mov rdi, rsp	       831	am.c	FUNCTION_27	CALL_8
0x40019b1	      0xe800000000	                          call 0x40019b6	       831	am.c	FUNCTION_27	CALL_8
0x40019b6	            0x31c0	                            xor eax, eax	       833	am.c	FUNCTION_27
0x40019b8	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       833	am.c	FUNCTION_27
0x40019bd	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       833	am.c	FUNCTION_27
0x40019c6	            0x7522	                           jne 0x40019ea	       833	am.c	FUNCTION_27
0x40019c8	        0x4883c420	                           add rsp, 0x20	       833	am.c	FUNCTION_27
0x40019cc	              0x5b	                                 pop rbx	       833	am.c	FUNCTION_27
0x40019cd	              0x5d	                                 pop rbp	       833	am.c	FUNCTION_27
0x40019ce	            0x415c	                                 pop r12	       833	am.c	FUNCTION_27
0x40019d0	              0xc3	                                     ret	       833	am.c	FUNCTION_27
0x40019d1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_100
0x40019d6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_100
0x40019db	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_100
0x40019de	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_100
0x40019e0	      0xe800000000	                          call 0x40019e5	        97	stdio2.h	CALL_100
0x40019e5	      0xe929ffffff	                           jmp 0x4001913	        97	stdio2.h	CALL_100
0x40019ea	      0xe800000000	                          call 0x40019ef	       833	am.c	FUNCTION_27
am_load	CALL,45:DO,0:ELSE,6:WHILE,0:SWITCH,0:FOR,0:IF,11:functions,0	399
0x4001190	            0x4157	                                push r15	       402	am.c	FUNCTION_18
0x4001192	            0x4156	                                push r14	       402	am.c	FUNCTION_18
0x4001194	          0x4889fe	                            mov rsi, rdi	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4001197	            0x4155	                                push r13	       402	am.c	FUNCTION_18
0x4001199	            0x4154	                                push r12	       402	am.c	FUNCTION_18
0x400119b	      0xb901000000	                              mov ecx, 1	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x40011a0	              0x55	                                push rbp	       402	am.c	FUNCTION_18
0x40011a1	              0x53	                                push rbx	       402	am.c	FUNCTION_18
0x40011a2	          0x4889fd	                            mov rbp, rdi	       402	am.c	FUNCTION_18
0x40011a5	      0xba00000000	                              mov edx, 0	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x40011aa	        0x4883ec78	                           sub rsp, 0x78	       402	am.c	FUNCTION_18
0x40011ae	          0x4889e7	                            mov rdi, rsp	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x40011b1	    0x48c704240000	                      mov qword [rsp], 0	       403	am.c	FUNCTION_18
0x40011b9	    0x48c744240800	                  mov qword [rsp + 8], 0	       403	am.c	FUNCTION_18
0x40011c2	    0x64488b042528	                mov rax, qword fs:[0x28]	       402	am.c	FUNCTION_18
0x40011cb	      0x4889442468	             mov qword [rsp + 0x68], rax	       402	am.c	FUNCTION_18
0x40011d0	            0x31c0	                            xor eax, eax	       402	am.c	FUNCTION_18
0x40011d2	    0x48c744241000	               mov qword [rsp + 0x10], 0	       403	am.c	FUNCTION_18
0x40011db	      0xe820feffff	                call sym.read_state_file	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x40011e0	            0x85c0	                           test eax, eax	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x40011e2	     0xf8807060000	                            js 0x40017ef	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x40011e8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       407	am.c	FUNCTION_18	CALL_3
0x40011ed	            0x31f6	                            xor esi, esi	       407	am.c	FUNCTION_18	CALL_3
0x40011ef	      0xba0a000000	                            mov edx, 0xa	       407	am.c	FUNCTION_18	CALL_3
0x40011f4	      0xe800000000	                          call 0x40011f9	       407	am.c	FUNCTION_18	CALL_3
0x40011f9	      0xb901000000	                              mov ecx, 1	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x40011fe	          0x894508	                mov dword [rbp + 8], eax	       407	am.c	FUNCTION_18	CALL_3
0x4001201	      0xba00000000	                              mov edx, 0	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001206	          0x4889ee	                            mov rsi, rbp	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001209	          0x4889e7	                            mov rdi, rsp	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x400120c	      0xe8effdffff	                call sym.read_state_file	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001211	            0x85c0	                           test eax, eax	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001213	     0xf8896050000	                            js 0x40017af	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001219	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       411	am.c	FUNCTION_18	CALL_6
0x400121e	            0x31f6	                            xor esi, esi	       411	am.c	FUNCTION_18	CALL_6
0x4001220	      0xba0a000000	                            mov edx, 0xa	       411	am.c	FUNCTION_18	CALL_6
0x4001225	      0xe800000000	                          call 0x400122a	       411	am.c	FUNCTION_18	CALL_6
0x400122a	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x400122e	          0x89450c	              mov dword [rbp + 0xc], eax	       411	am.c	FUNCTION_18	CALL_6
0x4001231	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001236	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001238	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400123d	      0xe800000000	                          call 0x4001242	       183	am.c	FUNCTION_6	CALL_1
0x4001242	      0x804c245001	                 or byte [rsp + 0x50], 1	       308	am.c	FUNCTION_14
0x4001247	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       312	am.c	FUNCTION_14	CALL_2
0x400124c	          0x4989c4	                            mov r12, rax	       183	am.c	FUNCTION_6	CALL_1
0x400124f	    0x48c744242000	               mov qword [rsp + 0x20], 0	       307	am.c	FUNCTION_14
0x4001258	    0x48c744242800	               mov qword [rsp + 0x28], 0	       307	am.c	FUNCTION_14
0x4001261	    0x48c744243000	               mov qword [rsp + 0x30], 0	       307	am.c	FUNCTION_14
0x400126a	    0x48c744244000	               mov qword [rsp + 0x40], 0	       308	am.c	FUNCTION_14
0x4001273	    0xc74424480000	               mov dword [rsp + 0x48], 0	       308	am.c	FUNCTION_14
0x400127b	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       308	am.c	FUNCTION_14
0x4001283	    0x48c744245800	               mov qword [rsp + 0x58], 0	       308	am.c	FUNCTION_14
0x400128c	     0xf8504050000	                           jne 0x4001796	       312	am.c	FUNCTION_14	CALL_2
0x4001292	      0x48837d1800	               cmp qword [rbp + 0x18], 0	       313	am.c	FUNCTION_14	CALL_3
0x4001297	     0xf85e0040000	                           jne 0x400177d	       313	am.c	FUNCTION_14	CALL_3
0x400129d	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       314	am.c	FUNCTION_14	CALL_4
0x40012a2	     0xf85bc040000	                           jne 0x4001764	       314	am.c	FUNCTION_14	CALL_4
0x40012a8	            0x31f6	                            xor esi, esi	        53	fcntl2.h	FUNCTION_133	IF_2	CALL_9
0x40012aa	          0x4889c7	                            mov rdi, rax	        53	fcntl2.h	FUNCTION_133	IF_2	CALL_9
0x40012ad	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_133	IF_2	CALL_9
0x40012af	      0xe800000000	                          call 0x40012b4	        53	fcntl2.h	FUNCTION_133	IF_2	CALL_9
0x40012b4	            0x85c0	                           test eax, eax	       317	am.c	FUNCTION_14	IF_1
0x40012b6	            0x89c3	                            mov ebx, eax	        53	fcntl2.h	FUNCTION_133	IF_2	CALL_9
0x40012b8	     0xf88d2000000	                            js 0x4001390	       317	am.c	FUNCTION_14	IF_1
0x40012be	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       322	am.c	FUNCTION_14	CALL_8
0x40012c3	            0x31d2	                            xor edx, edx	       322	am.c	FUNCTION_14	CALL_8
0x40012c5	            0x89c6	                            mov esi, eax	       322	am.c	FUNCTION_14	CALL_8
0x40012c7	      0x4c8d7c2440	                   lea r15, [rsp + 0x40]	       322	am.c	FUNCTION_14	CALL_8
0x40012cc	      0xe800000000	                          call 0x40012d1	       322	am.c	FUNCTION_14	CALL_8
0x40012d1	            0x89df	                            mov edi, ebx	       323	am.c	FUNCTION_14	CALL_9
0x40012d3	      0xe800000000	                          call 0x40012d8	       323	am.c	FUNCTION_14	CALL_9
0x40012d8	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       324	am.c	FUNCTION_14	IF_3	CALL_10
0x40012dd	          0x803b00	                       cmp byte [rbx], 0	       268	am.c	FUNCTION_13	WHILE_1
0x40012e0	            0x756b	                           jne 0x400134d	       268	am.c	FUNCTION_13	WHILE_1
0x40012e2	      0xe9d9030000	                           jmp 0x40016c0	       268	am.c	FUNCTION_13	WHILE_1
0x40012e7	    0x660f1f840000	                    nop word [rax + rax]	       268	am.c	FUNCTION_13	WHILE_1
0x40012f0	      0xbe0a000000	                            mov esi, 0xa	       274	am.c	FUNCTION_13	WHILE_1
0x40012f5	          0x4889c7	                            mov rdi, rax	       274	am.c	FUNCTION_13	WHILE_1
0x40012f8	      0x4d8d742401	                      lea r14, [r12 + 1]	       275	am.c	FUNCTION_13	WHILE_1
0x40012fd	      0xe800000000	                          call 0x4001302	       274	am.c	FUNCTION_13	WHILE_1
0x4001302	          0x4889de	                            mov rsi, rbx	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4001305	          0x4989c5	                            mov r13, rax	       274	am.c	FUNCTION_13	WHILE_1
0x4001308	      0x41c6042400	                       mov byte [r12], 0	       275	am.c	FUNCTION_13	WHILE_1
0x400130d	          0x4c89ff	                            mov rdi, r15	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4001310	            0x31db	                            xor ebx, ebx	       278	am.c	FUNCTION_13	WHILE_1
0x4001312	      0xe800000000	                          call 0x4001317	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4001317	      0x41807d000a	                     cmp byte [r13], 0xa	       278	am.c	FUNCTION_13	WHILE_1
0x400131c	          0x4c89f7	                            mov rdi, r14	       280	am.c	FUNCTION_13	WHILE_1	CALL_3
0x400131f	      0x41c6450000	                       mov byte [r13], 0	       279	am.c	FUNCTION_13	WHILE_1
0x4001324	          0x4989c4	                            mov r12, rax	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4001327	           0xf94c3	                                 sete bl	       278	am.c	FUNCTION_13	WHILE_1
0x400132a	          0x4c01eb	                            add rbx, r13	       278	am.c	FUNCTION_13	WHILE_1
0x400132d	      0xe800000000	                          call 0x4001332	       280	am.c	FUNCTION_13	WHILE_1	CALL_3
0x4001332	          0x4885c0	                           test rax, rax	       281	am.c	FUNCTION_13	WHILE_1	IF_2
0x4001335	            0x742b	                            je 0x4001362	       281	am.c	FUNCTION_13	WHILE_1	IF_2
0x4001337	          0x4889c7	                            mov rdi, rax	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x400133a	      0xe800000000	                          call 0x400133f	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x400133f	      0x4989442408	                mov qword [r12 + 8], rax	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x4001344	          0x803b00	                       cmp byte [rbx], 0	       268	am.c	FUNCTION_13	WHILE_1
0x4001347	     0xf8473030000	                            je 0x40016c0	       268	am.c	FUNCTION_13	WHILE_1
0x400134d	      0xbe3d000000	                           mov esi, 0x3d	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4001352	          0x4889df	                            mov rdi, rbx	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4001355	      0xe800000000	                          call 0x400135a	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x400135a	          0x4885c0	                           test rax, rax	       272	am.c	FUNCTION_13	WHILE_1	IF_1
0x400135d	          0x4989c4	                            mov r12, rax	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4001360	            0x758e	                           jne 0x40012f0	       272	am.c	FUNCTION_13	WHILE_1	IF_1
0x4001362	      0xbe01000000	                              mov esi, 1	       337	am.c	FUNCTION_14	CALL_14
0x4001367	          0x4c89ff	                            mov rdi, r15	       337	am.c	FUNCTION_14	CALL_14
0x400136a	      0xe800000000	                          call 0x400136f	       337	am.c	FUNCTION_14	CALL_14
0x400136f	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       338	am.c	FUNCTION_14	CALL_15
0x4001374	      0xe800000000	                          call 0x4001379	       338	am.c	FUNCTION_14	CALL_15
0x4001379	      0xbf00000000	                              mov edi, 0	       338	am.c	FUNCTION_14	CALL_15
0x400137e	      0xe83df5ffff	                       call sym._.part.6	       338	am.c	FUNCTION_14	CALL_15
0x4001383	          0x4889c7	                            mov rdi, rax	       414	am.c	FUNCTION_18	CALL_9
0x4001386	            0x31c0	                            xor eax, eax	       414	am.c	FUNCTION_18	CALL_9
0x4001388	      0xe800000000	                          call 0x400138d	       414	am.c	FUNCTION_18	CALL_9
0x400138d	           0xf1f00	                         nop dword [rax]	       414	am.c	FUNCTION_18	CALL_9
0x4001390	      0xe800000000	                          call 0x4001395	       318	am.c	FUNCTION_14	IF_1	IF_2
0x4001395	          0x833802	                      cmp dword [rax], 2	       318	am.c	FUNCTION_14	IF_1	IF_2
0x4001398	     0xf855d040000	                           jne 0x40017fb	       318	am.c	FUNCTION_14	IF_1	IF_2
0x400139e	          0x4889ef	                            mov rdi, rbp	       416	am.c	FUNCTION_18	CALL_10
0x40013a1	      0xe83afdffff	                call sym.read_commit_msg	       416	am.c	FUNCTION_18	CALL_10
0x40013a6	      0xb901000000	                              mov ecx, 1	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x40013ab	      0xba00000000	                              mov edx, 0	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x40013b0	          0x4889ee	                            mov rsi, rbp	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x40013b3	          0x4889e7	                            mov rdi, rsp	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x40013b6	      0xe845fcffff	                call sym.read_state_file	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x40013bb	            0x85c0	                           test eax, eax	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x40013bd	     0xf88dd020000	                            js 0x40016a0	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x40013c3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40013c8	        0x488d7538	                   lea rsi, [rbp + 0x38]	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40013cc	      0xe800000000	                          call 0x40013d1	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40013d1	            0x85c0	                           test eax, eax	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40013d3	     0xf8839040000	                            js 0x4001812	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40013d9	      0xb901000000	                              mov ecx, 1	       423	am.c	FUNCTION_18	CALL_17
0x40013de	      0xba00000000	                              mov edx, 0	       423	am.c	FUNCTION_18	CALL_17
0x40013e3	          0x4889ee	                            mov rsi, rbp	       423	am.c	FUNCTION_18	CALL_17
0x40013e6	          0x4889e7	                            mov rdi, rsp	       423	am.c	FUNCTION_18	CALL_17
0x40013e9	      0xe812fcffff	                call sym.read_state_file	       423	am.c	FUNCTION_18	CALL_17
0x40013ee	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       424	am.c	FUNCTION_18	CALL_18
0x40013f3	      0xb874000000	                           mov eax, 0x74	       424	am.c	FUNCTION_18	CALL_18
0x40013f8	           0xfb611	                   movzx edx, byte [rcx]	       424	am.c	FUNCTION_18	CALL_18
0x40013fb	            0x29d0	                            sub eax, edx	       424	am.c	FUNCTION_18	CALL_18
0x40013fd	            0x7506	                           jne 0x4001405	       424	am.c	FUNCTION_18	CALL_18
0x40013ff	         0xfb64101	               movzx eax, byte [rcx + 1]	       424	am.c	FUNCTION_18	CALL_18
0x4001403	            0xf7d8	                                 neg eax	       424	am.c	FUNCTION_18	CALL_18
0x4001405	            0x85c0	                           test eax, eax	       424	am.c	FUNCTION_18	CALL_18
0x4001407	      0xb901000000	                              mov ecx, 1	       426	am.c	FUNCTION_18	CALL_19
0x400140c	      0xba00000000	                              mov edx, 0	       426	am.c	FUNCTION_18	CALL_19
0x4001411	           0xf94c0	                                 sete al	       424	am.c	FUNCTION_18	CALL_18
0x4001414	          0x4889ee	                            mov rsi, rbp	       426	am.c	FUNCTION_18	CALL_19
0x4001417	          0x4889e7	                            mov rdi, rsp	       426	am.c	FUNCTION_18	CALL_19
0x400141a	           0xfb6c0	                           movzx eax, al	       424	am.c	FUNCTION_18	CALL_18
0x400141d	          0x894554	            mov dword [rbp + 0x54], eax 	       424	am.c	FUNCTION_18	CALL_18
0x4001420	      0xe8dbfbffff	                call sym.read_state_file	       426	am.c	FUNCTION_18	CALL_19
0x4001425	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       427	am.c	FUNCTION_18	CALL_20
0x400142a	      0xb874000000	                           mov eax, 0x74	       427	am.c	FUNCTION_18	CALL_20
0x400142f	           0xfb611	                   movzx edx, byte [rcx]	       427	am.c	FUNCTION_18	CALL_20
0x4001432	            0x29d0	                            sub eax, edx	       427	am.c	FUNCTION_18	CALL_20
0x4001434	            0x7506	                           jne 0x400143c	       427	am.c	FUNCTION_18	CALL_20
0x4001436	         0xfb64101	               movzx eax, byte [rcx + 1]	       427	am.c	FUNCTION_18	CALL_20
0x400143a	            0xf7d8	                                 neg eax	       427	am.c	FUNCTION_18	CALL_20
0x400143c	            0x85c0	                           test eax, eax	       427	am.c	FUNCTION_18	CALL_20
0x400143e	      0xb901000000	                              mov ecx, 1	       429	am.c	FUNCTION_18	CALL_21
0x4001443	      0xba00000000	                              mov edx, 0	       429	am.c	FUNCTION_18	CALL_21
0x4001448	           0xf94c0	                                 sete al	       427	am.c	FUNCTION_18	CALL_20
0x400144b	          0x4889ee	                            mov rsi, rbp	       429	am.c	FUNCTION_18	CALL_21
0x400144e	          0x4889e7	                            mov rdi, rsp	       429	am.c	FUNCTION_18	CALL_21
0x4001451	           0xfb6c0	                           movzx eax, al	       427	am.c	FUNCTION_18	CALL_20
0x4001454	          0x894558	            mov dword [rbp + 0x58], eax 	       427	am.c	FUNCTION_18	CALL_20
0x4001457	      0xe8a4fbffff	                call sym.read_state_file	       429	am.c	FUNCTION_18	CALL_21
0x400145c	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       430	am.c	FUNCTION_18	CALL_22
0x4001461	      0xb874000000	                           mov eax, 0x74	       430	am.c	FUNCTION_18	CALL_22
0x4001466	           0xfb611	                   movzx edx, byte [rcx]	       430	am.c	FUNCTION_18	CALL_22
0x4001469	            0x29d0	                            sub eax, edx	       430	am.c	FUNCTION_18	CALL_22
0x400146b	            0x7506	                           jne 0x4001473	       430	am.c	FUNCTION_18	CALL_22
0x400146d	         0xfb64101	               movzx eax, byte [rcx + 1]	       430	am.c	FUNCTION_18	CALL_22
0x4001471	            0xf7d8	                                 neg eax	       430	am.c	FUNCTION_18	CALL_22
0x4001473	            0x85c0	                           test eax, eax	       430	am.c	FUNCTION_18	CALL_22
0x4001475	      0xb901000000	                              mov ecx, 1	       432	am.c	FUNCTION_18	CALL_23
0x400147a	      0xba00000000	                              mov edx, 0	       432	am.c	FUNCTION_18	CALL_23
0x400147f	           0xf94c0	                                 sete al	       430	am.c	FUNCTION_18	CALL_22
0x4001482	          0x4889ee	                            mov rsi, rbp	       432	am.c	FUNCTION_18	CALL_23
0x4001485	          0x4889e7	                            mov rdi, rsp	       432	am.c	FUNCTION_18	CALL_23
0x4001488	           0xfb6c0	                           movzx eax, al	       430	am.c	FUNCTION_18	CALL_22
0x400148b	          0x89455c	            mov dword [rbp + 0x5c], eax 	       430	am.c	FUNCTION_18	CALL_22
0x400148e	      0xe86dfbffff	                call sym.read_state_file	       432	am.c	FUNCTION_18	CALL_23
0x4001493	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       433	am.c	FUNCTION_18	CALL_24
0x4001498	      0xb874000000	                           mov eax, 0x74	       433	am.c	FUNCTION_18	CALL_24
0x400149d	           0xfb611	                   movzx edx, byte [rcx]	       433	am.c	FUNCTION_18	CALL_24
0x40014a0	            0x29d0	                            sub eax, edx	       433	am.c	FUNCTION_18	CALL_24
0x40014a2	            0x7506	                           jne 0x40014aa	       433	am.c	FUNCTION_18	CALL_24
0x40014a4	         0xfb64101	               movzx eax, byte [rcx + 1]	       433	am.c	FUNCTION_18	CALL_24
0x40014a8	            0xf7d8	                                 neg eax	       433	am.c	FUNCTION_18	CALL_24
0x40014aa	            0x85c0	                           test eax, eax	       433	am.c	FUNCTION_18	CALL_24
0x40014ac	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x40014b0	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40014b5	           0xf94c0	                                 sete al	       433	am.c	FUNCTION_18	CALL_24
0x40014b8	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40014bd	           0xfb6c0	                           movzx eax, al	       433	am.c	FUNCTION_18	CALL_24
0x40014c0	          0x894560	            mov dword [rbp + 0x60], eax 	       433	am.c	FUNCTION_18	CALL_24
0x40014c3	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40014c5	      0xe800000000	                          call 0x40014ca	       183	am.c	FUNCTION_6	CALL_1
0x40014ca	          0x4889c7	                            mov rdi, rax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40014cd	      0xe800000000	                          call 0x40014d2	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40014d2	            0x85c0	                           test eax, eax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40014d4	     0xf8586010000	                           jne 0x4001660	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40014da	    0xc78590000000	               mov dword [rbp + 0x90], 0	       440	am.c	FUNCTION_18	ELSE_2
0x40014e4	      0xba00000000	                              mov edx, 0	       443	am.c	FUNCTION_18	CALL_29
0x40014e9	      0xb901000000	                              mov ecx, 1	       443	am.c	FUNCTION_18	CALL_29
0x40014ee	          0x4889ee	                            mov rsi, rbp	       443	am.c	FUNCTION_18	CALL_29
0x40014f1	          0x4889e7	                            mov rdi, rsp	       443	am.c	FUNCTION_18	CALL_29
0x40014f4	      0xe807fbffff	                call sym.read_state_file	       443	am.c	FUNCTION_18	CALL_29
0x40014f9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x40014fe	           0xfb610	                   movzx edx, byte [rax]	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001501	          0x83fa74	                           cmp edx, 0x74	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001504	     0xf850e010000	                           jne 0x4001618	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x400150a	        0x80780100	                   cmp byte [rax + 1], 0	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x400150e	     0xf8534020000	                           jne 0x4001748	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001514	    0xc74564010000	               mov dword [rbp + 0x64], 1	       445	am.c	FUNCTION_18	IF_7
0x400151b	      0xb901000000	                              mov ecx, 1	       451	am.c	FUNCTION_18	CALL_32
0x4001520	      0xba00000000	                              mov edx, 0	       451	am.c	FUNCTION_18	CALL_32
0x4001525	          0x4889ee	                            mov rsi, rbp	       451	am.c	FUNCTION_18	CALL_32
0x4001528	          0x4889e7	                            mov rdi, rsp	       451	am.c	FUNCTION_18	CALL_32
0x400152b	      0xe8d0faffff	                call sym.read_state_file	       451	am.c	FUNCTION_18	CALL_32
0x4001530	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       452	am.c	FUNCTION_18	CALL_33
0x4001535	      0xb874000000	                           mov eax, 0x74	       452	am.c	FUNCTION_18	CALL_33
0x400153a	           0xfb611	                   movzx edx, byte [rcx]	       452	am.c	FUNCTION_18	CALL_33
0x400153d	            0x29d0	                            sub eax, edx	       452	am.c	FUNCTION_18	CALL_33
0x400153f	            0x7506	                           jne 0x4001547	       452	am.c	FUNCTION_18	CALL_33
0x4001541	         0xfb64101	               movzx eax, byte [rcx + 1]	       452	am.c	FUNCTION_18	CALL_33
0x4001545	            0xf7d8	                                 neg eax	       452	am.c	FUNCTION_18	CALL_33
0x4001547	            0x85c0	                           test eax, eax	       452	am.c	FUNCTION_18	CALL_33
0x4001549	      0xba00000000	                              mov edx, 0	       454	am.c	FUNCTION_18	CALL_34
0x400154e	      0xb901000000	                              mov ecx, 1	       454	am.c	FUNCTION_18	CALL_34
0x4001553	           0xf94c0	                                 sete al	       452	am.c	FUNCTION_18	CALL_33
0x4001556	          0x4889ee	                            mov rsi, rbp	       454	am.c	FUNCTION_18	CALL_34
0x4001559	          0x4889e7	                            mov rdi, rsp	       454	am.c	FUNCTION_18	CALL_34
0x400155c	           0xfb6c0	                           movzx eax, al	       452	am.c	FUNCTION_18	CALL_33
0x400155f	          0x894568	            mov dword [rbp + 0x68], eax 	       452	am.c	FUNCTION_18	CALL_33
0x4001562	      0xe899faffff	                call sym.read_state_file	       454	am.c	FUNCTION_18	CALL_34
0x4001567	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x400156c	           0xfb610	                   movzx edx, byte [rax]	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x400156f	          0x83fa74	                           cmp edx, 0x74	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001572	     0xf85c8000000	                           jne 0x4001640	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001578	        0x80780100	                   cmp byte [rax + 1], 0	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x400157c	     0xf85d6010000	                           jne 0x4001758	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001582	    0xc7456c010000	               mov dword [rbp + 0x6c], 1	       456	am.c	FUNCTION_18	IF_9
0x4001589	        0x488d5d70	                   lea rbx, [rbp + 0x70]	       463	am.c	FUNCTION_18	CALL_38
0x400158d	      0xb901000000	                              mov ecx, 1	       462	am.c	FUNCTION_18	CALL_37
0x4001592	      0xba00000000	                              mov edx, 0	       462	am.c	FUNCTION_18	CALL_37
0x4001597	          0x4889ee	                            mov rsi, rbp	       462	am.c	FUNCTION_18	CALL_37
0x400159a	          0x4889e7	                            mov rdi, rsp	       462	am.c	FUNCTION_18	CALL_37
0x400159d	      0xe85efaffff	                call sym.read_state_file	       462	am.c	FUNCTION_18	CALL_37
0x40015a2	          0x4889df	                            mov rdi, rbx	       463	am.c	FUNCTION_18	CALL_38
0x40015a5	      0xe800000000	                          call 0x40015aa	       463	am.c	FUNCTION_18	CALL_38
0x40015aa	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x40015af	          0x4889de	                            mov rsi, rbx	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x40015b2	      0xe800000000	                          call 0x40015b7	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x40015b7	            0x85c0	                           test eax, eax	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x40015b9	     0xf88fc010000	                            js 0x40017bb	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x40015bf	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x40015c3	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40015c8	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40015cd	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40015cf	      0xe800000000	                          call 0x40015d4	       183	am.c	FUNCTION_6	CALL_1
0x40015d4	          0x4889c7	                            mov rdi, rax	       467	am.c	FUNCTION_18	CALL_44
0x40015d7	      0xe800000000	                          call 0x40015dc	       467	am.c	FUNCTION_18	CALL_44
0x40015dc	            0x85c0	                           test eax, eax	       467	am.c	FUNCTION_18	CALL_44
0x40015de	          0x4889e7	                            mov rdi, rsp	       469	am.c	FUNCTION_18	CALL_45
0x40015e1	           0xf95c0	                                setne al	       467	am.c	FUNCTION_18	CALL_44
0x40015e4	           0xfb6c0	                           movzx eax, al	       467	am.c	FUNCTION_18	CALL_44
0x40015e7	    0x8985a0000000	            mov dword [rbp + 0xa0], eax 	       467	am.c	FUNCTION_18	CALL_44
0x40015ed	      0xe800000000	                          call 0x40015f2	       469	am.c	FUNCTION_18	CALL_45
0x40015f2	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       470	am.c	FUNCTION_18
0x40015f7	    0x644833042528	                xor rax, qword fs:[0x28]	       470	am.c	FUNCTION_18
0x4001600	     0xf85e4010000	                           jne 0x40017ea	       470	am.c	FUNCTION_18
0x4001606	        0x4883c478	                           add rsp, 0x78	       470	am.c	FUNCTION_18
0x400160a	              0x5b	                                 pop rbx	       470	am.c	FUNCTION_18
0x400160b	              0x5d	                                 pop rbp	       470	am.c	FUNCTION_18
0x400160c	            0x415c	                                 pop r12	       470	am.c	FUNCTION_18
0x400160e	            0x415d	                                 pop r13	       470	am.c	FUNCTION_18
0x4001610	            0x415e	                                 pop r14	       470	am.c	FUNCTION_18
0x4001612	            0x415f	                                 pop r15	       470	am.c	FUNCTION_18
0x4001614	              0xc3	                                     ret	       470	am.c	FUNCTION_18
0x4001615	           0xf1f00	                         nop dword [rax]	       470	am.c	FUNCTION_18
0x4001618	          0x83fa62	                           cmp edx, 0x62	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x400161b	     0xf8527010000	                           jne 0x4001748	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4001621	        0x80780100	                   cmp byte [rax + 1], 0	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4001625	     0xf851d010000	                           jne 0x4001748	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x400162b	    0xc74564020000	               mov dword [rbp + 0x64], 2	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x4001632	      0xe9e4feffff	                           jmp 0x400151b	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x4001637	    0x660f1f840000	                    nop word [rax + rax]	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x4001640	          0x83fa66	                           cmp edx, 0x66	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x4001643	     0xf850f010000	                           jne 0x4001758	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x4001649	        0x80780100	                   cmp byte [rax + 1], 0	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x400164d	     0xf8505010000	                           jne 0x4001758	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x4001653	    0xc7456c000000	               mov dword [rbp + 0x6c], 0	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x400165a	      0xe92affffff	                           jmp 0x4001589	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x400165f	              0x90	                                     nop	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x4001660	      0xba00000000	                              mov edx, 0	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x4001665	      0xb901000000	                              mov ecx, 1	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x400166a	          0x4889ee	                            mov rsi, rbp	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x400166d	          0x4889e7	                            mov rdi, rsp	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x4001670	      0xe88bf9ffff	                call sym.read_state_file	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x4001675	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x400167a	      0xb802000000	                              mov eax, 2	       438	am.c	FUNCTION_18	IF_6
0x400167f	          0x803a74	                    cmp byte [rdx], 0x74	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4001682	            0x7509	                           jne 0x400168d	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4001684	        0x807a0101	                   cmp byte [rdx + 1], 1	       438	am.c	FUNCTION_18	IF_6
0x4001688	            0x19c0	                            sbb eax, eax	       438	am.c	FUNCTION_18	IF_6
0x400168a	          0x83c002	                              add eax, 2	       438	am.c	FUNCTION_18	IF_6
0x400168d	    0x898590000000	            mov dword [rbp + 0x90], eax 	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4001693	      0xe94cfeffff	                           jmp 0x40014e4	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4001698	     0xf1f84000000	                   nop dword [rax + rax]	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x40016a0	    0x48c745380000	               mov qword [rbp + 0x38], 0	        90	string3.h	FUNCTION_124	CALL_6
0x40016a8	    0x48c745400000	               mov qword [rbp + 0x40], 0	        90	string3.h	FUNCTION_124	CALL_6
0x40016b0	    0xc74548000000	               mov dword [rbp + 0x48], 0	        90	string3.h	FUNCTION_124	CALL_6
0x40016b7	      0xe91dfdffff	                           jmp 0x40013d9	        90	string3.h	FUNCTION_124	CALL_6
0x40016bc	         0xf1f4000	                         nop dword [rax]	        90	string3.h	FUNCTION_124	CALL_6
0x40016c0	      0x837c244803	               cmp dword [rsp + 0x48], 3	       327	am.c	FUNCTION_14	IF_4
0x40016c5	     0xf8597fcffff	                           jne 0x4001362	       327	am.c	FUNCTION_14	IF_4
0x40016cb	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40016d0	      0xbf00000000	                              mov edi, 0	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40016d5	      0xb910000000	                           mov ecx, 0x10	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40016da	          0x488b30	                    mov rsi, qword [rax]	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40016dd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       327	am.c	FUNCTION_14	IF_4
0x40016df	     0xf857dfcffff	                           jne 0x4001362	       327	am.c	FUNCTION_14	IF_4
0x40016e5	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40016e9	      0xbf00000000	                              mov edi, 0	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40016ee	      0xb911000000	                           mov ecx, 0x11	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40016f3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40016f5	     0xf8567fcffff	                           jne 0x4001362	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40016fb	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x40016ff	      0xbf00000000	                              mov edi, 0	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4001704	      0xb910000000	                           mov ecx, 0x10	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4001709	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x400170b	     0xf8551fcffff	                           jne 0x4001362	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4001711	        0x488b5008	                mov rdx, qword [rax + 8]	       332	am.c	FUNCTION_14
0x4001715	          0x4c89ff	                            mov rdi, r15	       337	am.c	FUNCTION_14	CALL_14
0x4001718	            0x31f6	                            xor esi, esi	       337	am.c	FUNCTION_14	CALL_14
0x400171a	        0x48895510	            mov qword [rbp + 0x10], rdx 	       332	am.c	FUNCTION_14
0x400171e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       333	am.c	FUNCTION_14
0x4001722	        0x488b4028	            mov rax, qword [rax + 0x28] 	       334	am.c	FUNCTION_14
0x4001726	        0x48895518	            mov qword [rbp + 0x18], rdx 	       333	am.c	FUNCTION_14
0x400172a	        0x48894520	            mov qword [rbp + 0x20], rax 	       334	am.c	FUNCTION_14
0x400172e	      0xe800000000	                          call 0x4001733	       337	am.c	FUNCTION_14	CALL_14
0x4001733	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       338	am.c	FUNCTION_14	CALL_15
0x4001738	      0xe800000000	                          call 0x400173d	       338	am.c	FUNCTION_14	CALL_15
0x400173d	      0xe95cfcffff	                           jmp 0x400139e	       338	am.c	FUNCTION_14	CALL_15
0x4001742	    0x660f1f440000	                    nop word [rax + rax]	       338	am.c	FUNCTION_14	CALL_15
0x4001748	    0xc74564000000	               mov dword [rbp + 0x64], 0	       449	am.c	FUNCTION_18	ELSE_4
0x400174f	      0xe9c7fdffff	                           jmp 0x400151b	       449	am.c	FUNCTION_18	ELSE_4
0x4001754	         0xf1f4000	                         nop dword [rax]	       449	am.c	FUNCTION_18	ELSE_4
0x4001758	    0xc7456cffffff	     mov dword [rbp + 0x6c], 0xffffffff 	       460	am.c	FUNCTION_18	ELSE_6
0x400175f	      0xe925feffff	                           jmp 0x4001589	       460	am.c	FUNCTION_18	ELSE_6
0x4001764	      0xb900000000	                              mov ecx, 0	       314	am.c	FUNCTION_14	CALL_4
0x4001769	      0xba3a010000	                          mov edx, 0x13a	       314	am.c	FUNCTION_14	CALL_4
0x400176e	      0xbe00000000	                              mov esi, 0	       314	am.c	FUNCTION_14	CALL_4
0x4001773	      0xbf00000000	                              mov edi, 0	       314	am.c	FUNCTION_14	CALL_4
0x4001778	      0xe800000000	                          call 0x400177d	       314	am.c	FUNCTION_14	CALL_4
0x400177d	      0xb900000000	                              mov ecx, 0	       313	am.c	FUNCTION_14	CALL_3
0x4001782	      0xba39010000	                          mov edx, 0x139	       313	am.c	FUNCTION_14	CALL_3
0x4001787	      0xbe00000000	                              mov esi, 0	       313	am.c	FUNCTION_14	CALL_3
0x400178c	      0xbf00000000	                              mov edi, 0	       313	am.c	FUNCTION_14	CALL_3
0x4001791	      0xe800000000	                          call 0x4001796	       313	am.c	FUNCTION_14	CALL_3
0x4001796	      0xb900000000	                              mov ecx, 0	       312	am.c	FUNCTION_14	CALL_2
0x400179b	      0xba38010000	                          mov edx, 0x138	       312	am.c	FUNCTION_14	CALL_2
0x40017a0	      0xbe00000000	                              mov esi, 0	       312	am.c	FUNCTION_14	CALL_2
0x40017a5	      0xbf00000000	                              mov edi, 0	       312	am.c	FUNCTION_14	CALL_2
0x40017aa	      0xe800000000	                          call 0x40017af	       312	am.c	FUNCTION_14	CALL_2
0x40017af	      0xbf00000000	                              mov edi, 0	       410	am.c	FUNCTION_18	CALL_5
0x40017b4	            0x31c0	                            xor eax, eax	       410	am.c	FUNCTION_18	CALL_5
0x40017b6	      0xe800000000	                          call 0x40017bb	       410	am.c	FUNCTION_18	CALL_5
0x40017bb	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40017c0	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x40017c4	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40017c9	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40017cb	      0xe800000000	                          call 0x40017d0	       183	am.c	FUNCTION_6	CALL_1
0x40017d0	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40017d5	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x40017d8	      0xe8e3f0ffff	                       call sym._.part.6	       183	am.c	FUNCTION_6	CALL_1
0x40017dd	          0x4889de	                            mov rsi, rbx	       465	am.c	FUNCTION_18	CALL_42
0x40017e0	          0x4889c7	                            mov rdi, rax	       465	am.c	FUNCTION_18	CALL_42
0x40017e3	            0x31c0	                            xor eax, eax	       465	am.c	FUNCTION_18	CALL_42
0x40017e5	      0xe800000000	                          call 0x40017ea	       465	am.c	FUNCTION_18	CALL_42
0x40017ea	      0xe800000000	                          call 0x40017ef	       470	am.c	FUNCTION_18
0x40017ef	      0xbf00000000	                              mov edi, 0	       406	am.c	FUNCTION_18	CALL_2
0x40017f4	            0x31c0	                            xor eax, eax	       406	am.c	FUNCTION_18	CALL_2
0x40017f6	      0xe800000000	                          call 0x40017fb	       406	am.c	FUNCTION_18	CALL_2
0x40017fb	      0xbf00000000	                              mov edi, 0	       406	am.c	FUNCTION_18	CALL_2
0x4001800	      0xe8bbf0ffff	                       call sym._.part.6	       406	am.c	FUNCTION_18	CALL_2
0x4001805	          0x4c89e6	                            mov rsi, r12	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4001808	          0x4889c7	                            mov rdi, rax	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x400180b	            0x31c0	                            xor eax, eax	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x400180d	      0xe800000000	                          call 0x4001812	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4001812	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001817	            0xeba7	                           jmp 0x40017c0	       183	am.c	FUNCTION_6	CALL_1
write_state_text	CALL,2:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,0:functions,0	13
0x40002a0	              0x53	                                push rbx	       191	am.c	FUNCTION_7
0x40002a1	          0x4889d3	                            mov rbx, rdx	       191	am.c	FUNCTION_7
0x40002a4	          0x4889f2	                            mov rdx, rsi	       183	am.c	FUNCTION_6	CALL_1
0x40002a7	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x40002aa	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40002ac	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40002b1	      0xe800000000	                          call 0x40002b6	       183	am.c	FUNCTION_6	CALL_1
0x40002b6	          0x4889da	                            mov rdx, rbx	       192	am.c	FUNCTION_7	CALL_2
0x40002b9	          0x4889c7	                            mov rdi, rax	       192	am.c	FUNCTION_7	CALL_2
0x40002bc	      0xbe00000000	                              mov esi, 0	       192	am.c	FUNCTION_7	CALL_2
0x40002c1	              0x5b	                                 pop rbx	       193	am.c	FUNCTION_7
0x40002c2	            0x31c0	                            xor eax, eax	       192	am.c	FUNCTION_7	CALL_2
0x40002c4	      0xe900000000	                           jmp 0x40002c9	       192	am.c	FUNCTION_7	CALL_2
am_rerere_clear	CALL,2:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,0:functions,0	20
0x4000810	        0x4883ec38	                           sub rsp, 0x38	      2029	am.c	FUNCTION_54
0x4000814	          0x4889e7	                            mov rdi, rsp	      2031	am.c	FUNCTION_54	CALL_1
0x4000817	      0x804c241001	                 or byte [rsp + 0x10], 1	      2030	am.c	FUNCTION_54
0x400081c	    0x48c704240000	                      mov qword [rsp], 0	      2030	am.c	FUNCTION_54
0x4000824	    0x64488b042528	                mov rax, qword fs:[0x28]	      2029	am.c	FUNCTION_54
0x400082d	      0x4889442428	             mov qword [rsp + 0x28], rax	      2029	am.c	FUNCTION_54
0x4000832	            0x31c0	                            xor eax, eax	      2029	am.c	FUNCTION_54
0x4000834	    0xc74424080000	                  mov dword [rsp + 8], 0	      2030	am.c	FUNCTION_54
0x400083c	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2030	am.c	FUNCTION_54
0x4000844	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2030	am.c	FUNCTION_54
0x400084d	      0xe800000000	                          call 0x4000852	      2031	am.c	FUNCTION_54	CALL_1
0x4000852	      0xbe01000000	                              mov esi, 1	      2032	am.c	FUNCTION_54	CALL_2
0x4000857	          0x4889e7	                            mov rdi, rsp	      2032	am.c	FUNCTION_54	CALL_2
0x400085a	      0xe800000000	                          call 0x400085f	      2032	am.c	FUNCTION_54	CALL_2
0x400085f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2033	am.c	FUNCTION_54
0x4000864	    0x644833042528	                xor rax, qword fs:[0x28]	      2033	am.c	FUNCTION_54
0x400086d	            0x7505	                           jne 0x4000874	      2033	am.c	FUNCTION_54
0x400086f	        0x4883c438	                           add rsp, 0x38	      2033	am.c	FUNCTION_54
0x4000873	              0xc3	                                     ret	      2033	am.c	FUNCTION_54
0x4000874	      0xe800000000	                          call 0x4000879	      2033	am.c	FUNCTION_54
parse_opt_patchformat	CALL,6:DO,0:ELSE,5:WHILE,0:SWITCH,0:FOR,0:IF,5:functions,0	75
0x40026a0	      0xb905000000	                              mov ecx, 5	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x40026a5	        0x4c8b4710	              mov r8, qword [rdi + 0x10]	      2161	am.c	FUNCTION_59
0x40026a9	      0xbf00000000	                              mov edi, 0	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x40026ae	          0x4889f2	                            mov rdx, rsi	      2160	am.c	FUNCTION_59
0x40026b1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x40026b3	           0xf97c0	                                 seta al	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x40026b6	           0xf92c1	                                 setb cl	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x40026b9	            0x29c8	                            sub eax, ecx	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x40026bb	           0xfbec0	                           movsx eax, al	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x40026be	            0x85c0	                           test eax, eax	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x40026c0	            0x746e	                            je 0x4002730	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x40026c2	      0xb906000000	                              mov ecx, 6	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40026c7	      0xbf00000000	                              mov edi, 0	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40026cc	          0x4889d6	                            mov rsi, rdx	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40026cf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40026d1	           0xf97c0	                                 seta al	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40026d4	           0xf92c1	                                 setb cl	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40026d7	            0x29c8	                            sub eax, ecx	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40026d9	           0xfbec0	                           movsx eax, al	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40026dc	            0x85c0	                           test eax, eax	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40026de	            0x7440	                            je 0x4002720	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40026e0	      0xb90d000000	                            mov ecx, 0xd	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x40026e5	      0xbf00000000	                              mov edi, 0	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x40026ea	          0x4889d6	                            mov rsi, rdx	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x40026ed	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x40026ef	           0xf97c0	                                 seta al	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x40026f2	           0xf92c1	                                 setb cl	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x40026f5	            0x29c8	                            sub eax, ecx	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x40026f7	           0xfbec0	                           movsx eax, al	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x40026fa	            0x85c0	                           test eax, eax	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x40026fc	            0x7472	                            je 0x4002770	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x40026fe	          0x803a68	                    cmp byte [rdx], 0x68	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4002701	            0x753d	                           jne 0x4002740	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4002703	        0x807a0167	                cmp byte [rdx + 1], 0x67	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4002707	            0x7537	                           jne 0x4002740	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4002709	        0x807a0200	                   cmp byte [rdx + 2], 0	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x400270d	            0x7531	                           jne 0x4002740	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x400270f	    0x41c700040000	                       mov dword [r8], 4	      2170	am.c	FUNCTION_59	ELSE_3	IF_4
0x4002716	            0x31c0	                            xor eax, eax	      2175	am.c	FUNCTION_59
0x4002718	              0xc3	                                     ret	      2175	am.c	FUNCTION_59
0x4002719	     0xf1f80000000	                         nop dword [rax]	      2175	am.c	FUNCTION_59
0x4002720	    0x41c700020000	                       mov dword [r8], 2	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x4002727	              0xc3	                                     ret	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x4002728	     0xf1f84000000	                   nop dword [rax + rax]	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x4002730	    0x41c700010000	                       mov dword [r8], 1	      2164	am.c	FUNCTION_59	IF_1
0x4002737	              0xc3	                                     ret	      2176	am.c	FUNCTION_59
0x4002738	     0xf1f84000000	                   nop dword [rax + rax]	      2176	am.c	FUNCTION_59
0x4002740	      0xb907000000	                              mov ecx, 7	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x4002745	      0xbf00000000	                              mov edi, 0	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x400274a	          0x4889d6	                            mov rsi, rdx	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x400274d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x400274f	           0xf97c0	                                 seta al	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x4002752	           0xf92c1	                                 setb cl	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x4002755	            0x29c8	                            sub eax, ecx	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x4002757	           0xfbec0	                           movsx eax, al	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x400275a	            0x85c0	                           test eax, eax	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x400275c	            0x751a	                           jne 0x4002778	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x400275e	    0x41c700050000	                       mov dword [r8], 5	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x4002765	              0xc3	                                     ret	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x4002766	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x4002770	    0x41c700030000	                       mov dword [r8], 3	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x4002777	              0xc3	                                     ret	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x4002778	              0x53	                                push rbx	      2160	am.c	FUNCTION_59
0x4002779	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x400277e	          0x4889d3	                            mov rbx, rdx	        54	gettext.h	FUNCTION_119
0x4002781	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x4002783	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4002788	      0xe800000000	                          call 0x400278d	        54	gettext.h	FUNCTION_119
0x400278d	          0x4889de	                            mov rsi, rbx	      2174	am.c	FUNCTION_59	CALL_6
0x4002790	          0x4889c7	                            mov rdi, rax	      2174	am.c	FUNCTION_59	CALL_6
0x4002793	            0x31c0	                            xor eax, eax	      2174	am.c	FUNCTION_59	CALL_6
0x4002795	      0xe800000000	                          call 0x400279a	      2174	am.c	FUNCTION_59	CALL_6
0x400279a	      0xb8ffffffff	                     mov eax, 0xffffffff	      2174	am.c	FUNCTION_59	CALL_6
0x400279f	              0x5b	                                 pop rbx	      2176	am.c	FUNCTION_59
0x40027a0	              0xc3	                                     ret	      2176	am.c	FUNCTION_59
run_apply	CALL,14:DO,0:ELSE,1:WHILE,0:SWITCH,0:FOR,0:IF,7:functions,0	107
0x4000550	            0x4154	                                push r12	      1457	am.c	FUNCTION_43
0x4000552	              0x55	                                push rbp	      1457	am.c	FUNCTION_43
0x4000553	          0x4989fc	                            mov r12, rdi	      1457	am.c	FUNCTION_43
0x4000556	              0x53	                                push rbx	      1457	am.c	FUNCTION_43
0x4000557	          0x4889f3	                            mov rbx, rsi	      1457	am.c	FUNCTION_43
0x400055a	            0x31f6	                            xor esi, esi	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x400055c	    0x4881ec800100	                          sub rsp, 0x180	      1457	am.c	FUNCTION_43
0x4000563	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4000568	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1458	am.c	FUNCTION_43
0x4000571	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1458	am.c	FUNCTION_43
0x4000579	    0x64488b042528	                mov rax, qword fs:[0x28]	      1457	am.c	FUNCTION_43
0x4000582	    0x488984247801	            mov qword [rsp + 0x178], rax	      1457	am.c	FUNCTION_43
0x400058a	            0x31c0	                            xor eax, eax	      1457	am.c	FUNCTION_43
0x400058c	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1458	am.c	FUNCTION_43
0x4000594	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1459	am.c	FUNCTION_43
0x400059d	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1459	am.c	FUNCTION_43
0x40005a5	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1459	am.c	FUNCTION_43
0x40005ad	    0xc74424080000	                  mov dword [rsp + 8], 0	      1462	am.c	FUNCTION_43
0x40005b5	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1463	am.c	FUNCTION_43
0x40005bd	      0xe800000000	                          call 0x40005c2	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x40005c2	            0x85c0	                           test eax, eax	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x40005c4	     0xf8568010000	                           jne 0x4000732	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x40005ca	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1468	am.c	FUNCTION_43	CALL_3
0x40005cf	      0xbe00000000	                              mov esi, 0	      1468	am.c	FUNCTION_43	CALL_3
0x40005d4	      0xe800000000	                          call 0x40005d9	      1468	am.c	FUNCTION_43	CALL_3
0x40005d9	      0x498b742470	            mov rsi, qword [r12 + 0x70] 	      1469	am.c	FUNCTION_43	CALL_4
0x40005de	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1469	am.c	FUNCTION_43	CALL_4
0x40005e3	      0xe800000000	                          call 0x40005e8	      1469	am.c	FUNCTION_43	CALL_4
0x40005e8	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1471	am.c	FUNCTION_43	CALL_5
0x40005ed	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      1471	am.c	FUNCTION_43	CALL_5
0x40005f1	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1471	am.c	FUNCTION_43	CALL_5
0x40005f6	      0x488d4c2408	                      lea rcx, [rsp + 8]	      1471	am.c	FUNCTION_43	CALL_5
0x40005fb	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1471	am.c	FUNCTION_43	CALL_5
0x4000600	          0x4531c9	                            xor r9d, r9d	      1471	am.c	FUNCTION_43	CALL_5
0x4000603	      0xe800000000	                          call 0x4000608	      1471	am.c	FUNCTION_43	CALL_5
0x4000608	            0x85c0	                           test eax, eax	      1475	am.c	FUNCTION_43	IF_2
0x400060a	     0xf8516010000	                           jne 0x4000726	      1475	am.c	FUNCTION_43	IF_2
0x4000610	          0x4885db	                           test rbx, rbx	      1478	am.c	FUNCTION_43	IF_3
0x4000613	     0xf84d7000000	                            je 0x40006f0	      1478	am.c	FUNCTION_43	IF_3
0x4000619	    0x48899c248000	             mov qword [rsp + 0x80], rbx	      1479	am.c	FUNCTION_43	IF_3
0x4000621	    0xc74424440100	               mov dword [rsp + 0x44], 1	      1480	am.c	FUNCTION_43	IF_3
0x4000629	        0x8b742408	                mov esi, dword [rsp + 8]	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x400062d	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4000632	      0xe800000000	                          call 0x4000637	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4000637	            0x85c0	                           test eax, eax	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4000639	            0x89c5	                            mov ebp, eax	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x400063b	     0xf85d9000000	                           jne 0x400071a	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4000641	        0x498b3424	                    mov rsi, qword [r12]	       183	am.c	FUNCTION_6	CALL_1
0x4000645	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400064a	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400064f	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4000651	      0xe800000000	                          call 0x4000656	       183	am.c	FUNCTION_6	CALL_1
0x4000656	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1494	am.c	FUNCTION_43	CALL_10
0x400065b	          0x4889c6	                            mov rsi, rax	      1494	am.c	FUNCTION_43	CALL_10
0x400065e	      0xe800000000	                          call 0x4000663	      1494	am.c	FUNCTION_43	CALL_10
0x4000663	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1496	am.c	FUNCTION_43	CALL_11
0x4000667	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1496	am.c	FUNCTION_43	CALL_11
0x400066c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1496	am.c	FUNCTION_43	CALL_11
0x4000671	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      1496	am.c	FUNCTION_43	CALL_11
0x4000675	      0xe800000000	                          call 0x400067a	      1496	am.c	FUNCTION_43	CALL_11
0x400067a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1498	am.c	FUNCTION_43	CALL_12
0x400067f	          0x4189c4	                           mov r12d, eax	      1496	am.c	FUNCTION_43	CALL_11
0x4000682	      0xe800000000	                          call 0x4000687	      1498	am.c	FUNCTION_43	CALL_12
0x4000687	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1499	am.c	FUNCTION_43	CALL_13
0x400068c	      0xe800000000	                          call 0x4000691	      1499	am.c	FUNCTION_43	CALL_13
0x4000691	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1500	am.c	FUNCTION_43	CALL_14
0x4000696	      0xe800000000	                          call 0x400069b	      1500	am.c	FUNCTION_43	CALL_14
0x400069b	          0x4585e4	                         test r12d, r12d	      1502	am.c	FUNCTION_43	IF_6
0x400069e	            0x7548	                           jne 0x40006e8	      1502	am.c	FUNCTION_43	IF_6
0x40006a0	          0x4885db	                           test rbx, rbx	      1505	am.c	FUNCTION_43	IF_7
0x40006a3	            0x741f	                            je 0x40006c4	      1505	am.c	FUNCTION_43	IF_7
0x40006a5	      0xbf00000000	                              mov edi, 0	      1507	am.c	FUNCTION_43	IF_7
0x40006aa	      0xe800000000	                          call 0x40006af	      1507	am.c	FUNCTION_43	IF_7
0x40006af	      0xe800000000	                          call 0x40006b4	      1508	am.c	FUNCTION_43	IF_7
0x40006b4	          0x4889de	                            mov rsi, rbx	      1508	am.c	FUNCTION_43	IF_7
0x40006b7	          0x4889c2	                            mov rdx, rax	      1508	am.c	FUNCTION_43	IF_7
0x40006ba	      0xbf00000000	                              mov edi, 0	      1508	am.c	FUNCTION_43	IF_7
0x40006bf	      0xe800000000	                          call 0x40006c4	      1508	am.c	FUNCTION_43	IF_7
0x40006c4	    0x488b9c247801	           mov rbx, qword [rsp + 0x178] 	      1512	am.c	FUNCTION_43
0x40006cc	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1512	am.c	FUNCTION_43
0x40006d5	            0x89e8	                            mov eax, ebp	      1512	am.c	FUNCTION_43
0x40006d7	            0x753c	                           jne 0x4000715	      1512	am.c	FUNCTION_43
0x40006d9	    0x4881c4800100	                          add rsp, 0x180	      1512	am.c	FUNCTION_43
0x40006e0	              0x5b	                                 pop rbx	      1512	am.c	FUNCTION_43
0x40006e1	              0x5d	                                 pop rbp	      1512	am.c	FUNCTION_43
0x40006e2	            0x415c	                                 pop r12	      1512	am.c	FUNCTION_43
0x40006e4	              0xc3	                                     ret	      1512	am.c	FUNCTION_43
0x40006e5	           0xf1f00	                         nop dword [rax]	      1512	am.c	FUNCTION_43
0x40006e8	          0x4489e5	                           mov ebp, r12d	      1512	am.c	FUNCTION_43
0x40006eb	            0xebd7	                           jmp 0x40006c4	      1512	am.c	FUNCTION_43
0x40006ed	           0xf1f00	                         nop dword [rax]	      1512	am.c	FUNCTION_43
0x40006f0	      0x418b442454	            mov eax, dword [r12 + 0x54] 	      1488	am.c	FUNCTION_43	IF_4
0x40006f5	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      1482	am.c	FUNCTION_43	ELSE_1
0x40006fd	            0x85c0	                           test eax, eax	      1488	am.c	FUNCTION_43	IF_4
0x40006ff	     0xf8424ffffff	                            je 0x4000629	      1488	am.c	FUNCTION_43	IF_4
0x4000705	    0xc78424880000	     mov dword [rsp + 0x88], 0xffffffff 	      1489	am.c	FUNCTION_43	IF_4
0x4000710	      0xe914ffffff	                           jmp 0x4000629	      1489	am.c	FUNCTION_43	IF_4
0x4000715	      0xe800000000	                          call 0x400071a	      1512	am.c	FUNCTION_43
0x400071a	      0xbf00000000	                              mov edi, 0	      1492	am.c	FUNCTION_43	CALL_8
0x400071f	            0x31c0	                            xor eax, eax	      1492	am.c	FUNCTION_43	CALL_8
0x4000721	      0xe800000000	                          call 0x4000726	      1492	am.c	FUNCTION_43	CALL_8
0x4000726	      0xbf00000000	                              mov edi, 0	      1476	am.c	FUNCTION_43	CALL_6
0x400072b	            0x31c0	                            xor eax, eax	      1476	am.c	FUNCTION_43	CALL_6
0x400072d	      0xe800000000	                          call 0x4000732	      1476	am.c	FUNCTION_43	CALL_6
0x4000732	      0xbf00000000	                              mov edi, 0	      1466	am.c	FUNCTION_43	CALL_2
0x4000737	            0x31c0	                            xor eax, eax	      1466	am.c	FUNCTION_43	CALL_2
0x4000739	      0xe800000000	                          call 0x400073e	      1466	am.c	FUNCTION_43	CALL_2
merge_tree	CALL,9:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,3:functions,0	62
0x4000bc0	              0x55	                                push rbp	      1956	am.c	FUNCTION_52
0x4000bc1	              0x53	                                push rbx	      1956	am.c	FUNCTION_52
0x4000bc2	            0x31f6	                            xor esi, esi	        22	tree.h	FUNCTION_137	CALL_1
0x4000bc4	          0x4889fb	                            mov rbx, rdi	      1956	am.c	FUNCTION_52
0x4000bc7	    0x4881ec580300	                          sub rsp, 0x358	      1956	am.c	FUNCTION_52
0x4000bce	    0x64488b042528	                mov rax, qword fs:[0x28]	      1956	am.c	FUNCTION_52
0x4000bd7	    0x488984244803	            mov qword [rsp + 0x348], rax	      1956	am.c	FUNCTION_52
0x4000bdf	            0x31c0	                            xor eax, eax	      1956	am.c	FUNCTION_52
0x4000be1	    0x48c704240000	                      mov qword [rsp], 0	      1957	am.c	FUNCTION_52
0x4000be9	      0xe800000000	                          call 0x4000bee	        22	tree.h	FUNCTION_137	CALL_1
0x4000bee	            0x85c0	                           test eax, eax	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x4000bf0	     0xf85ba000000	                           jne 0x4000cb0	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x4000bf6	      0x488d6c2440	                   lea rbp, [rsp + 0x40]	        90	string3.h	FUNCTION_124	CALL_6
0x4000bfb	      0xbe01000000	                              mov esi, 1	      1964	am.c	FUNCTION_52	CALL_2
0x4000c00	          0x4889e7	                            mov rdi, rsp	      1964	am.c	FUNCTION_52	CALL_2
0x4000c03	      0xe800000000	                          call 0x4000c08	      1964	am.c	FUNCTION_52	CALL_2
0x4000c08	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_124	CALL_6
0x4000c0a	      0xb960000000	                           mov ecx, 0x60	        90	string3.h	FUNCTION_124	CALL_6
0x4000c0f	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_124	CALL_6
0x4000c12	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_124	CALL_6
0x4000c15	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1972	am.c	FUNCTION_52	CALL_4
0x4000c19	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1972	am.c	FUNCTION_52	CALL_4
0x4000c1d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1972	am.c	FUNCTION_52	CALL_4
0x4000c22	    0xc78424400200	              mov dword [rsp + 0x240], 1	      1967	am.c	FUNCTION_52
0x4000c2d	    0x48c784246002	              mov qword [rsp + 0x260], 0	      1968	am.c	FUNCTION_52
0x4000c39	    0x48c784245802	              mov qword [rsp + 0x258], 0	      1969	am.c	FUNCTION_52
0x4000c45	    0xc74424440100	               mov dword [rsp + 0x44], 1	      1970	am.c	FUNCTION_52
0x4000c4d	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      1971	am.c	FUNCTION_52
0x4000c59	      0xe800000000	                          call 0x4000c5e	      1972	am.c	FUNCTION_52	CALL_4
0x4000c5e	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4000c63	          0x4889ea	                            mov rdx, rbp	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4000c66	      0xbf01000000	                              mov edi, 1	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4000c6b	      0xe800000000	                          call 0x4000c70	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4000c70	            0x85c0	                           test eax, eax	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4000c72	            0x754c	                           jne 0x4000cc0	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4000c74	      0xba01000000	                              mov edx, 1	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4000c79	          0x4889e6	                            mov rsi, rsp	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4000c7c	      0xbf00000000	                              mov edi, 0	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4000c81	      0xe800000000	                          call 0x4000c86	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4000c86	            0x85c0	                           test eax, eax	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4000c88	            0x754a	                           jne 0x4000cd4	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4000c8a	    0x488b8c244803	           mov rcx, qword [rsp + 0x348] 	      1983	am.c	FUNCTION_52
0x4000c92	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1983	am.c	FUNCTION_52
0x4000c9b	            0x7532	                           jne 0x4000ccf	      1983	am.c	FUNCTION_52
0x4000c9d	    0x4881c4580300	                          add rsp, 0x358	      1983	am.c	FUNCTION_52
0x4000ca4	              0x5b	                                 pop rbx	      1983	am.c	FUNCTION_52
0x4000ca5	              0x5d	                                 pop rbp	      1983	am.c	FUNCTION_52
0x4000ca6	              0xc3	                                     ret	      1983	am.c	FUNCTION_52
0x4000ca7	    0x660f1f840000	                    nop word [rax + rax]	      1983	am.c	FUNCTION_52
0x4000cb0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1962	am.c	FUNCTION_52	IF_1
0x4000cb5	            0xebd3	                           jmp 0x4000c8a	      1962	am.c	FUNCTION_52	IF_1
0x4000cb7	    0x660f1f840000	                    nop word [rax + rax]	      1962	am.c	FUNCTION_52	IF_1
0x4000cc0	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_147	CALL_1
0x4000cc3	      0xe800000000	                          call 0x4000cc8	       304	lockfile.h	FUNCTION_147	CALL_1
0x4000cc8	      0xb8ffffffff	                     mov eax, 0xffffffff	      1976	am.c	FUNCTION_52	IF_2
0x4000ccd	            0xebbb	                           jmp 0x4000c8a	      1976	am.c	FUNCTION_52	IF_2
0x4000ccf	      0xe800000000	                          call 0x4000cd4	      1983	am.c	FUNCTION_52
0x4000cd4	      0xbf00000000	                              mov edi, 0	      1983	am.c	FUNCTION_52
0x4000cd9	      0xe8e2fbffff	                       call sym._.part.6	      1983	am.c	FUNCTION_52
0x4000cde	          0x4889c7	                            mov rdi, rax	      1980	am.c	FUNCTION_52	CALL_9
0x4000ce1	            0x31c0	                            xor eax, eax	      1980	am.c	FUNCTION_52	CALL_9
0x4000ce3	      0xe800000000	                          call 0x4000ce8	      1980	am.c	FUNCTION_52	CALL_9
am_next	CALL,13:DO,0:ELSE,1:WHILE,0:SWITCH,0:FOR,0:IF,1:functions,0	78
0x4000300	              0x53	                                push rbx	      1100	am.c	FUNCTION_32
0x4000301	          0x4889fb	                            mov rbx, rdi	      1100	am.c	FUNCTION_32
0x4000304	        0x4883ec20	                           sub rsp, 0x20	      1100	am.c	FUNCTION_32
0x4000308	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      1103	am.c	FUNCTION_32
0x400030c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1100	am.c	FUNCTION_32
0x4000315	      0x4889442418	             mov qword [rsp + 0x18], rax	      1100	am.c	FUNCTION_32
0x400031a	            0x31c0	                            xor eax, eax	      1100	am.c	FUNCTION_32
0x400031c	      0xe800000000	                          call 0x4000321	      1103	am.c	FUNCTION_32
0x4000321	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1104	am.c	FUNCTION_32
0x4000325	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1103	am.c	FUNCTION_32
0x400032d	      0xe800000000	                          call 0x4000332	      1104	am.c	FUNCTION_32
0x4000332	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1105	am.c	FUNCTION_32
0x4000336	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1104	am.c	FUNCTION_32
0x400033e	      0xe800000000	                          call 0x4000343	      1105	am.c	FUNCTION_32
0x4000343	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1106	am.c	FUNCTION_32
0x4000347	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1105	am.c	FUNCTION_32
0x400034f	      0xe800000000	                          call 0x4000354	      1106	am.c	FUNCTION_32
0x4000354	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4000357	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400035c	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000361	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4000363	    0x48c743280000	               mov qword [rbx + 0x28], 0	      1106	am.c	FUNCTION_32
0x400036b	    0x48c743300000	               mov qword [rbx + 0x30], 0	      1107	am.c	FUNCTION_32
0x4000373	      0xe800000000	                          call 0x4000378	       183	am.c	FUNCTION_6	CALL_1
0x4000378	          0x4889c7	                            mov rdi, rax	      1109	am.c	FUNCTION_32	CALL_2
0x400037b	      0xe800000000	                          call 0x4000380	      1109	am.c	FUNCTION_32	CALL_2
0x4000380	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4000383	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000388	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400038d	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x400038f	      0xe800000000	                          call 0x4000394	       183	am.c	FUNCTION_6	CALL_1
0x4000394	          0x4889c7	                            mov rdi, rax	      1110	am.c	FUNCTION_32	CALL_4
0x4000397	      0xe800000000	                          call 0x400039c	      1110	am.c	FUNCTION_32	CALL_4
0x400039c	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x400039f	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40003a4	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40003a9	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40003ab	    0x48c743380000	               mov qword [rbx + 0x38], 0	        90	string3.h	FUNCTION_124	CALL_6
0x40003b3	    0x48c743400000	               mov qword [rbx + 0x40], 0	        90	string3.h	FUNCTION_124	CALL_6
0x40003bb	    0xc74348000000	               mov dword [rbx + 0x48], 0	        90	string3.h	FUNCTION_124	CALL_6
0x40003c2	      0xe800000000	                          call 0x40003c7	       183	am.c	FUNCTION_6	CALL_1
0x40003c7	          0x4889c7	                            mov rdi, rax	      1113	am.c	FUNCTION_32	CALL_7
0x40003ca	      0xe800000000	                          call 0x40003cf	      1113	am.c	FUNCTION_32	CALL_7
0x40003cf	            0x31d2	                            xor edx, edx	      1114	am.c	FUNCTION_32	CALL_8
0x40003d1	            0x31ff	                            xor edi, edi	      1114	am.c	FUNCTION_32	CALL_8
0x40003d3	      0xb901000000	                              mov ecx, 1	      1114	am.c	FUNCTION_32	CALL_8
0x40003d8	      0xbe00000000	                              mov esi, 0	      1114	am.c	FUNCTION_32	CALL_8
0x40003dd	      0xe800000000	                          call 0x40003e2	      1114	am.c	FUNCTION_32	CALL_8
0x40003e2	          0x4889e6	                            mov rsi, rsp	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x40003e5	      0xbf00000000	                              mov edi, 0	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x40003ea	      0xe800000000	                          call 0x40003ef	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x40003ef	            0x85c0	                           test eax, eax	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x40003f1	            0x7445	                            je 0x4000438	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x40003f3	      0xba00000000	                              mov edx, 0	      1119	am.c	FUNCTION_32	CALL_12
0x40003f8	      0xbe00000000	                              mov esi, 0	      1119	am.c	FUNCTION_32	CALL_12
0x40003fd	          0x4889df	                            mov rdi, rbx	      1119	am.c	FUNCTION_32	CALL_12
0x4000400	      0xe89bfeffff	               call sym.write_state_text	      1119	am.c	FUNCTION_32	CALL_12
0x4000405	          0x8b4308	                mov eax, dword [rbx + 8]	      1121	am.c	FUNCTION_32
0x4000408	      0xbe00000000	                              mov esi, 0	      1122	am.c	FUNCTION_32	CALL_13
0x400040d	          0x4889df	                            mov rdi, rbx	      1122	am.c	FUNCTION_32	CALL_13
0x4000410	          0x8d5001	                      lea edx, [rax + 1]	      1121	am.c	FUNCTION_32
0x4000413	          0x895308	                mov dword [rbx + 8], edx	      1121	am.c	FUNCTION_32
0x4000416	      0xe8b5feffff	              call sym.write_state_count	      1122	am.c	FUNCTION_32	CALL_13
0x400041b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1123	am.c	FUNCTION_32
0x4000420	    0x644833042528	                xor rax, qword fs:[0x28]	      1123	am.c	FUNCTION_32
0x4000429	            0x7527	                           jne 0x4000452	      1123	am.c	FUNCTION_32
0x400042b	        0x4883c420	                           add rsp, 0x20	      1123	am.c	FUNCTION_32
0x400042f	              0x5b	                                 pop rbx	      1123	am.c	FUNCTION_32
0x4000430	              0xc3	                                     ret	      1123	am.c	FUNCTION_32
0x4000431	     0xf1f80000000	                         nop dword [rax]	      1123	am.c	FUNCTION_32
0x4000438	          0x4889e7	                            mov rdi, rsp	      1117	am.c	FUNCTION_32	CALL_11
0x400043b	      0xe800000000	                          call 0x4000440	      1117	am.c	FUNCTION_32	CALL_11
0x4000440	      0xbe00000000	                              mov esi, 0	      1117	am.c	FUNCTION_32	CALL_11
0x4000445	          0x4889c2	                            mov rdx, rax	      1117	am.c	FUNCTION_32	CALL_11
0x4000448	          0x4889df	                            mov rdi, rbx	      1117	am.c	FUNCTION_32	CALL_11
0x400044b	      0xe850feffff	               call sym.write_state_text	      1117	am.c	FUNCTION_32	CALL_11
0x4000450	            0xebb3	                           jmp 0x4000405	      1117	am.c	FUNCTION_32	CALL_11
0x4000452	      0xe800000000	                          call 0x4000457	      1123	am.c	FUNCTION_32
split_mail_conv	CALL,9:DO,0:ELSE,1:WHILE,0:SWITCH,0:FOR,1:IF,7:functions,0	138
0x4001cf0	            0x4157	                                push r15	       752	am.c	FUNCTION_26
0x4001cf2	            0x4156	                                push r14	       752	am.c	FUNCTION_26
0x4001cf4	            0x4155	                                push r13	       752	am.c	FUNCTION_26
0x4001cf6	            0x4154	                                push r12	       752	am.c	FUNCTION_26
0x4001cf8	          0x4989f4	                            mov r12, rsi	       752	am.c	FUNCTION_26
0x4001cfb	              0x55	                                push rbp	       752	am.c	FUNCTION_26
0x4001cfc	              0x53	                                push rbx	       752	am.c	FUNCTION_26
0x4001cfd	          0x4889d5	                            mov rbp, rdx	       752	am.c	FUNCTION_26
0x4001d00	        0x4883ec18	                           sub rsp, 0x18	       752	am.c	FUNCTION_26
0x4001d04	        0x48893c24	                    mov qword [rsp], rdi	       752	am.c	FUNCTION_26
0x4001d08	          0x488b3a	                    mov rdi, qword [rdx]	       756	am.c	FUNCTION_26	IF_1
0x4001d0b	        0x894c240c	              mov dword [rsp + 0xc], ecx	       752	am.c	FUNCTION_26
0x4001d0f	          0x4885ff	                           test rdi, rdi	       756	am.c	FUNCTION_26	IF_1
0x4001d12	     0xf8498010000	                            je 0x4001eb0	       756	am.c	FUNCTION_26	IF_1
0x4001d18	            0x31db	                            xor ebx, ebx	       757	am.c	FUNCTION_26	IF_1
0x4001d1a	      0xe98f000000	                           jmp 0x4001dae	       757	am.c	FUNCTION_26	IF_1
0x4001d1f	              0x90	                                     nop	       757	am.c	FUNCTION_26	IF_1
0x4001d20	      0xbe00000000	                              mov esi, 0	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x4001d25	      0xe800000000	                          call 0x4001d2a	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x4001d2a	          0x4989c7	                            mov r15, rax	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x4001d2d	          0x4d85ff	                           test r15, r15	       769	am.c	FUNCTION_26	FOR_1	IF_3
0x4001d30	     0xf849b000000	                            je 0x4001dd1	       769	am.c	FUNCTION_26	FOR_1	IF_3
0x4001d36	      0x418b54244c	            mov edx, dword [r12 + 0x4c] 	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001d3b	        0x498b3424	                    mov rsi, qword [r12]	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001d3f	          0x83c301	                              add ebx, 1	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001d42	            0x89d9	                            mov ecx, ebx	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001d44	      0xbf00000000	                              mov edi, 0	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001d49	            0x31c0	                            xor eax, eax	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001d4b	      0xe800000000	                          call 0x4001d50	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001d50	      0xbe00000000	                              mov esi, 0	       775	am.c	FUNCTION_26	FOR_1
0x4001d55	          0x4889c7	                            mov rdi, rax	       775	am.c	FUNCTION_26	FOR_1
0x4001d58	          0x4989c5	                            mov r13, rax	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001d5b	      0xe800000000	                          call 0x4001d60	       775	am.c	FUNCTION_26	FOR_1
0x4001d60	          0x4885c0	                           test rax, rax	       776	am.c	FUNCTION_26	FOR_1	IF_4
0x4001d63	          0x4989c6	                            mov r14, rax	       775	am.c	FUNCTION_26	FOR_1
0x4001d66	     0xf84c4000000	                            je 0x4001e30	       776	am.c	FUNCTION_26	FOR_1	IF_4
0x4001d6c	          0x4889c7	                            mov rdi, rax	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001d6f	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001d73	          0x4c89fe	                            mov rsi, r15	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001d76	        0x488b0424	                    mov rax, qword [rsp]	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001d7a	            0xffd0	                                call rax	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001d7c	          0x4c89f7	                            mov rdi, r14	       785	am.c	FUNCTION_26	FOR_1	CALL_7
0x4001d7f	          0x4189c5	                           mov r13d, eax	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001d82	      0xe800000000	                          call 0x4001d87	       785	am.c	FUNCTION_26	FOR_1	CALL_7
0x4001d87	    0x4c3b3d000000	            cmp r15, qword [0x04001d8e] 	       786	am.c	FUNCTION_26	FOR_1	IF_6
0x4001d8e	            0x7408	                            je 0x4001d98	       786	am.c	FUNCTION_26	FOR_1	IF_6
0x4001d90	          0x4c89ff	                            mov rdi, r15	       787	am.c	FUNCTION_26	FOR_1	CALL_8
0x4001d93	      0xe800000000	                          call 0x4001d98	       787	am.c	FUNCTION_26	FOR_1	CALL_8
0x4001d98	          0x4585ed	                         test r13d, r13d	       789	am.c	FUNCTION_26	FOR_1	IF_7
0x4001d9b	     0xf85d7000000	                           jne 0x4001e78	       789	am.c	FUNCTION_26	FOR_1	IF_7
0x4001da1	        0x4883c508	                              add rbp, 8	       759	am.c	FUNCTION_26	FOR_1
0x4001da5	        0x488b7d00	                    mov rdi, qword [rbp]	       759	am.c	FUNCTION_26	FOR_1
0x4001da9	          0x4885ff	                           test rdi, rdi	       759	am.c	FUNCTION_26	FOR_1
0x4001dac	            0x745b	                            je 0x4001e09	       759	am.c	FUNCTION_26	FOR_1
0x4001dae	          0x803f2d	                    cmp byte [rdi], 0x2d	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001db1	     0xf8569ffffff	                           jne 0x4001d20	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001db7	        0x807f0100	                   cmp byte [rdi + 1], 0	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001dbb	     0xf855fffffff	                           jne 0x4001d20	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001dc1	    0x4c8b3d000000	            mov r15, qword [0x04001dc8] 	       765	am.c	FUNCTION_26	FOR_1	IF_2
0x4001dc8	          0x4d85ff	                           test r15, r15	       769	am.c	FUNCTION_26	FOR_1	IF_3
0x4001dcb	     0xf8565ffffff	                           jne 0x4001d36	       769	am.c	FUNCTION_26	FOR_1	IF_3
0x4001dd1	        0x488b5d00	                    mov rbx, qword [rbp]	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001dd5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4001dda	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x4001ddf	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x4001de1	      0xe800000000	                          call 0x4001de6	        54	gettext.h	FUNCTION_119
0x4001de6	          0x4889de	                            mov rsi, rbx	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001de9	          0x4889c7	                            mov rdi, rax	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001dec	            0x31c0	                            xor eax, eax	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001dee	      0xe800000000	                          call 0x4001df3	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001df3	        0x4883c418	                           add rsp, 0x18	       796	am.c	FUNCTION_26
0x4001df7	      0xb8ffffffff	                     mov eax, 0xffffffff	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001dfc	              0x5b	                                 pop rbx	       796	am.c	FUNCTION_26
0x4001dfd	              0x5d	                                 pop rbp	       796	am.c	FUNCTION_26
0x4001dfe	            0x415c	                                 pop r12	       796	am.c	FUNCTION_26
0x4001e00	            0x415d	                                 pop r13	       796	am.c	FUNCTION_26
0x4001e02	            0x415e	                                 pop r14	       796	am.c	FUNCTION_26
0x4001e04	            0x415f	                                 pop r15	       796	am.c	FUNCTION_26
0x4001e06	              0xc3	                                     ret	       796	am.c	FUNCTION_26
0x4001e07	            0x31db	                            xor ebx, ebx	       759	am.c	FUNCTION_26	FOR_1
0x4001e09	      0x41895c240c	              mov dword [r12 + 0xc], ebx	       794	am.c	FUNCTION_26
0x4001e0e	    0x41c744240801	                  mov dword [r12 + 8], 1	       793	am.c	FUNCTION_26
0x4001e17	        0x4883c418	                           add rsp, 0x18	       796	am.c	FUNCTION_26
0x4001e1b	              0x5b	                                 pop rbx	       796	am.c	FUNCTION_26
0x4001e1c	            0x31c0	                            xor eax, eax	       795	am.c	FUNCTION_26
0x4001e1e	              0x5d	                                 pop rbp	       796	am.c	FUNCTION_26
0x4001e1f	            0x415c	                                 pop r12	       796	am.c	FUNCTION_26
0x4001e21	            0x415d	                                 pop r13	       796	am.c	FUNCTION_26
0x4001e23	            0x415e	                                 pop r14	       796	am.c	FUNCTION_26
0x4001e25	            0x415f	                                 pop r15	       796	am.c	FUNCTION_26
0x4001e27	              0xc3	                                     ret	       796	am.c	FUNCTION_26
0x4001e28	     0xf1f84000000	                   nop dword [rax + rax]	       796	am.c	FUNCTION_26
0x4001e30	    0x4c3b3d000000	            cmp r15, qword [0x04001e37] 	       777	am.c	FUNCTION_26	FOR_1	IF_4	IF_5
0x4001e37	            0x7408	                            je 0x4001e41	       777	am.c	FUNCTION_26	FOR_1	IF_4	IF_5
0x4001e39	          0x4c89ff	                            mov rdi, r15	       778	am.c	FUNCTION_26	FOR_1	IF_4	CALL_4
0x4001e3c	      0xe800000000	                          call 0x4001e41	       778	am.c	FUNCTION_26	FOR_1	IF_4	CALL_4
0x4001e41	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4001e46	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x4001e4b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x4001e4d	      0xe800000000	                          call 0x4001e52	        54	gettext.h	FUNCTION_119
0x4001e52	          0x4c89ee	                            mov rsi, r13	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001e55	          0x4889c7	                            mov rdi, rax	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001e58	            0x31c0	                            xor eax, eax	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001e5a	      0xe800000000	                          call 0x4001e5f	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001e5f	        0x4883c418	                           add rsp, 0x18	       796	am.c	FUNCTION_26
0x4001e63	      0xb8ffffffff	                     mov eax, 0xffffffff	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001e68	              0x5b	                                 pop rbx	       796	am.c	FUNCTION_26
0x4001e69	              0x5d	                                 pop rbp	       796	am.c	FUNCTION_26
0x4001e6a	            0x415c	                                 pop r12	       796	am.c	FUNCTION_26
0x4001e6c	            0x415d	                                 pop r13	       796	am.c	FUNCTION_26
0x4001e6e	            0x415e	                                 pop r14	       796	am.c	FUNCTION_26
0x4001e70	            0x415f	                                 pop r15	       796	am.c	FUNCTION_26
0x4001e72	              0xc3	                                     ret	       796	am.c	FUNCTION_26
0x4001e73	       0xf1f440000	                   nop dword [rax + rax]	       796	am.c	FUNCTION_26
0x4001e78	        0x488b5d00	                    mov rbx, qword [rbp]	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4001e7c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4001e81	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x4001e86	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x4001e88	      0xe800000000	                          call 0x4001e8d	        54	gettext.h	FUNCTION_119
0x4001e8d	          0x4889de	                            mov rsi, rbx	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4001e90	          0x4889c7	                            mov rdi, rax	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4001e93	            0x31c0	                            xor eax, eax	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4001e95	      0xe800000000	                          call 0x4001e9a	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4001e9a	        0x4883c418	                           add rsp, 0x18	       796	am.c	FUNCTION_26
0x4001e9e	      0xb8ffffffff	                     mov eax, 0xffffffff	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4001ea3	              0x5b	                                 pop rbx	       796	am.c	FUNCTION_26
0x4001ea4	              0x5d	                                 pop rbp	       796	am.c	FUNCTION_26
0x4001ea5	            0x415c	                                 pop r12	       796	am.c	FUNCTION_26
0x4001ea7	            0x415d	                                 pop r13	       796	am.c	FUNCTION_26
0x4001ea9	            0x415e	                                 pop r14	       796	am.c	FUNCTION_26
0x4001eab	            0x415f	                                 pop r15	       796	am.c	FUNCTION_26
0x4001ead	              0xc3	                                     ret	       796	am.c	FUNCTION_26
0x4001eae	            0x6690	                                     nop	       796	am.c	FUNCTION_26
0x4001eb0	    0x488b3d000000	            mov rdi, qword [0x04001eb7] 	       759	am.c	FUNCTION_26	FOR_1
0x4001eb7	          0x4885ff	                           test rdi, rdi	       759	am.c	FUNCTION_26	FOR_1
0x4001eba	     0xf8447ffffff	                            je 0x4001e07	       759	am.c	FUNCTION_26	FOR_1
0x4001ec0	      0xbd00000000	                              mov ebp, 0	       757	am.c	FUNCTION_26	IF_1
0x4001ec5	      0xe94efeffff	                           jmp 0x4001d18	       757	am.c	FUNCTION_26	IF_1
fast_forward_to	CALL,11:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,3:functions,0	85
0x4000a40	            0x4155	                                push r13	      1917	am.c	FUNCTION_51
0x4000a42	            0x4154	                                push r12	      1917	am.c	FUNCTION_51
0x4000a44	          0x4189d5	                           mov r13d, edx	      1917	am.c	FUNCTION_51
0x4000a47	              0x55	                                push rbp	      1917	am.c	FUNCTION_51
0x4000a48	              0x53	                                push rbx	      1917	am.c	FUNCTION_51
0x4000a49	          0x4889f5	                            mov rbp, rsi	      1917	am.c	FUNCTION_51
0x4000a4c	            0x31f6	                            xor esi, esi	        22	tree.h	FUNCTION_137	CALL_1
0x4000a4e	          0x4889fb	                            mov rbx, rdi	      1917	am.c	FUNCTION_51
0x4000a51	    0x4881ec780300	                          sub rsp, 0x378	      1917	am.c	FUNCTION_51
0x4000a58	    0x64488b042528	                mov rax, qword fs:[0x28]	      1917	am.c	FUNCTION_51
0x4000a61	    0x488984246803	            mov qword [rsp + 0x368], rax	      1917	am.c	FUNCTION_51
0x4000a69	            0x31c0	                            xor eax, eax	      1917	am.c	FUNCTION_51
0x4000a6b	    0x48c704240000	                      mov qword [rsp], 0	      1918	am.c	FUNCTION_51
0x4000a73	      0xe800000000	                          call 0x4000a78	        22	tree.h	FUNCTION_137	CALL_1
0x4000a78	            0x85c0	                           test eax, eax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x4000a7a	     0xf8500010000	                           jne 0x4000b80	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x4000a80	            0x31f6	                            xor esi, esi	        22	tree.h	FUNCTION_137	CALL_1
0x4000a82	          0x4889ef	                            mov rdi, rbp	        22	tree.h	FUNCTION_137	CALL_1
0x4000a85	      0xe800000000	                          call 0x4000a8a	        22	tree.h	FUNCTION_137	CALL_1
0x4000a8a	            0x85c0	                           test eax, eax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x4000a8c	     0xf85ee000000	                           jne 0x4000b80	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x4000a92	      0xbe01000000	                              mov esi, 1	      1925	am.c	FUNCTION_51	CALL_3
0x4000a97	          0x4889e7	                            mov rdi, rsp	      1925	am.c	FUNCTION_51	CALL_3
0x4000a9a	      0x4c8d642460	                   lea r12, [rsp + 0x60]	        90	string3.h	FUNCTION_124	CALL_6
0x4000a9f	      0xe800000000	                          call 0x4000aa4	      1925	am.c	FUNCTION_51	CALL_3
0x4000aa4	          0x4531c0	                            xor r8d, r8d	      1927	am.c	FUNCTION_51
0x4000aa7	            0x31c9	                            xor ecx, ecx	      1927	am.c	FUNCTION_51
0x4000aa9	            0x31d2	                            xor edx, edx	      1927	am.c	FUNCTION_51
0x4000aab	      0xbe04000000	                              mov esi, 4	      1927	am.c	FUNCTION_51
0x4000ab0	      0xbf00000000	                              mov edi, 0	      1927	am.c	FUNCTION_51
0x4000ab5	      0xe800000000	                          call 0x4000aba	      1927	am.c	FUNCTION_51
0x4000aba	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_124	CALL_6
0x4000abc	      0xb960000000	                           mov ecx, 0x60	        90	string3.h	FUNCTION_124	CALL_6
0x4000ac1	          0x4c89e7	                            mov rdi, r12	        90	string3.h	FUNCTION_124	CALL_6
0x4000ac4	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_124	CALL_6
0x4000ac7	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1937	am.c	FUNCTION_51	CALL_5
0x4000acb	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1937	am.c	FUNCTION_51	CALL_5
0x4000acf	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1937	am.c	FUNCTION_51	CALL_5
0x4000ad4	    0xc78424600200	              mov dword [rsp + 0x260], 1	      1930	am.c	FUNCTION_51
0x4000adf	    0x48c784248002	              mov qword [rsp + 0x280], 0	      1931	am.c	FUNCTION_51
0x4000aeb	    0x48c784247802	              mov qword [rsp + 0x278], 0	      1932	am.c	FUNCTION_51
0x4000af7	    0xc74424680100	               mov dword [rsp + 0x68], 1	      1933	am.c	FUNCTION_51
0x4000aff	    0xc74424640100	               mov dword [rsp + 0x64], 1	      1934	am.c	FUNCTION_51
0x4000b07	      0x44896c2460	            mov dword [rsp + 0x60], r13d	      1935	am.c	FUNCTION_51
0x4000b0c	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      1936	am.c	FUNCTION_51
0x4000b18	      0xe800000000	                          call 0x4000b1d	      1937	am.c	FUNCTION_51	CALL_5
0x4000b1d	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      1938	am.c	FUNCTION_51	CALL_6
0x4000b21	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      1938	am.c	FUNCTION_51	CALL_6
0x4000b25	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	      1938	am.c	FUNCTION_51	CALL_6
0x4000b2a	      0xe800000000	                          call 0x4000b2f	      1938	am.c	FUNCTION_51	CALL_6
0x4000b2f	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000b34	          0x4c89e2	                            mov rdx, r12	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000b37	      0xbf02000000	                              mov edi, 2	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000b3c	      0xe800000000	                          call 0x4000b41	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000b41	            0x85c0	                           test eax, eax	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000b43	            0x754b	                           jne 0x4000b90	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000b45	      0xba01000000	                              mov edx, 1	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x4000b4a	          0x4889e6	                            mov rsi, rsp	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x4000b4d	      0xbf00000000	                              mov edi, 0	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x4000b52	      0xe800000000	                          call 0x4000b57	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x4000b57	            0x85c0	                           test eax, eax	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x4000b59	            0x7549	                           jne 0x4000ba4	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x4000b5b	    0x488b8c246803	           mov rcx, qword [rsp + 0x368] 	      1949	am.c	FUNCTION_51
0x4000b63	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1949	am.c	FUNCTION_51
0x4000b6c	            0x7531	                           jne 0x4000b9f	      1949	am.c	FUNCTION_51
0x4000b6e	    0x4881c4780300	                          add rsp, 0x378	      1949	am.c	FUNCTION_51
0x4000b75	              0x5b	                                 pop rbx	      1949	am.c	FUNCTION_51
0x4000b76	              0x5d	                                 pop rbp	      1949	am.c	FUNCTION_51
0x4000b77	            0x415c	                                 pop r12	      1949	am.c	FUNCTION_51
0x4000b79	            0x415d	                                 pop r13	      1949	am.c	FUNCTION_51
0x4000b7b	              0xc3	                                     ret	      1949	am.c	FUNCTION_51
0x4000b7c	         0xf1f4000	                         nop dword [rax]	      1949	am.c	FUNCTION_51
0x4000b80	      0xb8ffffffff	                     mov eax, 0xffffffff	      1923	am.c	FUNCTION_51	IF_1
0x4000b85	            0xebd4	                           jmp 0x4000b5b	      1923	am.c	FUNCTION_51	IF_1
0x4000b87	    0x660f1f840000	                    nop word [rax + rax]	      1923	am.c	FUNCTION_51	IF_1
0x4000b90	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_147	CALL_1
0x4000b93	      0xe800000000	                          call 0x4000b98	       304	lockfile.h	FUNCTION_147	CALL_1
0x4000b98	      0xb8ffffffff	                     mov eax, 0xffffffff	      1942	am.c	FUNCTION_51	IF_2
0x4000b9d	            0xebbc	                           jmp 0x4000b5b	      1942	am.c	FUNCTION_51	IF_2
0x4000b9f	      0xe800000000	                          call 0x4000ba4	      1949	am.c	FUNCTION_51
0x4000ba4	      0xbf00000000	                              mov edi, 0	      1949	am.c	FUNCTION_51
0x4000ba9	      0xe812fdffff	                       call sym._.part.6	      1949	am.c	FUNCTION_51
0x4000bae	          0x4889c7	                            mov rdi, rax	      1946	am.c	FUNCTION_51	CALL_11
0x4000bb1	            0x31c0	                            xor eax, eax	      1946	am.c	FUNCTION_51	CALL_11
0x4000bb3	      0xe800000000	                          call 0x4000bb8	      1946	am.c	FUNCTION_51	CALL_11
do_commit	CALL,27:DO,0:ELSE,1:WHILE,0:SWITCH,0:FOR,0:IF,7:functions,0	179
0x40019f0	            0x4155	                                push r13	      1619	am.c	FUNCTION_46
0x40019f2	            0x4154	                                push r12	      1619	am.c	FUNCTION_46
0x40019f4	            0x31d2	                            xor edx, edx	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x40019f6	              0x55	                                push rbp	      1619	am.c	FUNCTION_46
0x40019f7	              0x53	                                push rbx	      1619	am.c	FUNCTION_46
0x40019f8	      0xbe00000000	                              mov esi, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x40019fd	          0x4889fb	                            mov rbx, rdi	      1619	am.c	FUNCTION_46
0x4001a00	            0x31ff	                            xor edi, edi	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4001a02	    0x4881eca80000	                           sub rsp, 0xa8	      1619	am.c	FUNCTION_46
0x4001a09	    0x64488b042528	                mov rax, qword fs:[0x28]	      1619	am.c	FUNCTION_46
0x4001a12	    0x488984249800	             mov qword [rsp + 0x98], rax	      1619	am.c	FUNCTION_46
0x4001a1a	            0x31c0	                            xor eax, eax	      1619	am.c	FUNCTION_46
0x4001a1c	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1622	am.c	FUNCTION_46
0x4001a25	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1624	am.c	FUNCTION_46
0x4001a2e	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1624	am.c	FUNCTION_46
0x4001a37	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1624	am.c	FUNCTION_46
0x4001a40	      0xe800000000	                          call 0x4001a45	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4001a45	            0x85c0	                           test eax, eax	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4001a47	     0xf8579020000	                           jne 0x4001cc6	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4001a4d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001a52	            0x31d2	                            xor edx, edx	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001a54	            0x31f6	                            xor esi, esi	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001a56	      0xe800000000	                          call 0x4001a5b	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001a5b	            0x85c0	                           test eax, eax	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001a5d	     0xf854f020000	                           jne 0x4001cb2	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001a63	      0x488d742460	                   lea rsi, [rsp + 0x60]	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4001a68	      0xbf00000000	                              mov edi, 0	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4001a6d	      0xe800000000	                          call 0x4001a72	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4001a72	            0x85c0	                           test eax, eax	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4001a74	     0xf84fe010000	                            je 0x4001c78	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4001a7a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4001a7f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x4001a84	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x4001a86	      0xe800000000	                          call 0x4001a8b	        54	gettext.h	FUNCTION_119
0x4001a8b	    0x488b35000000	            mov rsi, qword [0x04001a92] 	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4001a92	          0x4889c2	                            mov rdx, rax	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4001a95	          0x4889df	                            mov rdi, rbx	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4001a98	            0x31c0	                            xor eax, eax	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4001a9a	            0x31ed	                            xor ebp, ebp	      1636	am.c	FUNCTION_46	ELSE_1
0x4001a9c	      0xe89fecffff	                            call sym.say	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4001aa1	    0x448b8b8c0000	            mov r9d, dword [rbx + 0x8c] 	      1640	am.c	FUNCTION_46	CALL_11
0x4001aa8	            0x31d2	                            xor edx, edx	      1640	am.c	FUNCTION_46	CALL_11
0x4001aaa	          0x4585c9	                           test r9d, r9d	      1640	am.c	FUNCTION_46	CALL_11
0x4001aad	            0x7504	                           jne 0x4001ab3	      1640	am.c	FUNCTION_46	CALL_11
0x4001aaf	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1640	am.c	FUNCTION_46	CALL_11
0x4001ab3	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1640	am.c	FUNCTION_46	CALL_11
0x4001ab7	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1640	am.c	FUNCTION_46	CALL_11
0x4001abb	      0xb901000000	                              mov ecx, 1	      1640	am.c	FUNCTION_46	CALL_11
0x4001ac0	      0xe800000000	                          call 0x4001ac5	      1640	am.c	FUNCTION_46	CALL_11
0x4001ac5	    0x448b83880000	            mov r8d, dword [rbx + 0x88] 	      1644	am.c	FUNCTION_46	IF_4
0x4001acc	          0x4989c1	                             mov r9, rax	      1640	am.c	FUNCTION_46	CALL_11
0x4001acf	          0x4585c0	                           test r8d, r8d	      1644	am.c	FUNCTION_46	IF_4
0x4001ad2	            0x742c	                            je 0x4001b00	      1644	am.c	FUNCTION_46	IF_4
0x4001ad4	    0x8bbb8c000000	            mov edi, dword [rbx + 0x8c] 	      1645	am.c	FUNCTION_46	IF_4
0x4001ada	      0xbe00000000	                              mov esi, 0	      1645	am.c	FUNCTION_46	IF_4
0x4001adf	            0x85ff	                           test edi, edi	      1645	am.c	FUNCTION_46	IF_4
0x4001ae1	            0x7504	                           jne 0x4001ae7	      1645	am.c	FUNCTION_46	IF_4
0x4001ae3	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1645	am.c	FUNCTION_46	IF_4
0x4001ae7	      0xba01000000	                              mov edx, 1	      1645	am.c	FUNCTION_46	IF_4
0x4001aec	      0xbf00000000	                              mov edi, 0	      1645	am.c	FUNCTION_46	IF_4
0x4001af1	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1645	am.c	FUNCTION_46	IF_4
0x4001af6	      0xe800000000	                          call 0x4001afb	      1645	am.c	FUNCTION_46	IF_4
0x4001afb	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1645	am.c	FUNCTION_46	IF_4
0x4001b00	        0x4883ec08	                              sub rsp, 8	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b04	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b08	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b0c	    0xffb398000000	                 push qword [rbx + 0x98]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b12	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b17	    0x4c8d84249000	                    lea r8, [rsp + 0x90]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b1f	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b24	      0xe800000000	                          call 0x4001b29	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b29	            0x85c0	                           test eax, eax	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b2b	              0x5a	                                 pop rdx	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b2c	              0x59	                                 pop rcx	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b2d	     0xf8566010000	                           jne 0x4001c99	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001b33	      0xbf00000000	                              mov edi, 0	      1652	am.c	FUNCTION_46	CALL_15
0x4001b38	      0xe800000000	                          call 0x4001b3d	      1652	am.c	FUNCTION_46	CALL_15
0x4001b3d	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      1656	am.c	FUNCTION_46	CALL_17
0x4001b41	          0x4885c0	                           test rax, rax	      1654	am.c	FUNCTION_46	IF_6
0x4001b44	          0x4989c4	                            mov r12, rax	      1652	am.c	FUNCTION_46	CALL_15
0x4001b47	      0xbe0a000000	                            mov esi, 0xa	        57	am.c	FUNCTION_2
0x4001b4c	      0xb800000000	                              mov eax, 0	      1654	am.c	FUNCTION_46	IF_6
0x4001b51	        0x4c0f44e0	                          cmove r12, rax	      1654	am.c	FUNCTION_46	IF_6
0x4001b55	          0x4c89ef	                            mov rdi, r13	        57	am.c	FUNCTION_2
0x4001b58	      0xe800000000	                          call 0x4001b5d	        57	am.c	FUNCTION_2
0x4001b5d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1656	am.c	FUNCTION_46	CALL_17
0x4001b62	          0x4c29e8	                            sub rax, r13	      1656	am.c	FUNCTION_46	CALL_17
0x4001b65	          0x4d89e8	                             mov r8, r13	      1656	am.c	FUNCTION_46	CALL_17
0x4001b68	          0x4889c1	                            mov rcx, rax	      1656	am.c	FUNCTION_46	CALL_17
0x4001b6b	          0x4c89e2	                            mov rdx, r12	      1656	am.c	FUNCTION_46	CALL_17
0x4001b6e	            0x31c0	                            xor eax, eax	      1656	am.c	FUNCTION_46	CALL_17
0x4001b70	      0xbe00000000	                              mov esi, 0	      1656	am.c	FUNCTION_46	CALL_17
0x4001b75	      0xe800000000	                          call 0x4001b7a	      1656	am.c	FUNCTION_46	CALL_17
0x4001b7a	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1659	am.c	FUNCTION_46	CALL_18
0x4001b7f	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      1659	am.c	FUNCTION_46	CALL_18
0x4001b87	          0x4531c0	                            xor r8d, r8d	      1659	am.c	FUNCTION_46	CALL_18
0x4001b8a	    0x41b901000000	                              mov r9d, 1	      1659	am.c	FUNCTION_46	CALL_18
0x4001b90	          0x4889e9	                            mov rcx, rbp	      1659	am.c	FUNCTION_46	CALL_18
0x4001b93	      0xbe00000000	                              mov esi, 0	      1659	am.c	FUNCTION_46	CALL_18
0x4001b98	      0xe800000000	                          call 0x4001b9d	      1659	am.c	FUNCTION_46	CALL_18
0x4001b9d	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1662	am.c	FUNCTION_46	IF_7
0x4001ba3	            0x85c0	                           test eax, eax	      1662	am.c	FUNCTION_46	IF_7
0x4001ba5	     0xf848d000000	                            je 0x4001c38	      1662	am.c	FUNCTION_46	IF_7
0x4001bab	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001bae	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001bb3	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001bb8	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001bba	        0x4883c338	                           add rbx, 0x38	       990	cache.h	FUNCTION_159	CALL_1
0x4001bbe	      0xe800000000	                          call 0x4001bc3	       183	am.c	FUNCTION_6	CALL_1
0x4001bc3	      0xbe00000000	                              mov esi, 0	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x4001bc8	          0x4889c7	                            mov rdi, rax	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x4001bcb	      0xe800000000	                          call 0x4001bd0	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x4001bd0	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_156	CALL_1
0x4001bd5	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_156	CALL_1
0x4001bda	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_156	CALL_1
0x4001bdd	          0x4889c5	                            mov rbp, rax	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x4001be0	      0xe800000000	                          call 0x4001be5	       975	cache.h	FUNCTION_156	CALL_1
0x4001be5	            0x85c0	                           test eax, eax	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4001be7	     0xf84e3000000	                            je 0x4001cd0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4001bed	          0x4889df	                            mov rdi, rbx	      1666	am.c	FUNCTION_46	IF_7	CALL_23
0x4001bf0	      0xe800000000	                          call 0x4001bf5	      1666	am.c	FUNCTION_46	IF_7	CALL_23
0x4001bf5	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_100
0x4001bfa	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_100
0x4001bfd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_100
0x4001c02	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_100
0x4001c05	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_100
0x4001c07	      0xe800000000	                          call 0x4001c0c	        97	stdio2.h	CALL_100
0x4001c0c	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1667	am.c	FUNCTION_46	IF_7	CALL_24
0x4001c14	      0xe800000000	                          call 0x4001c19	      1667	am.c	FUNCTION_46	IF_7	CALL_24
0x4001c19	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_100
0x4001c1c	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_100
0x4001c1f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_100
0x4001c24	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_100
0x4001c29	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_100
0x4001c2b	      0xe800000000	                          call 0x4001c30	        97	stdio2.h	CALL_100
0x4001c30	          0x4889ef	                            mov rdi, rbp	      1668	am.c	FUNCTION_46	IF_7	CALL_25
0x4001c33	      0xe800000000	                          call 0x4001c38	      1668	am.c	FUNCTION_46	IF_7	CALL_25
0x4001c38	            0x31d2	                            xor edx, edx	      1671	am.c	FUNCTION_46	CALL_26
0x4001c3a	            0x31ff	                            xor edi, edi	      1671	am.c	FUNCTION_46	CALL_26
0x4001c3c	      0xbe00000000	                              mov esi, 0	      1671	am.c	FUNCTION_46	CALL_26
0x4001c41	            0x31c0	                            xor eax, eax	      1671	am.c	FUNCTION_46	CALL_26
0x4001c43	      0xe800000000	                          call 0x4001c48	      1671	am.c	FUNCTION_46	CALL_26
0x4001c48	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1673	am.c	FUNCTION_46	CALL_27
0x4001c4d	      0xe800000000	                          call 0x4001c52	      1673	am.c	FUNCTION_46	CALL_27
0x4001c52	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1674	am.c	FUNCTION_46
0x4001c5a	    0x644833042528	                xor rax, qword fs:[0x28]	      1674	am.c	FUNCTION_46
0x4001c63	            0x7548	                           jne 0x4001cad	      1674	am.c	FUNCTION_46
0x4001c65	    0x4881c4a80000	                           add rsp, 0xa8	      1674	am.c	FUNCTION_46
0x4001c6c	              0x5b	                                 pop rbx	      1674	am.c	FUNCTION_46
0x4001c6d	              0x5d	                                 pop rbp	      1674	am.c	FUNCTION_46
0x4001c6e	            0x415c	                                 pop r12	      1674	am.c	FUNCTION_46
0x4001c70	            0x415d	                                 pop r13	      1674	am.c	FUNCTION_46
0x4001c72	              0xc3	                                     ret	      1674	am.c	FUNCTION_46
0x4001c73	       0xf1f440000	                   nop dword [rax + rax]	      1674	am.c	FUNCTION_46
0x4001c78	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4001c7d	      0x488d6c2460	                   lea rbp, [rsp + 0x60]	      1633	am.c	FUNCTION_46	IF_3
0x4001c82	      0xe800000000	                          call 0x4001c87	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4001c87	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4001c8c	          0x4889c7	                            mov rdi, rax	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4001c8f	      0xe800000000	                          call 0x4001c94	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4001c94	      0xe908feffff	                           jmp 0x4001aa1	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4001c99	      0xbf00000000	                              mov edi, 0	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4001c9e	      0xe81decffff	                       call sym._.part.6	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4001ca3	          0x4889c7	                            mov rdi, rax	      1650	am.c	FUNCTION_46	CALL_14
0x4001ca6	            0x31c0	                            xor eax, eax	      1650	am.c	FUNCTION_46	CALL_14
0x4001ca8	      0xe800000000	                          call 0x4001cad	      1650	am.c	FUNCTION_46	CALL_14
0x4001cad	      0xe800000000	                          call 0x4001cb2	      1674	am.c	FUNCTION_46
0x4001cb2	      0xbf00000000	                              mov edi, 0	      1674	am.c	FUNCTION_46
0x4001cb7	      0xe804ecffff	                       call sym._.part.6	      1674	am.c	FUNCTION_46
0x4001cbc	          0x4889c7	                            mov rdi, rax	      1630	am.c	FUNCTION_46	CALL_5
0x4001cbf	            0x31c0	                            xor eax, eax	      1630	am.c	FUNCTION_46	CALL_5
0x4001cc1	      0xe800000000	                          call 0x4001cc6	      1630	am.c	FUNCTION_46	CALL_5
0x4001cc6	      0xbf01000000	                              mov edi, 1	      1627	am.c	FUNCTION_46	CALL_2
0x4001ccb	      0xe800000000	                          call 0x4001cd0	      1627	am.c	FUNCTION_46	CALL_2
0x4001cd0	      0xb900000000	                              mov ecx, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4001cd5	      0xba81060000	                          mov edx, 0x681	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4001cda	      0xbe00000000	                              mov esi, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4001cdf	      0xbf00000000	                              mov edi, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4001ce4	      0xe800000000	                          call 0x4001ce9	      1665	am.c	FUNCTION_46	IF_7	CALL_22
write_commit_patch	CALL,6:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,0:functions,0	45
0x4000460	              0x55	                                push rbp	      1369	am.c	FUNCTION_40
0x4000461	              0x53	                                push rbx	      1369	am.c	FUNCTION_40
0x4000462	          0x4889f3	                            mov rbx, rsi	      1369	am.c	FUNCTION_40
0x4000465	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400046a	    0x4881ecc80800	                          sub rsp, 0x8c8	      1369	am.c	FUNCTION_40
0x4000471	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x4000474	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000479	    0x64488b042528	                mov rax, qword fs:[0x28]	      1369	am.c	FUNCTION_40
0x4000482	    0x48898424b808	            mov qword [rsp + 0x8b8], rax	      1369	am.c	FUNCTION_40
0x400048a	            0x31c0	                            xor eax, eax	      1369	am.c	FUNCTION_40
0x400048c	      0xe800000000	                          call 0x4000491	       183	am.c	FUNCTION_6	CALL_1
0x4000491	      0xbe00000000	                              mov esi, 0	      1373	am.c	FUNCTION_40	CALL_2
0x4000496	          0x4889c7	                            mov rdi, rax	      1373	am.c	FUNCTION_40	CALL_2
0x4000499	      0xe800000000	                          call 0x400049e	      1373	am.c	FUNCTION_40	CALL_2
0x400049e	            0x31f6	                            xor esi, esi	      1374	am.c	FUNCTION_40	CALL_3
0x40004a0	          0x4889e7	                            mov rdi, rsp	      1374	am.c	FUNCTION_40	CALL_3
0x40004a3	          0x4889c5	                            mov rbp, rax	      1373	am.c	FUNCTION_40	CALL_2
0x40004a6	      0xe800000000	                          call 0x40004ab	      1374	am.c	FUNCTION_40	CALL_3
0x40004ab	       0xfb6542479	           movzx edx, byte [rsp + 0x79] 	      1380	am.c	FUNCTION_40
0x40004b0	          0x4889de	                            mov rsi, rbx	      1386	am.c	FUNCTION_40	CALL_4
0x40004b3	          0x4889e7	                            mov rdi, rsp	      1386	am.c	FUNCTION_40	CALL_4
0x40004b6	      0x804c247b80	              or byte [rsp + 0x7b], 0x80	      1377	am.c	FUNCTION_40
0x40004bb	    0x808c24300500	             or byte [rsp + 0x530], 0x14	      1382	am.c	FUNCTION_40
0x40004c3	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	      1376	am.c	FUNCTION_40
0x40004ce	    0xc78424580500	          mov dword [rsp + 0x558], 0x10 	      1379	am.c	FUNCTION_40
0x40004d9	    0xc78424380500	              mov dword [rsp + 0x538], 0	      1383	am.c	FUNCTION_40
0x40004e4	    0x4889ac24f805	            mov qword [rsp + 0x5f8], rbp	      1384	am.c	FUNCTION_40
0x40004ec	          0x83ca0d	                             or edx, 0xd	      1380	am.c	FUNCTION_40
0x40004ef	        0x88542479	               mov byte [rsp + 0x79], dl	      1380	am.c	FUNCTION_40
0x40004f3	      0xba00000000	                              mov edx, 0	      1386	am.c	FUNCTION_40	CALL_4
0x40004f8	    0xc78424000600	              mov dword [rsp + 0x600], 1	      1385	am.c	FUNCTION_40
0x4000503	      0xe800000000	                          call 0x4000508	      1386	am.c	FUNCTION_40	CALL_4
0x4000508	    0x488dbc24f804	                  lea rdi, [rsp + 0x4f8]	      1387	am.c	FUNCTION_40	CALL_5
0x4000510	      0xe800000000	                          call 0x4000515	      1387	am.c	FUNCTION_40	CALL_5
0x4000515	          0x4889de	                            mov rsi, rbx	      1388	am.c	FUNCTION_40	CALL_6
0x4000518	          0x4889e7	                            mov rdi, rsp	      1388	am.c	FUNCTION_40	CALL_6
0x400051b	      0xe800000000	                          call 0x4000520	      1388	am.c	FUNCTION_40	CALL_6
0x4000520	    0x488b8424b808	           mov rax, qword [rsp + 0x8b8] 	      1389	am.c	FUNCTION_40
0x4000528	    0x644833042528	                xor rax, qword fs:[0x28]	      1389	am.c	FUNCTION_40
0x4000531	            0x750a	                           jne 0x400053d	      1389	am.c	FUNCTION_40
0x4000533	    0x4881c4c80800	                          add rsp, 0x8c8	      1389	am.c	FUNCTION_40
0x400053a	              0x5b	                                 pop rbx	      1389	am.c	FUNCTION_40
0x400053b	              0x5d	                                 pop rbp	      1389	am.c	FUNCTION_40
0x400053c	              0xc3	                                     ret	      1389	am.c	FUNCTION_40
0x400053d	      0xe800000000	                          call 0x4000542	      1389	am.c	FUNCTION_40
clean_index	CALL,14:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,7:functions,0	76
0x4002590	            0x4154	                                push r12	      1990	am.c	FUNCTION_53
0x4002592	              0x55	                                push rbp	      1990	am.c	FUNCTION_53
0x4002593	          0x4989f4	                            mov r12, rsi	      1990	am.c	FUNCTION_53
0x4002596	              0x53	                                push rbx	      1990	am.c	FUNCTION_53
0x4002597	          0x4889fd	                            mov rbp, rdi	      1990	am.c	FUNCTION_53
0x400259a	        0x4883ec20	                           sub rsp, 0x20	      1990	am.c	FUNCTION_53
0x400259e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1990	am.c	FUNCTION_53
0x40025a7	      0x4889442418	             mov qword [rsp + 0x18], rax	      1990	am.c	FUNCTION_53
0x40025ac	            0x31c0	                            xor eax, eax	      1990	am.c	FUNCTION_53
0x40025ae	      0xe800000000	                          call 0x40025b3	      1994	am.c	FUNCTION_53	CALL_1
0x40025b3	          0x4885c0	                           test rax, rax	      1995	am.c	FUNCTION_53	IF_1
0x40025b6	     0xf8495000000	                            je 0x4002651	      1995	am.c	FUNCTION_53	IF_1
0x40025bc	          0x4c89e7	                            mov rdi, r12	      1998	am.c	FUNCTION_53	CALL_4
0x40025bf	          0x4889c3	                            mov rbx, rax	      1998	am.c	FUNCTION_53	CALL_4
0x40025c2	      0xe800000000	                          call 0x40025c7	      1998	am.c	FUNCTION_53	CALL_4
0x40025c7	          0x4885c0	                           test rax, rax	      1999	am.c	FUNCTION_53	IF_2
0x40025ca	          0x4889c5	                            mov rbp, rax	      1998	am.c	FUNCTION_53	CALL_4
0x40025cd	     0xf84b4000000	                            je 0x4002687	      1999	am.c	FUNCTION_53	IF_2
0x40025d3	      0xbf00000000	                              mov edi, 0	      2002	am.c	FUNCTION_53
0x40025d8	      0xe800000000	                          call 0x40025dd	      2002	am.c	FUNCTION_53
0x40025dd	      0xba01000000	                              mov edx, 1	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40025e2	          0x4889de	                            mov rsi, rbx	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40025e5	          0x4889df	                            mov rdi, rbx	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40025e8	      0xe853e4ffff	                call sym.fast_forward_to	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40025ed	            0x85c0	                           test eax, eax	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40025ef	     0xf858b000000	                           jne 0x4002680	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40025f5	            0x31d2	                            xor edx, edx	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x40025f7	            0x31f6	                            xor esi, esi	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x40025f9	          0x4889e7	                            mov rdi, rsp	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x40025fc	      0xe800000000	                          call 0x4002601	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4002601	            0x85c0	                           test eax, eax	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4002603	            0x757b	                           jne 0x4002680	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4002605	          0x4889e7	                            mov rdi, rsp	      2010	am.c	FUNCTION_53	CALL_9
0x4002608	      0xe800000000	                          call 0x400260d	      2010	am.c	FUNCTION_53	CALL_9
0x400260d	          0x4885c0	                           test rax, rax	      2011	am.c	FUNCTION_53	IF_5
0x4002610	            0x747a	                            je 0x400268c	      2011	am.c	FUNCTION_53	IF_5
0x4002612	            0x31d2	                            xor edx, edx	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4002614	          0x4889ee	                            mov rsi, rbp	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4002617	          0x4889c7	                            mov rdi, rax	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x400261a	      0xe821e4ffff	                call sym.fast_forward_to	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x400261f	            0x85c0	                           test eax, eax	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4002621	            0x755d	                           jne 0x4002680	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4002623	          0x4889ef	                            mov rdi, rbp	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4002626	      0xe895e5ffff	                     call sym.merge_tree	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x400262b	            0x85c0	                           test eax, eax	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x400262d	            0x89c3	                            mov ebx, eax	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x400262f	            0x754f	                           jne 0x4002680	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4002631	      0xe800000000	                          call 0x4002636	      2020	am.c	FUNCTION_53	CALL_14
0x4002636	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2023	am.c	FUNCTION_53
0x400263b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2023	am.c	FUNCTION_53
0x4002644	            0x89d8	                            mov eax, ebx	      2023	am.c	FUNCTION_53
0x4002646	            0x7549	                           jne 0x4002691	      2023	am.c	FUNCTION_53
0x4002648	        0x4883c420	                           add rsp, 0x20	      2023	am.c	FUNCTION_53
0x400264c	              0x5b	                                 pop rbx	      2023	am.c	FUNCTION_53
0x400264d	              0x5d	                                 pop rbp	      2023	am.c	FUNCTION_53
0x400264e	            0x415c	                                 pop r12	      2023	am.c	FUNCTION_53
0x4002650	              0xc3	                                     ret	      2023	am.c	FUNCTION_53
0x4002651	          0x4889ef	                            mov rdi, rbp	      1996	am.c	FUNCTION_53	CALL_3
0x4002654	      0xe800000000	                          call 0x4002659	      2012	am.c	FUNCTION_53	CALL_11
0x4002659	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_119
0x400265e	          0x4889c3	                            mov rbx, rax	      2012	am.c	FUNCTION_53	CALL_11
0x4002661	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_119
0x4002663	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_119
0x4002668	      0xe800000000	                          call 0x400266d	        54	gettext.h	FUNCTION_119
0x400266d	          0x4889de	                            mov rsi, rbx	      2012	am.c	FUNCTION_53	CALL_11
0x4002670	          0x4889c7	                            mov rdi, rax	      2012	am.c	FUNCTION_53	CALL_11
0x4002673	            0x31c0	                            xor eax, eax	      2012	am.c	FUNCTION_53	CALL_11
0x4002675	      0xe800000000	                          call 0x400267a	      2012	am.c	FUNCTION_53	CALL_11
0x400267a	    0x660f1f440000	                    nop word [rax + rax]	      2012	am.c	FUNCTION_53	CALL_11
0x4002680	      0xbbffffffff	                     mov ebx, 0xffffffff	      2012	am.c	FUNCTION_53	CALL_11
0x4002685	            0xebaf	                           jmp 0x4002636	      2012	am.c	FUNCTION_53	CALL_11
0x4002687	          0x4c89e7	                            mov rdi, r12	      2000	am.c	FUNCTION_53	CALL_6
0x400268a	            0xebc8	                           jmp 0x4002654	      2000	am.c	FUNCTION_53	CALL_6
0x400268c	          0x4889e7	                            mov rdi, rsp	      2012	am.c	FUNCTION_53	CALL_11
0x400268f	            0xebc3	                           jmp 0x4002654	      2012	am.c	FUNCTION_53	CALL_11
0x4002691	      0xe800000000	                          call 0x4002696	      2023	am.c	FUNCTION_53
am_state_release	CALL,6:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,0:functions,0	15
0x40000c0	              0x53	                                push rbx	       169	am.c	FUNCTION_5
0x40000c1	          0x4889fb	                            mov rbx, rdi	       169	am.c	FUNCTION_5
0x40000c4	          0x488b3f	                    mov rdi, qword [rdi]	       170	am.c	FUNCTION_5	CALL_1
0x40000c7	      0xe800000000	                          call 0x40000cc	       170	am.c	FUNCTION_5	CALL_1
0x40000cc	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       171	am.c	FUNCTION_5	CALL_2
0x40000d0	      0xe800000000	                          call 0x40000d5	       171	am.c	FUNCTION_5	CALL_2
0x40000d5	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       172	am.c	FUNCTION_5	CALL_3
0x40000d9	      0xe800000000	                          call 0x40000de	       172	am.c	FUNCTION_5	CALL_3
0x40000de	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       173	am.c	FUNCTION_5	CALL_4
0x40000e2	      0xe800000000	                          call 0x40000e7	       173	am.c	FUNCTION_5	CALL_4
0x40000e7	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       174	am.c	FUNCTION_5	CALL_5
0x40000eb	      0xe800000000	                          call 0x40000f0	       174	am.c	FUNCTION_5	CALL_5
0x40000f0	        0x488d7b70	                   lea rdi, [rbx + 0x70]	       175	am.c	FUNCTION_5	CALL_6
0x40000f4	              0x5b	                                 pop rbx	       176	am.c	FUNCTION_5
0x40000f5	      0xe900000000	                           jmp 0x40000fa	       175	am.c	FUNCTION_5	CALL_6
