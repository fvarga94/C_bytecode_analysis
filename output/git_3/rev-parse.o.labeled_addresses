show_default	ELSE,0:IF,2:FOR,0:DO,0:SWITCH,0:WHILE,0:functions,0:CALL,2	32
0x40002d0	              0x55	                                push rbp	       180	rev-parse.c	FUNCTION_6
0x40002d1	              0x53	                                push rbx	       180	rev-parse.c	FUNCTION_6
0x40002d2	            0x31ed	                            xor ebp, ebp	       192	rev-parse.c	FUNCTION_6
0x40002d4	        0x4883ec28	                           sub rsp, 0x28	       180	rev-parse.c	FUNCTION_6
0x40002d8	    0x488b1d000000	            mov rbx, qword [0x040002df] 	       181	rev-parse.c	FUNCTION_6
0x40002df	    0x64488b042528	                mov rax, qword fs:[0x28]	       180	rev-parse.c	FUNCTION_6
0x40002e8	      0x4889442418	             mov qword [rsp + 0x18], rax	       180	rev-parse.c	FUNCTION_6
0x40002ed	            0x31c0	                            xor eax, eax	       180	rev-parse.c	FUNCTION_6
0x40002ef	          0x4885db	                           test rbx, rbx	       183	rev-parse.c	FUNCTION_6	IF_1
0x40002f2	            0x7435	                            je 0x4000329	       183	rev-parse.c	FUNCTION_6	IF_1
0x40002f4	          0x4889e6	                            mov rsi, rsp	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x40002f7	          0x4889df	                            mov rdi, rbx	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x40002fa	    0x48c705000000	               mov qword [0x04000305], 0	       186	rev-parse.c	FUNCTION_6	IF_1
0x4000305	      0xe800000000	                          call 0x400030a	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400030a	            0x85c0	                           test eax, eax	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400030c	            0x751b	                           jne 0x4000329	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400030e	    0xf60500000000	               test byte [0x04000315], 1	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000315	            0x740d	                            je 0x4000324	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000317	          0x4889da	                            mov rdx, rbx	       127	rev-parse.c	FUNCTION_4	IF_1
0x400031a	          0x4889e6	                            mov rsi, rsp	       127	rev-parse.c	FUNCTION_4	IF_1
0x400031d	            0x31ff	                            xor edi, edi	       127	rev-parse.c	FUNCTION_4	IF_1
0x400031f	      0xe8fcfdffff	                call sym.show_rev.part.4	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000324	      0xbd01000000	                              mov ebp, 1	       189	rev-parse.c	FUNCTION_6	IF_1	IF_2
0x4000329	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       193	rev-parse.c	FUNCTION_6
0x400032e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       193	rev-parse.c	FUNCTION_6
0x4000337	            0x89e8	                            mov eax, ebp	       193	rev-parse.c	FUNCTION_6
0x4000339	            0x7507	                           jne 0x4000342	       193	rev-parse.c	FUNCTION_6
0x400033b	        0x4883c428	                           add rsp, 0x28	       193	rev-parse.c	FUNCTION_6
0x400033f	              0x5b	                                 pop rbx	       193	rev-parse.c	FUNCTION_6
0x4000340	              0x5d	                                 pop rbp	       193	rev-parse.c	FUNCTION_6
0x4000341	              0xc3	                                     ret	       193	rev-parse.c	FUNCTION_6
0x4000342	      0xe800000000	                          call 0x4000347	       193	rev-parse.c	FUNCTION_6
die_no_single_rev	ELSE,1:IF,1:FOR,0:DO,0:SWITCH,0:WHILE,0:functions,0:CALL,2	7
0x4000077	               0x0	                      add byte [rax], al	       538	rev-parse.c	FUNCTION_19	IF_1
0x4000079	      0xbf27000000	               add byte [rdi + 0x27], bh	       537	rev-parse.c	FUNCTION_19
0x400007f	      0xe800000000	                          call 0x4000084	       539	rev-parse.c	FUNCTION_19	CALL_1
0x4000084	    0x488b35000000	            mov rsi, qword [0x0400008b] 	       539	rev-parse.c	FUNCTION_19	CALL_1
0x400008b	        0x4883c408	                              add rsp, 8	       541	rev-parse.c	FUNCTION_19	CALL_2
0x400008f	              0xbf	                                 invalid	       541	rev-parse.c	FUNCTION_19	CALL_2
0x4000090	            0x2000	                      and byte [rax], al	       541	rev-parse.c	FUNCTION_19	CALL_2
parseopt_dump	ELSE,3:IF,5:FOR,0:DO,0:SWITCH,0:WHILE,0:functions,0:CALL,6	91
0x40004a0	            0x85d2	                           test edx, edx	       367	rev-parse.c	FUNCTION_14	IF_1
0x40004a2	            0x4154	                                push r12	       365	rev-parse.c	FUNCTION_14
0x40004a4	          0x4989f4	                            mov r12, rsi	       365	rev-parse.c	FUNCTION_14
0x40004a7	              0x55	                                push rbp	       365	rev-parse.c	FUNCTION_14
0x40004a8	          0x4889fd	                            mov rbp, rdi	       365	rev-parse.c	FUNCTION_14
0x40004ab	              0x53	                                push rbx	       365	rev-parse.c	FUNCTION_14
0x40004ac	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       366	rev-parse.c	FUNCTION_14
0x40004b0	     0xf85b2000000	                           jne 0x4000568	       367	rev-parse.c	FUNCTION_14	IF_1
0x40004b6	          0x8b4704	                mov eax, dword [rdi + 4]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004b9	        0x488b5708	                mov rdx, qword [rdi + 8]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004bd	            0x85c0	                           test eax, eax	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004bf	     0xf848b000000	                            je 0x4000550	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004c5	          0x4885d2	                           test rdx, rdx	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004c8	            0x740a	                            je 0x40004d4	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004ca	    0x8b0d00000000	            mov ecx, dword [0x040004d0] 	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004d0	            0x85c9	                           test ecx, ecx	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004d2	            0x757c	                           jne 0x4000550	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004d4	            0x89c2	                            mov edx, eax	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004d6	      0xbe00000000	                              mov esi, 0	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004db	          0x4889df	                            mov rdi, rbx	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004de	            0x31c0	                            xor eax, eax	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004e0	      0xe800000000	                          call 0x40004e5	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x40004e5	          0x4d85e4	                           test r12, r12	       373	rev-parse.c	FUNCTION_14	IF_3
0x40004e8	            0x7459	                            je 0x4000543	       373	rev-parse.c	FUNCTION_14	IF_3
0x40004ea	    0x8b0500000000	            mov eax, dword [0x040004f0] 	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x40004f0	            0x85c0	                           test eax, eax	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x40004f2	     0xf8488000000	                            je 0x4000580	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x40004f8	      0x48837d0800	                  cmp qword [rbp + 8], 0	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x40004fd	            0x7439	                            je 0x4000538	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x40004ff	          0x488b03	                    mov rax, qword [rbx]	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x4000502	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_24
0x4000505	     0xf85ad000000	                           jne 0x40005b8	       141	strbuf.h	FUNCTION_24
0x400050b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000510	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000513	      0xe800000000	                          call 0x4000518	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000518	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_26	CALL_2
0x400051c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_26
0x4000520	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_26
0x4000524	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_26
0x4000528	        0xc604103d	              mov byte [rax + rdx], 0x3d	       229	strbuf.h	FUNCTION_26
0x400052c	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_26
0x4000530	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_26
0x4000534	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_26
0x4000538	          0x4c89e6	                            mov rsi, r12	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x400053b	          0x4889df	                            mov rdi, rbx	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x400053e	      0xe800000000	                          call 0x4000543	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x4000543	              0x5b	                                 pop rbx	       381	rev-parse.c	FUNCTION_14
0x4000544	            0x31c0	                            xor eax, eax	       381	rev-parse.c	FUNCTION_14
0x4000546	              0x5d	                                 pop rbp	       381	rev-parse.c	FUNCTION_14
0x4000547	            0x415c	                                 pop r12	       381	rev-parse.c	FUNCTION_14
0x4000549	              0xc3	                                     ret	       381	rev-parse.c	FUNCTION_14
0x400054a	    0x660f1f440000	                    nop word [rax + rax]	       381	rev-parse.c	FUNCTION_14
0x4000550	      0xbe00000000	                              mov esi, 0	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000555	          0x4889df	                            mov rdi, rbx	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000558	            0x31c0	                            xor eax, eax	       372	rev-parse.c	FUNCTION_14	CALL_3
0x400055a	      0xe800000000	                          call 0x400055f	       372	rev-parse.c	FUNCTION_14	CALL_3
0x400055f	            0xeb84	                           jmp 0x40004e5	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000561	     0xf1f80000000	                         nop dword [rax]	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000568	        0x488b5708	                mov rdx, qword [rdi + 8]	       368	rev-parse.c	FUNCTION_14	CALL_1
0x400056c	      0xbe00000000	                              mov esi, 0	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000571	          0x4889df	                            mov rdi, rbx	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000574	            0x31c0	                            xor eax, eax	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000576	      0xe800000000	                          call 0x400057b	       368	rev-parse.c	FUNCTION_14	CALL_1
0x400057b	      0xe965ffffff	                           jmp 0x40004e5	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000580	          0x488b03	                    mov rax, qword [rbx]	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000583	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_24
0x4000586	            0x7448	                            je 0x40005d0	       141	strbuf.h	FUNCTION_24
0x4000588	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_24
0x400058c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000590	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000593	            0x743b	                            je 0x40005d0	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000595	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_26
0x4000599	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_26
0x400059d	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_26
0x40005a1	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_26
0x40005a5	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_26
0x40005a9	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_26
0x40005ad	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_26
0x40005b1	            0xeb85	                           jmp 0x4000538	       230	strbuf.h	FUNCTION_26
0x40005b3	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_26
0x40005b8	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_24
0x40005bc	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40005c0	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40005c3	     0xf8553ffffff	                           jne 0x400051c	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40005c9	      0xe93dffffff	                           jmp 0x400050b	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40005ce	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40005d0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_26	CALL_2
0x40005d5	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_26	CALL_2
0x40005d8	      0xe800000000	                          call 0x40005dd	       228	strbuf.h	FUNCTION_26	CALL_2
0x40005dd	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_26	CALL_2
0x40005e1	            0xebb2	                           jmp 0x4000595	       228	strbuf.h	FUNCTION_26	CALL_2
anti_reference	ELSE,0:IF,0:FOR,0:DO,0:SWITCH,0:WHILE,0:functions,0:CALL,1	12
0x40002a0	    0xf60500000000	               test byte [0x040002a7], 1	       127	rev-parse.c	FUNCTION_4	IF_1
0x40002a7	            0x7507	                           jne 0x40002b0	       127	rev-parse.c	FUNCTION_4	IF_1
0x40002a9	            0x31c0	                            xor eax, eax	       207	rev-parse.c	FUNCTION_8
0x40002ab	              0xc3	                                     ret	       207	rev-parse.c	FUNCTION_8
0x40002ac	         0xf1f4000	                         nop dword [rax]	       207	rev-parse.c	FUNCTION_8
0x40002b0	        0x4883ec08	                              sub rsp, 8	       204	rev-parse.c	FUNCTION_8
0x40002b4	          0x4889fa	                            mov rdx, rdi	       204	rev-parse.c	FUNCTION_8
0x40002b7	      0xbf01000000	                              mov edi, 1	       204	rev-parse.c	FUNCTION_8
0x40002bc	      0xe85ffeffff	                call sym.show_rev.part.4	       204	rev-parse.c	FUNCTION_8
0x40002c1	            0x31c0	                            xor eax, eax	       207	rev-parse.c	FUNCTION_8
0x40002c3	        0x4883c408	                              add rsp, 8	       207	rev-parse.c	FUNCTION_8
0x40002c7	              0xc3	                                     ret	       207	rev-parse.c	FUNCTION_8
handle_ref_opt	ELSE,1:IF,1:FOR,0:DO,0:SWITCH,0:WHILE,0:functions,0:CALL,3	18
0x4000040	    0x8b0500000000	            mov eax, dword [0x04000046] 	       571	rev-parse.c	FUNCTION_21
0x4000046	            0x85c0	                           test eax, eax	       571	rev-parse.c	FUNCTION_21
0x4000048	     0xf849a000000	                            je 0x40000e8	       572	rev-parse.c	FUNCTION_21	IF_1
0x400004e	              0x55	                                push rbp	       573	rev-parse.c	FUNCTION_21	CALL_1
0x400004f	              0x53	                                push rbx	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4000050	          0x4889fb	                            mov rbx, rdi	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4000053	      0xbf27000000	                           mov edi, 0x27	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4000058	        0x488d6b01	                      lea rbp, [rbx + 1]	       573	rev-parse.c	FUNCTION_21	CALL_1
0x400005c	        0x4883ec08	                              sub rsp, 8	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4000060	    0x488b35000000	            mov rsi, qword [0x04000067] 	       575	rev-parse.c	FUNCTION_21	CALL_2
0x4000067	      0xe800000000	                          call 0x400006c	       575	rev-parse.c	FUNCTION_21	CALL_2
0x400006c	           0xfbe1b	                   movsx ebx, byte [rbx]	       577	rev-parse.c	FUNCTION_21
0x400006f	            0x85db	                           test ebx, ebx	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4000071	            0x7567	                           jne 0x40000da	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4000073	              0x48	                                 invalid	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4000074	              0x8b	                                 invalid	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4000075	              0x35	                                 invalid	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4000076	               0x0	                                 invalid	       576	rev-parse.c	FUNCTION_21	CALL_3
