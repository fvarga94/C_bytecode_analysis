parse_ref_sorting	IF,2:functions,0:SWITCH,0:CALL,4:DO,0:WHILE,0:ELSE,0:FOR,0	57
0x4004ea0	            0x4154	                                push r12	      2321	ref-filter.c	FUNCTION_88
0x4004ea2	              0x55	                                push rbp	      2321	ref-filter.c	FUNCTION_88
0x4004ea3	          0x4989fc	                            mov r12, rdi	      2321	ref-filter.c	FUNCTION_88
0x4004ea6	              0x53	                                push rbx	      2321	ref-filter.c	FUNCTION_88
0x4004ea7	          0x4889f5	                            mov rbp, rsi	      2321	ref-filter.c	FUNCTION_88
0x4004eaa	      0xbf01000000	                              mov edi, 1	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x4004eaf	      0xbe10000000	                           mov esi, 0x10	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x4004eb4	      0xe800000000	                          call 0x4004eb9	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x4004eb9	          0x4889c3	                            mov rbx, rax	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x4004ebc	        0x498b0424	                    mov rax, qword [r12]	      2325	ref-filter.c	FUNCTION_88
0x4004ec0	          0x488903	                    mov qword [rbx], rax	      2325	ref-filter.c	FUNCTION_88
0x4004ec3	        0x49891c24	                    mov qword [r12], rbx	      2326	ref-filter.c	FUNCTION_88
0x4004ec7	        0x807d002d	                    cmp byte [rbp], 0x2d	      2328	ref-filter.c	FUNCTION_88	IF_1
0x4004ecb	            0x7463	                            je 0x4004f30	      2328	ref-filter.c	FUNCTION_88	IF_1
0x4004ecd	          0x4889ef	                            mov rdi, rbp	      2321	ref-filter.c	FUNCTION_88
0x4004ed0	      0xb800000000	                              mov eax, 0	      2321	ref-filter.c	FUNCTION_88
0x4004ed5	            0xeb16	                           jmp 0x4004eed	      2321	ref-filter.c	FUNCTION_88
0x4004ed7	    0x660f1f840000	                    nop word [rax + rax]	      2321	ref-filter.c	FUNCTION_88
0x4004ee0	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004ee4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004ee8	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004eeb	            0x751b	                           jne 0x4004f08	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004eed	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004ef0	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004ef2	            0x75ec	                           jne 0x4004ee0	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004ef4	        0x804b0c04	                  or byte [rbx + 0xc], 4	      2334	ref-filter.c	FUNCTION_88	IF_2
0x4004ef8	      0xe823deffff	             call sym.parse_sorting_atom	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4004efd	          0x894308	                mov dword [rbx + 8], eax	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4004f00	              0x5b	                                 pop rbx	      2336	ref-filter.c	FUNCTION_88
0x4004f01	              0x5d	                                 pop rbp	      2336	ref-filter.c	FUNCTION_88
0x4004f02	            0x415c	                                 pop r12	      2336	ref-filter.c	FUNCTION_88
0x4004f04	              0xc3	                                     ret	      2336	ref-filter.c	FUNCTION_88
0x4004f05	           0xf1f00	                         nop dword [rax]	      2336	ref-filter.c	FUNCTION_88
0x4004f08	          0x4889ef	                            mov rdi, rbp	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004f0b	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004f10	            0xeb13	                           jmp 0x4004f25	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004f12	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004f18	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004f1c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004f20	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004f23	            0x751b	                           jne 0x4004f40	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004f25	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004f28	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004f2a	            0x75ec	                           jne 0x4004f18	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004f2c	            0xebc6	                           jmp 0x4004ef4	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004f2e	            0x6690	                                     nop	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004f30	        0x804b0c01	                  or byte [rbx + 0xc], 1	      2329	ref-filter.c	FUNCTION_88	IF_1
0x4004f34	        0x4883c501	                              add rbp, 1	      2330	ref-filter.c	FUNCTION_88	IF_1
0x4004f38	            0xeb93	                           jmp 0x4004ecd	      2330	ref-filter.c	FUNCTION_88	IF_1
0x4004f3a	    0x660f1f440000	                    nop word [rax + rax]	      2330	ref-filter.c	FUNCTION_88	IF_1
0x4004f40	          0x4889ef	                            mov rdi, rbp	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004f43	      0xe8d8ddffff	             call sym.parse_sorting_atom	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4004f48	          0x894308	                mov dword [rbx + 8], eax	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4004f4b	              0x5b	                                 pop rbx	      2336	ref-filter.c	FUNCTION_88
0x4004f4c	              0x5d	                                 pop rbp	      2336	ref-filter.c	FUNCTION_88
0x4004f4d	            0x415c	                                 pop r12	      2336	ref-filter.c	FUNCTION_88
0x4004f4f	              0xc3	                                     ret	      2336	ref-filter.c	FUNCTION_88
push_to_contains_stack	IF,0:functions,0:SWITCH,0:CALL,0:DO,0:WHILE,0:ELSE,0:FOR,0	49
0x4000040	              0x55	                                push rbp	      1690	ref-filter.c	FUNCTION_61
0x4000041	              0x53	                                push rbx	      1690	ref-filter.c	FUNCTION_61
0x4000042	          0x4889fd	                            mov rbp, rdi	      1690	ref-filter.c	FUNCTION_61
0x4000045	          0x4889f3	                            mov rbx, rsi	      1690	ref-filter.c	FUNCTION_61
0x4000048	        0x4883ec08	                              sub rsp, 8	      1690	ref-filter.c	FUNCTION_61
0x400004c	            0x8b0e	                    mov ecx, dword [rsi]	      1691	ref-filter.c	FUNCTION_61
0x400004e	          0x8b4604	                mov eax, dword [rsi + 4]	      1691	ref-filter.c	FUNCTION_61
0x4000051	            0x39c1	                            cmp ecx, eax	      1691	ref-filter.c	FUNCTION_61
0x4000053	            0x7c6b	                            jl 0x40000c0	      1691	ref-filter.c	FUNCTION_61
0x4000055	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1691	ref-filter.c	FUNCTION_61
0x4000059	            0x89c6	                            mov esi, eax	      1691	ref-filter.c	FUNCTION_61
0x400005b	          0xc1ee1f	                           shr esi, 0x1f	      1691	ref-filter.c	FUNCTION_61
0x400005e	             0x1c6	                            add esi, eax	      1691	ref-filter.c	FUNCTION_61
0x4000060	            0xd1fe	                              sar esi, 1	      1691	ref-filter.c	FUNCTION_61
0x4000062	            0x39f1	                            cmp ecx, esi	      1691	ref-filter.c	FUNCTION_61
0x4000064	            0x7d52	                           jge 0x40000b8	      1691	ref-filter.c	FUNCTION_61
0x4000066	          0x897304	                mov dword [rbx + 4], esi	      1691	ref-filter.c	FUNCTION_61
0x4000069	          0x4863d6	                         movsxd rdx, esi	      1691	ref-filter.c	FUNCTION_61
0x400006c	    0x48b8ffffffff	          movabs rax, 0xfffffffffffffff 	       795	git-compat-util.h	FUNCTION_105	IF_1
0x4000076	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_105	IF_1
0x4000079	            0x774b	                            ja 0x40000c6	       795	git-compat-util.h	FUNCTION_105	IF_1
0x400007b	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1691	ref-filter.c	FUNCTION_61
0x400007f	        0x48c1e204	                              shl rdx, 4	      1691	ref-filter.c	FUNCTION_61
0x4000083	          0x4889d6	                            mov rsi, rdx	      1691	ref-filter.c	FUNCTION_61
0x4000086	      0xe800000000	                          call 0x400008b	      1691	ref-filter.c	FUNCTION_61
0x400008b	            0x8b0b	                    mov ecx, dword [rbx]	      1691	ref-filter.c	FUNCTION_61
0x400008d	        0x48894308	                mov qword [rbx + 8], rax	      1691	ref-filter.c	FUNCTION_61
0x4000091	          0x4863d1	                         movsxd rdx, ecx	      1692	ref-filter.c	FUNCTION_61
0x4000094	          0x83c101	                              add ecx, 1	      1693	ref-filter.c	FUNCTION_61
0x4000097	        0x48c1e204	                              shl rdx, 4	      1692	ref-filter.c	FUNCTION_61
0x400009b	          0x4801d0	                            add rax, rdx	      1692	ref-filter.c	FUNCTION_61
0x400009e	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      1693	ref-filter.c	FUNCTION_61
0x40000a2	          0x488928	                    mov qword [rax], rbp	      1692	ref-filter.c	FUNCTION_61
0x40000a5	            0x890b	                    mov dword [rbx], ecx	      1693	ref-filter.c	FUNCTION_61
0x40000a7	        0x48895008	                mov qword [rax + 8], rdx	      1693	ref-filter.c	FUNCTION_61
0x40000ab	        0x4883c408	                              add rsp, 8	      1694	ref-filter.c	FUNCTION_61
0x40000af	              0x5b	                                 pop rbx	      1694	ref-filter.c	FUNCTION_61
0x40000b0	              0x5d	                                 pop rbp	      1694	ref-filter.c	FUNCTION_61
0x40000b1	              0xc3	                                     ret	      1694	ref-filter.c	FUNCTION_61
0x40000b2	    0x660f1f440000	                    nop word [rax + rax]	      1694	ref-filter.c	FUNCTION_61
0x40000b8	          0x8d7101	                      lea esi, [rcx + 1]	      1691	ref-filter.c	FUNCTION_61
0x40000bb	          0x897304	                mov dword [rbx + 4], esi	      1691	ref-filter.c	FUNCTION_61
0x40000be	            0xeba9	                           jmp 0x4000069	      1691	ref-filter.c	FUNCTION_61
0x40000c0	        0x488b4608	                mov rax, qword [rsi + 8]	      1691	ref-filter.c	FUNCTION_61
0x40000c4	            0xebcb	                           jmp 0x4000091	      1691	ref-filter.c	FUNCTION_61
0x40000c6	      0xbe10000000	                           mov esi, 0x10	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x40000cb	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x40000d0	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x40000d2	      0xe800000000	                          call 0x40000d7	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
parse_ref_filter_atom	IF,10:functions,0:SWITCH,0:CALL,13:DO,0:WHILE,0:ELSE,0:FOR,2	192
0x4002a30	            0x4157	                                push r15	       455	ref-filter.c	FUNCTION_16
0x4002a32	            0x4156	                                push r14	       455	ref-filter.c	FUNCTION_16
0x4002a34	            0x4155	                                push r13	       455	ref-filter.c	FUNCTION_16
0x4002a36	            0x4154	                                push r12	       455	ref-filter.c	FUNCTION_16
0x4002a38	          0x4989f5	                            mov r13, rsi	       455	ref-filter.c	FUNCTION_16
0x4002a3b	              0x55	                                push rbp	       455	ref-filter.c	FUNCTION_16
0x4002a3c	              0x53	                                push rbx	       455	ref-filter.c	FUNCTION_16
0x4002a3d	        0x4883ec38	                           sub rsp, 0x38	       455	ref-filter.c	FUNCTION_16
0x4002a41	          0x803e2a	                    cmp byte [rsi], 0x2a	       461	ref-filter.c	FUNCTION_16	IF_1
0x4002a44	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       455	ref-filter.c	FUNCTION_16
0x4002a49	      0x4889542410	             mov qword [rsp + 0x10], rdx	       455	ref-filter.c	FUNCTION_16
0x4002a4e	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       455	ref-filter.c	FUNCTION_16
0x4002a53	     0xf8537020000	                           jne 0x4002c90	       461	ref-filter.c	FUNCTION_16	IF_1
0x4002a59	          0x4839d6	                            cmp rsi, rdx	       461	ref-filter.c	FUNCTION_16	IF_1
0x4002a5c	     0xf832e020000	                           jae 0x4002c90	       461	ref-filter.c	FUNCTION_16	IF_1
0x4002a62	        0x488d4601	                      lea rax, [rsi + 1]	       462	ref-filter.c	FUNCTION_16	IF_1
0x4002a66	        0x48890424	                    mov qword [rsp], rax	       462	ref-filter.c	FUNCTION_16	IF_1
0x4002a6a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       463	ref-filter.c	FUNCTION_16	IF_2
0x4002a6f	        0x48390424	                    cmp qword [rsp], rax	       463	ref-filter.c	FUNCTION_16	IF_2
0x4002a73	     0xf832a020000	                           jae 0x4002ca3	       463	ref-filter.c	FUNCTION_16	IF_2
0x4002a79	    0x448b25000000	           mov r12d, dword [0x04002a80] 	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002a80	          0x4989c7	                            mov r15, rax	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002a83	            0x31db	                            xor ebx, ebx	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002a85	          0x4d29ef	                            sub r15, r13	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002a88	    0x488b2d000000	            mov rbp, qword [0x04002a8f] 	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002a8f	          0x4585e4	                         test r12d, r12d	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002a92	            0x7f18	                            jg 0x4002aac	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002a94	            0xeb4a	                           jmp 0x4002ae0	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002a96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002aa0	          0x83c301	                              add ebx, 1	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002aa3	        0x4883c560	                           add rbp, 0x60	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002aa7	          0x4439e3	                           cmp ebx, r12d	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002aaa	            0x7434	                            je 0x4002ae0	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4002aac	        0x4c8b7500	                    mov r14, qword [rbp]	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x4002ab0	          0x4c89f7	                            mov rdi, r14	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x4002ab3	      0xe800000000	                          call 0x4002ab8	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x4002ab8	            0x4898	                                    cdqe	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002aba	          0x4c39f8	                            cmp rax, r15	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002abd	            0x75e1	                           jne 0x4002aa0	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002abf	          0x4c89fa	                            mov rdx, r15	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002ac2	          0x4c89ee	                            mov rsi, r13	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002ac5	          0x4c89f7	                            mov rdi, r14	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002ac8	      0xe800000000	                          call 0x4002acd	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002acd	            0x85c0	                           test eax, eax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002acf	            0x75cf	                           jne 0x4002aa0	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002ad1	          0x4189dc	                           mov r12d, ebx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002ad4	      0xe9a3010000	                           jmp 0x4002c7c	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002ad9	     0xf1f80000000	                         nop dword [rax]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4002ae0	        0x4c8b3424	                    mov r14, qword [rsp]	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002ae4	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002ae9	      0xbe3a000000	                           mov esi, 0x3a	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002aee	      0xbd00000000	                              mov ebp, 0	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002af3	          0x4c29f3	                            sub rbx, r14	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002af6	          0x4c89f7	                            mov rdi, r14	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002af9	          0x4889da	                            mov rdx, rbx	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002afc	      0xe800000000	                          call 0x4002b01	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002b01	          0x4989c7	                            mov r15, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002b04	      0x4889442420	             mov qword [rsp + 0x20], rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002b09	          0x4d29f7	                            sub r15, r14	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002b0c	          0x4885c0	                           test rax, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4002b0f	    0x41be00000000	                             mov r14d, 0	       481	ref-filter.c	FUNCTION_16
0x4002b15	        0x4c0f44fb	                          cmove r15, rbx	       481	ref-filter.c	FUNCTION_16
0x4002b19	      0xb807000000	                              mov eax, 7	       481	ref-filter.c	FUNCTION_16
0x4002b1e	            0x31db	                            xor ebx, ebx	       481	ref-filter.c	FUNCTION_16
0x4002b20	          0x4963cf	                        movsxd rcx, r15d	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b23	      0x48894c2408	                mov qword [rsp + 8], rcx	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b28	            0xeb22	                           jmp 0x4002b4c	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b2a	    0x660f1f440000	                    nop word [rax + rax]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b30	          0x83c301	                              add ebx, 1	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4002b33	          0x83fb27	                           cmp ebx, 0x27	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4002b36	     0xf8474010000	                            je 0x4002cb0	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4002b3c	        0x4c8b7500	                    mov r14, qword [rbp]	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4002b40	        0x4883c518	                           add rbp, 0x18	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4002b44	          0x4c89f7	                            mov rdi, r14	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4002b47	      0xe800000000	                          call 0x4002b4c	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4002b4c	          0x4139c7	                           cmp r15d, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b4f	            0x75df	                           jne 0x4002b30	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b51	      0x488b542408	                mov rdx, qword [rsp + 8]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b56	        0x488b3424	                    mov rsi, qword [rsp]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b5a	          0x4c89f7	                            mov rdi, r14	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b5d	      0xe800000000	                          call 0x4002b62	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b62	            0x85c0	                           test eax, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b64	            0x75ca	                           jne 0x4002b30	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4002b66	      0x418d542401	                      lea edx, [r12 + 1]	       496	ref-filter.c	FUNCTION_16
0x4002b6b	    0x48b8aaaaaaaa	           movabs rax, 0x2aaaaaaaaaaaaaa	       795	git-compat-util.h	FUNCTION_105	IF_1
0x4002b75	    0x891500000000	            mov dword [0x04002b7b], edx 	       496	ref-filter.c	FUNCTION_16
0x4002b7b	          0x4863d2	                         movsxd rdx, edx	       497	ref-filter.c	FUNCTION_16
0x4002b7e	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_105	IF_1
0x4002b81	     0xf8781010000	                            ja 0x4002d08	       795	git-compat-util.h	FUNCTION_105	IF_1
0x4002b87	        0x4c8d3c52	                  lea r15, [rdx + rdx*2]	       798	git-compat-util.h	FUNCTION_105
0x4002b8b	    0x488b3d000000	            mov rdi, qword [0x04002b92] 	       497	ref-filter.c	FUNCTION_16
0x4002b92	          0x4863db	                         movsxd rbx, ebx	       499	ref-filter.c	FUNCTION_16
0x4002b95	        0x49c1e705	                              shl r15, 5	       798	git-compat-util.h	FUNCTION_105
0x4002b99	          0x4c89fe	                            mov rsi, r15	       497	ref-filter.c	FUNCTION_16
0x4002b9c	        0x4983ef60	                           sub r15, 0x60	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4002ba0	      0xe800000000	                          call 0x4002ba5	       497	ref-filter.c	FUNCTION_16
0x4002ba5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4002baa	        0x4a8d2c38	                    lea rbp, [rax + r15]	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4002bae	          0x4c89ef	                            mov rdi, r13	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4002bb1	    0x488905000000	            mov qword [0x04002bb8], rax 	       497	ref-filter.c	FUNCTION_16
0x4002bb8	          0x4c29ee	                            sub rsi, r13	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4002bbb	      0xe800000000	                          call 0x4002bc0	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4002bc0	        0x48894500	                    mov qword [rbp], rax	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4002bc4	        0x488d045b	                  lea rax, [rbx + rbx*2]	       499	ref-filter.c	FUNCTION_16
0x4002bc8	          0x4c89fe	                            mov rsi, r15	       499	ref-filter.c	FUNCTION_16
0x4002bcb	    0x480335000000	             add rsi, qword [0x04002bd2]	       499	ref-filter.c	FUNCTION_16
0x4002bd2	    0x8b04c5000000	                  mov eax, dword [rax*8]	       499	ref-filter.c	FUNCTION_16
0x4002bd9	          0x894608	                mov dword [rsi + 8], eax	       499	ref-filter.c	FUNCTION_16
0x4002bdc	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       500	ref-filter.c	FUNCTION_16	IF_6
0x4002be1	          0x4885c0	                           test rax, rax	       500	ref-filter.c	FUNCTION_16	IF_6
0x4002be4	            0x741f	                            je 0x4002c05	       500	ref-filter.c	FUNCTION_16	IF_6
0x4002be6	          0x488b16	                    mov rdx, qword [rsi]	       501	ref-filter.c	FUNCTION_16	IF_6
0x4002be9	          0x4c29e8	                            sub rax, r13	       501	ref-filter.c	FUNCTION_16	IF_6
0x4002bec	      0x488d440201	                lea rax, [rdx + rax + 1]	       501	ref-filter.c	FUNCTION_16	IF_6
0x4002bf1	          0x803800	                       cmp byte [rax], 0	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4002bf4	          0x4889c1	                            mov rcx, rax	       501	ref-filter.c	FUNCTION_16	IF_6
0x4002bf7	      0xb800000000	                              mov eax, 0	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4002bfc	        0x480f45c1	                         cmovne rax, rcx	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4002c00	      0x4889442420	             mov qword [rsp + 0x20], rax	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4002c05	        0x488d7e18	                   lea rdi, [rsi + 0x18]	        90	string3.h	FUNCTION_125	CALL_6
0x4002c09	            0x89f0	                            mov eax, esi	        90	string3.h	FUNCTION_125	CALL_6
0x4002c0b	    0x48c746100000	               mov qword [rsi + 0x10], 0	        90	string3.h	FUNCTION_125	CALL_6
0x4002c13	    0x48c746580000	               mov qword [rsi + 0x58], 0	        90	string3.h	FUNCTION_125	CALL_6
0x4002c1b	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_125	CALL_6
0x4002c1f	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_125	CALL_6
0x4002c21	          0x8d4860	                   lea ecx, [rax + 0x60]	        90	string3.h	FUNCTION_125	CALL_6
0x4002c24	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_125	CALL_6
0x4002c26	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_125	CALL_6
0x4002c29	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_125	CALL_6
0x4002c2c	        0x488d045b	                  lea rax, [rbx + rbx*2]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4002c30	    0x488b04c50000	                  mov rax, qword [rax*8]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4002c38	          0x4885c0	                           test rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4002c3b	            0x7419	                            je 0x4002c56	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4002c3d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4002c42	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4002c47	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4002c4c	            0xffd0	                                call rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4002c4e	            0x85c0	                           test eax, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4002c50	     0xf85a7000000	                           jne 0x4002cfd	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4002c56	      0x41807d002a	                    cmp byte [r13], 0x2a	       513	ref-filter.c	FUNCTION_16	IF_9
0x4002c5b	     0xf848d000000	                            je 0x4002cee	       513	ref-filter.c	FUNCTION_16	IF_9
0x4002c61	      0xbf00000000	                              mov edi, 0	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4002c66	      0xb907000000	                              mov ecx, 7	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4002c6b	          0x4c89f6	                            mov rsi, r14	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4002c6e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4002c70	            0x750a	                           jne 0x4002c7c	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4002c72	    0xc70500000000	               mov dword [0x04002c7c], 1	       516	ref-filter.c	FUNCTION_16	IF_10
0x4002c7c	        0x4883c438	                           add rsp, 0x38	       518	ref-filter.c	FUNCTION_16
0x4002c80	          0x4489e0	                           mov eax, r12d	       518	ref-filter.c	FUNCTION_16
0x4002c83	              0x5b	                                 pop rbx	       518	ref-filter.c	FUNCTION_16
0x4002c84	              0x5d	                                 pop rbp	       518	ref-filter.c	FUNCTION_16
0x4002c85	            0x415c	                                 pop r12	       518	ref-filter.c	FUNCTION_16
0x4002c87	            0x415d	                                 pop r13	       518	ref-filter.c	FUNCTION_16
0x4002c89	            0x415e	                                 pop r14	       518	ref-filter.c	FUNCTION_16
0x4002c8b	            0x415f	                                 pop r15	       518	ref-filter.c	FUNCTION_16
0x4002c8d	              0xc3	                                     ret	       518	ref-filter.c	FUNCTION_16
0x4002c8e	            0x6690	                                     nop	       518	ref-filter.c	FUNCTION_16
0x4002c90	        0x4c892c24	                    mov qword [rsp], r13	       518	ref-filter.c	FUNCTION_16
0x4002c94	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       463	ref-filter.c	FUNCTION_16	IF_2
0x4002c99	        0x48390424	                    cmp qword [rsp], rax	       463	ref-filter.c	FUNCTION_16	IF_2
0x4002c9d	     0xf82d6fdffff	                            jb 0x4002a79	       463	ref-filter.c	FUNCTION_16	IF_2
0x4002ca3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4002ca8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4002cad	            0xeb0b	                           jmp 0x4002cba	        54	gettext.h	FUNCTION_120
0x4002caf	              0x90	                                     nop	        54	gettext.h	FUNCTION_120
0x4002cb0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4002cb5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4002cba	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4002cbc	      0xe800000000	                          call 0x4002cc1	        54	gettext.h	FUNCTION_120
0x4002cc1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4002cc6	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4002ccb	        0x4883c438	                           add rsp, 0x38	       518	ref-filter.c	FUNCTION_16
0x4002ccf	              0x5b	                                 pop rbx	       518	ref-filter.c	FUNCTION_16
0x4002cd0	          0x4d89e8	                             mov r8, r13	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4002cd3	          0x4889c2	                            mov rdx, rax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4002cd6	      0xbeffffffff	                     mov esi, 0xffffffff	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4002cdb	              0x5d	                                 pop rbp	       518	ref-filter.c	FUNCTION_16
0x4002cdc	          0x4c29e9	                            sub rcx, r13	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4002cdf	            0x31c0	                            xor eax, eax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4002ce1	            0x415c	                                 pop r12	       518	ref-filter.c	FUNCTION_16
0x4002ce3	            0x415d	                                 pop r13	       518	ref-filter.c	FUNCTION_16
0x4002ce5	            0x415e	                                 pop r14	       518	ref-filter.c	FUNCTION_16
0x4002ce7	            0x415f	                                 pop r15	       518	ref-filter.c	FUNCTION_16
0x4002ce9	      0xe932e5ffff	    jmp sym.strbuf_addf_ret.constprop.38	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4002cee	    0xc70500000000	               mov dword [0x04002cf8], 1	       514	ref-filter.c	FUNCTION_16	IF_9
0x4002cf8	      0xe964ffffff	                           jmp 0x4002c61	       514	ref-filter.c	FUNCTION_16	IF_9
0x4002cfd	    0x41bcffffffff	                    mov r12d, 0xffffffff	       512	ref-filter.c	FUNCTION_16	IF_8
0x4002d03	      0xe974ffffff	                           jmp 0x4002c7c	       512	ref-filter.c	FUNCTION_16	IF_8
0x4002d08	      0xbe60000000	                           mov esi, 0x60	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x4002d0d	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x4002d12	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x4002d14	      0xe800000000	                          call 0x4002d19	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
contains_test	IF,2:functions,0:SWITCH,0:CALL,3:DO,0:WHILE,0:ELSE,0:FOR,0	48
0x4000b20	            0x4156	                                push r14	      1671	ref-filter.c	FUNCTION_60
0x4000b22	            0x4155	                                push r13	      1671	ref-filter.c	FUNCTION_60
0x4000b24	          0x4989fd	                            mov r13, rdi	      1671	ref-filter.c	FUNCTION_60
0x4000b27	            0x4154	                                push r12	      1671	ref-filter.c	FUNCTION_60
0x4000b29	              0x55	                                push rbp	      1671	ref-filter.c	FUNCTION_60
0x4000b2a	              0x53	                                push rbx	      1671	ref-filter.c	FUNCTION_60
0x4000b2b	          0x4889f3	                            mov rbx, rsi	      1671	ref-filter.c	FUNCTION_60
0x4000b2e	          0x8b7720	            mov esi, dword [rdi + 0x20] 	      1632	ref-filter.c	CALL_1
0x4000b31	          0x4889d7	                            mov rdi, rdx	      1632	ref-filter.c	CALL_1
0x4000b34	      0xe817ffffff	call sym.contains_cache_at_peek.isra.13.constprop.33	      1632	ref-filter.c	CALL_1
0x4000b39	          0x448b20	                   mov r12d, dword [rax]	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4000b3c	          0x4585e4	                         test r12d, r12d	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4000b3f	            0x753d	                           jne 0x4000b7e	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4000b41	          0x4885db	                           test rbx, rbx	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000b44	            0x744a	                            je 0x4000b90	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000b46	          0x4989c6	                            mov r14, rax	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000b49	        0x498d6d04	                      lea rbp, [r13 + 4]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000b4d	            0xeb0a	                           jmp 0x4000b59	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000b4f	              0x90	                                     nop	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000b50	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000b54	          0x4885db	                           test rbx, rbx	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000b57	            0x7437	                            je 0x4000b90	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000b59	          0x488b03	                    mov rax, qword [rbx]	       975	cache.h	FUNCTION_141	CALL_1
0x4000b5c	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_141	CALL_1
0x4000b61	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_141	CALL_1
0x4000b64	        0x488d7804	                      lea rdi, [rax + 4]	       975	cache.h	FUNCTION_141	CALL_1
0x4000b68	      0xe800000000	                          call 0x4000b6d	       975	cache.h	FUNCTION_141	CALL_1
0x4000b6d	            0x85c0	                           test eax, eax	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4000b6f	            0x75df	                           jne 0x4000b50	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4000b71	    0x41c706020000	                      mov dword [r14], 2	      1680	ref-filter.c	FUNCTION_60	IF_2
0x4000b78	    0x41bc02000000	                             mov r12d, 2	      1681	ref-filter.c	FUNCTION_60	IF_2
0x4000b7e	              0x5b	                                 pop rbx	      1687	ref-filter.c	FUNCTION_60
0x4000b7f	          0x4489e0	                           mov eax, r12d	      1687	ref-filter.c	FUNCTION_60
0x4000b82	              0x5d	                                 pop rbp	      1687	ref-filter.c	FUNCTION_60
0x4000b83	            0x415c	                                 pop r12	      1687	ref-filter.c	FUNCTION_60
0x4000b85	            0x415d	                                 pop r13	      1687	ref-filter.c	FUNCTION_60
0x4000b87	            0x415e	                                 pop r14	      1687	ref-filter.c	FUNCTION_60
0x4000b89	              0xc3	                                     ret	      1687	ref-filter.c	FUNCTION_60
0x4000b8a	    0x660f1f440000	                    nop word [rax + rax]	      1687	ref-filter.c	FUNCTION_60
0x4000b90	          0x4c89ef	                            mov rdi, r13	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4000b93	      0xe800000000	                          call 0x4000b98	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4000b98	              0x5b	                                 pop rbx	      1687	ref-filter.c	FUNCTION_60
0x4000b99	          0x4489e0	                           mov eax, r12d	      1687	ref-filter.c	FUNCTION_60
0x4000b9c	              0x5d	                                 pop rbp	      1687	ref-filter.c	FUNCTION_60
0x4000b9d	            0x415c	                                 pop r12	      1687	ref-filter.c	FUNCTION_60
0x4000b9f	            0x415d	                                 pop r13	      1687	ref-filter.c	FUNCTION_60
0x4000ba1	            0x415e	                                 pop r14	      1687	ref-filter.c	FUNCTION_60
0x4000ba3	              0xc3	                                     ret	      1687	ref-filter.c	FUNCTION_60
trailers_atom_parser	IF,3:functions,0:SWITCH,0:CALL,7:DO,0:WHILE,0:ELSE,2:FOR,1	86
0x4001ac0	            0x4155	                                push r13	       222	ref-filter.c	FUNCTION_8
0x4001ac2	            0x4154	                                push r12	       222	ref-filter.c	FUNCTION_8
0x4001ac4	          0x4989f4	                            mov r12, rsi	       222	ref-filter.c	FUNCTION_8
0x4001ac7	              0x55	                                push rbp	       222	ref-filter.c	FUNCTION_8
0x4001ac8	              0x53	                                push rbx	       222	ref-filter.c	FUNCTION_8
0x4001ac9	        0x4883ec38	                           sub rsp, 0x38	       222	ref-filter.c	FUNCTION_8
0x4001acd	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	ref-filter.c	FUNCTION_8
0x4001ad6	      0x4889442428	             mov qword [rsp + 0x28], rax	       222	ref-filter.c	FUNCTION_8
0x4001adb	            0x31c0	                            xor eax, eax	       222	ref-filter.c	FUNCTION_8
0x4001add	      0x804c241001	                 or byte [rsp + 0x10], 1	       223	ref-filter.c	FUNCTION_8
0x4001ae2	          0x4885d2	                           test rdx, rdx	       226	ref-filter.c	FUNCTION_8	IF_1
0x4001ae5	    0x48c704240000	                      mov qword [rsp], 0	       223	ref-filter.c	FUNCTION_8
0x4001aed	    0xc74424080000	                  mov dword [rsp + 8], 0	       223	ref-filter.c	FUNCTION_8
0x4001af5	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       223	ref-filter.c	FUNCTION_8
0x4001afd	    0x48c744241800	               mov qword [rsp + 0x18], 0	       223	ref-filter.c	FUNCTION_8
0x4001b06	     0xf84fc000000	                            je 0x4001c08	       226	ref-filter.c	FUNCTION_8	IF_1
0x4001b0c	          0x4889d6	                            mov rsi, rdx	       226	ref-filter.c	FUNCTION_8	IF_1
0x4001b0f	          0x4889cd	                            mov rbp, rcx	       226	ref-filter.c	FUNCTION_8	IF_1
0x4001b12	      0xba2c000000	                           mov edx, 0x2c	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4001b17	      0xb9ffffffff	                     mov ecx, 0xffffffff	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4001b1c	          0x4889e7	                            mov rdi, rsp	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4001b1f	          0x4989e5	                            mov r13, rsp	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4001b22	      0xe800000000	                          call 0x4001b27	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4001b27	        0x8b542408	                mov edx, dword [rsp + 8]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b2b	            0x85d2	                           test edx, edx	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b2d	            0x7468	                            je 0x4001b97	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b2f	        0x448d42ff	                      lea r8d, [rdx - 1]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b33	        0x488b0424	                    mov rax, qword [rsp]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b37	    0x41b900000000	                              mov r9d, 0	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b3d	        0x4983c001	                               add r8, 1	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b41	        0x49c1e004	                               shl r8, 4	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b45	          0x4901c0	                             add r8, rax	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b48	            0xeb18	                           jmp 0x4001b62	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b4a	    0x660f1f440000	                    nop word [rax + rax]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b50	        0x4883c010	                           add rax, 0x10	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b54	    0x41c744242401	               mov dword [r12 + 0x24], 1	       231	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2
0x4001b5d	          0x4c39c0	                             cmp rax, r8	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b60	            0x7435	                            je 0x4001b97	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b62	          0x488b18	                    mov rbx, qword [rax]	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b65	      0xb907000000	                              mov ecx, 7	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4001b6a	          0x4c89cf	                             mov rdi, r9	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4001b6d	          0x4889de	                            mov rsi, rbx	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4001b70	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4001b72	            0x74dc	                            je 0x4001b50	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4001b74	      0xbf00000000	                              mov edi, 0	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4001b79	      0xb905000000	                              mov ecx, 5	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4001b7e	          0x4889de	                            mov rsi, rbx	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4001b81	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4001b83	            0x754b	                           jne 0x4001bd0	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4001b85	        0x4883c010	                           add rax, 0x10	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4001b89	    0x41c744241c01	               mov dword [r12 + 0x1c], 1	       233	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3
0x4001b92	          0x4c39c0	                             cmp rax, r8	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b95	            0x75cb	                           jne 0x4001b62	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4001b97	    0x41c744241006	               mov dword [r12 + 0x10], 6	       241	ref-filter.c	FUNCTION_8
0x4001ba0	            0x31f6	                            xor esi, esi	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4001ba2	          0x4c89ef	                            mov rdi, r13	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4001ba5	      0xe800000000	                          call 0x4001baa	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4001baa	            0x31c0	                            xor eax, eax	       243	ref-filter.c	FUNCTION_8
0x4001bac	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       244	ref-filter.c	FUNCTION_8
0x4001bb1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       244	ref-filter.c	FUNCTION_8
0x4001bba	            0x7551	                           jne 0x4001c0d	       244	ref-filter.c	FUNCTION_8
0x4001bbc	        0x4883c438	                           add rsp, 0x38	       244	ref-filter.c	FUNCTION_8
0x4001bc0	              0x5b	                                 pop rbx	       244	ref-filter.c	FUNCTION_8
0x4001bc1	              0x5d	                                 pop rbp	       244	ref-filter.c	FUNCTION_8
0x4001bc2	            0x415c	                                 pop r12	       244	ref-filter.c	FUNCTION_8
0x4001bc4	            0x415d	                                 pop r13	       244	ref-filter.c	FUNCTION_8
0x4001bc6	              0xc3	                                     ret	       244	ref-filter.c	FUNCTION_8
0x4001bc7	    0x660f1f840000	                    nop word [rax + rax]	       244	ref-filter.c	FUNCTION_8
0x4001bd0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4001bd5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4001bda	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4001bdc	      0xe800000000	                          call 0x4001be1	        54	gettext.h	FUNCTION_120
0x4001be1	          0x4889da	                            mov rdx, rbx	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4001be4	          0x4889c6	                            mov rsi, rax	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4001be7	          0x4889ef	                            mov rdi, rbp	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4001bea	            0x31c0	                            xor eax, eax	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4001bec	      0xe800000000	                          call 0x4001bf1	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4001bf1	            0x31f6	                            xor esi, esi	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x4001bf3	          0x4c89ef	                            mov rdi, r13	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x4001bf6	      0xe800000000	                          call 0x4001bfb	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x4001bfb	      0xb8ffffffff	                     mov eax, 0xffffffff	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4001c00	            0xebaa	                           jmp 0x4001bac	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4001c02	    0x660f1f440000	                    nop word [rax + rax]	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4001c08	          0x4989e5	                            mov r13, rsp	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4001c0b	            0xeb8a	                           jmp 0x4001b97	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4001c0d	      0xe800000000	                          call 0x4001c12	       244	ref-filter.c	FUNCTION_8
head_atom_parser	IF,0:functions,0:SWITCH,0:CALL,1:DO,0:WHILE,0:ELSE,0:FOR,0	11
0x40000e0	              0x53	                                push rbx	       375	ref-filter.c	FUNCTION_15
0x40000e1	            0x31c9	                            xor ecx, ecx	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40000e3	          0x4889f3	                            mov rbx, rsi	       375	ref-filter.c	FUNCTION_15
0x40000e6	            0x31d2	                            xor edx, edx	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40000e8	      0xbe01000000	                              mov esi, 1	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40000ed	      0xbf00000000	                              mov edi, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40000f2	      0xe800000000	                          call 0x40000f7	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40000f7	        0x48894310	             mov qword [rbx + 0x10], rax	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40000fb	            0x31c0	                            xor eax, eax	       378	ref-filter.c	FUNCTION_15
0x40000fd	              0x5b	                                 pop rbx	       378	ref-filter.c	FUNCTION_15
0x40000fe	              0xc3	                                     ret	       378	ref-filter.c	FUNCTION_15
fill_remote_ref_details	IF,16:functions,0:SWITCH,0:CALL,15:DO,0:WHILE,0:ELSE,14:FOR,0	139
0x4000640	              0x55	                                push rbp	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4000641	              0x53	                                push rbx	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4000642	          0x4889cd	                            mov rbp, rcx	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4000645	          0x4889fb	                            mov rbx, rdi	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4000648	        0x4883ec18	                           sub rsp, 0x18	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x400064c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4000655	      0x4889442408	                mov qword [rsp + 8], rax	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x400065a	            0x31c0	                            xor eax, eax	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x400065c	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x400065f	            0x85c0	                           test eax, eax	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x4000661	            0x7465	                            je 0x40006c8	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x4000663	          0x83f801	                              cmp eax, 1	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x4000666	          0x4889d7	                            mov rdi, rdx	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x4000669	     0xf84a1000000	                            je 0x4000710	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x400066f	          0x83f802	                              cmp eax, 2	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x4000672	     0xf8418010000	                            je 0x4000790	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x4000678	          0x83f803	                              cmp eax, 3	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x400067b	            0x7463	                            je 0x40006e0	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x400067d	          0x83f804	                              cmp eax, 4	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x4000680	     0xf85f4010000	                           jne 0x400087a	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x4000686	         0xfb67320	           movzx esi, byte [rbx + 0x20] 	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x400068a	      0x488d542404	                      lea rdx, [rsp + 4]	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x400068f	          0x40d0ee	                              shr sil, 1	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4000692	          0x83e601	                              and esi, 1	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4000695	      0xe800000000	                          call 0x400069a	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x400069a	        0x8b542404	                mov edx, dword [rsp + 4]	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x400069e	            0x85d2	                           test edx, edx	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x40006a0	            0x755e	                           jne 0x4000700	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x40006a2	    0x48c745000000	                      mov qword [rbp], 0	      1373	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	ELSE_13
0x40006aa	      0x488b442408	                mov rax, qword [rsp + 8]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x40006af	    0x644833042528	                xor rax, qword fs:[0x28]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x40006b8	     0xf85b7010000	                           jne 0x4000875	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x40006be	        0x4883c418	                           add rsp, 0x18	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x40006c2	              0x5b	                                 pop rbx	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x40006c3	              0x5d	                                 pop rbp	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x40006c4	              0xc3	                                     ret	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x40006c5	           0xf1f00	                         nop dword [rax]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x40006c8	        0x488d7f14	                   lea rdi, [rdi + 0x14]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x40006cc	      0xe81ffeffff	                       call sym.show_ref	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x40006d1	        0x48894500	                    mov qword [rbp], rax	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x40006d5	            0xebd3	                           jmp 0x40006aa	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x40006d7	    0x660f1f840000	                    nop word [rax + rax]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x40006e0	        0xf6432002	               test byte [rbx + 0x20], 2	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x40006e4	      0x488d742404	                      lea rsi, [rsp + 4]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x40006e9	     0xf84e9000000	                            je 0x40007d8	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x40006ef	      0xe800000000	                          call 0x40006f4	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x40006f4	            0xeba4	                           jmp 0x400069a	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x40006f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4000700	          0x4889c7	                            mov rdi, rax	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4000703	      0xe800000000	                          call 0x4000708	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4000708	        0x48894500	                    mov qword [rbp], rax	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x400070c	            0xeb9c	                           jmp 0x40006aa	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x400070e	            0x6690	                                     nop	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4000710	      0x488d542404	                      lea rdx, [rsp + 4]	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4000715	            0x31c9	                            xor ecx, ecx	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4000717	    0x41b801000000	                              mov r8d, 1	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x400071d	          0x4889e6	                            mov rsi, rsp	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4000720	      0xe800000000	                          call 0x4000725	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4000725	            0x85c0	                           test eax, eax	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4000727	     0xf8833010000	                            js 0x4000860	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x400072d	          0x8b3424	                    mov esi, dword [rsp]	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4000730	            0x85f6	                           test esi, esi	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4000732	     0xf84b0000000	                            je 0x40007e8	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4000738	        0x8b542404	                mov edx, dword [rsp + 4]	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x400073c	            0x85d2	                           test edx, edx	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x400073e	     0xf85ec000000	                           jne 0x4000830	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4000744	    0x488b3d000000	            mov rdi, qword [0x0400074b] 	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x400074b	            0x31c0	                            xor eax, eax	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x400074d	      0xe800000000	                          call 0x4000752	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4000752	        0x48894500	                    mov qword [rbp], rax	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4000756	        0xf6432001	               test byte [rbx + 0x20], 1	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x400075a	     0xf854affffff	                           jne 0x40006aa	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4000760	        0x488b5d00	                    mov rbx, qword [rbp]	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4000764	          0x803b00	                       cmp byte [rbx], 0	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4000767	     0xf843dffffff	                            je 0x40006aa	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x400076d	          0x4889de	                            mov rsi, rbx	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4000770	      0xbf00000000	                              mov edi, 0	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4000775	            0x31c0	                            xor eax, eax	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4000777	      0xe800000000	                          call 0x400077c	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x400077c	          0x4889df	                            mov rdi, rbx	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x400077f	        0x48894500	                    mov qword [rbp], rax	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4000783	      0xe800000000	                          call 0x4000788	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x4000788	      0xe91dffffff	                           jmp 0x40006aa	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x400078d	           0xf1f00	                         nop dword [rax]	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x4000790	      0x488d542404	                      lea rdx, [rsp + 4]	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4000795	            0x31c9	                            xor ecx, ecx	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4000797	    0x41b801000000	                              mov r8d, 1	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x400079d	          0x4889e6	                            mov rsi, rsp	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x40007a0	      0xe800000000	                          call 0x40007a5	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x40007a5	            0x85c0	                           test eax, eax	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x40007a7	     0xf88fdfeffff	                            js 0x40006aa	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x40007ad	          0x8b3c24	                    mov edi, dword [rsp]	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007b0	            0x85ff	                           test edi, edi	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007b2	            0x755c	                           jne 0x4000810	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007b4	        0x8b742404	                mov esi, dword [rsp + 4]	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007b8	      0xba00000000	                              mov edx, 0	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007bd	      0xb800000000	                              mov eax, 0	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007c2	            0x85f6	                           test esi, esi	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007c4	        0x480f44c2	                          cmove rax, rdx	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007c8	        0x48894500	                    mov qword [rbp], rax	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007cc	      0xe9d9feffff	                           jmp 0x40006aa	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007d1	     0xf1f80000000	                         nop dword [rax]	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x40007d8	      0xe800000000	                          call 0x40007dd	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x40007dd	      0xe9b8feffff	                           jmp 0x400069a	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x40007e2	    0x660f1f440000	                    nop word [rax + rax]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x40007e8	        0x8b742404	                mov esi, dword [rsp + 4]	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x40007ec	            0x85f6	                           test esi, esi	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x40007ee	            0x7460	                            je 0x4000850	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x40007f0	    0x488b3d000000	            mov rdi, qword [0x040007f7] 	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x40007f7	            0x31c0	                            xor eax, eax	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x40007f9	      0xe800000000	                          call 0x40007fe	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x40007fe	        0x48894500	                    mov qword [rbp], rax	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4000802	      0xe94fffffff	                           jmp 0x4000756	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4000807	    0x660f1f840000	                    nop word [rax + rax]	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4000810	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000814	      0xba00000000	                              mov edx, 0	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000819	      0xb800000000	                              mov eax, 0	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x400081e	            0x85c9	                           test ecx, ecx	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000820	        0x480f44c2	                          cmove rax, rdx	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000824	        0x48894500	                    mov qword [rbp], rax	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000828	      0xe97dfeffff	                           jmp 0x40006aa	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x400082d	           0xf1f00	                         nop dword [rax]	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000830	    0x488b3d000000	            mov rdi, qword [0x04000837] 	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4000837	            0x31c0	                            xor eax, eax	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4000839	      0xe800000000	                          call 0x400083e	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x400083e	        0x48894500	                    mov qword [rbp], rax	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4000842	      0xe90fffffff	                           jmp 0x4000756	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4000847	    0x660f1f840000	                    nop word [rax + rax]	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4000850	    0x48c745000000	                      mov qword [rbp], 0	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4000858	      0xe9f9feffff	                           jmp 0x4000756	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x400085d	           0xf1f00	                         nop dword [rax]	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4000860	    0x488b3d000000	            mov rdi, qword [0x04000867] 	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4000867	      0xe800000000	                          call 0x400086c	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x400086c	        0x48894500	                    mov qword [rbp], rax	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4000870	      0xe9e1feffff	                           jmp 0x4000756	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4000875	      0xe800000000	                          call 0x400087a	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x400087a	      0xbf00000000	                              mov edi, 0	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x400087f	            0x31c0	                            xor eax, eax	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x4000881	      0xe800000000	                          call 0x4000886	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
ref_filter_handler	IF,9:functions,0:SWITCH,0:CALL,11:DO,0:WHILE,0:ELSE,0:FOR,0	267
0x4004410	            0x4157	                                push r15	      1976	ref-filter.c	FUNCTION_74
0x4004412	            0x4156	                                push r14	      1976	ref-filter.c	FUNCTION_74
0x4004414	            0x4155	                                push r13	      1976	ref-filter.c	FUNCTION_74
0x4004416	            0x4154	                                push r12	      1976	ref-filter.c	FUNCTION_74
0x4004418	              0x55	                                push rbp	      1976	ref-filter.c	FUNCTION_74
0x4004419	              0x53	                                push rbx	      1976	ref-filter.c	FUNCTION_74
0x400441a	          0x4889fd	                            mov rbp, rdi	      1976	ref-filter.c	FUNCTION_74
0x400441d	        0x4883ec28	                           sub rsp, 0x28	      1976	ref-filter.c	FUNCTION_74
0x4004421	          0xf6c208	                              test dl, 8	      1983	ref-filter.c	FUNCTION_74	IF_1
0x4004424	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1976	ref-filter.c	FUNCTION_74
0x4004429	      0x48894c2408	                mov qword [rsp + 8], rcx	      1976	ref-filter.c	FUNCTION_74
0x400442e	     0xf85d4000000	                           jne 0x4004508	      1983	ref-filter.c	FUNCTION_74	IF_1
0x4004434	          0xf6c204	                              test dl, 4	      1988	ref-filter.c	FUNCTION_74	IF_2
0x4004437	          0x4189d4	                           mov r12d, edx	      1988	ref-filter.c	FUNCTION_74	IF_2
0x400443a	     0xf8540020000	                           jne 0x4004680	      1988	ref-filter.c	FUNCTION_74	IF_2
0x4004440	      0x488b442408	                mov rax, qword [rsp + 8]	      1978	ref-filter.c	FUNCTION_74
0x4004445	        0x4c8b6808	                mov r13, qword [rax + 8]	      1978	ref-filter.c	FUNCTION_74
0x4004449	        0x418b4544	            mov eax, dword [r13 + 0x44] 	      1978	ref-filter.c	FUNCTION_74
0x400444d	          0x8d50fe	                      lea edx, [rax - 2]	      1965	ref-filter.c	FUNCTION_73	IF_1
0x4004450	          0x83e2fd	                     and edx, 0xfffffffd	      1965	ref-filter.c	FUNCTION_73	IF_1
0x4004453	            0x743b	                            je 0x4004490	      1965	ref-filter.c	FUNCTION_73	IF_1
0x4004455	          0x83f808	                              cmp eax, 8	      1965	ref-filter.c	FUNCTION_73	IF_1
0x4004458	            0x7436	                            je 0x4004490	      1965	ref-filter.c	FUNCTION_73	IF_1
0x400445a	      0xb905000000	                              mov ecx, 5	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x400445f	      0xbf00000000	                              mov edi, 0	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004464	          0x4889ee	                            mov rsi, rbp	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004467	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004469	    0xc74424142000	           mov dword [rsp + 0x14], 0x20 	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004471	           0xf97c1	                                 seta cl	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004474	           0xf92c2	                                 setb dl	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004477	            0x38d1	                              cmp cl, dl	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004479	            0x7419	                            je 0x4004494	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x400447b	          0x4889ef	                            mov rdi, rbp	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x400447e	      0xe88dbeffff	   call sym.ref_kind_from_refname.part.3	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004483	        0x89442414	             mov dword [rsp + 0x14], eax	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004487	        0x418b4544	            mov eax, dword [r13 + 0x44] 	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x400448b	            0xeb07	                           jmp 0x4004494	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x400448d	           0xf1f00	                         nop dword [rax]	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004490	        0x89442414	             mov dword [rsp + 0x14], eax	      1967	ref-filter.c	FUNCTION_73	IF_1
0x4004494	        0x85442414	           test dword [rsp + 0x14], eax 	      1995	ref-filter.c	FUNCTION_74	IF_3
0x4004498	            0x7516	                           jne 0x40044b0	      1995	ref-filter.c	FUNCTION_74	IF_3
0x400449a	        0x4883c428	                           add rsp, 0x28	      2034	ref-filter.c	FUNCTION_74
0x400449e	            0x31c0	                            xor eax, eax	      2034	ref-filter.c	FUNCTION_74
0x40044a0	              0x5b	                                 pop rbx	      2034	ref-filter.c	FUNCTION_74
0x40044a1	              0x5d	                                 pop rbp	      2034	ref-filter.c	FUNCTION_74
0x40044a2	            0x415c	                                 pop r12	      2034	ref-filter.c	FUNCTION_74
0x40044a4	            0x415d	                                 pop r13	      2034	ref-filter.c	FUNCTION_74
0x40044a6	            0x415e	                                 pop r14	      2034	ref-filter.c	FUNCTION_74
0x40044a8	            0x415f	                                 pop r15	      2034	ref-filter.c	FUNCTION_74
0x40044aa	              0xc3	                                     ret	      2034	ref-filter.c	FUNCTION_74
0x40044ab	       0xf1f440000	                   nop dword [rax + rax]	      2034	ref-filter.c	FUNCTION_74
0x40044b0	        0x498b5d00	                    mov rbx, qword [r13]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x40044b4	          0x4c8b33	                    mov r14, qword [rbx]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x40044b7	          0x4d85f6	                           test r14, r14	      1809	ref-filter.c	FUNCTION_66	IF_1
0x40044ba	     0xf8493000000	                            je 0x4004553	      1809	ref-filter.c	FUNCTION_66	IF_1
0x40044c0	      0x410fb64540	           movzx eax, byte [r13 + 0x40] 	      1811	ref-filter.c	FUNCTION_66	IF_2
0x40044c5	            0xa802	                              test al, 2	      1811	ref-filter.c	FUNCTION_66	IF_2
0x40044c7	     0xf8533010000	                           jne 0x4004600	      1811	ref-filter.c	FUNCTION_66	IF_2
0x40044cd	          0xc0e802	                               shr al, 2	      1754	ref-filter.c	FUNCTION_64
0x40044d0	          0x4989ef	                            mov r15, rbp	      1754	ref-filter.c	FUNCTION_64
0x40044d3	          0x83e001	                              and eax, 1	      1754	ref-filter.c	FUNCTION_64
0x40044d6	        0x89442410	             mov dword [rsp + 0x10], eax	      1754	ref-filter.c	FUNCTION_64
0x40044da	      0xb800000000	                              mov eax, 0	      1754	ref-filter.c	FUNCTION_64
0x40044df	            0xeb19	                           jmp 0x40044fa	      1754	ref-filter.c	FUNCTION_64
0x40044e1	     0xf1f80000000	                         nop dword [rax]	      1754	ref-filter.c	FUNCTION_64
0x40044e8	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40044ec	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40044f0	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40044f4	     0xf8596010000	                           jne 0x4004690	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40044fa	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40044fd	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40044ff	            0x75e7	                           jne 0x40044e8	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004501	            0xeb3d	                           jmp 0x4004540	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004503	       0xf1f440000	                   nop dword [rax + rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004508	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x400450d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4004512	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4004514	      0xe800000000	                          call 0x4004519	        54	gettext.h	FUNCTION_120
0x4004519	          0x4889ee	                            mov rsi, rbp	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x400451c	          0x4889c7	                            mov rdi, rax	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x400451f	            0x31c0	                            xor eax, eax	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x4004521	      0xe800000000	                          call 0x4004526	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x4004526	      0xe96fffffff	                           jmp 0x400449a	      1990	ref-filter.c	FUNCTION_74	IF_2
0x400452b	       0xf1f440000	                   nop dword [rax + rax]	      1990	ref-filter.c	FUNCTION_74	IF_2
0x4004530	        0x4883c308	                              add rbx, 8	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x4004534	          0x4c8b33	                    mov r14, qword [rbx]	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x4004537	          0x4d85f6	                           test r14, r14	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x400453a	     0xf845affffff	                            je 0x400449a	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x4004540	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x4004544	          0x4c89fe	                            mov rsi, r15	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x4004547	          0x4c89f7	                            mov rdi, r14	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x400454a	      0xe800000000	                          call 0x400454f	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x400454f	            0x85c0	                           test eax, eax	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x4004551	            0x75dd	                           jne 0x4004530	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x4004553	        0x418b4510	            mov eax, dword [r13 + 0x10] 	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004557	            0x85c0	                           test eax, eax	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004559	     0xf8511020000	                           jne 0x4004770	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x400455f	      0x49837d3800	               cmp qword [r13 + 0x38], 0	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004564	     0xf84d6010000	                            je 0x4004740	      2009	ref-filter.c	FUNCTION_74	IF_6
0x400456a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x400456f	      0xbe01000000	                              mov esi, 1	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4004574	      0xe800000000	                          call 0x4004579	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4004579	          0x4885c0	                           test rax, rax	      2011	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x400457c	          0x4889c3	                            mov rbx, rax	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x400457f	     0xf8415ffffff	                            je 0x400449a	      2011	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x4004585	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4004589	          0x4885f6	                           test rsi, rsi	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x400458c	            0x741b	                            je 0x40045a9	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x400458e	      0x41f6454001	               test byte [r13 + 0x40], 1	      1740	ref-filter.c	FUNCTION_63	IF_1
0x4004593	     0xf8507020000	                           jne 0x40047a0	      1740	ref-filter.c	FUNCTION_63	IF_1
0x4004599	          0x4889c7	                            mov rdi, rax	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x400459c	      0xe800000000	                          call 0x40045a1	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x40045a1	            0x85c0	                           test eax, eax	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x40045a3	     0xf84f1feffff	                            je 0x400449a	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x40045a9	        0x498b7528	            mov rsi, qword [r13 + 0x28] 	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x40045ad	          0x4885f6	                           test rsi, rsi	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x40045b0	            0x741b	                            je 0x40045cd	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x40045b2	      0x41f6454001	               test byte [r13 + 0x40], 1	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40045b7	     0xf855b010000	                           jne 0x4004718	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40045bd	          0x4889df	                            mov rdi, rbx	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x40045c0	      0xe800000000	                          call 0x40045c5	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x40045c5	            0x85c0	                           test eax, eax	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x40045c7	     0xf85cdfeffff	                           jne 0x400449a	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x40045cd	      0x488b442408	                mov rax, qword [rsp + 8]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x40045d2	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x40045d7	          0x4889ee	                            mov rsi, rbp	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x40045da	          0x488b38	                    mov rdi, qword [rax]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x40045dd	      0xe800000000	                          call 0x40045e2	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x40045e2	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      2031	ref-filter.c	FUNCTION_74
0x40045e6	        0x48895828	             mov qword [rax + 0x28], rbx	      2029	ref-filter.c	FUNCTION_74
0x40045ea	        0x44896014	            mov dword [rax + 0x14], r12d	      2030	ref-filter.c	FUNCTION_74
0x40045ee	          0x894818	             mov dword [rax + 0x18], ecx	      2031	ref-filter.c	FUNCTION_74
0x40045f1	      0xe9a4feffff	                           jmp 0x400449a	      2033	ref-filter.c	FUNCTION_74
0x40045f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2033	ref-filter.c	FUNCTION_74
0x4004600	          0x4889ef	                            mov rdi, rbp	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x4004603	      0xe800000000	                          call 0x4004608	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x4004608	        0x89442410	             mov dword [rsp + 0x10], eax	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x400460c	            0xeb12	                           jmp 0x4004620	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x400460e	            0x6690	                                     nop	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x4004610	        0x4883c308	                              add rbx, 8	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x4004614	          0x4c8b33	                    mov r14, qword [rbx]	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x4004617	          0x4d85f6	                           test r14, r14	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x400461a	     0xf847afeffff	                            je 0x400449a	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x4004620	          0x4c89f7	                            mov rdi, r14	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x4004623	      0xe800000000	                          call 0x4004628	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x4004628	        0x39442410	            cmp dword [rsp + 0x10], eax 	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400462c	            0x7c37	                            jl 0x4004665	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400462e	          0x4c63f8	                         movsxd r15, eax	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004631	          0x4c89f6	                            mov rsi, r14	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004634	          0x4889ef	                            mov rdi, rbp	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004637	          0x4c89fa	                            mov rdx, r15	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x400463a	      0xe800000000	                          call 0x400463f	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x400463f	            0x85c0	                           test eax, eax	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004641	            0x7522	                           jne 0x4004665	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004643	    0x420fb6443d00	             movzx eax, byte [rbp + r15]	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004649	            0x84c0	                             test al, al	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x400464b	     0xf8402ffffff	                            je 0x4004553	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004651	            0x3c2f	                            cmp al, 0x2f	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004653	     0xf84fafeffff	                            je 0x4004553	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004659	    0x43807c3eff2f	         cmp byte [r14 + r15 - 1], 0x2f 	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400465f	     0xf84eefeffff	                            je 0x4004553	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004665	      0xba02000000	                              mov edx, 2	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x400466a	          0x4889ee	                            mov rsi, rbp	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x400466d	          0x4c89f7	                            mov rdi, r14	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004670	      0xe800000000	                          call 0x4004675	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004675	            0x85c0	                           test eax, eax	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004677	            0x7597	                           jne 0x4004610	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004679	      0xe9d5feffff	                           jmp 0x4004553	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x400467e	            0x6690	                                     nop	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004680	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4004685	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x400468a	      0xe983feffff	                           jmp 0x4004512	        54	gettext.h	FUNCTION_120
0x400468f	              0x90	                                     nop	        54	gettext.h	FUNCTION_120
0x4004690	          0x4989ef	                            mov r15, rbp	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004693	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004698	     0xf1f84000000	                   nop dword [rax + rax]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046a0	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40046a3	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40046a5	     0xf8495feffff	                            je 0x4004540	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40046ab	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046af	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046b3	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046b7	            0x74e7	                            je 0x40046a0	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046b9	          0x4989ef	                            mov r15, rbp	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046bc	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046c1	     0xf1f80000000	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046c8	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40046cb	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40046cd	     0xf846dfeffff	                            je 0x4004540	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40046d3	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046d7	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046db	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046df	            0x74e7	                            je 0x40046c8	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046e1	          0x4989ef	                            mov r15, rbp	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046e4	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046e9	     0xf1f80000000	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046f0	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40046f3	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40046f5	     0xf8445feffff	                            je 0x4004540	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40046fb	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40046ff	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004703	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004707	            0x74e7	                            je 0x40046f0	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004709	          0x4989ef	                            mov r15, rbp	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400470c	      0xe92ffeffff	                           jmp 0x4004540	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004711	     0xf1f80000000	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004718	      0x488b442408	                mov rax, qword [rsp + 8]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x400471d	          0x4889df	                            mov rdi, rbx	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004720	        0x488d5028	                   lea rdx, [rax + 0x28]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4004724	      0xe887c4ffff	              call sym.contains_tag_algo	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004729	          0x83f802	                              cmp eax, 2	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x400472c	           0xf94c0	                                 sete al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x400472f	           0xfb6c0	                           movzx eax, al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004732	      0xe98efeffff	                           jmp 0x40045c5	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004737	    0x660f1f840000	                    nop word [rax + rax]	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004740	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004745	     0xf851ffeffff	                           jne 0x400456a	      2009	ref-filter.c	FUNCTION_74	IF_6
0x400474b	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004750	     0xf8514feffff	                           jne 0x400456a	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004756	        0x418b5550	            mov edx, dword [r13 + 0x50] 	      2009	ref-filter.c	FUNCTION_74	IF_6
0x400475a	            0x85d2	                           test edx, edx	      2009	ref-filter.c	FUNCTION_74	IF_6
0x400475c	     0xf8508feffff	                           jne 0x400456a	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004762	            0x31db	                            xor ebx, ebx	      1980	ref-filter.c	FUNCTION_74
0x4004764	      0xe964feffff	                           jmp 0x40045cd	      1980	ref-filter.c	FUNCTION_74
0x4004769	     0xf1f80000000	                         nop dword [rax]	      1980	ref-filter.c	FUNCTION_74
0x4004770	        0x498d5d08	                      lea rbx, [r13 + 8]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004774	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4004779	          0x4889df	                            mov rdi, rbx	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x400477c	      0xe800000000	                          call 0x4004781	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4004781	            0x85c0	                           test eax, eax	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4004783	            0x783a	                            js 0x40047bf	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4004785	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x400478b	     0xf85cefdffff	                           jne 0x400455f	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004791	      0xe904fdffff	                           jmp 0x400449a	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004796	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40047a0	      0x488b442408	                mov rax, qword [rsp + 8]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x40047a5	          0x4889df	                            mov rdi, rbx	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40047a8	        0x488d5010	                   lea rdx, [rax + 0x10]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x40047ac	      0xe8ffc3ffff	              call sym.contains_tag_algo	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40047b1	          0x83f802	                              cmp eax, 2	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40047b4	           0xf94c0	                                 sete al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40047b7	           0xfb6c0	                           movzx eax, al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40047ba	      0xe9e2fdffff	                           jmp 0x40045a1	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40047bf	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x40047c4	      0xe800000000	                          call 0x40047c9	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x40047c9	          0x4885c0	                           test rax, rax	      1901	ref-filter.c	FUNCTION_69	IF_2
0x40047cc	            0x7432	                            je 0x4004800	      1901	ref-filter.c	FUNCTION_69	IF_2
0x40047ce	           0xfb610	                   movzx edx, byte [rax]	      1903	ref-filter.c	FUNCTION_69	IF_3
0x40047d1	          0x83e20e	                            and edx, 0xe	      1903	ref-filter.c	FUNCTION_69	IF_3
0x40047d4	          0x80fa08	                               cmp dl, 8	      1903	ref-filter.c	FUNCTION_69	IF_3
0x40047d7	     0xf85bdfcffff	                           jne 0x400449a	      1903	ref-filter.c	FUNCTION_69	IF_3
0x40047dd	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1904	ref-filter.c	FUNCTION_69	IF_3
0x40047e1	        0x4883c604	                              add rsi, 4	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x40047e5	     0xf84affcffff	                            je 0x400449a	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x40047eb	          0x4889df	                            mov rdi, rbx	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x40047ee	      0xe800000000	                          call 0x40047f3	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x40047f3	            0x85c0	                           test eax, eax	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x40047f5	     0xf8964fdffff	                           jns 0x400455f	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x40047fb	      0xe99afcffff	                           jmp 0x400449a	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004800	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4004805	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4004807	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x400480c	      0xe800000000	                          call 0x4004811	        54	gettext.h	FUNCTION_120
0x4004811	          0x4889ee	                            mov rsi, rbp	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4004814	          0x4889c7	                            mov rdi, rax	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4004817	            0x31c0	                            xor eax, eax	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4004819	      0xe800000000	                          call 0x400481e	      1902	ref-filter.c	FUNCTION_69	CALL_4
if_atom_handler	IF,0:functions,0:SWITCH,0:CALL,2:DO,0:WHILE,0:ELSE,0:FOR,0	24
0x4000220	            0x4154	                                push r12	       638	ref-filter.c	FUNCTION_24
0x4000222	              0x55	                                push rbp	       638	ref-filter.c	FUNCTION_24
0x4000223	          0x4989fc	                            mov r12, rdi	       638	ref-filter.c	FUNCTION_24
0x4000226	              0x53	                                push rbx	       638	ref-filter.c	FUNCTION_24
0x4000227	          0x4889f5	                            mov rbp, rsi	       638	ref-filter.c	FUNCTION_24
0x400022a	      0xbf18000000	                           mov edi, 0x18	       640	ref-filter.c	FUNCTION_24	CALL_1
0x400022f	      0xbe01000000	                              mov esi, 1	       640	ref-filter.c	FUNCTION_24	CALL_1
0x4000234	      0xe800000000	                          call 0x4000239	       640	ref-filter.c	FUNCTION_24	CALL_1
0x4000239	          0x4889c3	                            mov rbx, rax	       640	ref-filter.c	FUNCTION_24	CALL_1
0x400023c	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       642	ref-filter.c	FUNCTION_24
0x4000241	        0x488d7d08	                      lea rdi, [rbp + 8]	       645	ref-filter.c	FUNCTION_24	CALL_2
0x4000245	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       642	ref-filter.c	FUNCTION_24
0x4000249	        0x48895308	                mov qword [rbx + 8], rdx	       642	ref-filter.c	FUNCTION_24
0x400024d	          0x8b4010	            mov eax, dword [rax + 0x10] 	       643	ref-filter.c	FUNCTION_24
0x4000250	            0x8903	                    mov dword [rbx], eax	       643	ref-filter.c	FUNCTION_24
0x4000252	      0xe889ffffff	             call sym.push_stack_element	       645	ref-filter.c	FUNCTION_24	CALL_2
0x4000257	        0x488b4508	                mov rax, qword [rbp + 8]	       646	ref-filter.c	FUNCTION_24
0x400025b	    0x48c740200000	               mov qword [rax + 0x20], 0	       647	ref-filter.c	FUNCTION_24
0x4000263	        0x48895828	             mov qword [rax + 0x28], rbx	       648	ref-filter.c	FUNCTION_24
0x4000267	            0x31c0	                            xor eax, eax	       650	ref-filter.c	FUNCTION_24
0x4000269	              0x5b	                                 pop rbx	       650	ref-filter.c	FUNCTION_24
0x400026a	              0x5d	                                 pop rbp	       650	ref-filter.c	FUNCTION_24
0x400026b	            0x415c	                                 pop r12	       650	ref-filter.c	FUNCTION_24
0x400026d	              0xc3	                                     ret	       650	ref-filter.c	FUNCTION_24
ref_array_clear	IF,0:functions,0:SWITCH,0:CALL,1:DO,0:WHILE,0:ELSE,0:FOR,1	33
0x4004820	            0x4155	                                push r13	      2045	ref-filter.c	FUNCTION_76
0x4004822	            0x4154	                                push r12	      2045	ref-filter.c	FUNCTION_76
0x4004824	          0x4989fd	                            mov r13, rdi	      2045	ref-filter.c	FUNCTION_76
0x4004827	              0x55	                                push rbp	      2045	ref-filter.c	FUNCTION_76
0x4004828	              0x53	                                push rbx	      2045	ref-filter.c	FUNCTION_76
0x4004829	            0x31ed	                            xor ebp, ebp	      2045	ref-filter.c	FUNCTION_76
0x400482b	            0x31db	                            xor ebx, ebx	      2045	ref-filter.c	FUNCTION_76
0x400482d	        0x4883ec08	                              sub rsp, 8	      2045	ref-filter.c	FUNCTION_76
0x4004831	            0x8b07	                    mov eax, dword [rdi]	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004833	            0x85c0	                           test eax, eax	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004835	            0x7e30	                           jle 0x4004867	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004837	    0x660f1f840000	                    nop word [rax + rax]	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004840	        0x498b4508	                mov rax, qword [r13 + 8]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4004844	          0x83c301	                              add ebx, 1	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004847	        0x4c8b2428	              mov r12, qword [rax + rbp]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x400484b	        0x4883c508	                              add rbp, 8	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x400484f	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4004854	      0xe800000000	                          call 0x4004859	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4004859	          0x4c89e7	                            mov rdi, r12	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x400485c	      0xe800000000	                          call 0x4004861	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4004861	        0x41395d00	                    cmp dword [r13], ebx	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004865	            0x7fd9	                            jg 0x4004840	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004867	        0x498b7d08	                mov rdi, qword [r13 + 8]	      2050	ref-filter.c	FUNCTION_76
0x400486b	      0xe800000000	                          call 0x4004870	      2050	ref-filter.c	FUNCTION_76
0x4004870	    0x49c745080000	                  mov qword [r13 + 8], 0	      2050	ref-filter.c	FUNCTION_76
0x4004878	    0x41c745040000	                  mov dword [r13 + 4], 0	      2051	ref-filter.c	FUNCTION_76
0x4004880	    0x41c745000000	                      mov dword [r13], 0	      2051	ref-filter.c	FUNCTION_76
0x4004888	        0x4883c408	                              add rsp, 8	      2052	ref-filter.c	FUNCTION_76
0x400488c	              0x5b	                                 pop rbx	      2052	ref-filter.c	FUNCTION_76
0x400488d	              0x5d	                                 pop rbp	      2052	ref-filter.c	FUNCTION_76
0x400488e	            0x415c	                                 pop r12	      2052	ref-filter.c	FUNCTION_76
0x4004890	            0x415d	                                 pop r13	      2052	ref-filter.c	FUNCTION_76
0x4004892	              0xc3	                                     ret	      2052	ref-filter.c	FUNCTION_76
end_align_handler	IF,0:functions,0:SWITCH,0:CALL,3:DO,0:WHILE,0:ELSE,0:FOR,0	39
0x4001780	              0x53	                                push rbx	       579	ref-filter.c	FUNCTION_21
0x4001781	        0x4883ec40	                           sub rsp, 0x40	       579	ref-filter.c	FUNCTION_21
0x4001785	          0x488b1f	                    mov rbx, qword [rdi]	       580	ref-filter.c	FUNCTION_21
0x4001788	    0x64488b042528	                mov rax, qword fs:[0x28]	       579	ref-filter.c	FUNCTION_21
0x4001791	      0x4889442438	             mov qword [rsp + 0x38], rax	       579	ref-filter.c	FUNCTION_21
0x4001796	            0x31c0	                            xor eax, eax	       579	ref-filter.c	FUNCTION_21
0x4001798	          0x4889e7	                            mov rdi, rsp	       584	ref-filter.c	FUNCTION_21	CALL_1
0x400179b	    0x48c704240000	                      mov qword [rsp], 0	       582	ref-filter.c	FUNCTION_21
0x40017a3	    0x48c744240800	                  mov qword [rsp + 8], 0	       582	ref-filter.c	FUNCTION_21
0x40017ac	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       581	ref-filter.c	FUNCTION_21
0x40017b0	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	       584	ref-filter.c	FUNCTION_21	CALL_1
0x40017b4	    0x48c744241000	               mov qword [rsp + 0x10], 0	       582	ref-filter.c	FUNCTION_21
0x40017bd	          0x8b5004	                mov edx, dword [rax + 4]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x40017c0	            0x8b30	                    mov esi, dword [rax]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x40017c2	      0xe800000000	                          call 0x40017c7	       584	ref-filter.c	FUNCTION_21	CALL_1
0x40017c7	        0x488b3c24	                    mov rdi, qword [rsp]	        53	string3.h	FUNCTION_122	CALL_3
0x40017cb	        0x488b7308	                mov rsi, qword [rbx + 8]	        53	string3.h	FUNCTION_122	CALL_3
0x40017cf	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_122	CALL_3
0x40017d3	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_122	CALL_3
0x40017d7	        0x48897b08	                mov qword [rbx + 8], rdi	        53	string3.h	FUNCTION_122	CALL_3
0x40017db	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        53	string3.h	FUNCTION_122	CALL_3
0x40017e0	      0x4889742420	             mov qword [rsp + 0x20], rsi	        53	string3.h	FUNCTION_122	CALL_3
0x40017e5	      0x48894c2428	             mov qword [rsp + 0x28], rcx	        53	string3.h	FUNCTION_122	CALL_3
0x40017ea	      0x4889542430	             mov qword [rsp + 0x30], rdx	        53	string3.h	FUNCTION_122	CALL_3
0x40017ef	        0x48897b10	             mov qword [rbx + 0x10], rdi	        53	string3.h	FUNCTION_122	CALL_3
0x40017f3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_122	CALL_3
0x40017f8	        0x48897b18	             mov qword [rbx + 0x18], rdi	        53	string3.h	FUNCTION_122	CALL_3
0x40017fc	          0x4889e7	                            mov rdi, rsp	       586	ref-filter.c	FUNCTION_21	CALL_3
0x40017ff	        0x48893424	                    mov qword [rsp], rsi	        53	string3.h	FUNCTION_122	CALL_3
0x4001803	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_122	CALL_3
0x4001808	      0x4889542410	             mov qword [rsp + 0x10], rdx	        53	string3.h	FUNCTION_122	CALL_3
0x400180d	      0xe800000000	                          call 0x4001812	       586	ref-filter.c	FUNCTION_21	CALL_3
0x4001812	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       587	ref-filter.c	FUNCTION_21
0x4001817	    0x644833042528	                xor rax, qword fs:[0x28]	       587	ref-filter.c	FUNCTION_21
0x4001820	            0x7506	                           jne 0x4001828	       587	ref-filter.c	FUNCTION_21
0x4001822	        0x4883c440	                           add rsp, 0x40	       587	ref-filter.c	FUNCTION_21
0x4001826	              0x5b	                                 pop rbx	       587	ref-filter.c	FUNCTION_21
0x4001827	              0xc3	                                     ret	       587	ref-filter.c	FUNCTION_21
0x4001828	      0xe800000000	                          call 0x400182d	       587	ref-filter.c	FUNCTION_21
align_atom_parser	IF,8:functions,0:SWITCH,0:CALL,22:DO,0:WHILE,0:ELSE,4:FOR,1	179
0x4003230	            0x4157	                                push r15	       308	ref-filter.c	FUNCTION_13
0x4003232	            0x4156	                                push r14	       308	ref-filter.c	FUNCTION_13
0x4003234	            0x4155	                                push r13	       308	ref-filter.c	FUNCTION_13
0x4003236	            0x4154	                                push r12	       308	ref-filter.c	FUNCTION_13
0x4003238	              0x55	                                push rbp	       308	ref-filter.c	FUNCTION_13
0x4003239	              0x53	                                push rbx	       308	ref-filter.c	FUNCTION_13
0x400323a	        0x4883ec58	                           sub rsp, 0x58	       308	ref-filter.c	FUNCTION_13
0x400323e	    0x64488b042528	                mov rax, qword fs:[0x28]	       308	ref-filter.c	FUNCTION_13
0x4003247	      0x4889442448	             mov qword [rsp + 0x48], rax	       308	ref-filter.c	FUNCTION_13
0x400324c	            0x31c0	                            xor eax, eax	       308	ref-filter.c	FUNCTION_13
0x400324e	      0x804c243001	                 or byte [rsp + 0x30], 1	       310	ref-filter.c	FUNCTION_13
0x4003253	          0x4885d2	                           test rdx, rdx	       314	ref-filter.c	FUNCTION_13	IF_1
0x4003256	      0x48894c2408	                mov qword [rsp + 8], rcx	       308	ref-filter.c	FUNCTION_13
0x400325b	    0x48c744242000	               mov qword [rsp + 0x20], 0	       310	ref-filter.c	FUNCTION_13
0x4003264	    0xc74424280000	               mov dword [rsp + 0x28], 0	       310	ref-filter.c	FUNCTION_13
0x400326c	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       310	ref-filter.c	FUNCTION_13
0x4003274	    0x48c744243800	               mov qword [rsp + 0x38], 0	       310	ref-filter.c	FUNCTION_13
0x400327d	     0xf841e020000	                            je 0x40034a1	       314	ref-filter.c	FUNCTION_13	IF_1
0x4003283	          0x4989f6	                            mov r14, rsi	       314	ref-filter.c	FUNCTION_13	IF_1
0x4003286	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       319	ref-filter.c	FUNCTION_13	CALL_3
0x400328b	          0x4889d6	                            mov rsi, rdx	       319	ref-filter.c	FUNCTION_13	CALL_3
0x400328e	    0x41c746100000	               mov dword [r14 + 0x10], 0	       317	ref-filter.c	FUNCTION_13
0x4003296	      0xb9ffffffff	                     mov ecx, 0xffffffff	       319	ref-filter.c	FUNCTION_13	CALL_3
0x400329b	      0xba2c000000	                           mov edx, 0x2c	       319	ref-filter.c	FUNCTION_13	CALL_3
0x40032a0	      0xe800000000	                          call 0x40032a5	       319	ref-filter.c	FUNCTION_13	CALL_3
0x40032a5	        0x8b742428	            mov esi, dword [rsp + 0x28] 	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40032a9	            0x31ed	                            xor ebp, ebp	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40032ab	          0x4531e4	                          xor r12d, r12d	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40032ae	    0x41bdffffffff	                    mov r13d, 0xffffffff	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40032b4	            0x85f6	                           test esi, esi	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40032b6	     0xf840c020000	                            je 0x40034c8	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40032bc	         0xf1f4000	                         nop dword [rax]	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40032c0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       321	ref-filter.c	FUNCTION_13	FOR_1
0x40032c5	        0x4c8b3c28	              mov r15, qword [rax + rbp]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x40032c9	      0xb800000000	                              mov eax, 0	       321	ref-filter.c	FUNCTION_13	FOR_1
0x40032ce	          0x4c89fb	                            mov rbx, r15	       321	ref-filter.c	FUNCTION_13	FOR_1
0x40032d1	            0xeb12	                           jmp 0x40032e5	       321	ref-filter.c	FUNCTION_13	FOR_1
0x40032d3	       0xf1f440000	                   nop dword [rax + rax]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x40032d8	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40032dc	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40032e0	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40032e3	            0x754b	                           jne 0x4003330	       488	git-compat-util.h	FUNCTION_97	DO_1
0x40032e5	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40032e8	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40032ea	            0x75ec	                           jne 0x40032d8	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x40032ec	          0x4889df	                            mov rdi, rbx	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x40032ef	      0xe8bccfffff	           call sym.parse_align_position	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x40032f4	            0x85c0	                           test eax, eax	       326	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x40032f6	     0xf888f010000	                            js 0x400348b	       326	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x40032fc	        0x41894610	             mov dword [r14 + 0x10], eax	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x4003300	        0x4183c401	                             add r12d, 1	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4003304	        0x4883c510	                           add rbp, 0x10	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4003308	      0x4439642428	           cmp dword [rsp + 0x28], r12d 	       320	ref-filter.c	FUNCTION_13	FOR_1
0x400330d	            0x77b1	                            ja 0x40032c0	       320	ref-filter.c	FUNCTION_13	FOR_1
0x400330f	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       349	ref-filter.c	FUNCTION_13	IF_8
0x4003313	     0xf84af010000	                            je 0x40034c8	       349	ref-filter.c	FUNCTION_13	IF_8
0x4003319	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       354	ref-filter.c	FUNCTION_13	CALL_22
0x400331e	        0x45896e14	            mov dword [r14 + 0x14], r13d	       353	ref-filter.c	FUNCTION_13
0x4003322	            0x31f6	                            xor esi, esi	       354	ref-filter.c	FUNCTION_13	CALL_22
0x4003324	      0xe800000000	                          call 0x4003329	       354	ref-filter.c	FUNCTION_13	CALL_22
0x4003329	            0x31c0	                            xor eax, eax	       355	ref-filter.c	FUNCTION_13
0x400332b	      0xe93c010000	                           jmp 0x400346c	       355	ref-filter.c	FUNCTION_13
0x4003330	          0x4c89fb	                            mov rbx, r15	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4003333	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003338	            0xeb13	                           jmp 0x400334d	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400333a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003340	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003344	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003348	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400334b	            0x7573	                           jne 0x40033c0	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400334d	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003350	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003352	            0x75ec	                           jne 0x4003340	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003354	      0xe800000000	                          call 0x4003359	      1014	git-compat-util.h	FUNCTION_113
0x4003359	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_113	IF_1	CALL_1
0x400335e	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_113
0x4003364	          0x4889df	                            mov rdi, rbx	      1016	git-compat-util.h	FUNCTION_113	IF_1	CALL_1
0x4003367	          0x4989c5	                            mov r13, rax	      1014	git-compat-util.h	FUNCTION_113
0x400336a	      0xe800000000	                          call 0x400336f	      1016	git-compat-util.h	FUNCTION_113	IF_1	CALL_1
0x400336f	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_113	IF_1	CALL_1
0x4003372	     0xf85c0000000	                           jne 0x4003438	      1016	git-compat-util.h	FUNCTION_113	IF_1	CALL_1
0x4003378	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1018	git-compat-util.h	FUNCTION_113	CALL_2
0x400337d	      0xba0a000000	                            mov edx, 0xa	      1018	git-compat-util.h	FUNCTION_113	CALL_2
0x4003382	          0x4889df	                            mov rdi, rbx	      1018	git-compat-util.h	FUNCTION_113	CALL_2
0x4003385	      0xe800000000	                          call 0x400338a	      1018	git-compat-util.h	FUNCTION_113	CALL_2
0x400338a	        0x418b4d00	                    mov ecx, dword [r13]	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x400338e	            0x85c9	                           test ecx, ecx	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x4003390	     0xf85a2000000	                           jne 0x4003438	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x4003396	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x400339b	          0x803a00	                       cmp byte [rdx], 0	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x400339e	     0xf8594000000	                           jne 0x4003438	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x40033a4	          0x4839d3	                            cmp rbx, rdx	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x40033a7	     0xf848b000000	                            je 0x4003438	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x40033ad	            0x89c2	                            mov edx, eax	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x40033af	          0x4839d0	                            cmp rax, rdx	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x40033b2	     0xf8580000000	                           jne 0x4003438	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x40033b8	          0x4189c5	                           mov r13d, eax	      1021	git-compat-util.h	FUNCTION_113
0x40033bb	      0xe940ffffff	                           jmp 0x4003300	      1021	git-compat-util.h	FUNCTION_113
0x40033c0	      0xe800000000	                          call 0x40033c5	      1014	git-compat-util.h	FUNCTION_113
0x40033c5	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_113	IF_1	CALL_1
0x40033ca	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_113
0x40033d0	          0x4c89ff	                            mov rdi, r15	      1016	git-compat-util.h	FUNCTION_113	IF_1	CALL_1
0x40033d3	          0x4889c3	                            mov rbx, rax	      1014	git-compat-util.h	FUNCTION_113
0x40033d6	      0xe800000000	                          call 0x40033db	      1016	git-compat-util.h	FUNCTION_113	IF_1	CALL_1
0x40033db	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_113	IF_1	CALL_1
0x40033de	            0x752e	                           jne 0x400340e	      1016	git-compat-util.h	FUNCTION_113	IF_1	CALL_1
0x40033e0	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1018	git-compat-util.h	FUNCTION_113	CALL_2
0x40033e5	      0xba0a000000	                            mov edx, 0xa	      1018	git-compat-util.h	FUNCTION_113	CALL_2
0x40033ea	          0x4c89ff	                            mov rdi, r15	      1018	git-compat-util.h	FUNCTION_113	CALL_2
0x40033ed	      0xe800000000	                          call 0x40033f2	      1018	git-compat-util.h	FUNCTION_113	CALL_2
0x40033f2	            0x8b13	                    mov edx, dword [rbx]	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x40033f4	            0x85d2	                           test edx, edx	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x40033f6	            0x7516	                           jne 0x400340e	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x40033f8	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x40033fd	          0x803a00	                       cmp byte [rdx], 0	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x4003400	            0x750c	                           jne 0x400340e	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x4003402	          0x4939d7	                            cmp r15, rdx	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x4003405	            0x7407	                            je 0x400340e	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x4003407	            0x89c2	                            mov edx, eax	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x4003409	          0x4839d0	                            cmp rax, rdx	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x400340c	            0x74aa	                            je 0x40033b8	      1019	git-compat-util.h	FUNCTION_113	IF_2
0x400340e	          0x4c89ff	                            mov rdi, r15	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x4003411	      0xe89aceffff	           call sym.parse_align_position	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x4003416	            0x85c0	                           test eax, eax	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x4003418	     0xf89defeffff	                           jns 0x40032fc	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x400341e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4003423	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4003428	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x400342a	      0xe800000000	                          call 0x400342f	        54	gettext.h	FUNCTION_120
0x400342f	          0x4c89fa	                            mov rdx, r15	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4003432	            0xeb18	                           jmp 0x400344c	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4003434	         0xf1f4000	                         nop dword [rax]	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4003438	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x400343d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4003442	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4003444	      0xe800000000	                          call 0x4003449	        54	gettext.h	FUNCTION_120
0x4003449	          0x4889da	                            mov rdx, rbx	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x400344c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4003451	          0x4889c6	                            mov rsi, rax	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4003454	            0x31c0	                            xor eax, eax	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4003456	      0xe800000000	                          call 0x400345b	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x400345b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x4003460	            0x31f6	                            xor esi, esi	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x4003462	      0xe800000000	                          call 0x4003467	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x4003467	      0xb8ffffffff	                     mov eax, 0xffffffff	       345	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4
0x400346c	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       356	ref-filter.c	FUNCTION_13
0x4003471	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       356	ref-filter.c	FUNCTION_13
0x400347a	            0x7564	                           jne 0x40034e0	       356	ref-filter.c	FUNCTION_13
0x400347c	        0x4883c458	                           add rsp, 0x58	       356	ref-filter.c	FUNCTION_13
0x4003480	              0x5b	                                 pop rbx	       356	ref-filter.c	FUNCTION_13
0x4003481	              0x5d	                                 pop rbp	       356	ref-filter.c	FUNCTION_13
0x4003482	            0x415c	                                 pop r12	       356	ref-filter.c	FUNCTION_13
0x4003484	            0x415d	                                 pop r13	       356	ref-filter.c	FUNCTION_13
0x4003486	            0x415e	                                 pop r14	       356	ref-filter.c	FUNCTION_13
0x4003488	            0x415f	                                 pop r15	       356	ref-filter.c	FUNCTION_13
0x400348a	              0xc3	                                     ret	       356	ref-filter.c	FUNCTION_13
0x400348b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4003490	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4003495	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4003497	      0xe800000000	                          call 0x400349c	        54	gettext.h	FUNCTION_120
0x400349c	          0x4889da	                            mov rdx, rbx	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x400349f	            0xebab	                           jmp 0x400344c	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x40034a1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x40034a6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x40034ab	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x40034ad	      0xe800000000	                          call 0x40034b2	        54	gettext.h	FUNCTION_120
0x40034b2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40034b7	          0x4889c2	                            mov rdx, rax	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40034ba	      0xbeffffffff	                     mov esi, 0xffffffff	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40034bf	            0x31c0	                            xor eax, eax	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40034c1	      0xe85addffff	   call sym.strbuf_addf_ret.constprop.38	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40034c6	            0xeba4	                           jmp 0x400346c	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40034c8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x40034cd	            0x31f6	                            xor esi, esi	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x40034cf	      0xe800000000	                          call 0x40034d4	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x40034d4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x40034d9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x40034de	            0xebcb	                           jmp 0x40034ab	        54	gettext.h	FUNCTION_120
0x40034e0	      0xe800000000	                          call 0x40034e5	       356	ref-filter.c	FUNCTION_13
remote_ref_atom_parser	IF,8:functions,0:SWITCH,0:CALL,12:DO,0:WHILE,0:ELSE,5:FOR,1	137
0x40021e0	            0x4157	                                push r15	       157	ref-filter.c	FUNCTION_5
0x40021e2	            0x4156	                                push r14	       157	ref-filter.c	FUNCTION_5
0x40021e4	      0xbf00000000	                              mov edi, 0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40021e9	            0x4155	                                push r13	       157	ref-filter.c	FUNCTION_5
0x40021eb	            0x4154	                                push r12	       157	ref-filter.c	FUNCTION_5
0x40021ed	          0x4989f6	                            mov r14, rsi	       157	ref-filter.c	FUNCTION_5
0x40021f0	              0x55	                                push rbp	       157	ref-filter.c	FUNCTION_5
0x40021f1	              0x53	                                push rbx	       157	ref-filter.c	FUNCTION_5
0x40021f2	          0x4989cd	                            mov r13, rcx	       157	ref-filter.c	FUNCTION_5
0x40021f5	      0xb905000000	                              mov ecx, 5	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40021fa	          0x4989d4	                            mov r12, rdx	       157	ref-filter.c	FUNCTION_5
0x40021fd	        0x4883ec48	                           sub rsp, 0x48	       157	ref-filter.c	FUNCTION_5
0x4002201	    0x64488b042528	                mov rax, qword fs:[0x28]	       157	ref-filter.c	FUNCTION_5
0x400220a	      0x4889442438	             mov qword [rsp + 0x38], rax	       157	ref-filter.c	FUNCTION_5
0x400220f	            0x31c0	                            xor eax, eax	       157	ref-filter.c	FUNCTION_5
0x4002211	      0x804c242001	                 or byte [rsp + 0x20], 1	       158	ref-filter.c	FUNCTION_5
0x4002216	          0x488b06	                    mov rax, qword [rsi]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4002219	    0x48c744241000	               mov qword [rsp + 0x10], 0	       158	ref-filter.c	FUNCTION_5
0x4002222	    0xc74424180000	               mov dword [rsp + 0x18], 0	       158	ref-filter.c	FUNCTION_5
0x400222a	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       158	ref-filter.c	FUNCTION_5
0x4002232	    0x48c744242800	               mov qword [rsp + 0x28], 0	       158	ref-filter.c	FUNCTION_5
0x400223b	          0x4889c6	                            mov rsi, rax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x400223e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4002240	     0xf858a010000	                           jne 0x40023d0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4002246	      0x41804e2002	                 or byte [r14 + 0x20], 2	       162	ref-filter.c	FUNCTION_5	IF_1
0x400224b	          0x4d85e4	                           test r12, r12	       164	ref-filter.c	FUNCTION_5	IF_2
0x400224e	     0xf849a010000	                            je 0x40023ee	       164	ref-filter.c	FUNCTION_5	IF_2
0x4002254	      0x41806620fe	             and byte [r14 + 0x20], 0xfe	       170	ref-filter.c	FUNCTION_5
0x4002259	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       171	ref-filter.c	FUNCTION_5	CALL_4
0x400225e	      0xb9ffffffff	                     mov ecx, 0xffffffff	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4002263	      0xba2c000000	                           mov edx, 0x2c	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4002268	          0x4c89e6	                            mov rsi, r12	       171	ref-filter.c	FUNCTION_5	CALL_4
0x400226b	            0x31db	                            xor ebx, ebx	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400226d	            0x31ed	                            xor ebp, ebp	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400226f	    0x41bf00000000	                             mov r15d, 0	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4002275	      0xe800000000	                          call 0x400227a	       171	ref-filter.c	FUNCTION_5	CALL_4
0x400227a	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400227e	        0x4d8d4614	                    lea r8, [r14 + 0x14]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4002282	            0x85c0	                           test eax, eax	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4002284	            0x751f	                           jne 0x40022a5	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4002286	            0xeb5b	                           jmp 0x40022e3	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4002288	     0xf1f84000000	                   nop dword [rax + rax]	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4002290	    0x41c746100100	               mov dword [r14 + 0x10], 1	       177	ref-filter.c	FUNCTION_5	FOR_1	IF_3
0x4002298	          0x83c501	                              add ebp, 1	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400229b	        0x4883c310	                           add rbx, 0x10	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400229f	        0x396c2418	            cmp dword [rsp + 0x18], ebp 	       173	ref-filter.c	FUNCTION_5	FOR_1
0x40022a3	            0x763e	                           jbe 0x40022e3	       173	ref-filter.c	FUNCTION_5	FOR_1
0x40022a5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       174	ref-filter.c	FUNCTION_5	FOR_1
0x40022aa	      0xb906000000	                              mov ecx, 6	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x40022af	          0x4c89ff	                            mov rdi, r15	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x40022b2	        0x488b0418	              mov rax, qword [rax + rbx]	       174	ref-filter.c	FUNCTION_5	FOR_1
0x40022b6	          0x4889c6	                            mov rsi, rax	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x40022b9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x40022bb	            0x74d3	                            je 0x4002290	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x40022bd	      0xbf00000000	                              mov edi, 0	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022c2	      0xb90b000000	                            mov ecx, 0xb	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022c7	          0x4889c6	                            mov rsi, rax	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022ca	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022cc	            0x754a	                           jne 0x4002318	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022ce	          0x83c501	                              add ebp, 1	       173	ref-filter.c	FUNCTION_5	FOR_1
0x40022d1	        0x4883c310	                           add rbx, 0x10	       173	ref-filter.c	FUNCTION_5	FOR_1
0x40022d5	        0x396c2418	            cmp dword [rsp + 0x18], ebp 	       173	ref-filter.c	FUNCTION_5	FOR_1
0x40022d9	    0x41c746100200	               mov dword [r14 + 0x10], 2	       179	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x40022e1	            0x77c2	                            ja 0x40022a5	       173	ref-filter.c	FUNCTION_5	FOR_1
0x40022e3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       198	ref-filter.c	FUNCTION_5	CALL_12
0x40022e8	            0x31f6	                            xor esi, esi	       198	ref-filter.c	FUNCTION_5	CALL_12
0x40022ea	      0xe800000000	                          call 0x40022ef	       198	ref-filter.c	FUNCTION_5	CALL_12
0x40022ef	            0x31c0	                            xor eax, eax	       199	ref-filter.c	FUNCTION_5
0x40022f1	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       200	ref-filter.c	FUNCTION_5
0x40022f6	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       200	ref-filter.c	FUNCTION_5
0x40022ff	     0xf8507010000	                           jne 0x400240c	       200	ref-filter.c	FUNCTION_5
0x4002305	        0x4883c448	                           add rsp, 0x48	       200	ref-filter.c	FUNCTION_5
0x4002309	              0x5b	                                 pop rbx	       200	ref-filter.c	FUNCTION_5
0x400230a	              0x5d	                                 pop rbp	       200	ref-filter.c	FUNCTION_5
0x400230b	            0x415c	                                 pop r12	       200	ref-filter.c	FUNCTION_5
0x400230d	            0x415d	                                 pop r13	       200	ref-filter.c	FUNCTION_5
0x400230f	            0x415e	                                 pop r14	       200	ref-filter.c	FUNCTION_5
0x4002311	            0x415f	                                 pop r15	       200	ref-filter.c	FUNCTION_5
0x4002313	              0xc3	                                     ret	       200	ref-filter.c	FUNCTION_5
0x4002314	         0xf1f4000	                         nop dword [rax]	       200	ref-filter.c	FUNCTION_5
0x4002318	      0xbf00000000	                              mov edi, 0	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x400231d	      0xb90a000000	                            mov ecx, 0xa	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4002322	          0x4889c6	                            mov rsi, rax	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4002325	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4002327	            0x750f	                           jne 0x4002338	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4002329	      0x41804e2001	                 or byte [r14 + 0x20], 1	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x400232e	      0xe965ffffff	                           jmp 0x4002298	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x4002333	       0xf1f440000	                   nop dword [rax + rax]	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x4002338	      0xbf00000000	                              mov edi, 0	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x400233d	      0xb90b000000	                            mov ecx, 0xb	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4002342	          0x4889c6	                            mov rsi, rax	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4002345	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4002347	            0x7517	                           jne 0x4002360	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4002349	    0x41c746100300	               mov dword [r14 + 0x10], 3	       183	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4002351	      0x41804e2004	                 or byte [r14 + 0x20], 4	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4002356	      0xe93dffffff	                           jmp 0x4002298	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x400235b	       0xf1f440000	                   nop dword [rax + rax]	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4002360	      0xbf00000000	                              mov edi, 0	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4002365	      0xb90a000000	                            mov ecx, 0xa	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x400236a	          0x4889c6	                            mov rsi, rax	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x400236d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x400236f	            0x7517	                           jne 0x4002388	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4002371	    0x41c746100400	               mov dword [r14 + 0x10], 4	       186	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4002379	      0x41804e2004	                 or byte [r14 + 0x20], 4	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x400237e	      0xe915ffffff	                           jmp 0x4002298	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4002383	       0xf1f440000	                   nop dword [rax + rax]	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4002388	          0x498b16	                    mov rdx, qword [r14]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x400238b	          0x4c89c7	                             mov rdi, r8	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x400238e	    0x41c746100000	               mov dword [r14 + 0x10], 0	       189	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5
0x4002396	          0x4c89e9	                            mov rcx, r13	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4002399	          0x4c89e6	                            mov rsi, r12	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x400239c	      0x4c89442408	                 mov qword [rsp + 8], r8	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x40023a1	      0xe8fafbffff	   call sym.refname_atom_parser_internal	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x40023a6	            0x85c0	                           test eax, eax	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x40023a8	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x40023ad	     0xf84e5feffff	                            je 0x4002298	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x40023b3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x40023b8	            0x31f6	                            xor esi, esi	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x40023ba	      0xe800000000	                          call 0x40023bf	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x40023bf	      0xb8ffffffff	                     mov eax, 0xffffffff	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0x40023c4	      0xe928ffffff	                           jmp 0x40022f1	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0x40023c9	     0xf1f80000000	                         nop dword [rax]	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0x40023d0	      0xbe00000000	                              mov esi, 0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40023d5	          0x4889c7	                            mov rdi, rax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40023d8	      0xe800000000	                          call 0x40023dd	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40023dd	            0x85c0	                           test eax, eax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40023df	     0xf8561feffff	                           jne 0x4002246	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40023e5	          0x4d85e4	                           test r12, r12	       164	ref-filter.c	FUNCTION_5	IF_2
0x40023e8	     0xf8566feffff	                           jne 0x4002254	       164	ref-filter.c	FUNCTION_5	IF_2
0x40023ee	          0x498b16	                    mov rdx, qword [r14]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x40023f1	        0x498d7e14	                   lea rdi, [r14 + 0x14]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x40023f5	    0x41c746100000	               mov dword [r14 + 0x10], 0	       165	ref-filter.c	FUNCTION_5	IF_2
0x40023fd	          0x4c89e9	                            mov rcx, r13	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4002400	            0x31f6	                            xor esi, esi	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4002402	      0xe899fbffff	   call sym.refname_atom_parser_internal	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4002407	      0xe9e5feffff	                           jmp 0x40022f1	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x400240c	      0xe800000000	                          call 0x4002411	       200	ref-filter.c	FUNCTION_5
filter_refs	IF,8:functions,0:SWITCH,0:CALL,11:DO,0:WHILE,0:ELSE,4:FOR,0	138
0x40048a0	            0x4154	                                push r12	      2104	ref-filter.c	FUNCTION_78
0x40048a2	              0x55	                                push rbp	      2104	ref-filter.c	FUNCTION_78
0x40048a3	            0x89d1	                            mov ecx, edx	      2107	ref-filter.c	FUNCTION_78
0x40048a5	              0x53	                                push rbx	      2104	ref-filter.c	FUNCTION_78
0x40048a6	          0x83e101	                              and ecx, 1	      2107	ref-filter.c	FUNCTION_78
0x40048a9	        0x4883c480	             add rsp, 0xffffffffffffff80	      2104	ref-filter.c	FUNCTION_78
0x40048ad	    0x64488b042528	                mov rax, qword fs:[0x28]	      2104	ref-filter.c	FUNCTION_78
0x40048b6	      0x4889442478	             mov qword [rsp + 0x78], rax	      2104	ref-filter.c	FUNCTION_78
0x40048bb	            0x31c0	                            xor eax, eax	      2104	ref-filter.c	FUNCTION_78
0x40048bd	            0x89d0	                            mov eax, edx	      2114	ref-filter.c	FUNCTION_78
0x40048bf	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      2109	ref-filter.c	FUNCTION_78
0x40048c4	      0x4889742438	             mov qword [rsp + 0x38], rsi	      2110	ref-filter.c	FUNCTION_78
0x40048c9	          0x83e03e	                           and eax, 0x3e	      2114	ref-filter.c	FUNCTION_78
0x40048cc	    0xc74424440100	               mov dword [rsp + 0x44], 1	      1632	ref-filter.c	CALL_1
0x40048d4	    0xc7442440f8ff	        mov dword [rsp + 0x40], 0x1fff8 	      1632	ref-filter.c	CALL_1
0x40048dc	            0x85c0	                           test eax, eax	      2120	ref-filter.c	FUNCTION_78	IF_2
0x40048de	          0x894644	             mov dword [rsi + 0x44], eax	      2114	ref-filter.c	FUNCTION_78
0x40048e1	    0xc74424480000	               mov dword [rsp + 0x48], 0	      1632	ref-filter.c	CALL_1
0x40048e9	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1632	ref-filter.c	CALL_1
0x40048f2	    0xc744245c0100	               mov dword [rsp + 0x5c], 1	      1632	ref-filter.c	CALL_1
0x40048fa	    0xc7442458f8ff	        mov dword [rsp + 0x58], 0x1fff8 	      1632	ref-filter.c	CALL_1
0x4004902	    0xc74424600000	               mov dword [rsp + 0x60], 0	      1632	ref-filter.c	CALL_1
0x400490a	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1632	ref-filter.c	CALL_1
0x4004913	     0xf84c5010000	                            je 0x4004ade	      2120	ref-filter.c	FUNCTION_78	IF_2
0x4004919	          0x83f804	                              cmp eax, 4	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x400491c	          0x4889f5	                            mov rbp, rsi	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x400491f	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004924	     0xf84ee000000	                            je 0x4004a18	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x400492a	          0x83f808	                              cmp eax, 8	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x400492d	     0xf84fd000000	                            je 0x4004a30	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004933	          0x83f802	                              cmp eax, 2	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004936	     0xf8414010000	                            je 0x4004a50	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x400493c	          0x83e21e	                           and edx, 0x1e	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x400493f	            0x755f	                           jne 0x40049a0	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4004941	          0x4531e4	                          xor r12d, r12d	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4004944	            0xa820	                           test al, 0x20	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004946	     0xf85b4000000	                           jne 0x4004a00	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x400494c	        0x488d7320	                   lea rsi, [rbx + 0x20]	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x4004950	        0x488d7b18	                   lea rdi, [rbx + 0x18]	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x4004954	      0xe817baffff	   call sym.clear_contains_cache.isra.12	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x4004959	        0x488d7338	                   lea rsi, [rbx + 0x38]	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x400495d	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x4004961	      0xe80abaffff	   call sym.clear_contains_cache.isra.12	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x4004966	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      2145	ref-filter.c	FUNCTION_78	IF_8
0x400496b	            0x740f	                            je 0x400497c	      2145	ref-filter.c	FUNCTION_78	IF_8
0x400496d	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x4004972	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x4004977	      0xe8b4ecffff	        call sym.do_merge_filter.isra.17	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x400497c	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      2149	ref-filter.c	FUNCTION_78
0x4004981	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2149	ref-filter.c	FUNCTION_78
0x400498a	          0x4489e0	                           mov eax, r12d	      2149	ref-filter.c	FUNCTION_78
0x400498d	     0xf8555010000	                           jne 0x4004ae8	      2149	ref-filter.c	FUNCTION_78
0x4004993	        0x4883ec80	             sub rsp, 0xffffffffffffff80	      2149	ref-filter.c	FUNCTION_78
0x4004997	              0x5b	                                 pop rbx	      2149	ref-filter.c	FUNCTION_78
0x4004998	              0x5d	                                 pop rbp	      2149	ref-filter.c	FUNCTION_78
0x4004999	            0x415c	                                 pop r12	      2149	ref-filter.c	FUNCTION_78
0x400499b	              0xc3	                                     ret	      2149	ref-filter.c	FUNCTION_78
0x400499c	         0xf1f4000	                         nop dword [rax]	      2149	ref-filter.c	FUNCTION_78
0x40049a0	        0xf6464002	               test byte [rsi + 0x40], 2	      1846	ref-filter.c	FUNCTION_68	IF_1
0x40049a4	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1843	ref-filter.c	FUNCTION_68
0x40049ad	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1843	ref-filter.c	FUNCTION_68
0x40049b6	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1843	ref-filter.c	FUNCTION_68
0x40049bf	            0x7416	                            je 0x40049d7	      1846	ref-filter.c	FUNCTION_68	IF_1
0x40049c1	          0x488b06	                    mov rax, qword [rsi]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x40049c4	          0x488b30	                    mov rsi, qword [rax]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x40049c7	          0x4885f6	                           test rsi, rsi	      1855	ref-filter.c	FUNCTION_68	IF_2
0x40049ca	            0x740b	                            je 0x40049d7	      1855	ref-filter.c	FUNCTION_68	IF_2
0x40049cc	      0x4883780800	                  cmp qword [rax + 8], 0	      1860	ref-filter.c	FUNCTION_68	IF_3
0x40049d1	     0xf8499000000	                            je 0x4004a70	      1860	ref-filter.c	FUNCTION_68	IF_3
0x40049d7	          0x4889da	                            mov rdx, rbx	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x40049da	      0xbe00000000	                              mov esi, 0	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x40049df	      0xbf00000000	                              mov edi, 0	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x40049e4	      0xe800000000	                          call 0x40049e9	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x40049e9	          0x4189c4	                           mov r12d, eax	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x40049ec	          0x4585e4	                         test r12d, r12d	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x40049ef	     0xf8557ffffff	                           jne 0x400494c	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x40049f5	          0x8b4544	            mov eax, dword [rbp + 0x44] 	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x40049f8	      0xe944ffffff	                           jmp 0x4004941	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x40049fd	           0xf1f00	                         nop dword [rax]	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004a00	          0x4889de	                            mov rsi, rbx	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004a03	      0xbf00000000	                              mov edi, 0	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004a08	      0xe800000000	                          call 0x4004a0d	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004a0d	      0xe93affffff	                           jmp 0x400494c	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004a12	    0x660f1f440000	                    nop word [rax + rax]	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004a18	          0x4889da	                            mov rdx, rbx	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004a1b	      0xbe00000000	                              mov esi, 0	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004a20	      0xbf00000000	                              mov edi, 0	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004a25	      0xe800000000	                          call 0x4004a2a	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004a2a	          0x4189c4	                           mov r12d, eax	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004a2d	            0xebbd	                           jmp 0x40049ec	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004a2f	              0x90	                                     nop	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004a30	          0x4889da	                            mov rdx, rbx	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004a33	      0xbe00000000	                              mov esi, 0	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004a38	      0xbf00000000	                              mov edi, 0	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004a3d	      0xe800000000	                          call 0x4004a42	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004a42	          0x4189c4	                           mov r12d, eax	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004a45	            0xeba5	                           jmp 0x40049ec	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004a47	    0x660f1f840000	                    nop word [rax + rax]	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004a50	          0x4889da	                            mov rdx, rbx	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004a53	      0xbe00000000	                              mov esi, 0	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004a58	      0xbf00000000	                              mov edi, 0	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004a5d	      0xe800000000	                          call 0x4004a62	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004a62	          0x4189c4	                           mov r12d, eax	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004a65	      0xe982ffffff	                           jmp 0x40049ec	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004a6a	    0x660f1f440000	                    nop word [rax + rax]	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004a70	           0xfb606	                   movzx eax, byte [rsi]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a73	            0x84c0	                             test al, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a75	            0x7463	                            je 0x4004ada	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a77	    0xf68000000000	                      test byte [rax], 8	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a7e	          0x4889f2	                            mov rdx, rsi	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a81	            0x740e	                            je 0x4004a91	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a83	            0xeb55	                           jmp 0x4004ada	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a85	           0xf1f00	                         nop dword [rax]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a88	    0xf68000000000	                      test byte [rax], 8	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a8f	            0x750b	                           jne 0x4004a9c	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a91	        0x4883c201	                              add rdx, 1	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a95	           0xfb602	                   movzx eax, byte [rdx]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a98	            0x84c0	                             test al, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a9a	            0x75ec	                           jne 0x4004a88	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a9c	          0x4829f2	                            sub rdx, rsi	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004a9f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x4004aa4	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x4004aa8	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004aad	      0xe800000000	                          call 0x4004ab2	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x4004ab2	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004ab7	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004abb	          0x4889da	                            mov rdx, rbx	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004abe	      0xbe00000000	                              mov esi, 0	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004ac3	      0xe800000000	                          call 0x4004ac8	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004ac8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x4004acd	          0x4189c4	                           mov r12d, eax	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004ad0	      0xe800000000	                          call 0x4004ad5	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x4004ad5	      0xe912ffffff	                           jmp 0x40049ec	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x4004ada	            0x31d2	                            xor edx, edx	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004adc	            0xebc1	                           jmp 0x4004a9f	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004ade	      0xbf00000000	                              mov edi, 0	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x4004ae3	      0xe800000000	                          call 0x4004ae8	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x4004ae8	      0xe800000000	                          call 0x4004aed	      2149	ref-filter.c	FUNCTION_78
populate_value	IF,31:functions,0:SWITCH,0:CALL,33:DO,0:WHILE,0:ELSE,17:FOR,2	345
0x4003b80	            0x4157	                                push r15	      1458	ref-filter.c	FUNCTION_57
0x4003b82	            0x4156	                                push r14	      1458	ref-filter.c	FUNCTION_57
0x4003b84	            0x4155	                                push r13	      1458	ref-filter.c	FUNCTION_57
0x4003b86	            0x4154	                                push r12	      1458	ref-filter.c	FUNCTION_57
0x4003b88	          0x4989fd	                            mov r13, rdi	      1458	ref-filter.c	FUNCTION_57
0x4003b8b	              0x55	                                push rbp	      1458	ref-filter.c	FUNCTION_57
0x4003b8c	              0x53	                                push rbx	      1458	ref-filter.c	FUNCTION_57
0x4003b8d	    0x4881ec480100	                          sub rsp, 0x148	      1458	ref-filter.c	FUNCTION_57
0x4003b94	    0x48633d000000	         movsxd rdi, dword [0x04003b9b] 	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003b9b	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1458	ref-filter.c	FUNCTION_57
0x4003ba0	      0xbe20000000	                           mov esi, 0x20	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003ba5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1458	ref-filter.c	FUNCTION_57
0x4003bae	    0x488984243801	            mov qword [rsp + 0x138], rax	      1458	ref-filter.c	FUNCTION_57
0x4003bb6	            0x31c0	                            xor eax, eax	      1458	ref-filter.c	FUNCTION_57
0x4003bb8	      0xe800000000	                          call 0x4003bbd	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003bbd	    0x8b3d00000000	            mov edi, dword [0x04003bc3] 	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003bc3	        0x49894530	             mov qword [r13 + 0x30], rax	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003bc7	            0x85ff	                           test edi, edi	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003bc9	            0x740b	                            je 0x4003bd6	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003bcb	      0x41f6451401	               test byte [r13 + 0x14], 1	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003bd0	     0xf854a020000	                           jne 0x4003e20	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003bd6	    0x8b3500000000	            mov esi, dword [0x04003bdc] 	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003bdc	        0x498d4538	                   lea rax, [r13 + 0x38]	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003be0	            0x31db	                            xor ebx, ebx	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003be2	          0x4531e4	                          xor r12d, r12d	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003be5	      0x4889442410	             mov qword [rsp + 0x10], rax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003bea	            0x85f6	                           test esi, esi	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003bec	            0x7f4a	                            jg 0x4003c38	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003bee	      0xe9a0010000	                           jmp 0x4003d93	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003bf3	       0xf1f440000	                   nop dword [rax + rax]	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003bf8	      0x41f6451820	           test byte [r13 + 0x18], 0x20 	      1429	ref-filter.c	FUNCTION_55	IF_1
0x4003bfd	     0xf85dd000000	                           jne 0x4003ce0	      1429	ref-filter.c	FUNCTION_55	IF_1
0x4003c03	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4003c08	        0x498d7e10	                   lea rdi, [r14 + 0x10]	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4003c0c	      0xe8dfc8ffff	                       call sym.show_ref	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4003c11	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003c15	            0x85d2	                           test edx, edx	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003c17	     0xf859a000000	                           jne 0x4003cb7	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003c1d	        0x48894500	                    mov qword [rbp], rax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003c21	    0x8b1500000000	            mov edx, dword [0x04003c27] 	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003c27	        0x4183c401	                             add r12d, 1	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003c2b	        0x4883c320	                           add rbx, 0x20	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003c2f	          0x4439e2	                           cmp edx, r12d	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003c32	     0xf8e28010000	                           jle 0x4003d60	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003c38	        0x4c8d0c5b	                   lea r9, [rbx + rbx*2]	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4003c3c	    0x4c030d000000	              add r9, qword [0x04003c43]	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4003c43	          0x4889dd	                            mov rbp, rbx	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4003c46	        0x49036d30	             add rbp, qword [r13 + 0x30]	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4003c4a	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1477	ref-filter.c	FUNCTION_57	FOR_1
0x4003c52	          0x4d8b39	                     mov r15, qword [r9]	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4003c55	          0x4d89ce	                             mov r14, r9	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4003c58	    0x48c745080000	                  mov qword [rbp + 8], 0	      1481	ref-filter.c	FUNCTION_57	FOR_1
0x4003c60	        0x4c894d18	              mov qword [rbp + 0x18], r9	      1482	ref-filter.c	FUNCTION_57	FOR_1
0x4003c64	        0x41803f2a	                    cmp byte [r15], 0x2a	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4003c68	            0x7466	                            je 0x4003cd0	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4003c6a	      0xbe00000000	                              mov esi, 0	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4003c6f	          0x4c89ff	                            mov rdi, r15	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4003c72	      0xe800000000	                          call 0x4003c77	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4003c77	            0x85c0	                           test eax, eax	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4003c79	     0xf8579ffffff	                           jne 0x4003bf8	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4003c7f	      0xbe00000000	                              mov esi, 0	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4003c84	          0x4c89ff	                            mov rdi, r15	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4003c87	      0xe800000000	                          call 0x4003c8c	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4003c8c	            0x85c0	                           test eax, eax	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4003c8e	            0x7460	                            je 0x4003cf0	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4003c90	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4003c94	      0xb800000000	                              mov eax, 0	      1422	ref-filter.c	FUNCTION_54	IF_1
0x4003c99	          0x4885f6	                           test rsi, rsi	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4003c9c	     0xf846fffffff	                            je 0x4003c11	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4003ca2	        0x498d7e10	                   lea rdi, [r14 + 0x10]	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4003ca6	      0xe845c8ffff	                       call sym.show_ref	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4003cab	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003caf	            0x85d2	                           test edx, edx	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003cb1	     0xf8466ffffff	                            je 0x4003c1d	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003cb7	          0x4889c6	                            mov rsi, rax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003cba	      0xbf00000000	                              mov edi, 0	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003cbf	            0x31c0	                            xor eax, eax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003cc1	      0xe800000000	                          call 0x4003cc6	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003cc6	      0xe952ffffff	                           jmp 0x4003c1d	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003ccb	       0xf1f440000	                   nop dword [rax + rax]	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003cd0	        0x4983c701	                              add r15, 1	      1486	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4003cd4	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1485	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4003cdc	            0xeb8c	                           jmp 0x4003c6a	      1485	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4003cde	            0x6690	                                     nop	      1485	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4003ce0	      0xe800000000	                          call 0x4003ce5	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x4003ce5	      0xe927ffffff	                           jmp 0x4003c11	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x4003cea	    0x660f1f440000	                    nop word [rax + rax]	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x4003cf0	      0xbe00000000	                              mov esi, 0	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4003cf5	          0x4c89ff	                            mov rdi, r15	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4003cf8	      0xe800000000	                          call 0x4003cfd	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4003cfd	            0x85c0	                           test eax, eax	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4003cff	     0xf84bb000000	                            je 0x4003dc0	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4003d05	        0x498d7d38	                   lea rdi, [r13 + 0x38]	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4003d09	      0xb800000000	                              mov eax, 0	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4003d0e	            0xeb11	                           jmp 0x4003d21	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4003d10	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003d14	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003d18	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003d1b	     0xf8500ffffff	                           jne 0x4003c21	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003d21	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003d24	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003d26	            0x75e8	                           jne 0x4003d10	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003d28	      0xe800000000	                          call 0x4003d2d	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x4003d2d	            0x31f6	                            xor esi, esi	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x4003d2f	          0x4889c7	                            mov rdi, rax	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x4003d32	          0x4989c7	                            mov r15, rax	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x4003d35	      0xe800000000	                          call 0x4003d3a	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x4003d3a	          0x4885c0	                           test rax, rax	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x4003d3d	     0xf84defeffff	                            je 0x4003c21	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x4003d43	          0x4889e9	                            mov rcx, rbp	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003d46	          0x4c89fa	                            mov rdx, r15	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003d49	          0x4889c6	                            mov rsi, rax	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003d4c	          0x4c89f7	                            mov rdi, r14	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003d4f	      0xe8ecc8ffff	        call sym.fill_remote_ref_details	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003d54	      0xe9c8feffff	                           jmp 0x4003c21	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003d59	     0xf1f80000000	                         nop dword [rax]	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003d60	            0x85d2	                           test edx, edx	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4003d62	            0x7e2f	                           jle 0x4003d93	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4003d64	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x4003d68	        0x48833800	                      cmp qword [rax], 0	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003d6c	     0xf84e6000000	                            je 0x4003e58	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003d72	          0x83ea01	                              sub edx, 1	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003d75	        0x48c1e205	                              shl rdx, 5	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003d79	          0x4801c2	                            add rdx, rax	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003d7c	            0xeb10	                           jmp 0x4003d8e	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003d7e	            0x6690	                                     nop	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003d80	        0x4883c020	                           add rax, 0x20	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003d84	        0x48833800	                      cmp qword [rax], 0	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003d88	     0xf84ca000000	                            je 0x4003e58	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003d8e	          0x4839c2	                            cmp rdx, rax	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4003d91	            0x75ed	                           jne 0x4003d80	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4003d93	            0x31c0	                            xor eax, eax	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4003d95	    0x488b8c243801	           mov rcx, qword [rsp + 0x138] 	      1604	ref-filter.c	FUNCTION_57
0x4003d9d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1604	ref-filter.c	FUNCTION_57
0x4003da6	     0xf8535030000	                           jne 0x40040e1	      1604	ref-filter.c	FUNCTION_57
0x4003dac	    0x4881c4480100	                          add rsp, 0x148	      1604	ref-filter.c	FUNCTION_57
0x4003db3	              0x5b	                                 pop rbx	      1604	ref-filter.c	FUNCTION_57
0x4003db4	              0x5d	                                 pop rbp	      1604	ref-filter.c	FUNCTION_57
0x4003db5	            0x415c	                                 pop r12	      1604	ref-filter.c	FUNCTION_57
0x4003db7	            0x415d	                                 pop r13	      1604	ref-filter.c	FUNCTION_57
0x4003db9	            0x415e	                                 pop r14	      1604	ref-filter.c	FUNCTION_57
0x4003dbb	            0x415f	                                 pop r15	      1604	ref-filter.c	FUNCTION_57
0x4003dbd	              0xc3	                                     ret	      1604	ref-filter.c	FUNCTION_57
0x4003dbe	            0x6690	                                     nop	      1604	ref-filter.c	FUNCTION_57
0x4003dc0	      0x41f6462002	               test byte [r14 + 0x20], 2	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4003dc5	     0xf84f5000000	                            je 0x4003ec0	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4003dcb	        0x498d7d38	                   lea rdi, [r13 + 0x38]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4003dcf	      0xb800000000	                              mov eax, 0	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4003dd4	            0xeb1b	                           jmp 0x4003df1	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4003dd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4003de0	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003de4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003de8	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003deb	     0xf8530feffff	                           jne 0x4003c21	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003df1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003df4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003df6	            0x75e8	                           jne 0x4003de0	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003df8	      0xe800000000	                          call 0x4003dfd	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x4003dfd	      0x41f6462004	               test byte [r14 + 0x20], 4	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4003e02	          0x4989c7	                            mov r15, rax	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x4003e05	     0xf8445010000	                            je 0x4003f50	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4003e0b	            0x31f6	                            xor esi, esi	      1513	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4003e0d	          0x4889e9	                            mov rcx, rbp	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4003e10	          0x4c89fa	                            mov rdx, r15	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4003e13	          0x4c89f7	                            mov rdi, r14	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4003e16	      0xe825c8ffff	        call sym.fill_remote_ref_details	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4003e1b	      0xe901feffff	                           jmp 0x4003c21	      1520	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4003e20	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003e25	     0xf85abfdffff	                           jne 0x4003bd6	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003e2b	        0x498d7d38	                   lea rdi, [r13 + 0x38]	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4003e2f	            0x31d2	                            xor edx, edx	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4003e31	            0x31c9	                            xor ecx, ecx	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4003e33	      0xbe01000000	                              mov esi, 1	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4003e38	      0xe800000000	                          call 0x4003e3d	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4003e3d	      0xba00000000	                              mov edx, 0	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4003e42	          0x4885c0	                           test rax, rax	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4003e45	        0x480f44c2	                          cmove rax, rdx	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4003e49	        0x49894520	             mov qword [r13 + 0x20], rax	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4003e4d	      0xe984fdffff	                           jmp 0x4003bd6	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4003e52	    0x660f1f440000	                    nop word [rax + rax]	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4003e58	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003e5d	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003e62	            0x31d2	                            xor edx, edx	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003e64	          0x4c89ee	                            mov rsi, r13	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003e67	          0x4c89ef	                            mov rdi, r13	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003e6a	      0xe8d1e5ffff	                     call sym.get_object	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003e6f	            0x85c0	                           test eax, eax	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003e71	     0xf859c010000	                           jne 0x4004013	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003e77	    0x8b0500000000	            mov eax, dword [0x04003e7d] 	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003e7d	            0x85c0	                           test eax, eax	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003e7f	     0xf840effffff	                            je 0x4003d93	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003e85	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003e8a	           0xfb602	                   movzx eax, byte [rdx]	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003e8d	          0x83e00e	                            and eax, 0xe	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003e90	            0x3c08	                               cmp al, 8	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003e92	     0xf85fbfeffff	                           jne 0x4003d93	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003e98	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	      1595	ref-filter.c	FUNCTION_57
0x4003e9c	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003ea1	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003ea6	      0xba01000000	                              mov edx, 1	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003eab	          0x4c89ef	                            mov rdi, r13	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003eae	        0x4883c604	                              add rsi, 4	      1595	ref-filter.c	FUNCTION_57
0x4003eb2	      0xe889e5ffff	                     call sym.get_object	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003eb7	      0xe9d9feffff	                           jmp 0x4003d95	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003ebc	         0xf1f4000	                         nop dword [rax]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003ec0	      0xbe00000000	                              mov esi, 0	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4003ec5	          0x4c89ff	                            mov rdi, r15	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4003ec8	      0xe800000000	                          call 0x4003ecd	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4003ecd	            0x85c0	                           test eax, eax	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4003ecf	     0xf859b000000	                           jne 0x4003f70	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4003ed5	      0xbf00000000	                              mov edi, 0	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003eda	      0xb905000000	                              mov ecx, 5	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003edf	          0x4c89fe	                            mov rsi, r15	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003ee2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003ee4	     0xf8593000000	                           jne 0x4003f7d	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003eea	        0x418b7514	            mov esi, dword [r13 + 0x14] 	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4003eee	        0x40f6c601	                             test sil, 1	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4003ef2	     0xf85c6000000	                           jne 0x4003fbe	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4003ef8	          0x83e602	                              and esi, 2	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4003efb	     0xf8429010000	                            je 0x400402a	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4003f01	      0x488d442430	                   lea rax, [rsp + 0x30]	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x4003f06	      0xb92c000000	                           mov ecx, 0x2c	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x4003f0b	      0xba00000000	                              mov edx, 0	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x4003f10	        0x4883c001	                              add rax, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003f14	        0x4883c201	                              add rdx, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003f18	          0x8848ff	                  mov byte [rax - 1], cl	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003f1b	           0xfb60a	                   movzx ecx, byte [rdx]	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003f1e	            0x84c9	                             test cl, cl	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003f20	            0x75ee	                           jne 0x4003f10	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003f22	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4003f27	          0x4839c8	                            cmp rax, rcx	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4003f2a	     0xf84fa000000	                            je 0x400402a	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4003f30	      0x488d7c2431	                   lea rdi, [rsp + 0x31]	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003f35	          0xc60000	                       mov byte [rax], 0	      1533	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7
0x4003f38	      0xe800000000	                          call 0x4003f3d	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003f3d	        0x48894500	                    mov qword [rbp], rax	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003f41	      0xe9dbfcffff	                           jmp 0x4003c21	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003f46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003f50	            0x31f6	                            xor esi, esi	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4003f52	          0x4c89ff	                            mov rdi, r15	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4003f55	      0xe800000000	                          call 0x4003f5a	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4003f5a	          0x4885c0	                           test rax, rax	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x4003f5d	          0x4889c6	                            mov rsi, rax	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4003f60	     0xf85a7feffff	                           jne 0x4003e0d	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x4003f66	      0xe9b6fcffff	                           jmp 0x4003c21	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x4003f6b	       0xf1f440000	                   nop dword [rax + rax]	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x4003f70	        0x4d8d4e10	                    lea r9, [r14 + 0x10]	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4003f74	        0x4c894d00	                     mov qword [rbp], r9	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4003f78	      0xe9a4fcffff	                           jmp 0x4003c21	      1523	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4003f7d	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003f81	            0x85c9	                           test ecx, ecx	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003f83	            0x746b	                            je 0x4003ff0	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003f85	      0xbf00000000	                              mov edi, 0	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003f8a	      0xb905000000	                              mov ecx, 5	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003f8f	          0x4c89fe	                            mov rsi, r15	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003f92	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003f94	     0xf859d000000	                           jne 0x4004037	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003f9a	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003f9e	          0x4885f6	                           test rsi, rsi	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003fa1	            0x747a	                            je 0x400401d	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003fa3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003fa8	      0xe800000000	                          call 0x4003fad	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003fad	            0x85c0	                           test eax, eax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003faf	            0x756c	                           jne 0x400401d	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003fb1	    0x48c745000000	                      mov qword [rbp], 0	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4003fb9	      0xe963fcffff	                           jmp 0x4003c21	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4003fbe	      0x488d442430	                   lea rax, [rsp + 0x30]	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4003fc3	      0xb92c000000	                           mov ecx, 0x2c	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4003fc8	      0xba00000000	                              mov edx, 0	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4003fcd	           0xf1f00	                         nop dword [rax]	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4003fd0	        0x4883c001	                              add rax, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003fd4	        0x4883c201	                              add rdx, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003fd8	          0x8848ff	                  mov byte [rax - 1], cl	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003fdb	           0xfb60a	                   movzx ecx, byte [rdx]	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003fde	            0x84c9	                             test cl, cl	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003fe0	            0x75ee	                           jne 0x4003fd0	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003fe2	          0x83e602	                              and esi, 2	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4003fe5	     0xf851bffffff	                           jne 0x4003f06	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4003feb	      0xe932ffffff	                           jmp 0x4003f22	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4003ff0	        0x498d4e10	                   lea rcx, [r14 + 0x10]	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4003ff4	        0x4d8d4614	                    lea r8, [r14 + 0x14]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003ff8	          0x4889ea	                            mov rdx, rbp	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003ffb	          0x4c89ee	                            mov rsi, r13	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003ffe	          0x4c89ff	                            mov rdi, r15	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004001	      0xe88ac8ffff	        call sym.grab_objectname.isra.22	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004006	            0x85c0	                           test eax, eax	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004008	     0xf8513fcffff	                           jne 0x4003c21	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x400400e	      0xe972ffffff	                           jmp 0x4003f85	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004013	      0xb8ffffffff	                     mov eax, 0xffffffff	      1582	ref-filter.c	FUNCTION_57	IF_30
0x4004018	      0xe978fdffff	                           jmp 0x4003d95	      1582	ref-filter.c	FUNCTION_57	IF_30
0x400401d	    0x48c745000000	                      mov qword [rbp], 0	      1543	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x4004025	      0xe9f7fbffff	                           jmp 0x4003c21	      1543	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x400402a	    0x48c745000000	                      mov qword [rbp], 0	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4004032	      0xe9eafbffff	                           jmp 0x4003c21	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4004037	      0xbe00000000	                              mov esi, 0	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x400403c	          0x4c89ff	                            mov rdi, r15	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x400403f	      0xe800000000	                          call 0x4004044	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4004044	            0x85c0	                           test eax, eax	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4004046	            0x740d	                            je 0x4004055	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4004048	    0x48c745080000	                  mov qword [rbp + 8], 0	      1546	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x4004050	      0xe9ccfbffff	                           jmp 0x4003c21	      1547	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x4004055	        0x41803f65	                    cmp byte [r15], 0x65	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4004059	            0x7446	                            je 0x40040a1	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x400405b	      0xbe00000000	                              mov esi, 0	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4004060	          0x4c89ff	                            mov rdi, r15	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4004063	      0xe800000000	                          call 0x4004068	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4004068	            0x85c0	                           test eax, eax	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x400406a	            0x7457	                            je 0x40040c3	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x400406c	      0xb800000000	                              mov eax, 0	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4004071	            0xeb0e	                           jmp 0x4004081	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4004073	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004077	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400407b	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400407f	            0x7513	                           jne 0x4004094	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4004081	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004084	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004086	            0x75eb	                           jne 0x4004073	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4004088	          0x4c89ff	                            mov rdi, r15	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x400408b	      0xe800000000	                          call 0x4004090	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4004090	        0x48894500	                    mov qword [rbp], rax	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4004094	    0x48c745080000	                  mov qword [rbp + 8], 0	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x400409c	      0xe980fbffff	                           jmp 0x4003c21	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x40040a1	      0x41807f016e	                cmp byte [r15 + 1], 0x6e	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40040a6	            0x75b3	                           jne 0x400405b	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40040a8	      0x41807f0264	                cmp byte [r15 + 2], 0x64	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40040ad	            0x75ac	                           jne 0x400405b	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40040af	      0x41807f0300	                   cmp byte [r15 + 3], 0	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40040b4	            0x75a5	                           jne 0x400405b	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40040b6	    0x48c745080000	                  mov qword [rbp + 8], 0	      1549	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x40040be	      0xe95efbffff	                           jmp 0x4003c21	      1550	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x40040c3	      0xbf00000000	                              mov edi, 0	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x40040c8	      0xb905000000	                              mov ecx, 5	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x40040cd	          0x4c89fe	                            mov rsi, r15	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x40040d0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x40040d2	            0x7512	                           jne 0x40040e6	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x40040d4	    0x48c745080000	                  mov qword [rbp + 8], 0	      1559	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x40040dc	      0xe940fbffff	                           jmp 0x4003c21	      1560	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x40040e1	      0xe800000000	                          call 0x40040e6	      1604	ref-filter.c	FUNCTION_57
0x40040e6	      0xbf00000000	                              mov edi, 0	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x40040eb	      0xb905000000	                              mov ecx, 5	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x40040f0	          0x4c89fe	                            mov rsi, r15	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x40040f3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x40040f5	     0xf8526fbffff	                           jne 0x4003c21	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x40040fb	    0x48c745080000	                  mov qword [rbp + 8], 0	      1562	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x4004103	      0xe919fbffff	                           jmp 0x4003c21	      1563	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
get_ref_atom_value	IF,2:functions,0:SWITCH,0:CALL,2:DO,0:WHILE,0:ELSE,0:FOR,0	45
0x4004110	              0x55	                                push rbp	      1612	ref-filter.c	FUNCTION_58
0x4004111	              0x53	                                push rbx	      1612	ref-filter.c	FUNCTION_58
0x4004112	          0x4863de	                         movsxd rbx, esi	      1612	ref-filter.c	FUNCTION_58
0x4004115	        0x4883ec18	                           sub rsp, 0x18	      1612	ref-filter.c	FUNCTION_58
0x4004119	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      1613	ref-filter.c	FUNCTION_58	IF_1
0x400411d	          0x4885c0	                           test rax, rax	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4004120	            0x7416	                            je 0x4004138	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4004122	        0x48c1e305	                              shl rbx, 5	      1618	ref-filter.c	FUNCTION_58
0x4004126	          0x4801c3	                            add rbx, rax	      1618	ref-filter.c	FUNCTION_58
0x4004129	            0x31c0	                            xor eax, eax	      1619	ref-filter.c	FUNCTION_58
0x400412b	          0x48891a	                    mov qword [rdx], rbx	      1618	ref-filter.c	FUNCTION_58
0x400412e	        0x4883c418	                           add rsp, 0x18	      1620	ref-filter.c	FUNCTION_58
0x4004132	              0x5b	                                 pop rbx	      1620	ref-filter.c	FUNCTION_58
0x4004133	              0x5d	                                 pop rbp	      1620	ref-filter.c	FUNCTION_58
0x4004134	              0xc3	                                     ret	      1620	ref-filter.c	FUNCTION_58
0x4004135	           0xf1f00	                         nop dword [rax]	      1620	ref-filter.c	FUNCTION_58
0x4004138	          0x4889ce	                            mov rsi, rcx	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x400413b	          0x4889fd	                            mov rbp, rdi	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x400413e	      0x4889542408	                mov qword [rsp + 8], rdx	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004143	      0xe838faffff	                 call sym.populate_value	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004148	            0x85c0	                           test eax, eax	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x400414a	            0x754a	                           jne 0x4004196	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x400414c	    0x8b0d00000000	            mov ecx, dword [0x04004152] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004152	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x4004156	      0x488b542408	                mov rdx, qword [rsp + 8]	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400415b	            0x85c9	                           test ecx, ecx	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400415d	            0x7ec3	                           jle 0x4004122	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400415f	          0x83e901	                              sub ecx, 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004162	        0x4883c101	                              add rcx, 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004166	        0x48c1e105	                              shl rcx, 5	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400416a	          0x4801c1	                            add rcx, rax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400416d	            0xeb0a	                           jmp 0x4004179	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400416f	              0x90	                                     nop	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004170	        0x4883c020	                           add rax, 0x20	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004174	          0x4839c1	                            cmp rcx, rax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004177	            0x7417	                            je 0x4004190	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004179	        0x48833800	                      cmp qword [rax], 0	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x400417d	            0x75f1	                           jne 0x4004170	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x400417f	    0x48c700000000	                      mov qword [rax], 0	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4004186	            0xebe8	                           jmp 0x4004170	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4004188	     0xf1f84000000	                   nop dword [rax + rax]	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4004190	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4004194	            0xeb8c	                           jmp 0x4004122	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4004196	      0xb8ffffffff	                     mov eax, 0xffffffff	      1615	ref-filter.c	FUNCTION_58	IF_1	IF_2
0x400419b	            0xeb91	                           jmp 0x400412e	      1615	ref-filter.c	FUNCTION_58	IF_1	IF_2
parse_opt_merge_filter	IF,4:functions,0:SWITCH,0:CALL,8:DO,0:WHILE,0:ELSE,1:FOR,0	73
0x4004f80	            0x4155	                                push r13	      2347	ref-filter.c	FUNCTION_90
0x4004f82	            0x4154	                                push r12	      2347	ref-filter.c	FUNCTION_90
0x4004f84	          0x4989f5	                            mov r13, rsi	      2347	ref-filter.c	FUNCTION_90
0x4004f87	              0x55	                                push rbp	      2347	ref-filter.c	FUNCTION_90
0x4004f88	              0x53	                                push rbx	      2347	ref-filter.c	FUNCTION_90
0x4004f89	          0x4889fb	                            mov rbx, rdi	      2347	ref-filter.c	FUNCTION_90
0x4004f8c	      0xbe00000000	                              mov esi, 0	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x4004f91	        0x4883ec28	                           sub rsp, 0x28	      2347	ref-filter.c	FUNCTION_90
0x4004f95	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	      2348	ref-filter.c	FUNCTION_90
0x4004f99	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x4004f9d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2347	ref-filter.c	FUNCTION_90
0x4004fa6	      0x4889442418	             mov qword [rsp + 0x18], rax	      2347	ref-filter.c	FUNCTION_90
0x4004fab	            0x31c0	                            xor eax, eax	      2347	ref-filter.c	FUNCTION_90
0x4004fad	      0xe800000000	                          call 0x4004fb2	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x4004fb2	          0x8b5530	            mov edx, dword [rbp + 0x30] 	      2352	ref-filter.c	FUNCTION_90	IF_1
0x4004fb5	            0x85d2	                           test edx, edx	      2352	ref-filter.c	FUNCTION_90	IF_1
0x4004fb7	            0x741f	                            je 0x4004fd8	      2352	ref-filter.c	FUNCTION_90	IF_1
0x4004fb9	            0x31d2	                            xor edx, edx	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004fbb	            0x85c0	                           test eax, eax	      2353	ref-filter.c	FUNCTION_90	IF_1	IF_2
0x4004fbd	            0x7471	                            je 0x4005030	      2353	ref-filter.c	FUNCTION_90	IF_1	IF_2
0x4004fbf	      0xbe00000000	                              mov esi, 0	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004fc4	          0x4889df	                            mov rdi, rbx	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004fc7	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004fcd	      0xe800000000	                          call 0x4004fd2	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004fd2	            0xeb34	                           jmp 0x4005008	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004fd4	         0xf1f4000	                         nop dword [rax]	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004fd8	          0x83f801	                              cmp eax, 1	      2360	ref-filter.c	FUNCTION_90
0x4004fdb	          0x4889e6	                            mov rsi, rsp	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004fde	          0x4c89ef	                            mov rdi, r13	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004fe1	            0x19c0	                            sbb eax, eax	      2360	ref-filter.c	FUNCTION_90
0x4004fe3	          0x83c002	                              add eax, 2	      2360	ref-filter.c	FUNCTION_90
0x4004fe6	          0x894530	            mov dword [rbp + 0x30], eax 	      2360	ref-filter.c	FUNCTION_90
0x4004fe9	      0xe800000000	                          call 0x4004fee	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004fee	            0x85c0	                           test eax, eax	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004ff0	          0x4189c4	                           mov r12d, eax	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004ff3	            0x7550	                           jne 0x4005045	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004ff5	            0x31f6	                            xor esi, esi	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4004ff7	          0x4889e7	                            mov rdi, rsp	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4004ffa	      0xe800000000	                          call 0x4004fff	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4004fff	          0x4885c0	                           test rax, rax	      2368	ref-filter.c	FUNCTION_90	IF_4
0x4005002	        0x48894538	            mov qword [rbp + 0x38], rax 	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4005006	            0x745b	                            je 0x4005063	      2368	ref-filter.c	FUNCTION_90	IF_4
0x4005008	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2372	ref-filter.c	FUNCTION_90
0x400500d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2372	ref-filter.c	FUNCTION_90
0x4005016	          0x4489e0	                           mov eax, r12d	      2372	ref-filter.c	FUNCTION_90
0x4005019	            0x755f	                           jne 0x400507a	      2372	ref-filter.c	FUNCTION_90
0x400501b	        0x4883c428	                           add rsp, 0x28	      2372	ref-filter.c	FUNCTION_90
0x400501f	              0x5b	                                 pop rbx	      2372	ref-filter.c	FUNCTION_90
0x4005020	              0x5d	                                 pop rbp	      2372	ref-filter.c	FUNCTION_90
0x4005021	            0x415c	                                 pop r12	      2372	ref-filter.c	FUNCTION_90
0x4005023	            0x415d	                                 pop r13	      2372	ref-filter.c	FUNCTION_90
0x4005025	              0xc3	                                     ret	      2372	ref-filter.c	FUNCTION_90
0x4005026	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2372	ref-filter.c	FUNCTION_90
0x4005030	      0xbe00000000	                              mov esi, 0	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x4005035	          0x4889df	                            mov rdi, rbx	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x4005038	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x400503e	      0xe800000000	                          call 0x4005043	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x4005043	            0xebc3	                           jmp 0x4005008	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x4005045	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x400504a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x400504c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4005051	      0xe800000000	                          call 0x4005056	        54	gettext.h	FUNCTION_120
0x4005056	          0x4c89ee	                            mov rsi, r13	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4005059	          0x4889c7	                            mov rdi, rax	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x400505c	            0x31c0	                            xor eax, eax	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x400505e	      0xe800000000	                          call 0x4005063	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4005063	            0x31d2	                            xor edx, edx	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4005065	      0xbe00000000	                              mov esi, 0	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x400506a	          0x4889df	                            mov rdi, rbx	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x400506d	      0xe800000000	                          call 0x4005072	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4005072	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4005078	            0xeb8e	                           jmp 0x4005008	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x400507a	      0xe800000000	                  call section_end..text	      2372	ref-filter.c	FUNCTION_90
ref_array_sort	IF,0:functions,0:SWITCH,0:CALL,0:DO,0:WHILE,0:ELSE,0:FOR,0	15
0x4004af0	        0x4883ec08	                              sub rsp, 8	      2196	ref-filter.c	FUNCTION_81
0x4004af4	          0x4889f0	                            mov rax, rsi	      2196	ref-filter.c	FUNCTION_81
0x4004af7	          0x486336	                 movsxd rsi, dword [rsi]	      2197	ref-filter.c	FUNCTION_81
0x4004afa	          0x4989f8	                             mov r8, rdi	      2196	ref-filter.c	FUNCTION_81
0x4004afd	        0x488b7808	                mov rdi, qword [rax + 8]	      2197	ref-filter.c	FUNCTION_81
0x4004b01	      0xb900000000	                              mov ecx, 0	      2197	ref-filter.c	FUNCTION_81
0x4004b06	      0xba08000000	                              mov edx, 8	      2197	ref-filter.c	FUNCTION_81
0x4004b0b	      0xe800000000	                          call 0x4004b10	      2197	ref-filter.c	FUNCTION_81
0x4004b10	            0x85c0	                           test eax, eax	      2197	ref-filter.c	FUNCTION_81
0x4004b12	            0x7505	                           jne 0x4004b19	      2197	ref-filter.c	FUNCTION_81
0x4004b14	        0x4883c408	                              add rsp, 8	      2198	ref-filter.c	FUNCTION_81
0x4004b18	              0xc3	                                     ret	      2198	ref-filter.c	FUNCTION_81
0x4004b19	      0xbf00000000	                              mov edi, 0	      2197	ref-filter.c	FUNCTION_81
0x4004b1e	            0x31c0	                            xor eax, eax	      2197	ref-filter.c	FUNCTION_81
0x4004b20	      0xe800000000	                          call 0x4004b25	      2197	ref-filter.c	FUNCTION_81
refname_atom_parser	IF,0:functions,0:SWITCH,0:CALL,1:DO,0:WHILE,0:ELSE,0:FOR,0	5
0x4002420	          0x4889d0	                            mov rax, rdx	       291	ref-filter.c	FUNCTION_11
0x4002423	          0x488b16	                    mov rdx, qword [rsi]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x4002426	        0x488d7e10	                   lea rdi, [rsi + 0x10]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x400242a	          0x4889c6	                            mov rsi, rax	       292	ref-filter.c	FUNCTION_11	CALL_1
0x400242d	      0xe96efbffff	    jmp sym.refname_atom_parser_internal	       292	ref-filter.c	FUNCTION_11	CALL_1
new_ref_array_item	IF,0:functions,0:SWITCH,0:CALL,1:DO,0:WHILE,0:ELSE,0:FOR,0	43
0x4000100	            0x4155	                                push r13	      1917	ref-filter.c	FUNCTION_70
0x4000102	            0x4154	                                push r12	      1917	ref-filter.c	FUNCTION_70
0x4000104	          0x4989fd	                            mov r13, rdi	      1917	ref-filter.c	FUNCTION_70
0x4000107	              0x55	                                push rbp	      1917	ref-filter.c	FUNCTION_70
0x4000108	              0x53	                                push rbx	      1917	ref-filter.c	FUNCTION_70
0x4000109	          0x4989f4	                            mov r12, rsi	      1917	ref-filter.c	FUNCTION_70
0x400010c	        0x4883ec08	                              sub rsp, 8	      1917	ref-filter.c	FUNCTION_70
0x4000110	      0xe800000000	                          call 0x4000115	      1920	ref-filter.c	FUNCTION_70
0x4000115	        0x4883f8c7	             cmp rax, 0xffffffffffffffc7	       785	git-compat-util.h	FUNCTION_104	IF_1
0x4000119	          0x4889c5	                            mov rbp, rax	      1920	ref-filter.c	FUNCTION_70
0x400011c	            0x7748	                            ja 0x4000166	       785	git-compat-util.h	FUNCTION_104	IF_1
0x400011e	            0x745a	                            je 0x400017a	       785	git-compat-util.h	FUNCTION_104	IF_1
0x4000120	        0x488d7039	                   lea rsi, [rax + 0x39]	      1920	ref-filter.c	FUNCTION_70
0x4000124	      0xbf01000000	                              mov edi, 1	      1920	ref-filter.c	FUNCTION_70
0x4000129	      0xe800000000	                          call 0x400012e	      1920	ref-filter.c	FUNCTION_70
0x400012e	        0x488d7838	                   lea rdi, [rax + 0x38]	        53	string3.h	FUNCTION_122	CALL_3
0x4000132	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_122	CALL_3
0x4000135	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_122	CALL_3
0x4000138	          0x4889c3	                            mov rbx, rax	      1920	ref-filter.c	FUNCTION_70
0x400013b	      0xe800000000	                          call 0x4000140	        53	string3.h	FUNCTION_122	CALL_3
0x4000140	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_122	CALL_3
0x4000144	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_122	CALL_3
0x4000147	      0x498b442408	                mov rax, qword [r12 + 8]	        53	string3.h	FUNCTION_122	CALL_3
0x400014c	        0x48894308	                mov qword [rbx + 8], rax	        53	string3.h	FUNCTION_122	CALL_3
0x4000150	      0x418b442410	            mov eax, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_122	CALL_3
0x4000155	          0x894310	             mov dword [rbx + 0x10], eax	        53	string3.h	FUNCTION_122	CALL_3
0x4000158	        0x4883c408	                              add rsp, 8	      1924	ref-filter.c	FUNCTION_70
0x400015c	          0x4889d8	                            mov rax, rbx	      1924	ref-filter.c	FUNCTION_70
0x400015f	              0x5b	                                 pop rbx	      1924	ref-filter.c	FUNCTION_70
0x4000160	              0x5d	                                 pop rbp	      1924	ref-filter.c	FUNCTION_70
0x4000161	            0x415c	                                 pop r12	      1924	ref-filter.c	FUNCTION_70
0x4000163	            0x415d	                                 pop r13	      1924	ref-filter.c	FUNCTION_70
0x4000165	              0xc3	                                     ret	      1924	ref-filter.c	FUNCTION_70
0x4000166	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_104	IF_1	CALL_1
0x4000169	      0xbe38000000	                           mov esi, 0x38	       786	git-compat-util.h	FUNCTION_104	IF_1	CALL_1
0x400016e	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_104	IF_1	CALL_1
0x4000173	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_104	IF_1	CALL_1
0x4000175	      0xe800000000	                          call 0x400017a	       786	git-compat-util.h	FUNCTION_104	IF_1	CALL_1
0x400017a	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_104	IF_1	CALL_1
0x400017f	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_104	IF_1	CALL_1
0x4000183	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_104	IF_1	CALL_1
0x4000188	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_104	IF_1	CALL_1
0x400018a	      0xe800000000	                          call 0x400018f	       786	git-compat-util.h	FUNCTION_104	IF_1	CALL_1
get_object	IF,3:functions,0:SWITCH,0:CALL,9:DO,0:WHILE,0:ELSE,2:FOR,0	373
0x4002440	            0x4157	                                push r15	      1436	ref-filter.c	FUNCTION_56
0x4002442	            0x4156	                                push r14	      1436	ref-filter.c	FUNCTION_56
0x4002444	          0x4989ce	                            mov r14, rcx	      1436	ref-filter.c	FUNCTION_56
0x4002447	            0x4155	                                push r13	      1436	ref-filter.c	FUNCTION_56
0x4002449	            0x4154	                                push r12	      1436	ref-filter.c	FUNCTION_56
0x400244b	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_155	CALL_1
0x4002450	              0x55	                                push rbp	      1436	ref-filter.c	FUNCTION_56
0x4002451	              0x53	                                push rbx	      1436	ref-filter.c	FUNCTION_56
0x4002452	            0x89d5	                            mov ebp, edx	      1436	ref-filter.c	FUNCTION_56
0x4002454	          0x4889f3	                            mov rbx, rsi	      1436	ref-filter.c	FUNCTION_56
0x4002457	          0x4989fc	                            mov r12, rdi	      1436	ref-filter.c	FUNCTION_56
0x400245a	          0x4d89c7	                             mov r15, r8	      1436	ref-filter.c	FUNCTION_56
0x400245d	        0x4883ec58	                           sub rsp, 0x58	      1436	ref-filter.c	FUNCTION_56
0x4002461	          0x4889df	                            mov rdi, rbx	      1200	cache.h	FUNCTION_155	CALL_1
0x4002464	      0x488d542428	                   lea rdx, [rsp + 0x28]	      1200	cache.h	FUNCTION_155	CALL_1
0x4002469	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1200	cache.h	FUNCTION_155	CALL_1
0x400246e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1436	ref-filter.c	FUNCTION_56
0x4002477	      0x4889442448	             mov qword [rsp + 0x48], rax	      1436	ref-filter.c	FUNCTION_56
0x400247c	            0x31c0	                            xor eax, eax	      1436	ref-filter.c	FUNCTION_56
0x400247e	      0xe800000000	                          call 0x4002483	      1200	cache.h	FUNCTION_155	CALL_1
0x4002483	          0x4885c0	                           test rax, rax	       806	ref-filter.c	FUNCTION_31	IF_1
0x4002486	      0x4889442410	             mov qword [rsp + 0x10], rax	      1200	cache.h	FUNCTION_155	CALL_1
0x400248b	     0xf842f030000	                            je 0x40027c0	       806	ref-filter.c	FUNCTION_31	IF_1
0x4002491	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4002496	        0x8b742430	            mov esi, dword [rsp + 0x30] 	       807	ref-filter.c	FUNCTION_31	CALL_2
0x400249a	      0x4c8d442424	                    lea r8, [rsp + 0x24]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x400249f	          0x4889c1	                            mov rcx, rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024a2	          0x4889df	                            mov rdi, rbx	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024a5	      0xe800000000	                          call 0x40024aa	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024aa	          0x4885c0	                           test rax, rax	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x40024ad	          0x4989c5	                            mov r13, rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024b0	          0x498906	                    mov qword [r14], rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024b3	     0xf8427050000	                            je 0x40029e0	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x40024b9	    0x8b0d00000000	            mov ecx, dword [0x040024bf] 	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40024bf	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x40024c4	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x40024c9	            0x85c9	                           test ecx, ecx	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40024cb	      0x4889442418	             mov qword [rsp + 0x18], rax	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x40024d0	     0xf8e62030000	                           jle 0x4002838	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40024d6	        0x48890424	                    mov qword [rsp], rax	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40024da	          0x4989c6	                            mov r14, rax	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40024dd	        0x498d4504	                      lea rax, [r13 + 4]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40024e1	            0x85ed	                           test ebp, ebp	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40024e3	        0x410f95c4	                              setne r12b	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40024e7	      0x4889442408	                mov qword [rsp + 8], rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40024ec	            0x31db	                            xor ebx, ebx	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40024ee	            0xeb15	                           jmp 0x4002505	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40024f0	    0x8b0500000000	            mov eax, dword [0x040024f6] 	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40024f6	          0x8d5301	                      lea edx, [rbx + 1]	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40024f9	        0x4983c620	                           add r14, 0x20	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40024fd	        0x4883c301	                              add rbx, 1	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002501	            0x39d0	                            cmp eax, edx	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002503	            0x7e73	                           jle 0x4002578	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002505	        0x488d145b	                  lea rdx, [rbx + rbx*2]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002509	        0x48c1e205	                              shl rdx, 5	       838	ref-filter.c	FUNCTION_33	FOR_1
0x400250d	    0x480315000000	             add rdx, qword [0x04002514]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002514	          0x488b02	                    mov rax, qword [rdx]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002517	          0x80382a	                    cmp byte [rax], 0x2a	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x400251a	           0xf94c1	                                 sete cl	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x400251d	          0x4438e1	                            cmp cl, r12b	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002520	            0x75ce	                           jne 0x40024f0	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002522	          0x83fd01	                              cmp ebp, 1	       843	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x4002525	      0xbf00000000	                              mov edi, 0	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x400252a	      0xb90b000000	                            mov ecx, 0xb	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x400252f	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	       843	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x4002533	          0x4889c6	                            mov rsi, rax	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4002536	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4002538	     0xf84b2010000	                            je 0x40026f0	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x400253e	      0xbf00000000	                              mov edi, 0	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x4002543	      0xb90b000000	                            mov ecx, 0xb	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x4002548	          0x4889c6	                            mov rsi, rax	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x400254b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x400254d	     0xf844d020000	                            je 0x40027a0	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x4002553	            0x85ed	                           test ebp, ebp	       850	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002555	            0x7499	                            je 0x40024f0	       850	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002557	      0x488b742408	                mov rsi, qword [rsp + 8]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x400255c	        0x488d4a10	                   lea rcx, [rdx + 0x10]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002560	        0x4c8d4214	                    lea r8, [rdx + 0x14]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002564	          0x4889c7	                            mov rdi, rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002567	          0x4c89f2	                            mov rdx, r14	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x400256a	      0xe821e3ffff	        call sym.grab_objectname.isra.22	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x400256f	      0xe97cffffff	                           jmp 0x40024f0	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002574	         0xf1f4000	                         nop dword [rax]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002578	      0x410fb67500	                   movzx esi, byte [r13]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400257d	          0x40d0ee	                              shr sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002580	          0x83e607	                              and esi, 7	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002583	        0x4080fe03	                              cmp sil, 3	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002587	     0xf8783010000	                            ja 0x4002710	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400258d	        0x4080fe02	                              cmp sil, 2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002591	     0xf8369030000	                           jae 0x4002900	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002597	        0x4080fe01	                              cmp sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400259b	     0xf85bf020000	                           jne 0x4002860	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40025a1	            0x85c0	                           test eax, eax	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025a3	     0xf8e67030000	                           jle 0x4002910	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025a9	          0x4531f6	                          xor r14d, r14d	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025ac	          0x4531ff	                          xor r15d, r15d	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025af	            0xeb21	                           jmp 0x40025d2	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025b1	     0xf1f80000000	                         nop dword [rax]	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025b8	        0x4183c701	                             add r15d, 1	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025bc	        0x4983c660	                           add r14, 0x60	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025c0	      0x4883042420	                   add qword [rsp], 0x20	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025c5	    0x443b3d000000	           cmp r15d, dword [0x040025cc] 	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025cc	     0xf8d3e030000	                           jge 0x4002910	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40025d2	    0x488b05000000	            mov rax, qword [0x040025d9] 	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40025d9	        0x4a8b0430	              mov rax, qword [rax + r14]	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40025dd	          0x80382a	                    cmp byte [rax], 0x2a	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x40025e0	           0xf94c2	                                 sete dl	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x40025e3	          0x4438e2	                            cmp dl, r12b	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x40025e6	            0x75d0	                           jne 0x40025b8	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x40025e8	          0x83fd01	                              cmp ebp, 1	       889	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x40025eb	      0xbf00000000	                              mov edi, 0	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40025f0	      0xb905000000	                              mov ecx, 5	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40025f5	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	       889	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x40025f9	          0x4889c6	                            mov rsi, rax	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40025fc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40025fe	     0xf8454030000	                            je 0x4002958	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x4002604	      0xbf00000000	                              mov edi, 0	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002609	      0xb90a000000	                            mov ecx, 0xa	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x400260e	          0x4889c6	                            mov rsi, rax	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002611	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002613	     0xf84e7030000	                            je 0x4002a00	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002619	      0xbf00000000	                              mov edi, 0	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x400261e	      0xb907000000	                              mov ecx, 7	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x4002623	          0x4889c6	                            mov rsi, rax	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x4002626	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x4002628	            0x758e	                           jne 0x40025b8	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x400262a	        0x498b5d30	            mov rbx, qword [r13 + 0x30] 	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x400262e	    0x48c744243000	               mov qword [rsp + 0x30], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4002637	    0x48c744243800	               mov qword [rsp + 0x38], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4002640	    0x48c744244000	               mov qword [rsp + 0x40], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4002649	          0x4885db	                           test rbx, rbx	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x400264c	     0xf842e030000	                            je 0x4002980	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002652	          0x488b0b	                    mov rcx, qword [rbx]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002655	           0xf1f00	                         nop dword [rax]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002658	        0x488d7904	                      lea rdi, [rcx + 4]	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x400265c	      0xe800000000	                          call 0x4002661	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002661	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_165	CALL_2
0x4002664	      0x4889442408	                mov qword [rsp + 8], rax	       279	strbuf.h	FUNCTION_165	CALL_2
0x4002669	      0xe800000000	                          call 0x400266e	       279	strbuf.h	FUNCTION_165	CALL_2
0x400266e	      0x488b742408	                mov rsi, qword [rsp + 8]	       279	strbuf.h	FUNCTION_165	CALL_2
0x4002673	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       279	strbuf.h	FUNCTION_165	CALL_2
0x4002678	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_165	CALL_2
0x400267b	      0xe800000000	                          call 0x4002680	       279	strbuf.h	FUNCTION_165	CALL_2
0x4002680	        0x488b5b08	                mov rbx, qword [rbx + 8]	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002684	          0x4885db	                           test rbx, rbx	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002687	     0xf84f3020000	                            je 0x4002980	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x400268d	        0x49395d30	            cmp qword [r13 + 0x30], rbx 	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002691	          0x488b0b	                    mov rcx, qword [rbx]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002694	            0x74c2	                            je 0x4002658	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002696	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400269b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_162
0x400269e	     0xf85cc010000	                           jne 0x4002870	       141	strbuf.h	FUNCTION_162
0x40026a4	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       228	strbuf.h	FUNCTION_164	CALL_2
0x40026a9	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_164	CALL_2
0x40026ae	      0x48894c2408	                mov qword [rsp + 8], rcx	       228	strbuf.h	FUNCTION_164	CALL_2
0x40026b3	      0xe800000000	                          call 0x40026b8	       228	strbuf.h	FUNCTION_164	CALL_2
0x40026b8	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       228	strbuf.h	FUNCTION_164	CALL_2
0x40026bd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_164	CALL_2
0x40026c2	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_164
0x40026c6	      0x4889442438	             mov qword [rsp + 0x38], rax	       229	strbuf.h	FUNCTION_164
0x40026cb	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       229	strbuf.h	FUNCTION_164
0x40026d0	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_164
0x40026d4	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       230	strbuf.h	FUNCTION_164
0x40026d9	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       230	strbuf.h	FUNCTION_164
0x40026de	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_164
0x40026e2	      0xe971ffffff	                           jmp 0x4002658	       230	strbuf.h	FUNCTION_164
0x40026e7	    0x660f1f840000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_164
0x40026f0	      0x410fb67d00	                   movzx edi, byte [r13]	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40026f5	          0x40d0ef	                              shr dil, 1	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40026f8	          0x83e707	                              and edi, 7	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40026fb	      0xe800000000	                          call 0x4002700	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002700	          0x498906	                    mov qword [r14], rax	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002703	      0xe9e8fdffff	                           jmp 0x40024f0	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002708	     0xf1f84000000	                   nop dword [rax + rax]	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002710	        0x4080fe04	                              cmp sil, 4	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002714	     0xf8546010000	                           jne 0x4002860	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400271a	            0x85c0	                           test eax, eax	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400271c	     0xf8eae010000	                           jle 0x40028d0	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002722	            0x85ed	                           test ebp, ebp	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002724	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002729	        0x410f95c6	                              setne r14b	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400272d	          0x4531e4	                          xor r12d, r12d	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002730	            0x31db	                            xor ebx, ebx	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002732	            0xeb1b	                           jmp 0x400274f	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002734	         0xf1f4000	                         nop dword [rax]	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002738	          0x83c301	                              add ebx, 1	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400273b	        0x4983c460	                           add r12, 0x60	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400273f	        0x4983c720	                           add r15, 0x20	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002743	    0x3b1d00000000	            cmp ebx, dword [0x04002749] 	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002749	     0xf8d81010000	                           jge 0x40028d0	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400274f	    0x488b05000000	            mov rax, qword [0x04002756] 	       862	ref-filter.c	FUNCTION_34	FOR_1
0x4002756	        0x4a8b0420	              mov rax, qword [rax + r12]	       862	ref-filter.c	FUNCTION_34	FOR_1
0x400275a	          0x80382a	                    cmp byte [rax], 0x2a	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x400275d	           0xf94c2	                                 sete dl	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4002760	          0x4438f2	                            cmp dl, r14b	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4002763	            0x75d3	                           jne 0x4002738	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4002765	          0x83fd01	                              cmp ebp, 1	       867	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x4002768	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	       867	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x400276c	          0x803874	                    cmp byte [rax], 0x74	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x400276f	     0xf851b010000	                           jne 0x4002890	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4002775	        0x80780161	                cmp byte [rax + 1], 0x61	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4002779	     0xf8511010000	                           jne 0x4002890	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x400277f	        0x80780267	                cmp byte [rax + 2], 0x67	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4002783	     0xf8507010000	                           jne 0x4002890	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4002789	        0x80780300	                   cmp byte [rax + 3], 0	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x400278d	     0xf85fd000000	                           jne 0x4002890	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4002793	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x4002797	          0x498907	                    mov qword [r15], rax	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x400279a	            0xeb9c	                           jmp 0x4002738	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x400279c	         0xf1f4000	                         nop dword [rax]	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x40027a0	        0x4d897e10	             mov qword [r14 + 0x10], r15	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x40027a4	          0x4c89fe	                            mov rsi, r15	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40027a7	      0xbf00000000	                              mov edi, 0	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40027ac	            0x31c0	                            xor eax, eax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40027ae	      0xe800000000	                          call 0x40027b3	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40027b3	          0x498906	                    mov qword [r14], rax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40027b6	      0xe935fdffff	                           jmp 0x40024f0	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40027bb	       0xf1f440000	                   nop dword [rax + rax]	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40027c0	          0x4889df	                            mov rdi, rbx	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40027c3	    0x49c706000000	                      mov qword [r14], 0	       809	ref-filter.c	FUNCTION_31	ELSE_1
0x40027ca	      0xe800000000	                          call 0x40027cf	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40027cf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x40027d4	          0x4889c3	                            mov rbx, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40027d7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x40027dc	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x40027de	      0xe800000000	                          call 0x40027e3	        54	gettext.h	FUNCTION_120
0x40027e3	      0x4d8d442438	                    lea r8, [r12 + 0x38]	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40027e8	          0x4889c2	                            mov rdx, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40027eb	          0x4889d9	                            mov rcx, rbx	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40027ee	      0xbeffffffff	                     mov esi, 0xffffffff	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40027f3	          0x4c89ff	                            mov rdi, r15	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40027f6	            0x31c0	                            xor eax, eax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40027f8	      0xe823eaffff	   call sym.strbuf_addf_ret.constprop.38	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40027fd	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4002801	            0x85d2	                           test edx, edx	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4002803	            0x7510	                           jne 0x4002815	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4002805	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x400280a	          0x890424	                    mov dword [rsp], eax	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x400280d	      0xe800000000	                          call 0x4002812	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x4002812	          0x8b0424	                    mov eax, dword [rsp]	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x4002815	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1452	ref-filter.c	FUNCTION_56
0x400281a	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1452	ref-filter.c	FUNCTION_56
0x4002823	     0xf85fe010000	                           jne 0x4002a27	      1452	ref-filter.c	FUNCTION_56
0x4002829	        0x4883c458	                           add rsp, 0x58	      1452	ref-filter.c	FUNCTION_56
0x400282d	              0x5b	                                 pop rbx	      1452	ref-filter.c	FUNCTION_56
0x400282e	              0x5d	                                 pop rbp	      1452	ref-filter.c	FUNCTION_56
0x400282f	            0x415c	                                 pop r12	      1452	ref-filter.c	FUNCTION_56
0x4002831	            0x415d	                                 pop r13	      1452	ref-filter.c	FUNCTION_56
0x4002833	            0x415e	                                 pop r14	      1452	ref-filter.c	FUNCTION_56
0x4002835	            0x415f	                                 pop r15	      1452	ref-filter.c	FUNCTION_56
0x4002837	              0xc3	                                     ret	      1452	ref-filter.c	FUNCTION_56
0x4002838	      0x410fb67500	                   movzx esi, byte [r13]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400283d	          0x40d0ee	                              shr sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002840	          0x83e607	                              and esi, 7	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002843	        0x4080fe03	                              cmp sil, 3	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002847	            0x777f	                            ja 0x40028c8	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002849	        0x4080fe02	                              cmp sil, 2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400284d	     0xf83ad000000	                           jae 0x4002900	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002853	        0x4080fe01	                              cmp sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002857	     0xf84b3000000	                            je 0x4002910	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400285d	           0xf1f00	                         nop dword [rax]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002860	        0x400fb6f6	                          movzx esi, sil	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4002864	      0xbf00000000	                              mov edi, 0	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4002869	            0x31c0	                            xor eax, eax	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x400286b	      0xe800000000	                          call 0x4002870	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4002870	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       141	strbuf.h	FUNCTION_162
0x4002875	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_164	IF_1	CALL_1
0x4002879	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_164	IF_1	CALL_1
0x400287c	     0xf8540feffff	                           jne 0x40026c2	       227	strbuf.h	FUNCTION_164	IF_1	CALL_1
0x4002882	      0xe91dfeffff	                           jmp 0x40026a4	       227	strbuf.h	FUNCTION_164	IF_1	CALL_1
0x4002887	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_164	IF_1	CALL_1
0x4002890	      0xbf00000000	                              mov edi, 0	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x4002895	      0xb905000000	                              mov ecx, 5	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x400289a	          0x4889c6	                            mov rsi, rax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x400289d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x400289f	     0xf85fb000000	                           jne 0x40029a0	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40028a5	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40028a9	          0x4885c0	                           test rax, rax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40028ac	     0xf8486feffff	                            je 0x4002738	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40028b2	           0xfb638	                   movzx edi, byte [rax]	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40028b5	          0x40d0ef	                              shr dil, 1	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40028b8	          0x83e707	                              and edi, 7	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40028bb	      0xe800000000	                          call 0x40028c0	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40028c0	          0x498907	                    mov qword [r15], rax	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40028c3	      0xe970feffff	                           jmp 0x4002738	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40028c8	        0x4080fe04	                              cmp sil, 4	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40028cc	            0x7592	                           jne 0x4002860	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40028ce	            0x6690	                                     nop	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40028d0	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x40028d5	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x40028da	            0x89ee	                            mov esi, ebp	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x40028dc	          0x4c89fa	                            mov rdx, r15	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x40028df	          0x4889df	                            mov rdi, rbx	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x40028e2	      0xe829e4ffff	 call sym.grab_sub_body_contents.isra.29	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x40028e7	          0x4c89f9	                            mov rcx, r15	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x40028ea	            0x89ea	                            mov edx, ebp	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x40028ec	          0x4889de	                            mov rsi, rbx	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x40028ef	      0xbf00000000	                              mov edi, 0	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x40028f4	      0xe8e7e9ffff	            call sym.grab_person.isra.31	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x40028f9	            0x31c0	                            xor eax, eax	      1438	ref-filter.c	FUNCTION_56
0x40028fb	      0xe9fdfeffff	                           jmp 0x40027fd	      1438	ref-filter.c	FUNCTION_56
0x4002900	            0x31c0	                            xor eax, eax	      1438	ref-filter.c	FUNCTION_56
0x4002902	      0xe9f6feffff	                           jmp 0x40027fd	      1438	ref-filter.c	FUNCTION_56
0x4002907	    0x660f1f840000	                    nop word [rax + rax]	      1438	ref-filter.c	FUNCTION_56
0x4002910	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4002915	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400291a	            0x89ee	                            mov esi, ebp	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400291c	          0x4c89fa	                            mov rdx, r15	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400291f	          0x4889df	                            mov rdi, rbx	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4002922	      0xe8e9e3ffff	 call sym.grab_sub_body_contents.isra.29	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4002927	          0x4c89f9	                            mov rcx, r15	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x400292a	            0x89ea	                            mov edx, ebp	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x400292c	          0x4889de	                            mov rsi, rbx	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x400292f	      0xbf00000000	                              mov edi, 0	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x4002934	      0xe8a7e9ffff	            call sym.grab_person.isra.31	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x4002939	          0x4c89f9	                            mov rcx, r15	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x400293c	            0x89ea	                            mov edx, ebp	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x400293e	          0x4889de	                            mov rsi, rbx	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4002941	      0xbf00000000	                              mov edi, 0	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4002946	      0xe895e9ffff	            call sym.grab_person.isra.31	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x400294b	            0x31c0	                            xor eax, eax	      1438	ref-filter.c	FUNCTION_56
0x400294d	      0xe9abfeffff	                           jmp 0x40027fd	      1438	ref-filter.c	FUNCTION_56
0x4002952	    0x660f1f440000	                    nop word [rax + rax]	      1438	ref-filter.c	FUNCTION_56
0x4002958	          0x4c89ef	                            mov rdi, r13	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x400295b	      0xe800000000	                          call 0x4002960	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002960	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002963	      0xe800000000	                          call 0x4002968	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002968	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x400296b	      0xe800000000	                          call 0x4002970	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002970	        0x488b3c24	                    mov rdi, qword [rsp]	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002974	          0x488907	                    mov qword [rdi], rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002977	      0xe93cfcffff	                           jmp 0x40025b8	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x400297c	         0xf1f4000	                         nop dword [rax]	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002980	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002985	            0x31f6	                            xor esi, esi	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002987	      0xe800000000	                          call 0x400298c	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x400298c	        0x488b3c24	                    mov rdi, qword [rsp]	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002990	          0x488907	                    mov qword [rdi], rax	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002993	      0xe920fcffff	                           jmp 0x40025b8	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002998	     0xf1f84000000	                   nop dword [rax + rax]	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x40029a0	      0xbf00000000	                              mov edi, 0	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40029a5	      0xb907000000	                              mov ecx, 7	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40029aa	          0x4889c6	                            mov rsi, rax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40029ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40029af	     0xf8583fdffff	                           jne 0x4002738	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40029b5	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40029b9	          0x4885c0	                           test rax, rax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40029bc	     0xf8476fdffff	                            je 0x4002738	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40029c2	        0x488d7804	                      lea rdi, [rax + 4]	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40029c6	      0xe800000000	                          call 0x40029cb	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40029cb	          0x4889c7	                            mov rdi, rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40029ce	      0xe800000000	                          call 0x40029d3	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40029d3	          0x498907	                    mov qword [r15], rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40029d6	      0xe95dfdffff	                           jmp 0x4002738	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40029db	       0xf1f440000	                   nop dword [rax + rax]	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40029e0	          0x4889df	                            mov rdi, rbx	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40029e3	      0xe800000000	                          call 0x40029e8	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40029e8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x40029ed	          0x4889c3	                            mov rbx, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40029f0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x40029f5	      0xe9e2fdffff	                           jmp 0x40027dc	        54	gettext.h	FUNCTION_120
0x40029fa	    0x660f1f440000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_120
0x4002a00	        0x498b7d30	            mov rdi, qword [r13 + 0x30] 	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002a04	      0xe800000000	                          call 0x4002a09	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002a09	        0x488b1c24	                    mov rbx, qword [rsp]	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002a0d	            0x89c6	                            mov esi, eax	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002a0f	      0xbf00000000	                              mov edi, 0	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4002a14	            0x31c0	                            xor eax, eax	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4002a16	        0x48897310	             mov qword [rbx + 0x10], rsi	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002a1a	      0xe800000000	                          call 0x4002a1f	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4002a1f	          0x488903	                    mov qword [rbx], rax	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4002a22	      0xe991fbffff	                           jmp 0x40025b8	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4002a27	      0xe800000000	                          call 0x4002a2c	      1452	ref-filter.c	FUNCTION_56
append_atom	IF,1:functions,0:SWITCH,0:CALL,2:DO,0:WHILE,0:ELSE,1:FOR,0	29
0x4000490	              0x55	                                push rbp	       543	ref-filter.c	FUNCTION_18
0x4000491	              0x53	                                push rbx	       543	ref-filter.c	FUNCTION_18
0x4000492	        0x4883ec08	                              sub rsp, 8	       543	ref-filter.c	FUNCTION_18
0x4000496	        0x488b5e08	                mov rbx, qword [rsi + 8]	       550	ref-filter.c	FUNCTION_18	IF_1
0x400049a	        0x48833b00	                      cmp qword [rbx], 0	       550	ref-filter.c	FUNCTION_18	IF_1
0x400049e	            0x7428	                            je 0x40004c8	       550	ref-filter.c	FUNCTION_18	IF_1
0x40004a0	          0x488b2f	                    mov rbp, qword [rdi]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x40004a3	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_165	CALL_2
0x40004a6	      0xe800000000	                          call 0x40004ab	       279	strbuf.h	FUNCTION_165	CALL_2
0x40004ab	        0x488d7b08	                      lea rdi, [rbx + 8]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x40004af	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_165	CALL_2
0x40004b2	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_165	CALL_2
0x40004b5	      0xe800000000	                          call 0x40004ba	       279	strbuf.h	FUNCTION_165	CALL_2
0x40004ba	        0x4883c408	                              add rsp, 8	       555	ref-filter.c	FUNCTION_18
0x40004be	            0x31c0	                            xor eax, eax	       555	ref-filter.c	FUNCTION_18
0x40004c0	              0x5b	                                 pop rbx	       555	ref-filter.c	FUNCTION_18
0x40004c1	              0x5d	                                 pop rbp	       555	ref-filter.c	FUNCTION_18
0x40004c2	              0xc3	                                     ret	       555	ref-filter.c	FUNCTION_18
0x40004c3	       0xf1f440000	                   nop dword [rax + rax]	       555	ref-filter.c	FUNCTION_18
0x40004c8	            0x8b16	                    mov edx, dword [rsi]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40004ca	          0x488b37	                    mov rsi, qword [rdi]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40004cd	        0x4883c308	                              add rbx, 8	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40004d1	          0x4889df	                            mov rdi, rbx	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40004d4	      0xe857ffffff	               call sym.quote_formatting	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40004d9	        0x4883c408	                              add rsp, 8	       555	ref-filter.c	FUNCTION_18
0x40004dd	            0x31c0	                            xor eax, eax	       555	ref-filter.c	FUNCTION_18
0x40004df	              0x5b	                                 pop rbx	       555	ref-filter.c	FUNCTION_18
0x40004e0	              0x5d	                                 pop rbp	       555	ref-filter.c	FUNCTION_18
0x40004e1	              0xc3	                                     ret	       555	ref-filter.c	FUNCTION_18
else_atom_handler	IF,4:functions,0:SWITCH,0:CALL,7:DO,0:WHILE,0:ELSE,0:FOR,0	51
0x4002dd0	            0x4154	                                push r12	       696	ref-filter.c	FUNCTION_27
0x4002dd2	              0x55	                                push rbp	       696	ref-filter.c	FUNCTION_27
0x4002dd3	          0x4989d4	                            mov r12, rdx	       696	ref-filter.c	FUNCTION_27
0x4002dd6	              0x53	                                push rbx	       696	ref-filter.c	FUNCTION_27
0x4002dd7	        0x488b5e08	                mov rbx, qword [rsi + 8]	       697	ref-filter.c	FUNCTION_27
0x4002ddb	    0x48817b200000	               cmp qword [rbx + 0x20], 0	       700	ref-filter.c	FUNCTION_27	IF_1
0x4002de3	            0x742b	                            je 0x4002e10	       700	ref-filter.c	FUNCTION_27	IF_1
0x4002de5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4002dea	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4002def	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4002df1	      0xe800000000	                          call 0x4002df6	        54	gettext.h	FUNCTION_120
0x4002df6	              0x5b	                                 pop rbx	       713	ref-filter.c	FUNCTION_27
0x4002df7	          0x4c89e7	                            mov rdi, r12	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4002dfa	          0x4889c2	                            mov rdx, rax	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4002dfd	      0xbeffffffff	                     mov esi, 0xffffffff	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4002e02	              0x5d	                                 pop rbp	       713	ref-filter.c	FUNCTION_27
0x4002e03	            0x415c	                                 pop r12	       713	ref-filter.c	FUNCTION_27
0x4002e05	            0x31c0	                            xor eax, eax	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4002e07	      0xe914e4ffff	    jmp sym.strbuf_addf_ret.constprop.38	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4002e0c	         0xf1f4000	                         nop dword [rax]	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4002e10	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       701	ref-filter.c	FUNCTION_27	IF_1
0x4002e14	          0x4885d2	                           test rdx, rdx	       702	ref-filter.c	FUNCTION_27	IF_2
0x4002e17	            0x74cc	                            je 0x4002de5	       702	ref-filter.c	FUNCTION_27	IF_2
0x4002e19	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	       704	ref-filter.c	FUNCTION_27	IF_3
0x4002e1d	            0xa801	                              test al, 1	       704	ref-filter.c	FUNCTION_27	IF_3
0x4002e1f	            0x7447	                            je 0x4002e68	       704	ref-filter.c	FUNCTION_27	IF_3
0x4002e21	            0xa802	                              test al, 2	       706	ref-filter.c	FUNCTION_27	IF_4
0x4002e23	            0x7533	                           jne 0x4002e58	       706	ref-filter.c	FUNCTION_27	IF_4
0x4002e25	          0x83c802	                               or eax, 2	       708	ref-filter.c	FUNCTION_27
0x4002e28	        0x488d7e08	                      lea rdi, [rsi + 8]	       709	ref-filter.c	FUNCTION_27	CALL_7
0x4002e2c	          0x4889f5	                            mov rbp, rsi	       709	ref-filter.c	FUNCTION_27	CALL_7
0x4002e2f	          0x884210	               mov byte [rdx + 0x10], al	       708	ref-filter.c	FUNCTION_27
0x4002e32	      0xe8a9d3ffff	             call sym.push_stack_element	       709	ref-filter.c	FUNCTION_27	CALL_7
0x4002e37	        0x488b4508	                mov rax, qword [rbp + 8]	       710	ref-filter.c	FUNCTION_27
0x4002e3b	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       710	ref-filter.c	FUNCTION_27
0x4002e3f	        0x48895028	             mov qword [rax + 0x28], rdx	       710	ref-filter.c	FUNCTION_27
0x4002e43	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       711	ref-filter.c	FUNCTION_27
0x4002e47	        0x48895020	             mov qword [rax + 0x20], rdx	       711	ref-filter.c	FUNCTION_27
0x4002e4b	            0x31c0	                            xor eax, eax	       713	ref-filter.c	FUNCTION_27
0x4002e4d	              0x5b	                                 pop rbx	       713	ref-filter.c	FUNCTION_27
0x4002e4e	              0x5d	                                 pop rbp	       713	ref-filter.c	FUNCTION_27
0x4002e4f	            0x415c	                                 pop r12	       713	ref-filter.c	FUNCTION_27
0x4002e51	              0xc3	                                     ret	       713	ref-filter.c	FUNCTION_27
0x4002e52	    0x660f1f440000	                    nop word [rax + rax]	       713	ref-filter.c	FUNCTION_27
0x4002e58	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4002e5d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4002e62	            0xeb8b	                           jmp 0x4002def	        54	gettext.h	FUNCTION_120
0x4002e64	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_120
0x4002e68	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4002e6d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4002e72	      0xe978ffffff	                           jmp 0x4002def	        54	gettext.h	FUNCTION_120
verify_ref_format	IF,4:functions,0:SWITCH,0:CALL,9:DO,0:WHILE,0:ELSE,0:FOR,1	113
0x4003850	            0x4154	                                push r12	       769	ref-filter.c	FUNCTION_30
0x4003852	              0x55	                                push rbp	       769	ref-filter.c	FUNCTION_30
0x4003853	          0x4889fd	                            mov rbp, rdi	       769	ref-filter.c	FUNCTION_30
0x4003856	              0x53	                                push rbx	       769	ref-filter.c	FUNCTION_30
0x4003857	        0x4883ec20	                           sub rsp, 0x20	       769	ref-filter.c	FUNCTION_30
0x400385b	          0x488b1f	                    mov rbx, qword [rdi]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x400385e	    0xc74710000000	               mov dword [rdi + 0x10], 0	       772	ref-filter.c	FUNCTION_30
0x4003865	    0x64488b042528	                mov rax, qword fs:[0x28]	       769	ref-filter.c	FUNCTION_30
0x400386e	      0x4889442418	             mov qword [rsp + 0x18], rax	       769	ref-filter.c	FUNCTION_30
0x4003873	            0x31c0	                            xor eax, eax	       769	ref-filter.c	FUNCTION_30
0x4003875	           0xfb603	                   movzx eax, byte [rbx]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003878	            0x84c0	                             test al, al	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x400387a	            0x750c	                           jne 0x4003888	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x400387c	            0xeb3d	                           jmp 0x40038bb	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x400387e	            0x6690	                                     nop	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003880	        0x4883c301	                              add rbx, 1	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x4003884	            0x84c0	                             test al, al	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4003886	            0x7428	                            je 0x40038b0	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4003888	            0x3c25	                            cmp al, 0x25	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x400388a	         0xfb64301	               movzx eax, byte [rbx + 1]	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x400388e	            0x75f0	                           jne 0x4003880	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x4003890	            0x3c28	                            cmp al, 0x28	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4003892	            0x744c	                            je 0x40038e0	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4003894	            0x3c25	                            cmp al, 0x25	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4003896	            0x75e8	                           jne 0x4003880	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4003898	         0xfb64302	               movzx eax, byte [rbx + 2]	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x400389c	        0x4883c301	                              add rbx, 1	       756	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x40038a0	        0x4883c301	                              add rbx, 1	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x40038a4	            0x84c0	                             test al, al	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x40038a6	            0x75e0	                           jne 0x4003888	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x40038a8	     0xf1f84000000	                   nop dword [rax + rax]	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x40038b0	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x40038b3	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x40038b5	     0xf85e5000000	                           jne 0x40039a0	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x40038bb	            0x31c0	                            xor eax, eax	       792	ref-filter.c	FUNCTION_30
0x40038bd	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       793	ref-filter.c	FUNCTION_30
0x40038c2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       793	ref-filter.c	FUNCTION_30
0x40038cb	     0xf8529010000	                           jne 0x40039fa	       793	ref-filter.c	FUNCTION_30
0x40038d1	        0x4883c420	                           add rsp, 0x20	       793	ref-filter.c	FUNCTION_30
0x40038d5	              0x5b	                                 pop rbx	       793	ref-filter.c	FUNCTION_30
0x40038d6	              0x5d	                                 pop rbp	       793	ref-filter.c	FUNCTION_30
0x40038d7	            0x415c	                                 pop r12	       793	ref-filter.c	FUNCTION_30
0x40038d9	              0xc3	                                     ret	       793	ref-filter.c	FUNCTION_30
0x40038da	    0x660f1f440000	                    nop word [rax + rax]	       793	ref-filter.c	FUNCTION_30
0x40038e0	      0xbe29000000	                           mov esi, 0x29	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40038e5	          0x4889df	                            mov rdi, rbx	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40038e8	    0x48c704240000	                      mov qword [rsp], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x40038f0	    0x48c744240800	                  mov qword [rsp + 8], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x40038f9	    0x48c744241000	               mov qword [rsp + 0x10], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x4003902	      0xe800000000	                          call 0x4003907	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x4003907	          0x4885c0	                           test rax, rax	       778	ref-filter.c	FUNCTION_30	FOR_1	IF_1
0x400390a	          0x4989c4	                            mov r12, rax	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x400390d	     0xf84ae000000	                            je 0x40039c1	       778	ref-filter.c	FUNCTION_30	FOR_1	IF_1
0x4003913	        0x488d7302	                      lea rsi, [rbx + 2]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003917	          0x4889e1	                            mov rcx, rsp	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x400391a	          0x4c89e2	                            mov rdx, r12	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x400391d	          0x4889ef	                            mov rdi, rbp	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003920	      0xe80bf1ffff	          call sym.parse_ref_filter_atom	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003925	            0x85c0	                           test eax, eax	       782	ref-filter.c	FUNCTION_30	FOR_1	IF_2
0x4003927	     0xf88bc000000	                            js 0x40039e9	       782	ref-filter.c	FUNCTION_30	FOR_1	IF_2
0x400392d	            0x4898	                                    cdqe	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400392f	      0x498d5c2401	                      lea rbx, [r12 + 1]	       784	ref-filter.c	FUNCTION_30	FOR_1
0x4003934	        0x488d0440	                  lea rax, [rax + rax*2]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003938	        0x48c1e005	                              shl rax, 5	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400393c	    0x480305000000	             add rax, qword [0x04003943]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003943	          0x488b30	                    mov rsi, qword [rax]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003946	      0xb800000000	                              mov eax, 0	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400394b	            0xeb10	                           jmp 0x400395d	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400394d	           0xf1f00	                         nop dword [rax]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003950	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003954	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4003958	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400395b	            0x751c	                           jne 0x4003979	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400395d	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003960	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003962	            0x75ec	                           jne 0x4003950	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4003964	      0xbf00000000	                              mov edi, 0	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003969	      0xb906000000	                              mov ecx, 6	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x400396e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003970	           0xf95c0	                                setne al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003973	           0xfb6c0	                           movzx eax, al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003976	          0x894510	            mov dword [rbp + 0x10], eax 	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003979	          0x4889e7	                            mov rdi, rsp	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x400397c	      0xe800000000	                          call 0x4003981	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x4003981	    0x410fb6442401	               movzx eax, byte [r12 + 1]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003987	            0x84c0	                             test al, al	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4003989	     0xf85f9feffff	                           jne 0x4003888	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x400398f	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003992	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003994	     0xf8421ffffff	                            je 0x40038bb	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x400399a	    0x660f1f440000	                    nop word [rax + rax]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x40039a0	          0x8b750c	              mov esi, dword [rbp + 0xc]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x40039a3	      0xbf01000000	                              mov edi, 1	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x40039a8	      0xe800000000	                          call 0x40039ad	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x40039ad	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x40039af	     0xf8506ffffff	                           jne 0x40038bb	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x40039b5	    0xc74510000000	               mov dword [rbp + 0x10], 0	       791	ref-filter.c	FUNCTION_30	IF_4
0x40039bc	      0xe9fcfeffff	                           jmp 0x40038bd	       791	ref-filter.c	FUNCTION_30	IF_4
0x40039c1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x40039c6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x40039cb	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x40039cd	      0xe800000000	                          call 0x40039d2	        54	gettext.h	FUNCTION_120
0x40039d2	          0x4889de	                            mov rsi, rbx	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x40039d5	          0x4889c7	                            mov rdi, rax	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x40039d8	            0x31c0	                            xor eax, eax	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x40039da	      0xe800000000	                          call 0x40039df	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x40039df	      0xb8ffffffff	                     mov eax, 0xffffffff	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x40039e4	      0xe9d4feffff	                           jmp 0x40038bd	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x40039e9	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x40039ee	      0xbf00000000	                              mov edi, 0	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x40039f3	            0x31c0	                            xor eax, eax	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x40039f5	      0xe800000000	                          call 0x40039fa	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x40039fa	      0xe800000000	                          call 0x40039ff	       793	ref-filter.c	FUNCTION_30
get_head_description	IF,5:functions,0:SWITCH,0:CALL,18:DO,0:WHILE,0:ELSE,5:FOR,0	89
0x4003a00	              0x55	                                push rbp	      1379	ref-filter.c	FUNCTION_53
0x4003a01	              0x53	                                push rbx	      1379	ref-filter.c	FUNCTION_53
0x4003a02	      0xb910000000	                           mov ecx, 0x10	        90	string3.h	FUNCTION_125	CALL_6
0x4003a07	      0xbe01000000	                              mov esi, 1	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003a0c	    0x4881ecb80000	                           sub rsp, 0xb8	      1379	ref-filter.c	FUNCTION_53
0x4003a13	      0x488d542420	                   lea rdx, [rsp + 0x20]	        90	string3.h	FUNCTION_125	CALL_6
0x4003a18	    0x48c704240000	                      mov qword [rsp], 0	      1380	ref-filter.c	FUNCTION_53
0x4003a20	    0x48c744240800	                  mov qword [rsp + 8], 0	      1380	ref-filter.c	FUNCTION_53
0x4003a29	    0x64488b042528	                mov rax, qword fs:[0x28]	      1379	ref-filter.c	FUNCTION_53
0x4003a32	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      1379	ref-filter.c	FUNCTION_53
0x4003a3a	            0x31c0	                            xor eax, eax	      1379	ref-filter.c	FUNCTION_53
0x4003a3c	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_125	CALL_6
0x4003a3f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1380	ref-filter.c	FUNCTION_53
0x4003a48	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_125	CALL_6
0x4003a4b	          0x4889d7	                            mov rdi, rdx	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003a4e	      0xe800000000	                          call 0x4003a53	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003a53	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003a57	            0x85f6	                           test esi, esi	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003a59	            0x7508	                           jne 0x4003a63	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003a5b	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003a5f	            0x85c9	                           test ecx, ecx	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003a61	            0x747d	                            je 0x4003ae0	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003a63	      0x488b6c2448	            mov rbp, qword [rsp + 0x48] 	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x4003a68	          0x4885ed	                           test rbp, rbp	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x4003a6b	     0xf84bf000000	                            je 0x4003b30	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x4003a71	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4003a76	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4003a7b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4003a7d	          0x4889e3	                            mov rbx, rsp	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003a80	      0xe800000000	                          call 0x4003a85	        54	gettext.h	FUNCTION_120
0x4003a85	          0x4889ea	                            mov rdx, rbp	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003a88	          0x4889c6	                            mov rsi, rax	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003a8b	          0x4889e7	                            mov rdi, rsp	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003a8e	            0x31c0	                            xor eax, eax	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003a90	      0xe800000000	                          call 0x4003a95	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003a95	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x4003a9a	      0xe800000000	                          call 0x4003a9f	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x4003a9f	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x4003aa4	      0xe800000000	                          call 0x4003aa9	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x4003aa9	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x4003aae	      0xe800000000	                          call 0x4003ab3	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x4003ab3	            0x31f6	                            xor esi, esi	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4003ab5	          0x4889df	                            mov rdi, rbx	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4003ab8	      0xe800000000	                          call 0x4003abd	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4003abd	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      1417	ref-filter.c	FUNCTION_53
0x4003ac5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1417	ref-filter.c	FUNCTION_53
0x4003ace	     0xf85a1000000	                           jne 0x4003b75	      1417	ref-filter.c	FUNCTION_53
0x4003ad4	    0x4881c4b80000	                           add rsp, 0xb8	      1417	ref-filter.c	FUNCTION_53
0x4003adb	              0x5b	                                 pop rbx	      1417	ref-filter.c	FUNCTION_53
0x4003adc	              0x5d	                                 pop rbp	      1417	ref-filter.c	FUNCTION_53
0x4003add	              0xc3	                                     ret	      1417	ref-filter.c	FUNCTION_53
0x4003ade	            0x6690	                                     nop	      1417	ref-filter.c	FUNCTION_53
0x4003ae0	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4003ae4	            0x85d2	                           test edx, edx	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4003ae6	            0x7530	                           jne 0x4003b18	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4003ae8	      0x488b6c2458	            mov rbp, qword [rsp + 0x58] 	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x4003aed	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4003af2	          0x4885ed	                           test rbp, rbp	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x4003af5	            0x7451	                            je 0x4003b48	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x4003af7	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4003afb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4003b00	            0x85c0	                           test eax, eax	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4003b02	     0xf8573ffffff	                           jne 0x4003a7b	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4003b08	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4003b0d	      0xe969ffffff	                           jmp 0x4003a7b	        54	gettext.h	FUNCTION_120
0x4003b12	    0x660f1f440000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_120
0x4003b18	      0x488b6c2448	            mov rbp, qword [rsp + 0x48] 	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4003b1d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4003b22	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4003b27	      0xe94fffffff	                           jmp 0x4003a7b	        54	gettext.h	FUNCTION_120
0x4003b2c	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_120
0x4003b30	      0x488b6c2458	            mov rbp, qword [rsp + 0x58] 	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003b35	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4003b3a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4003b3f	      0xe937ffffff	                           jmp 0x4003a7b	        54	gettext.h	FUNCTION_120
0x4003b44	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_120
0x4003b48	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4003b4d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4003b4f	          0x4889e3	                            mov rbx, rsp	       279	strbuf.h	FUNCTION_165	CALL_2
0x4003b52	      0xe800000000	                          call 0x4003b57	        54	gettext.h	FUNCTION_120
0x4003b57	          0x4889c5	                            mov rbp, rax	        54	gettext.h	FUNCTION_120
0x4003b5a	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_165	CALL_2
0x4003b5d	      0xe800000000	                          call 0x4003b62	       279	strbuf.h	FUNCTION_165	CALL_2
0x4003b62	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_165	CALL_2
0x4003b65	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_165	CALL_2
0x4003b68	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_165	CALL_2
0x4003b6b	      0xe800000000	                          call 0x4003b70	       279	strbuf.h	FUNCTION_165	CALL_2
0x4003b70	      0xe920ffffff	                           jmp 0x4003a95	       279	strbuf.h	FUNCTION_165	CALL_2
0x4003b75	      0xe800000000	                          call 0x4003b7a	      1417	ref-filter.c	FUNCTION_53
pop_stack_element	IF,1:functions,0:SWITCH,0:CALL,3:DO,0:WHILE,0:ELSE,0:FOR,0	25
0x4000190	            0x4155	                                push r13	       567	ref-filter.c	FUNCTION_20
0x4000192	            0x4154	                                push r12	       567	ref-filter.c	FUNCTION_20
0x4000194	          0x4989fc	                            mov r12, rdi	       567	ref-filter.c	FUNCTION_20
0x4000197	              0x55	                                push rbp	       567	ref-filter.c	FUNCTION_20
0x4000198	              0x53	                                push rbx	       567	ref-filter.c	FUNCTION_20
0x4000199	        0x4883ec08	                              sub rsp, 8	       567	ref-filter.c	FUNCTION_20
0x400019d	          0x488b1f	                    mov rbx, qword [rdi]	       568	ref-filter.c	FUNCTION_20
0x40001a0	          0x488b2b	                    mov rbp, qword [rbx]	       569	ref-filter.c	FUNCTION_20
0x40001a3	        0x4c8d6b08	                      lea r13, [rbx + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40001a7	          0x4885ed	                           test rbp, rbp	       571	ref-filter.c	FUNCTION_20	IF_1
0x40001aa	            0x740c	                            je 0x40001b8	       571	ref-filter.c	FUNCTION_20	IF_1
0x40001ac	        0x488d7d08	                      lea rdi, [rbp + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40001b0	          0x4c89ee	                            mov rsi, r13	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40001b3	      0xe800000000	                          call 0x40001b8	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40001b8	          0x4c89ef	                            mov rdi, r13	       573	ref-filter.c	FUNCTION_20	CALL_2
0x40001bb	      0xe800000000	                          call 0x40001c0	       573	ref-filter.c	FUNCTION_20	CALL_2
0x40001c0	          0x4889df	                            mov rdi, rbx	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40001c3	      0xe800000000	                          call 0x40001c8	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40001c8	        0x49892c24	                    mov qword [r12], rbp	       575	ref-filter.c	FUNCTION_20
0x40001cc	        0x4883c408	                              add rsp, 8	       576	ref-filter.c	FUNCTION_20
0x40001d0	              0x5b	                                 pop rbx	       576	ref-filter.c	FUNCTION_20
0x40001d1	              0x5d	                                 pop rbp	       576	ref-filter.c	FUNCTION_20
0x40001d2	            0x415c	                                 pop r12	       576	ref-filter.c	FUNCTION_20
0x40001d4	            0x415d	                                 pop r13	       576	ref-filter.c	FUNCTION_20
0x40001d6	              0xc3	                                     ret	       576	ref-filter.c	FUNCTION_20
format_ref_array_item	IF,6:functions,0:SWITCH,0:CALL,17:DO,0:WHILE,0:ELSE,0:FOR,1	137
0x4004b30	            0x4157	                                push r15	      2226	ref-filter.c	FUNCTION_83
0x4004b32	            0x4156	                                push r14	      2226	ref-filter.c	FUNCTION_83
0x4004b34	            0x4155	                                push r13	      2226	ref-filter.c	FUNCTION_83
0x4004b36	            0x4154	                                push r12	      2226	ref-filter.c	FUNCTION_83
0x4004b38	          0x4989fd	                            mov r13, rdi	      2226	ref-filter.c	FUNCTION_83
0x4004b3b	              0x55	                                push rbp	      2226	ref-filter.c	FUNCTION_83
0x4004b3c	              0x53	                                push rbx	      2226	ref-filter.c	FUNCTION_83
0x4004b3d	          0x4989f4	                            mov r12, rsi	      2226	ref-filter.c	FUNCTION_83
0x4004b40	          0x4889cd	                            mov rbp, rcx	      2226	ref-filter.c	FUNCTION_83
0x4004b43	        0x4883ec58	                           sub rsp, 0x58	      2226	ref-filter.c	FUNCTION_83
0x4004b47	    0x64488b042528	                mov rax, qword fs:[0x28]	      2226	ref-filter.c	FUNCTION_83
0x4004b50	      0x4889442448	             mov qword [rsp + 0x48], rax	      2226	ref-filter.c	FUNCTION_83
0x4004b55	            0x31c0	                            xor eax, eax	      2226	ref-filter.c	FUNCTION_83
0x4004b57	          0x8b4608	                mov eax, dword [rsi + 8]	      2230	ref-filter.c	FUNCTION_83
0x4004b5a	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x4004b5f	      0x4889542408	                mov qword [rsp + 8], rdx	      2226	ref-filter.c	FUNCTION_83
0x4004b64	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2228	ref-filter.c	FUNCTION_83
0x4004b6d	        0x89442410	             mov dword [rsp + 0x10], eax	      2230	ref-filter.c	FUNCTION_83
0x4004b71	      0xe86ab6ffff	             call sym.push_stack_element	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x4004b76	        0x4d8b3424	                    mov r14, qword [r12]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004b7a	        0x410fb606	                   movzx eax, byte [r14]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004b7e	            0x84c0	                             test al, al	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004b80	            0x7457	                            je 0x4004bd9	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004b82	    0x660f1f440000	                    nop word [rax + rax]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004b88	          0x4c89f3	                            mov rbx, r14	      2226	ref-filter.c	FUNCTION_83
0x4004b8b	            0xeb0b	                           jmp 0x4004b98	      2226	ref-filter.c	FUNCTION_83
0x4004b8d	           0xf1f00	                         nop dword [rax]	      2226	ref-filter.c	FUNCTION_83
0x4004b90	        0x4883c301	                              add rbx, 1	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x4004b94	            0x84c0	                             test al, al	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4004b96	            0x7428	                            je 0x4004bc0	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4004b98	            0x3c25	                            cmp al, 0x25	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x4004b9a	         0xfb64301	               movzx eax, byte [rbx + 1]	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4004b9e	            0x75f0	                           jne 0x4004b90	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x4004ba0	            0x3c28	                            cmp al, 0x28	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4004ba2	     0xf8488000000	                            je 0x4004c30	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4004ba8	            0x3c25	                            cmp al, 0x25	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4004baa	            0x75e4	                           jne 0x4004b90	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4004bac	         0xfb64302	               movzx eax, byte [rbx + 2]	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4004bb0	        0x4883c301	                              add rbx, 1	       756	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4004bb4	        0x4883c301	                              add rbx, 1	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x4004bb8	            0x84c0	                             test al, al	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4004bba	            0x75dc	                           jne 0x4004b98	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4004bbc	         0xf1f4000	                         nop dword [rax]	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4004bc0	          0x4c89f7	                            mov rdi, r14	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4004bc3	      0xe800000000	                          call 0x4004bc8	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4004bc8	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4004bcd	        0x498d3406	                    lea rsi, [r14 + rax]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4004bd1	          0x4c89f7	                            mov rdi, r14	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4004bd4	      0xe857ccffff	         call sym.append_literal.isra.27	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4004bd9	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4004bde	            0x85c0	                           test eax, eax	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4004be0	     0xf85c4000000	                           jne 0x4004caa	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4004be6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2259	ref-filter.c	FUNCTION_83	IF_6
0x4004beb	        0x48833800	                      cmp qword [rax], 0	      2259	ref-filter.c	FUNCTION_83	IF_6
0x4004bef	     0xf8420010000	                            je 0x4004d15	      2259	ref-filter.c	FUNCTION_83	IF_6
0x4004bf5	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x4004bfa	      0xe891b5ffff	              call sym.pop_stack_element	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x4004bff	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4004c01	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4004c06	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4004c0b	      0xe800000000	                          call 0x4004c10	        54	gettext.h	FUNCTION_120
0x4004c10	      0xbeffffffff	                     mov esi, 0xffffffff	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004c15	          0x4889c2	                            mov rdx, rax	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004c18	          0x4889ef	                            mov rdi, rbp	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004c1b	            0x31c0	                            xor eax, eax	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004c1d	      0xe8fec5ffff	   call sym.strbuf_addf_ret.constprop.38	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004c22	      0xe9b5000000	                           jmp 0x4004cdc	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004c27	    0x660f1f840000	                    nop word [rax + rax]	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004c30	      0xbe29000000	                           mov esi, 0x29	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x4004c35	          0x4889df	                            mov rdi, rbx	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x4004c38	      0xe800000000	                          call 0x4004c3d	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x4004c3d	          0x4939de	                            cmp r14, rbx	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x4004c40	          0x4989c7	                            mov r15, rax	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x4004c43	     0xf82b7000000	                            jb 0x4004d00	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x4004c49	        0x488d7302	                      lea rsi, [rbx + 2]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4004c4d	          0x4889e9	                            mov rcx, rbp	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4004c50	          0x4c89fa	                            mov rdx, r15	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4004c53	          0x4c89e7	                            mov rdi, r12	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4004c56	      0xe8d5ddffff	          call sym.parse_ref_filter_atom	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4004c5b	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c5d	            0x786e	                            js 0x4004ccd	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c5f	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c64	          0x4889e9	                            mov rcx, rbp	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c67	            0x89c6	                            mov esi, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c69	          0x4c89ef	                            mov rdi, r13	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c6c	      0xe89ff4ffff	             call sym.get_ref_atom_value	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c71	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c73	            0x7558	                           jne 0x4004ccd	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c75	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x4004c7a	          0x4889ea	                            mov rdx, rbp	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x4004c7d	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x4004c82	          0x4889c7	                            mov rdi, rax	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x4004c85	          0xff5008	                    call qword [rax + 8]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x4004c88	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c8a	            0x7541	                           jne 0x4004ccd	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4004c8c	      0x410fb64701	               movzx eax, byte [r15 + 1]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004c91	        0x4d8d7701	                      lea r14, [r15 + 1]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004c95	            0x84c0	                             test al, al	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004c97	     0xf85ebfeffff	                           jne 0x4004b88	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004c9d	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4004ca2	            0x85c0	                           test eax, eax	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4004ca4	     0xf843cffffff	                            je 0x4004be6	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4004caa	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004caf	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004cb4	          0x4889ea	                            mov rdx, rbp	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004cb7	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2253	ref-filter.c	FUNCTION_83	IF_4
0x4004cc0	      0xe8cbb7ffff	                    call sym.append_atom	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004cc5	            0x85c0	                           test eax, eax	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004cc7	     0xf8419ffffff	                            je 0x4004be6	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004ccd	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x4004cd2	      0xe8b9b4ffff	              call sym.pop_stack_element	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x4004cd7	      0xb8ffffffff	                     mov eax, 0xffffffff	      2256	ref-filter.c	FUNCTION_83	IF_4	IF_5
0x4004cdc	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2266	ref-filter.c	FUNCTION_83
0x4004ce1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2266	ref-filter.c	FUNCTION_83
0x4004cea	            0x7545	                           jne 0x4004d31	      2266	ref-filter.c	FUNCTION_83
0x4004cec	        0x4883c458	                           add rsp, 0x58	      2266	ref-filter.c	FUNCTION_83
0x4004cf0	              0x5b	                                 pop rbx	      2266	ref-filter.c	FUNCTION_83
0x4004cf1	              0x5d	                                 pop rbp	      2266	ref-filter.c	FUNCTION_83
0x4004cf2	            0x415c	                                 pop r12	      2266	ref-filter.c	FUNCTION_83
0x4004cf4	            0x415d	                                 pop r13	      2266	ref-filter.c	FUNCTION_83
0x4004cf6	            0x415e	                                 pop r14	      2266	ref-filter.c	FUNCTION_83
0x4004cf8	            0x415f	                                 pop r15	      2266	ref-filter.c	FUNCTION_83
0x4004cfa	              0xc3	                                     ret	      2266	ref-filter.c	FUNCTION_83
0x4004cfb	       0xf1f440000	                   nop dword [rax + rax]	      2266	ref-filter.c	FUNCTION_83
0x4004d00	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4004d05	          0x4889de	                            mov rsi, rbx	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4004d08	          0x4c89f7	                            mov rdi, r14	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4004d0b	      0xe820cbffff	         call sym.append_literal.isra.27	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4004d10	      0xe934ffffff	                           jmp 0x4004c49	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4004d15	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x4004d1a	        0x488d7008	                      lea rsi, [rax + 8]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x4004d1e	      0xe800000000	                          call 0x4004d23	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x4004d23	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x4004d28	      0xe863b4ffff	              call sym.pop_stack_element	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x4004d2d	            0x31c0	                            xor eax, eax	      2265	ref-filter.c	FUNCTION_83
0x4004d2f	            0xebab	                           jmp 0x4004cdc	      2265	ref-filter.c	FUNCTION_83
0x4004d31	      0xe800000000	                          call 0x4004d36	      2266	ref-filter.c	FUNCTION_83
ref_default_sorting	IF,0:functions,0:SWITCH,0:CALL,2:DO,0:WHILE,0:ELSE,0:FOR,0	12
0x4004e70	              0x53	                                push rbx	      2310	ref-filter.c	FUNCTION_87
0x4004e71	      0xbe10000000	                           mov esi, 0x10	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x4004e76	      0xbf01000000	                              mov edi, 1	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x4004e7b	      0xe800000000	                          call 0x4004e80	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x4004e80	      0xbf00000000	                              mov edi, 0	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x4004e85	          0x4889c3	                            mov rbx, rax	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x4004e88	    0x48c700000000	                      mov qword [rax], 0	      2315	ref-filter.c	FUNCTION_87
0x4004e8f	      0xe88cdeffff	             call sym.parse_sorting_atom	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x4004e94	          0x894308	                mov dword [rbx + 8], eax	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x4004e97	          0x4889d8	                            mov rax, rbx	      2318	ref-filter.c	FUNCTION_87
0x4004e9a	              0x5b	                                 pop rbx	      2318	ref-filter.c	FUNCTION_87
0x4004e9b	              0xc3	                                     ret	      2318	ref-filter.c	FUNCTION_87
pretty_print_ref	IF,0:functions,0:SWITCH,0:CALL,4:DO,0:WHILE,0:ELSE,0:FOR,0	28
0x4004e10	            0x4154	                                push r12	      2284	ref-filter.c	FUNCTION_85
0x4004e12	              0x55	                                push rbp	      2284	ref-filter.c	FUNCTION_85
0x4004e13	          0x4889fd	                            mov rbp, rdi	      2284	ref-filter.c	FUNCTION_85
0x4004e16	              0x53	                                push rbx	      2284	ref-filter.c	FUNCTION_85
0x4004e17	          0x4989d4	                            mov r12, rdx	      2284	ref-filter.c	FUNCTION_85
0x4004e1a	      0xe8e1b2ffff	             call sym.new_ref_array_item	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x4004e1f	      0xbf00000000	                              mov edi, 0	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004e24	      0xb905000000	                              mov ecx, 5	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004e29	          0x4889ee	                            mov rsi, rbp	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004e2c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004e2e	          0x4889c3	                            mov rbx, rax	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x4004e31	      0xb820000000	                           mov eax, 0x20	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x4004e36	            0x7528	                           jne 0x4004e60	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004e38	          0x894318	             mov dword [rbx + 0x18], eax	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x4004e3b	          0x4c89e6	                            mov rsi, r12	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x4004e3e	          0x4889df	                            mov rdi, rbx	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x4004e41	      0xe800000000	                          call 0x4004e46	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x4004e46	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4004e4a	      0xe800000000	                          call 0x4004e4f	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4004e4f	          0x4889df	                            mov rdi, rbx	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4004e52	              0x5b	                                 pop rbx	      2290	ref-filter.c	FUNCTION_85
0x4004e53	              0x5d	                                 pop rbp	      2290	ref-filter.c	FUNCTION_85
0x4004e54	            0x415c	                                 pop r12	      2290	ref-filter.c	FUNCTION_85
0x4004e56	      0xe900000000	                           jmp 0x4004e5b	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4004e5b	       0xf1f440000	                   nop dword [rax + rax]	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4004e60	          0x4889ef	                            mov rdi, rbp	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4004e63	      0xe8a8b4ffff	   call sym.ref_kind_from_refname.part.3	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4004e68	            0xebce	                           jmp 0x4004e38	      2040	ref-filter.c	FUNCTION_75	CALL_2
align_atom_handler	IF,0:functions,0:SWITCH,0:CALL,1:DO,0:WHILE,0:ELSE,0:FOR,0	17
0x4000270	              0x55	                                push rbp	       591	ref-filter.c	FUNCTION_22
0x4000271	              0x53	                                push rbx	       591	ref-filter.c	FUNCTION_22
0x4000272	          0x4889fd	                            mov rbp, rdi	       591	ref-filter.c	FUNCTION_22
0x4000275	        0x488d7e08	                      lea rdi, [rsi + 8]	       594	ref-filter.c	FUNCTION_22	CALL_1
0x4000279	          0x4889f3	                            mov rbx, rsi	       591	ref-filter.c	FUNCTION_22
0x400027c	        0x4883ec08	                              sub rsp, 8	       591	ref-filter.c	FUNCTION_22
0x4000280	      0xe85bffffff	             call sym.push_stack_element	       594	ref-filter.c	FUNCTION_22	CALL_1
0x4000285	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       597	ref-filter.c	FUNCTION_22
0x4000289	        0x488b5308	                mov rdx, qword [rbx + 8]	       595	ref-filter.c	FUNCTION_22
0x400028d	        0x4883c010	                           add rax, 0x10	       597	ref-filter.c	FUNCTION_22
0x4000291	    0x48c742200000	               mov qword [rdx + 0x20], 0	       596	ref-filter.c	FUNCTION_22
0x4000299	        0x48894228	             mov qword [rdx + 0x28], rax	       597	ref-filter.c	FUNCTION_22
0x400029d	        0x4883c408	                              add rsp, 8	       599	ref-filter.c	FUNCTION_22
0x40002a1	            0x31c0	                            xor eax, eax	       599	ref-filter.c	FUNCTION_22
0x40002a3	              0x5b	                                 pop rbx	       599	ref-filter.c	FUNCTION_22
0x40002a4	              0x5d	                                 pop rbp	       599	ref-filter.c	FUNCTION_22
0x40002a5	              0xc3	                                     ret	       599	ref-filter.c	FUNCTION_22
parse_opt_ref_sorting	IF,1:functions,0:SWITCH,0:CALL,1:DO,0:WHILE,0:ELSE,0:FOR,0	11
0x4004f50	          0x4885f6	                           test rsi, rsi	      2340	ref-filter.c	FUNCTION_89	IF_1
0x4004f53	            0x741b	                            je 0x4004f70	      2340	ref-filter.c	FUNCTION_89	IF_1
0x4004f55	        0x4883ec08	                              sub rsp, 8	      2339	ref-filter.c	FUNCTION_89
0x4004f59	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x4004f5d	      0xe800000000	                          call 0x4004f62	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x4004f62	            0x31c0	                            xor eax, eax	      2343	ref-filter.c	FUNCTION_89
0x4004f64	        0x4883c408	                              add rsp, 8	      2344	ref-filter.c	FUNCTION_89
0x4004f68	              0xc3	                                     ret	      2344	ref-filter.c	FUNCTION_89
0x4004f69	     0xf1f80000000	                         nop dword [rax]	      2344	ref-filter.c	FUNCTION_89
0x4004f70	      0xb8ffffffff	                     mov eax, 0xffffffff	      2341	ref-filter.c	FUNCTION_89	IF_1
0x4004f75	              0xc3	                                     ret	      2341	ref-filter.c	FUNCTION_89	IF_1
if_then_else_handler	IF,4:functions,0:SWITCH,0:CALL,6:DO,0:WHILE,0:ELSE,2:FOR,0	79
0x40034f0	              0x55	                                push rbp	       602	ref-filter.c	FUNCTION_23
0x40034f1	              0x53	                                push rbx	       602	ref-filter.c	FUNCTION_23
0x40034f2	        0x4883ec38	                           sub rsp, 0x38	       602	ref-filter.c	FUNCTION_23
0x40034f6	    0x64488b042528	                mov rax, qword fs:[0x28]	       602	ref-filter.c	FUNCTION_23
0x40034ff	      0x4889442428	             mov qword [rsp + 0x28], rax	       602	ref-filter.c	FUNCTION_23
0x4003504	            0x31c0	                            xor eax, eax	       602	ref-filter.c	FUNCTION_23
0x4003506	          0x488b07	                    mov rax, qword [rdi]	       603	ref-filter.c	FUNCTION_23
0x4003509	        0x488b5828	            mov rbx, qword [rax + 0x28] 	       605	ref-filter.c	FUNCTION_23
0x400350d	      0x4889442408	                mov qword [rsp + 8], rax	       603	ref-filter.c	FUNCTION_23
0x4003512	         0xfb65310	           movzx edx, byte [rbx + 0x10] 	       607	ref-filter.c	FUNCTION_23	IF_1
0x4003516	          0xf6c201	                              test dl, 1	       607	ref-filter.c	FUNCTION_23	IF_1
0x4003519	     0xf84ef000000	                            je 0x400360e	       607	ref-filter.c	FUNCTION_23	IF_1
0x400351f	          0xf6c202	                              test dl, 2	       610	ref-filter.c	FUNCTION_23	IF_2
0x4003522	          0x4889fd	                            mov rbp, rdi	       610	ref-filter.c	FUNCTION_23	IF_2
0x4003525	            0x7479	                            je 0x40035a0	       610	ref-filter.c	FUNCTION_23	IF_2
0x4003527	          0x83e204	                              and edx, 4	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x400352a	            0x7542	                           jne 0x400356e	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x400352c	          0x488b30	                    mov rsi, qword [rax]	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_4
0x400352f	        0x4c8b4808	                 mov r9, qword [rax + 8]	        53	string3.h	FUNCTION_122	CALL_3
0x4003533	        0x4c8b4010	              mov r8, qword [rax + 0x10]	        53	string3.h	FUNCTION_122	CALL_3
0x4003537	        0x488b7818	            mov rdi, qword [rax + 0x18] 	        53	string3.h	FUNCTION_122	CALL_3
0x400353b	        0x4c8b5608	                mov r10, qword [rsi + 8]	        53	string3.h	FUNCTION_122	CALL_3
0x400353f	      0x4c894c2410	              mov qword [rsp + 0x10], r9	        53	string3.h	FUNCTION_122	CALL_3
0x4003544	      0x4c89442418	              mov qword [rsp + 0x18], r8	        53	string3.h	FUNCTION_122	CALL_3
0x4003549	      0x48897c2420	             mov qword [rsp + 0x20], rdi	        53	string3.h	FUNCTION_122	CALL_3
0x400354e	        0x4c895008	                mov qword [rax + 8], r10	        53	string3.h	FUNCTION_122	CALL_3
0x4003552	        0x4c8b5610	            mov r10, qword [rsi + 0x10] 	        53	string3.h	FUNCTION_122	CALL_3
0x4003556	        0x4c895010	             mov qword [rax + 0x10], r10	        53	string3.h	FUNCTION_122	CALL_3
0x400355a	        0x4c8b5618	            mov r10, qword [rsi + 0x18] 	        53	string3.h	FUNCTION_122	CALL_3
0x400355e	        0x4c895018	             mov qword [rax + 0x18], r10	        53	string3.h	FUNCTION_122	CALL_3
0x4003562	        0x4c894e08	                 mov qword [rsi + 8], r9	        53	string3.h	FUNCTION_122	CALL_3
0x4003566	        0x4c894610	              mov qword [rsi + 0x10], r8	        53	string3.h	FUNCTION_122	CALL_3
0x400356a	        0x48897e18	             mov qword [rsi + 0x18], rdi	        53	string3.h	FUNCTION_122	CALL_3
0x400356e	    0x48c740100000	               mov qword [rax + 0x10], 0	       164	strbuf.h	FUNCTION_163
0x4003576	        0x488b4018	            mov rax, qword [rax + 0x18] 	       165	strbuf.h	FUNCTION_163	IF_2
0x400357a	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_163	IF_2
0x4003580	            0x746e	                            je 0x40035f0	       165	strbuf.h	FUNCTION_163	IF_2
0x4003582	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_163	IF_2
0x4003585	      0x488d7c2408	                      lea rdi, [rsp + 8]	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x400358a	      0xe801ccffff	              call sym.pop_stack_element	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x400358f	      0x488b442408	                mov rax, qword [rsp + 8]	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x4003594	            0xeb0f	                           jmp 0x40035a5	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x4003596	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x40035a0	          0x83e204	                              and edx, 4	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x40035a3	            0x742b	                            je 0x40035d0	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x40035a5	        0x48894500	                    mov qword [rbp], rax	       632	ref-filter.c	FUNCTION_23
0x40035a9	          0x4889df	                            mov rdi, rbx	       633	ref-filter.c	FUNCTION_23	CALL_6
0x40035ac	      0xe800000000	                          call 0x40035b1	       633	ref-filter.c	FUNCTION_23	CALL_6
0x40035b1	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       634	ref-filter.c	FUNCTION_23
0x40035b6	    0x644833042528	                xor rax, qword fs:[0x28]	       634	ref-filter.c	FUNCTION_23
0x40035bf	            0x7568	                           jne 0x4003629	       634	ref-filter.c	FUNCTION_23
0x40035c1	        0x4883c438	                           add rsp, 0x38	       634	ref-filter.c	FUNCTION_23
0x40035c5	              0x5b	                                 pop rbx	       634	ref-filter.c	FUNCTION_23
0x40035c6	              0x5d	                                 pop rbp	       634	ref-filter.c	FUNCTION_23
0x40035c7	              0xc3	                                     ret	       634	ref-filter.c	FUNCTION_23
0x40035c8	     0xf1f84000000	                   nop dword [rax + rax]	       634	ref-filter.c	FUNCTION_23
0x40035d0	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       165	strbuf.h	FUNCTION_163	IF_2
0x40035d4	    0x48c740100000	               mov qword [rax + 0x10], 0	       164	strbuf.h	FUNCTION_163
0x40035dc	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_163	IF_2
0x40035e3	            0x741b	                            je 0x4003600	       165	strbuf.h	FUNCTION_163	IF_2
0x40035e5	          0xc60200	                       mov byte [rdx], 0	       166	strbuf.h	FUNCTION_163	IF_2
0x40035e8	      0x488b442408	                mov rax, qword [rsp + 8]	       166	strbuf.h	FUNCTION_163	IF_2
0x40035ed	            0xebb6	                           jmp 0x40035a5	       166	strbuf.h	FUNCTION_163	IF_2
0x40035ef	              0x90	                                     nop	       166	strbuf.h	FUNCTION_163	IF_2
0x40035f0	    0x803d00000000	                cmp byte [0x040035f7], 0	       168	strbuf.h	FUNCTION_163	CALL_2
0x40035f7	            0x748c	                            je 0x4003585	       168	strbuf.h	FUNCTION_163	CALL_2
0x40035f9	            0xeb0e	                           jmp 0x4003609	       168	strbuf.h	FUNCTION_163	CALL_2
0x40035fb	       0xf1f440000	                   nop dword [rax + rax]	       168	strbuf.h	FUNCTION_163	CALL_2
0x4003600	    0x803d00000000	                cmp byte [0x04003607], 0	       168	strbuf.h	FUNCTION_163	CALL_2
0x4003607	            0x749c	                            je 0x40035a5	       168	strbuf.h	FUNCTION_163	CALL_2
0x4003609	      0xe800000000	                          call 0x400360e	       168	strbuf.h	FUNCTION_163	CALL_2
0x400360e	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4003610	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4003615	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x400361a	      0xe800000000	                          call 0x400361f	        54	gettext.h	FUNCTION_120
0x400361f	          0x4889c7	                            mov rdi, rax	       608	ref-filter.c	FUNCTION_23	CALL_2
0x4003622	            0x31c0	                            xor eax, eax	       608	ref-filter.c	FUNCTION_23	CALL_2
0x4003624	      0xe800000000	                          call 0x4003629	       608	ref-filter.c	FUNCTION_23	CALL_2
0x4003629	      0xe800000000	                          call 0x400362e	       634	ref-filter.c	FUNCTION_23
contains_tag_algo	IF,2:functions,0:SWITCH,1:CALL,8:DO,0:WHILE,1:ELSE,1:FOR,0	93
0x4000bb0	            0x4157	                                push r15	      1699	ref-filter.c	FUNCTION_62
0x4000bb2	            0x4156	                                push r14	      1699	ref-filter.c	FUNCTION_62
0x4000bb4	            0x4155	                                push r13	      1699	ref-filter.c	FUNCTION_62
0x4000bb6	            0x4154	                                push r12	      1699	ref-filter.c	FUNCTION_62
0x4000bb8	          0x4989fc	                            mov r12, rdi	      1699	ref-filter.c	FUNCTION_62
0x4000bbb	              0x55	                                push rbp	      1699	ref-filter.c	FUNCTION_62
0x4000bbc	              0x53	                                push rbx	      1699	ref-filter.c	FUNCTION_62
0x4000bbd	          0x4889f5	                            mov rbp, rsi	      1699	ref-filter.c	FUNCTION_62
0x4000bc0	          0x4889d3	                            mov rbx, rdx	      1699	ref-filter.c	FUNCTION_62
0x4000bc3	        0x4883ec28	                           sub rsp, 0x28	      1699	ref-filter.c	FUNCTION_62
0x4000bc7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1699	ref-filter.c	FUNCTION_62
0x4000bd0	      0x4889442418	             mov qword [rsp + 0x18], rax	      1699	ref-filter.c	FUNCTION_62
0x4000bd5	            0x31c0	                            xor eax, eax	      1699	ref-filter.c	FUNCTION_62
0x4000bd7	    0xc70424000000	                      mov dword [rsp], 0	      1700	ref-filter.c	FUNCTION_62
0x4000bde	    0xc74424040000	                  mov dword [rsp + 4], 0	      1700	ref-filter.c	FUNCTION_62
0x4000be6	    0x48c744240800	                  mov qword [rsp + 8], 0	      1700	ref-filter.c	FUNCTION_62
0x4000bef	      0xe82cffffff	                  call sym.contains_test	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x4000bf4	            0x85c0	                           test eax, eax	      1703	ref-filter.c	FUNCTION_62	IF_1
0x4000bf6	            0x7428	                            je 0x4000c20	      1703	ref-filter.c	FUNCTION_62	IF_1
0x4000bf8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1735	ref-filter.c	FUNCTION_62
0x4000bfd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1735	ref-filter.c	FUNCTION_62
0x4000c06	     0xf85f4000000	                           jne 0x4000d00	      1735	ref-filter.c	FUNCTION_62
0x4000c0c	        0x4883c428	                           add rsp, 0x28	      1735	ref-filter.c	FUNCTION_62
0x4000c10	              0x5b	                                 pop rbx	      1735	ref-filter.c	FUNCTION_62
0x4000c11	              0x5d	                                 pop rbp	      1735	ref-filter.c	FUNCTION_62
0x4000c12	            0x415c	                                 pop r12	      1735	ref-filter.c	FUNCTION_62
0x4000c14	            0x415d	                                 pop r13	      1735	ref-filter.c	FUNCTION_62
0x4000c16	            0x415e	                                 pop r14	      1735	ref-filter.c	FUNCTION_62
0x4000c18	            0x415f	                                 pop r15	      1735	ref-filter.c	FUNCTION_62
0x4000c1a	              0xc3	                                     ret	      1735	ref-filter.c	FUNCTION_62
0x4000c1b	       0xf1f440000	                   nop dword [rax + rax]	      1735	ref-filter.c	FUNCTION_62
0x4000c20	          0x4889e6	                            mov rsi, rsp	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4000c23	          0x4c89e7	                            mov rdi, r12	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4000c26	      0xe815f4ffff	         call sym.push_to_contains_stack	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4000c2b	          0x8b0424	                    mov eax, dword [rsp]	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4000c2e	            0x6690	                                     nop	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4000c30	            0x85c0	                           test eax, eax	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c32	            0x745c	                            je 0x4000c90	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c34	      0x488b542408	                mov rdx, qword [rsp + 8]	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c39	            0x4898	                                    cdqe	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c3b	        0x48c1e004	                              shl rax, 4	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c3f	      0x4c8d7402f0	             lea r14, [rdx + rax - 0x10]	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c44	        0x4d8b6e08	                mov r13, qword [r14 + 8]	      1710	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c48	          0x4d8b3e	                    mov r15, qword [r14]	      1709	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c4b	          0x4d85ed	                           test r13, r13	      1712	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4000c4e	     0xf848c000000	                            je 0x4000ce0	      1712	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4000c54	        0x498b7d00	                    mov rdi, qword [r13]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4000c58	          0x4889da	                            mov rdx, rbx	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4000c5b	          0x4889ee	                            mov rsi, rbp	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4000c5e	      0xe8bdfeffff	                  call sym.contains_test	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4000c63	          0x83f801	                              cmp eax, 1	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4000c66	            0x7460	                            je 0x4000cc8	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4000c68	            0x7246	                            jb 0x4000cb0	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4000c6a	          0x83f802	                              cmp eax, 2	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4000c6d	            0x754d	                           jne 0x4000cbc	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4000c6f	        0x418b7720	            mov esi, dword [r15 + 0x20] 	      1632	ref-filter.c	CALL_1
0x4000c73	          0x4889df	                            mov rdi, rbx	      1632	ref-filter.c	CALL_1
0x4000c76	      0xe8d5fdffff	call sym.contains_cache_at_peek.isra.13.constprop.33	      1632	ref-filter.c	CALL_1
0x4000c7b	    0xc70002000000	                      mov dword [rax], 2	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x4000c81	          0x8b0424	                    mov eax, dword [rsp]	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4000c84	          0x83e801	                              sub eax, 1	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4000c87	            0x85c0	                           test eax, eax	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c89	          0x890424	                    mov dword [rsp], eax	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4000c8c	            0x75a6	                           jne 0x4000c34	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c8e	            0x6690	                                     nop	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4000c90	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x4000c95	      0xe800000000	                          call 0x4000c9a	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x4000c9a	          0x4889da	                            mov rdx, rbx	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4000c9d	          0x4889ee	                            mov rsi, rbp	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4000ca0	          0x4c89e7	                            mov rdi, r12	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4000ca3	      0xe878feffff	                  call sym.contains_test	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4000ca8	      0xe94bffffff	                           jmp 0x4000bf8	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4000cad	           0xf1f00	                         nop dword [rax]	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4000cb0	        0x498b7d00	                    mov rdi, qword [r13]	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4000cb4	          0x4889e6	                            mov rsi, rsp	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4000cb7	      0xe884f3ffff	         call sym.push_to_contains_stack	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4000cbc	          0x8b0424	                    mov eax, dword [rsp]	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4000cbf	      0xe96cffffff	                           jmp 0x4000c30	      1730	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4000cc4	         0xf1f4000	                         nop dword [rax]	      1730	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4000cc8	        0x498b4508	                mov rax, qword [r13 + 8]	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4000ccc	        0x49894608	                mov qword [r14 + 8], rax	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4000cd0	          0x8b0424	                    mov eax, dword [rsp]	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4000cd3	      0xe958ffffff	                           jmp 0x4000c30	      1727	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4000cd8	     0xf1f84000000	                   nop dword [rax + rax]	      1727	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4000ce0	        0x418b7720	            mov esi, dword [r15 + 0x20] 	      1632	ref-filter.c	CALL_1
0x4000ce4	          0x4889df	                            mov rdi, rbx	      1632	ref-filter.c	CALL_1
0x4000ce7	      0xe864fdffff	call sym.contains_cache_at_peek.isra.13.constprop.33	      1632	ref-filter.c	CALL_1
0x4000cec	    0xc70001000000	                      mov dword [rax], 1	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x4000cf2	          0x8b0424	                    mov eax, dword [rsp]	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4000cf5	          0x83e801	                              sub eax, 1	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4000cf8	          0x890424	                    mov dword [rsp], eax	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4000cfb	      0xe930ffffff	                           jmp 0x4000c30	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4000d00	      0xe800000000	                          call 0x4000d05	      1735	ref-filter.c	FUNCTION_62
compare_refs	IF,1:functions,0:SWITCH,0:CALL,1:DO,0:WHILE,0:ELSE,0:FOR,1	114
0x40041a0	            0x4157	                                push r15	      2182	ref-filter.c	FUNCTION_80
0x40041a2	            0x4156	                                push r14	      2182	ref-filter.c	FUNCTION_80
0x40041a4	            0x4155	                                push r13	      2182	ref-filter.c	FUNCTION_80
0x40041a6	            0x4154	                                push r12	      2182	ref-filter.c	FUNCTION_80
0x40041a8	              0x55	                                push rbp	      2182	ref-filter.c	FUNCTION_80
0x40041a9	              0x53	                                push rbx	      2182	ref-filter.c	FUNCTION_80
0x40041aa	        0x4883ec48	                           sub rsp, 0x48	      2182	ref-filter.c	FUNCTION_80
0x40041ae	          0x488b2f	                    mov rbp, qword [rdi]	      2183	ref-filter.c	FUNCTION_80
0x40041b1	          0x4c8b26	                    mov r12, qword [rsi]	      2184	ref-filter.c	FUNCTION_80
0x40041b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2182	ref-filter.c	FUNCTION_80
0x40041bd	      0x4889442438	             mov qword [rsp + 0x38], rax	      2182	ref-filter.c	FUNCTION_80
0x40041c2	            0x31c0	                            xor eax, eax	      2182	ref-filter.c	FUNCTION_80
0x40041c4	          0x4885d2	                           test rdx, rdx	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40041c7	     0xf8473010000	                            je 0x4004340	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40041cd	        0x488d4538	                   lea rax, [rbp + 0x38]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041d1	          0x4989d6	                            mov r14, rdx	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041d4	    0x41bd00000000	                             mov r13d, 0	      2164	ref-filter.c	FUNCTION_79
0x40041da	      0x4d8d7c2438	                   lea r15, [r12 + 0x38]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041df	      0x4889442408	                mov qword [rsp + 8], rax	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041e4	            0xeb51	                           jmp 0x4004237	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041f0	            0x85db	                           test ebx, ebx	      2167	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40041f2	     0xf8438010000	                            je 0x4004330	      2167	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40041f8	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40041fd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x4004201	        0x48394610	            cmp qword [rsi + 0x10], rax 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x4004205	     0xf82ed000000	                            jb 0x40042f8	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x400420b	      0xb801000000	                              mov eax, 1	      2175	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_4
0x4004210	     0xf8432010000	                            je 0x4004348	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004216	          0x83e201	                              and edx, 1	      2178	ref-filter.c	FUNCTION_79
0x4004219	     0xf84e7000000	                            je 0x4004306	      2178	ref-filter.c	FUNCTION_79
0x400421f	            0xf7d8	                                 neg eax	      2178	ref-filter.c	FUNCTION_79
0x4004221	            0x89c2	                            mov edx, eax	      2178	ref-filter.c	FUNCTION_79
0x4004223	            0x85d2	                           test edx, edx	      2189	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x4004225	     0xf85dd000000	                           jne 0x4004308	      2189	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x400422b	          0x4d8b36	                    mov r14, qword [r14]	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x400422e	          0x4d85f6	                           test r14, r14	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x4004231	     0xf8409010000	                            je 0x4004340	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x4004237	        0x49634608	            movsxd rax, dword [r14 + 8] 	      2155	ref-filter.c	FUNCTION_79
0x400423b	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4004240	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4004245	          0x4889ef	                            mov rdi, rbp	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4004248	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2157	ref-filter.c	FUNCTION_79
0x4004251	          0x4889c6	                            mov rsi, rax	      2155	ref-filter.c	FUNCTION_79
0x4004254	        0x488d0440	                  lea rax, [rax + rax*2]	      2155	ref-filter.c	FUNCTION_79
0x4004258	        0x48c1e005	                              shl rax, 5	      2155	ref-filter.c	FUNCTION_79
0x400425c	    0x480305000000	             add rax, qword [0x04004263]	      2155	ref-filter.c	FUNCTION_79
0x4004263	          0x8b5808	                mov ebx, dword [rax + 8]	      2155	ref-filter.c	FUNCTION_79
0x4004266	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2157	ref-filter.c	FUNCTION_79
0x400426f	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2157	ref-filter.c	FUNCTION_79
0x4004278	      0xe893feffff	             call sym.get_ref_atom_value	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x400427d	            0x85c0	                           test eax, eax	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x400427f	     0xf85cf000000	                           jne 0x4004354	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4004285	        0x418b7608	                mov esi, dword [r14 + 8]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4004289	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x400428e	      0x488d542418	                   lea rdx, [rsp + 0x18]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4004293	          0x4c89e7	                            mov rdi, r12	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4004296	      0xe875feffff	             call sym.get_ref_atom_value	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x400429b	            0x85c0	                           test eax, eax	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x400429d	     0xf85b1000000	                           jne 0x4004354	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x40042a3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x40042a8	      0xe800000000	                          call 0x40042ad	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x40042ad	      0x410fb6560c	            movzx edx, byte [r14 + 0xc] 	      2164	ref-filter.c	FUNCTION_79
0x40042b2	      0xb800000000	                              mov eax, 0	      2164	ref-filter.c	FUNCTION_79
0x40042b7	          0xf6c202	                              test dl, 2	      2164	ref-filter.c	FUNCTION_79
0x40042ba	        0x490f45c5	                         cmovne rax, r13	      2164	ref-filter.c	FUNCTION_79
0x40042be	          0xf6c204	                              test dl, 4	      2165	ref-filter.c	FUNCTION_79	IF_3
0x40042c1	          0x4889c1	                            mov rcx, rax	      2164	ref-filter.c	FUNCTION_79
0x40042c4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40042c9	     0xf8421ffffff	                            je 0x40041f0	      2165	ref-filter.c	FUNCTION_79	IF_3
0x40042cf	          0x488b30	                    mov rsi, qword [rax]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40042d2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40042d7	          0x488b38	                    mov rdi, qword [rax]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40042da	      0xe800000000	                          call 0x40042df	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40042df	      0x41f6460c01	                test byte [r14 + 0xc], 1	      2178	ref-filter.c	FUNCTION_79
0x40042e4	            0x89c2	                            mov edx, eax	      2178	ref-filter.c	FUNCTION_79
0x40042e6	     0xf8437ffffff	                            je 0x4004223	      2178	ref-filter.c	FUNCTION_79
0x40042ec	      0xe92effffff	                           jmp 0x400421f	      2178	ref-filter.c	FUNCTION_79
0x40042f1	     0xf1f80000000	                         nop dword [rax]	      2178	ref-filter.c	FUNCTION_79
0x40042f8	          0x83e201	                              and edx, 1	      2178	ref-filter.c	FUNCTION_79
0x40042fb	      0xb8ffffffff	                     mov eax, 0xffffffff	      2171	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x4004300	     0xf8519ffffff	                           jne 0x400421f	      2178	ref-filter.c	FUNCTION_79
0x4004306	            0x89c2	                            mov edx, eax	      2178	ref-filter.c	FUNCTION_79
0x4004308	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      2193	ref-filter.c	FUNCTION_80
0x400430d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2193	ref-filter.c	FUNCTION_80
0x4004316	            0x89d0	                            mov eax, edx	      2193	ref-filter.c	FUNCTION_80
0x4004318	            0x754b	                           jne 0x4004365	      2193	ref-filter.c	FUNCTION_80
0x400431a	        0x4883c448	                           add rsp, 0x48	      2193	ref-filter.c	FUNCTION_80
0x400431e	              0x5b	                                 pop rbx	      2193	ref-filter.c	FUNCTION_80
0x400431f	              0x5d	                                 pop rbp	      2193	ref-filter.c	FUNCTION_80
0x4004320	            0x415c	                                 pop r12	      2193	ref-filter.c	FUNCTION_80
0x4004322	            0x415d	                                 pop r13	      2193	ref-filter.c	FUNCTION_80
0x4004324	            0x415e	                                 pop r14	      2193	ref-filter.c	FUNCTION_80
0x4004326	            0x415f	                                 pop r15	      2193	ref-filter.c	FUNCTION_80
0x4004328	              0xc3	                                     ret	      2193	ref-filter.c	FUNCTION_80
0x4004329	     0xf1f80000000	                         nop dword [rax]	      2193	ref-filter.c	FUNCTION_80
0x4004330	          0x488b30	                    mov rsi, qword [rax]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x4004333	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x4004338	          0x488b38	                    mov rdi, qword [rax]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x400433b	            0xffd1	                                call rcx	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x400433d	            0xeba0	                           jmp 0x40042df	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x400433f	              0x90	                                     nop	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x4004340	            0x31d2	                            xor edx, edx	      2192	ref-filter.c	FUNCTION_80
0x4004342	            0xebc4	                           jmp 0x4004308	      2192	ref-filter.c	FUNCTION_80
0x4004344	         0xf1f4000	                         nop dword [rax]	      2192	ref-filter.c	FUNCTION_80
0x4004348	          0x4c89fe	                            mov rsi, r15	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x400434b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004350	            0xffd1	                                call rcx	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004352	            0xeb8b	                           jmp 0x40042df	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004354	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x4004359	      0xbf00000000	                              mov edi, 0	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x400435e	            0x31c0	                            xor eax, eax	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x4004360	      0xe800000000	                          call 0x4004365	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x4004365	      0xe800000000	                          call 0x400436a	      2193	ref-filter.c	FUNCTION_80
parse_sorting_atom	IF,1:functions,0:SWITCH,0:CALL,4:DO,0:WHILE,0:ELSE,0:FOR,0	36
0x4002d20	              0x53	                                push rbx	      2293	ref-filter.c	FUNCTION_86
0x4002d21	          0x4889fb	                            mov rbx, rdi	      2293	ref-filter.c	FUNCTION_86
0x4002d24	        0x4883ec40	                           sub rsp, 0x40	      2293	ref-filter.c	FUNCTION_86
0x4002d28	    0x64488b042528	                mov rax, qword fs:[0x28]	      2293	ref-filter.c	FUNCTION_86
0x4002d31	      0x4889442438	             mov qword [rsp + 0x38], rax	      2293	ref-filter.c	FUNCTION_86
0x4002d36	            0x31c0	                            xor eax, eax	      2293	ref-filter.c	FUNCTION_86
0x4002d38	    0x48c744240800	                  mov qword [rsp + 8], 0	      2298	ref-filter.c	FUNCTION_86
0x4002d41	    0x48c704240000	                      mov qword [rsp], 0	      2298	ref-filter.c	FUNCTION_86
0x4002d49	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2298	ref-filter.c	FUNCTION_86
0x4002d52	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	      2298	ref-filter.c	FUNCTION_86
0x4002d5a	      0xe800000000	                          call 0x4002d5f	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x4002d5f	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4002d64	        0x488d1403	                    lea rdx, [rbx + rax]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4002d68	          0x4889de	                            mov rsi, rbx	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4002d6b	          0x4889e7	                            mov rdi, rsp	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4002d6e	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2300	ref-filter.c	FUNCTION_86
0x4002d77	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2300	ref-filter.c	FUNCTION_86
0x4002d80	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2300	ref-filter.c	FUNCTION_86
0x4002d89	      0xe8a2fcffff	          call sym.parse_ref_filter_atom	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4002d8e	            0x85c0	                           test eax, eax	      2302	ref-filter.c	FUNCTION_86	IF_1
0x4002d90	            0x7824	                            js 0x4002db6	      2302	ref-filter.c	FUNCTION_86	IF_1
0x4002d92	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4002d97	            0x89c3	                            mov ebx, eax	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4002d99	      0xe800000000	                          call 0x4002d9e	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4002d9e	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2306	ref-filter.c	FUNCTION_86
0x4002da3	    0x644833342528	                xor rsi, qword fs:[0x28]	      2306	ref-filter.c	FUNCTION_86
0x4002dac	            0x89d8	                            mov eax, ebx	      2306	ref-filter.c	FUNCTION_86
0x4002dae	            0x7517	                           jne 0x4002dc7	      2306	ref-filter.c	FUNCTION_86
0x4002db0	        0x4883c440	                           add rsp, 0x40	      2306	ref-filter.c	FUNCTION_86
0x4002db4	              0x5b	                                 pop rbx	      2306	ref-filter.c	FUNCTION_86
0x4002db5	              0xc3	                                     ret	      2306	ref-filter.c	FUNCTION_86
0x4002db6	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4002dbb	      0xbf00000000	                              mov edi, 0	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4002dc0	            0x31c0	                            xor eax, eax	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4002dc2	      0xe800000000	                          call 0x4002dc7	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4002dc7	      0xe800000000	                          call 0x4002dcc	      2306	ref-filter.c	FUNCTION_86
then_atom_handler	IF,9:functions,0:SWITCH,0:CALL,9:DO,0:WHILE,0:ELSE,2:FOR,0	96
0x4002e80	            0x4155	                                push r13	       664	ref-filter.c	FUNCTION_26
0x4002e82	            0x4154	                                push r12	       664	ref-filter.c	FUNCTION_26
0x4002e84	          0x4989d5	                            mov r13, rdx	       664	ref-filter.c	FUNCTION_26
0x4002e87	              0x55	                                push rbp	       664	ref-filter.c	FUNCTION_26
0x4002e88	              0x53	                                push rbx	       664	ref-filter.c	FUNCTION_26
0x4002e89	        0x4883ec08	                              sub rsp, 8	       664	ref-filter.c	FUNCTION_26
0x4002e8d	        0x488b6e08	                mov rbp, qword [rsi + 8]	       665	ref-filter.c	FUNCTION_26
0x4002e91	    0x48817d200000	               cmp qword [rbp + 0x20], 0	       668	ref-filter.c	FUNCTION_26	IF_1
0x4002e99	            0x7435	                            je 0x4002ed0	       668	ref-filter.c	FUNCTION_26	IF_1
0x4002e9b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4002ea0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4002ea5	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4002ea7	      0xe800000000	                          call 0x4002eac	        54	gettext.h	FUNCTION_120
0x4002eac	        0x4883c408	                              add rsp, 8	       692	ref-filter.c	FUNCTION_26
0x4002eb0	          0x4c89ef	                            mov rdi, r13	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4002eb3	          0x4889c2	                            mov rdx, rax	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4002eb6	              0x5b	                                 pop rbx	       692	ref-filter.c	FUNCTION_26
0x4002eb7	              0x5d	                                 pop rbp	       692	ref-filter.c	FUNCTION_26
0x4002eb8	            0x415c	                                 pop r12	       692	ref-filter.c	FUNCTION_26
0x4002eba	            0x415d	                                 pop r13	       692	ref-filter.c	FUNCTION_26
0x4002ebc	      0xbeffffffff	                     mov esi, 0xffffffff	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4002ec1	            0x31c0	                            xor eax, eax	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4002ec3	      0xe958e3ffff	    jmp sym.strbuf_addf_ret.constprop.38	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4002ec8	     0xf1f84000000	                   nop dword [rax + rax]	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4002ed0	        0x4c8b6528	            mov r12, qword [rbp + 0x28] 	       669	ref-filter.c	FUNCTION_26	IF_1
0x4002ed4	          0x4d85e4	                           test r12, r12	       670	ref-filter.c	FUNCTION_26	IF_2
0x4002ed7	            0x74c2	                            je 0x4002e9b	       670	ref-filter.c	FUNCTION_26	IF_2
0x4002ed9	    0x410fb65c2410	           movzx ebx, byte [r12 + 0x10] 	       672	ref-filter.c	FUNCTION_26	IF_3
0x4002edf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4002ee4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4002ee9	          0xf6c301	                              test bl, 1	       672	ref-filter.c	FUNCTION_26	IF_3
0x4002eec	            0x75b7	                           jne 0x4002ea5	       672	ref-filter.c	FUNCTION_26	IF_3
0x4002eee	          0xf6c302	                              test bl, 2	       674	ref-filter.c	FUNCTION_26	IF_4
0x4002ef1	     0xf85a1000000	                           jne 0x4002f98	       674	ref-filter.c	FUNCTION_26	IF_4
0x4002ef7	            0x89d8	                            mov eax, ebx	       676	ref-filter.c	FUNCTION_26
0x4002ef9	          0x83c801	                               or eax, 1	       676	ref-filter.c	FUNCTION_26
0x4002efc	      0x4188442410	               mov byte [r12 + 0x10], al	       676	ref-filter.c	FUNCTION_26
0x4002f01	        0x418b0424	                    mov eax, dword [r12]	       682	ref-filter.c	FUNCTION_26	IF_5
0x4002f05	            0x85c0	                           test eax, eax	       682	ref-filter.c	FUNCTION_26	IF_5
0x4002f07	            0x7547	                           jne 0x4002f50	       682	ref-filter.c	FUNCTION_26	IF_5
0x4002f09	        0x4c8b6d18	            mov r13, qword [rbp + 0x18] 	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4002f0d	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4002f12	          0x4c89ee	                            mov rsi, r13	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4002f15	      0xe800000000	                          call 0x4002f1a	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4002f1a	            0x85c0	                           test eax, eax	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4002f1c	            0x7508	                           jne 0x4002f26	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4002f1e	          0x83cb05	                               or ebx, 5	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x4002f21	      0x41885c2410	               mov byte [r12 + 0x10], bl	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x4002f26	    0x4981fd000000	                              cmp r13, 0	       165	strbuf.h	FUNCTION_163	IF_2
0x4002f2d	    0x48c745100000	               mov qword [rbp + 0x10], 0	       164	strbuf.h	FUNCTION_163
0x4002f35	            0x7479	                            je 0x4002fb0	       165	strbuf.h	FUNCTION_163	IF_2
0x4002f37	      0x41c6450000	                       mov byte [r13], 0	       166	strbuf.h	FUNCTION_163	IF_2
0x4002f3c	        0x4883c408	                              add rsp, 8	       692	ref-filter.c	FUNCTION_26
0x4002f40	            0x31c0	                            xor eax, eax	       692	ref-filter.c	FUNCTION_26
0x4002f42	              0x5b	                                 pop rbx	       692	ref-filter.c	FUNCTION_26
0x4002f43	              0x5d	                                 pop rbp	       692	ref-filter.c	FUNCTION_26
0x4002f44	            0x415c	                                 pop r12	       692	ref-filter.c	FUNCTION_26
0x4002f46	            0x415d	                                 pop r13	       692	ref-filter.c	FUNCTION_26
0x4002f48	              0xc3	                                     ret	       692	ref-filter.c	FUNCTION_26
0x4002f49	     0xf1f80000000	                         nop dword [rax]	       692	ref-filter.c	FUNCTION_26
0x4002f50	          0x83f801	                              cmp eax, 1	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x4002f53	            0x746b	                            je 0x4002fc0	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x4002f55	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4002f5a	        0x4c8b6d18	            mov r13, qword [rbp + 0x18] 	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4002f5e	            0x74c6	                            je 0x4002f26	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4002f60	      0x410fb64500	                   movzx eax, byte [r13]	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002f65	            0x84c0	                             test al, al	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002f67	            0x74bd	                            je 0x4002f26	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002f69	    0xf68000000000	                      test byte [rax], 1	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002f70	            0x741a	                            je 0x4002f8c	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002f72	          0x4c89ea	                            mov rdx, r13	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002f75	           0xf1f00	                         nop dword [rax]	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002f78	        0x4883c201	                              add rdx, 1	       657	ref-filter.c	FUNCTION_25	WHILE_1
0x4002f7c	           0xfb602	                   movzx eax, byte [rdx]	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002f7f	            0x84c0	                             test al, al	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002f81	            0x74a3	                            je 0x4002f26	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002f83	    0xf68000000000	                      test byte [rax], 1	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002f8a	            0x75ec	                           jne 0x4002f78	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002f8c	    0x41804c241004	                 or byte [r12 + 0x10], 4	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x4002f92	            0xeb92	                           jmp 0x4002f26	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x4002f94	         0xf1f4000	                         nop dword [rax]	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x4002f98	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4002f9d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4002fa2	      0xe9fefeffff	                           jmp 0x4002ea5	        54	gettext.h	FUNCTION_120
0x4002fa7	    0x660f1f840000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_120
0x4002fb0	    0x803d00000000	                cmp byte [0x04002fb7], 0	       168	strbuf.h	FUNCTION_163	CALL_2
0x4002fb7	            0x7483	                            je 0x4002f3c	       168	strbuf.h	FUNCTION_163	CALL_2
0x4002fb9	      0xe800000000	                          call 0x4002fbe	       168	strbuf.h	FUNCTION_163	CALL_2
0x4002fbe	            0x6690	                                     nop	       168	strbuf.h	FUNCTION_163	CALL_2
0x4002fc0	        0x4c8b6d18	            mov r13, qword [rbp + 0x18] 	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4002fc4	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4002fc9	          0x4c89ee	                            mov rsi, r13	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4002fcc	      0xe800000000	                          call 0x4002fd1	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4002fd1	            0x85c0	                           test eax, eax	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4002fd3	     0xf844dffffff	                            je 0x4002f26	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4002fd9	      0xe940ffffff	                           jmp 0x4002f1e	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
setup_ref_filter_porcelain_msg	IF,0:functions,0:SWITCH,0:CALL,4:DO,0:WHILE,0:ELSE,0:FOR,0	23
0x40037e0	        0x4883ec08	                              sub rsp, 8	        34	ref-filter.c	FUNCTION_1
0x40037e4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x40037e9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x40037ee	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x40037f0	      0xe800000000	                          call 0x40037f5	        54	gettext.h	FUNCTION_120
0x40037f5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x40037fa	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x40037ff	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4003801	    0x488905000000	            mov qword [0x04003808], rax 	        35	ref-filter.c	FUNCTION_1	CALL_1
0x4003808	      0xe800000000	                          call 0x400380d	        54	gettext.h	FUNCTION_120
0x400380d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x4003812	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4003817	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4003819	    0x488905000000	            mov qword [0x04003820], rax 	        36	ref-filter.c	FUNCTION_1	CALL_2
0x4003820	      0xe800000000	                          call 0x4003825	        54	gettext.h	FUNCTION_120
0x4003825	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x400382a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x400382f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_120
0x4003831	    0x488905000000	            mov qword [0x04003838], rax 	        37	ref-filter.c	FUNCTION_1	CALL_3
0x4003838	      0xe800000000	                          call 0x400383d	        54	gettext.h	FUNCTION_120
0x400383d	    0x488905000000	            mov qword [0x04003844], rax 	        38	ref-filter.c	FUNCTION_1	CALL_4
0x4003844	        0x4883c408	                              add rsp, 8	        39	ref-filter.c	FUNCTION_1
0x4003848	              0xc3	                                     ret	        39	ref-filter.c	FUNCTION_1
ref_array_push	IF,0:functions,0:SWITCH,0:CALL,1:DO,0:WHILE,0:ELSE,0:FOR,0	47
0x4004370	              0x55	                                push rbp	      1929	ref-filter.c	FUNCTION_71
0x4004371	              0x53	                                push rbx	      1929	ref-filter.c	FUNCTION_71
0x4004372	          0x4889fb	                            mov rbx, rdi	      1929	ref-filter.c	FUNCTION_71
0x4004375	          0x4889f7	                            mov rdi, rsi	      1929	ref-filter.c	FUNCTION_71
0x4004378	          0x4889d6	                            mov rsi, rdx	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x400437b	        0x4883ec08	                              sub rsp, 8	      1929	ref-filter.c	FUNCTION_71
0x400437f	      0xe87cbdffff	             call sym.new_ref_array_item	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x4004384	          0x48630b	                 movsxd rcx, dword [rbx]	      1932	ref-filter.c	FUNCTION_71
0x4004387	          0x4889c5	                            mov rbp, rax	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x400438a	          0x8b4304	                mov eax, dword [rbx + 4]	      1932	ref-filter.c	FUNCTION_71
0x400438d	            0x39c1	                            cmp ecx, eax	      1932	ref-filter.c	FUNCTION_71
0x400438f	            0x7c5f	                            jl 0x40043f0	      1932	ref-filter.c	FUNCTION_71
0x4004391	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1932	ref-filter.c	FUNCTION_71
0x4004395	            0x89c2	                            mov edx, eax	      1932	ref-filter.c	FUNCTION_71
0x4004397	          0xc1ea1f	                           shr edx, 0x1f	      1932	ref-filter.c	FUNCTION_71
0x400439a	             0x1c2	                            add edx, eax	      1932	ref-filter.c	FUNCTION_71
0x400439c	            0xd1fa	                              sar edx, 1	      1932	ref-filter.c	FUNCTION_71
0x400439e	            0x39d1	                            cmp ecx, edx	      1932	ref-filter.c	FUNCTION_71
0x40043a0	            0x7d46	                           jge 0x40043e8	      1932	ref-filter.c	FUNCTION_71
0x40043a2	          0x895304	                mov dword [rbx + 4], edx	      1932	ref-filter.c	FUNCTION_71
0x40043a5	          0x4863d2	                         movsxd rdx, edx	      1932	ref-filter.c	FUNCTION_71
0x40043a8	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_105	IF_1
0x40043b2	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_105	IF_1
0x40043b5	            0x773f	                            ja 0x40043f6	       795	git-compat-util.h	FUNCTION_105	IF_1
0x40043b7	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1932	ref-filter.c	FUNCTION_71
0x40043bb	    0x488d34d50000	                        lea rsi, [rdx*8]	      1932	ref-filter.c	FUNCTION_71
0x40043c3	      0xe800000000	                          call 0x40043c8	      1932	ref-filter.c	FUNCTION_71
0x40043c8	          0x48630b	                 movsxd rcx, dword [rbx]	      1932	ref-filter.c	FUNCTION_71
0x40043cb	        0x48894308	                mov qword [rbx + 8], rax	      1932	ref-filter.c	FUNCTION_71
0x40043cf	          0x8d5101	                      lea edx, [rcx + 1]	      1933	ref-filter.c	FUNCTION_71
0x40043d2	            0x8913	                    mov dword [rbx], edx	      1933	ref-filter.c	FUNCTION_71
0x40043d4	        0x48892cc8	            mov qword [rax + rcx*8], rbp	      1933	ref-filter.c	FUNCTION_71
0x40043d8	        0x4883c408	                              add rsp, 8	      1936	ref-filter.c	FUNCTION_71
0x40043dc	          0x4889e8	                            mov rax, rbp	      1936	ref-filter.c	FUNCTION_71
0x40043df	              0x5b	                                 pop rbx	      1936	ref-filter.c	FUNCTION_71
0x40043e0	              0x5d	                                 pop rbp	      1936	ref-filter.c	FUNCTION_71
0x40043e1	              0xc3	                                     ret	      1936	ref-filter.c	FUNCTION_71
0x40043e2	    0x660f1f440000	                    nop word [rax + rax]	      1936	ref-filter.c	FUNCTION_71
0x40043e8	          0x8d5101	                      lea edx, [rcx + 1]	      1932	ref-filter.c	FUNCTION_71
0x40043eb	          0x895304	                mov dword [rbx + 4], edx	      1932	ref-filter.c	FUNCTION_71
0x40043ee	            0xebb5	                           jmp 0x40043a5	      1932	ref-filter.c	FUNCTION_71
0x40043f0	        0x488b4308	                mov rax, qword [rbx + 8]	      1932	ref-filter.c	FUNCTION_71
0x40043f4	            0xebd9	                           jmp 0x40043cf	      1932	ref-filter.c	FUNCTION_71
0x40043f6	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x40043fb	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x4004400	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x4004402	      0xe800000000	                          call 0x4004407	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
push_stack_element	IF,0:functions,0:SWITCH,0:CALL,2:DO,0:WHILE,0:ELSE,0:FOR,0	18
0x40001e0	              0x55	                                push rbp	       558	ref-filter.c	FUNCTION_19
0x40001e1	              0x53	                                push rbx	       558	ref-filter.c	FUNCTION_19
0x40001e2	          0x4889fd	                            mov rbp, rdi	       558	ref-filter.c	FUNCTION_19
0x40001e5	      0xbe30000000	                           mov esi, 0x30	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40001ea	      0xbf01000000	                              mov edi, 1	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40001ef	        0x4883ec08	                              sub rsp, 8	       558	ref-filter.c	FUNCTION_19
0x40001f3	      0xe800000000	                          call 0x40001f8	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40001f8	        0x488d7808	                      lea rdi, [rax + 8]	       561	ref-filter.c	FUNCTION_19	CALL_2
0x40001fc	            0x31f6	                            xor esi, esi	       561	ref-filter.c	FUNCTION_19	CALL_2
0x40001fe	          0x4889c3	                            mov rbx, rax	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4000201	      0xe800000000	                          call 0x4000206	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4000206	        0x488b4500	                    mov rax, qword [rbp]	       562	ref-filter.c	FUNCTION_19
0x400020a	          0x488903	                    mov qword [rbx], rax	       562	ref-filter.c	FUNCTION_19
0x400020d	        0x48895d00	                    mov qword [rbp], rbx	       563	ref-filter.c	FUNCTION_19
0x4000211	        0x4883c408	                              add rsp, 8	       564	ref-filter.c	FUNCTION_19
0x4000215	              0x5b	                                 pop rbx	       564	ref-filter.c	FUNCTION_19
0x4000216	              0x5d	                                 pop rbp	       564	ref-filter.c	FUNCTION_19
0x4000217	              0xc3	                                     ret	       564	ref-filter.c	FUNCTION_19
