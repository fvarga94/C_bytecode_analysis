check_offset_overflow	ELSE,0:CALL,4:WHILE,0:functions,0:IF,2:SWITCH,0:DO,0:FOR,0	23
0x4000040	        0x4883ec08	                              sub rsp, 8	        35	sliding_window.c	FUNCTION_4
0x4000044	          0x4885f6	                           test rsi, rsi	        36	sliding_window.c	FUNCTION_4	IF_1	CALL_1
0x4000047	            0x7838	                            js 0x4000081	        36	sliding_window.c	FUNCTION_4	IF_1	CALL_1
0x4000049	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	        39	sliding_window.c	FUNCTION_4	IF_2	CALL_3
0x4000053	          0x4829f8	                            sub rax, rdi	        39	sliding_window.c	FUNCTION_4	IF_2	CALL_3
0x4000056	          0x4839c6	                            cmp rsi, rax	        39	sliding_window.c	FUNCTION_4	IF_2	CALL_3
0x4000059	            0x7f0d	                            jg 0x4000068	        39	sliding_window.c	FUNCTION_4	IF_2	CALL_3
0x400005b	            0x31c0	                            xor eax, eax	        43	sliding_window.c	FUNCTION_4
0x400005d	        0x4883c408	                              add rsp, 8	        44	sliding_window.c	FUNCTION_4
0x4000061	              0xc3	                                     ret	        44	sliding_window.c	FUNCTION_4
0x4000062	    0x660f1f440000	                    nop word [rax + rax]	        44	sliding_window.c	FUNCTION_4
0x4000068	          0x4889f2	                            mov rdx, rsi	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x400006b	            0x31c0	                            xor eax, eax	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x400006d	          0x4889fe	                            mov rsi, rdi	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x4000070	      0xbf00000000	                              mov edi, 0	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x4000075	      0xe800000000	                          call 0x400007a	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x400007a	      0xb8ffffffff	                     mov eax, 0xffffffff	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x400007f	            0xebdc	                           jmp 0x400005d	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x4000081	      0xbf00000000	                              mov edi, 0	        37	sliding_window.c	FUNCTION_4	IF_1	CALL_2
0x4000086	            0x31c0	                            xor eax, eax	        37	sliding_window.c	FUNCTION_4	IF_1	CALL_2
0x4000088	      0xe800000000	                          call 0x400008d	        37	sliding_window.c	FUNCTION_4	IF_1	CALL_2
0x400008d	      0xb8ffffffff	                     mov eax, 0xffffffff	        37	sliding_window.c	FUNCTION_4	IF_1	CALL_2
0x4000092	            0xebc9	                           jmp 0x400005d	        37	sliding_window.c	FUNCTION_4	IF_1	CALL_2
move_window	ELSE,2:CALL,11:WHILE,0:functions,0:IF,7:SWITCH,0:DO,0:FOR,0	141
0x40000a0	            0x4157	                                push r15	        47	sliding_window.c	FUNCTION_5
0x40000a2	            0x4156	                                push r14	        47	sliding_window.c	FUNCTION_5
0x40000a4	            0x4155	                                push r13	        47	sliding_window.c	FUNCTION_5
0x40000a6	            0x4154	                                push r12	        47	sliding_window.c	FUNCTION_5
0x40000a8	              0x55	                                push rbp	        47	sliding_window.c	FUNCTION_5
0x40000a9	              0x53	                                push rbx	        47	sliding_window.c	FUNCTION_5
0x40000aa	        0x4883ec08	                              sub rsp, 8	        47	sliding_window.c	FUNCTION_5
0x40000ae	          0x4885ff	                           test rdi, rdi	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000b1	     0xf84d2010000	                            je 0x4000289	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000b7	          0x4889f5	                            mov rbp, rsi	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000ba	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000be	        0x48397710	            cmp qword [rdi + 0x10], rsi 	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000c2	          0x4889fb	                            mov rbx, rdi	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000c5	     0xf87a5010000	                            ja 0x4000270	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000cb	        0x488b7f08	                mov rdi, qword [rdi + 8]	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40000cf	          0x4989d4	                            mov r12, rdx	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40000d2	      0xe869ffffff	          call sym.check_offset_overflow	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40000d7	            0x85c0	                           test eax, eax	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40000d9	     0xf8578010000	                           jne 0x4000257	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40000df	          0x4c89e6	                            mov rsi, r12	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40000e2	          0x4889ef	                            mov rdi, rbp	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40000e5	      0xe856ffffff	          call sym.check_offset_overflow	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40000ea	            0x85c0	                           test eax, eax	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40000ec	          0x4189c5	                           mov r13d, eax	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40000ef	     0xf85ac000000	                           jne 0x40001a1	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40000f5	        0x488b4308	                mov rax, qword [rbx + 8]	        55	sliding_window.c	FUNCTION_5	IF_2
0x40000f9	          0x4839c5	                            cmp rbp, rax	        55	sliding_window.c	FUNCTION_5	IF_2
0x40000fc	     0xf8c26010000	                            jl 0x4000228	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000102	          0x4889c1	                            mov rcx, rax	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000105	        0x48034b10	             add rcx, qword [rbx + 0x10]	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000109	      0x4a8d542500	                    lea rdx, [rbp + r12]	        55	sliding_window.c	FUNCTION_5	IF_2
0x400010e	          0x4839ca	                            cmp rdx, rcx	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000111	     0xf8211010000	                            jb 0x4000228	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000117	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	        57	sliding_window.c	FUNCTION_5	IF_3
0x400011b	          0x4885c9	                           test rcx, rcx	        57	sliding_window.c	FUNCTION_5	IF_3
0x400011e	            0x7809	                            js 0x4000129	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000120	          0x4839d1	                            cmp rcx, rdx	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000123	     0xf8c17010000	                            jl 0x4000240	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000129	          0x4889c2	                            mov rdx, rax	        60	sliding_window.c	FUNCTION_5
0x400012c	        0x48035328	             add rdx, qword [rbx + 0x28]	        60	sliding_window.c	FUNCTION_5
0x4000130	          0x4839d5	                            cmp rbp, rdx	        61	sliding_window.c	FUNCTION_5	IF_4
0x4000133	            0x7d3b	                           jge 0x4000170	        61	sliding_window.c	FUNCTION_5	IF_4
0x4000135	          0x4889ea	                            mov rdx, rbp	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x4000138	        0x488d7b20	                   lea rdi, [rbx + 0x20]	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x400013c	            0x31f6	                            xor esi, esi	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x400013e	          0x4829c2	                            sub rdx, rax	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x4000141	      0xe800000000	                          call 0x4000146	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x4000146	        0x488b4328	            mov rax, qword [rbx + 0x28] 	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x400014a	          0x4939c4	                            cmp r12, rax	        71	sliding_window.c	FUNCTION_5	IF_6
0x400014d	     0xf8381000000	                           jae 0x40001d4	        71	sliding_window.c	FUNCTION_5	IF_6
0x4000153	        0x48896b08	                mov qword [rbx + 8], rbp	        76	sliding_window.c	FUNCTION_5
0x4000157	        0x4c896310	             mov qword [rbx + 0x10], r12	        77	sliding_window.c	FUNCTION_5
0x400015b	        0x4883c408	                              add rsp, 8	        79	sliding_window.c	FUNCTION_5
0x400015f	          0x4489e8	                           mov eax, r13d	        79	sliding_window.c	FUNCTION_5
0x4000162	              0x5b	                                 pop rbx	        79	sliding_window.c	FUNCTION_5
0x4000163	              0x5d	                                 pop rbp	        79	sliding_window.c	FUNCTION_5
0x4000164	            0x415c	                                 pop r12	        79	sliding_window.c	FUNCTION_5
0x4000166	            0x415d	                                 pop r13	        79	sliding_window.c	FUNCTION_5
0x4000168	            0x415e	                                 pop r14	        79	sliding_window.c	FUNCTION_5
0x400016a	            0x415f	                                 pop r15	        79	sliding_window.c	FUNCTION_5
0x400016c	              0xc3	                                     ret	        79	sliding_window.c	FUNCTION_5
0x400016d	           0xf1f00	                         nop dword [rax]	        79	sliding_window.c	FUNCTION_5
0x4000170	          0x4c8b3b	                    mov r15, qword [rbx]	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_9
0x4000173	          0x4989ee	                            mov r14, rbp	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_9
0x4000176	          0x4929d6	                            sub r14, rdx	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_9
0x4000179	          0x4c89f6	                            mov rsi, r14	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x400017c	          0x4c89ff	                            mov rdi, r15	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x400017f	      0xe800000000	                          call 0x4000184	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x4000184	          0x4939c6	                            cmp r14, rax	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x4000187	            0x7427	                            je 0x40001b0	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x4000189	          0x4c89ff	                            mov rdi, r15	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x400018c	      0xe800000000	                          call 0x4000191	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x4000191	            0x85c0	                           test eax, eax	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x4000193	            0x746a	                            je 0x40001ff	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x4000195	      0xbf00000000	                              mov edi, 0	        15	sliding_window.c	FUNCTION_1	CALL_3
0x400019a	            0x31c0	                            xor eax, eax	        15	sliding_window.c	FUNCTION_1	CALL_3
0x400019c	      0xe800000000	                          call 0x40001a1	        15	sliding_window.c	FUNCTION_1	CALL_3
0x40001a1	    0x41bdffffffff	                    mov r13d, 0xffffffff	        67	sliding_window.c	FUNCTION_5	ELSE_1	IF_5
0x40001a7	            0xebb2	                           jmp 0x400015b	        67	sliding_window.c	FUNCTION_5	ELSE_1	IF_5
0x40001a9	     0xf1f80000000	                         nop dword [rax]	        67	sliding_window.c	FUNCTION_5	ELSE_1	IF_5
0x40001b0	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       165	strbuf.h	FUNCTION_8	IF_2
0x40001b4	    0x48c743280000	               mov qword [rbx + 0x28], 0	       164	strbuf.h	FUNCTION_8
0x40001bc	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_8	IF_2
0x40001c2	            0x744c	                            je 0x4000210	       165	strbuf.h	FUNCTION_8	IF_2
0x40001c4	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_8	IF_2
0x40001c7	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       166	strbuf.h	FUNCTION_8	IF_2
0x40001cb	          0x4939c4	                            cmp r12, rax	        71	sliding_window.c	FUNCTION_5	IF_6
0x40001ce	     0xf827fffffff	                            jb 0x4000153	        71	sliding_window.c	FUNCTION_5	IF_6
0x40001d4	          0x4c8b33	                    mov r14, qword [rbx]	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_11
0x40001d7	          0x4c89e2	                            mov rdx, r12	        28	sliding_window.c	FUNCTION_3	CALL_1
0x40001da	        0x488d7320	                   lea rsi, [rbx + 0x20]	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_11
0x40001de	          0x4829c2	                            sub rdx, rax	        28	sliding_window.c	FUNCTION_3	CALL_1
0x40001e1	          0x4c89f7	                            mov rdi, r14	        28	sliding_window.c	FUNCTION_3	CALL_1
0x40001e4	      0xe800000000	                          call 0x40001e9	        28	sliding_window.c	FUNCTION_3	CALL_1
0x40001e9	        0x4c3b6328	            cmp r12, qword [rbx + 0x28] 	        29	sliding_window.c	FUNCTION_3	IF_1
0x40001ed	     0xf8460ffffff	                            je 0x4000153	        29	sliding_window.c	FUNCTION_3	IF_1
0x40001f3	          0x4c89f7	                            mov rdi, r14	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40001f6	      0xe800000000	                          call 0x40001fb	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40001fb	            0x85c0	                           test eax, eax	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40001fd	            0x7596	                           jne 0x4000195	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40001ff	      0xbf00000000	                              mov edi, 0	        14	sliding_window.c	FUNCTION_1	CALL_2
0x4000204	            0x31c0	                            xor eax, eax	        14	sliding_window.c	FUNCTION_1	CALL_2
0x4000206	      0xe800000000	                          call 0x400020b	        14	sliding_window.c	FUNCTION_1	CALL_2
0x400020b	            0xeb94	                           jmp 0x40001a1	        14	sliding_window.c	FUNCTION_1	CALL_2
0x400020d	           0xf1f00	                         nop dword [rax]	        14	sliding_window.c	FUNCTION_1	CALL_2
0x4000210	    0x803d00000000	                cmp byte [0x04000217], 0	       168	strbuf.h	FUNCTION_8	CALL_2
0x4000217	     0xf8585000000	                           jne 0x40002a2	       168	strbuf.h	FUNCTION_8	CALL_2
0x400021d	            0x31c0	                            xor eax, eax	       168	strbuf.h	FUNCTION_8	CALL_2
0x400021f	            0xebb3	                           jmp 0x40001d4	       168	strbuf.h	FUNCTION_8	CALL_2
0x4000221	     0xf1f80000000	                         nop dword [rax]	       168	strbuf.h	FUNCTION_8	CALL_2
0x4000228	      0xbf00000000	                              mov edi, 0	        56	sliding_window.c	FUNCTION_5	CALL_6
0x400022d	            0x31c0	                            xor eax, eax	        56	sliding_window.c	FUNCTION_5	CALL_6
0x400022f	    0x41bdffffffff	                    mov r13d, 0xffffffff	        56	sliding_window.c	FUNCTION_5	CALL_6
0x4000235	      0xe800000000	                          call 0x400023a	        56	sliding_window.c	FUNCTION_5	CALL_6
0x400023a	      0xe91cffffff	                           jmp 0x400015b	        56	sliding_window.c	FUNCTION_5	CALL_6
0x400023f	              0x90	                                     nop	        56	sliding_window.c	FUNCTION_5	CALL_6
0x4000240	      0xbf00000000	                              mov edi, 0	        58	sliding_window.c	FUNCTION_5	CALL_7
0x4000245	            0x31c0	                            xor eax, eax	        58	sliding_window.c	FUNCTION_5	CALL_7
0x4000247	    0x41bdffffffff	                    mov r13d, 0xffffffff	        58	sliding_window.c	FUNCTION_5	CALL_7
0x400024d	      0xe800000000	                          call 0x4000252	        58	sliding_window.c	FUNCTION_5	CALL_7
0x4000252	      0xe904ffffff	                           jmp 0x400015b	        58	sliding_window.c	FUNCTION_5	CALL_7
0x4000257	      0xb900000000	                              mov ecx, 0	        51	sliding_window.c	FUNCTION_5	CALL_4
0x400025c	      0xba33000000	                           mov edx, 0x33	        51	sliding_window.c	FUNCTION_5	CALL_4
0x4000261	      0xbe00000000	                              mov esi, 0	        51	sliding_window.c	FUNCTION_5	CALL_4
0x4000266	      0xbf00000000	                              mov edi, 0	        51	sliding_window.c	FUNCTION_5	CALL_4
0x400026b	      0xe800000000	                          call 0x4000270	        51	sliding_window.c	FUNCTION_5	CALL_4
0x4000270	      0xb900000000	                              mov ecx, 0	        50	sliding_window.c	FUNCTION_5	CALL_2
0x4000275	      0xba32000000	                           mov edx, 0x32	        50	sliding_window.c	FUNCTION_5	CALL_2
0x400027a	      0xbe00000000	                              mov esi, 0	        50	sliding_window.c	FUNCTION_5	CALL_2
0x400027f	      0xbf00000000	                              mov edi, 0	        50	sliding_window.c	FUNCTION_5	CALL_2
0x4000284	      0xe800000000	                          call 0x4000289	        50	sliding_window.c	FUNCTION_5	CALL_2
0x4000289	      0xb900000000	                              mov ecx, 0	        49	sliding_window.c	FUNCTION_5	CALL_1
0x400028e	      0xba31000000	                           mov edx, 0x31	        49	sliding_window.c	FUNCTION_5	CALL_1
0x4000293	      0xbe00000000	                              mov esi, 0	        49	sliding_window.c	FUNCTION_5	CALL_1
0x4000298	      0xbf00000000	                              mov edi, 0	        49	sliding_window.c	FUNCTION_5	CALL_1
0x400029d	      0xe800000000	                          call 0x40002a2	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40002a2	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_8	CALL_2
0x40002a7	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_8	CALL_2
0x40002ac	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_8	CALL_2
0x40002b1	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_8	CALL_2
0x40002b6	      0xe800000000	                   call section_end..bss	       168	strbuf.h	FUNCTION_8	CALL_2
