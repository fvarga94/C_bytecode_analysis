process_commit	ELSE,0:CALL,0:IF,0:DO,0:WHILE,0:FOR,0:SWITCH,0:functions,0	7
0x4000040	        0x488b4704	                mov rax, qword [rdi + 4]	       453	describe.c	FUNCTION_11
0x4000044	          0x488906	                    mov qword [rsi], rax	       453	describe.c	FUNCTION_11
0x4000047	        0x488b470c	              mov rax, qword [rdi + 0xc]	       453	describe.c	FUNCTION_11
0x400004b	        0x48894608	                mov qword [rsi + 8], rax	       453	describe.c	FUNCTION_11
0x400004f	          0x8b4714	            mov eax, dword [rdi + 0x14] 	       453	describe.c	FUNCTION_11
0x4000052	          0x894610	             mov dword [rsi + 0x10], eax	       453	describe.c	FUNCTION_11
0x4000055	              0xc3	                                     ret	       453	describe.c	FUNCTION_11
get_name	ELSE,5:CALL,7:IF,9:DO,0:WHILE,0:FOR,0:SWITCH,0:functions,2	245
0x4000210	            0x4157	                                push r15	       134	describe.c	FUNCTION_5
0x4000212	            0x4156	                                push r14	       134	describe.c	FUNCTION_5
0x4000214	            0x4155	                                push r13	       134	describe.c	FUNCTION_5
0x4000216	            0x4154	                                push r12	       134	describe.c	FUNCTION_5
0x4000218	          0x4989f4	                            mov r12, rsi	       134	describe.c	FUNCTION_5
0x400021b	              0x55	                                push rbp	       134	describe.c	FUNCTION_5
0x400021c	              0x53	                                push rbx	       134	describe.c	FUNCTION_5
0x400021d	          0x4889fd	                            mov rbp, rdi	       134	describe.c	FUNCTION_5
0x4000220	          0x4889fb	                            mov rbx, rdi	       134	describe.c	FUNCTION_5
0x4000223	        0x4883ec38	                           sub rsp, 0x38	       134	describe.c	FUNCTION_5
0x4000227	    0x64488b042528	                mov rax, qword fs:[0x28]	       134	describe.c	FUNCTION_5
0x4000230	      0x4889442428	             mov qword [rsp + 0x28], rax	       134	describe.c	FUNCTION_5
0x4000235	            0x31c0	                            xor eax, eax	       134	describe.c	FUNCTION_5
0x4000237	      0xb800000000	                              mov eax, 0	       134	describe.c	FUNCTION_5
0x400023c	            0xeb13	                           jmp 0x4000251	       134	describe.c	FUNCTION_5
0x400023e	            0x6690	                                     nop	       134	describe.c	FUNCTION_5
0x4000240	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000244	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000248	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_22	DO_1
0x400024b	     0xf85cf010000	                           jne 0x4000420	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000251	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x4000254	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x4000256	            0x75e8	                           jne 0x4000240	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x4000258	    0x8b0d00000000	            mov ecx, dword [0x0400025e] 	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x400025e	    0x41bd01000000	                             mov r13d, 1	       141	describe.c	FUNCTION_5	IF_1
0x4000264	            0x85c9	                           test ecx, ecx	       158	describe.c	FUNCTION_5	IF_4
0x4000266	            0x7478	                            je 0x40002e0	       158	describe.c	FUNCTION_5	IF_4
0x4000268	    0x4c8b35000000	            mov r14, qword [0x0400026f] 	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x400026f	          0x4d85f6	                           test r14, r14	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000272	            0x746c	                            je 0x40002e0	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000274	        0x48c1e104	                              shl rcx, 4	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000278	        0x498d040e	                    lea rax, [r14 + rcx]	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x400027c	          0x4939c6	                            cmp r14, rax	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x400027f	            0x7223	                            jb 0x40002a4	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000281	            0xeb5d	                           jmp 0x40002e0	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000283	       0xf1f440000	                   nop dword [rax + rax]	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000288	        0x4983c610	                           add r14, 0x10	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x400028c	            0x7452	                            je 0x40002e0	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x400028e	    0x8b0500000000	            mov eax, dword [0x04000294] 	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000294	        0x48c1e004	                              shl rax, 4	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000298	    0x480305000000	             add rax, qword [0x0400029f]	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x400029f	          0x4939c6	                            cmp r14, rax	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x40002a2	            0x733c	                           jae 0x40002e0	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x40002a4	          0x498b3e	                    mov rdi, qword [r14]	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x40002a7	            0x31d2	                            xor edx, edx	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x40002a9	          0x4889de	                            mov rsi, rbx	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x40002ac	      0xe800000000	                          call 0x40002b1	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x40002b1	            0x85c0	                           test eax, eax	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x40002b3	            0x75d3	                           jne 0x4000288	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x40002b5	           0xf1f00	                         nop dword [rax]	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x40002b8	            0x31c0	                            xor eax, eax	       209	describe.c	FUNCTION_5
0x40002ba	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       209	describe.c	FUNCTION_5
0x40002bf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       209	describe.c	FUNCTION_5
0x40002c8	     0xf85f1020000	                           jne 0x40005bf	       209	describe.c	FUNCTION_5
0x40002ce	        0x4883c438	                           add rsp, 0x38	       209	describe.c	FUNCTION_5
0x40002d2	              0x5b	                                 pop rbx	       209	describe.c	FUNCTION_5
0x40002d3	              0x5d	                                 pop rbp	       209	describe.c	FUNCTION_5
0x40002d4	            0x415c	                                 pop r12	       209	describe.c	FUNCTION_5
0x40002d6	            0x415d	                                 pop r13	       209	describe.c	FUNCTION_5
0x40002d8	            0x415e	                                 pop r14	       209	describe.c	FUNCTION_5
0x40002da	            0x415f	                                 pop r15	       209	describe.c	FUNCTION_5
0x40002dc	              0xc3	                                     ret	       209	describe.c	FUNCTION_5
0x40002dd	           0xf1f00	                         nop dword [rax]	       209	describe.c	FUNCTION_5
0x40002e0	    0x8b0500000000	            mov eax, dword [0x040002e6] 	       209	describe.c	FUNCTION_5
0x40002e6	            0x85c0	                           test eax, eax	       171	describe.c	FUNCTION_5	IF_5
0x40002e8	            0x744b	                            je 0x4000335	       171	describe.c	FUNCTION_5	IF_5
0x40002ea	    0x4c8b35000000	            mov r14, qword [0x040002f1] 	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40002f1	          0x4d85f6	                           test r14, r14	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40002f4	            0x74c2	                            je 0x40002b8	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40002f6	        0x48c1e004	                              shl rax, 4	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40002fa	          0x4c01f0	                            add rax, r14	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40002fd	          0x4939c6	                            cmp r14, rax	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000300	            0x7222	                            jb 0x4000324	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000302	            0xebb4	                           jmp 0x40002b8	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000304	         0xf1f4000	                         nop dword [rax]	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000308	        0x4983c610	                           add r14, 0x10	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x400030c	            0x74aa	                            je 0x40002b8	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x400030e	    0x8b0500000000	            mov eax, dword [0x04000314] 	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000314	        0x48c1e004	                              shl rax, 4	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000318	    0x480305000000	             add rax, qword [0x0400031f]	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x400031f	          0x4939c6	                            cmp r14, rax	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000322	            0x7394	                           jae 0x40002b8	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000324	          0x498b3e	                    mov rdi, qword [r14]	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x4000327	            0x31d2	                            xor edx, edx	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x4000329	          0x4889de	                            mov rsi, rbx	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x400032c	      0xe800000000	                          call 0x4000331	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x4000331	            0x85c0	                           test eax, eax	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x4000333	            0x75d3	                           jne 0x4000308	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x4000335	      0x488d742410	                   lea rsi, [rsp + 0x10]	       187	describe.c	FUNCTION_5	IF_7	CALL_4
0x400033a	          0x4889ef	                            mov rdi, rbp	       187	describe.c	FUNCTION_5	IF_7	CALL_4
0x400033d	      0xe800000000	                          call 0x4000342	       187	describe.c	FUNCTION_5	IF_7	CALL_4
0x4000342	            0x85c0	                           test eax, eax	       187	describe.c	FUNCTION_5	IF_7	CALL_4
0x4000344	     0xf8526010000	                           jne 0x4000470	       187	describe.c	FUNCTION_5	IF_7	CALL_4
0x400034a	      0x488d742410	                   lea rsi, [rsp + 0x10]	       975	cache.h	FUNCTION_50	CALL_1
0x400034f	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_50	CALL_1
0x4000354	          0x4c89e7	                            mov rdi, r12	       975	cache.h	FUNCTION_50	CALL_1
0x4000357	      0xe800000000	                          call 0x400035c	       975	cache.h	FUNCTION_50	CALL_1
0x400035c	            0x85c0	                           test eax, eax	       201	describe.c	FUNCTION_5	IF_8
0x400035e	      0xb802000000	                              mov eax, 2	       201	describe.c	FUNCTION_5	IF_8
0x4000363	        0x440f45e8	                        cmovne r13d, eax	       201	describe.c	FUNCTION_5	IF_8
0x4000367	    0x8b1500000000	            mov edx, dword [0x0400036d] 	       207	describe.c	FUNCTION_5	CALL_7
0x400036d	        0x488d4505	                      lea rax, [rbp + 5]	       207	describe.c	FUNCTION_5	CALL_7
0x4000371	        0x4883c50a	                            add rbp, 0xa	       207	describe.c	FUNCTION_5	CALL_7
0x4000375	          0x4889e6	                            mov rsi, rsp	       308	hashmap.h	FUNCTION_73	CALL_2
0x4000378	      0xbf00000000	                              mov edi, 0	       308	hashmap.h	FUNCTION_73	CALL_2
0x400037d	    0x48c704240000	                      mov qword [rsp], 0	       249	hashmap.h	FUNCTION_71
0x4000385	            0x85d2	                           test edx, edx	       207	describe.c	FUNCTION_5	CALL_7
0x4000387	      0x488d542410	                   lea rdx, [rsp + 0x10]	       308	hashmap.h	FUNCTION_73	CALL_2
0x400038c	        0x480f45e8	                         cmovne rbp, rax	       207	describe.c	FUNCTION_5	CALL_7
0x4000390	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       248	hashmap.h	FUNCTION_71
0x4000394	        0x89442408	                mov dword [rsp + 8], eax	       248	hashmap.h	FUNCTION_71
0x4000398	      0xe800000000	                          call 0x400039d	       308	hashmap.h	FUNCTION_73	CALL_2
0x400039d	          0x4885c0	                           test rax, rax	        81	describe.c	FUNCTION_3	IF_1
0x40003a0	          0x4889c3	                            mov rbx, rax	       308	hashmap.h	FUNCTION_73	CALL_2
0x40003a3	     0xf84b7010000	                            je 0x4000560	        81	describe.c	FUNCTION_3	IF_1
0x40003a9	         0xfb64030	           movzx eax, byte [rax + 0x30] 	        81	describe.c	FUNCTION_3	IF_1
0x40003ad	          0x83e003	                              and eax, 3	        81	describe.c	FUNCTION_3	IF_1
0x40003b0	           0xfb6d0	                           movzx edx, al	        81	describe.c	FUNCTION_3	IF_1
0x40003b3	          0x4139d5	                           cmp r13d, edx	        81	describe.c	FUNCTION_3	IF_1
0x40003b6	     0xf8ff4000000	                            jg 0x40004b0	        81	describe.c	FUNCTION_3	IF_1
0x40003bc	            0x3c02	                               cmp al, 2	        84	describe.c	FUNCTION_3	IF_2
0x40003be	     0xf85f4feffff	                           jne 0x40002b8	        84	describe.c	FUNCTION_3	IF_2
0x40003c4	        0x4183fd02	                             cmp r13d, 2	        84	describe.c	FUNCTION_3	IF_2
0x40003c8	     0xf85eafeffff	                           jne 0x40002b8	        84	describe.c	FUNCTION_3	IF_2
0x40003ce	      0x48837b2800	               cmp qword [rbx + 0x28], 0	        90	describe.c	FUNCTION_3	IF_2	IF_3
0x40003d3	     0xf8454010000	                            je 0x400052d	        90	describe.c	FUNCTION_3	IF_2	IF_3
0x40003d9	          0x4c89e7	                            mov rdi, r12	        97	describe.c	FUNCTION_3	IF_2	CALL_3
0x40003dc	      0xe800000000	                          call 0x40003e1	        97	describe.c	FUNCTION_3	IF_2	CALL_3
0x40003e1	          0x4885c0	                           test rax, rax	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x40003e4	          0x4989c7	                            mov r15, rax	        97	describe.c	FUNCTION_3	IF_2	CALL_3
0x40003e7	     0xf84cbfeffff	                            je 0x40002b8	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x40003ed	          0x4889c7	                            mov rdi, rax	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x40003f0	      0xe800000000	                          call 0x40003f5	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x40003f5	            0x85c0	                           test eax, eax	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x40003f7	     0xf85bbfeffff	                           jne 0x40002b8	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x40003fd	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       102	describe.c	FUNCTION_3	IF_2	IF_6
0x4000401	        0x498b4f28	            mov rcx, qword [r15 + 0x28] 	       102	describe.c	FUNCTION_3	IF_2	IF_6
0x4000405	        0x4c8d7331	                   lea r14, [rbx + 0x31]	       102	describe.c	FUNCTION_3	IF_2	IF_6
0x4000409	        0x48394828	            cmp qword [rax + 0x28], rcx 	       102	describe.c	FUNCTION_3	IF_2	IF_6
0x400040d	     0xf83a5feffff	                           jae 0x40002b8	       102	describe.c	FUNCTION_3	IF_2	IF_6
0x4000413	      0xe99f000000	                           jmp 0x40004b7	       102	describe.c	FUNCTION_3	IF_2	IF_6
0x4000418	     0xf1f84000000	                   nop dword [rax + rax]	       102	describe.c	FUNCTION_3	IF_2	IF_6
0x4000420	    0x8b0500000000	            mov eax, dword [0x04000426] 	       142	describe.c	FUNCTION_5	ELSE_1	IF_2
0x4000426	            0x85c0	                           test eax, eax	       142	describe.c	FUNCTION_5	ELSE_1	IF_2
0x4000428	     0xf848afeffff	                            je 0x40002b8	       142	describe.c	FUNCTION_5	ELSE_1	IF_2
0x400042e	    0x8b0d00000000	            mov ecx, dword [0x04000434] 	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000434	            0x85c9	                           test ecx, ecx	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000436	            0x7460	                            je 0x4000498	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000438	          0x4889eb	                            mov rbx, rbp	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x400043b	      0xb800000000	                              mov eax, 0	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000440	            0xeb17	                           jmp 0x4000459	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000442	    0x660f1f440000	                    nop word [rax + rax]	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000448	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x400044c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000450	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000453	     0xf85a9000000	                           jne 0x4000502	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000459	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x400045c	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x400045e	            0x75e8	                           jne 0x4000448	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x4000460	          0x4531ed	                          xor r13d, r13d	       135	describe.c	FUNCTION_5
0x4000463	      0xe9fcfdffff	                           jmp 0x4000264	       135	describe.c	FUNCTION_5
0x4000468	     0xf1f84000000	                   nop dword [rax + rax]	       135	describe.c	FUNCTION_5
0x4000470	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_78	CALL_3
0x4000474	      0x4889442410	             mov qword [rsp + 0x10], rax	        53	string3.h	FUNCTION_78	CALL_3
0x4000479	      0x498b442408	                mov rax, qword [r12 + 8]	        53	string3.h	FUNCTION_78	CALL_3
0x400047e	      0x4889442418	             mov qword [rsp + 0x18], rax	        53	string3.h	FUNCTION_78	CALL_3
0x4000483	      0x418b442410	            mov eax, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_78	CALL_3
0x4000488	        0x89442420	             mov dword [rsp + 0x20], eax	        53	string3.h	FUNCTION_78	CALL_3
0x400048c	      0xe9d6feffff	                           jmp 0x4000367	        53	string3.h	FUNCTION_78	CALL_3
0x4000491	     0xf1f80000000	                         nop dword [rax]	        53	string3.h	FUNCTION_78	CALL_3
0x4000498	    0x8b3500000000	            mov esi, dword [0x0400049e] 	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x400049e	            0x85f6	                           test esi, esi	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x40004a0	            0x7596	                           jne 0x4000438	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x40004a2	          0x4531ed	                          xor r13d, r13d	       135	describe.c	FUNCTION_5
0x40004a5	      0xe98bfeffff	                           jmp 0x4000335	       135	describe.c	FUNCTION_5
0x40004aa	    0x660f1f440000	                    nop word [rax + rax]	       135	describe.c	FUNCTION_5
0x40004b0	        0x4c8d7331	                   lea r14, [rbx + 0x31]	       135	describe.c	FUNCTION_5
0x40004b4	          0x4531ff	                          xor r15d, r15d	       115	describe.c	FUNCTION_4
0x40004b7	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	       115	describe.c	FUNCTION_4
0x40004bb	          0x4c89f0	                            mov rax, r14	       201	describe.c	FUNCTION_5	IF_8
0x40004be	         0xfb65330	           movzx edx, byte [rbx + 0x30] 	       125	describe.c	FUNCTION_4	IF_1
0x40004c2	        0x4183e503	                             and r13d, 3	       125	describe.c	FUNCTION_4	IF_1
0x40004c6	        0x4c897b28	             mov qword [rbx + 0x28], r15	       124	describe.c	FUNCTION_4	IF_1
0x40004ca	          0x83e2f8	                     and edx, 0xfffffff8	       125	describe.c	FUNCTION_4	IF_1
0x40004cd	          0x4109d5	                            or r13d, edx	       126	describe.c	FUNCTION_4	IF_1
0x40004d0	        0x44886b30	             mov byte [rbx + 0x30], r13b	       126	describe.c	FUNCTION_4	IF_1
0x40004d4	        0x498b1424	                    mov rdx, qword [r12]	        53	string3.h	FUNCTION_78	CALL_3
0x40004d8	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_78	CALL_3
0x40004db	      0x498b542408	                mov rdx, qword [r12 + 8]	        53	string3.h	FUNCTION_78	CALL_3
0x40004e0	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_78	CALL_3
0x40004e4	      0x418b542410	            mov edx, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_78	CALL_3
0x40004e9	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_78	CALL_3
0x40004ec	      0xe800000000	                          call 0x40004f1	       128	describe.c	FUNCTION_4	IF_1	CALL_9
0x40004f1	          0x4889ef	                            mov rdi, rbp	       129	describe.c	FUNCTION_4	IF_1	CALL_10
0x40004f4	      0xe800000000	                          call 0x40004f9	       129	describe.c	FUNCTION_4	IF_1	CALL_10
0x40004f9	        0x48894348	             mov qword [rbx + 0x48], rax	       129	describe.c	FUNCTION_4	IF_1	CALL_10
0x40004fd	      0xe9b6fdffff	                           jmp 0x40002b8	       129	describe.c	FUNCTION_4	IF_1	CALL_10
0x4000502	          0x4889eb	                            mov rbx, rbp	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000505	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_22	DO_1
0x400050a	            0xeb15	                           jmp 0x4000521	       488	git-compat-util.h	FUNCTION_22	DO_1
0x400050c	         0xf1f4000	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000510	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000514	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000518	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_22	DO_1
0x400051b	     0xf8597fdffff	                           jne 0x40002b8	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000521	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x4000524	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x4000526	            0x75e8	                           jne 0x4000510	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x4000528	      0xe933ffffff	                           jmp 0x4000460	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x400052d	        0x4c8d7331	                   lea r14, [rbx + 0x31]	        91	describe.c	FUNCTION_3	IF_2	IF_3	CALL_1
0x4000531	          0x4c89f7	                            mov rdi, r14	        91	describe.c	FUNCTION_3	IF_2	IF_3	CALL_1
0x4000534	      0xe800000000	                          call 0x4000539	        91	describe.c	FUNCTION_3	IF_2	IF_3	CALL_1
0x4000539	          0x4885c0	                           test rax, rax	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x400053c	          0x4989c7	                            mov r15, rax	        91	describe.c	FUNCTION_3	IF_2	IF_3	CALL_1
0x400053f	            0x7476	                            je 0x40005b7	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x4000541	          0x4889c7	                            mov rdi, rax	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x4000544	      0xe800000000	                          call 0x4000549	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x4000549	            0x85c0	                           test eax, eax	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x400054b	            0x756a	                           jne 0x40005b7	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x400054d	        0x4c897b28	             mov qword [rbx + 0x28], r15	        94	describe.c	FUNCTION_3	IF_2	IF_3
0x4000551	      0xe983feffff	                           jmp 0x40003d9	        94	describe.c	FUNCTION_3	IF_2	IF_3
0x4000556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        94	describe.c	FUNCTION_3	IF_2	IF_3
0x4000560	      0xbf50000000	                           mov edi, 0x50	       118	describe.c	FUNCTION_4	IF_1	IF_2	CALL_3
0x4000565	          0x4531ff	                          xor r15d, r15d	       115	describe.c	FUNCTION_4
0x4000568	      0xe800000000	                          call 0x400056d	       118	describe.c	FUNCTION_4	IF_1	IF_2	CALL_3
0x400056d	          0x4889c3	                            mov rbx, rax	       118	describe.c	FUNCTION_4	IF_1	IF_2	CALL_3
0x4000570	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_78	CALL_3
0x4000575	      0xbf00000000	                              mov edi, 0	       121	describe.c	FUNCTION_4	IF_1	IF_2	CALL_7
0x400057a	          0x4889de	                            mov rsi, rbx	       121	describe.c	FUNCTION_4	IF_1	IF_2	CALL_7
0x400057d	        0x48894310	             mov qword [rbx + 0x10], rax	        53	string3.h	FUNCTION_78	CALL_3
0x4000581	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_78	CALL_3
0x4000586	        0x48894318	             mov qword [rbx + 0x18], rax	        53	string3.h	FUNCTION_78	CALL_3
0x400058a	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        53	string3.h	FUNCTION_78	CALL_3
0x400058e	          0x894320	             mov dword [rbx + 0x20], eax	        53	string3.h	FUNCTION_78	CALL_3
0x4000591	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       248	hashmap.h	FUNCTION_71
0x4000595	    0x48c703000000	                      mov qword [rbx], 0	       249	hashmap.h	FUNCTION_71
0x400059c	          0x894308	                mov dword [rbx + 8], eax	       248	hashmap.h	FUNCTION_71
0x400059f	      0xe800000000	                          call 0x40005a4	       121	describe.c	FUNCTION_4	IF_1	IF_2	CALL_7
0x40005a4	    0x48c743480000	               mov qword [rbx + 0x48], 0	       122	describe.c	FUNCTION_4	IF_1	IF_2
0x40005ac	        0x488d4331	                   lea rax, [rbx + 0x31]	       122	describe.c	FUNCTION_4	IF_1	IF_2
0x40005b0	            0x31ff	                            xor edi, edi	       122	describe.c	FUNCTION_4	IF_1	IF_2
0x40005b2	      0xe907ffffff	                           jmp 0x40004be	       122	describe.c	FUNCTION_4	IF_1	IF_2
0x40005b7	          0x4531ff	                          xor r15d, r15d	       115	describe.c	FUNCTION_4
0x40005ba	      0xe9f8feffff	                           jmp 0x40004b7	       115	describe.c	FUNCTION_4
0x40005bf	      0xe800000000	                          call 0x40005c4	       209	describe.c	FUNCTION_5
describe_blob	ELSE,0:CALL,7:IF,2:DO,0:WHILE,0:FOR,0:SWITCH,0:functions,0	70
0x4000080	              0x53	                                push rbx	       470	describe.c	FUNCTION_13
0x4000081	    0x41b900000000	                              mov r9d, 0	       475	describe.c	FUNCTION_13	CALL_1
0x4000087	    0x41b800000000	                              mov r8d, 0	       475	describe.c	FUNCTION_13	CALL_1
0x400008d	      0xb900000000	                              mov ecx, 0	       475	describe.c	FUNCTION_13	CALL_1
0x4000092	      0xba00000000	                              mov edx, 0	       475	describe.c	FUNCTION_13	CALL_1
0x4000097	      0xbe00000000	                              mov esi, 0	       475	describe.c	FUNCTION_13	CALL_1
0x400009c	    0x4881ec100900	                          sub rsp, 0x910	       470	describe.c	FUNCTION_13
0x40000a3	    0x64488b042528	                mov rax, qword fs:[0x28]	       470	describe.c	FUNCTION_13
0x40000ac	    0x488984240809	            mov qword [rsp + 0x908], rax	       470	describe.c	FUNCTION_13
0x40000b4	            0x31c0	                            xor eax, eax	       470	describe.c	FUNCTION_13
0x40000b6	    0x488b05000000	            mov rax, qword [0x040000bd] 	       473	describe.c	FUNCTION_13
0x40000bd	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	       473	describe.c	FUNCTION_13
0x40000c2	    0x48c704240000	                      mov qword [rsp], 0	       472	describe.c	FUNCTION_13
0x40000ca	    0xc74424080000	                  mov dword [rsp + 8], 0	       472	describe.c	FUNCTION_13
0x40000d2	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       472	describe.c	FUNCTION_13
0x40000da	        0x4883ec08	                              sub rsp, 8	       475	describe.c	FUNCTION_13	CALL_1
0x40000de	      0x48897c2440	             mov qword [rsp + 0x40], rdi	       473	describe.c	FUNCTION_13
0x40000e3	      0x48895c2448	             mov qword [rsp + 0x48], rbx	       473	describe.c	FUNCTION_13
0x40000e8	      0x4889442418	             mov qword [rsp + 0x18], rax	       473	describe.c	FUNCTION_13
0x40000ed	    0x488b05000000	            mov rax, qword [0x040000f4] 	       473	describe.c	FUNCTION_13
0x40000f4	      0x4889442420	             mov qword [rsp + 0x20], rax	       473	describe.c	FUNCTION_13
0x40000f9	    0x8b0500000000	            mov eax, dword [0x040000ff] 	       473	describe.c	FUNCTION_13
0x40000ff	        0x89442428	             mov dword [rsp + 0x28], eax	       473	describe.c	FUNCTION_13
0x4000103	    0x488b84242809	           mov rax, qword [rsp + 0x928] 	       473	describe.c	FUNCTION_13
0x400010b	      0x488944242c	             mov qword [rsp + 0x2c], rax	       473	describe.c	FUNCTION_13
0x4000110	    0x488b84243009	           mov rax, qword [rsp + 0x930] 	       473	describe.c	FUNCTION_13
0x4000118	      0x4889442434	             mov qword [rsp + 0x34], rax	       473	describe.c	FUNCTION_13
0x400011d	    0x8b8424380900	           mov eax, dword [rsp + 0x938] 	       473	describe.c	FUNCTION_13
0x4000124	        0x8944243c	             mov dword [rsp + 0x3c], eax	       473	describe.c	FUNCTION_13
0x4000128	            0x6a00	                                  push 0	       475	describe.c	FUNCTION_13	CALL_1
0x400012a	            0x31c0	                            xor eax, eax	       475	describe.c	FUNCTION_13	CALL_1
0x400012c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       475	describe.c	FUNCTION_13	CALL_1
0x4000131	      0xe800000000	                          call 0x4000136	       475	describe.c	FUNCTION_13	CALL_1
0x4000136	            0x31f6	                            xor esi, esi	       479	describe.c	FUNCTION_13	CALL_2
0x4000138	          0x4889df	                            mov rdi, rbx	       479	describe.c	FUNCTION_13	CALL_2
0x400013b	      0xe800000000	                          call 0x4000140	       479	describe.c	FUNCTION_13	CALL_2
0x4000140	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000145	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000149	            0x31c9	                            xor ecx, ecx	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x400014b	          0x4889da	                            mov rdx, rbx	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x400014e	      0xe800000000	                          call 0x4000153	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000153	          0x83f801	                              cmp eax, 1	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000156	              0x5a	                                 pop rdx	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000157	              0x59	                                 pop rcx	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000158	            0x7f44	                            jg 0x400019e	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x400015a	          0x4889df	                            mov rdi, rbx	       483	describe.c	FUNCTION_13	IF_2	CALL_4
0x400015d	      0xe800000000	                          call 0x4000162	       483	describe.c	FUNCTION_13	IF_2	CALL_4
0x4000162	            0x85c0	                           test eax, eax	       483	describe.c	FUNCTION_13	IF_2	CALL_4
0x4000164	            0x7553	                           jne 0x40001b9	       483	describe.c	FUNCTION_13	IF_2	CALL_4
0x4000166	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       486	describe.c	FUNCTION_13	CALL_6
0x400016b	      0xba00000000	                              mov edx, 0	       486	describe.c	FUNCTION_13	CALL_6
0x4000170	      0xbe00000000	                              mov esi, 0	       486	describe.c	FUNCTION_13	CALL_6
0x4000175	          0x4889df	                            mov rdi, rbx	       486	describe.c	FUNCTION_13	CALL_6
0x4000178	      0xe800000000	                          call 0x400017d	       486	describe.c	FUNCTION_13	CALL_6
0x400017d	      0xe800000000	                          call 0x4000182	       487	describe.c	FUNCTION_13	CALL_7
0x4000182	    0x488b84240809	           mov rax, qword [rsp + 0x908] 	       488	describe.c	FUNCTION_13
0x400018a	    0x644833042528	                xor rax, qword fs:[0x28]	       488	describe.c	FUNCTION_13
0x4000193	            0x751f	                           jne 0x40001b4	       488	describe.c	FUNCTION_13
0x4000195	    0x4881c4100900	                          add rsp, 0x910	       488	describe.c	FUNCTION_13
0x400019c	              0x5b	                                 pop rbx	       488	describe.c	FUNCTION_13
0x400019d	              0xc3	                                     ret	       488	describe.c	FUNCTION_13
0x400019e	      0xba00000000	                              mov edx, 0	       481	describe.c	FUNCTION_13	IF_1
0x40001a3	      0xbee1010000	                          mov esi, 0x1e1	       481	describe.c	FUNCTION_13	IF_1
0x40001a8	      0xbf00000000	                              mov edi, 0	       481	describe.c	FUNCTION_13	IF_1
0x40001ad	            0x31c0	                            xor eax, eax	       481	describe.c	FUNCTION_13	IF_1
0x40001af	      0xe800000000	                          call 0x40001b4	       481	describe.c	FUNCTION_13	IF_1
0x40001b4	      0xe800000000	                          call 0x40001b9	       488	describe.c	FUNCTION_13
0x40001b9	      0xbf00000000	                              mov edi, 0	       484	describe.c	FUNCTION_13	CALL_5
0x40001be	            0x31c0	                            xor eax, eax	       484	describe.c	FUNCTION_13	CALL_5
0x40001c0	      0xe800000000	                          call 0x40001c5	       484	describe.c	FUNCTION_13	CALL_5
describe	ELSE,2:CALL,13:IF,5:DO,0:WHILE,0:FOR,0:SWITCH,0:functions,0	87
0x4000f20	            0x4154	                                push r12	       491	describe.c	FUNCTION_14
0x4000f22	              0x55	                                push rbp	       491	describe.c	FUNCTION_14
0x4000f23	          0x4189f4	                           mov r12d, esi	       491	describe.c	FUNCTION_14
0x4000f26	              0x53	                                push rbx	       491	describe.c	FUNCTION_14
0x4000f27	          0x4889fb	                            mov rbx, rdi	       491	describe.c	FUNCTION_14
0x4000f2a	        0x4883ec40	                           sub rsp, 0x40	       491	describe.c	FUNCTION_14
0x4000f2e	    0x64488b042528	                mov rax, qword fs:[0x28]	       491	describe.c	FUNCTION_14
0x4000f37	      0x4889442438	             mov qword [rsp + 0x38], rax	       491	describe.c	FUNCTION_14
0x4000f3c	            0x31c0	                            xor eax, eax	       491	describe.c	FUNCTION_14
0x4000f3e	    0x8b0500000000	            mov eax, dword [0x04000f44] 	       496	describe.c	FUNCTION_14	IF_1
0x4000f44	    0x48c704240000	                      mov qword [rsp], 0	       494	describe.c	FUNCTION_14
0x4000f4c	    0x48c744240800	                  mov qword [rsp + 8], 0	       494	describe.c	FUNCTION_14
0x4000f55	    0x48c744241000	               mov qword [rsp + 0x10], 0	       494	describe.c	FUNCTION_14
0x4000f5e	            0x85c0	                           test eax, eax	       496	describe.c	FUNCTION_14	IF_1
0x4000f60	     0xf858a000000	                           jne 0x4000ff0	       496	describe.c	FUNCTION_14	IF_1
0x4000f66	      0x488d742420	                   lea rsi, [rsp + 0x20]	       499	describe.c	FUNCTION_14	IF_2	CALL_2
0x4000f6b	          0x4889df	                            mov rdi, rbx	       499	describe.c	FUNCTION_14	IF_2	CALL_2
0x4000f6e	      0xe800000000	                          call 0x4000f73	       499	describe.c	FUNCTION_14	IF_2	CALL_2
0x4000f73	            0x85c0	                           test eax, eax	       499	describe.c	FUNCTION_14	IF_2	CALL_2
0x4000f75	     0xf85f5000000	                           jne 0x4001070	       499	describe.c	FUNCTION_14	IF_2	CALL_2
0x4000f7b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       501	describe.c	FUNCTION_14	CALL_5
0x4000f80	      0xbe01000000	                              mov esi, 1	       501	describe.c	FUNCTION_14	CALL_5
0x4000f85	      0xe800000000	                          call 0x4000f8a	       501	describe.c	FUNCTION_14	CALL_5
0x4000f8a	          0x4885c0	                           test rax, rax	       503	describe.c	FUNCTION_14	IF_3
0x4000f8d	          0x4889c5	                            mov rbp, rax	       501	describe.c	FUNCTION_14	CALL_5
0x4000f90	     0xf848a000000	                            je 0x4001020	       503	describe.c	FUNCTION_14	IF_3
0x4000f96	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       504	describe.c	FUNCTION_14	CALL_6
0x4000f9b	          0x4889e6	                            mov rsi, rsp	       504	describe.c	FUNCTION_14	CALL_6
0x4000f9e	          0x4889e3	                            mov rbx, rsp	       504	describe.c	FUNCTION_14	CALL_6
0x4000fa1	      0xe88af7ffff	                call sym.describe_commit	       504	describe.c	FUNCTION_14	CALL_6
0x4000fa6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       510	describe.c	FUNCTION_14	CALL_11
0x4000fab	      0xe800000000	                          call 0x4000fb0	       510	describe.c	FUNCTION_14	CALL_11
0x4000fb0	          0x4585e4	                         test r12d, r12d	       512	describe.c	FUNCTION_14	IF_5
0x4000fb3	            0x750d	                           jne 0x4000fc2	       512	describe.c	FUNCTION_14	IF_5
0x4000fb5	      0xbeffffffff	                     mov esi, 0xffffffff	       513	describe.c	FUNCTION_14	CALL_12
0x4000fba	          0x4889ef	                            mov rdi, rbp	       513	describe.c	FUNCTION_14	CALL_12
0x4000fbd	      0xe800000000	                          call 0x4000fc2	       513	describe.c	FUNCTION_14	CALL_12
0x4000fc2	          0x4889df	                            mov rdi, rbx	       515	describe.c	FUNCTION_14	CALL_13
0x4000fc5	      0xe800000000	                          call 0x4000fca	       515	describe.c	FUNCTION_14	CALL_13
0x4000fca	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       516	describe.c	FUNCTION_14
0x4000fcf	    0x644833042528	                xor rax, qword fs:[0x28]	       516	describe.c	FUNCTION_14
0x4000fd8	     0xf858d000000	                           jne 0x400106b	       516	describe.c	FUNCTION_14
0x4000fde	        0x4883c440	                           add rsp, 0x40	       516	describe.c	FUNCTION_14
0x4000fe2	              0x5b	                                 pop rbx	       516	describe.c	FUNCTION_14
0x4000fe3	              0x5d	                                 pop rbp	       516	describe.c	FUNCTION_14
0x4000fe4	            0x415c	                                 pop r12	       516	describe.c	FUNCTION_14
0x4000fe6	              0xc3	                                     ret	       516	describe.c	FUNCTION_14
0x4000fe7	    0x660f1f840000	                    nop word [rax + rax]	       516	describe.c	FUNCTION_14
0x4000ff0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_92
0x4000ff2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_92
0x4000ff7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_92
0x4000ffc	      0xe800000000	                          call 0x4001001	        54	gettext.h	FUNCTION_92
0x4001001	    0x488b3d000000	            mov rdi, qword [0x04001008] 	        97	stdio2.h	CALL_407
0x4001008	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_407
0x400100b	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_407
0x400100e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_407
0x4001013	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_407
0x4001015	      0xe800000000	                          call 0x400101a	        97	stdio2.h	CALL_407
0x400101a	      0xe947ffffff	                           jmp 0x4000f66	        97	stdio2.h	CALL_407
0x400101f	              0x90	                                     nop	        97	stdio2.h	CALL_407
0x4001020	    0x488b3d000000	            mov rdi, qword [0x04001027] 	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x4001027	      0x488d742420	                   lea rsi, [rsp + 0x20]	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x400102c	            0x31d2	                            xor edx, edx	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x400102e	      0xe800000000	                          call 0x4001033	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x4001033	          0x83f803	                              cmp eax, 3	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x4001036	            0x754f	                           jne 0x4001087	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x4001038	          0x4889e3	                            mov rbx, rsp	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x400103b	        0x4883ec20	                           sub rsp, 0x20	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x400103f	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4001044	          0x4889df	                            mov rdi, rbx	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4001047	        0x48890424	                    mov qword [rsp], rax	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x400104b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4001050	      0x4889442408	                mov qword [rsp + 8], rax	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4001055	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4001059	        0x89442410	             mov dword [rsp + 0x10], eax	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x400105d	      0xe81ef0ffff	                  call sym.describe_blob	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4001062	        0x4883c420	                           add rsp, 0x20	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4001066	      0xe93bffffff	                           jmp 0x4000fa6	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x400106b	      0xe800000000	                          call 0x4001070	       516	describe.c	FUNCTION_14
0x4001070	      0xbf00000000	                              mov edi, 0	       516	describe.c	FUNCTION_14
0x4001075	      0xe886f1ffff	                       call sym._.part.1	       516	describe.c	FUNCTION_14
0x400107a	          0x4889de	                            mov rsi, rbx	       508	describe.c	FUNCTION_14	CALL_10
0x400107d	          0x4889c7	                            mov rdi, rax	       508	describe.c	FUNCTION_14	CALL_10
0x4001080	            0x31c0	                            xor eax, eax	       508	describe.c	FUNCTION_14	CALL_10
0x4001082	      0xe800000000	                          call 0x4001087	       508	describe.c	FUNCTION_14	CALL_10
0x4001087	      0xbf00000000	                              mov edi, 0	       508	describe.c	FUNCTION_14	CALL_10
0x400108c	            0xebe7	                           jmp 0x4001075	       508	describe.c	FUNCTION_14	CALL_10
commit_name_cmp	ELSE,0:CALL,1:IF,0:DO,0:WHILE,0:FOR,0:SWITCH,0:functions,0	7
0x4000060	        0x4883c210	                           add rdx, 0x10	        64	describe.c	FUNCTION_1
0x4000064	          0x4885c9	                           test rcx, rcx	        64	describe.c	FUNCTION_1
0x4000067	        0x488d7e10	                   lea rdi, [rsi + 0x10]	       975	cache.h	FUNCTION_50	CALL_1
0x400006b	        0x480f44ca	                          cmove rcx, rdx	       975	cache.h	FUNCTION_50	CALL_1
0x400006f	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_50	CALL_1
0x4000074	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_50	CALL_1
0x4000077	      0xe900000000	                           jmp 0x400007c	       975	cache.h	FUNCTION_50	CALL_1
cmd_describe	ELSE,7:CALL,49:IF,18:DO,0:WHILE,1:FOR,0:SWITCH,1:functions,0	387
0x4001110	            0x4156	                                push r14	       519	describe.c	FUNCTION_15
0x4001112	            0x4155	                                push r13	       519	describe.c	FUNCTION_15
0x4001114	      0xb978000000	                           mov ecx, 0x78	       521	describe.c	FUNCTION_15
0x4001119	            0x4154	                                push r12	       519	describe.c	FUNCTION_15
0x400111b	              0x55	                                push rbp	       519	describe.c	FUNCTION_15
0x400111c	          0x4889f5	                            mov rbp, rsi	       519	describe.c	FUNCTION_15
0x400111f	              0x53	                                push rbx	       519	describe.c	FUNCTION_15
0x4001120	            0x89fb	                            mov ebx, edi	       519	describe.c	FUNCTION_15
0x4001122	            0x31f6	                            xor esi, esi	       548	describe.c	FUNCTION_15	CALL_14
0x4001124	          0x4989d5	                            mov r13, rdx	       519	describe.c	FUNCTION_15
0x4001127	    0x4881ecf00c00	                          sub rsp, 0xcf0	       519	describe.c	FUNCTION_15
0x400112e	    0x64488b042528	                mov rax, qword fs:[0x28]	       519	describe.c	FUNCTION_15
0x4001137	    0x48898424e80c	            mov qword [rsp + 0xce8], rax	       519	describe.c	FUNCTION_15
0x400113f	            0x31c0	                            xor eax, eax	       519	describe.c	FUNCTION_15
0x4001141	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       521	describe.c	FUNCTION_15
0x4001146	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       520	describe.c	FUNCTION_15
0x400114e	          0xf348ab	              rep stosq qword [rdi], rax	       521	describe.c	FUNCTION_15
0x4001151	      0x488d44240c	                    lea rax, [rsp + 0xc]	       521	describe.c	FUNCTION_15
0x4001156	      0xbf00000000	                              mov edi, 0	       548	describe.c	FUNCTION_15	CALL_14
0x400115b	    0xc74424700700	               mov dword [rsp + 0x70], 7	       521	describe.c	FUNCTION_15
0x4001163	    0x48c744247800	               mov qword [rsp + 0x78], 0	       521	describe.c	FUNCTION_15
0x400116c	    0x48c784249000	               mov qword [rsp + 0x90], 0	       521	describe.c	FUNCTION_15
0x4001178	    0x488984248000	             mov qword [rsp + 0x80], rax	       521	describe.c	FUNCTION_15
0x4001180	    0xc78424980000	               mov dword [rsp + 0x98], 2	       521	describe.c	FUNCTION_15
0x400118b	    0x48c78424a800	               mov qword [rsp + 0xa8], 1	       521	describe.c	FUNCTION_15
0x4001197	    0xc78424b00000	               mov dword [rsp + 0xb0], 7	       521	describe.c	FUNCTION_15
0x40011a2	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	       521	describe.c	FUNCTION_15
0x40011ae	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       521	describe.c	FUNCTION_15
0x40011ba	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	       521	describe.c	FUNCTION_15
0x40011c6	    0xc78424d80000	               mov dword [rsp + 0xd8], 2	       521	describe.c	FUNCTION_15
0x40011d1	    0x48c78424e800	               mov qword [rsp + 0xe8], 1	       521	describe.c	FUNCTION_15
0x40011dd	    0xc78424f00000	               mov dword [rsp + 0xf0], 7	       521	describe.c	FUNCTION_15
0x40011e8	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	       521	describe.c	FUNCTION_15
0x40011f4	    0x48c784240001	              mov qword [rsp + 0x100], 0	       521	describe.c	FUNCTION_15
0x4001200	    0x48c784241001	              mov qword [rsp + 0x110], 0	       521	describe.c	FUNCTION_15
0x400120c	    0xc78424180100	              mov dword [rsp + 0x118], 2	       521	describe.c	FUNCTION_15
0x4001217	    0x48c784242801	              mov qword [rsp + 0x128], 1	       521	describe.c	FUNCTION_15
0x4001223	    0xc78424300100	              mov dword [rsp + 0x130], 7	       521	describe.c	FUNCTION_15
0x400122e	    0x48c784243801	              mov qword [rsp + 0x138], 0	       521	describe.c	FUNCTION_15
0x400123a	    0x48c784244001	              mov qword [rsp + 0x140], 0	       521	describe.c	FUNCTION_15
0x4001246	    0x48c784245001	              mov qword [rsp + 0x150], 0	       521	describe.c	FUNCTION_15
0x4001252	    0xc78424580100	              mov dword [rsp + 0x158], 2	       521	describe.c	FUNCTION_15
0x400125d	    0x48c784246801	              mov qword [rsp + 0x168], 1	       521	describe.c	FUNCTION_15
0x4001269	    0xc78424700100	              mov dword [rsp + 0x170], 7	       521	describe.c	FUNCTION_15
0x4001274	    0x48c784247801	              mov qword [rsp + 0x178], 0	       521	describe.c	FUNCTION_15
0x4001280	    0x48c784248001	              mov qword [rsp + 0x180], 0	       521	describe.c	FUNCTION_15
0x400128c	    0x48c784249001	              mov qword [rsp + 0x190], 0	       521	describe.c	FUNCTION_15
0x4001298	    0xc78424980100	              mov dword [rsp + 0x198], 2	       521	describe.c	FUNCTION_15
0x40012a3	    0x48c78424a801	              mov qword [rsp + 0x1a8], 1	       521	describe.c	FUNCTION_15
0x40012af	    0xc78424b00100	              mov dword [rsp + 0x1b0], 7	       521	describe.c	FUNCTION_15
0x40012ba	    0x48c78424b801	              mov qword [rsp + 0x1b8], 0	       521	describe.c	FUNCTION_15
0x40012c6	    0x48c78424c001	              mov qword [rsp + 0x1c0], 0	       521	describe.c	FUNCTION_15
0x40012d2	    0x48c78424d001	              mov qword [rsp + 0x1d0], 0	       521	describe.c	FUNCTION_15
0x40012de	    0xc78424d80100	              mov dword [rsp + 0x1d8], 2	       521	describe.c	FUNCTION_15
0x40012e9	    0x48c78424e801	              mov qword [rsp + 0x1e8], 1	       521	describe.c	FUNCTION_15
0x40012f5	    0xc78424f00100	           mov dword [rsp + 0x1f0], 0xc 	       521	describe.c	FUNCTION_15
0x4001300	    0x48c78424f801	              mov qword [rsp + 0x1f8], 0	       521	describe.c	FUNCTION_15
0x400130c	    0x48c784240002	              mov qword [rsp + 0x200], 0	       521	describe.c	FUNCTION_15
0x4001318	    0x48c784240802	              mov qword [rsp + 0x208], 0	       521	describe.c	FUNCTION_15
0x4001324	    0x48c784241002	              mov qword [rsp + 0x210], 0	       521	describe.c	FUNCTION_15
0x4001330	    0xc78424180200	              mov dword [rsp + 0x218], 1	       521	describe.c	FUNCTION_15
0x400133b	    0x48c784242002	              mov qword [rsp + 0x220], 0	       521	describe.c	FUNCTION_15
0x4001347	    0xc78424300200	              mov dword [rsp + 0x230], 7	       521	describe.c	FUNCTION_15
0x4001352	    0x48c784243802	              mov qword [rsp + 0x238], 0	       521	describe.c	FUNCTION_15
0x400135e	    0x48c784244002	              mov qword [rsp + 0x240], 0	       521	describe.c	FUNCTION_15
0x400136a	    0x48c784245002	              mov qword [rsp + 0x250], 0	       521	describe.c	FUNCTION_15
0x4001376	    0xc78424580200	              mov dword [rsp + 0x258], 2	       521	describe.c	FUNCTION_15
0x4001381	    0xc78424700200	            mov dword [rsp + 0x270], 0xa	       521	describe.c	FUNCTION_15
0x400138c	    0x48c784247802	              mov qword [rsp + 0x278], 0	       521	describe.c	FUNCTION_15
0x4001398	    0x48c784248002	              mov qword [rsp + 0x280], 0	       521	describe.c	FUNCTION_15
0x40013a4	    0x48c784248802	              mov qword [rsp + 0x288], 0	       521	describe.c	FUNCTION_15
0x40013b0	    0x48c784249002	              mov qword [rsp + 0x290], 0	       521	describe.c	FUNCTION_15
0x40013bc	    0xc78424b00200	           mov dword [rsp + 0x2b0], 0xc 	       521	describe.c	FUNCTION_15
0x40013c7	    0x48c78424b802	              mov qword [rsp + 0x2b8], 0	       521	describe.c	FUNCTION_15
0x40013d3	    0x48c78424c002	              mov qword [rsp + 0x2c0], 0	       521	describe.c	FUNCTION_15
0x40013df	    0x48c78424c802	              mov qword [rsp + 0x2c8], 0	       521	describe.c	FUNCTION_15
0x40013eb	    0x48c78424d002	              mov qword [rsp + 0x2d0], 0	       521	describe.c	FUNCTION_15
0x40013f7	    0x48c78424e002	              mov qword [rsp + 0x2e0], 0	       521	describe.c	FUNCTION_15
0x4001403	    0xc78424f00200	           mov dword [rsp + 0x2f0], 0xc 	       521	describe.c	FUNCTION_15
0x400140e	    0x48c78424f802	              mov qword [rsp + 0x2f8], 0	       521	describe.c	FUNCTION_15
0x400141a	    0x48c784240003	              mov qword [rsp + 0x300], 0	       521	describe.c	FUNCTION_15
0x4001426	    0x48c784240803	              mov qword [rsp + 0x308], 0	       521	describe.c	FUNCTION_15
0x4001432	    0x48c784241003	              mov qword [rsp + 0x310], 0	       521	describe.c	FUNCTION_15
0x400143e	    0x48c784242003	              mov qword [rsp + 0x320], 0	       521	describe.c	FUNCTION_15
0x400144a	    0xc78424300300	              mov dword [rsp + 0x330], 7	       521	describe.c	FUNCTION_15
0x4001455	    0x48c784243803	              mov qword [rsp + 0x338], 0	       521	describe.c	FUNCTION_15
0x4001461	    0x48c784244003	              mov qword [rsp + 0x340], 0	       521	describe.c	FUNCTION_15
0x400146d	    0x48c784245003	              mov qword [rsp + 0x350], 0	       521	describe.c	FUNCTION_15
0x4001479	    0xc78424580300	              mov dword [rsp + 0x358], 2	       521	describe.c	FUNCTION_15
0x4001484	    0x48c784246803	              mov qword [rsp + 0x368], 1	       521	describe.c	FUNCTION_15
0x4001490	    0xc78424700300	              mov dword [rsp + 0x370], 9	       521	describe.c	FUNCTION_15
0x400149b	    0x48c784247803	              mov qword [rsp + 0x378], 0	       521	describe.c	FUNCTION_15
0x40014a7	    0x48c784248003	              mov qword [rsp + 0x380], 0	       521	describe.c	FUNCTION_15
0x40014b3	    0x48c784248803	              mov qword [rsp + 0x388], 0	       521	describe.c	FUNCTION_15
0x40014bf	    0x48c784249003	              mov qword [rsp + 0x390], 0	       521	describe.c	FUNCTION_15
0x40014cb	    0xc78424980300	              mov dword [rsp + 0x398], 1	       521	describe.c	FUNCTION_15
0x40014d6	    0x48c78424a803	              mov qword [rsp + 0x3a8], 0	       521	describe.c	FUNCTION_15
0x40014e2	    0xc78424b00300	              mov dword [rsp + 0x3b0], 9	       521	describe.c	FUNCTION_15
0x40014ed	    0x48c78424b803	              mov qword [rsp + 0x3b8], 0	       521	describe.c	FUNCTION_15
0x40014f9	    0x48c78424c003	              mov qword [rsp + 0x3c0], 0	       521	describe.c	FUNCTION_15
0x4001505	    0x48c78424c803	              mov qword [rsp + 0x3c8], 0	       521	describe.c	FUNCTION_15
0x4001511	    0x48c78424d003	              mov qword [rsp + 0x3d0], 0	       521	describe.c	FUNCTION_15
0x400151d	    0xc78424d80300	              mov dword [rsp + 0x3d8], 1	       521	describe.c	FUNCTION_15
0x4001528	    0x48c78424e803	              mov qword [rsp + 0x3e8], 0	       521	describe.c	FUNCTION_15
0x4001534	      0xe800000000	                          call 0x4001539	       548	describe.c	FUNCTION_15	CALL_14
0x4001539	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	       549	describe.c	FUNCTION_15	CALL_15
0x400153e	          0x4531c9	                            xor r9d, r9d	       549	describe.c	FUNCTION_15	CALL_15
0x4001541	    0x41b800000000	                              mov r8d, 0	       549	describe.c	FUNCTION_15	CALL_15
0x4001547	          0x4c89ea	                            mov rdx, r13	       549	describe.c	FUNCTION_15	CALL_15
0x400154a	          0x4889ee	                            mov rsi, rbp	       549	describe.c	FUNCTION_15	CALL_15
0x400154d	            0x89df	                            mov edi, ebx	       549	describe.c	FUNCTION_15	CALL_15
0x400154f	      0xe800000000	                          call 0x4001554	       549	describe.c	FUNCTION_15	CALL_15
0x4001554	    0x448b0d000000	            mov r9d, dword [0x0400155b] 	       550	describe.c	FUNCTION_15	IF_1
0x400155b	          0x4189c4	                           mov r12d, eax	       549	describe.c	FUNCTION_15	CALL_15
0x400155e	          0x4585c9	                           test r9d, r9d	       550	describe.c	FUNCTION_15	IF_1
0x4001561	     0xf88e9010000	                            js 0x4001750	       550	describe.c	FUNCTION_15	IF_1
0x4001567	    0x8b0500000000	            mov eax, dword [0x0400156d] 	       553	describe.c	FUNCTION_15	IF_2
0x400156d	            0x85c0	                           test eax, eax	       553	describe.c	FUNCTION_15	IF_2
0x400156f	     0xf88f5010000	                            js 0x400176a	       553	describe.c	FUNCTION_15	IF_2
0x4001575	          0x83f81a	                           cmp eax, 0x1a	       555	describe.c	FUNCTION_15	ELSE_1	IF_3
0x4001578	     0xf8fb2010000	                            jg 0x4001730	       555	describe.c	FUNCTION_15	ELSE_1	IF_3
0x400157e	    0x448b05000000	            mov r8d, dword [0x04001585] 	       560	describe.c	FUNCTION_15	IF_4
0x4001585	    0xc70500000000	               mov dword [0x0400158f], 0	       558	describe.c	FUNCTION_15
0x400158f	          0x4585c0	                           test r8d, r8d	       560	describe.c	FUNCTION_15	IF_4
0x4001592	            0x740e	                            je 0x40015a2	       560	describe.c	FUNCTION_15	IF_4
0x4001594	    0x8b3d00000000	            mov edi, dword [0x0400159a] 	       560	describe.c	FUNCTION_15	IF_4
0x400159a	            0x85ff	                           test edi, edi	       560	describe.c	FUNCTION_15	IF_4
0x400159c	     0xf8401040000	                            je 0x40019a3	       560	describe.c	FUNCTION_15	IF_4
0x40015a2	      0x448b74240c	            mov r14d, dword [rsp + 0xc] 	       563	describe.c	FUNCTION_15	IF_5
0x40015a7	          0x4585f6	                         test r14d, r14d	       563	describe.c	FUNCTION_15	IF_5
0x40015aa	     0xf84a0000000	                            je 0x4001650	       563	describe.c	FUNCTION_15	IF_5
0x40015b0	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	       567	describe.c	FUNCTION_15	IF_5	CALL_18
0x40015b5	          0x4889df	                            mov rdi, rbx	       567	describe.c	FUNCTION_15	IF_5	CALL_18
0x40015b8	      0xe800000000	                          call 0x40015bd	       567	describe.c	FUNCTION_15	IF_5	CALL_18
0x40015bd	          0x4531c9	                            xor r9d, r9d	       568	describe.c	FUNCTION_15	IF_5	CALL_19
0x40015c0	      0xbe00000000	                              mov esi, 0	       568	describe.c	FUNCTION_15	IF_5	CALL_19
0x40015c5	            0x31c0	                            xor eax, eax	       568	describe.c	FUNCTION_15	IF_5	CALL_19
0x40015c7	    0x41b800000000	                              mov r8d, 0	       568	describe.c	FUNCTION_15	IF_5	CALL_19
0x40015cd	      0xb900000000	                              mov ecx, 0	       568	describe.c	FUNCTION_15	IF_5	CALL_19
0x40015d2	      0xba00000000	                              mov edx, 0	       568	describe.c	FUNCTION_15	IF_5	CALL_19
0x40015d7	          0x4889df	                            mov rdi, rbx	       568	describe.c	FUNCTION_15	IF_5	CALL_19
0x40015da	      0xe800000000	                          call 0x40015df	       568	describe.c	FUNCTION_15	IF_5	CALL_19
0x40015df	    0x8b3500000000	            mov esi, dword [0x040015e5] 	       571	describe.c	FUNCTION_15	IF_5	IF_6
0x40015e5	            0x85f6	                           test esi, esi	       571	describe.c	FUNCTION_15	IF_5	IF_6
0x40015e7	     0xf85eb010000	                           jne 0x40017d8	       571	describe.c	FUNCTION_15	IF_5	IF_6
0x40015ed	    0x8b0d00000000	            mov ecx, dword [0x040015f3] 	       573	describe.c	FUNCTION_15	IF_5	IF_7
0x40015f3	            0x85c9	                           test ecx, ecx	       573	describe.c	FUNCTION_15	IF_5	IF_7
0x40015f5	     0xf84f8010000	                            je 0x40017f3	       573	describe.c	FUNCTION_15	IF_5	IF_7
0x40015fb	          0x4585e4	                         test r12d, r12d	       580	describe.c	FUNCTION_15	IF_5	IF_8
0x40015fe	     0xf853c010000	                           jne 0x4001740	       580	describe.c	FUNCTION_15	IF_5	IF_8
0x4001604	      0xbe00000000	                              mov esi, 0	       583	describe.c	FUNCTION_15	IF_5	CALL_27
0x4001609	          0x4889df	                            mov rdi, rbx	       583	describe.c	FUNCTION_15	IF_5	CALL_27
0x400160c	      0xe800000000	                          call 0x4001611	       583	describe.c	FUNCTION_15	IF_5	CALL_27
0x4001611	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       584	describe.c	FUNCTION_15	IF_5	CALL_28
0x4001616	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       584	describe.c	FUNCTION_15	IF_5	CALL_28
0x400161a	          0x4c89ea	                            mov rdx, r13	       584	describe.c	FUNCTION_15	IF_5	CALL_28
0x400161d	      0xe800000000	                          call 0x4001622	       584	describe.c	FUNCTION_15	IF_5	CALL_28
0x4001622	          0x4189c6	                           mov r14d, eax	       584	describe.c	FUNCTION_15	IF_5	CALL_28
0x4001625	    0x488b8c24e80c	           mov rcx, qword [rsp + 0xce8] 	       648	describe.c	FUNCTION_15
0x400162d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       648	describe.c	FUNCTION_15
0x4001636	          0x4489f0	                           mov eax, r14d	       648	describe.c	FUNCTION_15
0x4001639	     0xf85a1030000	                           jne 0x40019e0	       648	describe.c	FUNCTION_15
0x400163f	    0x4881c4f00c00	                          add rsp, 0xcf0	       648	describe.c	FUNCTION_15
0x4001646	              0x5b	                                 pop rbx	       648	describe.c	FUNCTION_15
0x4001647	              0x5d	                                 pop rbp	       648	describe.c	FUNCTION_15
0x4001648	            0x415c	                                 pop r12	       648	describe.c	FUNCTION_15
0x400164a	            0x415d	                                 pop r13	       648	describe.c	FUNCTION_15
0x400164c	            0x415e	                                 pop r14	       648	describe.c	FUNCTION_15
0x400164e	              0xc3	                                     ret	       648	describe.c	FUNCTION_15
0x400164f	              0x90	                                     nop	       648	describe.c	FUNCTION_15
0x4001650	            0x31c9	                            xor ecx, ecx	       587	describe.c	FUNCTION_15	CALL_29
0x4001652	            0x31d2	                            xor edx, edx	       587	describe.c	FUNCTION_15	CALL_29
0x4001654	      0xbe00000000	                              mov esi, 0	       587	describe.c	FUNCTION_15	CALL_29
0x4001659	      0xbf00000000	                              mov edi, 0	       587	describe.c	FUNCTION_15	CALL_29
0x400165e	      0xe800000000	                          call 0x4001663	       587	describe.c	FUNCTION_15	CALL_29
0x4001663	            0x31f6	                            xor esi, esi	       588	describe.c	FUNCTION_15	CALL_30
0x4001665	      0xbf00000000	                              mov edi, 0	       588	describe.c	FUNCTION_15	CALL_30
0x400166a	      0xe800000000	                          call 0x400166f	       588	describe.c	FUNCTION_15	CALL_30
0x400166f	    0xf60500000000	               test byte [0x04001676], 1	       257	hashmap.h	FUNCTION_72	IF_1
0x4001676	     0xf843b030000	                            je 0x40019b7	       257	hashmap.h	FUNCTION_72	IF_1
0x400167c	    0x8b1500000000	            mov edx, dword [0x04001682] 	       589	describe.c	FUNCTION_15	IF_9	CALL_31
0x4001682	            0x85d2	                           test edx, edx	       589	describe.c	FUNCTION_15	IF_9	CALL_31
0x4001684	            0x750e	                           jne 0x4001694	       589	describe.c	FUNCTION_15	IF_9	CALL_31
0x4001686	    0x8b0500000000	            mov eax, dword [0x0400168c] 	       589	describe.c	FUNCTION_15	IF_9	CALL_31
0x400168c	            0x85c0	                           test eax, eax	       589	describe.c	FUNCTION_15	IF_9	CALL_31
0x400168e	     0xf848f030000	                            je 0x4001a23	       589	describe.c	FUNCTION_15	IF_9	CALL_31
0x4001694	          0x4585e4	                         test r12d, r12d	       592	describe.c	FUNCTION_15	IF_10
0x4001697	     0xf85e3000000	                           jne 0x4001780	       592	describe.c	FUNCTION_15	IF_10
0x400169d	    0x48833d000000	               cmp qword [0x040016a5], 0	       593	describe.c	FUNCTION_15	IF_10	IF_11
0x40016a5	     0xf8405020000	                            je 0x40018b0	       593	describe.c	FUNCTION_15	IF_10	IF_11
0x40016ab	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x40016b0	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	       595	describe.c	FUNCTION_15	IF_10	IF_11	CALL_34
0x40016b5	            0x31c0	                            xor eax, eax	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x40016b7	      0xb90c000000	                            mov ecx, 0xc	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x40016bc	      0xbe00000000	                              mov esi, 0	       595	describe.c	FUNCTION_15	IF_10	IF_11	CALL_34
0x40016c1	          0xf348ab	              rep stosq qword [rdi], rax	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x40016c4	        0x488d7b08	                      lea rdi, [rbx + 8]	       595	describe.c	FUNCTION_15	IF_10	IF_11	CALL_34
0x40016c8	    0x48c744241800	               mov qword [rsp + 0x18], 0	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x40016d1	    0x48c744242800	               mov qword [rsp + 0x28], 0	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x40016da	      0xe800000000	                          call 0x40016df	       595	describe.c	FUNCTION_15	IF_10	IF_11	CALL_34
0x40016df	      0x804c24580b	               or byte [rsp + 0x58], 0xb	       598	describe.c	FUNCTION_15	IF_10	IF_11
0x40016e4	    0x48833d000000	               cmp qword [0x040016ec], 0	       600	describe.c	FUNCTION_15	IF_10	IF_11	IF_12
0x40016ec	     0xf84de020000	                            je 0x40019d0	       600	describe.c	FUNCTION_15	IF_10	IF_11	IF_12
0x40016f2	          0x4889df	                            mov rdi, rbx	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_35
0x40016f5	      0xe800000000	                          call 0x40016fa	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_35
0x40016fa	            0x85c0	                           test eax, eax	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_35
0x40016fc	     0xf8478020000	                            je 0x400197a	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_35
0x4001702	          0x83f801	                              cmp eax, 1	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_35
0x4001705	     0xf8485020000	                            je 0x4001990	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_35
0x400170b	    0x488b05000000	            mov rax, qword [0x04001712] 	       612	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1
0x4001712	    0x488905000000	            mov qword [0x04001719], rax 	       612	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1
0x4001719	      0xbe01000000	                              mov esi, 1	       638	describe.c	FUNCTION_15	IF_10	CALL_44
0x400171e	      0xbf00000000	                              mov edi, 0	       638	describe.c	FUNCTION_15	IF_10	CALL_44
0x4001723	      0xe8f8f7ffff	                       call sym.describe	       638	describe.c	FUNCTION_15	IF_10	CALL_44
0x4001728	      0xe9f8feffff	                           jmp 0x4001625	       638	describe.c	FUNCTION_15	IF_10	CALL_44
0x400172d	           0xf1f00	                         nop dword [rax]	       638	describe.c	FUNCTION_15	IF_10	CALL_44
0x4001730	    0xc70500000000	           mov dword [0x0400173a], 0x1a 	       556	describe.c	FUNCTION_15	ELSE_1	IF_3
0x400173a	      0xe93ffeffff	                           jmp 0x400157e	       556	describe.c	FUNCTION_15	ELSE_1	IF_3
0x400173f	              0x90	                                     nop	       556	describe.c	FUNCTION_15	ELSE_1	IF_3
0x4001740	          0x4889ee	                            mov rsi, rbp	       581	describe.c	FUNCTION_15	IF_5	CALL_26
0x4001743	          0x4889df	                            mov rdi, rbx	       581	describe.c	FUNCTION_15	IF_5	CALL_26
0x4001746	      0xe800000000	                          call 0x400174b	       581	describe.c	FUNCTION_15	IF_5	CALL_26
0x400174b	      0xe9c1feffff	                           jmp 0x4001611	       581	describe.c	FUNCTION_15	IF_5	CALL_26
0x4001750	    0x8b0500000000	            mov eax, dword [0x04001756] 	       551	describe.c	FUNCTION_15	IF_1
0x4001756	    0x890500000000	            mov dword [0x0400175c], eax 	       551	describe.c	FUNCTION_15	IF_1
0x400175c	    0x8b0500000000	            mov eax, dword [0x04001762] 	       553	describe.c	FUNCTION_15	IF_2
0x4001762	            0x85c0	                           test eax, eax	       553	describe.c	FUNCTION_15	IF_2
0x4001764	     0xf890bfeffff	                           jns 0x4001575	       553	describe.c	FUNCTION_15	IF_2
0x400176a	    0xc70500000000	               mov dword [0x04001774], 0	       554	describe.c	FUNCTION_15	IF_2
0x4001774	      0xe905feffff	                           jmp 0x400157e	       554	describe.c	FUNCTION_15	IF_2
0x4001779	     0xf1f80000000	                         nop dword [rax]	       554	describe.c	FUNCTION_15	IF_2
0x4001780	    0x48833d000000	               cmp qword [0x04001788], 0	       639	describe.c	FUNCTION_15	ELSE_5	IF_17
0x4001788	     0xf8557020000	                           jne 0x40019e5	       639	describe.c	FUNCTION_15	ELSE_5	IF_17
0x400178e	    0x48833d000000	               cmp qword [0x04001796], 0	       641	describe.c	FUNCTION_15	ELSE_6	IF_18
0x4001796	     0xf8573020000	                           jne 0x4001a0f	       641	describe.c	FUNCTION_15	ELSE_6	IF_18
0x400179c	          0x4585e4	                         test r12d, r12d	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x400179f	      0x418d5c24ff	                      lea ebx, [r12 - 1]	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40017a4	     0xf8e7bfeffff	                           jle 0x4001625	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40017aa	    0x660f1f440000	                    nop word [rax + rax]	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40017b0	        0x4883c508	                              add rbp, 8	       645	describe.c	FUNCTION_15	ELSE_7	CALL_49
0x40017b4	        0x488b7df8	                mov rdi, qword [rbp - 8]	       645	describe.c	FUNCTION_15	ELSE_7	CALL_49
0x40017b8	            0x31f6	                            xor esi, esi	       645	describe.c	FUNCTION_15	ELSE_7	CALL_49
0x40017ba	            0x85db	                           test ebx, ebx	       645	describe.c	FUNCTION_15	ELSE_7	CALL_49
0x40017bc	        0x400f94c6	                                sete sil	       645	describe.c	FUNCTION_15	ELSE_7	CALL_49
0x40017c0	          0x83eb01	                              sub ebx, 1	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40017c3	      0xe858f7ffff	                       call sym.describe	       645	describe.c	FUNCTION_15	ELSE_7	CALL_49
0x40017c8	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40017cb	            0x75e3	                           jne 0x40017b0	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40017cd	      0xe953feffff	                           jmp 0x4001625	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40017d2	    0x660f1f440000	                    nop word [rax + rax]	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40017d8	      0xbe00000000	                              mov esi, 0	       572	describe.c	FUNCTION_15	IF_5	CALL_20
0x40017dd	          0x4889df	                            mov rdi, rbx	       572	describe.c	FUNCTION_15	IF_5	CALL_20
0x40017e0	      0xe800000000	                          call 0x40017e5	       572	describe.c	FUNCTION_15	IF_5	CALL_20
0x40017e5	    0x8b0d00000000	            mov ecx, dword [0x040017eb] 	       573	describe.c	FUNCTION_15	IF_5	IF_7
0x40017eb	            0x85c9	                           test ecx, ecx	       573	describe.c	FUNCTION_15	IF_5	IF_7
0x40017ed	     0xf8508feffff	                           jne 0x40015fb	       573	describe.c	FUNCTION_15	IF_5	IF_7
0x40017f3	      0xbe00000000	                              mov esi, 0	       574	describe.c	FUNCTION_15	IF_5	IF_7	CALL_21
0x40017f8	          0x4889df	                            mov rdi, rbx	       574	describe.c	FUNCTION_15	IF_5	IF_7	CALL_21
0x40017fb	      0xe800000000	                          call 0x4001800	       574	describe.c	FUNCTION_15	IF_5	IF_7	CALL_21
0x4001800	    0x4c8b35000000	            mov r14, qword [0x04001807] 	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x4001807	          0x4d85f6	                           test r14, r14	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x400180a	            0x7442	                            je 0x400184e	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x400180c	    0x8b0500000000	            mov eax, dword [0x04001812] 	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x4001812	        0x48c1e004	                              shl rax, 4	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x4001816	          0x4c01f0	                            add rax, r14	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x4001819	          0x4939c6	                            cmp r14, rax	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x400181c	            0x7218	                            jb 0x4001836	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x400181e	            0xeb2e	                           jmp 0x400184e	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x4001820	    0x8b0500000000	            mov eax, dword [0x04001826] 	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x4001826	        0x48c1e004	                              shl rax, 4	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x400182a	    0x480305000000	             add rax, qword [0x04001831]	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x4001831	          0x4939c6	                            cmp r14, rax	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x4001834	            0x7318	                           jae 0x400184e	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x4001836	          0x498b16	                    mov rdx, qword [r14]	       576	describe.c	FUNCTION_15	IF_5	IF_7	CALL_23
0x4001839	            0x31c0	                            xor eax, eax	       576	describe.c	FUNCTION_15	IF_5	IF_7	CALL_23
0x400183b	      0xbe00000000	                              mov esi, 0	       576	describe.c	FUNCTION_15	IF_5	IF_7	CALL_23
0x4001840	          0x4889df	                            mov rdi, rbx	       576	describe.c	FUNCTION_15	IF_5	IF_7	CALL_23
0x4001843	      0xe800000000	                          call 0x4001848	       576	describe.c	FUNCTION_15	IF_5	IF_7	CALL_23
0x4001848	        0x4983c610	                           add r14, 0x10	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x400184c	            0x75d2	                           jne 0x4001820	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_22
0x400184e	    0x4c8b35000000	            mov r14, qword [0x04001855] 	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x4001855	          0x4d85f6	                           test r14, r14	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x4001858	     0xf849dfdffff	                            je 0x40015fb	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x400185e	    0x8b0500000000	            mov eax, dword [0x04001864] 	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x4001864	        0x48c1e004	                              shl rax, 4	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x4001868	          0x4c01f0	                            add rax, r14	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x400186b	          0x4939c6	                            cmp r14, rax	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x400186e	            0x7222	                            jb 0x4001892	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x4001870	      0xe986fdffff	                           jmp 0x40015fb	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x4001875	           0xf1f00	                         nop dword [rax]	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x4001878	    0x8b0500000000	            mov eax, dword [0x0400187e] 	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x400187e	        0x48c1e004	                              shl rax, 4	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x4001882	    0x480305000000	             add rax, qword [0x04001889]	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x4001889	          0x4939c6	                            cmp r14, rax	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x400188c	     0xf8369fdffff	                           jae 0x40015fb	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x4001892	          0x498b16	                    mov rdx, qword [r14]	       578	describe.c	FUNCTION_15	IF_5	IF_7	CALL_25
0x4001895	            0x31c0	                            xor eax, eax	       578	describe.c	FUNCTION_15	IF_5	IF_7	CALL_25
0x4001897	      0xbe00000000	                              mov esi, 0	       578	describe.c	FUNCTION_15	IF_5	IF_7	CALL_25
0x400189c	          0x4889df	                            mov rdi, rbx	       578	describe.c	FUNCTION_15	IF_5	IF_7	CALL_25
0x400189f	      0xe800000000	                          call 0x40018a4	       578	describe.c	FUNCTION_15	IF_5	IF_7	CALL_25
0x40018a4	        0x4983c610	                           add r14, 0x10	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x40018a8	            0x75ce	                           jne 0x4001878	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x40018aa	      0xe94cfdffff	                           jmp 0x40015fb	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x40018af	              0x90	                                     nop	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_24
0x40018b0	    0x48833d000000	               cmp qword [0x040018b8], 0	       614	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x40018b8	     0xf845bfeffff	                            je 0x4001719	       614	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x40018be	            0x31f6	                            xor esi, esi	       620	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x40018c0	      0xbf00000000	                              mov edi, 0	       620	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x40018c5	    0x48c744241000	               mov qword [rsp + 0x10], 0	       617	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x40018ce	    0xc74424180000	               mov dword [rsp + 0x18], 0	       617	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x40018d6	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       617	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x40018de	      0xe800000000	                          call 0x40018e3	       620	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x40018e3	          0x4531c0	                            xor r8d, r8d	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_36
0x40018e6	            0x31c9	                            xor ecx, ecx	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_36
0x40018e8	            0x31d2	                            xor edx, edx	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_36
0x40018ea	      0xbe06000000	                              mov esi, 6	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_36
0x40018ef	      0xbf00000000	                              mov edi, 0	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_36
0x40018f4	      0xe800000000	                          call 0x40018f9	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_36
0x40018f9	            0x31f6	                            xor esi, esi	       623	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_37
0x40018fb	      0xbf00000000	                              mov edi, 0	       623	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_37
0x4001900	      0xe800000000	                          call 0x4001905	       623	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_37
0x4001905	            0x85c0	                           test eax, eax	       624	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_14
0x4001907	            0x780f	                            js 0x4001918	       624	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_14
0x4001909	      0xbe00000000	                              mov esi, 0	       625	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_38
0x400190e	      0xbf00000000	                              mov edi, 0	       625	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_38
0x4001913	      0xe800000000	                          call 0x4001918	       625	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_38
0x4001918	    0x488dbc243004	                  lea rdi, [rsp + 0x430]	       627	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_39
0x4001920	          0x4c89ee	                            mov rsi, r13	       627	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_39
0x4001923	      0xe800000000	                          call 0x4001928	       627	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_39
0x4001928	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       628	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_40
0x400192d	      0xbe00000000	                              mov esi, 0	       628	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_40
0x4001932	      0xe800000000	                          call 0x4001937	       628	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_40
0x4001937	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x400193c	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x4001940	    0x488d94243004	                  lea rdx, [rsp + 0x430]	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x4001948	            0x31c9	                            xor ecx, ecx	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x400194a	      0xe800000000	                          call 0x400194f	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x400194f	          0x83f801	                              cmp eax, 1	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x4001952	     0xf85a1000000	                           jne 0x40019f9	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x4001958	    0x488dbc243004	                  lea rdi, [rsp + 0x430]	       631	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_42
0x4001960	            0x31f6	                            xor esi, esi	       631	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_42
0x4001962	      0xe800000000	                          call 0x4001967	       631	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_42
0x4001967	    0x488dbc242809	                  lea rdi, [rsp + 0x928]	       633	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x400196f	            0x89c6	                            mov esi, eax	       633	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x4001971	      0xe800000000	                          call 0x4001976	       633	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x4001976	            0x85c0	                           test eax, eax	       633	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x4001978	            0x7516	                           jne 0x4001990	       633	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x400197a	    0x48c705000000	               mov qword [0x04001985], 0	       634	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16
0x4001985	      0xe98ffdffff	                           jmp 0x4001719	       634	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16
0x400198a	    0x660f1f440000	                    nop word [rax + rax]	       634	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16
0x4001990	    0x488b05000000	            mov rax, qword [0x04001997] 	       636	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	ELSE_4
0x4001997	    0x488905000000	            mov qword [0x0400199e], rax 	       636	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	ELSE_4
0x400199e	      0xe976fdffff	                           jmp 0x4001719	       636	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	ELSE_4
0x40019a3	      0xbf00000000	                              mov edi, 0	       636	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	ELSE_4
0x40019a8	      0xe853e8ffff	                       call sym._.part.1	       636	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	ELSE_4
0x40019ad	          0x4889c7	                            mov rdi, rax	       561	describe.c	FUNCTION_15	CALL_17
0x40019b0	            0x31c0	                            xor eax, eax	       561	describe.c	FUNCTION_15	CALL_17
0x40019b2	      0xe800000000	                          call 0x40019b7	       561	describe.c	FUNCTION_15	CALL_17
0x40019b7	      0xba00000000	                              mov edx, 0	       260	hashmap.h	FUNCTION_72
0x40019bc	      0xbe04010000	                          mov esi, 0x104	       260	hashmap.h	FUNCTION_72
0x40019c1	      0xbf00000000	                              mov edi, 0	       260	hashmap.h	FUNCTION_72
0x40019c6	            0x31c0	                            xor eax, eax	       260	hashmap.h	FUNCTION_72
0x40019c8	      0xe800000000	                          call 0x40019cd	       260	hashmap.h	FUNCTION_72
0x40019cd	           0xf1f00	                         nop dword [rax]	       260	hashmap.h	FUNCTION_72
0x40019d0	    0x48c705000000	               mov qword [0x040019db], 0	       601	describe.c	FUNCTION_15	IF_10	IF_11	IF_12
0x40019db	      0xe912fdffff	                           jmp 0x40016f2	       601	describe.c	FUNCTION_15	IF_10	IF_11	IF_12
0x40019e0	      0xe800000000	                          call 0x40019e5	       648	describe.c	FUNCTION_15
0x40019e5	      0xbf00000000	                              mov edi, 0	       648	describe.c	FUNCTION_15
0x40019ea	      0xe811e8ffff	                       call sym._.part.1	       648	describe.c	FUNCTION_15
0x40019ef	          0x4889c7	                            mov rdi, rax	       640	describe.c	FUNCTION_15	ELSE_5	IF_17	CALL_46
0x40019f2	            0x31c0	                            xor eax, eax	       640	describe.c	FUNCTION_15	ELSE_5	IF_17	CALL_46
0x40019f4	      0xe800000000	                          call 0x40019f9	       640	describe.c	FUNCTION_15	ELSE_5	IF_17	CALL_46
0x40019f9	      0xba00000000	                              mov edx, 0	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15
0x40019fe	      0xbe76020000	                          mov esi, 0x276	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15
0x4001a03	      0xbf00000000	                              mov edi, 0	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15
0x4001a08	            0x31c0	                            xor eax, eax	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15
0x4001a0a	      0xe800000000	                          call 0x4001a0f	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15
0x4001a0f	      0xbf00000000	                              mov edi, 0	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15
0x4001a14	      0xe8e7e7ffff	                       call sym._.part.1	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15
0x4001a19	          0x4889c7	                            mov rdi, rax	       642	describe.c	FUNCTION_15	ELSE_6	IF_18	CALL_48
0x4001a1c	            0x31c0	                            xor eax, eax	       642	describe.c	FUNCTION_15	ELSE_6	IF_18	CALL_48
0x4001a1e	      0xe800000000	                          call 0x4001a23	       642	describe.c	FUNCTION_15	ELSE_6	IF_18	CALL_48
0x4001a23	      0xbf00000000	                              mov edi, 0	       642	describe.c	FUNCTION_15	ELSE_6	IF_18	CALL_48
0x4001a28	      0xe8d3e7ffff	                       call sym._.part.1	       642	describe.c	FUNCTION_15	ELSE_6	IF_18	CALL_48
0x4001a2d	          0x4889c7	                            mov rdi, rax	       590	describe.c	FUNCTION_15	CALL_33
0x4001a30	            0x31c0	                            xor eax, eax	       590	describe.c	FUNCTION_15	CALL_33
0x4001a32	      0xe800000000	                  call section_end..text	       590	describe.c	FUNCTION_15	CALL_33
describe_commit	ELSE,3:CALL,38:IF,27:DO,0:WHILE,2:FOR,4:SWITCH,0:functions,0	504
0x4000730	            0x4157	                                push r15	       292	describe.c	FUNCTION_10
0x4000732	            0x4156	                                push r14	       292	describe.c	FUNCTION_10
0x4000734	            0x4155	                                push r13	       292	describe.c	FUNCTION_10
0x4000736	            0x4154	                                push r12	       292	describe.c	FUNCTION_10
0x4000738	          0x4989fc	                            mov r12, rdi	       292	describe.c	FUNCTION_10
0x400073b	              0x55	                                push rbp	       292	describe.c	FUNCTION_10
0x400073c	              0x53	                                push rbx	       292	describe.c	FUNCTION_10
0x400073d	    0x4881ecd80200	                          sub rsp, 0x2d8	       292	describe.c	FUNCTION_10
0x4000744	      0x4889742410	             mov qword [rsp + 0x10], rsi	       292	describe.c	FUNCTION_10
0x4000749	    0x64488b042528	                mov rax, qword fs:[0x28]	       292	describe.c	FUNCTION_10
0x4000752	    0x48898424c802	            mov qword [rsp + 0x2c8], rax	       292	describe.c	FUNCTION_10
0x400075a	            0x31c0	                            xor eax, eax	       292	describe.c	FUNCTION_10
0x400075c	      0xe800000000	                          call 0x4000761	       301	describe.c	FUNCTION_10	CALL_1
0x4000761	          0x4889c5	                            mov rbp, rax	       301	describe.c	FUNCTION_10	CALL_1
0x4000764	        0x4883c004	                              add rax, 4	        73	describe.c	FUNCTION_2	CALL_2
0x4000768	      0x488d742430	                   lea rsi, [rsp + 0x30]	       308	hashmap.h	FUNCTION_73	CALL_2
0x400076d	          0x4889c2	                            mov rdx, rax	        73	describe.c	FUNCTION_2	CALL_2
0x4000770	      0x4889442418	             mov qword [rsp + 0x18], rax	        73	describe.c	FUNCTION_2	CALL_2
0x4000775	          0x8b4504	                mov eax, dword [rbp + 4]	        73	describe.c	FUNCTION_2	CALL_2
0x4000778	      0xbf00000000	                              mov edi, 0	       308	hashmap.h	FUNCTION_73	CALL_2
0x400077d	    0x48c744243000	               mov qword [rsp + 0x30], 0	       249	hashmap.h	FUNCTION_71
0x4000786	        0x89442438	             mov dword [rsp + 0x38], eax	       248	hashmap.h	FUNCTION_71
0x400078a	      0xe800000000	                          call 0x400078f	       308	hashmap.h	FUNCTION_73	CALL_2
0x400078f	          0x4885c0	                           test rax, rax	       304	describe.c	FUNCTION_10	IF_1
0x4000792	            0x7430	                            je 0x40007c4	       304	describe.c	FUNCTION_10	IF_1
0x4000794	          0x4889c3	                            mov rbx, rax	       304	describe.c	FUNCTION_10	IF_1
0x4000797	    0x8b0500000000	            mov eax, dword [0x0400079d] 	       304	describe.c	FUNCTION_10	IF_1
0x400079d	            0x85c0	                           test eax, eax	       304	describe.c	FUNCTION_10	IF_1
0x400079f	     0xf85ff010000	                           jne 0x40009a4	       304	describe.c	FUNCTION_10	IF_1
0x40007a5	    0x448b3d000000	           mov r15d, dword [0x040007ac] 	       304	describe.c	FUNCTION_10	IF_1
0x40007ac	          0x4585ff	                         test r15d, r15d	       304	describe.c	FUNCTION_10	IF_1
0x40007af	     0xf85ef010000	                           jne 0x40009a4	       304	describe.c	FUNCTION_10	IF_1
0x40007b5	         0xfb64330	           movzx eax, byte [rbx + 0x30] 	       304	describe.c	FUNCTION_10	IF_1
0x40007b9	          0x83e003	                              and eax, 3	       304	describe.c	FUNCTION_10	IF_1
0x40007bc	            0x3c02	                               cmp al, 2	       304	describe.c	FUNCTION_10	IF_1
0x40007be	     0xf84e0010000	                            je 0x40009a4	       304	describe.c	FUNCTION_10	IF_1
0x40007c4	    0x448b2d000000	           mov r13d, dword [0x040007cb] 	       316	describe.c	FUNCTION_10	IF_4
0x40007cb	          0x4585ed	                         test r13d, r13d	       316	describe.c	FUNCTION_10	IF_4
0x40007ce	     0xf8422070000	                            je 0x4000ef6	       316	describe.c	FUNCTION_10	IF_4
0x40007d4	    0x448b25000000	           mov r12d, dword [0x040007db] 	       318	describe.c	FUNCTION_10	IF_5
0x40007db	          0x4585e4	                         test r12d, r12d	       318	describe.c	FUNCTION_10	IF_5
0x40007de	     0xf85bb050000	                           jne 0x4000d9f	       318	describe.c	FUNCTION_10	IF_5
0x40007e4	    0x8b1d00000000	            mov ebx, dword [0x040007ea] 	       321	describe.c	FUNCTION_10	IF_6
0x40007ea	            0x85db	                           test ebx, ebx	       321	describe.c	FUNCTION_10	IF_6
0x40007ec	     0xf8473050000	                            je 0x4000d65	       321	describe.c	FUNCTION_10	IF_6
0x40007f2	    0x48c744243000	               mov qword [rsp + 0x30], 0	       333	describe.c	FUNCTION_10
0x40007fb	          0x8b4500	                    mov eax, dword [rbp]	       334	describe.c	FUNCTION_10
0x40007fe	      0x488d742430	                   lea rsi, [rsp + 0x30]	       335	describe.c	FUNCTION_10	CALL_13
0x4000803	          0x4889ef	                            mov rdi, rbp	       335	describe.c	FUNCTION_10	CALL_13
0x4000806	          0x4531f6	                          xor r14d, r14d	       336	describe.c	FUNCTION_10	WHILE_1
0x4000809	          0x4531e4	                          xor r12d, r12d	       297	describe.c	FUNCTION_10
0x400080c	      0x250f000080	                     and eax, 0x8000000f	       334	describe.c	FUNCTION_10
0x4000811	          0x83c810	                            or eax, 0x10	       334	describe.c	FUNCTION_10
0x4000814	          0x894500	                    mov dword [rbp], eax	       334	describe.c	FUNCTION_10
0x4000817	            0x31ed	                            xor ebp, ebp	       297	describe.c	FUNCTION_10
0x4000819	      0xe800000000	                          call 0x400081e	       335	describe.c	FUNCTION_10	CALL_13
0x400081e	    0x48837c243000	               cmp qword [rsp + 0x30], 0	       336	describe.c	FUNCTION_10	WHILE_1
0x4000824	    0xc74424080000	                  mov dword [rsp + 8], 0	       299	describe.c	FUNCTION_10
0x400082c	     0xf8425020000	                            je 0x4000a57	       336	describe.c	FUNCTION_10	WHILE_1
0x4000832	    0x660f1f440000	                    nop word [rax + rax]	       336	describe.c	FUNCTION_10	WHILE_1
0x4000838	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       337	describe.c	FUNCTION_10	WHILE_1	CALL_14
0x400083d	        0x4d8d6e01	                      lea r13, [r14 + 1]	       337	describe.c	FUNCTION_10	WHILE_1	CALL_14
0x4000841	      0xe800000000	                          call 0x4000846	       337	describe.c	FUNCTION_10	WHILE_1	CALL_14
0x4000846	        0x4c8b4018	              mov r8, qword [rax + 0x18]	       340	describe.c	FUNCTION_10	WHILE_1
0x400084a	          0x4889c3	                            mov rbx, rax	       337	describe.c	FUNCTION_10	WHILE_1	CALL_14
0x400084d	        0x4c8b7830	            mov r15, qword [rax + 0x30] 	       338	describe.c	FUNCTION_10	WHILE_1
0x4000851	          0x4d85c0	                             test r8, r8	       341	describe.c	FUNCTION_10	WHILE_1	IF_8
0x4000854	     0xf848d030000	                            je 0x4000be7	       341	describe.c	FUNCTION_10	WHILE_1	IF_8
0x400085a	    0x448b1d000000	           mov r11d, dword [0x04000861] 	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000861	          0x4585db	                         test r11d, r11d	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000864	            0x7522	                           jne 0x4000888	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000866	    0x448b15000000	           mov r10d, dword [0x0400086d] 	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x400086d	          0x4585d2	                         test r10d, r10d	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000870	            0x7516	                           jne 0x4000888	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000872	      0x410fb64030	            movzx eax, byte [r8 + 0x30] 	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000877	          0x83e003	                              and eax, 3	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x400087a	          0x83f801	                              cmp eax, 1	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x400087d	     0xf8e5f030000	                           jle 0x4000be2	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000883	       0xf1f440000	                   nop dword [rax + rax]	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000888	    0x3b2d00000000	            cmp ebp, dword [0x0400088e] 	       344	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x400088e	     0xf83c8010000	                           jae 0x4000a5c	       344	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000894	          0x8d4d01	                      lea ecx, [rbp + 1]	       345	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000897	            0x8b03	                    mov eax, dword [rbx]	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000899	      0x488d7c6d00	                  lea rdi, [rbp + rbp*2]	       346	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x400089e	      0xbe01000000	                              mov esi, 1	       348	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008a3	        0x48c1e703	                              shl rdi, 3	       346	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008a7	            0xd3e6	                             shl esi, cl	       348	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008a9	            0x89cd	                            mov ebp, ecx	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x40008ab	        0x89743c60	       mov dword [rsp + rdi + 0x60], esi	       348	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008af	      0x4c89443c50	        mov qword [rsp + rdi + 0x50], r8	       346	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008b4	      0x4489743c58	      mov dword [rsp + rdi + 0x58], r14d	       347	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008b9	        0x894c3c5c	       mov dword [rsp + rdi + 0x5c], ecx	       349	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008bd	            0x89c7	                            mov edi, eax	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008bf	          0xc1ef04	                              shr edi, 4	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008c2	      0x250f000080	                     and eax, 0x8000000f	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008c7	             0x9fe	                             or esi, edi	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008c9	    0x81e6ffffff07	                      and esi, 0x7ffffff	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008cf	          0xc1e604	                              shl esi, 4	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008d2	             0x9f0	                             or eax, esi	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008d4	            0x8903	                    mov dword [rbx], eax	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40008d6	      0x410fb64030	            movzx eax, byte [r8 + 0x30] 	       351	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008db	          0x83e003	                              and eax, 3	       351	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008de	            0x3c02	                               cmp al, 2	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008e0	           0xf94c0	                                 sete al	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008e3	           0xfb6c0	                           movzx eax, al	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008e6	          0x4101c4	                           add r12d, eax	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008e9	          0x8d75ff	                      lea esi, [rbp - 1]	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008ec	            0x8b0b	                    mov ecx, dword [rbx]	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008ee	      0x488d442458	                   lea rax, [rsp + 0x58]	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008f3	        0x488d3476	                  lea rsi, [rsi + rsi*2]	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008f7	          0xc1e904	                              shr ecx, 4	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008fa	      0x488d74f470	          lea rsi, [rsp + rsi*8 + 0x70] 	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40008ff	    0x81e1ffffff07	                      and ecx, 0x7ffffff	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x4000905	           0xf1f00	                         nop dword [rax]	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x4000908	          0x854808	               test dword [rax + 8], ecx	       361	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x400090b	            0x7503	                           jne 0x4000910	       361	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x400090d	          0x830001	                      add dword [rax], 1	       362	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x4000910	        0x4883c018	                           add rax, 0x18	       362	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x4000914	          0x4839f0	                            cmp rax, rsi	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x4000917	            0x75ef	                           jne 0x4000908	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x4000919	          0x4585e4	                         test r12d, r12d	       364	describe.c	FUNCTION_10	WHILE_1	IF_13
0x400091c	            0x7443	                            je 0x4000961	       364	describe.c	FUNCTION_10	WHILE_1	IF_13
0x400091e	    0x48837c243000	               cmp qword [rsp + 0x30], 0	       364	describe.c	FUNCTION_10	WHILE_1	IF_13
0x4000924	            0x753b	                           jne 0x4000961	       364	describe.c	FUNCTION_10	WHILE_1	IF_13
0x4000926	      0xe9af040000	                           jmp 0x4000dda	       364	describe.c	FUNCTION_10	WHILE_1	IF_13
0x400092b	       0xf1f440000	                   nop dword [rax + rax]	       364	describe.c	FUNCTION_10	WHILE_1	IF_13
0x4000930	            0x8b03	                    mov eax, dword [rbx]	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000932	          0xc1e804	                              shr eax, 4	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000935	             0x9f0	                             or eax, esi	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000937	          0x418b36	                    mov esi, dword [r14]	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x400093a	      0x25ffffff07	                      and eax, 0x7ffffff	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x400093f	          0xc1e004	                              shl eax, 4	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000942	    0x81e60f000080	                     and esi, 0x8000000f	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000948	             0x9f0	                             or eax, esi	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x400094a	          0x418906	                    mov dword [r14], eax	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x400094d	    0x448b05000000	            mov r8d, dword [0x04000954] 	       378	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_16
0x4000954	        0x4d8b7f08	                mov r15, qword [r15 + 8]	       376	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000958	          0x4585c0	                           test r8d, r8d	       378	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_16
0x400095b	     0xf85e7000000	                           jne 0x4000a48	       378	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_16
0x4000961	          0x4d85ff	                           test r15, r15	       370	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000964	     0xf84de000000	                            je 0x4000a48	       370	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x400096a	          0x4d8b37	                    mov r14, qword [r15]	       371	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x400096d	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_111	CALL_1
0x400096f	          0x4c89f7	                            mov rdi, r14	        75	commit.h	FUNCTION_111	CALL_1
0x4000972	      0xe800000000	                          call 0x4000977	        75	commit.h	FUNCTION_111	CALL_1
0x4000977	          0x418b36	                    mov esi, dword [r14]	       373	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_15
0x400097a	          0xc1ee04	                              shr esi, 4	       373	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_15
0x400097d	    0x81e6ffffff07	                      and esi, 0x7ffffff	       373	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_15
0x4000983	        0x40f6c601	                             test sil, 1	       373	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_15
0x4000987	            0x75a7	                           jne 0x4000930	       373	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_15
0x4000989	      0x488d742430	                   lea rsi, [rsp + 0x30]	       374	describe.c	FUNCTION_10	WHILE_1	WHILE_2	CALL_18
0x400098e	          0x4c89f7	                            mov rdi, r14	       374	describe.c	FUNCTION_10	WHILE_1	WHILE_2	CALL_18
0x4000991	      0xe800000000	                          call 0x4000996	       374	describe.c	FUNCTION_10	WHILE_1	WHILE_2	CALL_18
0x4000996	          0x418b36	                    mov esi, dword [r14]	       374	describe.c	FUNCTION_10	WHILE_1	WHILE_2	CALL_18
0x4000999	          0xc1ee04	                              shr esi, 4	       374	describe.c	FUNCTION_10	WHILE_1	WHILE_2	CALL_18
0x400099c	    0x81e6ffffff07	                      and esi, 0x7ffffff	       374	describe.c	FUNCTION_10	WHILE_1	WHILE_2	CALL_18
0x40009a2	            0xeb8c	                           jmp 0x4000930	       374	describe.c	FUNCTION_10	WHILE_1	WHILE_2	CALL_18
0x40009a4	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       308	describe.c	FUNCTION_10	IF_1	CALL_3
0x40009a9	          0x4889df	                            mov rdi, rbx	       308	describe.c	FUNCTION_10	IF_1	CALL_3
0x40009ac	      0xe81ffcffff	                    call sym.append_name	       308	describe.c	FUNCTION_10	IF_1	CALL_3
0x40009b1	    0x448b35000000	           mov r14d, dword [0x040009b8] 	       309	describe.c	FUNCTION_10	IF_1	IF_2
0x40009b8	          0x4585f6	                         test r14d, r14d	       309	describe.c	FUNCTION_10	IF_1	IF_2
0x40009bb	            0x754d	                           jne 0x4000a0a	       309	describe.c	FUNCTION_10	IF_1	IF_2
0x40009bd	    0x488b1d000000	            mov rbx, qword [0x040009c4] 	       439	describe.c	FUNCTION_10	IF_27
0x40009c4	          0x4885db	                           test rbx, rbx	       439	describe.c	FUNCTION_10	IF_27
0x40009c7	            0x7418	                            je 0x40009e1	       439	describe.c	FUNCTION_10	IF_27
0x40009c9	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_116	CALL_2
0x40009cc	      0xe800000000	                          call 0x40009d1	       279	strbuf.h	FUNCTION_116	CALL_2
0x40009d1	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       279	strbuf.h	FUNCTION_116	CALL_2
0x40009d6	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_116	CALL_2
0x40009d9	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_116	CALL_2
0x40009dc	      0xe800000000	                          call 0x40009e1	       279	strbuf.h	FUNCTION_116	CALL_2
0x40009e1	    0x488b8424c802	           mov rax, qword [rsp + 0x2c8] 	       441	describe.c	FUNCTION_10
0x40009e9	    0x644833042528	                xor rax, qword fs:[0x28]	       441	describe.c	FUNCTION_10
0x40009f2	     0xf85f9040000	                           jne 0x4000ef1	       441	describe.c	FUNCTION_10
0x40009f8	    0x4881c4d80200	                          add rsp, 0x2d8	       441	describe.c	FUNCTION_10
0x40009ff	              0x5b	                                 pop rbx	       441	describe.c	FUNCTION_10
0x4000a00	              0x5d	                                 pop rbp	       441	describe.c	FUNCTION_10
0x4000a01	            0x415c	                                 pop r12	       441	describe.c	FUNCTION_10
0x4000a03	            0x415d	                                 pop r13	       441	describe.c	FUNCTION_10
0x4000a05	            0x415e	                                 pop r14	       441	describe.c	FUNCTION_10
0x4000a07	            0x415f	                                 pop r15	       441	describe.c	FUNCTION_10
0x4000a09	              0xc3	                                     ret	       441	describe.c	FUNCTION_10
0x4000a0a	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000a0e	          0x4885c0	                           test rax, rax	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000a11	     0xf843b040000	                            je 0x4000e52	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000a17	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000a1b	        0x4883c704	                              add rdi, 4	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000a1f	    0x8b3500000000	            mov esi, dword [0x04000a25] 	       288	describe.c	FUNCTION_9	CALL_2
0x4000a25	      0xe800000000	                          call 0x4000a2a	       288	describe.c	FUNCTION_9	CALL_2
0x4000a2a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       288	describe.c	FUNCTION_9	CALL_2
0x4000a2f	          0x4889c1	                            mov rcx, rax	       288	describe.c	FUNCTION_9	CALL_2
0x4000a32	            0x31d2	                            xor edx, edx	       288	describe.c	FUNCTION_9	CALL_2
0x4000a34	      0xbe00000000	                              mov esi, 0	       288	describe.c	FUNCTION_9	CALL_2
0x4000a39	            0x31c0	                            xor eax, eax	       288	describe.c	FUNCTION_9	CALL_2
0x4000a3b	      0xe800000000	                          call 0x4000a40	       288	describe.c	FUNCTION_9	CALL_2
0x4000a40	      0xe978ffffff	                           jmp 0x40009bd	       288	describe.c	FUNCTION_9	CALL_2
0x4000a45	           0xf1f00	                         nop dword [rax]	       288	describe.c	FUNCTION_9	CALL_2
0x4000a48	    0x48837c243000	               cmp qword [rsp + 0x30], 0	       336	describe.c	FUNCTION_10	WHILE_1
0x4000a4e	          0x4d89ee	                            mov r14, r13	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000a51	     0xf85e1fdffff	                           jne 0x4000838	       336	describe.c	FUNCTION_10	WHILE_1
0x4000a57	          0x4d89f5	                            mov r13, r14	       336	describe.c	FUNCTION_10	WHILE_1
0x4000a5a	            0x31db	                            xor ebx, ebx	       293	describe.c	FUNCTION_10
0x4000a5c	            0x85ed	                           test ebp, ebp	       383	describe.c	FUNCTION_10	IF_17
0x4000a5e	     0xf84fa010000	                            je 0x4000c5e	       383	describe.c	FUNCTION_10	IF_17
0x4000a64	          0x83fd01	                              cmp ebp, 1	      1048	git-compat-util.h	FUNCTION_40	IF_1
0x4000a67	            0x89ee	                            mov esi, ebp	       401	describe.c	FUNCTION_10
0x4000a69	            0x7414	                            je 0x4000a7f	      1048	git-compat-util.h	FUNCTION_40	IF_1
0x4000a6b	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      1049	git-compat-util.h	FUNCTION_40	IF_1
0x4000a70	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_40	IF_1
0x4000a75	      0xba18000000	                           mov edx, 0x18	      1049	git-compat-util.h	FUNCTION_40	IF_1
0x4000a7a	      0xe800000000	                          call 0x4000a7f	      1049	git-compat-util.h	FUNCTION_40	IF_1
0x4000a7f	          0x4885db	                           test rbx, rbx	       403	describe.c	FUNCTION_10	IF_21
0x4000a82	            0x7411	                            je 0x4000a95	       403	describe.c	FUNCTION_10	IF_21
0x4000a84	      0x488d742430	                   lea rsi, [rsp + 0x30]	       404	describe.c	FUNCTION_10	IF_21	CALL_27
0x4000a89	          0x4889df	                            mov rdi, rbx	       404	describe.c	FUNCTION_10	IF_21	CALL_27
0x4000a8c	        0x4983ed01	                              sub r13, 1	       405	describe.c	FUNCTION_10	IF_21
0x4000a90	      0xe800000000	                          call 0x4000a95	       404	describe.c	FUNCTION_10	IF_21	CALL_27
0x4000a95	    0x48c744240800	                  mov qword [rsp + 8], 0	       233	describe.c	FUNCTION_7
0x4000a9e	            0x6690	                                     nop	       233	describe.c	FUNCTION_7
0x4000aa0	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       234	describe.c	FUNCTION_7	WHILE_1
0x4000aa5	          0x4885ff	                           test rdi, rdi	       234	describe.c	FUNCTION_7	WHILE_1
0x4000aa8	            0x7474	                            je 0x4000b1e	       234	describe.c	FUNCTION_7	WHILE_1
0x4000aaa	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       235	describe.c	FUNCTION_7	WHILE_1	CALL_1
0x4000aaf	      0xe800000000	                          call 0x4000ab4	       235	describe.c	FUNCTION_7	WHILE_1	CALL_1
0x4000ab4	          0x4989c4	                            mov r12, rax	       235	describe.c	FUNCTION_7	WHILE_1	CALL_1
0x4000ab7	        0x4c8b7830	            mov r15, qword [rax + 0x30] 	       236	describe.c	FUNCTION_7	WHILE_1
0x4000abb	            0x8b00	                    mov eax, dword [rax]	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000abd	        0x8b742460	            mov esi, dword [rsp + 0x60] 	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000ac1	    0x488344240801	                  add qword [rsp + 8], 1	       237	describe.c	FUNCTION_7	WHILE_1
0x4000ac7	          0xc1e804	                              shr eax, 4	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000aca	      0x25ffffff07	                      and eax, 0x7ffffff	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000acf	            0x85f0	                           test eax, esi	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000ad1	     0xf84cc010000	                            je 0x4000ca3	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000ad7	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       239	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000adc	          0x4885ff	                           test rdi, rdi	       240	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000adf	     0xf8466030000	                            je 0x4000e4b	       240	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000ae5	          0x488b07	                    mov rax, qword [rdi]	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000ae8	            0x8b00	                    mov eax, dword [rax]	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000aea	          0xc1e804	                              shr eax, 4	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000aed	      0x25ffffff07	                      and eax, 0x7ffffff	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000af2	            0x85f0	                           test eax, esi	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000af4	     0xf843a010000	                            je 0x4000c34	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000afa	          0x4889fa	                            mov rdx, rdi	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000afd	            0xeb16	                           jmp 0x4000b15	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000aff	              0x90	                                     nop	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000b00	          0x488b02	                    mov rax, qword [rdx]	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000b03	            0x8b00	                    mov eax, dword [rax]	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000b05	          0xc1e804	                              shr eax, 4	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000b08	      0x25ffffff07	                      and eax, 0x7ffffff	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000b0d	            0x85f0	                           test eax, esi	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000b0f	     0xf841f010000	                            je 0x4000c34	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000b15	        0x488b5208	                mov rdx, qword [rdx + 8]	       244	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000b19	          0x4885d2	                           test rdx, rdx	       240	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000b1c	            0x75e2	                           jne 0x4000b00	       240	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000b1e	      0xe800000000	                          call 0x4000b23	       408	describe.c	FUNCTION_10	CALL_29
0x4000b23	    0x8b0d00000000	            mov ecx, dword [0x04000b29] 	       410	describe.c	FUNCTION_10	IF_22
0x4000b29	            0x85c9	                           test ecx, ecx	       410	describe.c	FUNCTION_10	IF_22
0x4000b2b	     0xf84ee010000	                            je 0x4000d1f	       410	describe.c	FUNCTION_10	IF_22
0x4000b31	    0x8b0d00000000	            mov ecx, dword [0x04000b37] 	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000b37	            0x85c9	                           test ecx, ecx	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000b39	     0xf881b030000	                            js 0x4000e5a	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000b3f	          0x8d45ff	                      lea eax, [rbp - 1]	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000b42	      0x4c8d642450	                   lea r12, [rsp + 0x50]	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000b47	      0x488d444003	              lea rax, [rax + rax*2 + 3]	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000b4c	        0x498d2cc4	                  lea rbp, [r12 + rax*8]	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000b50	            0xeb39	                           jmp 0x4000b8b	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000b52	    0x660f1f440000	                    nop word [rax + rax]	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000b58	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_407
0x4000b5c	    0x488b3d000000	            mov rdi, qword [0x04000b63] 	        97	stdio2.h	CALL_407
0x4000b63	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_407
0x4000b68	            0x4152	                                push r10	        97	stdio2.h	CALL_407
0x4000b6a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_407
0x4000b6c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_407
0x4000b71	        0x4983c418	                           add r12, 0x18	        97	stdio2.h	CALL_407
0x4000b75	      0xe800000000	                          call 0x4000b7a	        97	stdio2.h	CALL_407
0x4000b7a	          0x4939ec	                            cmp r12, rbp	       420	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000b7d	              0x58	                                 pop rax	       420	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000b7e	              0x5a	                                 pop rdx	       420	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000b7f	     0xf8425010000	                            je 0x4000caa	       420	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000b85	    0x8b0d00000000	            mov ecx, dword [0x04000b8b] 	       420	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000b8b	        0x498b0424	                    mov rax, qword [r12]	       424	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000b8f	      0x458b4c2408	                mov r9d, dword [r12 + 8]	       422	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000b94	    0x41b800000000	                              mov r8d, 0	        53	gettext.h	FUNCTION_92	IF_1
0x4000b9a	        0x4c8b5048	            mov r10, qword [rax + 0x48] 	       422	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000b9e	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       423	describe.c	FUNCTION_10	IF_22	FOR_4	CALL_32
0x4000ba2	          0x83e003	                              and eax, 3	       422	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000ba5	    0x488b34c50000	                  mov rsi, qword [rax*8]	       422	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000bad	          0x803e00	                       cmp byte [rsi], 0	        52	gettext.h	FUNCTION_92	IF_1
0x4000bb0	            0x74a6	                            je 0x4000b58	        52	gettext.h	FUNCTION_92	IF_1
0x4000bb2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_92
0x4000bb7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_92
0x4000bb9	        0x894c242c	             mov dword [rsp + 0x2c], ecx	        54	gettext.h	FUNCTION_92
0x4000bbd	      0x44894c2428	             mov dword [rsp + 0x28], r9d	        54	gettext.h	FUNCTION_92
0x4000bc2	      0x4c89542420	             mov qword [rsp + 0x20], r10	        54	gettext.h	FUNCTION_92
0x4000bc7	      0xe800000000	                          call 0x4000bcc	        54	gettext.h	FUNCTION_92
0x4000bcc	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	        54	gettext.h	FUNCTION_92
0x4000bd0	          0x4989c0	                             mov r8, rax	        54	gettext.h	FUNCTION_92
0x4000bd3	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	        54	gettext.h	FUNCTION_92
0x4000bd8	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	        54	gettext.h	FUNCTION_92
0x4000bdd	      0xe976ffffff	                           jmp 0x4000b58	        54	gettext.h	FUNCTION_92
0x4000be2	      0x8344240801	                  add dword [rsp + 8], 1	       343	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000be7	            0x85ed	                           test ebp, ebp	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x4000be9	     0xf85fafcffff	                           jne 0x40008e9	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x4000bef	      0xe925fdffff	                           jmp 0x4000919	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x4000bf4	         0xf1f4000	                         nop dword [rax]	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x4000bf8	      0x488d742430	                   lea rsi, [rsp + 0x30]	       254	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x4000bfd	          0x4c89f7	                            mov rdi, r14	       254	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x4000c00	      0xe800000000	                          call 0x4000c05	       254	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x4000c05	          0x418b36	                    mov esi, dword [r14]	       254	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x4000c08	          0xc1ee04	                              shr esi, 4	       254	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x4000c0b	    0x81e6ffffff07	                      and esi, 0x7ffffff	       254	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x4000c11	        0x418b0424	                    mov eax, dword [r12]	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c15	          0xc1e804	                              shr eax, 4	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c18	             0x9f0	                             or eax, esi	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c1a	          0x418b36	                    mov esi, dword [r14]	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c1d	      0x25ffffff07	                      and eax, 0x7ffffff	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c22	          0xc1e004	                              shl eax, 4	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c25	    0x81e60f000080	                     and esi, 0x8000000f	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c2b	             0x9f0	                             or eax, esi	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c2d	          0x418906	                    mov dword [r14], eax	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c30	        0x4d8b7f08	                mov r15, qword [r15 + 8]	       256	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c34	          0x4d85ff	                           test r15, r15	       250	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c37	     0xf8463feffff	                            je 0x4000aa0	       250	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c3d	          0x4d8b37	                    mov r14, qword [r15]	       251	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c40	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_111	CALL_1
0x4000c42	          0x4c89f7	                            mov rdi, r14	        75	commit.h	FUNCTION_111	CALL_1
0x4000c45	      0xe800000000	                          call 0x4000c4a	        75	commit.h	FUNCTION_111	CALL_1
0x4000c4a	          0x418b36	                    mov esi, dword [r14]	       253	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	IF_4
0x4000c4d	          0xc1ee04	                              shr esi, 4	       253	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	IF_4
0x4000c50	    0x81e6ffffff07	                      and esi, 0x7ffffff	       253	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	IF_4
0x4000c56	        0x40f6c601	                             test sil, 1	       253	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	IF_4
0x4000c5a	            0x75b5	                           jne 0x4000c11	       253	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	IF_4
0x4000c5c	            0xeb9a	                           jmp 0x4000bf8	       253	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	IF_4
0x4000c5e	    0x8b3d00000000	            mov edi, dword [0x04000c64] 	       385	describe.c	FUNCTION_10	IF_17	IF_18
0x4000c64	            0x85ff	                           test edi, edi	       385	describe.c	FUNCTION_10	IF_17	IF_18
0x4000c66	     0xf859c010000	                           jne 0x4000e08	       385	describe.c	FUNCTION_10	IF_17	IF_18
0x4000c6c	        0x8b742408	                mov esi, dword [rsp + 8]	       391	describe.c	FUNCTION_10	IF_17	IF_20
0x4000c70	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       392	describe.c	FUNCTION_10	IF_17	IF_20	CALL_22
0x4000c75	            0x85f6	                           test esi, esi	       391	describe.c	FUNCTION_10	IF_17	IF_20
0x4000c77	     0xf8474010000	                            je 0x4000df1	       391	describe.c	FUNCTION_10	IF_17	IF_20
0x4000c7d	      0xe800000000	                          call 0x4000c82	       392	describe.c	FUNCTION_10	IF_17	IF_20	CALL_22
0x4000c82	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_92
0x4000c87	          0x4889c3	                            mov rbx, rax	       392	describe.c	FUNCTION_10	IF_17	IF_20	CALL_22
0x4000c8a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_92
0x4000c8f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_92
0x4000c91	      0xe800000000	                          call 0x4000c96	        54	gettext.h	FUNCTION_92
0x4000c96	          0x4889de	                            mov rsi, rbx	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_25
0x4000c99	          0x4889c7	                            mov rdi, rax	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_25
0x4000c9c	            0x31c0	                            xor eax, eax	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_25
0x4000c9e	      0xe800000000	                          call 0x4000ca3	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_25
0x4000ca3	      0x8344245801	               add dword [rsp + 0x58], 1	       249	describe.c	FUNCTION_7	WHILE_1	ELSE_1
0x4000ca8	            0xeb8a	                           jmp 0x4000c34	       249	describe.c	FUNCTION_7	WHILE_1	ELSE_1
0x4000caa	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_92
0x4000cac	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_92
0x4000cb1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_92
0x4000cb6	      0xe800000000	                          call 0x4000cbb	        54	gettext.h	FUNCTION_92
0x4000cbb	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        97	stdio2.h	CALL_407
0x4000cc0	    0x488b3d000000	            mov rdi, qword [0x04000cc7] 	        97	stdio2.h	CALL_407
0x4000cc7	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_407
0x4000cca	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_407
0x4000ccf	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_407
0x4000cd1	          0x4c01e9	                            add rcx, r13	        97	stdio2.h	CALL_407
0x4000cd4	      0xe800000000	                          call 0x4000cd9	        97	stdio2.h	CALL_407
0x4000cd9	          0x4885db	                           test rbx, rbx	       427	describe.c	FUNCTION_10	IF_22	IF_25
0x4000cdc	            0x7441	                            je 0x4000d1f	       427	describe.c	FUNCTION_10	IF_22	IF_25
0x4000cde	        0x488d7b04	                      lea rdi, [rbx + 4]	       432	describe.c	FUNCTION_10	IF_22	IF_25	CALL_35
0x4000ce2	      0xe800000000	                          call 0x4000ce7	       428	describe.c	FUNCTION_10	IF_22	IF_25
0x4000ce7	    0x8b1d00000000	            mov ebx, dword [0x04000ced] 	       428	describe.c	FUNCTION_10	IF_22	IF_25
0x4000ced	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_92
0x4000cf2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_92
0x4000cf7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_92
0x4000cf9	          0x4889c5	                            mov rbp, rax	       428	describe.c	FUNCTION_10	IF_22	IF_25
0x4000cfc	      0xe800000000	                          call 0x4000d01	        54	gettext.h	FUNCTION_92
0x4000d01	    0x488b3d000000	            mov rdi, qword [0x04000d08] 	        97	stdio2.h	CALL_407
0x4000d08	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_407
0x4000d0b	          0x4989e9	                             mov r9, rbp	        97	stdio2.h	CALL_407
0x4000d0e	          0x4189d8	                            mov r8d, ebx	        97	stdio2.h	CALL_407
0x4000d11	            0x89d9	                            mov ecx, ebx	        97	stdio2.h	CALL_407
0x4000d13	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_407
0x4000d18	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_407
0x4000d1a	      0xe800000000	                          call 0x4000d1f	        97	stdio2.h	CALL_407
0x4000d1f	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       436	describe.c	FUNCTION_10	CALL_36
0x4000d24	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       436	describe.c	FUNCTION_10	CALL_36
0x4000d29	      0xe8a2f8ffff	                    call sym.append_name	       436	describe.c	FUNCTION_10	CALL_36
0x4000d2e	    0x8b3500000000	            mov esi, dword [0x04000d34] 	       437	describe.c	FUNCTION_10	IF_26
0x4000d34	            0x85f6	                           test esi, esi	       437	describe.c	FUNCTION_10	IF_26
0x4000d36	     0xf8481fcffff	                            je 0x40009bd	       437	describe.c	FUNCTION_10	IF_26
0x4000d3c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       288	describe.c	FUNCTION_9	CALL_2
0x4000d41	        0x8b5c2458	            mov ebx, dword [rsp + 0x58] 	       438	describe.c	FUNCTION_10	CALL_37
0x4000d45	      0xe800000000	                          call 0x4000d4a	       288	describe.c	FUNCTION_9	CALL_2
0x4000d4a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       288	describe.c	FUNCTION_9	CALL_2
0x4000d4f	          0x4889c1	                            mov rcx, rax	       288	describe.c	FUNCTION_9	CALL_2
0x4000d52	            0x89da	                            mov edx, ebx	       288	describe.c	FUNCTION_9	CALL_2
0x4000d54	      0xbe00000000	                              mov esi, 0	       288	describe.c	FUNCTION_9	CALL_2
0x4000d59	            0x31c0	                            xor eax, eax	       288	describe.c	FUNCTION_9	CALL_2
0x4000d5b	      0xe800000000	                          call 0x4000d60	       288	describe.c	FUNCTION_9	CALL_2
0x4000d60	      0xe958fcffff	                           jmp 0x40009bd	       288	describe.c	FUNCTION_9	CALL_2
0x4000d65	      0x488d742430	                   lea rsi, [rsp + 0x30]	       377	hashmap.h	FUNCTION_74	CALL_1
0x4000d6a	      0xbf00000000	                              mov edi, 0	       377	hashmap.h	FUNCTION_74	CALL_1
0x4000d6f	      0xe800000000	                          call 0x4000d74	       377	hashmap.h	FUNCTION_74	CALL_1
0x4000d74	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       378	hashmap.h	FUNCTION_74	CALL_2
0x4000d79	      0xe800000000	                          call 0x4000d7e	       378	hashmap.h	FUNCTION_74	CALL_2
0x4000d7e	          0x4885c0	                           test rax, rax	       325	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_11
0x4000d81	          0x4889c3	                            mov rbx, rax	       378	hashmap.h	FUNCTION_74	CALL_2
0x4000d84	            0x7445	                            je 0x4000dcb	       325	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_11
0x4000d86	        0x488d7810	                   lea rdi, [rax + 0x10]	       326	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_12
0x4000d8a	      0xbe01000000	                              mov esi, 1	       326	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_12
0x4000d8f	      0xe800000000	                          call 0x4000d94	       326	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_12
0x4000d94	          0x4885c0	                           test rax, rax	       327	describe.c	FUNCTION_10	IF_6	FOR_1	IF_7
0x4000d97	            0x74db	                            je 0x4000d74	       327	describe.c	FUNCTION_10	IF_6	FOR_1	IF_7
0x4000d99	        0x48895818	             mov qword [rax + 0x18], rbx	       328	describe.c	FUNCTION_10	IF_6	FOR_1	IF_7
0x4000d9d	            0xebd5	                           jmp 0x4000d74	       328	describe.c	FUNCTION_10	IF_6	FOR_1	IF_7
0x4000d9f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_92
0x4000da1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_92
0x4000da6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_92
0x4000dab	      0xe800000000	                          call 0x4000db0	        54	gettext.h	FUNCTION_92
0x4000db0	    0x488b3d000000	            mov rdi, qword [0x04000db7] 	        97	stdio2.h	CALL_407
0x4000db7	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_407
0x4000dba	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_407
0x4000dbf	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_407
0x4000dc1	      0xe800000000	                          call 0x4000dc6	        97	stdio2.h	CALL_407
0x4000dc6	      0xe919faffff	                           jmp 0x40007e4	        97	stdio2.h	CALL_407
0x4000dcb	    0xc70500000000	               mov dword [0x04000dd5], 1	       330	describe.c	FUNCTION_10	IF_6
0x4000dd5	      0xe918faffff	                           jmp 0x40007f2	       330	describe.c	FUNCTION_10	IF_6
0x4000dda	    0x448b0d000000	            mov r9d, dword [0x04000de1] 	       365	describe.c	FUNCTION_10	WHILE_1	IF_13	IF_14
0x4000de1	          0x4585c9	                           test r9d, r9d	       365	describe.c	FUNCTION_10	WHILE_1	IF_13	IF_14
0x4000de4	     0xf85ca000000	                           jne 0x4000eb4	       365	describe.c	FUNCTION_10	WHILE_1	IF_13	IF_14
0x4000dea	            0x31db	                            xor ebx, ebx	       293	describe.c	FUNCTION_10
0x4000dec	      0xe96bfcffff	                           jmp 0x4000a5c	       293	describe.c	FUNCTION_10
0x4000df1	      0xe800000000	                          call 0x4000df6	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_25
0x4000df6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_92
0x4000dfb	          0x4889c3	                            mov rbx, rax	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_25
0x4000dfe	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_92
0x4000e03	      0xe987feffff	                           jmp 0x4000c8f	        54	gettext.h	FUNCTION_92
0x4000e08	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       386	describe.c	FUNCTION_10	IF_17	IF_18	CALL_19
0x4000e0d	    0x8b1500000000	            mov edx, dword [0x04000e13] 	       386	describe.c	FUNCTION_10	IF_17	IF_18	CALL_19
0x4000e13	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       386	describe.c	FUNCTION_10	IF_17	IF_18	CALL_19
0x4000e18	          0x4c89ff	                            mov rdi, r15	       386	describe.c	FUNCTION_10	IF_17	IF_18	CALL_19
0x4000e1b	      0xe800000000	                          call 0x4000e20	       386	describe.c	FUNCTION_10	IF_17	IF_18	CALL_19
0x4000e20	    0x488b1d000000	            mov rbx, qword [0x04000e27] 	       387	describe.c	FUNCTION_10	IF_17	IF_18	IF_19
0x4000e27	          0x4885db	                           test rbx, rbx	       387	describe.c	FUNCTION_10	IF_17	IF_18	IF_19
0x4000e2a	     0xf84b1fbffff	                            je 0x40009e1	       387	describe.c	FUNCTION_10	IF_17	IF_18	IF_19
0x4000e30	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000e33	      0xe800000000	                          call 0x4000e38	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000e38	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000e3b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000e3e	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000e41	      0xe800000000	                          call 0x4000e46	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000e46	      0xe996fbffff	                           jmp 0x40009e1	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000e4b	            0x31ff	                            xor edi, edi	       239	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000e4d	      0xe9ccfcffff	                           jmp 0x4000b1e	       239	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000e52	          0x4c89e7	                            mov rdi, r12	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000e55	      0xe9c5fbffff	                           jmp 0x4000a1f	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000e5a	      0xbe00000000	                              mov esi, 0	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000e5f	            0x31c0	                            xor eax, eax	        52	gettext.h	FUNCTION_92	IF_1
0x4000e61	    0x41bc00000000	                             mov r12d, 0	        52	gettext.h	FUNCTION_92	IF_1
0x4000e67	          0x803e00	                       cmp byte [rsi], 0	        52	gettext.h	FUNCTION_92	IF_1
0x4000e6a	    0x41be00000000	                             mov r14d, 0	        52	gettext.h	FUNCTION_92	IF_1
0x4000e70	            0x741c	                            je 0x4000e8e	        52	gettext.h	FUNCTION_92	IF_1
0x4000e72	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_92
0x4000e77	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_92
0x4000e79	        0x894c2420	             mov dword [rsp + 0x20], ecx	        54	gettext.h	FUNCTION_92
0x4000e7d	      0xe800000000	                          call 0x4000e82	        54	gettext.h	FUNCTION_92
0x4000e82	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_92
0x4000e85	      0xe800000000	                          call 0x4000e8a	        54	gettext.h	FUNCTION_92
0x4000e8a	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	        54	gettext.h	FUNCTION_92
0x4000e8e	            0x39c8	                            cmp eax, ecx	       416	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	IF_24
0x4000e90	            0x7e08	                           jle 0x4000e9a	       416	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	IF_24
0x4000e92	    0x890500000000	            mov dword [0x04000e98], eax 	       417	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	IF_24
0x4000e98	            0x89c1	                            mov ecx, eax	       417	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	IF_24
0x4000e9a	        0x4983c408	                              add r12, 8	       417	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	IF_24
0x4000e9e	          0x4d39e6	                            cmp r14, r12	       414	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3
0x4000ea1	     0xf8498fcffff	                            je 0x4000b3f	       414	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3
0x4000ea7	        0x498b3424	                    mov rsi, qword [r12]	       414	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3
0x4000eab	            0x31c0	                            xor eax, eax	        52	gettext.h	FUNCTION_92	IF_1
0x4000ead	          0x803e00	                       cmp byte [rsi], 0	        52	gettext.h	FUNCTION_92	IF_1
0x4000eb0	            0x74dc	                            je 0x4000e8e	        52	gettext.h	FUNCTION_92	IF_1
0x4000eb2	            0xebbe	                           jmp 0x4000e72	        52	gettext.h	FUNCTION_92	IF_1
0x4000eb4	        0x488d7b04	                      lea rdi, [rbx + 4]	       367	describe.c	FUNCTION_10	WHILE_1	IF_13	CALL_16
0x4000eb8	      0xe800000000	                          call 0x4000ebd	       366	describe.c	FUNCTION_10	WHILE_1	IF_13	IF_14	CALL_15
0x4000ebd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_92
0x4000ec2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_92
0x4000ec7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_92
0x4000ec9	          0x4889c3	                            mov rbx, rax	       366	describe.c	FUNCTION_10	WHILE_1	IF_13	IF_14	CALL_15
0x4000ecc	      0xe800000000	                          call 0x4000ed1	        54	gettext.h	FUNCTION_92
0x4000ed1	    0x488b3d000000	            mov rdi, qword [0x04000ed8] 	        97	stdio2.h	CALL_407
0x4000ed8	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_407
0x4000edb	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_407
0x4000ede	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_407
0x4000ee3	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_407
0x4000ee5	            0x31db	                            xor ebx, ebx	       293	describe.c	FUNCTION_10
0x4000ee7	      0xe800000000	                          call 0x4000eec	        97	stdio2.h	CALL_407
0x4000eec	      0xe96bfbffff	                           jmp 0x4000a5c	        97	stdio2.h	CALL_407
0x4000ef1	      0xe800000000	                          call 0x4000ef6	       441	describe.c	FUNCTION_10
0x4000ef6	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       317	describe.c	FUNCTION_10	CALL_8
0x4000efb	      0xe800000000	                          call 0x4000f00	       317	describe.c	FUNCTION_10	CALL_8
0x4000f00	      0xbf00000000	                              mov edi, 0	       317	describe.c	FUNCTION_10	CALL_8
0x4000f05	          0x4889c3	                            mov rbx, rax	       317	describe.c	FUNCTION_10	CALL_8
0x4000f08	      0xe8f3f2ffff	                       call sym._.part.1	       317	describe.c	FUNCTION_10	CALL_8
0x4000f0d	          0x4889de	                            mov rsi, rbx	       317	describe.c	FUNCTION_10	CALL_8
0x4000f10	          0x4889c7	                            mov rdi, rax	       317	describe.c	FUNCTION_10	CALL_8
0x4000f13	            0x31c0	                            xor eax, eax	       317	describe.c	FUNCTION_10	CALL_8
0x4000f15	      0xe800000000	                          call 0x4000f1a	       317	describe.c	FUNCTION_10	CALL_8
append_name	ELSE,1:CALL,12:IF,7:DO,0:WHILE,0:FOR,0:SWITCH,0:functions,0	91
0x40005d0	            0x4155	                                push r13	       263	describe.c	FUNCTION_8
0x40005d2	            0x4154	                                push r12	       263	describe.c	FUNCTION_8
0x40005d4	              0x55	                                push rbp	       263	describe.c	FUNCTION_8
0x40005d5	              0x53	                                push rbx	       263	describe.c	FUNCTION_8
0x40005d6	          0x4889f5	                            mov rbp, rsi	       263	describe.c	FUNCTION_8
0x40005d9	          0x4889fb	                            mov rbx, rdi	       263	describe.c	FUNCTION_8
0x40005dc	        0x4883ec08	                              sub rsp, 8	       263	describe.c	FUNCTION_8
0x40005e0	         0xfb64730	           movzx eax, byte [rdi + 0x30] 	       264	describe.c	FUNCTION_8	IF_1
0x40005e4	            0x89c2	                            mov edx, eax	       264	describe.c	FUNCTION_8	IF_1
0x40005e6	          0x83e203	                              and edx, 3	       264	describe.c	FUNCTION_8	IF_1
0x40005e9	          0x80fa02	                               cmp dl, 2	       264	describe.c	FUNCTION_8	IF_1
0x40005ec	     0xf849e000000	                            je 0x4000690	       264	describe.c	FUNCTION_8	IF_1
0x40005f2	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       269	describe.c	FUNCTION_8	IF_3
0x40005f6	          0x4885d2	                           test rdx, rdx	       269	describe.c	FUNCTION_8	IF_3
0x40005f9	     0xf84e1000000	                            je 0x40006e0	       269	describe.c	FUNCTION_8	IF_3
0x40005ff	         0xfb64330	           movzx eax, byte [rbx + 0x30] 	       269	describe.c	FUNCTION_8	IF_3
0x4000603	            0xa804	                              test al, 4	       269	describe.c	FUNCTION_8	IF_3
0x4000605	            0x7541	                           jne 0x4000648	       269	describe.c	FUNCTION_8	IF_3
0x4000607	        0x4c8b6220	            mov r12, qword [rdx + 0x20] 	       270	describe.c	FUNCTION_8	IF_3	IF_4
0x400060b	          0x4d85e4	                           test r12, r12	       270	describe.c	FUNCTION_8	IF_3	IF_4
0x400060e	     0xf8402010000	                            je 0x4000716	       270	describe.c	FUNCTION_8	IF_3	IF_4
0x4000614	    0x8b0500000000	            mov eax, dword [0x0400061a] 	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x400061a	        0x4c8b6b48	            mov r13, qword [rbx + 0x48] 	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x400061e	            0x85c0	                           test eax, eax	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x4000620	        0x498d7505	                      lea rsi, [r13 + 5]	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x4000624	            0x7503	                           jne 0x4000629	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x4000626	          0x4c89ee	                            mov rsi, r13	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x4000629	          0x4c89e7	                            mov rdi, r12	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x400062c	      0xe800000000	                          call 0x4000631	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x4000631	            0x85c0	                           test eax, eax	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x4000633	     0xf85b7000000	                           jne 0x40006f0	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x4000639	        0x804b3004	                 or byte [rbx + 0x30], 4	       274	describe.c	FUNCTION_8	IF_3
0x400063d	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       277	describe.c	FUNCTION_8	IF_6
0x4000642	     0xf8498000000	                            je 0x40006e0	       277	describe.c	FUNCTION_8	IF_6
0x4000648	    0x8b1500000000	            mov edx, dword [0x0400064e] 	       278	describe.c	FUNCTION_8	IF_6	IF_7
0x400064e	            0x85d2	                           test edx, edx	       278	describe.c	FUNCTION_8	IF_6	IF_7
0x4000650	            0x7412	                            je 0x4000664	       278	describe.c	FUNCTION_8	IF_6	IF_7
0x4000652	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000657	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_116	CALL_2
0x400065c	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_116	CALL_2
0x400065f	      0xe800000000	                          call 0x4000664	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000664	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       280	describe.c	FUNCTION_8	IF_6	CALL_11
0x4000668	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       280	describe.c	FUNCTION_8	IF_6	CALL_11
0x400066c	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_116	CALL_2
0x400066f	      0xe800000000	                          call 0x4000674	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000674	        0x4883c408	                              add rsp, 8	       284	describe.c	FUNCTION_8
0x4000678	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_116	CALL_2
0x400067b	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_116	CALL_2
0x400067e	              0x5b	                                 pop rbx	       284	describe.c	FUNCTION_8
0x400067f	              0x5d	                                 pop rbp	       284	describe.c	FUNCTION_8
0x4000680	            0x415c	                                 pop r12	       284	describe.c	FUNCTION_8
0x4000682	            0x415d	                                 pop r13	       284	describe.c	FUNCTION_8
0x4000684	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000687	      0xe900000000	                           jmp 0x400068c	       279	strbuf.h	FUNCTION_116	CALL_2
0x400068c	         0xf1f4000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_116	CALL_2
0x4000690	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	       264	describe.c	FUNCTION_8	IF_1
0x4000694	          0x4885d2	                           test rdx, rdx	       264	describe.c	FUNCTION_8	IF_1
0x4000697	     0xf8566ffffff	                           jne 0x4000603	       264	describe.c	FUNCTION_8	IF_1
0x400069d	        0x488d7f31	                   lea rdi, [rdi + 0x31]	       265	describe.c	FUNCTION_8	IF_1	CALL_1
0x40006a1	      0xe800000000	                          call 0x40006a6	       265	describe.c	FUNCTION_8	IF_1	CALL_1
0x40006a6	          0x4885c0	                           test rax, rax	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x40006a9	        0x48894328	             mov qword [rbx + 0x28], rax	       265	describe.c	FUNCTION_8	IF_1	CALL_1
0x40006ad	            0x7410	                            je 0x40006bf	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x40006af	          0x4889c7	                            mov rdi, rax	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x40006b2	      0xe800000000	                          call 0x40006b7	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x40006b7	            0x85c0	                           test eax, eax	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x40006b9	     0xf8433ffffff	                            je 0x40005f2	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x40006bf	        0x488b5b48	            mov rbx, qword [rbx + 0x48] 	       267	describe.c	FUNCTION_8	IF_1	CALL_4
0x40006c3	      0xbf00000000	                              mov edi, 0	       267	describe.c	FUNCTION_8	IF_1	CALL_4
0x40006c8	      0xe833fbffff	                       call sym._.part.1	       267	describe.c	FUNCTION_8	IF_1	CALL_4
0x40006cd	          0x4889de	                            mov rsi, rbx	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x40006d0	          0x4889c7	                            mov rdi, rax	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x40006d3	            0x31c0	                            xor eax, eax	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x40006d5	      0xe800000000	                          call 0x40006da	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x40006da	    0x660f1f440000	                    nop word [rax + rax]	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x40006e0	        0x488b5b48	            mov rbx, qword [rbx + 0x48] 	       282	describe.c	FUNCTION_8	ELSE_1	CALL_12
0x40006e4	            0xeb86	                           jmp 0x400066c	       282	describe.c	FUNCTION_8	ELSE_1	CALL_12
0x40006e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       282	describe.c	FUNCTION_8	ELSE_1	CALL_12
0x40006f0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_92
0x40006f2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_92
0x40006f7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_92
0x40006fc	      0xe800000000	                          call 0x4000701	        54	gettext.h	FUNCTION_92
0x4000701	          0x4c89ea	                            mov rdx, r13	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x4000704	          0x4889c7	                            mov rdi, rax	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x4000707	          0x4c89e6	                            mov rsi, r12	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x400070a	            0x31c0	                            xor eax, eax	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x400070c	      0xe800000000	                          call 0x4000711	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x4000711	      0xe923ffffff	                           jmp 0x4000639	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x4000716	        0x488b5b48	            mov rbx, qword [rbx + 0x48] 	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x400071a	      0xbf00000000	                              mov edi, 0	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x400071f	            0xeba7	                           jmp 0x40006c8	       271	describe.c	FUNCTION_8	IF_3	CALL_6
