trailer_info_get	CALL,15:functions,0:IF,1:WHILE,0:DO,0:ELSE,0:FOR,1:SWITCH,0	467
0x4000f90	            0x4157	                                push r15	      1070	trailer.c	FUNCTION_49
0x4000f92	            0x4156	                                push r14	      1070	trailer.c	FUNCTION_49
0x4000f94	            0x4155	                                push r13	      1070	trailer.c	FUNCTION_49
0x4000f96	            0x4154	                                push r12	      1070	trailer.c	FUNCTION_49
0x4000f98	              0x55	                                push rbp	      1070	trailer.c	FUNCTION_49
0x4000f99	              0x53	                                push rbx	      1070	trailer.c	FUNCTION_49
0x4000f9a	        0x4883ec68	                           sub rsp, 0x68	      1070	trailer.c	FUNCTION_49
0x4000f9e	        0x48893424	                    mov qword [rsp], rsi	      1070	trailer.c	FUNCTION_49
0x4000fa2	    0x8b3500000000	            mov esi, dword [0x04000fa8] 	       567	trailer.c	FUNCTION_29	IF_1
0x4000fa8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1070	trailer.c	FUNCTION_49
0x4000fb1	      0x4889442458	             mov qword [rsp + 0x58], rax	      1070	trailer.c	FUNCTION_49
0x4000fb6	            0x31c0	                            xor eax, eax	      1070	trailer.c	FUNCTION_49
0x4000fb8	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      1070	trailer.c	FUNCTION_49
0x4000fbd	            0x85f6	                           test esi, esi	       567	trailer.c	FUNCTION_29	IF_1
0x4000fbf	     0xf8404060000	                            je 0x40015c9	       567	trailer.c	FUNCTION_29	IF_1
0x4000fc5	        0x488b0424	                    mov rax, qword [rsp]	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000fc9	          0x803800	                       cmp byte [rax], 0	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000fcc	          0x4889c3	                            mov rbx, rax	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000fcf	            0x752d	                           jne 0x4000ffe	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000fd1	      0xe947060000	                           jmp 0x400161d	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000fd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000fe0	          0x4889df	                            mov rdi, rbx	       759	trailer.c	FUNCTION_38
0x4000fe3	      0xbe0a000000	                            mov esi, 0xa	       759	trailer.c	FUNCTION_38
0x4000fe8	      0xe800000000	                          call 0x4000fed	       759	trailer.c	FUNCTION_38
0x4000fed	            0x31d2	                            xor edx, edx	       760	trailer.c	FUNCTION_38
0x4000fef	          0x803800	                       cmp byte [rax], 0	       760	trailer.c	FUNCTION_38
0x4000ff2	           0xf95c2	                                setne dl	       760	trailer.c	FUNCTION_38
0x4000ff5	        0x488d1c10	                    lea rbx, [rax + rdx]	       760	trailer.c	FUNCTION_38
0x4000ff9	          0x803b00	                       cmp byte [rbx], 0	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000ffc	            0x7411	                            je 0x400100f	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000ffe	      0xbe00000000	                              mov esi, 0	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4001003	          0x4889df	                            mov rdi, rbx	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4001006	      0xe800000000	                          call 0x400100b	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x400100b	            0x85c0	                           test eax, eax	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x400100d	            0x74d1	                            je 0x4000fe0	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x400100f	        0x482b1c24	                    sub rbx, qword [rsp]	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4001013	          0x4863f3	                         movsxd rsi, ebx	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4001016	            0x89f3	                            mov ebx, esi	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4001018	        0x4c8b3c24	                    mov r15, qword [rsp]	       904	trailer.c	FUNCTION_42	CALL_1
0x400101c	          0x4c89ff	                            mov rdi, r15	       904	trailer.c	FUNCTION_42	CALL_1
0x400101f	      0xe800000000	                          call 0x4001024	       904	trailer.c	FUNCTION_42	CALL_1
0x4001024	            0x29c3	                            sub ebx, eax	       904	trailer.c	FUNCTION_42	CALL_1
0x4001026	          0x4c89ff	                            mov rdi, r15	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001029	          0x4863c3	                         movsxd rax, ebx	      1081	trailer.c	FUNCTION_49	CALL_4
0x400102c	        0x895c2438	             mov dword [rsp + 0x38], ebx	       904	trailer.c	FUNCTION_42	CALL_1
0x4001030	      0x4889442410	             mov qword [rsp + 0x10], rax	      1081	trailer.c	FUNCTION_49	CALL_4
0x4001035	          0x4889c3	                            mov rbx, rax	      1081	trailer.c	FUNCTION_49	CALL_4
0x4001038	          0x4c89f8	                            mov rax, r15	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x400103b	          0x4801d8	                            add rax, rbx	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x400103e	          0x4939c7	                            cmp r15, rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001041	          0x4889c5	                            mov rbp, rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001044	      0x4889442428	             mov qword [rsp + 0x28], rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001049	     0xf83df030000	                           jae 0x400142e	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x400104f	     0xfb61d000000	           movzx ebx, byte [0x04001056] 	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001056	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001060	           0xfb617	                   movzx edx, byte [rdi]	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4001063	            0x38da	                              cmp dl, bl	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4001065	            0x743e	                            je 0x40010a5	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4001067	            0x84d2	                             test dl, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001069	            0x7431	                            je 0x400109c	       106	trailer.c	FUNCTION_6	WHILE_1
0x400106b	          0x80fa0a	                             cmp dl, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x400106e	            0x742c	                            je 0x400109c	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001070	           0xfb6c2	                           movzx eax, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001073	    0xf68000000000	                      test byte [rax], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x400107a	            0x7420	                            je 0x400109c	       106	trailer.c	FUNCTION_6	WHILE_1
0x400107c	          0x4889f9	                            mov rcx, rdi	       106	trailer.c	FUNCTION_6	WHILE_1
0x400107f	              0x90	                                     nop	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001080	        0x4883c101	                              add rcx, 1	       107	trailer.c	FUNCTION_6	WHILE_1
0x4001084	           0xfb611	                   movzx edx, byte [rcx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001087	            0x84d2	                             test dl, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001089	            0x7411	                            je 0x400109c	       106	trailer.c	FUNCTION_6	WHILE_1
0x400108b	          0x80fa0a	                             cmp dl, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x400108e	            0x740c	                            je 0x400109c	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001090	           0xfb6f2	                           movzx esi, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001093	    0xf68600000000	                      test byte [rsi], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x400109a	            0x75e4	                           jne 0x4001080	       106	trailer.c	FUNCTION_6	WHILE_1
0x400109c	            0x84d2	                             test dl, dl	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x400109e	            0x7420	                            je 0x40010c0	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x40010a0	          0x80fa0a	                             cmp dl, 0xa	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x40010a3	            0x741b	                            je 0x40010c0	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x40010a5	      0xbe0a000000	                            mov esi, 0xa	       759	trailer.c	FUNCTION_38
0x40010aa	      0xe800000000	                          call 0x40010af	       759	trailer.c	FUNCTION_38
0x40010af	            0x31d2	                            xor edx, edx	       760	trailer.c	FUNCTION_38
0x40010b1	          0x803800	                       cmp byte [rax], 0	       760	trailer.c	FUNCTION_38
0x40010b4	           0xf95c2	                                setne dl	       760	trailer.c	FUNCTION_38
0x40010b7	        0x488d3c10	                    lea rdi, [rax + rdx]	       760	trailer.c	FUNCTION_38
0x40010bb	          0x4839ef	                            cmp rdi, rbp	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x40010be	            0x72a0	                            jb 0x4001060	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x40010c0	            0x89f8	                            mov eax, edi	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x40010c2	          0x2b0424	                    sub eax, dword [rsp]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x40010c5	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       769	trailer.c	FUNCTION_39	IF_1
0x40010cb	        0x89442408	                mov dword [rsp + 8], eax	       769	trailer.c	FUNCTION_39	IF_1
0x40010cf	      0xb8ffffffff	                     mov eax, 0xffffffff	       770	trailer.c	FUNCTION_39	IF_1
0x40010d4	     0xf8568030000	                           jne 0x4001442	       769	trailer.c	FUNCTION_39	IF_1
0x40010da	        0x3b442408	                cmp eax, dword [rsp + 8]	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010de	     0xf8c26010000	                            jl 0x400120a	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010e4	        0x4c8b2c24	                    mov r13, qword [rsp]	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010e8	    0xc74424240000	               mov dword [rsp + 0x24], 0	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010f0	      0xbe01000000	                              mov esi, 1	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010f5	    0xc74424180000	               mov dword [rsp + 0x18], 0	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010fd	          0x4531e4	                          xor r12d, r12d	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4001100	          0x4531ff	                          xor r15d, r15d	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4001103	          0x4863d8	                         movsxd rbx, eax	       839	trailer.c	FUNCTION_41	FOR_2
0x4001106	      0x498d6c1d00	                    lea rbp, [r13 + rbx]	       839	trailer.c	FUNCTION_41	FOR_2
0x400110b	      0x440fb64500	                   movzx r8d, byte [rbp]	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001110	    0x443a05000000	              cmp r8b, byte [0x04001117]	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001117	     0xf84eb030000	                            je 0x4001508	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x400111d	        0x4180f80a	                            cmp r8b, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001121	     0xf84ac040000	                            je 0x40015d3	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001127	          0x4584c0	                           test r8b, r8b	       106	trailer.c	FUNCTION_6	WHILE_1
0x400112a	     0xf84a3040000	                            je 0x40015d3	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001130	        0x410fb6c0	                          movzx eax, r8b	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001134	          0x4889ea	                            mov rdx, rbp	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001137	    0xf68000000000	                      test byte [rax], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x400113e	     0xf848f040000	                            je 0x40015d3	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001144	         0xf1f4000	                         nop dword [rax]	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001148	        0x4883c201	                              add rdx, 1	       107	trailer.c	FUNCTION_6	WHILE_1
0x400114c	           0xfb602	                   movzx eax, byte [rdx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x400114f	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001151	            0x7410	                            je 0x4001163	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001153	            0x3c0a	                             cmp al, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001155	            0x740c	                            je 0x4001163	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001157	           0xfb6c8	                           movzx ecx, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x400115a	    0xf68100000000	                      test byte [rcx], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001161	            0x75e5	                           jne 0x4001148	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001163	            0x84c0	                             test al, al	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x4001165	     0xf8425030000	                            je 0x4001490	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x400116b	            0x3c0a	                             cmp al, 0xa	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x400116d	     0xf841d030000	                            je 0x4001490	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x4001173	    0x488b35000000	            mov rsi, qword [0x0400117a] 	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x400117a	    0x41be00000000	                             mov r14d, 0	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001180	          0x4885f6	                           test rsi, rsi	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001183	            0x751b	                           jne 0x40011a0	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001185	      0xe98e030000	                           jmp 0x4001518	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x400118a	    0x660f1f440000	                    nop word [rax + rax]	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001190	        0x4983c608	                              add r14, 8	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001194	          0x498b36	                    mov rsi, qword [r14]	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001197	          0x4885f6	                           test rsi, rsi	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x400119a	     0xf8473030000	                            je 0x4001513	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x40011a0	          0x4889ef	                            mov rdi, rbp	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x40011a3	      0xe800000000	                          call 0x40011a8	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x40011a8	            0x85c0	                           test eax, eax	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x40011aa	            0x74e4	                            je 0x4001190	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x40011ac	      0x8344242401	               add dword [rsp + 0x24], 1	       863	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x40011b1	          0x4531e4	                          xor r12d, r12d	       864	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x40011b4	    0xc74424180100	               mov dword [rsp + 0x18], 1	       865	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x40011bc	            0x31f6	                            xor esi, esi	       859	trailer.c	FUNCTION_41	FOR_2
0x40011be	          0x4885db	                           test rbx, rbx	       769	trailer.c	FUNCTION_39	IF_1
0x40011c1	      0xb8ffffffff	                     mov eax, 0xffffffff	       770	trailer.c	FUNCTION_39	IF_1
0x40011c6	            0x7438	                            je 0x4001200	       769	trailer.c	FUNCTION_39	IF_1
0x40011c8	            0x31c0	                            xor eax, eax	       772	trailer.c	FUNCTION_39	IF_2
0x40011ca	        0x4883fb01	                              cmp rbx, 1	       771	trailer.c	FUNCTION_39	IF_2
0x40011ce	            0x7430	                            je 0x4001200	       771	trailer.c	FUNCTION_39	IF_2
0x40011d0	          0x83eb02	                              sub ebx, 2	       780	trailer.c	FUNCTION_39	FOR_1
0x40011d3	            0x782b	                            js 0x4001200	       780	trailer.c	FUNCTION_39	FOR_1
0x40011d5	          0x4863c3	                         movsxd rax, ebx	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011d8	          0x4c01e8	                            add rax, r13	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011db	          0x80380a	                     cmp byte [rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011de	            0x7515	                           jne 0x40011f5	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011e0	      0xe9d1030000	                           jmp 0x40015b6	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011e5	           0xf1f00	                         nop dword [rax]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011e8	        0x4883e801	                              sub rax, 1	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011ec	          0x80380a	                     cmp byte [rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011ef	     0xf84c1030000	                            je 0x40015b6	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011f5	          0x83eb01	                              sub ebx, 1	       780	trailer.c	FUNCTION_39	FOR_1
0x40011f8	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       780	trailer.c	FUNCTION_39	FOR_1
0x40011fb	            0x75eb	                           jne 0x40011e8	       780	trailer.c	FUNCTION_39	FOR_1
0x40011fd	            0x31c0	                            xor eax, eax	       772	trailer.c	FUNCTION_39	IF_2
0x40011ff	              0x90	                                     nop	       772	trailer.c	FUNCTION_39	IF_2
0x4001200	        0x3b442408	                cmp eax, dword [rsp + 8]	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4001204	     0xf8df9feffff	                           jge 0x4001103	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x400120a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x400120f	            0x31f6	                            xor esi, esi	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x4001211	      0x4889442408	                mov qword [rsp + 8], rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001216	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1081	trailer.c	FUNCTION_49	CALL_4
0x400121b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1081	trailer.c	FUNCTION_49	CALL_4
0x4001220	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001225	            0x31c9	                            xor ecx, ecx	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001227	      0xba0a000000	                            mov edx, 0xa	      1083	trailer.c	FUNCTION_49	CALL_5
0x400122c	      0xe800000000	                          call 0x4001231	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001231	      0x4889442410	             mov qword [rsp + 0x10], rax	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001236	          0x488b00	                    mov rax, qword [rax]	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001239	          0x4885c0	                           test rax, rax	      1087	trailer.c	FUNCTION_49	FOR_1
0x400123c	     0xf84d1030000	                            je 0x4001613	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001242	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001247	          0x4531ff	                          xor r15d, r15d	      1087	trailer.c	FUNCTION_49	FOR_1
0x400124a	          0x4531e4	                          xor r12d, r12d	      1087	trailer.c	FUNCTION_49	FOR_1
0x400124d	          0x4531ed	                          xor r13d, r13d	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001250	            0x31ed	                            xor ebp, ebp	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001252	            0xeb7d	                           jmp 0x40012d1	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001254	         0xf1f4000	                         nop dword [rax]	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001258	        0x4d8d7501	                      lea r14, [r13 + 1]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400125c	          0x4d39e6	                            cmp r14, r12	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400125f	            0x7635	                           jbe 0x4001296	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001261	      0x4f8d646430	          lea r12, [r12 + r12*2 + 0x30] 	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001266	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_67	IF_1
0x4001270	          0x49d1ec	                              shr r12, 1	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001273	          0x4d39e6	                            cmp r14, r12	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001276	        0x4d0f43e6	                         cmovae r12, r14	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400127a	          0x4939c4	                            cmp r12, rax	       795	git-compat-util.h	FUNCTION_67	IF_1
0x400127d	     0xf87fd030000	                            ja 0x4001680	       795	git-compat-util.h	FUNCTION_67	IF_1
0x4001283	    0x4a8d34e50000	                        lea rsi, [r12*8]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400128b	          0x4889ef	                            mov rdi, rbp	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400128e	      0xe800000000	                          call 0x4001293	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001293	          0x4889c5	                            mov rbp, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001296	          0x488b3b	                    mov rdi, qword [rbx]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x4001299	            0x31f6	                            xor esi, esi	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x400129b	      0x4e8d7ced00	                  lea r15, [rbp + r13*8]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x40012a0	          0x4d89f5	                            mov r13, r14	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012a3	      0xe800000000	                          call 0x40012a8	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x40012a8	    0x488b35000000	            mov rsi, qword [0x040012af] 	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x40012af	          0x498907	                    mov qword [r15], rax	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x40012b2	          0x4889c7	                            mov rdi, rax	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x40012b5	      0xe846eeffff	                 call sym.find_separator	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x40012ba	            0x85c0	                           test eax, eax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012bc	      0xb800000000	                              mov eax, 0	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012c1	        0x4c0f4ef8	                         cmovle r15, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012c5	        0x4883c308	                              add rbx, 8	      1087	trailer.c	FUNCTION_49	FOR_1
0x40012c9	          0x488b03	                    mov rax, qword [rbx]	      1087	trailer.c	FUNCTION_49	FOR_1
0x40012cc	          0x4885c0	                           test rax, rax	      1087	trailer.c	FUNCTION_49	FOR_1
0x40012cf	            0x747b	                            je 0x400134c	      1087	trailer.c	FUNCTION_49	FOR_1
0x40012d1	          0x4d85ff	                           test r15, r15	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x40012d4	            0x7482	                            je 0x4001258	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x40012d6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x40012da	           0xfb600	                   movzx eax, byte [rax]	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x40012dd	    0xf68000000000	                      test byte [rax], 1	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x40012e4	     0xf846effffff	                            je 0x4001258	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x40012ea	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x40012f3	          0x4d8b37	                    mov r14, qword [r15]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x40012f6	        0x4883c308	                              add rbx, 8	      1087	trailer.c	FUNCTION_49	FOR_1
0x40012fa	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001303	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x400130c	          0x4c89f7	                            mov rdi, r14	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x400130f	      0xe800000000	                          call 0x4001314	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x4001314	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x4001319	          0x4889c1	                            mov rcx, rax	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x400131c	          0x4889c2	                            mov rdx, rax	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x400131f	          0x4c89f6	                            mov rsi, r14	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x4001322	      0xe800000000	                          call 0x4001327	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x4001327	        0x488b73f8	                mov rsi, qword [rbx - 8]	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x400132b	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x4001330	      0xe800000000	                          call 0x4001335	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x4001335	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x400133a	            0x31f6	                            xor esi, esi	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x400133c	      0xe800000000	                          call 0x4001341	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x4001341	          0x498907	                    mov qword [r15], rax	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x4001344	          0x488b03	                    mov rax, qword [rbx]	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001347	          0x4885c0	                           test rax, rax	      1087	trailer.c	FUNCTION_49	FOR_1
0x400134a	            0x7585	                           jne 0x40012d1	      1087	trailer.c	FUNCTION_49	FOR_1
0x400134c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1102	trailer.c	FUNCTION_49	CALL_14
0x4001351	      0xe800000000	                          call 0x4001356	      1102	trailer.c	FUNCTION_49	CALL_14
0x4001356	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       769	trailer.c	FUNCTION_39	IF_1
0x400135b	            0x31c0	                            xor eax, eax	       911	trailer.c	FUNCTION_43	IF_1
0x400135d	          0x4885db	                           test rbx, rbx	       769	trailer.c	FUNCTION_39	IF_1
0x4001360	     0xf8484000000	                            je 0x40013ea	       769	trailer.c	FUNCTION_39	IF_1
0x4001366	            0x31d2	                            xor edx, edx	       771	trailer.c	FUNCTION_39	IF_2
0x4001368	        0x4883fb01	                              cmp rbx, 1	       771	trailer.c	FUNCTION_39	IF_2
0x400136c	            0x743b	                            je 0x40013a9	       771	trailer.c	FUNCTION_39	IF_2
0x400136e	          0x4189dc	                           mov r12d, ebx	       780	trailer.c	FUNCTION_39	FOR_1
0x4001371	        0x4183ec02	                             sub r12d, 2	       780	trailer.c	FUNCTION_39	FOR_1
0x4001375	            0x7832	                            js 0x40013a9	       780	trailer.c	FUNCTION_39	FOR_1
0x4001377	          0x4963c4	                        movsxd rax, r12d	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400137a	        0x48030424	                    add rax, qword [rsp]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400137e	          0x80380a	                     cmp byte [rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001381	            0x751a	                           jne 0x400139d	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001383	      0xe96c020000	                           jmp 0x40015f4	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001388	     0xf1f84000000	                   nop dword [rax + rax]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001390	        0x4883e801	                              sub rax, 1	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001394	          0x80380a	                     cmp byte [rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001397	     0xf8457020000	                            je 0x40015f4	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400139d	        0x4183ec01	                             sub r12d, 1	       780	trailer.c	FUNCTION_39	FOR_1
0x40013a1	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       780	trailer.c	FUNCTION_39	FOR_1
0x40013a5	            0x75e9	                           jne 0x4001390	       780	trailer.c	FUNCTION_39	FOR_1
0x40013a7	            0x31d2	                            xor edx, edx	       780	trailer.c	FUNCTION_39	FOR_1
0x40013a9	        0x48031424	                    add rdx, qword [rsp]	       912	trailer.c	FUNCTION_43	CALL_2
0x40013ad	           0xfb602	                   movzx eax, byte [rdx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b0	            0x3c0a	                             cmp al, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b2	            0x7427	                            je 0x40013db	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b4	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b6	            0x7517	                           jne 0x40013cf	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b8	            0xeb21	                           jmp 0x40013db	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013ba	    0x660f1f440000	                    nop word [rax + rax]	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013c0	        0x4883c201	                              add rdx, 1	       107	trailer.c	FUNCTION_6	WHILE_1
0x40013c4	           0xfb602	                   movzx eax, byte [rdx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013c7	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013c9	            0x7410	                            je 0x40013db	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013cb	            0x3c0a	                             cmp al, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013cd	            0x740c	                            je 0x40013db	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013cf	           0xfb6c8	                           movzx ecx, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013d2	    0xf68100000000	                      test byte [rcx], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013d9	            0x75e5	                           jne 0x40013c0	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013db	            0x84c0	                             test al, al	       108	trailer.c	FUNCTION_6
0x40013dd	           0xf94c2	                                 sete dl	       108	trailer.c	FUNCTION_6
0x40013e0	            0x3c0a	                             cmp al, 0xa	       108	trailer.c	FUNCTION_6
0x40013e2	           0xf94c0	                                 sete al	       108	trailer.c	FUNCTION_6
0x40013e5	             0x9d0	                             or eax, edx	       108	trailer.c	FUNCTION_6
0x40013e7	           0xfb6c0	                           movzx eax, al	       108	trailer.c	FUNCTION_6
0x40013ea	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1104	trailer.c	FUNCTION_49	CALL_15
0x40013ef	            0x8907	                    mov dword [rdi], eax	      1104	trailer.c	FUNCTION_49	CALL_15
0x40013f1	      0x488b442408	                mov rax, qword [rsp + 8]	      1106	trailer.c	FUNCTION_49
0x40013f6	        0x48896f18	             mov qword [rdi + 0x18], rbp	      1108	trailer.c	FUNCTION_49
0x40013fa	        0x4c896f20	             mov qword [rdi + 0x20], r13	      1109	trailer.c	FUNCTION_49
0x40013fe	        0x48894708	                mov qword [rdi + 8], rax	      1106	trailer.c	FUNCTION_49
0x4001402	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1107	trailer.c	FUNCTION_49
0x4001407	        0x48894710	             mov qword [rdi + 0x10], rax	      1107	trailer.c	FUNCTION_49
0x400140b	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1110	trailer.c	FUNCTION_49
0x4001410	    0x644833042528	                xor rax, qword fs:[0x28]	      1110	trailer.c	FUNCTION_49
0x4001419	     0xf855c020000	                           jne 0x400167b	      1110	trailer.c	FUNCTION_49
0x400141f	        0x4883c468	                           add rsp, 0x68	      1110	trailer.c	FUNCTION_49
0x4001423	              0x5b	                                 pop rbx	      1110	trailer.c	FUNCTION_49
0x4001424	              0x5d	                                 pop rbp	      1110	trailer.c	FUNCTION_49
0x4001425	            0x415c	                                 pop r12	      1110	trailer.c	FUNCTION_49
0x4001427	            0x415d	                                 pop r13	      1110	trailer.c	FUNCTION_49
0x4001429	            0x415e	                                 pop r14	      1110	trailer.c	FUNCTION_49
0x400142b	            0x415f	                                 pop r15	      1110	trailer.c	FUNCTION_49
0x400142d	              0xc3	                                     ret	      1110	trailer.c	FUNCTION_49
0x400142e	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       769	trailer.c	FUNCTION_39	IF_1
0x4001434	     0xf84ec010000	                            je 0x4001626	       769	trailer.c	FUNCTION_39	IF_1
0x400143a	    0xc74424080000	                  mov dword [rsp + 8], 0	       769	trailer.c	FUNCTION_39	IF_1
0x4001442	            0x31c0	                            xor eax, eax	       772	trailer.c	FUNCTION_39	IF_2
0x4001444	    0x48837c241001	               cmp qword [rsp + 0x10], 1	       771	trailer.c	FUNCTION_39	IF_2
0x400144a	     0xf848afcffff	                            je 0x40010da	       771	trailer.c	FUNCTION_39	IF_2
0x4001450	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       780	trailer.c	FUNCTION_39	FOR_1
0x4001454	          0x83ea02	                              sub edx, 2	       780	trailer.c	FUNCTION_39	FOR_1
0x4001457	     0xf887dfcffff	                            js 0x40010da	       780	trailer.c	FUNCTION_39	FOR_1
0x400145d	          0x4863c2	                         movsxd rax, edx	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001460	        0x48030424	                    add rax, qword [rsp]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001464	          0x80380a	                     cmp byte [rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001467	            0x7514	                           jne 0x400147d	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001469	      0xe993010000	                           jmp 0x4001601	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400146e	            0x6690	                                     nop	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001470	        0x4883e801	                              sub rax, 1	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001474	          0x80380a	                     cmp byte [rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001477	     0xf8484010000	                            je 0x4001601	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400147d	          0x83ea01	                              sub edx, 1	       780	trailer.c	FUNCTION_39	FOR_1
0x4001480	          0x83faff	             cmp edx, 0xffffffffffffffff	       780	trailer.c	FUNCTION_39	FOR_1
0x4001483	            0x75eb	                           jne 0x4001470	       780	trailer.c	FUNCTION_39	FOR_1
0x4001485	            0x31c0	                            xor eax, eax	       772	trailer.c	FUNCTION_39	IF_2
0x4001487	      0xe94efcffff	                           jmp 0x40010da	       772	trailer.c	FUNCTION_39	IF_2
0x400148c	         0xf1f4000	                         nop dword [rax]	       772	trailer.c	FUNCTION_39	IF_2
0x4001490	            0x85f6	                           test esi, esi	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x4001492	     0xf8514010000	                           jne 0x40015ac	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x4001498	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x400149c	          0x4501fc	                          add r12d, r15d	       851	trailer.c	FUNCTION_41	FOR_2	IF_4
0x400149f	            0x85c9	                           test ecx, ecx	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40014a1	            0x740c	                            je 0x40014af	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40014a3	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40014a7	          0x8d0440	                  lea eax, [rax + rax*2]	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40014aa	          0x4139c4	                           cmp r12d, eax	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40014ad	            0x7e15	                           jle 0x40014c4	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40014af	        0x8b542424	            mov edx, dword [rsp + 0x24] 	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014b3	            0x85d2	                           test edx, edx	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014b5	     0xf844ffdffff	                            je 0x400120a	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014bb	          0x4585e4	                         test r12d, r12d	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014be	     0xf8546fdffff	                           jne 0x400120a	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014c4	      0xbe0a000000	                            mov esi, 0xa	       759	trailer.c	FUNCTION_38
0x40014c9	          0x4889ef	                            mov rdi, rbp	       759	trailer.c	FUNCTION_38
0x40014cc	      0xe800000000	                          call 0x40014d1	       759	trailer.c	FUNCTION_38
0x40014d1	            0x31d2	                            xor edx, edx	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014d3	          0x803800	                       cmp byte [rax], 0	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014d6	        0x8b742438	            mov esi, dword [rsp + 0x38] 	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014da	           0xf95c2	                                setne dl	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014dd	        0x4c8d2410	                    lea r12, [rax + rdx]	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014e1	        0x488b0424	                    mov rax, qword [rsp]	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014e5	          0x4929c4	                            sub r12, rax	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014e8	          0x4963dc	                        movsxd rbx, r12d	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014eb	          0x4429e6	                           sub esi, r12d	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014ee	          0x4801d8	                            add rax, rbx	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014f1	          0x4863f6	                         movsxd rsi, esi	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014f4	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014f9	      0x4889442408	                mov qword [rsp + 8], rax	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014fe	      0xe91dfdffff	                           jmp 0x4001220	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x4001503	       0xf1f440000	                   nop dword [rax + rax]	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x4001508	          0x4501e7	                          add r15d, r12d	       844	trailer.c	FUNCTION_41	FOR_2	IF_3
0x400150b	          0x4531e4	                          xor r12d, r12d	       845	trailer.c	FUNCTION_41	FOR_2	IF_3
0x400150e	      0xe9abfcffff	                           jmp 0x40011be	       845	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001513	      0x440fb64500	                   movzx r8d, byte [rbp]	       845	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001518	    0x488b35000000	            mov rsi, qword [0x0400151f] 	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x400151f	          0x4889ef	                            mov rdi, rbp	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x4001522	      0x448844243f	              mov byte [rsp + 0x3f], r8b	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x4001527	      0xe8d4ebffff	                 call sym.find_separator	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x400152c	            0x85c0	                           test eax, eax	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400152e	          0x4189c6	                           mov r14d, eax	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x4001531	    0x440fb644243f	           movzx r8d, byte [rsp + 0x3f] 	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001537	     0xf8e9e000000	                           jle 0x40015db	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400153d	    0x41f680000000	                       test byte [r8], 1	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001545	            0x7577	                           jne 0x40015be	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001547	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       876	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x400154b	      0x8344242401	               add dword [rsp + 0x24], 1	       874	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001550	            0x85c0	                           test eax, eax	       876	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x4001552	            0x7546	                           jne 0x400159a	       876	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x4001554	    0x4c8b25000000	            mov r12, qword [0x0400155b] 	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400155b	    0x4981fc000000	                              cmp r12, 0	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001562	            0x751d	                           jne 0x4001581	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001564	      0xe9a0000000	                           jmp 0x4001609	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001569	     0xf1f80000000	                         nop dword [rax]	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001570	        0x4d8b2424	                    mov r12, qword [r12]	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001574	    0x4981fc000000	                              cmp r12, 0	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400157b	     0xf8488000000	                            je 0x4001609	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001581	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x4001586	      0x498d542428	                   lea rdx, [r12 + 0x28]	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x400158b	          0x4489f1	                           mov ecx, r14d	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x400158e	          0x4889ef	                            mov rdi, rbp	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x4001591	      0xe85aecffff	      call sym.token_matches_item.isra.5	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x4001596	            0x85c0	                           test eax, eax	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x4001598	            0x74d6	                            je 0x4001570	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x400159a	          0x4531e4	                          xor r12d, r12d	       875	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400159d	    0xc74424180100	               mov dword [rsp + 0x18], 1	       883	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11
0x40015a5	            0x31f6	                            xor esi, esi	       859	trailer.c	FUNCTION_41	FOR_2
0x40015a7	      0xe912fcffff	                           jmp 0x40011be	       859	trailer.c	FUNCTION_41	FOR_2
0x40015ac	      0xbe01000000	                              mov esi, 1	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x40015b1	      0xe908fcffff	                           jmp 0x40011be	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x40015b6	          0x8d4301	                      lea eax, [rbx + 1]	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40015b9	      0xe942fcffff	                           jmp 0x4001200	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40015be	        0x4183c401	                             add r12d, 1	       888	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x40015c2	            0x31f6	                            xor esi, esi	       859	trailer.c	FUNCTION_41	FOR_2
0x40015c4	      0xe9f5fbffff	                           jmp 0x40011be	       859	trailer.c	FUNCTION_41	FOR_2
0x40015c9	      0xe8d2ebffff	       call sym.ensure_configured.part.3	       859	trailer.c	FUNCTION_41	FOR_2
0x40015ce	      0xe9f2f9ffff	                           jmp 0x4000fc5	       859	trailer.c	FUNCTION_41	FOR_2
0x40015d3	          0x4489c0	                            mov eax, r8d	       106	trailer.c	FUNCTION_6	WHILE_1
0x40015d6	      0xe988fbffff	                           jmp 0x4001163	       106	trailer.c	FUNCTION_6	WHILE_1
0x40015db	    0x41f680000000	                       test byte [r8], 1	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x40015e3	            0x75d9	                           jne 0x40015be	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x40015e5	      0x478d7c2701	               lea r15d, [r15 + r12 + 1]	       891	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015ea	            0x31f6	                            xor esi, esi	       859	trailer.c	FUNCTION_41	FOR_2
0x40015ec	          0x4531e4	                          xor r12d, r12d	       892	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015ef	      0xe9cafbffff	                           jmp 0x40011be	       892	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015f4	      0x418d542401	                      lea edx, [r12 + 1]	       892	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015f9	          0x4863d2	                         movsxd rdx, edx	       892	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015fc	      0xe9a8fdffff	                           jmp 0x40013a9	       892	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x4001601	          0x8d4201	                      lea eax, [rdx + 1]	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001604	      0xe9d1faffff	                           jmp 0x40010da	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001609	          0x4531e4	                          xor r12d, r12d	       875	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400160c	            0x31f6	                            xor esi, esi	       859	trailer.c	FUNCTION_41	FOR_2
0x400160e	      0xe9abfbffff	                           jmp 0x40011be	       859	trailer.c	FUNCTION_41	FOR_2
0x4001613	          0x4531ed	                          xor r13d, r13d	      1074	trailer.c	FUNCTION_49
0x4001616	            0x31ed	                            xor ebp, ebp	      1073	trailer.c	FUNCTION_49
0x4001618	      0xe92ffdffff	                           jmp 0x400134c	      1073	trailer.c	FUNCTION_49
0x400161d	            0x31db	                            xor ebx, ebx	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x400161f	            0x31f6	                            xor esi, esi	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4001621	      0xe9f2f9ffff	                           jmp 0x4001018	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4001626	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1083	trailer.c	FUNCTION_49	CALL_5
0x400162b	            0x31c9	                            xor ecx, ecx	      1083	trailer.c	FUNCTION_49	CALL_5
0x400162d	            0x31f6	                            xor esi, esi	      1083	trailer.c	FUNCTION_49	CALL_5
0x400162f	      0xba0a000000	                            mov edx, 0xa	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001634	          0x4889df	                            mov rdi, rbx	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001637	      0xe800000000	                          call 0x400163c	      1083	trailer.c	FUNCTION_49	CALL_5
0x400163c	      0x4889442410	             mov qword [rsp + 0x10], rax	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001641	          0x488b00	                    mov rax, qword [rax]	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001644	      0x48895c2408	                mov qword [rsp + 8], rbx	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001649	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001652	          0x4885c0	                           test rax, rax	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001655	     0xf85e7fbffff	                           jne 0x4001242	      1087	trailer.c	FUNCTION_49	FOR_1
0x400165b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1102	trailer.c	FUNCTION_49	CALL_14
0x4001660	            0x31ed	                            xor ebp, ebp	      1073	trailer.c	FUNCTION_49
0x4001662	          0x4531ed	                          xor r13d, r13d	      1074	trailer.c	FUNCTION_49
0x4001665	      0xe800000000	                          call 0x400166a	      1102	trailer.c	FUNCTION_49	CALL_14
0x400166a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1102	trailer.c	FUNCTION_49	CALL_14
0x400166f	      0x4889442408	                mov qword [rsp + 8], rax	      1102	trailer.c	FUNCTION_49	CALL_14
0x4001674	            0x31c0	                            xor eax, eax	       911	trailer.c	FUNCTION_43	IF_1
0x4001676	      0xe96ffdffff	                           jmp 0x40013ea	       911	trailer.c	FUNCTION_43	IF_1
0x400167b	      0xe800000000	                          call 0x4001680	      1110	trailer.c	FUNCTION_49
0x4001680	          0x4c89e2	                            mov rdx, r12	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
0x4001683	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
0x4001688	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
0x400168d	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
0x400168f	      0xe800000000	                          call 0x4001694	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
check_if_different	CALL,2:functions,0:IF,2:WHILE,0:DO,1:ELSE,0:FOR,0:SWITCH,0	52
0x40004c0	            0x4157	                                push r15	       200	trailer.c	FUNCTION_15
0x40004c2	            0x4156	                                push r14	       200	trailer.c	FUNCTION_15
0x40004c4	          0x4989f7	                            mov r15, rsi	       200	trailer.c	FUNCTION_15
0x40004c7	            0x4155	                                push r13	       200	trailer.c	FUNCTION_15
0x40004c9	            0x4154	                                push r12	       200	trailer.c	FUNCTION_15
0x40004cb	          0x4189d5	                           mov r13d, edx	       200	trailer.c	FUNCTION_15
0x40004ce	              0x55	                                push rbp	       200	trailer.c	FUNCTION_15
0x40004cf	              0x53	                                push rbx	       200	trailer.c	FUNCTION_15
0x40004d0	          0x4989ce	                            mov r14, rcx	       200	trailer.c	FUNCTION_15
0x40004d3	          0x4889fb	                            mov rbx, rdi	       200	trailer.c	FUNCTION_15
0x40004d6	        0x4c8d6610	                   lea r12, [rsi + 0x10]	       200	trailer.c	FUNCTION_15
0x40004da	        0x4883ec08	                              sub rsp, 8	       200	trailer.c	FUNCTION_15
0x40004de	          0x8b4638	            mov eax, dword [rsi + 0x38] 	       211	trailer.c	FUNCTION_15	DO_1
0x40004e1	          0x8d68ff	                      lea ebp, [rax - 1]	       211	trailer.c	FUNCTION_15	DO_1
0x40004e4	            0xeb22	                           jmp 0x4000508	       211	trailer.c	FUNCTION_15	DO_1
0x40004e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       211	trailer.c	FUNCTION_15	DO_1
0x40004f0	          0x488b03	                    mov rax, qword [rbx]	       211	trailer.c	FUNCTION_15	DO_1
0x40004f3	          0x83fd02	                              cmp ebp, 2	       211	trailer.c	FUNCTION_15	DO_1
0x40004f6	      0x480f424308	              cmovb rax, qword [rbx + 8]	       211	trailer.c	FUNCTION_15	DO_1
0x40004fb	          0x4585ed	                         test r13d, r13d	       215	trailer.c	FUNCTION_15	DO_1
0x40004fe	          0x4889c3	                            mov rbx, rax	       211	trailer.c	FUNCTION_15	DO_1
0x4000501	            0x743d	                            je 0x4000540	       215	trailer.c	FUNCTION_15	DO_1
0x4000503	          0x4c39f3	                            cmp rbx, r14	       215	trailer.c	FUNCTION_15	DO_1
0x4000506	            0x7438	                            je 0x4000540	       215	trailer.c	FUNCTION_15	DO_1
0x4000508	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       100	trailer.c	FUNCTION_5	CALL_2
0x400050c	          0x4c89e6	                            mov rsi, r12	       100	trailer.c	FUNCTION_5	CALL_2
0x400050f	      0xe8bcfeffff	              call sym.same_token.isra.6	       100	trailer.c	FUNCTION_5	CALL_2
0x4000514	            0x85c0	                           test eax, eax	       100	trailer.c	FUNCTION_5	CALL_2
0x4000516	            0x74d8	                            je 0x40004f0	       100	trailer.c	FUNCTION_5	CALL_2
0x4000518	        0x498b7718	            mov rsi, qword [r15 + 0x18] 	        95	trailer.c	FUNCTION_4	CALL_1
0x400051c	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	        95	trailer.c	FUNCTION_4	CALL_1
0x4000520	      0xe800000000	                          call 0x4000525	        95	trailer.c	FUNCTION_4	CALL_1
0x4000525	            0x85c0	                           test eax, eax	       100	trailer.c	FUNCTION_5	CALL_2
0x4000527	            0x75c7	                           jne 0x40004f0	       100	trailer.c	FUNCTION_5	CALL_2
0x4000529	        0x4883c408	                              add rsp, 8	       217	trailer.c	FUNCTION_15
0x400052d	              0x5b	                                 pop rbx	       217	trailer.c	FUNCTION_15
0x400052e	              0x5d	                                 pop rbp	       217	trailer.c	FUNCTION_15
0x400052f	            0x415c	                                 pop r12	       217	trailer.c	FUNCTION_15
0x4000531	            0x415d	                                 pop r13	       217	trailer.c	FUNCTION_15
0x4000533	            0x415e	                                 pop r14	       217	trailer.c	FUNCTION_15
0x4000535	            0x415f	                                 pop r15	       217	trailer.c	FUNCTION_15
0x4000537	              0xc3	                                     ret	       217	trailer.c	FUNCTION_15
0x4000538	     0xf1f84000000	                   nop dword [rax + rax]	       217	trailer.c	FUNCTION_15
0x4000540	        0x4883c408	                              add rsp, 8	       217	trailer.c	FUNCTION_15
0x4000544	      0xb801000000	                              mov eax, 1	       216	trailer.c	FUNCTION_15
0x4000549	              0x5b	                                 pop rbx	       217	trailer.c	FUNCTION_15
0x400054a	              0x5d	                                 pop rbp	       217	trailer.c	FUNCTION_15
0x400054b	            0x415c	                                 pop r12	       217	trailer.c	FUNCTION_15
0x400054d	            0x415d	                                 pop r13	       217	trailer.c	FUNCTION_15
0x400054f	            0x415e	                                 pop r14	       217	trailer.c	FUNCTION_15
0x4000551	            0x415f	                                 pop r15	       217	trailer.c	FUNCTION_15
0x4000553	              0xc3	                                     ret	       217	trailer.c	FUNCTION_15
find_separator	CALL,1:functions,0:IF,3:WHILE,0:DO,0:ELSE,0:FOR,1:SWITCH,0	56
0x4000100	           0xfb617	                   movzx edx, byte [rdi]	       610	trailer.c	FUNCTION_32	FOR_1
0x4000103	            0x84d2	                             test dl, dl	       610	trailer.c	FUNCTION_32	FOR_1
0x4000105	     0xf8485000000	                            je 0x4000190	       610	trailer.c	FUNCTION_32	FOR_1
0x400010b	            0x4155	                                push r13	       607	trailer.c	FUNCTION_32
0x400010d	            0x4154	                                push r12	       607	trailer.c	FUNCTION_32
0x400010f	          0x4989fd	                            mov r13, rdi	       607	trailer.c	FUNCTION_32
0x4000112	              0x55	                                push rbp	       607	trailer.c	FUNCTION_32
0x4000113	              0x53	                                push rbx	       607	trailer.c	FUNCTION_32
0x4000114	          0x4989f4	                            mov r12, rsi	       607	trailer.c	FUNCTION_32
0x4000117	          0x4889fb	                            mov rbx, rdi	       610	trailer.c	FUNCTION_32	FOR_1
0x400011a	            0x31ed	                            xor ebp, ebp	       610	trailer.c	FUNCTION_32	FOR_1
0x400011c	        0x4883ec08	                              sub rsp, 8	       607	trailer.c	FUNCTION_32
0x4000120	            0xeb16	                           jmp 0x4000138	       607	trailer.c	FUNCTION_32
0x4000122	    0x660f1f440000	                    nop word [rax + rax]	       607	trailer.c	FUNCTION_32
0x4000128	      0xbd01000000	                              mov ebp, 1	       616	trailer.c	FUNCTION_32	FOR_1	IF_3
0x400012d	        0x4883c301	                              add rbx, 1	       610	trailer.c	FUNCTION_32	FOR_1
0x4000131	           0xfb613	                   movzx edx, byte [rbx]	       610	trailer.c	FUNCTION_32	FOR_1
0x4000134	            0x84d2	                             test dl, dl	       610	trailer.c	FUNCTION_32	FOR_1
0x4000136	            0x7435	                            je 0x400016d	       610	trailer.c	FUNCTION_32	FOR_1
0x4000138	           0xfbef2	                           movsx esi, dl	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x400013b	          0x4c89e7	                            mov rdi, r12	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x400013e	      0xe800000000	                          call 0x4000143	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4000143	          0x4885c0	                           test rax, rax	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4000146	            0x7538	                           jne 0x4000180	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4000148	            0x85ed	                           test ebp, ebp	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x400014a	            0x7511	                           jne 0x400015d	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x400014c	           0xfb613	                   movzx edx, byte [rbx]	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x400014f	    0xf68200000000	                      test byte [rdx], 6	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4000156	            0x75d5	                           jne 0x400012d	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4000158	          0x80fa2d	                            cmp dl, 0x2d	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x400015b	            0x74d0	                            je 0x400012d	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x400015d	          0x4939dd	                            cmp r13, rbx	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4000160	            0x740b	                            je 0x400016d	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4000162	           0xfb603	                   movzx eax, byte [rbx]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4000165	            0x3c20	                            cmp al, 0x20	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4000167	            0x74bf	                            je 0x4000128	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4000169	            0x3c09	                               cmp al, 9	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x400016b	            0x74bb	                            je 0x4000128	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x400016d	        0x4883c408	                              add rsp, 8	       622	trailer.c	FUNCTION_32
0x4000171	      0xb8ffffffff	                     mov eax, 0xffffffff	       621	trailer.c	FUNCTION_32
0x4000176	              0x5b	                                 pop rbx	       622	trailer.c	FUNCTION_32
0x4000177	              0x5d	                                 pop rbp	       622	trailer.c	FUNCTION_32
0x4000178	            0x415c	                                 pop r12	       622	trailer.c	FUNCTION_32
0x400017a	            0x415d	                                 pop r13	       622	trailer.c	FUNCTION_32
0x400017c	              0xc3	                                     ret	       622	trailer.c	FUNCTION_32
0x400017d	           0xf1f00	                         nop dword [rax]	       622	trailer.c	FUNCTION_32
0x4000180	        0x4883c408	                              add rsp, 8	       622	trailer.c	FUNCTION_32
0x4000184	            0x89d8	                            mov eax, ebx	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x4000186	          0x4429e8	                           sub eax, r13d	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x4000189	              0x5b	                                 pop rbx	       622	trailer.c	FUNCTION_32
0x400018a	              0x5d	                                 pop rbp	       622	trailer.c	FUNCTION_32
0x400018b	            0x415c	                                 pop r12	       622	trailer.c	FUNCTION_32
0x400018d	            0x415d	                                 pop r13	       622	trailer.c	FUNCTION_32
0x400018f	              0xc3	                                     ret	       622	trailer.c	FUNCTION_32
0x4000190	      0xb8ffffffff	                     mov eax, 0xffffffff	       621	trailer.c	FUNCTION_32
0x4000195	              0xc3	                                     ret	       622	trailer.c	FUNCTION_32
unfold_value	CALL,6:functions,0:IF,1:WHILE,2:DO,0:ELSE,1:FOR,0:SWITCH,0	115
0x4000610	            0x4154	                                push r12	       916	trailer.c	FUNCTION_44
0x4000612	              0x55	                                push rbp	       916	trailer.c	FUNCTION_44
0x4000613	          0x4989fc	                            mov r12, rdi	       916	trailer.c	FUNCTION_44
0x4000616	              0x53	                                push rbx	       916	trailer.c	FUNCTION_44
0x4000617	            0x31db	                            xor ebx, ebx	       921	trailer.c	FUNCTION_44
0x4000619	        0x4883ec40	                           sub rsp, 0x40	       916	trailer.c	FUNCTION_44
0x400061d	        0x488b7708	                mov rsi, qword [rdi + 8]	       920	trailer.c	FUNCTION_44	CALL_1
0x4000621	          0x4889e7	                            mov rdi, rsp	       920	trailer.c	FUNCTION_44	CALL_1
0x4000624	    0x48c704240000	                      mov qword [rsp], 0	       917	trailer.c	FUNCTION_44
0x400062c	    0x48c744240800	                  mov qword [rsp + 8], 0	       917	trailer.c	FUNCTION_44
0x4000635	    0x64488b042528	                mov rax, qword fs:[0x28]	       916	trailer.c	FUNCTION_44
0x400063e	      0x4889442438	             mov qword [rsp + 0x38], rax	       916	trailer.c	FUNCTION_44
0x4000643	            0x31c0	                            xor eax, eax	       916	trailer.c	FUNCTION_44
0x4000645	    0x48c744241000	               mov qword [rsp + 0x10], 0	       917	trailer.c	FUNCTION_44
0x400064e	      0xe800000000	                          call 0x4000653	       920	trailer.c	FUNCTION_44	CALL_1
0x4000653	       0xf1f440000	                   nop dword [rax + rax]	       920	trailer.c	FUNCTION_44	CALL_1
0x4000658	      0x498b542408	                mov rdx, qword [r12 + 8]	       922	trailer.c	FUNCTION_44	WHILE_1
0x400065d	          0x4839d3	                            cmp rbx, rdx	       922	trailer.c	FUNCTION_44	WHILE_1
0x4000660	     0xf839d000000	                           jae 0x4000703	       922	trailer.c	FUNCTION_44	WHILE_1
0x4000666	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	       923	trailer.c	FUNCTION_44	WHILE_1
0x400066b	        0x488d6b01	                      lea rbp, [rbx + 1]	       923	trailer.c	FUNCTION_44	WHILE_1
0x400066f	         0xfb61c19	             movzx ebx, byte [rcx + rbx]	       923	trailer.c	FUNCTION_44	WHILE_1
0x4000673	          0x80fb0a	                             cmp bl, 0xa	       924	trailer.c	FUNCTION_44	WHILE_1	IF_1
0x4000676	     0xf8504010000	                           jne 0x4000780	       924	trailer.c	FUNCTION_44	WHILE_1	IF_1
0x400067c	          0x4839ea	                            cmp rdx, rbp	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x400067f	     0xf867b010000	                           jbe 0x4000800	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000685	         0xfb60429	             movzx eax, byte [rcx + rbp]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000689	          0x4889eb	                            mov rbx, rbp	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x400068c	    0xf68000000000	                      test byte [rax], 1	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000693	            0x7518	                           jne 0x40006ad	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000695	            0xeb1f	                           jmp 0x40006b6	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000697	    0x660f1f840000	                    nop word [rax + rax]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40006a0	         0xfb60419	             movzx eax, byte [rcx + rbx]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40006a4	    0xf68000000000	                      test byte [rax], 1	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40006ab	            0x7409	                            je 0x40006b6	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40006ad	        0x4883c301	                              add rbx, 1	       927	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40006b1	          0x4839da	                            cmp rdx, rbx	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40006b4	            0x77ea	                            ja 0x40006a0	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40006b6	        0x488b0424	                    mov rax, qword [rsp]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40006ba	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_81
0x40006bd	     0xf851d010000	                           jne 0x40007e0	       141	strbuf.h	FUNCTION_81
0x40006c3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_83	CALL_2
0x40006c8	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_83	CALL_2
0x40006cb	      0xe800000000	                          call 0x40006d0	       228	strbuf.h	FUNCTION_83	CALL_2
0x40006d0	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_83	CALL_2
0x40006d5	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_83
0x40006d9	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_83
0x40006de	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_83
0x40006e3	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_83
0x40006e7	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_83
0x40006ec	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_83
0x40006f1	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_83
0x40006f5	      0x498b542408	                mov rdx, qword [r12 + 8]	       922	trailer.c	FUNCTION_44	WHILE_1
0x40006fa	          0x4839d3	                            cmp rbx, rdx	       922	trailer.c	FUNCTION_44	WHILE_1
0x40006fd	     0xf8263ffffff	                            jb 0x4000666	       922	trailer.c	FUNCTION_44	WHILE_1
0x4000703	          0x4889e7	                            mov rdi, rsp	       935	trailer.c	FUNCTION_44	CALL_4
0x4000706	      0xe800000000	                          call 0x400070b	       935	trailer.c	FUNCTION_44	CALL_4
0x400070b	        0x498b3424	                    mov rsi, qword [r12]	        53	string3.h	FUNCTION_91	CALL_3
0x400070f	        0x488b0c24	                    mov rcx, qword [rsp]	        53	string3.h	FUNCTION_91	CALL_3
0x4000713	          0x4889e7	                            mov rdi, rsp	       939	trailer.c	FUNCTION_44	CALL_6
0x4000716	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_91	CALL_3
0x400071b	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_91	CALL_3
0x4000720	        0x48893424	                    mov qword [rsp], rsi	        53	string3.h	FUNCTION_91	CALL_3
0x4000724	      0x498b742408	                mov rsi, qword [r12 + 8]	        53	string3.h	FUNCTION_91	CALL_3
0x4000729	        0x49890c24	                    mov qword [r12], rcx	        53	string3.h	FUNCTION_91	CALL_3
0x400072d	      0x4989542408	                mov qword [r12 + 8], rdx	        53	string3.h	FUNCTION_91	CALL_3
0x4000732	      0x4889442430	             mov qword [rsp + 0x30], rax	        53	string3.h	FUNCTION_91	CALL_3
0x4000737	      0x48894c2420	             mov qword [rsp + 0x20], rcx	        53	string3.h	FUNCTION_91	CALL_3
0x400073c	      0x4889742408	                mov qword [rsp + 8], rsi	        53	string3.h	FUNCTION_91	CALL_3
0x4000741	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	        53	string3.h	FUNCTION_91	CALL_3
0x4000746	      0x4989442410	             mov qword [r12 + 0x10], rax	        53	string3.h	FUNCTION_91	CALL_3
0x400074b	      0x4889542428	             mov qword [rsp + 0x28], rdx	        53	string3.h	FUNCTION_91	CALL_3
0x4000750	      0x4889742410	             mov qword [rsp + 0x10], rsi	        53	string3.h	FUNCTION_91	CALL_3
0x4000755	      0xe800000000	                          call 0x400075a	       939	trailer.c	FUNCTION_44	CALL_6
0x400075a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       940	trailer.c	FUNCTION_44
0x400075f	    0x644833042528	                xor rax, qword fs:[0x28]	       940	trailer.c	FUNCTION_44
0x4000768	     0xf859a000000	                           jne 0x4000808	       940	trailer.c	FUNCTION_44
0x400076e	        0x4883c440	                           add rsp, 0x40	       940	trailer.c	FUNCTION_44
0x4000772	              0x5b	                                 pop rbx	       940	trailer.c	FUNCTION_44
0x4000773	              0x5d	                                 pop rbp	       940	trailer.c	FUNCTION_44
0x4000774	            0x415c	                                 pop r12	       940	trailer.c	FUNCTION_44
0x4000776	              0xc3	                                     ret	       940	trailer.c	FUNCTION_44
0x4000777	    0x660f1f840000	                    nop word [rax + rax]	       940	trailer.c	FUNCTION_44
0x4000780	        0x488b0424	                    mov rax, qword [rsp]	       940	trailer.c	FUNCTION_44
0x4000784	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_81
0x4000787	            0x753f	                           jne 0x40007c8	       141	strbuf.h	FUNCTION_81
0x4000789	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_83	CALL_2
0x400078e	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_83	CALL_2
0x4000791	      0xe800000000	                          call 0x4000796	       228	strbuf.h	FUNCTION_83	CALL_2
0x4000796	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_83	CALL_2
0x400079b	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_83
0x400079f	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_83
0x40007a4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_83
0x40007a9	          0x881c10	                mov byte [rax + rdx], bl	       229	strbuf.h	FUNCTION_83
0x40007ac	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_83
0x40007b1	          0x4889eb	                            mov rbx, rbp	       923	trailer.c	FUNCTION_44	WHILE_1
0x40007b4	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_83
0x40007b9	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_83
0x40007bd	      0xe996feffff	                           jmp 0x4000658	       230	strbuf.h	FUNCTION_83
0x40007c2	    0x660f1f440000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_83
0x40007c8	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_81
0x40007cd	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_83	IF_1	CALL_1
0x40007d1	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_83	IF_1	CALL_1
0x40007d4	            0x75c5	                           jne 0x400079b	       227	strbuf.h	FUNCTION_83	IF_1	CALL_1
0x40007d6	            0xebb1	                           jmp 0x4000789	       227	strbuf.h	FUNCTION_83	IF_1	CALL_1
0x40007d8	     0xf1f84000000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_83	IF_1	CALL_1
0x40007e0	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_81
0x40007e5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_83	IF_1	CALL_1
0x40007e9	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_83	IF_1	CALL_1
0x40007ec	     0xf85e3feffff	                           jne 0x40006d5	       227	strbuf.h	FUNCTION_83	IF_1	CALL_1
0x40007f2	      0xe9ccfeffff	                           jmp 0x40006c3	       227	strbuf.h	FUNCTION_83	IF_1	CALL_1
0x40007f7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_83	IF_1	CALL_1
0x4000800	          0x4889eb	                            mov rbx, rbp	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000803	      0xe9aefeffff	                           jmp 0x40006b6	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000808	      0xe800000000	                          call 0x400080d	       940	trailer.c	FUNCTION_44
git_trailer_config	CALL,22:functions,0:IF,9:WHILE,0:DO,0:ELSE,0:FOR,1:SWITCH,1	154
0x4000c30	            0x4157	                                push r15	       505	trailer.c	FUNCTION_28
0x4000c32	            0x4156	                                push r14	       505	trailer.c	FUNCTION_28
0x4000c34	      0xb800000000	                              mov eax, 0	       505	trailer.c	FUNCTION_28
0x4000c39	            0x4155	                                push r13	       505	trailer.c	FUNCTION_28
0x4000c3b	            0x4154	                                push r12	       505	trailer.c	FUNCTION_28
0x4000c3d	              0x55	                                push rbp	       505	trailer.c	FUNCTION_28
0x4000c3e	              0x53	                                push rbx	       505	trailer.c	FUNCTION_28
0x4000c3f	          0x4889fb	                            mov rbx, rdi	       505	trailer.c	FUNCTION_28
0x4000c42	        0x4883ec08	                              sub rsp, 8	       505	trailer.c	FUNCTION_28
0x4000c46	            0xeb19	                           jmp 0x4000c61	       505	trailer.c	FUNCTION_28
0x4000c48	     0xf1f84000000	                   nop dword [rax + rax]	       505	trailer.c	FUNCTION_28
0x4000c50	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_59	DO_1
0x4000c54	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_59	DO_1
0x4000c58	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_59	DO_1
0x4000c5b	     0xf8506010000	                           jne 0x4000d67	       488	git-compat-util.h	FUNCTION_59	DO_1
0x4000c61	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_59	DO_1	IF_1
0x4000c64	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_59	DO_1	IF_1
0x4000c66	            0x75e8	                           jne 0x4000c50	       484	git-compat-util.h	FUNCTION_59	DO_1	IF_1
0x4000c68	          0x4989f5	                            mov r13, rsi	       484	git-compat-util.h	FUNCTION_59	DO_1	IF_1
0x4000c6b	          0x4989fc	                            mov r12, rdi	       484	git-compat-util.h	FUNCTION_59	DO_1	IF_1
0x4000c6e	      0xbe2e000000	                           mov esi, 0x2e	       516	trailer.c	FUNCTION_28	CALL_2
0x4000c73	          0x4889df	                            mov rdi, rbx	       516	trailer.c	FUNCTION_28	CALL_2
0x4000c76	      0xe800000000	                          call 0x4000c7b	       516	trailer.c	FUNCTION_28	CALL_2
0x4000c7b	          0x4885c0	                           test rax, rax	       517	trailer.c	FUNCTION_28	IF_2
0x4000c7e	     0xf84e3000000	                            je 0x4000d67	       517	trailer.c	FUNCTION_28	IF_2
0x4000c84	        0x488d6801	                      lea rbp, [rax + 1]	       520	trailer.c	FUNCTION_28
0x4000c88	      0xbf00000000	                              mov edi, 0	       520	trailer.c	FUNCTION_28
0x4000c8d	          0x4531f6	                          xor r14d, r14d	       520	trailer.c	FUNCTION_28
0x4000c90	    0x41bf00000000	                             mov r15d, 0	       520	trailer.c	FUNCTION_28
0x4000c96	          0x4889ee	                            mov rsi, rbp	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000c99	      0xe800000000	                          call 0x4000c9e	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000c9e	            0x85c0	                           test eax, eax	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000ca0	            0x7421	                            je 0x4000cc3	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000ca2	        0x4183c601	                             add r14d, 1	       521	trailer.c	FUNCTION_28	FOR_1
0x4000ca6	        0x4983c710	                           add r15, 0x10	       521	trailer.c	FUNCTION_28	FOR_1
0x4000caa	        0x4183fe05	                             cmp r14d, 5	       521	trailer.c	FUNCTION_28	FOR_1
0x4000cae	     0xf84b3000000	                            je 0x4000d67	       521	trailer.c	FUNCTION_28	FOR_1
0x4000cb4	          0x498b3f	                    mov rdi, qword [r15]	       521	trailer.c	FUNCTION_28	FOR_1
0x4000cb7	          0x4889ee	                            mov rsi, rbp	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000cba	      0xe800000000	                          call 0x4000cbf	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000cbf	            0x85c0	                           test eax, eax	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000cc1	            0x75df	                           jne 0x4000ca2	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000cc3	          0x4829dd	                            sub rbp, rbx	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x4000cc6	          0x4889df	                            mov rdi, rbx	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x4000cc9	          0x4d63f6	                        movsxd r14, r14d	       525	trailer.c	FUNCTION_28	FOR_1
0x4000ccc	        0x488d75ff	                      lea rsi, [rbp - 1]	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x4000cd0	        0x49c1e604	                              shl r14, 4	       525	trailer.c	FUNCTION_28	FOR_1
0x4000cd4	      0xe800000000	                          call 0x4000cd9	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x4000cd9	          0x4885c0	                           test rax, rax	       529	trailer.c	FUNCTION_28	IF_4
0x4000cdc	          0x4889c5	                            mov rbp, rax	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x4000cdf	    0x458bb6000000	                   mov r14d, dword [r14]	       525	trailer.c	FUNCTION_28	FOR_1
0x4000ce6	            0x747f	                            je 0x4000d67	       529	trailer.c	FUNCTION_28	IF_4
0x4000ce8	    0x488b1d000000	            mov rbx, qword [0x04000cef] 	       443	trailer.c	FUNCTION_26
0x4000cef	    0x4881fb000000	                              cmp rbx, 0	       443	trailer.c	FUNCTION_26
0x4000cf6	            0x7514	                           jne 0x4000d0c	       443	trailer.c	FUNCTION_26
0x4000cf8	      0xe983000000	                           jmp 0x4000d80	       443	trailer.c	FUNCTION_26
0x4000cfd	           0xf1f00	                         nop dword [rax]	       443	trailer.c	FUNCTION_26
0x4000d00	          0x488b1b	                    mov rbx, qword [rbx]	       443	trailer.c	FUNCTION_26
0x4000d03	    0x4881fb000000	                              cmp rbx, 0	       443	trailer.c	FUNCTION_26
0x4000d0a	            0x7474	                            je 0x4000d80	       443	trailer.c	FUNCTION_26
0x4000d0c	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000d10	          0x4889ee	                            mov rsi, rbp	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000d13	      0xe800000000	                          call 0x4000d18	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000d18	            0x85c0	                           test eax, eax	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000d1a	            0x75e4	                           jne 0x4000d00	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000d1c	          0x4889ef	                            mov rdi, rbp	       534	trailer.c	FUNCTION_28	CALL_6
0x4000d1f	      0xe800000000	                          call 0x4000d24	       534	trailer.c	FUNCTION_28	CALL_6
0x4000d24	        0x4183fe04	                             cmp r14d, 4	       536	trailer.c	FUNCTION_28	SWITCH_1
0x4000d28	     0xf873a010000	                            ja 0x4000e68	       536	trailer.c	FUNCTION_28	SWITCH_1
0x4000d2e	    0x42ff24f50000	                       jmp qword [r14*8]	       536	trailer.c	FUNCTION_28	SWITCH_1
0x4000d36	      0x48837b3000	               cmp qword [rbx + 0x30], 0	       543	trailer.c	FUNCTION_28	SWITCH_1	IF_6
0x4000d3b	            0x741e	                            je 0x4000d5b	       543	trailer.c	FUNCTION_28	SWITCH_1	IF_6
0x4000d3d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_105
0x4000d42	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_105
0x4000d44	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_105
0x4000d49	      0xe800000000	                          call 0x4000d4e	        54	gettext.h	FUNCTION_105
0x4000d4e	          0x4c89e6	                            mov rsi, r12	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000d51	          0x4889c7	                            mov rdi, rax	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000d54	            0x31c0	                            xor eax, eax	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000d56	      0xe800000000	                          call 0x4000d5b	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000d5b	          0x4c89ef	                            mov rdi, r13	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x4000d5e	      0xe800000000	                          call 0x4000d63	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x4000d63	        0x48894330	             mov qword [rbx + 0x30], rax	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x4000d67	        0x4883c408	                              add rsp, 8	       563	trailer.c	FUNCTION_28
0x4000d6b	            0x31c0	                            xor eax, eax	       563	trailer.c	FUNCTION_28
0x4000d6d	              0x5b	                                 pop rbx	       563	trailer.c	FUNCTION_28
0x4000d6e	              0x5d	                                 pop rbp	       563	trailer.c	FUNCTION_28
0x4000d6f	            0x415c	                                 pop r12	       563	trailer.c	FUNCTION_28
0x4000d71	            0x415d	                                 pop r13	       563	trailer.c	FUNCTION_28
0x4000d73	            0x415e	                                 pop r14	       563	trailer.c	FUNCTION_28
0x4000d75	            0x415f	                                 pop r15	       563	trailer.c	FUNCTION_28
0x4000d77	              0xc3	                                     ret	       563	trailer.c	FUNCTION_28
0x4000d78	     0xf1f84000000	                   nop dword [rax + rax]	       563	trailer.c	FUNCTION_28
0x4000d80	      0xbe01000000	                              mov esi, 1	       450	trailer.c	FUNCTION_26	CALL_2
0x4000d85	      0xbf48000000	                           mov edi, 0x48	       450	trailer.c	FUNCTION_26	CALL_2
0x4000d8a	      0xe800000000	                          call 0x4000d8f	       450	trailer.c	FUNCTION_26	CALL_2
0x4000d8f	        0x488d7820	                   lea rdi, [rax + 0x20]	       451	trailer.c	FUNCTION_26	CALL_3
0x4000d93	      0xbe00000000	                              mov esi, 0	       451	trailer.c	FUNCTION_26	CALL_3
0x4000d98	          0x4889c3	                            mov rbx, rax	       450	trailer.c	FUNCTION_26	CALL_2
0x4000d9b	      0xe8e0f2ffff	                 call sym.duplicate_conf	       451	trailer.c	FUNCTION_26	CALL_3
0x4000da0	          0x4889ef	                            mov rdi, rbp	       452	trailer.c	FUNCTION_26	CALL_4
0x4000da3	      0xe800000000	                          call 0x4000da8	       452	trailer.c	FUNCTION_26	CALL_4
0x4000da8	        0x48894320	             mov qword [rbx + 0x20], rax	       452	trailer.c	FUNCTION_26	CALL_4
0x4000dac	    0x488b05000000	            mov rax, qword [0x04000db3] 	        63	list.h	FUNCTION_108
0x4000db3	          0x488918	                    mov qword [rax], rbx	        63	list.h	FUNCTION_108
0x4000db6	    0x48c703000000	                      mov qword [rbx], 0	        64	list.h	FUNCTION_108
0x4000dbd	        0x48894308	                mov qword [rbx + 8], rax	        65	list.h	FUNCTION_108
0x4000dc1	    0x48891d000000	            mov qword [0x04000dc8], rbx 	        66	list.h	FUNCTION_108
0x4000dc8	      0xe94fffffff	                           jmp 0x4000d1c	        66	list.h	FUNCTION_108
0x4000dcd	        0x488d7b3c	                   lea rdi, [rbx + 0x3c]	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_16
0x4000dd1	          0x4c89ee	                            mov rsi, r13	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_16
0x4000dd4	      0xe800000000	                          call 0x4000dd9	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_16
0x4000dd9	            0x85c0	                           test eax, eax	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_16
0x4000ddb	            0x748a	                            je 0x4000d67	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_16
0x4000ddd	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_105
0x4000ddf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_105
0x4000de4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_105
0x4000de9	      0xe800000000	                          call 0x4000dee	        54	gettext.h	FUNCTION_105
0x4000dee	          0x4c89e2	                            mov rdx, r12	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000df1	          0x4889c7	                            mov rdi, rax	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000df4	          0x4c89ee	                            mov rsi, r13	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000df7	            0x31c0	                            xor eax, eax	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000df9	      0xe800000000	                          call 0x4000dfe	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000dfe	      0xe964ffffff	                           jmp 0x4000d67	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000e03	        0x488d7b38	                   lea rdi, [rbx + 0x38]	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000e07	          0x4c89ee	                            mov rsi, r13	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000e0a	      0xe800000000	                          call 0x4000e0f	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000e0f	            0x85c0	                           test eax, eax	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000e11	     0xf8450ffffff	                            je 0x4000d67	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000e17	            0xebc4	                           jmp 0x4000ddd	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000e19	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       538	trailer.c	FUNCTION_28	SWITCH_1	IF_5
0x4000e1e	            0x741e	                            je 0x4000e3e	       538	trailer.c	FUNCTION_28	SWITCH_1	IF_5
0x4000e20	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_105
0x4000e25	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_105
0x4000e27	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_105
0x4000e2c	      0xe800000000	                          call 0x4000e31	        54	gettext.h	FUNCTION_105
0x4000e31	          0x4c89e6	                            mov rsi, r12	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x4000e34	          0x4889c7	                            mov rdi, rax	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x4000e37	            0x31c0	                            xor eax, eax	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x4000e39	      0xe800000000	                          call 0x4000e3e	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x4000e3e	          0x4c89ef	                            mov rdi, r13	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x4000e41	      0xe800000000	                          call 0x4000e46	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x4000e46	        0x48894328	             mov qword [rbx + 0x28], rax	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x4000e4a	      0xe918ffffff	                           jmp 0x4000d67	       541	trailer.c	FUNCTION_28	SWITCH_1
0x4000e4f	        0x488d7b40	                   lea rdi, [rbx + 0x40]	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000e53	          0x4c89ee	                            mov rsi, r13	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000e56	      0xe800000000	                          call 0x4000e5b	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000e5b	            0x85c0	                           test eax, eax	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000e5d	     0xf8404ffffff	                            je 0x4000d67	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000e63	      0xe975ffffff	                           jmp 0x4000ddd	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000e68	          0x4489f6	                           mov esi, r14d	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x4000e6b	      0xbf00000000	                              mov edi, 0	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x4000e70	            0x31c0	                            xor eax, eax	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x4000e72	      0xe800000000	                          call 0x4000e77	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
trailer_info_release	CALL,2:functions,0:IF,0:WHILE,0:DO,0:ELSE,0:FOR,1:SWITCH,0	19
0x40016a0	              0x55	                                push rbp	      1113	trailer.c	FUNCTION_50
0x40016a1	              0x53	                                push rbx	      1113	trailer.c	FUNCTION_50
0x40016a2	            0x31db	                            xor ebx, ebx	      1113	trailer.c	FUNCTION_50
0x40016a4	          0x4889fd	                            mov rbp, rdi	      1113	trailer.c	FUNCTION_50
0x40016a7	        0x4883ec08	                              sub rsp, 8	      1113	trailer.c	FUNCTION_50
0x40016ab	      0x48837f2000	               cmp qword [rdi + 0x20], 0	      1115	trailer.c	FUNCTION_50	FOR_1
0x40016b0	            0x741d	                            je 0x40016cf	      1115	trailer.c	FUNCTION_50	FOR_1
0x40016b2	    0x660f1f440000	                    nop word [rax + rax]	      1115	trailer.c	FUNCTION_50	FOR_1
0x40016b8	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1116	trailer.c	FUNCTION_50	CALL_1
0x40016bc	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      1116	trailer.c	FUNCTION_50	CALL_1
0x40016c0	        0x4883c301	                              add rbx, 1	      1116	trailer.c	FUNCTION_50	CALL_1
0x40016c4	      0xe800000000	                          call 0x40016c9	      1116	trailer.c	FUNCTION_50	CALL_1
0x40016c9	        0x48395d20	            cmp qword [rbp + 0x20], rbx 	      1115	trailer.c	FUNCTION_50	FOR_1
0x40016cd	            0x77e9	                            ja 0x40016b8	      1115	trailer.c	FUNCTION_50	FOR_1
0x40016cf	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      1117	trailer.c	FUNCTION_50	CALL_2
0x40016d3	        0x4883c408	                              add rsp, 8	      1118	trailer.c	FUNCTION_50
0x40016d7	              0x5b	                                 pop rbx	      1118	trailer.c	FUNCTION_50
0x40016d8	              0x5d	                                 pop rbp	      1118	trailer.c	FUNCTION_50
0x40016d9	      0xe900000000	                           jmp 0x40016de	      1117	trailer.c	FUNCTION_50	CALL_2
parse_trailer	CALL,12:functions,0:IF,4:WHILE,0:DO,0:ELSE,1:FOR,0:SWITCH,0	112
0x4000240	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	       639	trailer.c	FUNCTION_33	IF_1
0x4000244	            0x4156	                                push r14	       634	trailer.c	FUNCTION_33
0x4000246	            0x4155	                                push r13	       634	trailer.c	FUNCTION_33
0x4000248	          0x4989d5	                            mov r13, rdx	       634	trailer.c	FUNCTION_33
0x400024b	            0x4154	                                push r12	       634	trailer.c	FUNCTION_33
0x400024d	          0x4989fc	                            mov r12, rdi	       634	trailer.c	FUNCTION_33
0x4000250	              0x55	                                push rbp	       634	trailer.c	FUNCTION_33
0x4000251	          0x4889cd	                            mov rbp, rcx	       634	trailer.c	FUNCTION_33
0x4000254	              0x53	                                push rbx	       634	trailer.c	FUNCTION_33
0x4000255	     0xf8445010000	                            je 0x40003a0	       639	trailer.c	FUNCTION_33	IF_1
0x400025b	          0x4963d8	                         movsxd rbx, r8d	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x400025e	          0x4989f6	                            mov r14, rsi	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x4000261	          0x4889ce	                            mov rsi, rcx	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x4000264	          0x4889da	                            mov rdx, rbx	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x4000267	      0x488d5c1d01	                lea rbx, [rbp + rbx + 1]	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x400026c	      0xe800000000	                          call 0x4000271	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x4000271	          0x4c89e7	                            mov rdi, r12	       641	trailer.c	FUNCTION_33	IF_1	CALL_2
0x4000274	      0xe800000000	                          call 0x4000279	       641	trailer.c	FUNCTION_33	IF_1	CALL_2
0x4000279	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_84	CALL_2
0x400027c	      0xe800000000	                          call 0x4000281	       279	strbuf.h	FUNCTION_84	CALL_2
0x4000281	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_84	CALL_2
0x4000284	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_84	CALL_2
0x4000287	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_84	CALL_2
0x400028a	      0xe800000000	                          call 0x400028f	       279	strbuf.h	FUNCTION_84	CALL_2
0x400028f	          0x4c89f7	                            mov rdi, r14	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x4000292	      0xe800000000	                          call 0x4000297	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x4000297	      0x498b6c2408	                mov rbp, qword [r12 + 8]	       650	trailer.c	FUNCTION_33	CALL_7
0x400029c	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	       650	trailer.c	FUNCTION_33	CALL_7
0x40002a1	          0x4885ed	                           test rbp, rbp	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002a4	            0x7438	                            je 0x40002de	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002a6	       0xfb6442eff	         movzx eax, byte [rsi + rbp - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002ab	        0x488d4dff	                      lea rcx, [rbp - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002af	    0xf68000000000	                      test byte [rax], 6	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002b6	            0x7421	                            je 0x40002d9	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002b8	            0xeb26	                           jmp 0x40002e0	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002ba	    0x660f1f440000	                    nop word [rax + rax]	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002c0	       0xfb6440eff	         movzx eax, byte [rsi + rcx - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002c5	        0x488d51ff	                      lea rdx, [rcx - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002c9	    0xf68000000000	                      test byte [rax], 6	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002d0	     0xf85ba000000	                           jne 0x4000390	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002d6	          0x4889d1	                            mov rcx, rdx	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002d9	          0x4885c9	                           test rcx, rcx	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002dc	            0x75e2	                           jne 0x40002c0	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002de	            0x31ed	                            xor ebp, ebp	        74	trailer.c	FUNCTION_2	WHILE_1
0x40002e0	          0x4d85ed	                           test r13, r13	       651	trailer.c	FUNCTION_33	IF_2
0x40002e3	            0x7408	                            je 0x40002ed	       651	trailer.c	FUNCTION_33	IF_2
0x40002e5	    0x49c745000000	                      mov qword [r13], 0	       652	trailer.c	FUNCTION_33	IF_2
0x40002ed	    0x488b1d000000	            mov rbx, qword [0x040002f4] 	       653	trailer.c	FUNCTION_33
0x40002f4	    0x4881fb000000	                              cmp rbx, 0	       653	trailer.c	FUNCTION_33
0x40002fb	     0xf847f000000	                            je 0x4000380	       653	trailer.c	FUNCTION_33
0x4000301	      0x4d8b742410	            mov r14, qword [r12 + 0x10] 	       653	trailer.c	FUNCTION_33
0x4000306	            0xeb14	                           jmp 0x400031c	       653	trailer.c	FUNCTION_33
0x4000308	     0xf1f84000000	                   nop dword [rax + rax]	       653	trailer.c	FUNCTION_33
0x4000310	          0x488b1b	                    mov rbx, qword [rbx]	       653	trailer.c	FUNCTION_33
0x4000313	    0x4881fb000000	                              cmp rbx, 0	       653	trailer.c	FUNCTION_33
0x400031a	            0x7464	                            je 0x4000380	       653	trailer.c	FUNCTION_33
0x400031c	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x4000320	        0x488d5328	                   lea rdx, [rbx + 0x28]	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x4000324	            0x89e9	                            mov ecx, ebp	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x4000326	          0x4c89f7	                            mov rdi, r14	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x4000329	      0xe8c2feffff	      call sym.token_matches_item.isra.5	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x400032e	            0x85c0	                           test eax, eax	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x4000330	            0x74de	                            je 0x4000310	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x4000332	            0x31f6	                            xor esi, esi	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x4000334	          0x4c89e7	                            mov rdi, r12	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x4000337	      0xe800000000	                          call 0x400033c	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x400033c	          0x4d85ed	                           test r13, r13	       657	trailer.c	FUNCTION_33	IF_3	IF_4
0x400033f	          0x4889c5	                            mov rbp, rax	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x4000342	            0x7408	                            je 0x400034c	       657	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000344	        0x488d4320	                   lea rax, [rbx + 0x20]	       658	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000348	        0x49894500	                    mov qword [r13], rax	       658	trailer.c	FUNCTION_33	IF_3	IF_4
0x400034c	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       658	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000350	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	       658	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000354	          0x4885db	                           test rbx, rbx	       581	trailer.c	FUNCTION_30	IF_1
0x4000357	            0x746a	                            je 0x40003c3	       581	trailer.c	FUNCTION_30	IF_1
0x4000359	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_84	CALL_2
0x400035c	      0xe800000000	                          call 0x4000361	       279	strbuf.h	FUNCTION_84	CALL_2
0x4000361	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_84	CALL_2
0x4000364	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_84	CALL_2
0x4000367	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_84	CALL_2
0x400036a	      0xe800000000	                          call 0x400036f	       279	strbuf.h	FUNCTION_84	CALL_2
0x400036f	              0x5b	                                 pop rbx	       664	trailer.c	FUNCTION_33
0x4000370	          0x4889ef	                            mov rdi, rbp	       660	trailer.c	FUNCTION_33	IF_3	CALL_12
0x4000373	              0x5d	                                 pop rbp	       664	trailer.c	FUNCTION_33
0x4000374	            0x415c	                                 pop r12	       664	trailer.c	FUNCTION_33
0x4000376	            0x415d	                                 pop r13	       664	trailer.c	FUNCTION_33
0x4000378	            0x415e	                                 pop r14	       664	trailer.c	FUNCTION_33
0x400037a	      0xe900000000	                           jmp 0x400037f	       660	trailer.c	FUNCTION_33	IF_3	CALL_12
0x400037f	              0x90	                                     nop	       660	trailer.c	FUNCTION_33	IF_3	CALL_12
0x4000380	              0x5b	                                 pop rbx	       664	trailer.c	FUNCTION_33
0x4000381	              0x5d	                                 pop rbp	       664	trailer.c	FUNCTION_33
0x4000382	            0x415c	                                 pop r12	       664	trailer.c	FUNCTION_33
0x4000384	            0x415d	                                 pop r13	       664	trailer.c	FUNCTION_33
0x4000386	            0x415e	                                 pop r14	       664	trailer.c	FUNCTION_33
0x4000388	              0xc3	                                     ret	       664	trailer.c	FUNCTION_33
0x4000389	     0xf1f80000000	                         nop dword [rax]	       664	trailer.c	FUNCTION_33
0x4000390	            0x89cd	                            mov ebp, ecx	       664	trailer.c	FUNCTION_33
0x4000392	      0xe949ffffff	                           jmp 0x40002e0	       664	trailer.c	FUNCTION_33
0x4000397	    0x660f1f840000	                    nop word [rax + rax]	       664	trailer.c	FUNCTION_33
0x40003a0	          0x4889cf	                            mov rdi, rcx	       279	strbuf.h	FUNCTION_84	CALL_2
0x40003a3	      0xe800000000	                          call 0x40003a8	       279	strbuf.h	FUNCTION_84	CALL_2
0x40003a8	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_84	CALL_2
0x40003ab	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_84	CALL_2
0x40003ae	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_84	CALL_2
0x40003b1	      0xe800000000	                          call 0x40003b6	       279	strbuf.h	FUNCTION_84	CALL_2
0x40003b6	          0x4c89e7	                            mov rdi, r12	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x40003b9	      0xe800000000	                          call 0x40003be	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x40003be	      0xe9d4feffff	                           jmp 0x4000297	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x40003c3	          0x4885ed	                           test rbp, rbp	       583	trailer.c	FUNCTION_30	IF_2
0x40003c6	        0x480f45c5	                         cmovne rax, rbp	       583	trailer.c	FUNCTION_30	IF_2
0x40003ca	          0x4889c3	                            mov rbx, rax	       583	trailer.c	FUNCTION_30	IF_2
0x40003cd	            0xeb8a	                           jmp 0x4000359	       583	trailer.c	FUNCTION_30	IF_2
duplicate_conf	CALL,3:functions,0:IF,0:WHILE,0:DO,0:ELSE,0:FOR,0:SWITCH,0	37
0x4000080	              0x55	                                push rbp	       430	trailer.c	ELSE_3	FUNCTION_25
0x4000081	              0x53	                                push rbx	       430	trailer.c	ELSE_3	FUNCTION_25
0x4000082	          0x4889f5	                            mov rbp, rsi	       430	trailer.c	ELSE_3	FUNCTION_25
0x4000085	          0x4889fb	                            mov rbx, rdi	       430	trailer.c	ELSE_3	FUNCTION_25
0x4000088	        0x4883ec08	                              sub rsp, 8	       430	trailer.c	ELSE_3	FUNCTION_25
0x400008c	          0x488b06	                    mov rax, qword [rsi]	       431	trailer.c	ELSE_3	FUNCTION_25
0x400008f	          0x488907	                    mov qword [rdi], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000092	        0x488b4608	                mov rax, qword [rsi + 8]	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000096	        0x48894708	                mov qword [rdi + 8], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x400009a	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x400009e	        0x48894710	             mov qword [rdi + 0x10], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x40000a2	        0x488b4618	            mov rax, qword [rsi + 0x18] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x40000a6	        0x48894718	             mov qword [rdi + 0x18], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x40000aa	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x40000ae	        0x48894720	             mov qword [rdi + 0x20], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x40000b2	          0x488b06	                    mov rax, qword [rsi]	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x40000b5	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000b8	            0x7408	                            je 0x40000c2	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000ba	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000bd	      0xe800000000	                          call 0x40000c2	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000c2	          0x488903	                    mov qword [rbx], rax	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x40000c5	        0x488b4508	                mov rax, qword [rbp + 8]	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x40000c9	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000cc	            0x7408	                            je 0x40000d6	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000ce	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000d1	      0xe800000000	                          call 0x40000d6	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000d6	        0x48894308	                mov qword [rbx + 8], rax	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x40000da	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x40000de	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000e1	            0x7408	                            je 0x40000eb	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000e3	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000e6	      0xe800000000	                          call 0x40000eb	       924	git-compat-util.h	FUNCTION_71	CALL_1
0x40000eb	        0x48894310	             mov qword [rbx + 0x10], rax	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x40000ef	        0x4883c408	                              add rsp, 8	       435	trailer.c	ELSE_3	FUNCTION_25
0x40000f3	              0x5b	                                 pop rbx	       435	trailer.c	ELSE_3	FUNCTION_25
0x40000f4	              0x5d	                                 pop rbp	       435	trailer.c	ELSE_3	FUNCTION_25
0x40000f5	              0xc3	                                     ret	       435	trailer.c	ELSE_3	FUNCTION_25
format_trailers_from_commit	CALL,3:functions,0:IF,0:WHILE,0:DO,0:ELSE,0:FOR,0:SWITCH,0	94
0x4002350	            0x4155	                                push r13	      1158	trailer.c	FUNCTION_52
0x4002352	            0x4154	                                push r12	      1158	trailer.c	FUNCTION_52
0x4002354	          0x4989fd	                            mov r13, rdi	      1158	trailer.c	FUNCTION_52
0x4002357	              0x55	                                push rbp	      1158	trailer.c	FUNCTION_52
0x4002358	              0x53	                                push rbx	      1158	trailer.c	FUNCTION_52
0x4002359	          0x4989d4	                            mov r12, rdx	      1158	trailer.c	FUNCTION_52
0x400235c	        0x4883ec78	                           sub rsp, 0x78	      1158	trailer.c	FUNCTION_52
0x4002360	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1161	trailer.c	FUNCTION_52	CALL_1
0x4002365	    0x64488b042528	                mov rax, qword fs:[0x28]	      1158	trailer.c	FUNCTION_52
0x400236e	      0x4889442468	             mov qword [rsp + 0x68], rax	      1158	trailer.c	FUNCTION_52
0x4002373	            0x31c0	                            xor eax, eax	      1158	trailer.c	FUNCTION_52
0x4002375	      0xe800000000	                          call 0x400237a	      1161	trailer.c	FUNCTION_52	CALL_1
0x400237a	      0x418b742408	                mov esi, dword [r12 + 8]	      1127	trailer.c	FUNCTION_51	IF_1
0x400237f	            0x85f6	                           test esi, esi	      1127	trailer.c	FUNCTION_51	IF_1
0x4002381	            0x750d	                           jne 0x4002390	      1127	trailer.c	FUNCTION_51	IF_1
0x4002383	      0x418b4c2410	            mov ecx, dword [r12 + 0x10] 	      1127	trailer.c	FUNCTION_51	IF_1
0x4002388	            0x85c9	                           test ecx, ecx	      1127	trailer.c	FUNCTION_51	IF_1
0x400238a	     0xf8430010000	                            je 0x40024c0	      1127	trailer.c	FUNCTION_51	IF_1
0x4002390	            0x31db	                            xor ebx, ebx	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002392	    0x48837c246000	               cmp qword [rsp + 0x60], 0	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002398	     0xf8597000000	                           jne 0x4002435	      1133	trailer.c	FUNCTION_51	FOR_1
0x400239e	      0xe9dd000000	                           jmp 0x4002480	      1133	trailer.c	FUNCTION_51	FOR_1
0x40023a3	       0xf1f440000	                   nop dword [rax + rax]	      1133	trailer.c	FUNCTION_51	FOR_1
0x40023a8	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x40023ad	            0x31d2	                            xor edx, edx	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x40023af	          0x4189c0	                            mov r8d, eax	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x40023b2	          0x4889e9	                            mov rcx, rbp	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x40023b5	          0x4889e7	                            mov rdi, rsp	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x40023b8	    0x48c704240000	                      mov qword [rsp], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40023c0	    0x48c744240800	                  mov qword [rsp + 8], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40023c9	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40023d2	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40023db	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40023e4	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40023ed	      0xe84edeffff	                  call sym.parse_trailer	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x40023f2	      0x418b542410	            mov edx, dword [r12 + 0x10] 	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x40023f7	            0x85d2	                           test edx, edx	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x40023f9	     0xf85a9000000	                           jne 0x40024a8	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x40023ff	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002404	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002409	      0xbe00000000	                              mov esi, 0	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x400240e	          0x4c89ef	                            mov rdi, r13	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002411	            0x31c0	                            xor eax, eax	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002413	      0xe800000000	                          call 0x4002418	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002418	          0x4889e7	                            mov rdi, rsp	      1146	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_6
0x400241b	      0xe800000000	                          call 0x4002420	      1146	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_6
0x4002420	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x4002425	      0xe800000000	                          call 0x400242a	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x400242a	        0x4883c301	                              add rbx, 1	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x400242e	      0x48395c2460	            cmp qword [rsp + 0x60], rbx 	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002433	            0x764b	                           jbe 0x4002480	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002435	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1134	trailer.c	FUNCTION_51	FOR_1
0x400243a	    0x488b35000000	            mov rsi, qword [0x04002441] 	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x4002441	        0x488b2cd8	            mov rbp, qword [rax + rbx*8]	      1134	trailer.c	FUNCTION_51	FOR_1
0x4002445	          0x4889ef	                            mov rdi, rbp	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x4002448	      0xe8b3dcffff	                 call sym.find_separator	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x400244d	            0x85c0	                           test eax, eax	      1137	trailer.c	FUNCTION_51	FOR_1	IF_2
0x400244f	     0xf8f53ffffff	                            jg 0x40023a8	      1137	trailer.c	FUNCTION_51	FOR_1	IF_2
0x4002455	      0x418b442408	                mov eax, dword [r12 + 8]	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x400245a	            0x85c0	                           test eax, eax	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x400245c	            0x75cc	                           jne 0x400242a	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x400245e	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_84	CALL_2
0x4002461	        0x4883c301	                              add rbx, 1	       279	strbuf.h	FUNCTION_84	CALL_2
0x4002465	      0xe800000000	                          call 0x400246a	       279	strbuf.h	FUNCTION_84	CALL_2
0x400246a	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_84	CALL_2
0x400246d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_84	CALL_2
0x4002470	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_84	CALL_2
0x4002473	      0xe800000000	                          call 0x4002478	       279	strbuf.h	FUNCTION_84	CALL_2
0x4002478	      0x48395c2460	            cmp qword [rsp + 0x60], rbx 	      1133	trailer.c	FUNCTION_51	FOR_1
0x400247d	            0x77b6	                            ja 0x4002435	      1133	trailer.c	FUNCTION_51	FOR_1
0x400247f	              0x90	                                     nop	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002480	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1163	trailer.c	FUNCTION_52	CALL_3
0x4002485	      0xe800000000	                          call 0x400248a	      1163	trailer.c	FUNCTION_52	CALL_3
0x400248a	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1164	trailer.c	FUNCTION_52
0x400248f	    0x644833042528	                xor rax, qword fs:[0x28]	      1164	trailer.c	FUNCTION_52
0x4002498	            0x753d	                           jne 0x40024d7	      1164	trailer.c	FUNCTION_52
0x400249a	        0x4883c478	                           add rsp, 0x78	      1164	trailer.c	FUNCTION_52
0x400249e	              0x5b	                                 pop rbx	      1164	trailer.c	FUNCTION_52
0x400249f	              0x5d	                                 pop rbp	      1164	trailer.c	FUNCTION_52
0x40024a0	            0x415c	                                 pop r12	      1164	trailer.c	FUNCTION_52
0x40024a2	            0x415d	                                 pop r13	      1164	trailer.c	FUNCTION_52
0x40024a4	              0xc3	                                     ret	      1164	trailer.c	FUNCTION_52
0x40024a5	           0xf1f00	                         nop dword [rax]	      1164	trailer.c	FUNCTION_52
0x40024a8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x40024ad	      0xe85ee1ffff	                   call sym.unfold_value	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x40024b2	      0xe948ffffff	                           jmp 0x40023ff	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x40024b7	    0x660f1f840000	                    nop word [rax + rax]	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x40024c0	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1129	trailer.c	FUNCTION_51	IF_1
0x40024c5	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x40024ca	          0x4c89ef	                            mov rdi, r13	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x40024cd	          0x4829f2	                            sub rdx, rsi	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x40024d0	      0xe800000000	                          call 0x40024d5	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x40024d5	            0xeba9	                           jmp 0x4002480	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x40024d7	      0xe800000000	                  call section_end..text	      1164	trailer.c	FUNCTION_52
free_arg_item	CALL,6:functions,0:IF,0:WHILE,0:DO,0:ELSE,0:FOR,0:SWITCH,0	15
0x4000040	              0x53	                                push rbx	       126	trailer.c	FUNCTION_9
0x4000041	          0x4889fb	                            mov rbx, rdi	       126	trailer.c	FUNCTION_9
0x4000044	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       127	trailer.c	FUNCTION_9	CALL_1
0x4000048	      0xe800000000	                          call 0x400004d	       127	trailer.c	FUNCTION_9	CALL_1
0x400004d	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       128	trailer.c	FUNCTION_9	CALL_2
0x4000051	      0xe800000000	                          call 0x4000056	       128	trailer.c	FUNCTION_9	CALL_2
0x4000056	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       129	trailer.c	FUNCTION_9	CALL_3
0x400005a	      0xe800000000	                          call 0x400005f	       129	trailer.c	FUNCTION_9	CALL_3
0x400005f	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       130	trailer.c	FUNCTION_9	CALL_4
0x4000063	      0xe800000000	                          call 0x4000068	       130	trailer.c	FUNCTION_9	CALL_4
0x4000068	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       131	trailer.c	FUNCTION_9	CALL_5
0x400006c	      0xe800000000	                          call 0x4000071	       131	trailer.c	FUNCTION_9	CALL_5
0x4000071	          0x4889df	                            mov rdi, rbx	       132	trailer.c	FUNCTION_9	CALL_6
0x4000074	              0x5b	                                 pop rbx	       133	trailer.c	FUNCTION_9
0x4000075	      0xe900000000	                           jmp 0x400007a	       132	trailer.c	FUNCTION_9	CALL_6
git_trailer_default_config	CALL,16:functions,0:IF,9:WHILE,0:DO,0:ELSE,3:FOR,0:SWITCH,0	78
0x4000e80	            0x4154	                                push r12	       474	trailer.c	FUNCTION_27
0x4000e82	      0xb800000000	                              mov eax, 0	       474	trailer.c	FUNCTION_27
0x4000e87	              0x55	                                push rbp	       474	trailer.c	FUNCTION_27
0x4000e88	              0x53	                                push rbx	       474	trailer.c	FUNCTION_27
0x4000e89	          0x4889fb	                            mov rbx, rdi	       474	trailer.c	FUNCTION_27
0x4000e8c	            0xeb0f	                           jmp 0x4000e9d	       474	trailer.c	FUNCTION_27
0x4000e8e	            0x6690	                                     nop	       474	trailer.c	FUNCTION_27
0x4000e90	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_59	DO_1
0x4000e94	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_59	DO_1
0x4000e98	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_59	DO_1
0x4000e9b	            0x751f	                           jne 0x4000ebc	       488	git-compat-util.h	FUNCTION_59	DO_1
0x4000e9d	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_59	DO_1	IF_1
0x4000ea0	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_59	DO_1	IF_1
0x4000ea2	            0x75ec	                           jne 0x4000e90	       484	git-compat-util.h	FUNCTION_59	DO_1	IF_1
0x4000ea4	          0x4989f4	                            mov r12, rsi	       484	git-compat-util.h	FUNCTION_59	DO_1	IF_1
0x4000ea7	          0x4889fd	                            mov rbp, rdi	       484	git-compat-util.h	FUNCTION_59	DO_1	IF_1
0x4000eaa	      0xbe2e000000	                           mov esi, 0x2e	       480	trailer.c	FUNCTION_27	CALL_2
0x4000eaf	          0x4889df	                            mov rdi, rbx	       480	trailer.c	FUNCTION_27	CALL_2
0x4000eb2	      0xe800000000	                          call 0x4000eb7	       480	trailer.c	FUNCTION_27	CALL_2
0x4000eb7	          0x4885c0	                           test rax, rax	       481	trailer.c	FUNCTION_27	IF_2
0x4000eba	            0x740c	                            je 0x4000ec8	       481	trailer.c	FUNCTION_27	IF_2
0x4000ebc	              0x5b	                                 pop rbx	       502	trailer.c	FUNCTION_27
0x4000ebd	            0x31c0	                            xor eax, eax	       502	trailer.c	FUNCTION_27
0x4000ebf	              0x5d	                                 pop rbp	       502	trailer.c	FUNCTION_27
0x4000ec0	            0x415c	                                 pop r12	       502	trailer.c	FUNCTION_27
0x4000ec2	              0xc3	                                     ret	       502	trailer.c	FUNCTION_27
0x4000ec3	       0xf1f440000	                   nop dword [rax + rax]	       502	trailer.c	FUNCTION_27
0x4000ec8	      0xbf00000000	                              mov edi, 0	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000ecd	      0xb906000000	                              mov ecx, 6	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000ed2	          0x4889de	                            mov rsi, rbx	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000ed5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000ed7	            0x747f	                            je 0x4000f58	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000ed9	      0xbf00000000	                              mov edi, 0	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000ede	      0xb909000000	                              mov ecx, 9	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000ee3	          0x4889de	                            mov rsi, rbx	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000ee6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000ee8	     0xf8481000000	                            je 0x4000f6f	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000eee	      0xbf00000000	                              mov edi, 0	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000ef3	      0xb90a000000	                            mov ecx, 0xa	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000ef8	          0x4889de	                            mov rsi, rbx	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000efb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000efd	            0x7422	                            je 0x4000f21	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000eff	      0xbf00000000	                              mov edi, 0	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000f04	      0xb90b000000	                            mov ecx, 0xb	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000f09	          0x4889de	                            mov rsi, rbx	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000f0c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000f0e	            0x75ac	                           jne 0x4000ebc	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000f10	          0x4c89e7	                            mov rdi, r12	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000f13	      0xe800000000	                          call 0x4000f18	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000f18	    0x488905000000	            mov qword [0x04000f1f], rax 	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000f1f	            0xeb9b	                           jmp 0x4000ebc	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000f21	          0x4c89e6	                            mov rsi, r12	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x4000f24	      0xbf00000000	                              mov edi, 0	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x4000f29	      0xe800000000	                          call 0x4000f2e	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x4000f2e	            0x85c0	                           test eax, eax	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x4000f30	            0x798a	                           jns 0x4000ebc	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x4000f32	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_105
0x4000f34	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_105
0x4000f39	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_105
0x4000f3e	      0xe800000000	                          call 0x4000f43	        54	gettext.h	FUNCTION_105
0x4000f43	          0x4889ea	                            mov rdx, rbp	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000f46	          0x4889c7	                            mov rdi, rax	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000f49	          0x4c89e6	                            mov rsi, r12	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000f4c	            0x31c0	                            xor eax, eax	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000f4e	      0xe800000000	                          call 0x4000f53	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000f53	      0xe964ffffff	                           jmp 0x4000ebc	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000f58	          0x4c89e6	                            mov rsi, r12	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000f5b	      0xbf00000000	                              mov edi, 0	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000f60	      0xe800000000	                          call 0x4000f65	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000f65	            0x85c0	                           test eax, eax	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000f67	     0xf894fffffff	                           jns 0x4000ebc	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000f6d	            0xebc3	                           jmp 0x4000f32	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000f6f	          0x4c89e6	                            mov rsi, r12	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x4000f72	      0xbf00000000	                              mov edi, 0	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x4000f77	      0xe800000000	                          call 0x4000f7c	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x4000f7c	            0x85c0	                           test eax, eax	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x4000f7e	     0xf8938ffffff	                           jns 0x4000ebc	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x4000f84	            0xebac	                           jmp 0x4000f32	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
add_arg_to_input_list	CALL,4:functions,0:IF,1:WHILE,0:DO,0:ELSE,1:FOR,0:SWITCH,0	46
0x4000570	            0x4155	                                push r13	       187	trailer.c	FUNCTION_14
0x4000572	            0x4154	                                push r12	       187	trailer.c	FUNCTION_14
0x4000574	          0x4989fd	                            mov r13, rdi	       187	trailer.c	FUNCTION_14
0x4000577	              0x55	                                push rbp	       187	trailer.c	FUNCTION_14
0x4000578	              0x53	                                push rbx	       187	trailer.c	FUNCTION_14
0x4000579	      0xbf20000000	                           mov edi, 0x20	       177	trailer.c	FUNCTION_13	CALL_1
0x400057e	          0x4889f3	                            mov rbx, rsi	       187	trailer.c	FUNCTION_14
0x4000581	        0x4883ec08	                              sub rsp, 8	       187	trailer.c	FUNCTION_14
0x4000585	          0x8b4638	            mov eax, dword [rsi + 0x38] 	        63	trailer.c	FUNCTION_1
0x4000588	      0xbe01000000	                              mov esi, 1	       177	trailer.c	FUNCTION_13	CALL_1
0x400058d	        0x448d60ff	                     lea r12d, [rax - 1]	        63	trailer.c	FUNCTION_1
0x4000591	      0xe800000000	                          call 0x4000596	       177	trailer.c	FUNCTION_13	CALL_1
0x4000596	          0x4889c5	                            mov rbp, rax	       177	trailer.c	FUNCTION_13	CALL_1
0x4000599	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       178	trailer.c	FUNCTION_13
0x400059d	          0x4889df	                            mov rdi, rbx	       181	trailer.c	FUNCTION_13	CALL_2
0x40005a0	        0x48894510	            mov qword [rbp + 0x10], rax 	       178	trailer.c	FUNCTION_13
0x40005a4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       179	trailer.c	FUNCTION_13
0x40005a8	        0x48894518	            mov qword [rbp + 0x18], rax 	       179	trailer.c	FUNCTION_13
0x40005ac	    0x48c743180000	               mov qword [rbx + 0x18], 0	       180	trailer.c	FUNCTION_13
0x40005b4	    0x48c743100000	               mov qword [rbx + 0x10], 0	       180	trailer.c	FUNCTION_13
0x40005bc	      0xe87ffaffff	                  call sym.free_arg_item	       181	trailer.c	FUNCTION_13	CALL_2
0x40005c1	        0x4183fc01	                             cmp r12d, 1	       190	trailer.c	FUNCTION_14	IF_1
0x40005c5	            0x7621	                           jbe 0x40005e8	       190	trailer.c	FUNCTION_14	IF_1
0x40005c7	        0x498b4508	                mov rax, qword [r13 + 8]	        63	list.h	FUNCTION_108
0x40005cb	          0x488928	                    mov qword [rax], rbp	        63	list.h	FUNCTION_108
0x40005ce	        0x4c896d00	                    mov qword [rbp], r13	        64	list.h	FUNCTION_108
0x40005d2	        0x48894508	                mov qword [rbp + 8], rax	        65	list.h	FUNCTION_108
0x40005d6	        0x49896d08	                mov qword [r13 + 8], rbp	        66	list.h	FUNCTION_108
0x40005da	        0x4883c408	                              add rsp, 8	       194	trailer.c	FUNCTION_14
0x40005de	              0x5b	                                 pop rbx	       194	trailer.c	FUNCTION_14
0x40005df	              0x5d	                                 pop rbp	       194	trailer.c	FUNCTION_14
0x40005e0	            0x415c	                                 pop r12	       194	trailer.c	FUNCTION_14
0x40005e2	            0x415d	                                 pop r13	       194	trailer.c	FUNCTION_14
0x40005e4	              0xc3	                                     ret	       194	trailer.c	FUNCTION_14
0x40005e5	           0xf1f00	                         nop dword [rax]	       194	trailer.c	FUNCTION_14
0x40005e8	        0x498b4500	                    mov rax, qword [r13]	        54	list.h	FUNCTION_107
0x40005ec	        0x48896808	                mov qword [rax + 8], rbp	        54	list.h	FUNCTION_107
0x40005f0	        0x48894500	                    mov qword [rbp], rax	        55	list.h	FUNCTION_107
0x40005f4	        0x4c896d08	                mov qword [rbp + 8], r13	        56	list.h	FUNCTION_107
0x40005f8	        0x49896d00	                    mov qword [r13], rbp	        57	list.h	FUNCTION_107
0x40005fc	        0x4883c408	                              add rsp, 8	       194	trailer.c	FUNCTION_14
0x4000600	              0x5b	                                 pop rbx	       194	trailer.c	FUNCTION_14
0x4000601	              0x5d	                                 pop rbp	       194	trailer.c	FUNCTION_14
0x4000602	            0x415c	                                 pop r12	       194	trailer.c	FUNCTION_14
0x4000604	            0x415d	                                 pop r13	       194	trailer.c	FUNCTION_14
0x4000606	              0xc3	                                     ret	       194	trailer.c	FUNCTION_14
