cmd_merge_recursive	ELSE,1:DO,0:WHILE,0:functions,0:FOR,1:IF,12:CALL,25:SWITCH,0	179
0x4000090	            0x4157	                                push r15	        23	merge-recursive.c	FUNCTION_2
0x4000092	            0x4156	                                push r14	        23	merge-recursive.c	FUNCTION_2
0x4000094	          0x4189ff	                           mov r15d, edi	        23	merge-recursive.c	FUNCTION_2
0x4000097	            0x4155	                                push r13	        23	merge-recursive.c	FUNCTION_2
0x4000099	            0x4154	                                push r12	        23	merge-recursive.c	FUNCTION_2
0x400009b	          0x4989f5	                            mov r13, rsi	        23	merge-recursive.c	FUNCTION_2
0x400009e	              0x55	                                push rbp	        23	merge-recursive.c	FUNCTION_2
0x400009f	              0x53	                                push rbx	        23	merge-recursive.c	FUNCTION_2
0x40000a0	    0x4881eca80500	                          sub rsp, 0x5a8	        23	merge-recursive.c	FUNCTION_2
0x40000a7	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	        31	merge-recursive.c	FUNCTION_2	CALL_1
0x40000af	    0x64488b042528	                mov rax, qword fs:[0x28]	        23	merge-recursive.c	FUNCTION_2
0x40000b8	    0x488984249805	            mov qword [rsp + 0x598], rax	        23	merge-recursive.c	FUNCTION_2
0x40000c0	            0x31c0	                            xor eax, eax	        23	merge-recursive.c	FUNCTION_2
0x40000c2	      0xe800000000	                          call 0x40000c7	        31	merge-recursive.c	FUNCTION_2	CALL_1
0x40000c7	        0x498b5d00	                    mov rbx, qword [r13]	        32	merge-recursive.c	FUNCTION_2	IF_1	CALL_2
0x40000cb	          0x4885db	                           test rbx, rbx	        32	merge-recursive.c	FUNCTION_2	IF_1	CALL_2
0x40000ce	            0x7432	                            je 0x4000102	        32	merge-recursive.c	FUNCTION_2	IF_1	CALL_2
0x40000d0	          0x4889df	                            mov rdi, rbx	       555	git-compat-util.h	FUNCTION_13	CALL_1
0x40000d3	      0xe800000000	                          call 0x40000d8	       555	git-compat-util.h	FUNCTION_13	CALL_1
0x40000d8	        0x4883f807	                              cmp rax, 7	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000dc	            0x7624	                           jbe 0x4000102	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000de	      0x488d7c03f8	                lea rdi, [rbx + rax - 8]	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000e3	      0xba08000000	                              mov edx, 8	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000e8	      0xbe00000000	                              mov esi, 0	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000ed	      0xe800000000	                          call 0x40000f2	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000f2	            0x85c0	                           test eax, eax	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000f4	            0x750c	                           jne 0x4000102	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000f6	    0x48c784242001	              mov qword [rsp + 0x120], 0	        33	merge-recursive.c	FUNCTION_2	IF_1
0x4000102	        0x4183ff03	                             cmp r15d, 3	        35	merge-recursive.c	FUNCTION_2	IF_2
0x4000106	     0xf8e49020000	                           jle 0x4000355	        35	merge-recursive.c	FUNCTION_2	IF_2
0x400010c	        0x498d5d08	                      lea rbx, [r13 + 8]	        35	merge-recursive.c	FUNCTION_2	IF_2
0x4000110	      0xbd01000000	                              mov ebp, 1	        35	merge-recursive.c	FUNCTION_2	IF_2
0x4000115	          0x4531e4	                          xor r12d, r12d	        35	merge-recursive.c	FUNCTION_2	IF_2
0x4000118	            0xeb36	                           jmp 0x4000150	        35	merge-recursive.c	FUNCTION_2	IF_2
0x400011a	    0x660f1f440000	                    nop word [rax + rax]	        35	merge-recursive.c	FUNCTION_2	IF_2
0x4000120	      0x41807e0200	                   cmp byte [r14 + 2], 0	        42	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000125	     0xf84d5000000	                            je 0x4000200	        42	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x400012b	        0x498d7602	                      lea rsi, [r14 + 2]	        44	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_5	CALL_5
0x400012f	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	        44	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_5	CALL_5
0x4000137	      0xe800000000	                          call 0x400013c	        44	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_5	CALL_5
0x400013c	            0x85c0	                           test eax, eax	        44	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_5	CALL_5
0x400013e	     0xf85f3010000	                           jne 0x4000337	        44	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_5	CALL_5
0x4000144	          0x83c501	                              add ebp, 1	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x4000147	        0x4883c308	                              add rbx, 8	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x400014b	          0x4139ef	                           cmp r15d, ebp	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x400014e	            0x7452	                            je 0x40001a2	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x4000150	          0x4c8b33	                    mov r14, qword [rbx]	        39	merge-recursive.c	FUNCTION_2	FOR_1
0x4000153	      0xbe00000000	                              mov esi, 0	        41	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000158	          0x4c89f7	                            mov rdi, r14	        41	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x400015b	      0xe800000000	                          call 0x4000160	        41	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000160	            0x85c0	                           test eax, eax	        41	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000162	            0x75bc	                           jne 0x4000120	        41	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000164	        0x4183fc13	                          cmp r12d, 0x13	        48	merge-recursive.c	FUNCTION_2	FOR_1	IF_6
0x4000168	            0x7756	                            ja 0x40001c0	        48	merge-recursive.c	FUNCTION_2	FOR_1	IF_6
0x400016a	      0xbf14000000	                           mov edi, 0x14	        49	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_8
0x400016f	      0xe800000000	                          call 0x4000174	        49	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_8
0x4000174	          0x488b3b	                    mov rdi, qword [rbx]	        50	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	IF_7	CALL_9
0x4000177	          0x4889c6	                            mov rsi, rax	        50	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	IF_7	CALL_9
0x400017a	          0x4989c6	                            mov r14, rax	        49	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_8
0x400017d	      0xe800000000	                          call 0x4000182	        50	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	IF_7	CALL_9
0x4000182	            0x85c0	                           test eax, eax	        50	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	IF_7	CALL_9
0x4000184	     0xf858c010000	                           jne 0x4000316	        50	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	IF_7	CALL_9
0x400018a	          0x83c501	                              add ebp, 1	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x400018d	          0x4489e0	                           mov eax, r12d	        52	merge-recursive.c	FUNCTION_2	FOR_1	IF_6
0x4000190	        0x4883c308	                              add rbx, 8	        52	merge-recursive.c	FUNCTION_2	FOR_1	IF_6
0x4000194	        0x4183c401	                             add r12d, 1	        52	merge-recursive.c	FUNCTION_2	FOR_1	IF_6
0x4000198	          0x4139ef	                           cmp r15d, ebp	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x400019b	      0x4c8974c450	     mov qword [rsp + rax*8 + 0x50], r14	        52	merge-recursive.c	FUNCTION_2	FOR_1	IF_6
0x40001a0	            0x75ae	                           jne 0x4000150	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x40001a2	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_32
0x40001a4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32
0x40001a9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32
0x40001ae	      0xe800000000	                          call 0x40001b3	        54	gettext.h	FUNCTION_32
0x40001b3	          0x4889c7	                            mov rdi, rax	        63	merge-recursive.c	FUNCTION_2	CALL_15
0x40001b6	            0x31c0	                            xor eax, eax	        63	merge-recursive.c	FUNCTION_2	CALL_15
0x40001b8	      0xe800000000	                          call 0x40001bd	        63	merge-recursive.c	FUNCTION_2	CALL_15
0x40001bd	           0xf1f00	                         nop dword [rax]	        63	merge-recursive.c	FUNCTION_2	CALL_15
0x40001c0	          0x4c8b33	                    mov r14, qword [rbx]	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_13
0x40001c3	            0x31ff	                            xor edi, edi	        62	gettext.h	FUNCTION_33
0x40001c5	    0x41b805000000	                              mov r8d, 5	        62	gettext.h	FUNCTION_33
0x40001cb	      0xb914000000	                           mov ecx, 0x14	        62	gettext.h	FUNCTION_33
0x40001d0	      0xba00000000	                              mov edx, 0	        62	gettext.h	FUNCTION_33
0x40001d5	      0xbe00000000	                              mov esi, 0	        62	gettext.h	FUNCTION_33
0x40001da	      0xe800000000	                          call 0x40001df	        62	gettext.h	FUNCTION_33
0x40001df	          0x4c89f2	                            mov rdx, r14	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_13
0x40001e2	          0x4889c7	                            mov rdi, rax	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_13
0x40001e5	      0xbe14000000	                           mov esi, 0x14	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_13
0x40001ea	            0x31c0	                            xor eax, eax	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_13
0x40001ec	      0xe800000000	                          call 0x40001f1	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_13
0x40001f1	      0xe94effffff	                           jmp 0x4000144	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_13
0x40001f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_13
0x4000200	          0x4129ef	                           sub r15d, ebp	        62	merge-recursive.c	FUNCTION_2	IF_8
0x4000203	        0x4183ff03	                             cmp r15d, 3	        62	merge-recursive.c	FUNCTION_2	IF_8
0x4000207	            0x7599	                           jne 0x40001a2	        62	merge-recursive.c	FUNCTION_2	IF_8
0x4000209	          0x83c501	                              add ebp, 1	        65	merge-recursive.c	FUNCTION_2
0x400020c	      0x488d742410	                   lea rsi, [rsp + 0x10]	        68	merge-recursive.c	FUNCTION_2	IF_9	CALL_16
0x4000211	          0x4863ed	                         movsxd rbp, ebp	        65	merge-recursive.c	FUNCTION_2
0x4000214	      0x498b7ced00	            mov rdi, qword [r13 + rbp*8]	        65	merge-recursive.c	FUNCTION_2
0x4000219	      0x498b44ed08	       mov rax, qword [r13 + rbp*8 + 8] 	        66	merge-recursive.c	FUNCTION_2
0x400021e	    0x4889bc240801	            mov qword [rsp + 0x108], rdi	        65	merge-recursive.c	FUNCTION_2
0x4000226	    0x488984241001	            mov qword [rsp + 0x110], rax	        66	merge-recursive.c	FUNCTION_2
0x400022e	      0xe800000000	                          call 0x4000233	        68	merge-recursive.c	FUNCTION_2	IF_9	CALL_16
0x4000233	            0x85c0	                           test eax, eax	        68	merge-recursive.c	FUNCTION_2	IF_9	CALL_16
0x4000235	     0xf8529010000	                           jne 0x4000364	        68	merge-recursive.c	FUNCTION_2	IF_9	CALL_16
0x400023b	    0x488bbc241001	           mov rdi, qword [rsp + 0x110] 	        70	merge-recursive.c	FUNCTION_2	IF_10	CALL_19
0x4000243	      0x488d742430	                   lea rsi, [rsp + 0x30]	        70	merge-recursive.c	FUNCTION_2	IF_10	CALL_19
0x4000248	      0xe800000000	                          call 0x400024d	        70	merge-recursive.c	FUNCTION_2	IF_10	CALL_19
0x400024d	            0x85c0	                           test eax, eax	        70	merge-recursive.c	FUNCTION_2	IF_10	CALL_19
0x400024f	     0xf8523010000	                           jne 0x4000378	        70	merge-recursive.c	FUNCTION_2	IF_10	CALL_19
0x4000255	    0x488bbc240801	           mov rdi, qword [rsp + 0x108] 	        73	merge-recursive.c	FUNCTION_2	CALL_22
0x400025d	      0xe8defdffff	             call sym.better_branch_name	        73	merge-recursive.c	FUNCTION_2	CALL_22
0x4000262	    0x488bbc241001	           mov rdi, qword [rsp + 0x110] 	        74	merge-recursive.c	FUNCTION_2	CALL_23
0x400026a	    0x488984240801	            mov qword [rsp + 0x108], rax	        73	merge-recursive.c	FUNCTION_2	CALL_22
0x4000272	      0xe8c9fdffff	             call sym.better_branch_name	        74	merge-recursive.c	FUNCTION_2	CALL_23
0x4000277	    0x83bc24380100	              cmp dword [rsp + 0x138], 2	        76	merge-recursive.c	FUNCTION_2	IF_11
0x400027f	          0x4889c3	                            mov rbx, rax	        74	merge-recursive.c	FUNCTION_2	CALL_23
0x4000282	    0x488984241001	            mov qword [rsp + 0x110], rax	        74	merge-recursive.c	FUNCTION_2	CALL_23
0x400028a	            0x7f57	                            jg 0x40002e3	        76	merge-recursive.c	FUNCTION_2	IF_11
0x400028c	      0x488d542430	                   lea rdx, [rsp + 0x30]	        79	merge-recursive.c	FUNCTION_2	CALL_25
0x4000291	      0x4c8d4c2408	                       lea r9, [rsp + 8]	        79	merge-recursive.c	FUNCTION_2	CALL_25
0x4000296	      0x4c8d442450	                    lea r8, [rsp + 0x50]	        79	merge-recursive.c	FUNCTION_2	CALL_25
0x400029b	      0x488d742410	                   lea rsi, [rsp + 0x10]	        79	merge-recursive.c	FUNCTION_2	CALL_25
0x40002a0	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	        79	merge-recursive.c	FUNCTION_2	CALL_25
0x40002a8	          0x4489e1	                           mov ecx, r12d	        79	merge-recursive.c	FUNCTION_2	CALL_25
0x40002ab	      0xe800000000	                          call 0x40002b0	        79	merge-recursive.c	FUNCTION_2	CALL_25
0x40002b0	      0xba80000000	                           mov edx, 0x80	        80	merge-recursive.c	FUNCTION_2	IF_12
0x40002b5	            0x85c0	                           test eax, eax	        80	merge-recursive.c	FUNCTION_2	IF_12
0x40002b7	           0xf48c2	                          cmovs eax, edx	        80	merge-recursive.c	FUNCTION_2	IF_12
0x40002ba	    0x488b8c249805	           mov rcx, qword [rsp + 0x598] 	        83	merge-recursive.c	FUNCTION_2
0x40002c2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        83	merge-recursive.c	FUNCTION_2
0x40002cb	     0xf85b1000000	                           jne 0x4000382	        83	merge-recursive.c	FUNCTION_2
0x40002d1	    0x4881c4a80500	                          add rsp, 0x5a8	        83	merge-recursive.c	FUNCTION_2
0x40002d8	              0x5b	                                 pop rbx	        83	merge-recursive.c	FUNCTION_2
0x40002d9	              0x5d	                                 pop rbp	        83	merge-recursive.c	FUNCTION_2
0x40002da	            0x415c	                                 pop r12	        83	merge-recursive.c	FUNCTION_2
0x40002dc	            0x415d	                                 pop r13	        83	merge-recursive.c	FUNCTION_2
0x40002de	            0x415e	                                 pop r14	        83	merge-recursive.c	FUNCTION_2
0x40002e0	            0x415f	                                 pop r15	        83	merge-recursive.c	FUNCTION_2
0x40002e2	              0xc3	                                     ret	        83	merge-recursive.c	FUNCTION_2
0x40002e3	    0x488bac240801	           mov rbp, qword [rsp + 0x108] 	        77	merge-recursive.c	FUNCTION_2	CALL_24
0x40002eb	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_32
0x40002ed	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32
0x40002f2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32
0x40002f7	      0xe800000000	                          call 0x40002fc	        54	gettext.h	FUNCTION_32
0x40002fc	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_107
0x40002ff	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_107
0x4000302	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_107
0x4000305	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_107
0x400030a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_107
0x400030c	      0xe800000000	                          call 0x4000311	       104	stdio2.h	CALL_107
0x4000311	      0xe976ffffff	                           jmp 0x400028c	       104	stdio2.h	CALL_107
0x4000316	          0x488b1b	                    mov rbx, qword [rbx]	        51	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_11
0x4000319	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32
0x400031e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32
0x4000323	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_32
0x4000325	      0xe800000000	                          call 0x400032a	        54	gettext.h	FUNCTION_32
0x400032a	          0x4889de	                            mov rsi, rbx	        69	merge-recursive.c	FUNCTION_2	CALL_18
0x400032d	          0x4889c7	                            mov rdi, rax	        69	merge-recursive.c	FUNCTION_2	CALL_18
0x4000330	            0x31c0	                            xor eax, eax	        69	merge-recursive.c	FUNCTION_2	CALL_18
0x4000332	      0xe800000000	                          call 0x4000337	        69	merge-recursive.c	FUNCTION_2	CALL_18
0x4000337	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32
0x400033c	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_32
0x400033e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32
0x4000343	      0xe800000000	                          call 0x4000348	        54	gettext.h	FUNCTION_32
0x4000348	          0x4c89f6	                            mov rsi, r14	        45	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_7
0x400034b	          0x4889c7	                            mov rdi, rax	        45	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_7
0x400034e	            0x31c0	                            xor eax, eax	        45	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_7
0x4000350	      0xe800000000	                          call 0x4000355	        45	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_7
0x4000355	          0x4889de	                            mov rsi, rbx	        36	merge-recursive.c	FUNCTION_2	CALL_3
0x4000358	      0xbf00000000	                              mov edi, 0	        36	merge-recursive.c	FUNCTION_2	CALL_3
0x400035d	            0x31c0	                            xor eax, eax	        36	merge-recursive.c	FUNCTION_2	CALL_3
0x400035f	      0xe800000000	                          call 0x4000364	        36	merge-recursive.c	FUNCTION_2	CALL_3
0x4000364	    0x488b9c240801	           mov rbx, qword [rsp + 0x108] 	        69	merge-recursive.c	FUNCTION_2	CALL_18
0x400036c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32
0x4000371	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32
0x4000376	            0xebab	                           jmp 0x4000323	        54	gettext.h	FUNCTION_32
0x4000378	    0x488b9c241001	           mov rbx, qword [rsp + 0x110] 	        71	merge-recursive.c	FUNCTION_2	CALL_21
0x4000380	            0xebea	                           jmp 0x400036c	        71	merge-recursive.c	FUNCTION_2	CALL_21
0x4000382	      0xe800000000	                  call section_end..data	        83	merge-recursive.c	FUNCTION_2
