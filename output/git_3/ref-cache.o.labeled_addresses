create_ref_entry	SWITCH,0:CALL,1:WHILE,0:DO,0:functions,0:ELSE,0:IF,0:FOR,0	45
0x4000620	            0x4156	                                push r14	        36	ref-cache.c	FUNCTION_3
0x4000622	            0x4155	                                push r13	        36	ref-cache.c	FUNCTION_3
0x4000624	          0x4189d6	                           mov r14d, edx	        36	ref-cache.c	FUNCTION_3
0x4000627	            0x4154	                                push r12	        36	ref-cache.c	FUNCTION_3
0x4000629	              0x55	                                push rbp	        36	ref-cache.c	FUNCTION_3
0x400062a	          0x4989fd	                            mov r13, rdi	        36	ref-cache.c	FUNCTION_3
0x400062d	              0x53	                                push rbx	        36	ref-cache.c	FUNCTION_3
0x400062e	          0x4989f4	                            mov r12, rsi	        36	ref-cache.c	FUNCTION_3
0x4000631	      0xe800000000	                          call 0x4000636	        39	ref-cache.c	FUNCTION_3
0x4000636	        0x4883f8d7	             cmp rax, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_38	IF_1
0x400063a	          0x4889c5	                            mov rbp, rax	        39	ref-cache.c	FUNCTION_3
0x400063d	            0x774a	                            ja 0x4000689	       785	git-compat-util.h	FUNCTION_38	IF_1
0x400063f	            0x745c	                            je 0x400069d	       785	git-compat-util.h	FUNCTION_38	IF_1
0x4000641	        0x488d7029	                   lea rsi, [rax + 0x29]	        39	ref-cache.c	FUNCTION_3
0x4000645	      0xbf01000000	                              mov edi, 1	        39	ref-cache.c	FUNCTION_3
0x400064a	      0xe800000000	                          call 0x400064f	        39	ref-cache.c	FUNCTION_3
0x400064f	        0x488d7828	                   lea rdi, [rax + 0x28]	        53	string3.h	FUNCTION_52	CALL_3
0x4000653	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_52	CALL_3
0x4000656	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_52	CALL_3
0x4000659	          0x4889c3	                            mov rbx, rax	        39	ref-cache.c	FUNCTION_3
0x400065c	      0xe800000000	                          call 0x4000661	        53	string3.h	FUNCTION_52	CALL_3
0x4000661	        0x498b1424	                    mov rdx, qword [r12]	        53	string3.h	FUNCTION_52	CALL_3
0x4000665	          0x4889d8	                            mov rax, rbx	        43	ref-cache.c	FUNCTION_3
0x4000668	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_52	CALL_3
0x400066c	      0x498b542408	                mov rdx, qword [r12 + 8]	        53	string3.h	FUNCTION_52	CALL_3
0x4000671	        0x48895310	             mov qword [rbx + 0x10], rdx	        53	string3.h	FUNCTION_52	CALL_3
0x4000675	      0x418b542410	            mov edx, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_52	CALL_3
0x400067a	          0x448833	                    mov byte [rbx], r14b	        41	ref-cache.c	FUNCTION_3
0x400067d	          0x895318	             mov dword [rbx + 0x18], edx	        53	string3.h	FUNCTION_52	CALL_3
0x4000680	              0x5b	                                 pop rbx	        43	ref-cache.c	FUNCTION_3
0x4000681	              0x5d	                                 pop rbp	        43	ref-cache.c	FUNCTION_3
0x4000682	            0x415c	                                 pop r12	        43	ref-cache.c	FUNCTION_3
0x4000684	            0x415d	                                 pop r13	        43	ref-cache.c	FUNCTION_3
0x4000686	            0x415e	                                 pop r14	        43	ref-cache.c	FUNCTION_3
0x4000688	              0xc3	                                     ret	        43	ref-cache.c	FUNCTION_3
0x4000689	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400068c	      0xbe28000000	                           mov esi, 0x28	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000691	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000696	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000698	      0xe800000000	                          call 0x400069d	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400069d	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x40006a2	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x40006a6	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x40006ab	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x40006ad	      0xe800000000	                          call 0x40006b2	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
add_ref_entry	SWITCH,0:CALL,2:WHILE,0:DO,0:functions,0:ELSE,0:IF,1:FOR,0	17
0x4000ab0	              0x53	                                push rbx	       251	ref-cache.c	FUNCTION_16
0x4000ab1	      0xba01000000	                              mov edx, 1	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000ab6	          0x4889f3	                            mov rbx, rsi	       251	ref-cache.c	FUNCTION_16
0x4000ab9	        0x4883c628	                           add rsi, 0x28	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000abd	      0xe8aefdffff	            call sym.find_containing_dir	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000ac2	          0x4885c0	                           test rax, rax	       253	ref-cache.c	FUNCTION_16	IF_1
0x4000ac5	            0x7419	                            je 0x4000ae0	       253	ref-cache.c	FUNCTION_16	IF_1
0x4000ac7	          0x4889de	                            mov rsi, rbx	       255	ref-cache.c	FUNCTION_16	CALL_2
0x4000aca	          0x4889c7	                            mov rdi, rax	       255	ref-cache.c	FUNCTION_16	CALL_2
0x4000acd	      0xe800000000	                          call 0x4000ad2	       255	ref-cache.c	FUNCTION_16	CALL_2
0x4000ad2	            0x31c0	                            xor eax, eax	       256	ref-cache.c	FUNCTION_16
0x4000ad4	              0x5b	                                 pop rbx	       257	ref-cache.c	FUNCTION_16
0x4000ad5	              0xc3	                                     ret	       257	ref-cache.c	FUNCTION_16
0x4000ad6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       257	ref-cache.c	FUNCTION_16
0x4000ae0	      0xb8ffffffff	                     mov eax, 0xffffffff	       254	ref-cache.c	FUNCTION_16	IF_1
0x4000ae5	              0x5b	                                 pop rbx	       257	ref-cache.c	FUNCTION_16
0x4000ae6	              0xc3	                                     ret	       257	ref-cache.c	FUNCTION_16
cache_ref_iterator_abort	SWITCH,0:CALL,3:WHILE,0:DO,0:functions,0:ELSE,0:IF,0:FOR,0	11
0x4000200	              0x53	                                push rbx	       498	ref-cache.c	FUNCTION_23
0x4000201	          0x4889fb	                            mov rbx, rdi	       498	ref-cache.c	FUNCTION_23
0x4000204	        0x488b7f38	            mov rdi, qword [rdi + 0x38] 	       502	ref-cache.c	FUNCTION_23	CALL_1
0x4000208	      0xe800000000	                          call 0x400020d	       502	ref-cache.c	FUNCTION_23	CALL_1
0x400020d	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       503	ref-cache.c	FUNCTION_23	CALL_2
0x4000211	      0xe800000000	                          call 0x4000216	       503	ref-cache.c	FUNCTION_23	CALL_2
0x4000216	          0x4889df	                            mov rdi, rbx	       504	ref-cache.c	FUNCTION_23	CALL_3
0x4000219	      0xe800000000	                          call 0x400021e	       504	ref-cache.c	FUNCTION_23	CALL_3
0x400021e	      0xb8ffffffff	                     mov eax, 0xffffffff	       506	ref-cache.c	FUNCTION_23
0x4000223	              0x5b	                                 pop rbx	       506	ref-cache.c	FUNCTION_23
0x4000224	              0xc3	                                     ret	       506	ref-cache.c	FUNCTION_23
find_ref_entry	SWITCH,0:CALL,3:WHILE,0:DO,0:functions,0:ELSE,0:IF,2:FOR,0	32
0x4000930	              0x55	                                push rbp	       202	ref-cache.c	FUNCTION_14
0x4000931	              0x53	                                push rbx	       202	ref-cache.c	FUNCTION_14
0x4000932	            0x31d2	                            xor edx, edx	       205	ref-cache.c	FUNCTION_14	CALL_1
0x4000934	          0x4889f3	                            mov rbx, rsi	       202	ref-cache.c	FUNCTION_14
0x4000937	        0x4883ec08	                              sub rsp, 8	       202	ref-cache.c	FUNCTION_14
0x400093b	      0xe830ffffff	            call sym.find_containing_dir	       205	ref-cache.c	FUNCTION_14	CALL_1
0x4000940	          0x4885c0	                           test rax, rax	       206	ref-cache.c	FUNCTION_14	IF_1
0x4000943	            0x743b	                            je 0x4000980	       206	ref-cache.c	FUNCTION_14	IF_1
0x4000945	          0x4889c5	                            mov rbp, rax	       206	ref-cache.c	FUNCTION_14	IF_1
0x4000948	          0x4889df	                            mov rdi, rbx	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400094b	      0xe800000000	                          call 0x4000950	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000950	          0x4889de	                            mov rsi, rbx	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000953	          0x4889c2	                            mov rdx, rax	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000956	          0x4889ef	                            mov rdi, rbp	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000959	      0xe800000000	                          call 0x400095e	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400095e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       209	ref-cache.c	FUNCTION_14	IF_2
0x4000961	            0x741d	                            je 0x4000980	       209	ref-cache.c	FUNCTION_14	IF_2
0x4000963	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       211	ref-cache.c	FUNCTION_14
0x4000967	            0x4898	                                    cdqe	       211	ref-cache.c	FUNCTION_14
0x4000969	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       211	ref-cache.c	FUNCTION_14
0x400096d	          0xf60010	                   test byte [rax], 0x10	       212	ref-cache.c	FUNCTION_14
0x4000970	            0x750e	                           jne 0x4000980	       212	ref-cache.c	FUNCTION_14
0x4000972	        0x4883c408	                              add rsp, 8	       213	ref-cache.c	FUNCTION_14
0x4000976	              0x5b	                                 pop rbx	       213	ref-cache.c	FUNCTION_14
0x4000977	              0x5d	                                 pop rbp	       213	ref-cache.c	FUNCTION_14
0x4000978	              0xc3	                                     ret	       213	ref-cache.c	FUNCTION_14
0x4000979	     0xf1f80000000	                         nop dword [rax]	       213	ref-cache.c	FUNCTION_14
0x4000980	        0x4883c408	                              add rsp, 8	       213	ref-cache.c	FUNCTION_14
0x4000984	            0x31c0	                            xor eax, eax	       207	ref-cache.c	FUNCTION_14	IF_1
0x4000986	              0x5b	                                 pop rbx	       213	ref-cache.c	FUNCTION_14
0x4000987	              0x5d	                                 pop rbp	       213	ref-cache.c	FUNCTION_14
0x4000988	              0xc3	                                     ret	       213	ref-cache.c	FUNCTION_14
cache_ref_iterator_advance	SWITCH,0:CALL,4:WHILE,1:DO,0:functions,0:ELSE,2:IF,6:FOR,0	128
0x4000380	            0x4156	                                push r14	       441	ref-cache.c	FUNCTION_21
0x4000382	            0x4155	                                push r13	       441	ref-cache.c	FUNCTION_21
0x4000384	          0x4989fd	                            mov r13, rdi	       441	ref-cache.c	FUNCTION_21
0x4000387	            0x4154	                                push r12	       441	ref-cache.c	FUNCTION_21
0x4000389	              0x55	                                push rbp	       441	ref-cache.c	FUNCTION_21
0x400038a	    0x48bdffffffff	          movabs rbp, 0xfffffffffffffff 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000394	              0x53	                                push rbx	       441	ref-cache.c	FUNCTION_21
0x4000395	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       441	ref-cache.c	FUNCTION_21
0x4000399	     0xf1f80000000	                         nop dword [rax]	       441	ref-cache.c	FUNCTION_21
0x40003a0	        0x498b5540	            mov rdx, qword [r13 + 0x40] 	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x40003a4	        0x48c1e004	                              shl rax, 4	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x40003a8	      0x488d5c02f0	             lea rbx, [rdx + rax - 0x10]	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x40003ad	          0x8b430c	              mov eax, dword [rbx + 0xc]	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x40003b0	          0x4c8b23	                    mov r12, qword [rbx]	       448	ref-cache.c	FUNCTION_21	WHILE_1
0x40003b3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x40003b6	          0x4c89e2	                            mov rdx, r12	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x40003b9	     0xf8461010000	                            je 0x4000520	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x40003bf	          0x83c001	                              add eax, 1	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x40003c2	            0x3b02	                    cmp eax, dword [rdx]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x40003c4	          0x89430c	              mov dword [rbx + 0xc], eax	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x40003c7	     0xf84a3000000	                            je 0x4000470	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x40003cd	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x40003d2	        0x448b6308	               mov r12d, dword [rbx + 8]	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x40003d6	            0x4898	                                    cdqe	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x40003d8	        0x4183fc01	                             cmp r12d, 1	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x40003dc	        0x4c8b34c2	            mov r14, qword [rdx + rax*8]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x40003e0	     0xf84c2000000	                            je 0x40004a8	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x40003e6	        0x41f60610	                   test byte [r14], 0x10	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003ea	     0xf84fc000000	                            je 0x40004ec	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003f0	        0x498b4d28	            mov rcx, qword [r13 + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003f4	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003f8	        0x488d5101	                      lea rdx, [rcx + 1]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003fc	          0x4839c2	                            cmp rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003ff	     0xf860b010000	                           jbe 0x4000510	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000405	      0x488d444030	          lea rax, [rax + rax*2 + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400040a	          0x48d1e8	                              shr rax, 1	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400040d	          0x4839c2	                            cmp rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000410	     0xf8682000000	                           jbe 0x4000498	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000416	        0x49895530	             mov qword [r13 + 0x30], rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400041a	          0x4839ea	                            cmp rdx, rbp	       795	git-compat-util.h	FUNCTION_39	IF_1
0x400041d	     0xf8727010000	                            ja 0x400054a	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000423	        0x498b7d40	            mov rdi, qword [r13 + 0x40] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000427	          0x4889d6	                            mov rsi, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400042a	        0x48c1e604	                              shl rsi, 4	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400042e	      0xe800000000	                          call 0x4000433	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000433	        0x498b4d28	            mov rcx, qword [r13 + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000437	        0x49894540	             mov qword [r13 + 0x40], rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400043b	        0x488d5101	                      lea rdx, [rcx + 1]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400043f	        0x48c1e104	                              shl rcx, 4	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000443	        0x49895528	             mov qword [r13 + 0x28], rdx	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000447	          0x4c89f7	                            mov rdi, r14	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x400044a	        0x488d1c08	                    lea rbx, [rax + rcx]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400044e	      0xe800000000	                          call 0x4000453	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x4000453	        0x44896308	               mov dword [rbx + 8], r12d	       480	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000457	          0x488903	                    mov qword [rbx], rax	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x400045a	    0xc7430cffffff	      mov dword [rbx + 0xc], 0xffffffff 	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000461	        0x498b4528	            mov rax, qword [r13 + 0x28] 	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000465	      0xe936ffffff	                           jmp 0x40003a0	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400046a	    0x660f1f440000	                    nop word [rax + rax]	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000470	        0x498b4528	            mov rax, qword [r13 + 0x28] 	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000474	        0x4883e801	                              sub rax, 1	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000478	          0x4885c0	                           test rax, rax	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x400047b	        0x49894528	             mov qword [r13 + 0x28], rax	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x400047f	     0xf851bffffff	                           jne 0x40003a0	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000485	              0x5b	                                 pop rbx	       489	ref-cache.c	FUNCTION_21
0x4000486	          0x4c89ef	                            mov rdi, r13	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x4000489	              0x5d	                                 pop rbp	       489	ref-cache.c	FUNCTION_21
0x400048a	            0x415c	                                 pop r12	       489	ref-cache.c	FUNCTION_21
0x400048c	            0x415d	                                 pop r13	       489	ref-cache.c	FUNCTION_21
0x400048e	            0x415e	                                 pop r14	       489	ref-cache.c	FUNCTION_21
0x4000490	      0xe900000000	                           jmp 0x4000495	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x4000495	           0xf1f00	                         nop dword [rax]	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x4000498	        0x49894530	             mov qword [r13 + 0x30], rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400049c	          0x4889c2	                            mov rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400049f	      0xe976ffffff	                           jmp 0x400041a	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004a4	         0xf1f4000	                         nop dword [rax]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004a8	        0x498b4538	            mov rax, qword [r13 + 0x38] 	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x40004ac	        0x498d5628	                   lea rdx, [r14 + 0x28]	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x40004b0	           0xfb608	                   movzx ecx, byte [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004b3	            0x84c9	                             test cl, cl	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004b5	            0x7428	                            je 0x40004df	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004b7	      0x410fb67628	           movzx esi, byte [r14 + 0x28] 	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004bc	          0x4038f1	                             cmp cl, sil	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004bf	            0x740f	                            je 0x40004d0	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004c1	            0xeb75	                           jmp 0x4000538	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004c3	       0xf1f440000	                   nop dword [rax + rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004c8	           0xfb632	                   movzx esi, byte [rdx]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004cb	          0x4038f1	                             cmp cl, sil	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004ce	            0x7568	                           jne 0x4000538	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004d0	        0x4883c001	                              add rax, 1	       331	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004d4	           0xfb608	                   movzx ecx, byte [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004d7	        0x4883c201	                              add rdx, 1	       330	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004db	            0x84c9	                             test cl, cl	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004dd	            0x75e9	                           jne 0x40004c8	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40004df	          0x4531e4	                          xor r12d, r12d	       334	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x40004e2	        0x41f60610	                   test byte [r14], 0x10	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004e6	     0xf8504ffffff	                           jne 0x40003f0	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004ec	        0x498d4628	                   lea rax, [r14 + 0x28]	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x40004f0	              0x5b	                                 pop rbx	       489	ref-cache.c	FUNCTION_21
0x40004f1	        0x49894510	             mov qword [r13 + 0x10], rax	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x40004f5	        0x498d4608	                      lea rax, [r14 + 8]	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x40004f9	              0x5d	                                 pop rbp	       489	ref-cache.c	FUNCTION_21
0x40004fa	        0x49894518	             mov qword [r13 + 0x18], rax	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x40004fe	        0x410fb606	                   movzx eax, byte [r14]	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4000502	            0x415c	                                 pop r12	       489	ref-cache.c	FUNCTION_21
0x4000504	        0x41894520	             mov dword [r13 + 0x20], eax	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4000508	            0x31c0	                            xor eax, eax	       489	ref-cache.c	FUNCTION_21
0x400050a	            0x415d	                                 pop r13	       489	ref-cache.c	FUNCTION_21
0x400050c	            0x415e	                                 pop r14	       489	ref-cache.c	FUNCTION_21
0x400050e	              0xc3	                                     ret	       489	ref-cache.c	FUNCTION_21
0x400050f	              0x90	                                     nop	       489	ref-cache.c	FUNCTION_21
0x4000510	        0x498b4540	            mov rax, qword [r13 + 0x40] 	       489	ref-cache.c	FUNCTION_21
0x4000514	      0xe926ffffff	                           jmp 0x400043f	       489	ref-cache.c	FUNCTION_21
0x4000519	     0xf1f80000000	                         nop dword [rax]	       489	ref-cache.c	FUNCTION_21
0x4000520	          0x4c89e7	                            mov rdi, r12	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000523	      0xe8a8fbffff	                   call sym.sort_ref_dir	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000528	          0x8b430c	              mov eax, dword [rbx + 0xc]	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x400052b	          0x488b13	                    mov rdx, qword [rbx]	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x400052e	      0xe98cfeffff	                           jmp 0x40003bf	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000533	       0xf1f440000	                   nop dword [rax + rax]	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000538	          0x4084f6	                           test sil, sil	       335	ref-cache.c	FUNCTION_19	IF_2
0x400053b	     0xf84a5feffff	                            je 0x40003e6	       335	ref-cache.c	FUNCTION_19	IF_2
0x4000541	        0x498b4528	            mov rax, qword [r13 + 0x28] 	       335	ref-cache.c	FUNCTION_19	IF_2
0x4000545	      0xe956feffff	                           jmp 0x40003a0	       335	ref-cache.c	FUNCTION_19	IF_2
0x400054a	      0xbe10000000	                           mov esi, 0x10	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x400054f	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000554	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000556	      0xe800000000	                          call 0x400055b	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
add_entry_to_dir	SWITCH,0:CALL,1:WHILE,0:DO,0:functions,0:ELSE,0:IF,1:FOR,0	64
0x4000240	            0x4154	                                push r12	         8	ref-cache.c	FUNCTION_1
0x4000242	              0x55	                                push rbp	         8	ref-cache.c	FUNCTION_1
0x4000243	          0x4989f4	                            mov r12, rsi	         8	ref-cache.c	FUNCTION_1
0x4000246	              0x53	                                push rbx	         8	ref-cache.c	FUNCTION_1
0x4000247	          0x48630f	                 movsxd rcx, dword [rdi]	         9	ref-cache.c	FUNCTION_1
0x400024a	          0x4889fb	                            mov rbx, rdi	         8	ref-cache.c	FUNCTION_1
0x400024d	          0x8b4704	                mov eax, dword [rdi + 4]	         9	ref-cache.c	FUNCTION_1
0x4000250	            0x39c1	                            cmp ecx, eax	         9	ref-cache.c	FUNCTION_1
0x4000252	            0x7d2c	                           jge 0x4000280	         9	ref-cache.c	FUNCTION_1
0x4000254	        0x488b4718	            mov rax, qword [rdi + 0x18] 	         9	ref-cache.c	FUNCTION_1
0x4000258	          0x8d6901	                      lea ebp, [rcx + 1]	        10	ref-cache.c	FUNCTION_1
0x400025b	    0x488d14cd0000	                        lea rdx, [rcx*8]	        10	ref-cache.c	FUNCTION_1
0x4000263	          0x83fd01	                              cmp ebp, 1	        12	ref-cache.c	FUNCTION_1	IF_1
0x4000266	            0x892b	                    mov dword [rbx], ebp	        10	ref-cache.c	FUNCTION_1
0x4000268	        0x4c8924c8	            mov qword [rax + rcx*8], r12	        10	ref-cache.c	FUNCTION_1
0x400026c	            0x7470	                            je 0x40002de	        12	ref-cache.c	FUNCTION_1	IF_1
0x400026e	          0x8b4308	                mov eax, dword [rbx + 8]	        12	ref-cache.c	FUNCTION_1	IF_1
0x4000271	          0x83c001	                              add eax, 1	        12	ref-cache.c	FUNCTION_1	IF_1
0x4000274	            0x39c5	                            cmp ebp, eax	        12	ref-cache.c	FUNCTION_1	IF_1
0x4000276	            0x7448	                            je 0x40002c0	        12	ref-cache.c	FUNCTION_1	IF_1
0x4000278	              0x5b	                                 pop rbx	        17	ref-cache.c	FUNCTION_1
0x4000279	              0x5d	                                 pop rbp	        17	ref-cache.c	FUNCTION_1
0x400027a	            0x415c	                                 pop r12	        17	ref-cache.c	FUNCTION_1
0x400027c	              0xc3	                                     ret	        17	ref-cache.c	FUNCTION_1
0x400027d	           0xf1f00	                         nop dword [rax]	        17	ref-cache.c	FUNCTION_1
0x4000280	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	         9	ref-cache.c	FUNCTION_1
0x4000284	            0x89c2	                            mov edx, eax	         9	ref-cache.c	FUNCTION_1
0x4000286	          0xc1ea1f	                           shr edx, 0x1f	         9	ref-cache.c	FUNCTION_1
0x4000289	             0x1c2	                            add edx, eax	         9	ref-cache.c	FUNCTION_1
0x400028b	            0xd1fa	                              sar edx, 1	         9	ref-cache.c	FUNCTION_1
0x400028d	            0x39d1	                            cmp ecx, edx	         9	ref-cache.c	FUNCTION_1
0x400028f	            0x7d5f	                           jge 0x40002f0	         9	ref-cache.c	FUNCTION_1
0x4000291	          0x895704	                mov dword [rdi + 4], edx	         9	ref-cache.c	FUNCTION_1
0x4000294	          0x4863d2	                         movsxd rdx, edx	         9	ref-cache.c	FUNCTION_1
0x4000297	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40002a1	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40002a4	            0x7752	                            ja 0x40002f8	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40002a6	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	         9	ref-cache.c	FUNCTION_1
0x40002aa	    0x488d34d50000	                        lea rsi, [rdx*8]	         9	ref-cache.c	FUNCTION_1
0x40002b2	      0xe800000000	                          call 0x40002b7	         9	ref-cache.c	FUNCTION_1
0x40002b7	          0x48630b	                 movsxd rcx, dword [rbx]	         9	ref-cache.c	FUNCTION_1
0x40002ba	        0x48894318	             mov qword [rbx + 0x18], rax	         9	ref-cache.c	FUNCTION_1
0x40002be	            0xeb98	                           jmp 0x4000258	         9	ref-cache.c	FUNCTION_1
0x40002c0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002c4	      0x488b7c10f8	          mov rdi, qword [rax + rdx - 8]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002c9	        0x488b34c8	            mov rsi, qword [rax + rcx*8]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002cd	        0x4883c728	                           add rdi, 0x28	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002d1	        0x4883c628	                           add rsi, 0x28	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002d5	      0xe800000000	                          call 0x40002da	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002da	            0x85c0	                           test eax, eax	        13	ref-cache.c	FUNCTION_1	IF_1
0x40002dc	            0x799a	                           jns 0x4000278	        13	ref-cache.c	FUNCTION_1	IF_1
0x40002de	          0x896b08	                mov dword [rbx + 8], ebp	        16	ref-cache.c	FUNCTION_1	IF_1
0x40002e1	              0x5b	                                 pop rbx	        17	ref-cache.c	FUNCTION_1
0x40002e2	              0x5d	                                 pop rbp	        17	ref-cache.c	FUNCTION_1
0x40002e3	            0x415c	                                 pop r12	        17	ref-cache.c	FUNCTION_1
0x40002e5	              0xc3	                                     ret	        17	ref-cache.c	FUNCTION_1
0x40002e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        17	ref-cache.c	FUNCTION_1
0x40002f0	          0x8d5101	                      lea edx, [rcx + 1]	         9	ref-cache.c	FUNCTION_1
0x40002f3	          0x895704	                mov dword [rdi + 4], edx	         9	ref-cache.c	FUNCTION_1
0x40002f6	            0xeb9c	                           jmp 0x4000294	         9	ref-cache.c	FUNCTION_1
0x40002f8	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40002fd	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000302	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000304	      0xe800000000	                          call 0x4000309	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
cache_ref_iterator_peel	SWITCH,0:CALL,1:WHILE,0:DO,0:functions,0:ELSE,0:IF,0:FOR,0	2
0x4000230	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       494	ref-cache.c	FUNCTION_22	CALL_1
0x4000234	      0xe900000000	                           jmp 0x4000239	       494	ref-cache.c	FUNCTION_22	CALL_1
free_ref_entry	SWITCH,0:CALL,2:WHILE,0:DO,0:functions,0:ELSE,0:IF,1:FOR,0	32
0x4000060	            0x4154	                                push r12	        59	ref-cache.c	FUNCTION_5
0x4000062	              0x55	                                push rbp	        59	ref-cache.c	FUNCTION_5
0x4000063	          0x4989fc	                            mov r12, rdi	        59	ref-cache.c	FUNCTION_5
0x4000066	              0x53	                                push rbx	        59	ref-cache.c	FUNCTION_5
0x4000067	          0xf60710	                   test byte [rdi], 0x10	        60	ref-cache.c	FUNCTION_5	IF_1
0x400006a	            0x7514	                           jne 0x4000080	        60	ref-cache.c	FUNCTION_5	IF_1
0x400006c	              0x5b	                                 pop rbx	        68	ref-cache.c	FUNCTION_5
0x400006d	          0x4c89e7	                            mov rdi, r12	        67	ref-cache.c	FUNCTION_5	CALL_2
0x4000070	              0x5d	                                 pop rbp	        68	ref-cache.c	FUNCTION_5
0x4000071	            0x415c	                                 pop r12	        68	ref-cache.c	FUNCTION_5
0x4000073	      0xe900000000	                           jmp 0x4000078	        67	ref-cache.c	FUNCTION_5	CALL_2
0x4000078	     0xf1f84000000	                   nop dword [rax + rax]	        67	ref-cache.c	FUNCTION_5	CALL_2
0x4000080	          0x8b4708	                mov eax, dword [rdi + 8]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4000083	            0x31ed	                            xor ebp, ebp	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4000085	            0x31db	                            xor ebx, ebx	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4000087	            0x85c0	                           test eax, eax	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4000089	            0x7e21	                           jle 0x40000ac	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400008b	       0xf1f440000	                   nop dword [rax + rax]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4000090	      0x498b442420	            mov rax, qword [r12 + 0x20] 	        83	ref-cache.c	FUNCTION_7	CALL_1
0x4000095	          0x83c301	                              add ebx, 1	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4000098	        0x488b3c28	              mov rdi, qword [rax + rbp]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x400009c	        0x4883c508	                              add rbp, 8	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40000a0	      0xe8bbffffff	                 call sym.free_ref_entry	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40000a5	      0x413b5c2408	                cmp ebx, dword [r12 + 8]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40000aa	            0x7ce4	                            jl 0x4000090	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40000ac	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	        84	ref-cache.c	FUNCTION_7
0x40000b1	      0xe800000000	                          call 0x40000b6	        84	ref-cache.c	FUNCTION_7
0x40000b6	              0x5b	                                 pop rbx	        68	ref-cache.c	FUNCTION_5
0x40000b7	          0x4c89e7	                            mov rdi, r12	        67	ref-cache.c	FUNCTION_5	CALL_2
0x40000ba	              0x5d	                                 pop rbp	        68	ref-cache.c	FUNCTION_5
0x40000bb	            0x415c	                                 pop r12	        68	ref-cache.c	FUNCTION_5
0x40000bd	      0xe900000000	                           jmp 0x40000c2	        67	ref-cache.c	FUNCTION_5	CALL_2
find_containing_dir	SWITCH,0:CALL,3:WHILE,0:DO,0:functions,0:ELSE,0:IF,1:FOR,1	60
0x4000870	            0x4156	                                push r14	       185	ref-cache.c	FUNCTION_13
0x4000872	            0x4155	                                push r13	       185	ref-cache.c	FUNCTION_13
0x4000874	          0x4989f5	                            mov r13, rsi	       185	ref-cache.c	FUNCTION_13
0x4000877	            0x4154	                                push r12	       185	ref-cache.c	FUNCTION_13
0x4000879	              0x55	                                push rbp	       185	ref-cache.c	FUNCTION_13
0x400087a	      0xbe2f000000	                           mov esi, 0x2f	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x400087f	              0x53	                                push rbx	       185	ref-cache.c	FUNCTION_13
0x4000880	          0x4889fd	                            mov rbp, rdi	       185	ref-cache.c	FUNCTION_13
0x4000883	          0x4c89ef	                            mov rdi, r13	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000886	          0x4189d6	                           mov r14d, edx	       185	ref-cache.c	FUNCTION_13
0x4000889	      0xe800000000	                          call 0x400088e	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x400088e	          0x4885c0	                           test rax, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000891	     0xf8483000000	                            je 0x400091a	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000897	          0x4889c3	                            mov rbx, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x400089a	            0xeb34	                           jmp 0x40008d0	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x400089c	         0xf1f4000	                         nop dword [rax]	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008a0	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x40008a4	            0x4898	                                    cdqe	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x40008a6	        0x4c8b24c2	            mov r12, qword [rdx + rax*8]	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x40008aa	          0x4c89e7	                            mov rdi, r12	       171	ref-cache.c	FUNCTION_12	CALL_4
0x40008ad	      0xe800000000	                          call 0x40008b2	       171	ref-cache.c	FUNCTION_12	CALL_4
0x40008b2	          0x4885c0	                           test rax, rax	       191	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x40008b5	          0x4889c5	                            mov rbp, rax	       171	ref-cache.c	FUNCTION_12	CALL_4
0x40008b8	            0x745e	                            je 0x4000918	       191	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x40008ba	        0x488d7b01	                      lea rdi, [rbx + 1]	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008be	      0xbe2f000000	                           mov esi, 0x2f	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008c3	      0xe800000000	                          call 0x40008c8	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008c8	          0x4885c0	                           test rax, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008cb	          0x4889c3	                            mov rbx, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008ce	            0x744a	                            je 0x400091a	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008d0	          0x4989dc	                            mov r12, rbx	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40008d3	          0x4c89ee	                            mov rsi, r13	       155	ref-cache.c	FUNCTION_12	CALL_1
0x40008d6	          0x4889ef	                            mov rdi, rbp	       155	ref-cache.c	FUNCTION_12	CALL_1
0x40008d9	          0x4d29ec	                            sub r12, r13	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40008dc	        0x4983c401	                              add r12, 1	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40008e0	          0x4c89e2	                            mov rdx, r12	       155	ref-cache.c	FUNCTION_12	CALL_1
0x40008e3	      0xe800000000	                          call 0x40008e8	       155	ref-cache.c	FUNCTION_12	CALL_1
0x40008e8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       157	ref-cache.c	FUNCTION_12	IF_1
0x40008eb	            0x75b3	                           jne 0x40008a0	       157	ref-cache.c	FUNCTION_12	IF_1
0x40008ed	          0x4585f6	                         test r14d, r14d	       158	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x40008f0	            0x7426	                            je 0x4000918	       158	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x40008f2	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x40008f6	          0x4c89e2	                            mov rdx, r12	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x40008f9	          0x4c89ee	                            mov rsi, r13	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x40008fc	            0x31c9	                            xor ecx, ecx	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x40008fe	      0xe800000000	                          call 0x4000903	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x4000903	          0x4889ef	                            mov rdi, rbp	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000906	          0x4889c6	                            mov rsi, rax	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000909	          0x4989c4	                            mov r12, rax	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x400090c	      0xe800000000	                          call 0x4000911	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000911	            0xeb97	                           jmp 0x40008aa	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000913	       0xf1f440000	                   nop dword [rax + rax]	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000918	            0x31ed	                            xor ebp, ebp	       192	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x400091a	              0x5b	                                 pop rbx	       199	ref-cache.c	FUNCTION_13
0x400091b	          0x4889e8	                            mov rax, rbp	       199	ref-cache.c	FUNCTION_13
0x400091e	              0x5d	                                 pop rbp	       199	ref-cache.c	FUNCTION_13
0x400091f	            0x415c	                                 pop r12	       199	ref-cache.c	FUNCTION_13
0x4000921	            0x415d	                                 pop r13	       199	ref-cache.c	FUNCTION_13
0x4000923	            0x415e	                                 pop r14	       199	ref-cache.c	FUNCTION_13
0x4000925	              0xc3	                                     ret	       199	ref-cache.c	FUNCTION_13
remove_entry_from_dir	SWITCH,0:CALL,7:WHILE,0:DO,0:functions,0:ELSE,1:IF,4:FOR,0	84
0x4000990	            0x4155	                                push r13	       216	ref-cache.c	FUNCTION_15
0x4000992	            0x4154	                                push r12	       216	ref-cache.c	FUNCTION_15
0x4000994	              0x55	                                push rbp	       216	ref-cache.c	FUNCTION_15
0x4000995	              0x53	                                push rbx	       216	ref-cache.c	FUNCTION_15
0x4000996	          0x4889fb	                            mov rbx, rdi	       216	ref-cache.c	FUNCTION_15
0x4000999	          0x4889f7	                            mov rdi, rsi	       217	ref-cache.c	FUNCTION_15	CALL_1
0x400099c	          0x4889f5	                            mov rbp, rsi	       216	ref-cache.c	FUNCTION_15
0x400099f	        0x4883ec08	                              sub rsp, 8	       216	ref-cache.c	FUNCTION_15
0x40009a3	      0xe800000000	                          call 0x40009a8	       217	ref-cache.c	FUNCTION_15	CALL_1
0x40009a8	          0x4c63e0	                         movsxd r12, eax	       220	ref-cache.c	FUNCTION_15
0x40009ab	    0x42807c25ff2f	         cmp byte [rbp + r12 - 1], 0x2f 	       221	ref-cache.c	FUNCTION_15	IF_1
0x40009b1	     0xf84a9000000	                            je 0x4000a60	       221	ref-cache.c	FUNCTION_15	IF_1
0x40009b7	          0x4889df	                            mov rdi, rbx	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40009ba	            0x31d2	                            xor edx, edx	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40009bc	          0x4889ee	                            mov rsi, rbp	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40009bf	      0xe8acfeffff	            call sym.find_containing_dir	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40009c4	          0x4889c3	                            mov rbx, rax	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40009c7	          0x4885db	                           test rbx, rbx	       234	ref-cache.c	FUNCTION_15	IF_2
0x40009ca	     0xf84c0000000	                            je 0x4000a90	       234	ref-cache.c	FUNCTION_15	IF_2
0x40009d0	          0x4889ee	                            mov rsi, rbp	       236	ref-cache.c	FUNCTION_15	CALL_6
0x40009d3	          0x4c89e2	                            mov rdx, r12	       236	ref-cache.c	FUNCTION_15	CALL_6
0x40009d6	          0x4889df	                            mov rdi, rbx	       236	ref-cache.c	FUNCTION_15	CALL_6
0x40009d9	      0xe800000000	                          call 0x40009de	       236	ref-cache.c	FUNCTION_15	CALL_6
0x40009de	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       237	ref-cache.c	FUNCTION_15	IF_3
0x40009e1	            0x89c5	                            mov ebp, eax	       236	ref-cache.c	FUNCTION_15	CALL_6
0x40009e3	     0xf84a7000000	                            je 0x4000a90	       237	ref-cache.c	FUNCTION_15	IF_3
0x40009e9	          0x4863c8	                         movsxd rcx, eax	       239	ref-cache.c	FUNCTION_15
0x40009ec	            0x8b03	                    mov eax, dword [rbx]	       241	ref-cache.c	FUNCTION_15
0x40009ee	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       239	ref-cache.c	FUNCTION_15
0x40009f2	        0x48c1e103	                              shl rcx, 3	       239	ref-cache.c	FUNCTION_15
0x40009f6	            0x89c2	                            mov edx, eax	       241	ref-cache.c	FUNCTION_15
0x40009f8	        0x488d3c0e	                    lea rdi, [rsi + rcx]	       239	ref-cache.c	FUNCTION_15
0x40009fc	            0x29ea	                            sub edx, ebp	       241	ref-cache.c	FUNCTION_15
0x40009fe	          0x83ea01	                              sub edx, 1	       241	ref-cache.c	FUNCTION_15
0x4000a01	          0x4c8b27	                    mov r12, qword [rdi]	       239	ref-cache.c	FUNCTION_15
0x4000a04	          0x4863d2	                         movsxd rdx, edx	       241	ref-cache.c	FUNCTION_15
0x4000a07	          0x4885d2	                           test rdx, rdx	       861	git-compat-util.h	FUNCTION_42	IF_1
0x4000a0a	            0x741f	                            je 0x4000a2b	       861	git-compat-util.h	FUNCTION_42	IF_1
0x4000a0c	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000a16	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000a19	            0x777c	                            ja 0x4000a97	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000a1b	      0x488d740e08	                lea rsi, [rsi + rcx + 8]	        59	string3.h	FUNCTION_53	CALL_3
0x4000a20	        0x48c1e203	                              shl rdx, 3	        59	string3.h	FUNCTION_53	CALL_3
0x4000a24	      0xe800000000	                          call 0x4000a29	        59	string3.h	FUNCTION_53	CALL_3
0x4000a29	            0x8b03	                    mov eax, dword [rbx]	        59	string3.h	FUNCTION_53	CALL_3
0x4000a2b	          0x83e801	                              sub eax, 1	       243	ref-cache.c	FUNCTION_15
0x4000a2e	            0x8903	                    mov dword [rbx], eax	       243	ref-cache.c	FUNCTION_15
0x4000a30	          0x8b4308	                mov eax, dword [rbx + 8]	       244	ref-cache.c	FUNCTION_15	IF_4
0x4000a33	            0x39c5	                            cmp ebp, eax	       244	ref-cache.c	FUNCTION_15	IF_4
0x4000a35	            0x7c19	                            jl 0x4000a50	       244	ref-cache.c	FUNCTION_15	IF_4
0x4000a37	          0x4c89e7	                            mov rdi, r12	       246	ref-cache.c	FUNCTION_15	CALL_7
0x4000a3a	      0xe821f6ffff	                 call sym.free_ref_entry	       246	ref-cache.c	FUNCTION_15	CALL_7
0x4000a3f	            0x8b03	                    mov eax, dword [rbx]	       247	ref-cache.c	FUNCTION_15
0x4000a41	        0x4883c408	                              add rsp, 8	       248	ref-cache.c	FUNCTION_15
0x4000a45	              0x5b	                                 pop rbx	       248	ref-cache.c	FUNCTION_15
0x4000a46	              0x5d	                                 pop rbp	       248	ref-cache.c	FUNCTION_15
0x4000a47	            0x415c	                                 pop r12	       248	ref-cache.c	FUNCTION_15
0x4000a49	            0x415d	                                 pop r13	       248	ref-cache.c	FUNCTION_15
0x4000a4b	              0xc3	                                     ret	       248	ref-cache.c	FUNCTION_15
0x4000a4c	         0xf1f4000	                         nop dword [rax]	       248	ref-cache.c	FUNCTION_15
0x4000a50	          0x83e801	                              sub eax, 1	       245	ref-cache.c	FUNCTION_15	IF_4
0x4000a53	          0x894308	                mov dword [rbx + 8], eax	       245	ref-cache.c	FUNCTION_15	IF_4
0x4000a56	            0xebdf	                           jmp 0x4000a37	       245	ref-cache.c	FUNCTION_15	IF_4
0x4000a58	     0xf1f84000000	                   nop dword [rax + rax]	       245	ref-cache.c	FUNCTION_15	IF_4
0x4000a60	          0x83e801	                              sub eax, 1	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a63	          0x4889ef	                            mov rdi, rbp	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a66	          0x4863f0	                         movsxd rsi, eax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a69	      0xe800000000	                          call 0x4000a6e	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a6e	          0x4889df	                            mov rdi, rbx	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a71	          0x4989c5	                            mov r13, rax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a74	            0x31d2	                            xor edx, edx	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a76	          0x4889c6	                            mov rsi, rax	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a79	      0xe8f2fdffff	            call sym.find_containing_dir	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a7e	          0x4c89ef	                            mov rdi, r13	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000a81	          0x4889c3	                            mov rbx, rax	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a84	      0xe800000000	                          call 0x4000a89	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000a89	      0xe939ffffff	                           jmp 0x40009c7	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000a8e	            0x6690	                                     nop	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000a90	      0xb8ffffffff	                     mov eax, 0xffffffff	       235	ref-cache.c	FUNCTION_15	IF_2
0x4000a95	            0xebaa	                           jmp 0x4000a41	       235	ref-cache.c	FUNCTION_15	IF_2
0x4000a97	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000a9c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000aa1	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000aa3	      0xe800000000	                          call 0x4000aa8	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
ref_entry_cmp	SWITCH,0:CALL,1:WHILE,0:DO,0:functions,0:ELSE,0:IF,0:FOR,0	5
0x4000040	          0x488b3f	                    mov rdi, qword [rdi]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x4000043	          0x488b36	                    mov rsi, qword [rsi]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x4000046	        0x4883c728	                           add rdi, 0x28	       104	ref-cache.c	FUNCTION_9	CALL_1
0x400004a	        0x4883c628	                           add rsi, 0x28	       104	ref-cache.c	FUNCTION_9	CALL_1
0x400004e	      0xe900000000	                           jmp 0x4000053	       104	ref-cache.c	FUNCTION_9	CALL_1
sort_ref_dir	SWITCH,0:CALL,2:WHILE,0:DO,0:functions,0:ELSE,1:IF,2:FOR,1	87
0x40000d0	            0x8b07	                    mov eax, dword [rdi]	       295	ref-cache.c	FUNCTION_18	IF_1
0x40000d2	          0x394708	                cmp dword [rdi + 8], eax	       295	ref-cache.c	FUNCTION_18	IF_1
0x40000d5	     0xf84fb000000	                            je 0x40001d6	       295	ref-cache.c	FUNCTION_18	IF_1
0x40000db	            0x4157	                                push r15	       287	ref-cache.c	FUNCTION_18
0x40000dd	            0x4156	                                push r14	       287	ref-cache.c	FUNCTION_18
0x40000df	          0x4863f0	                         movsxd rsi, eax	       298	ref-cache.c	FUNCTION_18
0x40000e2	            0x4155	                                push r13	       287	ref-cache.c	FUNCTION_18
0x40000e4	            0x4154	                                push r12	       287	ref-cache.c	FUNCTION_18
0x40000e6	          0x4989fd	                            mov r13, rdi	       287	ref-cache.c	FUNCTION_18
0x40000e9	              0x55	                                push rbp	       287	ref-cache.c	FUNCTION_18
0x40000ea	              0x53	                                push rbx	       287	ref-cache.c	FUNCTION_18
0x40000eb	        0x4883ec18	                           sub rsp, 0x18	       287	ref-cache.c	FUNCTION_18
0x40000ef	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_49	IF_1
0x40000f3	            0x7617	                           jbe 0x400010c	      1048	git-compat-util.h	FUNCTION_49	IF_1
0x40000f5	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x40000f9	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x40000fe	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x4000103	      0xe800000000	                          call 0x4000108	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x4000108	        0x418b4500	                    mov eax, dword [r13]	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x400010c	            0x85c0	                           test eax, eax	       301	ref-cache.c	FUNCTION_18	FOR_1
0x400010e	     0xf8ec4000000	                           jle 0x40001d8	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000114	          0x4531e4	                          xor r12d, r12d	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000117	          0x4531ff	                          xor r15d, r15d	       301	ref-cache.c	FUNCTION_18	FOR_1
0x400011a	            0x31ed	                            xor ebp, ebp	       301	ref-cache.c	FUNCTION_18	FOR_1
0x400011c	          0x4531f6	                          xor r14d, r14d	       301	ref-cache.c	FUNCTION_18	FOR_1
0x400011f	            0xeb77	                           jmp 0x4000198	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000121	     0xf1f80000000	                         nop dword [rax]	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000128	        0x498d4728	                   lea rax, [r15 + 0x28]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x400012c	        0x488d7328	                   lea rsi, [rbx + 0x28]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000130	        0x48891424	                    mov qword [rsp], rdx	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000134	          0x4889c7	                            mov rdi, rax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000137	      0x4889442408	                mov qword [rsp + 8], rax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x400013c	      0xe800000000	                          call 0x4000141	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000141	            0x85c0	                           test eax, eax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000143	        0x488b1424	                    mov rdx, qword [rsp]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000147	            0x755c	                           jne 0x40001a5	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000149	        0x41f60710	                   test byte [r15], 0x10	       271	ref-cache.c	FUNCTION_17	IF_2
0x400014d	     0xf858a000000	                           jne 0x40001dd	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000153	          0xf60310	                   test byte [rbx], 0x10	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000156	     0xf8581000000	                           jne 0x40001dd	       271	ref-cache.c	FUNCTION_17	IF_2
0x400015c	        0x488d7308	                      lea rsi, [rbx + 8]	       975	cache.h	FUNCTION_71	CALL_1
0x4000160	        0x498d7f08	                      lea rdi, [r15 + 8]	       975	cache.h	FUNCTION_71	CALL_1
0x4000164	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_71	CALL_1
0x4000169	      0xe800000000	                          call 0x400016e	       975	cache.h	FUNCTION_71	CALL_1
0x400016e	            0x85c0	                           test eax, eax	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000170	      0x488b742408	                mov rsi, qword [rsp + 8]	       276	ref-cache.c	FUNCTION_17	CALL_4
0x4000175	            0x7577	                           jne 0x40001ee	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000177	            0x31c0	                            xor eax, eax	       278	ref-cache.c	FUNCTION_17	CALL_5
0x4000179	      0xbf00000000	                              mov edi, 0	       278	ref-cache.c	FUNCTION_17	CALL_5
0x400017e	          0x83c501	                              add ebp, 1	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000181	      0xe800000000	                          call 0x4000186	       278	ref-cache.c	FUNCTION_17	CALL_5
0x4000186	          0x4889df	                            mov rdi, rbx	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_2
0x4000189	        0x4983c408	                              add r12, 8	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_2
0x400018d	      0xe8cefeffff	                 call sym.free_ref_entry	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_2
0x4000192	        0x41396d00	                    cmp dword [r13], ebp	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000196	            0x7e28	                           jle 0x40001c0	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000198	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	       302	ref-cache.c	FUNCTION_18	FOR_1
0x400019c	          0x4d85ff	                           test r15, r15	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x400019f	        0x4a8b1c22	              mov rbx, qword [rdx + r12]	       302	ref-cache.c	FUNCTION_18	FOR_1
0x40001a3	            0x7583	                           jne 0x4000128	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40001a5	          0x4963c6	                        movsxd rax, r14d	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40001a8	          0x83c501	                              add ebp, 1	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40001ab	        0x4183c601	                             add r14d, 1	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40001af	        0x4983c408	                              add r12, 8	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40001b3	        0x41396d00	                    cmp dword [r13], ebp	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40001b7	        0x48891cc2	            mov qword [rdx + rax*8], rbx	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40001bb	          0x4989df	                            mov r15, rbx	       302	ref-cache.c	FUNCTION_18	FOR_1
0x40001be	            0x7fd8	                            jg 0x4000198	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40001c0	        0x45897500	                   mov dword [r13], r14d	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x40001c4	        0x45897508	               mov dword [r13 + 8], r14d	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x40001c8	        0x4883c418	                           add rsp, 0x18	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001cc	              0x5b	                                 pop rbx	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001cd	              0x5d	                                 pop rbp	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001ce	            0x415c	                                 pop r12	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001d0	            0x415d	                                 pop r13	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001d2	            0x415e	                                 pop r14	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001d4	            0x415f	                                 pop r15	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001d6	            0xf3c3	                                     ret	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001d8	          0x4531f6	                          xor r14d, r14d	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40001db	            0xebe3	                           jmp 0x40001c0	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40001dd	      0x488b742408	                mov rsi, qword [rsp + 8]	       273	ref-cache.c	FUNCTION_17	CALL_2
0x40001e2	      0xbf00000000	                              mov edi, 0	       273	ref-cache.c	FUNCTION_17	CALL_2
0x40001e7	            0x31c0	                            xor eax, eax	       273	ref-cache.c	FUNCTION_17	CALL_2
0x40001e9	      0xe800000000	                          call 0x40001ee	       273	ref-cache.c	FUNCTION_17	CALL_2
0x40001ee	      0xbf00000000	                              mov edi, 0	       276	ref-cache.c	FUNCTION_17	CALL_4
0x40001f3	            0x31c0	                            xor eax, eax	       276	ref-cache.c	FUNCTION_17	CALL_4
0x40001f5	      0xe800000000	                          call 0x40001fa	       276	ref-cache.c	FUNCTION_17	CALL_4
cache_ref_iterator_begin	SWITCH,0:CALL,7:WHILE,0:DO,0:functions,0:ELSE,1:IF,4:FOR,0	87
0x4000af0	            0x4155	                                push r13	       517	ref-cache.c	FUNCTION_24
0x4000af2	            0x4154	                                push r12	       517	ref-cache.c	FUNCTION_24
0x4000af4	          0x4989f4	                            mov r12, rsi	       517	ref-cache.c	FUNCTION_24
0x4000af7	              0x55	                                push rbp	       517	ref-cache.c	FUNCTION_24
0x4000af8	              0x53	                                push rbx	       517	ref-cache.c	FUNCTION_24
0x4000af9	            0x89d3	                            mov ebx, edx	       517	ref-cache.c	FUNCTION_24
0x4000afb	        0x4883ec08	                              sub rsp, 8	       517	ref-cache.c	FUNCTION_24
0x4000aff	          0x488b3f	                    mov rdi, qword [rdi]	       523	ref-cache.c	FUNCTION_24	CALL_1
0x4000b02	      0xe800000000	                          call 0x4000b07	       523	ref-cache.c	FUNCTION_24	CALL_1
0x4000b07	          0x4d85e4	                           test r12, r12	       524	ref-cache.c	FUNCTION_24	IF_1
0x4000b0a	          0x4989c5	                            mov r13, rax	       523	ref-cache.c	FUNCTION_24	CALL_1
0x4000b0d	            0x740b	                            je 0x4000b1a	       524	ref-cache.c	FUNCTION_24	IF_1
0x4000b0f	      0x41803c2400	                       cmp byte [r12], 0	       524	ref-cache.c	FUNCTION_24	IF_1
0x4000b14	     0xf85be000000	                           jne 0x4000bd8	       524	ref-cache.c	FUNCTION_24	IF_1
0x4000b1a	          0x4d85ed	                           test r13, r13	       526	ref-cache.c	FUNCTION_24	IF_2
0x4000b1d	     0xf84f5000000	                            je 0x4000c18	       526	ref-cache.c	FUNCTION_24	IF_2
0x4000b23	            0x85db	                           test ebx, ebx	       530	ref-cache.c	FUNCTION_24	IF_3
0x4000b25	     0xf8595000000	                           jne 0x4000bc0	       530	ref-cache.c	FUNCTION_24	IF_3
0x4000b2b	      0xbe48000000	                           mov esi, 0x48	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4000b30	      0xbf01000000	                              mov edi, 1	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4000b35	      0xe800000000	                          call 0x4000b3a	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4000b3a	      0xba01000000	                              mov edx, 1	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4000b3f	          0x4889c3	                            mov rbx, rax	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4000b42	          0x4889c7	                            mov rdi, rax	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4000b45	      0xbe00000000	                              mov esi, 0	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4000b4a	      0xe800000000	                          call 0x4000b4f	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4000b4f	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       536	ref-cache.c	FUNCTION_24
0x4000b53	        0x4883f809	                              cmp rax, 9	       536	ref-cache.c	FUNCTION_24
0x4000b57	            0x763f	                           jbe 0x4000b98	       536	ref-cache.c	FUNCTION_24
0x4000b59	        0x488b6b40	            mov rbp, qword [rbx + 0x40] 	       536	ref-cache.c	FUNCTION_24
0x4000b5d	          0x4d85e4	                           test r12, r12	       543	ref-cache.c	FUNCTION_24	IF_4
0x4000b60	    0x48c743280100	               mov qword [rbx + 0x28], 1	       538	ref-cache.c	FUNCTION_24
0x4000b68	    0xc7450cffffff	      mov dword [rbp + 0xc], 0xffffffff 	       540	ref-cache.c	FUNCTION_24
0x4000b6f	        0x4c896d00	                    mov qword [rbp], r13	       541	ref-cache.c	FUNCTION_24
0x4000b73	            0x7407	                            je 0x4000b7c	       543	ref-cache.c	FUNCTION_24	IF_4
0x4000b75	      0x41803c2400	                       cmp byte [r12], 0	       543	ref-cache.c	FUNCTION_24	IF_4
0x4000b7a	            0x7574	                           jne 0x4000bf0	       543	ref-cache.c	FUNCTION_24	IF_4
0x4000b7c	    0xc74508000000	                  mov dword [rbp + 8], 0	       547	ref-cache.c	FUNCTION_24	ELSE_1
0x4000b83	        0x4883c408	                              add rsp, 8	       551	ref-cache.c	FUNCTION_24
0x4000b87	          0x4889d8	                            mov rax, rbx	       551	ref-cache.c	FUNCTION_24
0x4000b8a	              0x5b	                                 pop rbx	       551	ref-cache.c	FUNCTION_24
0x4000b8b	              0x5d	                                 pop rbp	       551	ref-cache.c	FUNCTION_24
0x4000b8c	            0x415c	                                 pop r12	       551	ref-cache.c	FUNCTION_24
0x4000b8e	            0x415d	                                 pop r13	       551	ref-cache.c	FUNCTION_24
0x4000b90	              0xc3	                                     ret	       551	ref-cache.c	FUNCTION_24
0x4000b91	     0xf1f80000000	                         nop dword [rax]	       551	ref-cache.c	FUNCTION_24
0x4000b98	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       536	ref-cache.c	FUNCTION_24
0x4000b9d	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       536	ref-cache.c	FUNCTION_24
0x4000ba1	          0x48d1ee	                              shr rsi, 1	       536	ref-cache.c	FUNCTION_24
0x4000ba4	        0x48897330	             mov qword [rbx + 0x30], rsi	       536	ref-cache.c	FUNCTION_24
0x4000ba8	        0x48c1e604	                              shl rsi, 4	       536	ref-cache.c	FUNCTION_24
0x4000bac	      0xe800000000	                          call 0x4000bb1	       536	ref-cache.c	FUNCTION_24
0x4000bb1	        0x48894340	             mov qword [rbx + 0x40], rax	       536	ref-cache.c	FUNCTION_24
0x4000bb5	          0x4889c5	                            mov rbp, rax	       536	ref-cache.c	FUNCTION_24
0x4000bb8	            0xeba3	                           jmp 0x4000b5d	       536	ref-cache.c	FUNCTION_24
0x4000bba	    0x660f1f440000	                    nop word [rax + rax]	       536	ref-cache.c	FUNCTION_24
0x4000bc0	        0x498d7518	                   lea rsi, [r13 + 0x18]	       536	ref-cache.c	FUNCTION_24
0x4000bc4	          0x4c89e2	                            mov rdx, r12	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4000bc7	          0x4c89ef	                            mov rdi, r13	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4000bca	      0xe891f9ffff	           call sym.prime_ref_dir.isra.1	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4000bcf	      0xe957ffffff	                           jmp 0x4000b2b	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4000bd4	         0xf1f4000	                         nop dword [rax]	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4000bd8	            0x31d2	                            xor edx, edx	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000bda	          0x4c89e6	                            mov rsi, r12	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000bdd	          0x4889c7	                            mov rdi, rax	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000be0	      0xe88bfcffff	            call sym.find_containing_dir	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000be5	          0x4989c5	                            mov r13, rax	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000be8	      0xe92dffffff	                           jmp 0x4000b1a	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000bed	           0xf1f00	                         nop dword [rax]	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000bf0	          0x4c89e7	                            mov rdi, r12	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4000bf3	      0xe800000000	                          call 0x4000bf8	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4000bf8	        0x48894338	             mov qword [rbx + 0x38], rax	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4000bfc	    0xc74508010000	                  mov dword [rbp + 8], 1	       545	ref-cache.c	FUNCTION_24	IF_4
0x4000c03	        0x4883c408	                              add rsp, 8	       551	ref-cache.c	FUNCTION_24
0x4000c07	          0x4889d8	                            mov rax, rbx	       551	ref-cache.c	FUNCTION_24
0x4000c0a	              0x5b	                                 pop rbx	       551	ref-cache.c	FUNCTION_24
0x4000c0b	              0x5d	                                 pop rbp	       551	ref-cache.c	FUNCTION_24
0x4000c0c	            0x415c	                                 pop r12	       551	ref-cache.c	FUNCTION_24
0x4000c0e	            0x415d	                                 pop r13	       551	ref-cache.c	FUNCTION_24
0x4000c10	              0xc3	                                     ret	       551	ref-cache.c	FUNCTION_24
0x4000c11	     0xf1f80000000	                         nop dword [rax]	       551	ref-cache.c	FUNCTION_24
0x4000c18	        0x4883c408	                              add rsp, 8	       551	ref-cache.c	FUNCTION_24
0x4000c1c	              0x5b	                                 pop rbx	       551	ref-cache.c	FUNCTION_24
0x4000c1d	              0x5d	                                 pop rbp	       551	ref-cache.c	FUNCTION_24
0x4000c1e	            0x415c	                                 pop r12	       551	ref-cache.c	FUNCTION_24
0x4000c20	            0x415d	                                 pop r13	       551	ref-cache.c	FUNCTION_24
0x4000c22	      0xe900000000	                   jmp section_end..text	       528	ref-cache.c	FUNCTION_24	CALL_3
search_ref_dir	SWITCH,0:CALL,2:WHILE,0:DO,0:functions,0:ELSE,0:IF,2:FOR,0	64
0x40007b0	          0x4885f6	                           test rsi, rsi	       129	ref-cache.c	FUNCTION_11	IF_1
0x40007b3	     0xf84ae000000	                            je 0x4000867	       129	ref-cache.c	FUNCTION_11	IF_1
0x40007b9	            0x8b07	                    mov eax, dword [rdi]	       129	ref-cache.c	FUNCTION_11	IF_1
0x40007bb	            0x85c0	                           test eax, eax	       129	ref-cache.c	FUNCTION_11	IF_1
0x40007bd	     0xf84a4000000	                            je 0x4000867	       129	ref-cache.c	FUNCTION_11	IF_1
0x40007c3	            0x4157	                                push r15	       125	ref-cache.c	FUNCTION_11
0x40007c5	            0x4156	                                push r14	       125	ref-cache.c	FUNCTION_11
0x40007c7	            0x4155	                                push r13	       125	ref-cache.c	FUNCTION_11
0x40007c9	            0x4154	                                push r12	       125	ref-cache.c	FUNCTION_11
0x40007cb	          0x4989d4	                            mov r12, rdx	       125	ref-cache.c	FUNCTION_11
0x40007ce	              0x55	                                push rbp	       125	ref-cache.c	FUNCTION_11
0x40007cf	              0x53	                                push rbx	       125	ref-cache.c	FUNCTION_11
0x40007d0	          0x4889fb	                            mov rbx, rdi	       125	ref-cache.c	FUNCTION_11
0x40007d3	            0x31ed	                            xor ebp, ebp	        27	stdlib-bsearch.h	FUNCTION_91
0x40007d5	        0x4883ec18	                           sub rsp, 0x18	       125	ref-cache.c	FUNCTION_11
0x40007d9	      0x4889742408	                mov qword [rsp + 8], rsi	       125	ref-cache.c	FUNCTION_11
0x40007de	      0xe8edf8ffff	                   call sym.sort_ref_dir	       132	ref-cache.c	FUNCTION_11	CALL_1
0x40007e3	          0x4c632b	                 movsxd r13, dword [rbx]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007e6	        0x4c8b7318	            mov r14, qword [rbx + 0x18] 	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007ea	            0xeb40	                           jmp 0x400082c	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007ec	         0xf1f4000	                         nop dword [rax]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007f0	      0x4a8d5c2d00	                    lea rbx, [rbp + r13]	        31	stdlib-bsearch.h	FUNCTION_91	WHILE_1
0x40007f5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x40007fa	          0x4c89e2	                            mov rdx, r12	       118	ref-cache.c	FUNCTION_10	CALL_1
0x40007fd	          0x48d1eb	                              shr rbx, 1	        31	stdlib-bsearch.h	FUNCTION_91	WHILE_1
0x4000800	        0x4d8b3cde	            mov r15, qword [r14 + rbx*8]	       117	ref-cache.c	FUNCTION_10
0x4000804	    0x488d04dd0000	                        lea rax, [rbx*8]	        32	stdlib-bsearch.h	FUNCTION_91	WHILE_1
0x400080c	        0x48890424	                    mov qword [rsp], rax	        32	stdlib-bsearch.h	FUNCTION_91	WHILE_1
0x4000810	        0x498d7728	                   lea rsi, [r15 + 0x28]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000814	      0xe800000000	                          call 0x4000819	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000819	            0x85c0	                           test eax, eax	       119	ref-cache.c	FUNCTION_10	IF_1
0x400081b	            0x7508	                           jne 0x4000825	       119	ref-cache.c	FUNCTION_10	IF_1
0x400081d	    0x430fb6442728	     movzx eax, byte [r15 + r12 + 0x28] 	       121	ref-cache.c	FUNCTION_10
0x4000823	            0xf7d8	                                 neg eax	       121	ref-cache.c	FUNCTION_10
0x4000825	            0x85c0	                           test eax, eax	        34	stdlib-bsearch.h	FUNCTION_91	WHILE_1	IF_1
0x4000827	            0x791f	                           jns 0x4000848	        34	stdlib-bsearch.h	FUNCTION_91	WHILE_1	IF_1
0x4000829	          0x4989dd	                            mov r13, rbx	        34	stdlib-bsearch.h	FUNCTION_91	WHILE_1	IF_1
0x400082c	          0x4939ed	                            cmp r13, rbp	        29	stdlib-bsearch.h	FUNCTION_91	WHILE_1
0x400082f	            0x77bf	                            ja 0x40007f0	        29	stdlib-bsearch.h	FUNCTION_91	WHILE_1
0x4000831	        0x4883c418	                           add rsp, 0x18	       142	ref-cache.c	FUNCTION_11
0x4000835	      0xb8ffffffff	                     mov eax, 0xffffffff	       130	ref-cache.c	FUNCTION_11	IF_1
0x400083a	              0x5b	                                 pop rbx	       142	ref-cache.c	FUNCTION_11
0x400083b	              0x5d	                                 pop rbp	       142	ref-cache.c	FUNCTION_11
0x400083c	            0x415c	                                 pop r12	       142	ref-cache.c	FUNCTION_11
0x400083e	            0x415d	                                 pop r13	       142	ref-cache.c	FUNCTION_11
0x4000840	            0x415e	                                 pop r14	       142	ref-cache.c	FUNCTION_11
0x4000842	            0x415f	                                 pop r15	       142	ref-cache.c	FUNCTION_11
0x4000844	              0xc3	                                     ret	       142	ref-cache.c	FUNCTION_11
0x4000845	           0xf1f00	                         nop dword [rax]	       142	ref-cache.c	FUNCTION_11
0x4000848	            0x7406	                            je 0x4000850	        36	stdlib-bsearch.h	FUNCTION_91	WHILE_1	ELSE_1	IF_2
0x400084a	        0x488d6b01	                      lea rbp, [rbx + 1]	        37	stdlib-bsearch.h	FUNCTION_91	WHILE_1	ELSE_1	IF_2
0x400084e	            0xebdc	                           jmp 0x400082c	        37	stdlib-bsearch.h	FUNCTION_91	WHILE_1	ELSE_1	IF_2
0x4000850	        0x488b0424	                    mov rax, qword [rsp]	       141	ref-cache.c	FUNCTION_11
0x4000854	        0x4883c418	                           add rsp, 0x18	       142	ref-cache.c	FUNCTION_11
0x4000858	              0x5b	                                 pop rbx	       142	ref-cache.c	FUNCTION_11
0x4000859	              0x5d	                                 pop rbp	       142	ref-cache.c	FUNCTION_11
0x400085a	        0x48c1e803	                              shr rax, 3	       141	ref-cache.c	FUNCTION_11
0x400085e	            0x415c	                                 pop r12	       142	ref-cache.c	FUNCTION_11
0x4000860	            0x415d	                                 pop r13	       142	ref-cache.c	FUNCTION_11
0x4000862	            0x415e	                                 pop r14	       142	ref-cache.c	FUNCTION_11
0x4000864	            0x415f	                                 pop r15	       142	ref-cache.c	FUNCTION_11
0x4000866	              0xc3	                                     ret	       142	ref-cache.c	FUNCTION_11
0x4000867	      0xb8ffffffff	                     mov eax, 0xffffffff	       130	ref-cache.c	FUNCTION_11	IF_1
0x400086c	              0xc3	                                     ret	       142	ref-cache.c	FUNCTION_11
create_ref_cache	SWITCH,0:CALL,2:WHILE,0:DO,0:functions,0:ELSE,0:IF,0:FOR,0	22
0x4000760	            0x4154	                                push r12	        47	ref-cache.c	FUNCTION_4
0x4000762	              0x55	                                push rbp	        47	ref-cache.c	FUNCTION_4
0x4000763	          0x4989fc	                            mov r12, rdi	        47	ref-cache.c	FUNCTION_4
0x4000766	              0x53	                                push rbx	        47	ref-cache.c	FUNCTION_4
0x4000767	          0x4889f5	                            mov rbp, rsi	        47	ref-cache.c	FUNCTION_4
0x400076a	      0xbf01000000	                              mov edi, 1	        48	ref-cache.c	FUNCTION_4	CALL_1
0x400076f	      0xbe18000000	                           mov esi, 0x18	        48	ref-cache.c	FUNCTION_4	CALL_1
0x4000774	      0xe800000000	                          call 0x4000779	        48	ref-cache.c	FUNCTION_4	CALL_1
0x4000779	      0xb901000000	                              mov ecx, 1	        52	ref-cache.c	FUNCTION_4	CALL_2
0x400077e	          0x4889c3	                            mov rbx, rax	        48	ref-cache.c	FUNCTION_4	CALL_1
0x4000781	        0x4c896008	                mov qword [rax + 8], r12	        50	ref-cache.c	FUNCTION_4
0x4000785	        0x48896810	             mov qword [rax + 0x10], rbp	        51	ref-cache.c	FUNCTION_4
0x4000789	            0x31d2	                            xor edx, edx	        52	ref-cache.c	FUNCTION_4	CALL_2
0x400078b	      0xbe00000000	                              mov esi, 0	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4000790	          0x4889c7	                            mov rdi, rax	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4000793	      0xe800000000	                          call 0x4000798	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4000798	          0x488903	                    mov qword [rbx], rax	        52	ref-cache.c	FUNCTION_4	CALL_2
0x400079b	          0x4889d8	                            mov rax, rbx	        54	ref-cache.c	FUNCTION_4
0x400079e	              0x5b	                                 pop rbx	        54	ref-cache.c	FUNCTION_4
0x400079f	              0x5d	                                 pop rbp	        54	ref-cache.c	FUNCTION_4
0x40007a0	            0x415c	                                 pop r12	        54	ref-cache.c	FUNCTION_4
0x40007a2	              0xc3	                                     ret	        54	ref-cache.c	FUNCTION_4
free_ref_cache	SWITCH,0:CALL,2:WHILE,0:DO,0:functions,0:ELSE,0:IF,0:FOR,0	7
0x40006c0	              0x53	                                push rbx	        71	ref-cache.c	FUNCTION_6
0x40006c1	          0x4889fb	                            mov rbx, rdi	        71	ref-cache.c	FUNCTION_6
0x40006c4	          0x488b3f	                    mov rdi, qword [rdi]	        72	ref-cache.c	FUNCTION_6	CALL_1
0x40006c7	      0xe894f9ffff	                 call sym.free_ref_entry	        72	ref-cache.c	FUNCTION_6	CALL_1
0x40006cc	          0x4889df	                            mov rdi, rbx	        73	ref-cache.c	FUNCTION_6	CALL_2
0x40006cf	              0x5b	                                 pop rbx	        74	ref-cache.c	FUNCTION_6
0x40006d0	      0xe900000000	                           jmp 0x40006d5	        73	ref-cache.c	FUNCTION_6	CALL_2
