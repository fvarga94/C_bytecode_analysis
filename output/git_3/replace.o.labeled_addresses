create_graft	FOR,0:CALL,29:DO,0:functions,0:IF,8:SWITCH,0:ELSE,0:WHILE,0	219
0x40005a0	            0x4157	                                push r15	       436	replace.c	FUNCTION_14
0x40005a2	            0x4156	                                push r14	       436	replace.c	FUNCTION_14
0x40005a4	          0x4989f7	                            mov r15, rsi	       436	replace.c	FUNCTION_14
0x40005a7	            0x4155	                                push r13	       436	replace.c	FUNCTION_14
0x40005a9	            0x4154	                                push r12	       436	replace.c	FUNCTION_14
0x40005ab	              0x55	                                push rbp	       436	replace.c	FUNCTION_14
0x40005ac	              0x53	                                push rbx	       436	replace.c	FUNCTION_14
0x40005ad	    0x4881ecb80000	                           sub rsp, 0xb8	       436	replace.c	FUNCTION_14
0x40005b4	    0x64488b042528	                mov rax, qword fs:[0x28]	       436	replace.c	FUNCTION_14
0x40005bd	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       436	replace.c	FUNCTION_14
0x40005c5	            0x31c0	                            xor eax, eax	       436	replace.c	FUNCTION_14
0x40005c7	          0x488b06	                    mov rax, qword [rsi]	       438	replace.c	FUNCTION_14
0x40005ca	      0x488d742470	                   lea rsi, [rsp + 0x70]	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x40005cf	        0x897c2404	                mov dword [rsp + 4], edi	       436	replace.c	FUNCTION_14
0x40005d3	        0x8954241c	             mov dword [rsp + 0x1c], edx	       436	replace.c	FUNCTION_14
0x40005d7	        0x894c2418	             mov dword [rsp + 0x18], ecx	       436	replace.c	FUNCTION_14
0x40005db	    0x48c744243000	               mov qword [rsp + 0x30], 0	       440	replace.c	FUNCTION_14
0x40005e4	    0x48c744243800	               mov qword [rsp + 0x38], 0	       440	replace.c	FUNCTION_14
0x40005ed	          0x4889c7	                            mov rdi, rax	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x40005f0	      0x4889442410	             mov qword [rsp + 0x10], rax	       438	replace.c	FUNCTION_14
0x40005f5	    0x48c744244000	               mov qword [rsp + 0x40], 0	       440	replace.c	FUNCTION_14
0x40005fe	      0xe800000000	                          call 0x4000603	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x4000603	            0x85c0	                           test eax, eax	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x4000605	     0xf882a030000	                            js 0x4000935	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x400060b	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       446	replace.c	FUNCTION_14	CALL_4
0x4000610	      0xe800000000	                          call 0x4000615	       446	replace.c	FUNCTION_14	CALL_4
0x4000615	          0x4885c0	                           test rax, rax	       447	replace.c	FUNCTION_14	IF_2
0x4000618	          0x4989c6	                            mov r14, rax	       446	replace.c	FUNCTION_14	CALL_4
0x400061b	     0xf8420030000	                            je 0x4000941	       447	replace.c	FUNCTION_14	IF_2
0x4000621	      0x488d742428	                   lea rsi, [rsp + 0x28]	       450	replace.c	FUNCTION_14	CALL_7
0x4000626	          0x4889c7	                            mov rdi, rax	       450	replace.c	FUNCTION_14	CALL_7
0x4000629	      0xe800000000	                          call 0x400062e	       450	replace.c	FUNCTION_14	CALL_7
0x400062e	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       451	replace.c	FUNCTION_14	CALL_8
0x4000633	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       451	replace.c	FUNCTION_14	CALL_8
0x4000638	          0x4889c3	                            mov rbx, rax	       450	replace.c	FUNCTION_14	CALL_7
0x400063b	          0x4889c6	                            mov rsi, rax	       451	replace.c	FUNCTION_14	CALL_8
0x400063e	      0xe800000000	                          call 0x4000643	       451	replace.c	FUNCTION_14	CALL_8
0x4000643	          0x4889de	                            mov rsi, rbx	       452	replace.c	FUNCTION_14	CALL_9
0x4000646	          0x4c89f7	                            mov rdi, r14	       452	replace.c	FUNCTION_14	CALL_9
0x4000649	      0xe800000000	                          call 0x400064e	       452	replace.c	FUNCTION_14	CALL_9
0x400064e	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       360	replace.c	FUNCTION_11
0x4000653	    0x48c744245000	               mov qword [rsp + 0x50], 0	       354	replace.c	FUNCTION_11
0x400065c	    0x48c744245800	               mov qword [rsp + 0x58], 0	       354	replace.c	FUNCTION_11
0x4000665	    0x48c744246000	               mov qword [rsp + 0x60], 0	       354	replace.c	FUNCTION_11
0x400066e	        0x4883c02e	                           add rax, 0x2e	       360	replace.c	FUNCTION_11
0x4000672	      0x4889442408	                mov qword [rsp + 8], rax	       360	replace.c	FUNCTION_11
0x4000677	          0x4889c5	                            mov rbp, rax	       361	replace.c	FUNCTION_11
0x400067a	            0xeb08	                           jmp 0x4000684	       361	replace.c	FUNCTION_11
0x400067c	         0xf1f4000	                         nop dword [rax]	       361	replace.c	FUNCTION_11
0x4000680	        0x4883c530	                           add rbp, 0x30	       364	replace.c	FUNCTION_11	WHILE_1
0x4000684	      0xbe00000000	                              mov esi, 0	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000689	          0x4889ef	                            mov rdi, rbp	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x400068c	      0xe800000000	                          call 0x4000691	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000691	            0x85c0	                           test eax, eax	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000693	            0x75eb	                           jne 0x4000680	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000695	      0x837c240401	                  cmp dword [rsp + 4], 1	       367	replace.c	FUNCTION_11	FOR_1
0x400069a	      0x4c8d642450	                   lea r12, [rsp + 0x50]	       367	replace.c	FUNCTION_11	FOR_1
0x400069f	     0xf8eab000000	                           jle 0x4000750	       367	replace.c	FUNCTION_11	FOR_1
0x40006a5	        0x8b442404	                mov eax, dword [rsp + 4]	       367	replace.c	FUNCTION_11	FOR_1
0x40006a9	        0x498d5f08	                      lea rbx, [r15 + 8]	       367	replace.c	FUNCTION_11	FOR_1
0x40006ad	      0x4c8d642450	                   lea r12, [rsp + 0x50]	       367	replace.c	FUNCTION_11	FOR_1
0x40006b2	          0x83e802	                              sub eax, 2	       367	replace.c	FUNCTION_11	FOR_1
0x40006b5	      0x4d8d6cc710	          lea r13, [r15 + rax*8 + 0x10] 	       367	replace.c	FUNCTION_11	FOR_1
0x40006ba	            0xeb42	                           jmp 0x40006fe	       367	replace.c	FUNCTION_11	FOR_1
0x40006bc	         0xf1f4000	                         nop dword [rax]	       367	replace.c	FUNCTION_11	FOR_1
0x40006c0	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40006c8	      0xe800000000	                          call 0x40006cd	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40006cd	          0x4885c0	                           test rax, rax	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40006d0	     0xf8482010000	                            je 0x4000858	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40006d6	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006de	        0x4883c308	                              add rbx, 8	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006e2	      0xe800000000	                          call 0x40006e7	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006e7	      0xbe00000000	                              mov esi, 0	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006ec	          0x4889c2	                            mov rdx, rax	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006ef	          0x4c89e7	                            mov rdi, r12	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006f2	            0x31c0	                            xor eax, eax	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006f4	      0xe800000000	                          call 0x40006f9	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006f9	          0x4c39eb	                            cmp rbx, r13	       367	replace.c	FUNCTION_11	FOR_1
0x40006fc	            0x7452	                            je 0x4000750	       367	replace.c	FUNCTION_11	FOR_1
0x40006fe	          0x488b3b	                    mov rdi, qword [rbx]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4000701	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4000709	      0xe800000000	                          call 0x400070e	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x400070e	            0x85c0	                           test eax, eax	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4000710	            0x79ae	                           jns 0x40006c0	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4000712	          0x4c89e7	                            mov rdi, r12	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000715	      0xe800000000	                          call 0x400071a	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x400071a	          0x488b1b	                    mov rbx, qword [rbx]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x400071d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x4000722	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x4000727	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_19
0x4000729	      0xe800000000	                          call 0x400072e	        54	gettext.h	FUNCTION_19
0x400072e	          0x4889de	                            mov rsi, rbx	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000731	          0x4889c7	                            mov rdi, rax	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000734	            0x31c0	                            xor eax, eax	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000736	      0xe800000000	                          call 0x400073b	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x400073b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       465	replace.c	FUNCTION_14	IF_5	CALL_18
0x4000740	      0xbbffffffff	                     mov ebx, 0xffffffff	       466	replace.c	FUNCTION_14	IF_5
0x4000745	      0xe800000000	                          call 0x400074a	       465	replace.c	FUNCTION_14	IF_5	CALL_18
0x400074a	      0xe9d9000000	                           jmp 0x4000828	       466	replace.c	FUNCTION_14	IF_5
0x400074f	              0x90	                                     nop	       466	replace.c	FUNCTION_14	IF_5
0x4000750	      0x488b442408	                mov rax, qword [rsp + 8]	       382	replace.c	FUNCTION_11	CALL_12
0x4000755	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	       382	replace.c	FUNCTION_11	CALL_12
0x400075a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       382	replace.c	FUNCTION_11	CALL_12
0x400075f	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	       382	replace.c	FUNCTION_11	CALL_12
0x4000764	          0x4889ea	                            mov rdx, rbp	       382	replace.c	FUNCTION_11	CALL_12
0x4000767	          0x4889c6	                            mov rsi, rax	       382	replace.c	FUNCTION_11	CALL_12
0x400076a	      0x482b742440	             sub rsi, qword [rsp + 0x40]	       382	replace.c	FUNCTION_11	CALL_12
0x400076f	          0x4829c2	                            sub rdx, rax	       382	replace.c	FUNCTION_11	CALL_12
0x4000772	      0xe800000000	                          call 0x4000777	       382	replace.c	FUNCTION_11	CALL_12
0x4000777	          0x4c89e7	                            mov rdi, r12	       385	replace.c	FUNCTION_11	CALL_13
0x400077a	      0xe800000000	                          call 0x400077f	       385	replace.c	FUNCTION_11	CALL_13
0x400077f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x4000784	      0xe800000000	                          call 0x4000789	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x4000789	            0x85c0	                           test eax, eax	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x400078b	     0xf85e7000000	                           jne 0x4000878	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x4000791	        0x8b442404	                mov eax, dword [rsp + 4]	       430	replace.c	FUNCTION_13
0x4000795	          0x4c89e2	                            mov rdx, r12	       432	replace.c	FUNCTION_13	CALL_1
0x4000798	          0x4c89f6	                            mov rsi, r14	       432	replace.c	FUNCTION_13	CALL_1
0x400079b	      0xbf00000000	                              mov edi, 0	       432	replace.c	FUNCTION_13	CALL_1
0x40007a0	      0x4c897c2458	             mov qword [rsp + 0x58], r15	       431	replace.c	FUNCTION_13
0x40007a5	        0x89442450	             mov dword [rsp + 0x50], eax	       430	replace.c	FUNCTION_13
0x40007a9	      0xe800000000	                          call 0x40007ae	       432	replace.c	FUNCTION_13	CALL_1
0x40007ae	            0x85c0	                           test eax, eax	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x40007b0	            0x7589	                           jne 0x400073b	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x40007b2	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007b7	    0x488b15000000	            mov rdx, qword [0x040007be] 	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007be	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007c6	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007cb	      0xe800000000	                          call 0x40007d0	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007d0	            0x85c0	                           test eax, eax	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007d2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       470	replace.c	FUNCTION_14	IF_6	CALL_20
0x40007d7	     0xf850b010000	                           jne 0x40008e8	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007dd	      0xe800000000	                          call 0x40007e2	       475	replace.c	FUNCTION_14	CALL_23
0x40007e2	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       975	cache.h	FUNCTION_28	CALL_1
0x40007ea	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       975	cache.h	FUNCTION_28	CALL_1
0x40007ef	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_28	CALL_1
0x40007f4	      0xe800000000	                          call 0x40007f9	       975	cache.h	FUNCTION_28	CALL_1
0x40007f9	            0x85c0	                           test eax, eax	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x40007fb	            0x89c3	                            mov ebx, eax	       975	cache.h	FUNCTION_28	CALL_1
0x40007fd	     0xf85bd000000	                           jne 0x40008c0	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x4000803	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x4000807	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x400080c	            0x85c0	                           test eax, eax	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x400080e	     0xf8403010000	                            je 0x4000917	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x4000814	      0xe800000000	                          call 0x4000819	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x4000819	      0xbf00000000	                              mov edi, 0	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x400081e	          0x4889c6	                            mov rsi, rax	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x4000821	            0x31c0	                            xor eax, eax	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x4000823	      0xe800000000	                          call 0x4000828	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x4000828	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       486	replace.c	FUNCTION_14
0x4000830	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       486	replace.c	FUNCTION_14
0x4000839	            0x89d8	                            mov eax, ebx	       486	replace.c	FUNCTION_14
0x400083b	     0xf850c010000	                           jne 0x400094d	       486	replace.c	FUNCTION_14
0x4000841	    0x4881c4b80000	                           add rsp, 0xb8	       486	replace.c	FUNCTION_14
0x4000848	              0x5b	                                 pop rbx	       486	replace.c	FUNCTION_14
0x4000849	              0x5d	                                 pop rbp	       486	replace.c	FUNCTION_14
0x400084a	            0x415c	                                 pop r12	       486	replace.c	FUNCTION_14
0x400084c	            0x415d	                                 pop r13	       486	replace.c	FUNCTION_14
0x400084e	            0x415e	                                 pop r14	       486	replace.c	FUNCTION_14
0x4000850	            0x415f	                                 pop r15	       486	replace.c	FUNCTION_14
0x4000852	              0xc3	                                     ret	       486	replace.c	FUNCTION_14
0x4000853	       0xf1f440000	                   nop dword [rax + rax]	       486	replace.c	FUNCTION_14
0x4000858	          0x4c89e7	                            mov rdi, r12	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x400085b	      0xe800000000	                          call 0x4000860	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x4000860	          0x488b1b	                    mov rbx, qword [rbx]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000863	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x4000868	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x400086d	      0xe9b5feffff	                           jmp 0x4000727	        54	gettext.h	FUNCTION_19
0x4000872	    0x660f1f440000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_19
0x4000878	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x400087d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_19
0x400087f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x4000884	      0xe800000000	                          call 0x4000889	        54	gettext.h	FUNCTION_19
0x4000889	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x400088e	          0x4889c7	                            mov rdi, rax	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x4000891	            0x31c0	                            xor eax, eax	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x4000893	      0xe800000000	                          call 0x4000898	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x4000898	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_19
0x400089a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x400089f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x40008a4	      0xe800000000	                          call 0x40008a9	        54	gettext.h	FUNCTION_19
0x40008a9	          0x4889c7	                            mov rdi, rax	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x40008ac	            0x31c0	                            xor eax, eax	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x40008ae	      0xe800000000	                          call 0x40008b3	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x40008b3	      0xe9d9feffff	                           jmp 0x4000791	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x40008b8	     0xf1f84000000	                   nop dword [rax + rax]	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x40008c0	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	       485	replace.c	FUNCTION_14	CALL_29
0x40008c5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       485	replace.c	FUNCTION_14	CALL_29
0x40008ca	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	       485	replace.c	FUNCTION_14	CALL_29
0x40008d2	      0x488d742470	                   lea rsi, [rsp + 0x70]	       485	replace.c	FUNCTION_14	CALL_29
0x40008d7	      0xba00000000	                              mov edx, 0	       485	replace.c	FUNCTION_14	CALL_29
0x40008dc	      0xe83ff8ffff	             call sym.replace_object_oid	       485	replace.c	FUNCTION_14	CALL_29
0x40008e1	            0x89c3	                            mov ebx, eax	       485	replace.c	FUNCTION_14	CALL_29
0x40008e3	      0xe940ffffff	                           jmp 0x4000828	       485	replace.c	FUNCTION_14	CALL_29
0x40008e8	      0xe800000000	                          call 0x40008ed	       470	replace.c	FUNCTION_14	IF_6	CALL_20
0x40008ed	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x40008f2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x40008f7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_19
0x40008f9	      0xbbffffffff	                     mov ebx, 0xffffffff	       448	replace.c	FUNCTION_14	CALL_6
0x40008fe	      0xe800000000	                          call 0x4000903	        54	gettext.h	FUNCTION_19
0x4000903	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       448	replace.c	FUNCTION_14	CALL_6
0x4000908	          0x4889c7	                            mov rdi, rax	       448	replace.c	FUNCTION_14	CALL_6
0x400090b	            0x31c0	                            xor eax, eax	       448	replace.c	FUNCTION_14	CALL_6
0x400090d	      0xe800000000	                          call 0x4000912	       448	replace.c	FUNCTION_14	CALL_6
0x4000912	      0xe911ffffff	                           jmp 0x4000828	       448	replace.c	FUNCTION_14	CALL_6
0x4000917	      0xe800000000	                          call 0x400091c	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x400091c	      0xbf00000000	                              mov edi, 0	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x4000921	          0x4889c6	                            mov rsi, rax	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x4000924	            0x31c0	                            xor eax, eax	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x4000926	      0xe800000000	                          call 0x400092b	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x400092b	      0xbbffffffff	                     mov ebx, 0xffffffff	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x4000930	      0xe9f3feffff	                           jmp 0x4000828	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x4000935	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x400093a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x400093f	            0xebb6	                           jmp 0x40008f7	        54	gettext.h	FUNCTION_19
0x4000941	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x4000946	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x400094b	            0xebaa	                           jmp 0x40008f7	        54	gettext.h	FUNCTION_19
0x400094d	      0xe800000000	                          call 0x4000952	       486	replace.c	FUNCTION_14
check_one_mergetag	FOR,1:CALL,15:DO,0:functions,0:IF,4:SWITCH,0:ELSE,0:WHILE,0	104
0x4000410	            0x4156	                                push r14	       397	replace.c	FUNCTION_12
0x4000412	            0x4155	                                push r13	       397	replace.c	FUNCTION_12
0x4000414	      0xbf04000000	                              mov edi, 4	       404	replace.c	FUNCTION_12	CALL_2
0x4000419	            0x4154	                                push r12	       397	replace.c	FUNCTION_12
0x400041b	              0x55	                                push rbp	       397	replace.c	FUNCTION_12
0x400041c	          0x4989d4	                            mov r12, rdx	       397	replace.c	FUNCTION_12
0x400041f	              0x53	                                push rbx	       397	replace.c	FUNCTION_12
0x4000420	          0x4889f3	                            mov rbx, rsi	       397	replace.c	FUNCTION_12
0x4000423	        0x4883ec40	                           sub rsp, 0x40	       397	replace.c	FUNCTION_12
0x4000427	    0x64488b042528	                mov rax, qword fs:[0x28]	       397	replace.c	FUNCTION_12
0x4000430	      0x4889442438	             mov qword [rsp + 0x38], rax	       397	replace.c	FUNCTION_12
0x4000435	            0x31c0	                            xor eax, eax	       397	replace.c	FUNCTION_12
0x4000437	        0x488b4208	                mov rax, qword [rdx + 8]	       399	replace.c	FUNCTION_12
0x400043b	          0x4c8b30	                    mov r14, qword [rax]	       399	replace.c	FUNCTION_12
0x400043e	      0xe800000000	                          call 0x4000443	       404	replace.c	FUNCTION_12	CALL_2
0x4000443	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       404	replace.c	FUNCTION_12	CALL_2
0x4000447	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       404	replace.c	FUNCTION_12	CALL_2
0x400044b	          0x4889e1	                            mov rcx, rsp	       404	replace.c	FUNCTION_12	CALL_2
0x400044e	          0x4889c2	                            mov rdx, rax	       404	replace.c	FUNCTION_12	CALL_2
0x4000451	      0xe800000000	                          call 0x4000456	       404	replace.c	FUNCTION_12	CALL_2
0x4000456	          0x4889e7	                            mov rdi, rsp	       405	replace.c	FUNCTION_12	CALL_3
0x4000459	      0xe800000000	                          call 0x400045e	       405	replace.c	FUNCTION_12	CALL_3
0x400045e	          0x4885c0	                           test rax, rax	       406	replace.c	FUNCTION_12	IF_1
0x4000461	     0xf8421010000	                            je 0x4000588	       406	replace.c	FUNCTION_12	IF_1
0x4000467	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x400046b	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x400046f	          0x4889c7	                            mov rdi, rax	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x4000472	          0x4989c5	                            mov r13, rax	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x4000475	      0xe800000000	                          call 0x400047a	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x400047a	            0x85c0	                           test eax, eax	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x400047c	     0xf85e1000000	                           jne 0x4000563	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x4000482	      0x41833c2401	                      cmp dword [r12], 1	       412	replace.c	FUNCTION_12	FOR_1
0x4000487	      0xbb08000000	                              mov ebx, 8	       412	replace.c	FUNCTION_12	FOR_1
0x400048c	      0xbd01000000	                              mov ebp, 1	       412	replace.c	FUNCTION_12	FOR_1
0x4000491	            0x7f35	                            jg 0x40004c8	       412	replace.c	FUNCTION_12	FOR_1
0x4000493	      0xe998000000	                           jmp 0x4000530	       412	replace.c	FUNCTION_12	FOR_1
0x4000498	     0xf1f84000000	                   nop dword [rax + rax]	       412	replace.c	FUNCTION_12	FOR_1
0x40004a0	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       975	cache.h	FUNCTION_28	CALL_1
0x40004a4	      0x488d742420	                   lea rsi, [rsp + 0x20]	       975	cache.h	FUNCTION_28	CALL_1
0x40004a9	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_28	CALL_1
0x40004ae	        0x488d7804	                      lea rdi, [rax + 4]	       975	cache.h	FUNCTION_28	CALL_1
0x40004b2	      0xe800000000	                          call 0x40004b7	       975	cache.h	FUNCTION_28	CALL_1
0x40004b7	            0x85c0	                           test eax, eax	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x40004b9	            0x7450	                            je 0x400050b	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x40004bb	          0x83c501	                              add ebp, 1	       412	replace.c	FUNCTION_12	FOR_1
0x40004be	        0x4883c308	                              add rbx, 8	       412	replace.c	FUNCTION_12	FOR_1
0x40004c2	        0x41392c24	                    cmp dword [r12], ebp	       412	replace.c	FUNCTION_12	FOR_1
0x40004c6	            0x7e68	                           jle 0x4000530	       412	replace.c	FUNCTION_12	FOR_1
0x40004c8	      0x498b442408	                mov rax, qword [r12 + 8]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x40004cd	      0x488d742420	                   lea rsi, [rsp + 0x20]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x40004d2	        0x488b3c18	              mov rdi, qword [rax + rbx]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x40004d6	      0xe800000000	                          call 0x40004db	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x40004db	            0x85c0	                           test eax, eax	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x40004dd	            0x79c1	                           jns 0x40004a0	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x40004df	      0x498b442408	                mov rax, qword [r12 + 8]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x40004e4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x40004e9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x40004ee	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_19
0x40004f0	        0x488b1c18	              mov rbx, qword [rax + rbx]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x40004f4	      0xe800000000	                          call 0x40004f9	        54	gettext.h	FUNCTION_19
0x40004f9	          0x4889c7	                            mov rdi, rax	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x40004fc	            0x31c0	                            xor eax, eax	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x40004fe	          0x4889de	                            mov rsi, rbx	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x4000501	      0xe800000000	                          call 0x4000506	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x4000506	      0xb8ffffffff	                     mov eax, 0xffffffff	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x400050b	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       424	replace.c	FUNCTION_12
0x4000510	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       424	replace.c	FUNCTION_12
0x4000519	            0x7579	                           jne 0x4000594	       424	replace.c	FUNCTION_12
0x400051b	        0x4883c440	                           add rsp, 0x40	       424	replace.c	FUNCTION_12
0x400051f	              0x5b	                                 pop rbx	       424	replace.c	FUNCTION_12
0x4000520	              0x5d	                                 pop rbp	       424	replace.c	FUNCTION_12
0x4000521	            0x415c	                                 pop r12	       424	replace.c	FUNCTION_12
0x4000523	            0x415d	                                 pop r13	       424	replace.c	FUNCTION_12
0x4000525	            0x415e	                                 pop r14	       424	replace.c	FUNCTION_12
0x4000527	              0xc3	                                     ret	       424	replace.c	FUNCTION_12
0x4000528	     0xf1f84000000	                   nop dword [rax + rax]	       424	replace.c	FUNCTION_12
0x4000530	          0x4889e7	                            mov rdi, rsp	       421	replace.c	FUNCTION_12	CALL_14
0x4000533	      0xe800000000	                          call 0x4000538	       421	replace.c	FUNCTION_12	CALL_14
0x4000538	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x400053d	          0x4889c3	                            mov rbx, rax	       421	replace.c	FUNCTION_12	CALL_14
0x4000540	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x4000545	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_19
0x4000547	      0xe800000000	                          call 0x400054c	        54	gettext.h	FUNCTION_19
0x400054c	          0x4889da	                            mov rdx, rbx	       421	replace.c	FUNCTION_12	CALL_14
0x400054f	          0x4889c7	                            mov rdi, rax	       421	replace.c	FUNCTION_12	CALL_14
0x4000552	          0x4c89f6	                            mov rsi, r14	       421	replace.c	FUNCTION_12	CALL_14
0x4000555	            0x31c0	                            xor eax, eax	       421	replace.c	FUNCTION_12	CALL_14
0x4000557	      0xe800000000	                          call 0x400055c	       421	replace.c	FUNCTION_12	CALL_14
0x400055c	      0xb8ffffffff	                     mov eax, 0xffffffff	       421	replace.c	FUNCTION_12	CALL_14
0x4000561	            0xeba8	                           jmp 0x400050b	       421	replace.c	FUNCTION_12	CALL_14
0x4000563	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x4000568	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x400056d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_19
0x400056f	      0xe800000000	                          call 0x4000574	        54	gettext.h	FUNCTION_19
0x4000574	          0x4c89f6	                            mov rsi, r14	       409	replace.c	FUNCTION_12	CALL_8
0x4000577	          0x4889c7	                            mov rdi, rax	       409	replace.c	FUNCTION_12	CALL_8
0x400057a	            0x31c0	                            xor eax, eax	       409	replace.c	FUNCTION_12	CALL_8
0x400057c	      0xe800000000	                          call 0x4000581	       409	replace.c	FUNCTION_12	CALL_8
0x4000581	      0xb8ffffffff	                     mov eax, 0xffffffff	       409	replace.c	FUNCTION_12	CALL_8
0x4000586	            0xeb83	                           jmp 0x400050b	       409	replace.c	FUNCTION_12	CALL_8
0x4000588	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_19
0x400058d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_19
0x4000592	            0xebd9	                           jmp 0x400056d	        54	gettext.h	FUNCTION_19
0x4000594	      0xe800000000	                          call 0x4000599	       424	replace.c	FUNCTION_12
replace_object_oid	FOR,0:CALL,13:DO,0:functions,0:IF,3:SWITCH,0:ELSE,0:WHILE,0	109
0x4000120	            0x4157	                                push r15	       163	replace.c	FUNCTION_6
0x4000122	            0x4156	                                push r14	       163	replace.c	FUNCTION_6
0x4000124	          0x4989fe	                            mov r14, rdi	       163	replace.c	FUNCTION_6
0x4000127	            0x4155	                                push r13	       163	replace.c	FUNCTION_6
0x4000129	            0x4154	                                push r12	       163	replace.c	FUNCTION_6
0x400012b	          0x4989d7	                            mov r15, rdx	       163	replace.c	FUNCTION_6
0x400012e	              0x55	                                push rbp	       163	replace.c	FUNCTION_6
0x400012f	              0x53	                                push rbx	       163	replace.c	FUNCTION_6
0x4000130	            0x31d2	                            xor edx, edx	       171	replace.c	FUNCTION_6	CALL_1
0x4000132	          0x4989cc	                            mov r12, rcx	       163	replace.c	FUNCTION_6
0x4000135	          0x4489c5	                            mov ebp, r8d	       163	replace.c	FUNCTION_6
0x4000138	          0x4889f3	                            mov rbx, rsi	       163	replace.c	FUNCTION_6
0x400013b	        0x4883ec68	                           sub rsp, 0x68	       163	replace.c	FUNCTION_6
0x400013f	    0x488b3d000000	            mov rdi, qword [0x04000146] 	       171	replace.c	FUNCTION_6	CALL_1
0x4000146	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	replace.c	FUNCTION_6
0x400014f	      0x4889442458	             mov qword [rsp + 0x58], rax	       163	replace.c	FUNCTION_6
0x4000154	            0x31c0	                            xor eax, eax	       163	replace.c	FUNCTION_6
0x4000156	    0x48c704240000	                      mov qword [rsp], 0	       166	replace.c	FUNCTION_6
0x400015e	    0x48c744240800	                  mov qword [rsp + 8], 0	       166	replace.c	FUNCTION_6
0x4000167	    0x48c744241000	               mov qword [rsp + 0x10], 0	       166	replace.c	FUNCTION_6
0x4000170	    0x48c744242000	               mov qword [rsp + 0x20], 0	       168	replace.c	FUNCTION_6
0x4000179	    0x48c744242800	               mov qword [rsp + 0x28], 0	       168	replace.c	FUNCTION_6
0x4000182	    0x48c744243000	               mov qword [rsp + 0x30], 0	       168	replace.c	FUNCTION_6
0x400018b	      0xe800000000	                          call 0x4000190	       171	replace.c	FUNCTION_6	CALL_1
0x4000190	    0x488b3d000000	            mov rdi, qword [0x04000197] 	       172	replace.c	FUNCTION_6	CALL_2
0x4000197	            0x31d2	                            xor edx, edx	       172	replace.c	FUNCTION_6	CALL_2
0x4000199	          0x4c89e6	                            mov rsi, r12	       172	replace.c	FUNCTION_6	CALL_2
0x400019c	          0x4189c5	                           mov r13d, eax	       171	replace.c	FUNCTION_6	CALL_1
0x400019f	      0xe800000000	                          call 0x40001a4	       172	replace.c	FUNCTION_6	CALL_2
0x40001a4	            0x85ed	                           test ebp, ebp	       173	replace.c	FUNCTION_6	IF_1
0x40001a6	            0x7509	                           jne 0x40001b1	       173	replace.c	FUNCTION_6	IF_1
0x40001a8	          0x4139c5	                           cmp r13d, eax	       173	replace.c	FUNCTION_6	IF_1
0x40001ab	     0xf85b7000000	                           jne 0x4000268	       173	replace.c	FUNCTION_6	IF_1
0x40001b1	      0x488d742440	                   lea rsi, [rsp + 0x40]	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x40001b6	            0x89e9	                            mov ecx, ebp	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x40001b8	          0x4889e2	                            mov rdx, rsp	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x40001bb	          0x4889df	                            mov rdi, rbx	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x40001be	      0xe87dfeffff	                call sym.check_ref_valid	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x40001c3	            0x85c0	                           test eax, eax	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x40001c5	     0xf85d5000000	                           jne 0x40002a0	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x40001cb	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       186	replace.c	FUNCTION_6	CALL_8
0x40001d0	      0xe800000000	                          call 0x40001d5	       186	replace.c	FUNCTION_6	CALL_8
0x40001d5	          0x4885c0	                           test rax, rax	       187	replace.c	FUNCTION_6	IF_3
0x40001d8	          0x4889c5	                            mov rbp, rax	       186	replace.c	FUNCTION_6	CALL_8
0x40001db	            0x742b	                            je 0x4000208	       187	replace.c	FUNCTION_6	IF_3
0x40001dd	        0x4883ec08	                              sub rsp, 8	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40001e1	          0x4531c9	                            xor r9d, r9d	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40001e4	          0x4531c0	                            xor r8d, r8d	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40001e7	      0x488d442428	                   lea rax, [rsp + 0x28]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40001ec	          0x4c89e2	                            mov rdx, r12	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40001ef	          0x4889ef	                            mov rdi, rbp	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40001f2	              0x50	                                push rax	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40001f3	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40001f8	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40001fd	      0xe800000000	                          call 0x4000202	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000202	            0x85c0	                           test eax, eax	       187	replace.c	FUNCTION_6	IF_3
0x4000204	              0x5a	                                 pop rdx	       187	replace.c	FUNCTION_6	IF_3
0x4000205	              0x59	                                 pop rcx	       187	replace.c	FUNCTION_6	IF_3
0x4000206	            0x7448	                            je 0x4000250	       187	replace.c	FUNCTION_6	IF_3
0x4000208	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       191	replace.c	FUNCTION_6	CALL_11
0x400020d	      0xbf00000000	                              mov edi, 0	       191	replace.c	FUNCTION_6	CALL_11
0x4000212	            0x31c0	                            xor eax, eax	       191	replace.c	FUNCTION_6	CALL_11
0x4000214	      0xbbffffffff	                     mov ebx, 0xffffffff	       191	replace.c	FUNCTION_6	CALL_11
0x4000219	      0xe800000000	                          call 0x400021e	       191	replace.c	FUNCTION_6	CALL_11
0x400021e	          0x4889ef	                            mov rdi, rbp	       193	replace.c	FUNCTION_6	CALL_12
0x4000221	      0xe800000000	                          call 0x4000226	       193	replace.c	FUNCTION_6	CALL_12
0x4000226	          0x4889e7	                            mov rdi, rsp	       194	replace.c	FUNCTION_6	CALL_13
0x4000229	      0xe800000000	                          call 0x400022e	       194	replace.c	FUNCTION_6	CALL_13
0x400022e	            0x89d8	                            mov eax, ebx	       195	replace.c	FUNCTION_6
0x4000230	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       196	replace.c	FUNCTION_6
0x4000235	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       196	replace.c	FUNCTION_6
0x400023e	            0x756f	                           jne 0x40002af	       196	replace.c	FUNCTION_6
0x4000240	        0x4883c468	                           add rsp, 0x68	       196	replace.c	FUNCTION_6
0x4000244	              0x5b	                                 pop rbx	       196	replace.c	FUNCTION_6
0x4000245	              0x5d	                                 pop rbp	       196	replace.c	FUNCTION_6
0x4000246	            0x415c	                                 pop r12	       196	replace.c	FUNCTION_6
0x4000248	            0x415d	                                 pop r13	       196	replace.c	FUNCTION_6
0x400024a	            0x415e	                                 pop r14	       196	replace.c	FUNCTION_6
0x400024c	            0x415f	                                 pop r15	       196	replace.c	FUNCTION_6
0x400024e	              0xc3	                                     ret	       196	replace.c	FUNCTION_6
0x400024f	              0x90	                                     nop	       196	replace.c	FUNCTION_6
0x4000250	      0x488d742420	                   lea rsi, [rsp + 0x20]	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x4000255	          0x4889ef	                            mov rdi, rbp	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x4000258	      0xe800000000	                          call 0x400025d	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x400025d	            0x85c0	                           test eax, eax	       189	replace.c	FUNCTION_6	IF_3
0x400025f	            0x75a7	                           jne 0x4000208	       189	replace.c	FUNCTION_6	IF_3
0x4000261	            0x31db	                            xor ebx, ebx	       169	replace.c	FUNCTION_6
0x4000263	            0xebb9	                           jmp 0x400021e	       169	replace.c	FUNCTION_6
0x4000265	           0xf1f00	                         nop dword [rax]	       169	replace.c	FUNCTION_6
0x4000268	            0x89c7	                            mov edi, eax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400026a	      0xe800000000	                          call 0x400026f	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400026f	          0x4489ef	                           mov edi, r13d	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000272	          0x4889c3	                            mov rbx, rax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000275	      0xe800000000	                          call 0x400027a	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400027a	          0x4989d8	                             mov r8, rbx	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400027d	          0x4889c2	                            mov rdx, rax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000280	          0x4c89f9	                            mov rcx, r15	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000283	          0x4c89f6	                            mov rsi, r14	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000286	      0xbf00000000	                              mov edi, 0	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400028b	            0x31c0	                            xor eax, eax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400028d	      0xe800000000	                          call 0x4000292	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000292	      0xb8ffffffff	                     mov eax, 0xffffffff	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000297	            0xeb97	                           jmp 0x4000230	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000299	     0xf1f80000000	                         nop dword [rax]	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x40002a0	          0x4889e7	                            mov rdi, rsp	       182	replace.c	FUNCTION_6	IF_2	CALL_7
0x40002a3	      0xe800000000	                          call 0x40002a8	       182	replace.c	FUNCTION_6	IF_2	CALL_7
0x40002a8	      0xb8ffffffff	                     mov eax, 0xffffffff	       183	replace.c	FUNCTION_6	IF_2
0x40002ad	            0xeb81	                           jmp 0x4000230	       183	replace.c	FUNCTION_6	IF_2
0x40002af	      0xe800000000	                          call 0x40002b4	       196	replace.c	FUNCTION_6
check_ref_valid	FOR,0:CALL,7:DO,0:functions,0:IF,3:SWITCH,0:ELSE,1:WHILE,0	61
0x4000040	            0x4154	                                push r12	       160	strbuf.h	
0x4000042	              0x55	                                push rbp	       168	strbuf.h	FUNCTION_50	CALL_2
0x4000043	          0x4189cc	                           mov r12d, ecx	       168	strbuf.h	FUNCTION_50	CALL_2
0x4000046	              0x53	                                push rbx	       168	strbuf.h	FUNCTION_50	CALL_2
0x4000047	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       168	strbuf.h	FUNCTION_50	CALL_2
0x400004b	          0x4889f5	                            mov rbp, rsi	       168	strbuf.h	FUNCTION_50	CALL_2
0x400004e	          0x4889d3	                            mov rbx, rdx	       168	strbuf.h	FUNCTION_50	CALL_2
0x4000051	    0x48c742080000	                  mov qword [rdx + 8], 0	       168	strbuf.h	FUNCTION_50	CALL_2
0x4000059	    0x483d00000000	                              cmp rax, 0	       168	strbuf.h	FUNCTION_50	CALL_2
0x400005f	            0x744f	                            je 0x40000b0	       165	strbuf.h	FUNCTION_50	IF_2
0x4000061	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_50	IF_2
0x4000064	      0xe800000000	                          call 0x4000069	       147	replace.c	FUNCTION_5	CALL_2
0x4000069	    0x488b15000000	            mov rdx, qword [0x04000070] 	       147	replace.c	FUNCTION_5	CALL_2
0x4000070	          0x4889c1	                            mov rcx, rax	       147	replace.c	FUNCTION_5	CALL_2
0x4000073	      0xbe00000000	                              mov esi, 0	       147	replace.c	FUNCTION_5	CALL_2
0x4000078	            0x31c0	                            xor eax, eax	       147	replace.c	FUNCTION_5	CALL_2
0x400007a	          0x4889df	                            mov rdi, rbx	       147	replace.c	FUNCTION_5	CALL_2
0x400007d	      0xe800000000	                          call 0x4000082	       147	replace.c	FUNCTION_5	CALL_2
0x4000082	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000086	            0x31f6	                            xor esi, esi	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000088	      0xe800000000	                          call 0x400008d	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x400008d	            0x85c0	                           test eax, eax	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x400008f	            0x754f	                           jne 0x40000e0	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000091	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x4000095	          0x4889ee	                            mov rsi, rbp	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x4000098	      0xe800000000	                          call 0x400009d	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x400009d	            0x85c0	                           test eax, eax	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x400009f	            0x751f	                           jne 0x40000c0	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x40000a1	          0x4585e4	                         test r12d, r12d	       153	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40000a4	            0x745a	                            je 0x4000100	       153	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40000a6	              0x5b	                                 pop rbx	       156	replace.c	FUNCTION_5
0x40000a7	              0x5d	                                 pop rbp	       156	replace.c	FUNCTION_5
0x40000a8	            0x415c	                                 pop r12	       156	replace.c	FUNCTION_5
0x40000aa	              0xc3	                                     ret	       156	replace.c	FUNCTION_5
0x40000ab	       0xf1f440000	                   nop dword [rax + rax]	       156	replace.c	FUNCTION_5
0x40000b0	    0x803d00000000	                cmp byte [0x040000b7], 0	       168	strbuf.h	FUNCTION_50	CALL_2
0x40000b7	            0x74ab	                            je 0x4000064	       168	strbuf.h	FUNCTION_50	CALL_2
0x40000b9	      0xe800000000	                          call 0x40000be	       168	strbuf.h	FUNCTION_50	CALL_2
0x40000be	            0x6690	                                     nop	       168	strbuf.h	FUNCTION_50	CALL_2
0x40000c0	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_83	CALL_6
0x40000c8	    0x48c745080000	                  mov qword [rbp + 8], 0	        90	string3.h	FUNCTION_83	CALL_6
0x40000d0	            0x31c0	                            xor eax, eax	       155	replace.c	FUNCTION_5
0x40000d2	    0xc74510000000	               mov dword [rbp + 0x10], 0	        90	string3.h	FUNCTION_83	CALL_6
0x40000d9	              0x5b	                                 pop rbx	       156	replace.c	FUNCTION_5
0x40000da	              0x5d	                                 pop rbp	       156	replace.c	FUNCTION_5
0x40000db	            0x415c	                                 pop r12	       156	replace.c	FUNCTION_5
0x40000dd	              0xc3	                                     ret	       156	replace.c	FUNCTION_5
0x40000de	            0x6690	                                     nop	       156	replace.c	FUNCTION_5
0x40000e0	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       149	replace.c	FUNCTION_5	CALL_4
0x40000e4	      0xbf00000000	                              mov edi, 0	       149	replace.c	FUNCTION_5	CALL_4
0x40000e9	            0x31c0	                            xor eax, eax	       149	replace.c	FUNCTION_5	CALL_4
0x40000eb	      0xe800000000	                          call 0x40000f0	       149	replace.c	FUNCTION_5	CALL_4
0x40000f0	      0xb8ffffffff	                     mov eax, 0xffffffff	       149	replace.c	FUNCTION_5	CALL_4
0x40000f5	            0xebaf	                           jmp 0x40000a6	       149	replace.c	FUNCTION_5	CALL_4
0x40000f7	    0x660f1f840000	                    nop word [rax + rax]	       149	replace.c	FUNCTION_5	CALL_4
0x4000100	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000104	      0xbf00000000	                              mov edi, 0	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000109	            0x31c0	                            xor eax, eax	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x400010b	      0xe800000000	                          call 0x4000110	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000110	      0xb8ffffffff	                     mov eax, 0xffffffff	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000115	            0xeb8f	                           jmp 0x40000a6	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
