read_blob_entry	ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,2:functions,0:CALL,2:DO,0	24
0x4000070	        0x4883ec18	                           sub rsp, 0x18	        86	entry.c	FUNCTION_4
0x4000074	          0x4889f2	                            mov rdx, rsi	        86	entry.c	FUNCTION_4
0x4000077	        0x4883c744	                           add rdi, 0x44	        88	entry.c	FUNCTION_4	CALL_1
0x400007b	      0x488d742404	                      lea rsi, [rsp + 4]	      1200	cache.h	FUNCTION_35	CALL_1
0x4000080	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_35	CALL_1
0x4000085	    0x64488b042528	                mov rax, qword fs:[0x28]	        86	entry.c	FUNCTION_4
0x400008e	      0x4889442408	                mov qword [rsp + 8], rax	        86	entry.c	FUNCTION_4
0x4000093	            0x31c0	                            xor eax, eax	        86	entry.c	FUNCTION_4
0x4000095	      0xe800000000	                          call 0x400009a	      1200	cache.h	FUNCTION_35	CALL_1
0x400009a	          0x4885c0	                           test rax, rax	        90	entry.c	FUNCTION_4	IF_1
0x400009d	            0x7407	                            je 0x40000a6	        90	entry.c	FUNCTION_4	IF_1
0x400009f	      0x837c240403	                  cmp dword [rsp + 4], 3	        91	entry.c	FUNCTION_4	IF_1	IF_2
0x40000a4	            0x751a	                           jne 0x40000c0	        91	entry.c	FUNCTION_4	IF_1	IF_2
0x40000a6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        96	entry.c	FUNCTION_4
0x40000ab	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        96	entry.c	FUNCTION_4
0x40000b4	            0x7516	                           jne 0x40000cc	        96	entry.c	FUNCTION_4
0x40000b6	        0x4883c418	                           add rsp, 0x18	        96	entry.c	FUNCTION_4
0x40000ba	              0xc3	                                     ret	        96	entry.c	FUNCTION_4
0x40000bb	       0xf1f440000	                   nop dword [rax + rax]	        96	entry.c	FUNCTION_4
0x40000c0	          0x4889c7	                            mov rdi, rax	        93	entry.c	FUNCTION_4	IF_1	CALL_2
0x40000c3	      0xe800000000	                          call 0x40000c8	        93	entry.c	FUNCTION_4	IF_1	CALL_2
0x40000c8	            0x31c0	                            xor eax, eax	        95	entry.c	FUNCTION_4
0x40000ca	            0xebda	                           jmp 0x40000a6	        95	entry.c	FUNCTION_4
0x40000cc	      0xe800000000	                          call 0x40000d1	        96	entry.c	FUNCTION_4
enable_delayed_checkout	ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,1:functions,0:CALL,3:DO,0	18
0x4000d90	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       144	entry.c	FUNCTION_8	IF_1
0x4000d95	            0x7409	                            je 0x4000da0	       144	entry.c	FUNCTION_8	IF_1
0x4000d97	            0xf3c3	                                     ret	       144	entry.c	FUNCTION_8	IF_1
0x4000d99	     0xf1f80000000	                         nop dword [rax]	       144	entry.c	FUNCTION_8	IF_1
0x4000da0	              0x53	                                push rbx	       143	entry.c	FUNCTION_8
0x4000da1	          0x4889fb	                            mov rbx, rdi	       143	entry.c	FUNCTION_8
0x4000da4	      0xbf48000000	                           mov edi, 0x48	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x4000da9	      0xe800000000	                          call 0x4000dae	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x4000dae	        0x488d7808	                      lea rdi, [rax + 8]	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x4000db2	        0x48894318	             mov qword [rbx + 0x18], rax	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x4000db6	            0x31f6	                            xor esi, esi	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x4000db8	    0xc70001000000	                      mov dword [rax], 1	       146	entry.c	FUNCTION_8	IF_1
0x4000dbe	      0xe800000000	                          call 0x4000dc3	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x4000dc3	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x4000dc7	            0x31f6	                            xor esi, esi	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x4000dc9	              0x5b	                                 pop rbx	       150	entry.c	FUNCTION_8
0x4000dca	        0x4883c728	                           add rdi, 0x28	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x4000dce	      0xe900000000	                           jmp 0x4000dd3	       148	entry.c	FUNCTION_8	IF_1	CALL_3
open_output_fd	ELSE,1:WHILE,0:SWITCH,0:FOR,0:IF,1:functions,0:CALL,3:DO,0	34
0x40000e0	          0x8b4634	            mov eax, dword [rsi + 0x34] 	       100	entry.c	FUNCTION_5
0x40000e3	            0x89c1	                            mov ecx, eax	       100	entry.c	FUNCTION_5
0x40000e5	    0x81e100f00000	                         and ecx, 0xf000	       100	entry.c	FUNCTION_5
0x40000eb	            0x85d2	                           test edx, edx	       101	entry.c	FUNCTION_5	IF_1
0x40000ed	            0x7439	                            je 0x4000128	       101	entry.c	FUNCTION_5	IF_1
0x40000ef	    0x81f900800000	                         cmp ecx, 0x8000	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x40000f5	              0x53	                                push rbx	        99	entry.c	FUNCTION_5
0x40000f6	      0xb800000000	                              mov eax, 0	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x40000fb	      0xb900000000	                              mov ecx, 0	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x4000100	          0x4889fb	                            mov rbx, rdi	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x4000103	      0xba00000000	                              mov edx, 0	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x4000108	        0x480f45c8	                         cmovne rcx, rax	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x400010c	      0xbe19000000	                           mov esi, 0x19	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x4000111	            0x31c0	                            xor eax, eax	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x4000113	      0xe800000000	                          call 0x4000118	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x4000118	          0x4889df	                            mov rdi, rbx	       104	entry.c	FUNCTION_5	IF_1	CALL_2
0x400011b	              0x5b	                                 pop rbx	       108	entry.c	FUNCTION_5
0x400011c	      0xe900000000	                           jmp 0x4000121	       104	entry.c	FUNCTION_5	IF_1	CALL_2
0x4000121	     0xf1f80000000	                         nop dword [rax]	       104	entry.c	FUNCTION_5	IF_1	CALL_2
0x4000128	    0x81f900800000	                         cmp ecx, 0x8000	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x400012e	      0xbab6010000	                          mov edx, 0x1b6	        81	entry.c	FUNCTION_3
0x4000133	            0x7413	                            je 0x4000148	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x4000135	      0xbec1000000	                           mov esi, 0xc1	        53	fcntl2.h	FUNCTION_43	IF_2	CALL_9
0x400013a	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_43	IF_2	CALL_9
0x400013c	      0xe900000000	                           jmp 0x4000141	        53	fcntl2.h	FUNCTION_43	IF_2	CALL_9
0x4000141	     0xf1f80000000	                         nop dword [rax]	        53	fcntl2.h	FUNCTION_43	IF_2	CALL_9
0x4000148	          0x83e040	                           and eax, 0x40	        81	entry.c	FUNCTION_3
0x400014b	      0xbec1000000	                           mov esi, 0xc1	        53	fcntl2.h	FUNCTION_43	IF_2	CALL_9
0x4000150	          0x83f801	                              cmp eax, 1	        81	entry.c	FUNCTION_3
0x4000153	            0x19d2	                            sbb edx, edx	        81	entry.c	FUNCTION_3
0x4000155	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_43	IF_2	CALL_9
0x4000157	          0x83e2b7	                     and edx, 0xffffffb7	        81	entry.c	FUNCTION_3
0x400015a	    0x81c2ff010000	                          add edx, 0x1ff	        81	entry.c	FUNCTION_3
0x4000160	      0xe900000000	                           jmp 0x4000165	        53	fcntl2.h	FUNCTION_43	IF_2	CALL_9
remove_available_paths	ELSE,0:WHILE,0:SWITCH,0:FOR,0:IF,1:functions,0:CALL,1:DO,0	14
0x4000040	              0x53	                                push rbx	       153	entry.c	FUNCTION_9
0x4000041	          0x4889fb	                            mov rbx, rdi	       153	entry.c	FUNCTION_9
0x4000044	          0x4889f7	                            mov rdi, rsi	       153	entry.c	FUNCTION_9
0x4000047	          0x488b33	                    mov rsi, qword [rbx]	       157	entry.c	FUNCTION_9	CALL_1
0x400004a	      0xe800000000	                          call 0x400004f	       157	entry.c	FUNCTION_9	CALL_1
0x400004f	          0x4885c0	                           test rax, rax	       158	entry.c	FUNCTION_9	IF_1
0x4000052	            0x7407	                            je 0x400005b	       158	entry.c	FUNCTION_9	IF_1
0x4000054	          0x488b13	                    mov rdx, qword [rbx]	       159	entry.c	FUNCTION_9	IF_1
0x4000057	        0x48895008	                mov qword [rax + 8], rdx	       159	entry.c	FUNCTION_9	IF_1
0x400005b	          0x4885c0	                           test rax, rax	       160	entry.c	FUNCTION_9
0x400005e	           0xf94c0	                                 sete al	       160	entry.c	FUNCTION_9
0x4000061	           0xfb6c0	                           movzx eax, al	       160	entry.c	FUNCTION_9
0x4000064	              0x5b	                                 pop rbx	       161	entry.c	FUNCTION_9
0x4000065	              0xc3	                                     ret	       161	entry.c	FUNCTION_9
finish_delayed_checkout	ELSE,0:WHILE,1:SWITCH,0:FOR,0:IF,1:functions,2:CALL,7:DO,0	186
0x4000de0	            0x4157	                                push r15	       164	entry.c	FUNCTION_10
0x4000de2	            0x4156	                                push r14	       164	entry.c	FUNCTION_10
0x4000de4	            0x4155	                                push r13	       164	entry.c	FUNCTION_10
0x4000de6	            0x4154	                                push r12	       164	entry.c	FUNCTION_10
0x4000de8	              0x55	                                push rbp	       164	entry.c	FUNCTION_10
0x4000de9	              0x53	                                push rbx	       164	entry.c	FUNCTION_10
0x4000dea	        0x4883ec68	                           sub rsp, 0x68	       164	entry.c	FUNCTION_10
0x4000dee	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	       170	entry.c	FUNCTION_10
0x4000df2	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	entry.c	FUNCTION_10
0x4000dfb	      0x4889442458	             mov qword [rsp + 0x58], rax	       164	entry.c	FUNCTION_10
0x4000e00	            0x31c0	                            xor eax, eax	       164	entry.c	FUNCTION_10
0x4000e02	          0x4885ed	                           test rbp, rbp	       172	entry.c	FUNCTION_10	IF_1
0x4000e05	     0xf84a1010000	                            je 0x4000fac	       172	entry.c	FUNCTION_10	IF_1
0x4000e0b	          0x8b4530	            mov eax, dword [rbp + 0x30] 	       176	entry.c	FUNCTION_10
0x4000e0e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_49
0x4000e13	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_49
0x4000e18	          0x4989fe	                            mov r14, rdi	        54	gettext.h	FUNCTION_49
0x4000e1b	    0xc74500020000	                      mov dword [rbp], 2	       175	entry.c	FUNCTION_10
0x4000e22	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_49
0x4000e24	            0x89c3	                            mov ebx, eax	       176	entry.c	FUNCTION_10
0x4000e26	        0x8944240c	              mov dword [rsp + 0xc], eax	       176	entry.c	FUNCTION_10
0x4000e2a	      0xe800000000	                          call 0x4000e2f	        54	gettext.h	FUNCTION_49
0x4000e2f	            0x89de	                            mov esi, ebx	       177	entry.c	FUNCTION_10	CALL_2
0x4000e31	          0x4889c7	                            mov rdi, rax	       177	entry.c	FUNCTION_10	CALL_2
0x4000e34	      0xe800000000	                          call 0x4000e39	       177	entry.c	FUNCTION_10	CALL_2
0x4000e39	        0x448b6510	           mov r12d, dword [rbp + 0x10] 	       178	entry.c	FUNCTION_10	WHILE_1
0x4000e3d	      0x4889442428	             mov qword [rsp + 0x28], rax	       177	entry.c	FUNCTION_10	CALL_2
0x4000e42	        0x488d4508	                      lea rax, [rbp + 8]	       177	entry.c	FUNCTION_10	CALL_2
0x4000e46	      0x4889442418	             mov qword [rsp + 0x18], rax	       177	entry.c	FUNCTION_10	CALL_2
0x4000e4b	        0x488d4528	                   lea rax, [rbp + 0x28]	       177	entry.c	FUNCTION_10	CALL_2
0x4000e4f	          0x4585e4	                         test r12d, r12d	       178	entry.c	FUNCTION_10	WHILE_1
0x4000e52	      0x4889442410	             mov qword [rsp + 0x10], rax	       178	entry.c	FUNCTION_10	WHILE_1
0x4000e57	     0xf84d2000000	                            je 0x4000f2f	       178	entry.c	FUNCTION_10	WHILE_1
0x4000e5d	          0x4531ed	                          xor r13d, r13d	       178	entry.c	FUNCTION_10	WHILE_1
0x4000e60	          0x4531e4	                          xor r12d, r12d	       178	entry.c	FUNCTION_10	WHILE_1
0x4000e63	       0xf1f440000	                   nop dword [rax + rax]	       178	entry.c	FUNCTION_10	WHILE_1
0x4000e68	        0x488b5d08	                mov rbx, qword [rbp + 8]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e6c	          0x4885db	                           test rbx, rbx	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e6f	     0xf84a3000000	                            je 0x4000f18	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e75	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e78	        0x48c1e004	                              shl rax, 4	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e7c	          0x4801d8	                            add rax, rbx	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e7f	          0x4839c3	                            cmp rbx, rax	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e82	            0x722f	                            jb 0x4000eb3	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e84	      0xe98f000000	                           jmp 0x4000f18	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e89	     0xf1f80000000	                         nop dword [rax]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e90	    0x48c703000000	                      mov qword [rbx], 0	       186	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1
0x4000e97	    0x41bc01000000	                             mov r12d, 1	       185	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1
0x4000e9d	        0x4883c310	                           add rbx, 0x10	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ea1	            0x7475	                            je 0x4000f18	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ea3	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ea6	        0x48c1e004	                              shl rax, 4	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000eaa	        0x48034508	                add rax, qword [rbp + 8]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000eae	          0x4839c3	                            cmp rbx, rax	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000eb1	            0x7365	                           jae 0x4000f18	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000eb3	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x4000eb7	          0x2b7530	             sub esi, dword [rbp + 0x30]	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x4000eba	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x4000ebf	      0x80642440fe	             and byte [rsp + 0x40], 0xfe	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ec4	    0x48c744243000	               mov qword [rsp + 0x30], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ecd	    0xc74424380000	               mov dword [rsp + 0x38], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ed5	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000edd	    0x48c744244800	               mov qword [rsp + 0x48], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ee6	      0xe800000000	                          call 0x4000eeb	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x4000eeb	          0x488b3b	                    mov rdi, qword [rbx]	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000eee	      0x488d742430	                   lea rsi, [rsp + 0x30]	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000ef3	      0xe800000000	                          call 0x4000ef8	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000ef8	            0x85c0	                           test eax, eax	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000efa	            0x7494	                            je 0x4000e90	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000efc	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       189	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0x4000f00	            0x85d2	                           test edx, edx	       189	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0x4000f02	     0xf85c8000000	                           jne 0x4000fd0	       189	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0x4000f08	    0x48c703000000	                      mov qword [rbx], 0	       196	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0x4000f0f	        0x4883c310	                           add rbx, 0x10	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000f13	            0x758e	                           jne 0x4000ea3	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000f15	           0xf1f00	                         nop dword [rax]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000f18	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4000f1d	            0x31f6	                            xor esi, esi	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4000f1f	      0xe800000000	                          call 0x4000f24	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4000f24	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       178	entry.c	FUNCTION_10	WHILE_1
0x4000f27	            0x85c0	                           test eax, eax	       178	entry.c	FUNCTION_10	WHILE_1
0x4000f29	     0xf8539ffffff	                           jne 0x4000e68	       178	entry.c	FUNCTION_10	WHILE_1
0x4000f2f	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       237	entry.c	FUNCTION_10	CALL_4
0x4000f34	      0xe800000000	                          call 0x4000f39	       237	entry.c	FUNCTION_10	CALL_4
0x4000f39	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       238	entry.c	FUNCTION_10	CALL_5
0x4000f3e	            0x31f6	                            xor esi, esi	       238	entry.c	FUNCTION_10	CALL_5
0x4000f40	      0xe800000000	                          call 0x4000f45	       238	entry.c	FUNCTION_10	CALL_5
0x4000f45	          0x8b4530	            mov eax, dword [rbp + 0x30] 	       241	entry.c	FUNCTION_10
0x4000f48	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f4c	          0x4109c4	                            or r12d, eax	       241	entry.c	FUNCTION_10
0x4000f4f	          0x4885db	                           test rbx, rbx	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f52	            0x7439	                            je 0x4000f8d	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f54	        0x48c1e004	                              shl rax, 4	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f58	          0x4801d8	                            add rax, rbx	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f5b	          0x4839c3	                            cmp rbx, rax	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f5e	            0x7218	                            jb 0x4000f78	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f60	            0xeb2b	                           jmp 0x4000f8d	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f62	    0x660f1f440000	                    nop word [rax + rax]	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f68	          0x8b4530	            mov eax, dword [rbp + 0x30] 	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f6b	        0x48c1e004	                              shl rax, 4	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f6f	        0x48034528	             add rax, qword [rbp + 0x28]	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f73	          0x4839c3	                            cmp rbx, rax	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f76	            0x7315	                           jae 0x4000f8d	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f78	          0x488b33	                    mov rsi, qword [rbx]	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0x4000f7b	            0x31c0	                            xor eax, eax	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0x4000f7d	      0xbf00000000	                              mov edi, 0	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0x4000f82	      0xe800000000	                          call 0x4000f87	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0x4000f87	        0x4883c310	                           add rbx, 0x10	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f8b	            0x75db	                           jne 0x4000f68	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000f8d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       245	entry.c	FUNCTION_10	CALL_6
0x4000f92	            0x31f6	                            xor esi, esi	       245	entry.c	FUNCTION_10	CALL_6
0x4000f94	      0xe800000000	                          call 0x4000f99	       245	entry.c	FUNCTION_10	CALL_6
0x4000f99	          0x4889ef	                            mov rdi, rbp	       247	entry.c	FUNCTION_10	CALL_7
0x4000f9c	      0xe800000000	                          call 0x4000fa1	       247	entry.c	FUNCTION_10	CALL_7
0x4000fa1	    0x49c746180000	               mov qword [r14 + 0x18], 0	       248	entry.c	FUNCTION_10
0x4000fa9	          0x4489e0	                           mov eax, r12d	       250	entry.c	FUNCTION_10
0x4000fac	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       251	entry.c	FUNCTION_10
0x4000fb1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       251	entry.c	FUNCTION_10
0x4000fba	     0xf85ef000000	                           jne 0x40010af	       251	entry.c	FUNCTION_10
0x4000fc0	        0x4883c468	                           add rsp, 0x68	       251	entry.c	FUNCTION_10
0x4000fc4	              0x5b	                                 pop rbx	       251	entry.c	FUNCTION_10
0x4000fc5	              0x5d	                                 pop rbp	       251	entry.c	FUNCTION_10
0x4000fc6	            0x415c	                                 pop r12	       251	entry.c	FUNCTION_10
0x4000fc8	            0x415d	                                 pop r13	       251	entry.c	FUNCTION_10
0x4000fca	            0x415e	                                 pop r14	       251	entry.c	FUNCTION_10
0x4000fcc	            0x415f	                                 pop r15	       251	entry.c	FUNCTION_10
0x4000fce	              0xc3	                                     ret	       251	entry.c	FUNCTION_10
0x4000fcf	              0x90	                                     nop	       251	entry.c	FUNCTION_10
0x4000fd0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0x4000fd5	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0x4000fda	            0x31f6	                            xor esi, esi	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0x4000fdc	      0xba00000000	                              mov edx, 0	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0x4000fe1	      0xe800000000	                          call 0x4000fe6	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0x4000fe6	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000feb	          0x4d85ff	                           test r15, r15	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000fee	     0xf84a9feffff	                            je 0x4000e9d	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ff4	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ff8	        0x48c1e004	                              shl rax, 4	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ffc	          0x4c01f8	                            add rax, r15	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000fff	          0x4939c7	                            cmp r15, rax	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001002	            0x7255	                            jb 0x4001059	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001004	      0xe994feffff	                           jmp 0x4000e9d	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001009	     0xf1f80000000	                         nop dword [rax]	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001010	          0x4c89f6	                            mov rsi, r14	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001013	          0x4889c7	                            mov rdi, rax	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001016	        0x48890424	                    mov qword [rsp], rax	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x400101a	      0xe8c1f9ffff	          call sym.checkout_entry.part.4	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x400101f	        0x488b1424	                    mov rdx, qword [rsp]	       229	entry.c	FUNCTION_10	WHILE_1	IF_2
0x4001023	          0x4109c4	                            or r12d, eax	       228	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_4
0x4001026	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0x400102b	          0x8b4230	            mov eax, dword [rdx + 0x30] 	       229	entry.c	FUNCTION_10	WHILE_1	IF_2
0x400102e	          0x4901c5	                            add r13, rax	       229	entry.c	FUNCTION_10	WHILE_1	IF_2
0x4001031	          0x4c89ee	                            mov rsi, r13	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0x4001034	      0xe800000000	                          call 0x4001039	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0x4001039	        0x4983c710	                           add r15, 0x10	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x400103d	     0xf845afeffff	                            je 0x4000e9d	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001043	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001047	        0x48c1e004	                              shl rax, 4	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x400104b	      0x4803442430	             add rax, qword [rsp + 0x30]	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001050	          0x4939c7	                            cmp r15, rax	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001053	     0xf8344feffff	                           jae 0x4000e9d	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4001059	      0x49837f0800	                  cmp qword [r15 + 8], 0	       211	entry.c	FUNCTION_10	WHILE_1	IF_1
0x400105e	            0x7430	                            je 0x4001090	       211	entry.c	FUNCTION_10	WHILE_1	IF_1
0x4001060	          0x498b37	                    mov rsi, qword [r15]	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4001063	          0x4889f7	                            mov rdi, rsi	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4001066	        0x48893424	                    mov qword [rsp], rsi	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x400106a	      0xe800000000	                          call 0x400106f	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x400106f	        0x488b3424	                    mov rsi, qword [rsp]	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0x4001073	          0x498b3e	                    mov rdi, qword [r14]	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0x4001076	            0x31c9	                            xor ecx, ecx	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0x4001078	            0x89c2	                            mov edx, eax	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0x400107a	      0xe800000000	                          call 0x400107f	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0x400107f	          0x4885c0	                           test rax, rax	       227	entry.c	FUNCTION_10	WHILE_1	IF_2
0x4001082	            0x758c	                           jne 0x4001010	       227	entry.c	FUNCTION_10	WHILE_1	IF_2
0x4001084	    0x41bc01000000	                             mov r12d, 1	       232	entry.c	FUNCTION_10	WHILE_1	ELSE_1
0x400108a	            0xebad	                           jmp 0x4001039	       232	entry.c	FUNCTION_10	WHILE_1	ELSE_1
0x400108c	         0xf1f4000	                         nop dword [rax]	       232	entry.c	FUNCTION_10	WHILE_1	ELSE_1
0x4001090	          0x498b17	                    mov rdx, qword [r15]	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0x4001093	          0x488b33	                    mov rsi, qword [rbx]	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0x4001096	      0xbf00000000	                              mov edi, 0	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0x400109b	            0x31c0	                            xor eax, eax	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0x400109d	        0x4183cc01	                              or r12d, 1	       216	entry.c	FUNCTION_10	WHILE_1	IF_1
0x40010a1	      0xe800000000	                          call 0x40010a6	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0x40010a6	    0x48c703000000	                      mov qword [rbx], 0	       222	entry.c	FUNCTION_10	WHILE_1	IF_1
0x40010ad	            0xeb8a	                           jmp 0x4001039	       223	entry.c	FUNCTION_10	WHILE_1	IF_1
0x40010af	      0xe800000000	                          call 0x40010b4	       251	entry.c	FUNCTION_10
