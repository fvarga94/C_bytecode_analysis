parse_arg	IF,3:functions,0:FOR,0:CALL,6:SWITCH,0:DO,0:WHILE,1:ELSE,1	66
0x4000040	              0x55	                                push rbp	        28	update-ref.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        28	update-ref.c	FUNCTION_1
0x4000042	          0x4889fd	                            mov rbp, rdi	        28	update-ref.c	FUNCTION_1
0x4000045	          0x4889f3	                            mov rbx, rsi	        28	update-ref.c	FUNCTION_1
0x4000048	        0x4883ec18	                           sub rsp, 0x18	        28	update-ref.c	FUNCTION_1
0x400004c	      0x48897c2408	                mov qword [rsp + 8], rdi	        28	update-ref.c	FUNCTION_1
0x4000051	           0xfb607	                   movzx eax, byte [rdi]	        29	update-ref.c	FUNCTION_1	IF_1
0x4000054	            0x3c22	                            cmp al, 0x22	        29	update-ref.c	FUNCTION_1	IF_1
0x4000056	            0x753e	                           jne 0x4000096	        29	update-ref.c	FUNCTION_1	IF_1
0x4000058	            0xeb76	                           jmp 0x40000d0	        29	update-ref.c	FUNCTION_1	IF_1
0x400005a	    0x660f1f440000	                    nop word [rax + rax]	        29	update-ref.c	FUNCTION_1	IF_1
0x4000060	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_14	CALL_2
0x4000065	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_14	CALL_2
0x4000068	      0xe800000000	                          call 0x400006d	       228	strbuf.h	FUNCTION_14	CALL_2
0x400006d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_14	CALL_2
0x4000071	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_14
0x4000075	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_14
0x4000079	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_14
0x400007d	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_14
0x4000081	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_14
0x4000085	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_14
0x4000089	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_14
0x400008d	      0x488b6c2408	                mov rbp, qword [rsp + 8]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000092	         0xfb64500	                   movzx eax, byte [rbp]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000096	            0x84c0	                             test al, al	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000098	            0x7462	                            je 0x40000fc	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x400009a	    0xf68000000000	                      test byte [rax], 1	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x40000a1	            0x7559	                           jne 0x40000fc	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x40000a3	        0x488d4501	                      lea rax, [rbp + 1]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000a7	      0x4889442408	                mov qword [rsp + 8], rax	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000ac	          0x488b03	                    mov rax, qword [rbx]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000af	         0xfb66d00	                   movzx ebp, byte [rbp]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000b3	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_12
0x40000b6	            0x74a8	                            je 0x4000060	       141	strbuf.h	FUNCTION_12
0x40000b8	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_12
0x40000bc	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x40000c0	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x40000c3	            0x75ac	                           jne 0x4000071	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x40000c5	            0xeb99	                           jmp 0x4000060	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x40000c7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x40000d0	      0x488d542408	                      lea rdx, [rsp + 8]	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000d5	          0x4889fe	                            mov rsi, rdi	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000d8	          0x4889df	                            mov rdi, rbx	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000db	      0xe800000000	                          call 0x40000e0	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000e0	            0x85c0	                           test eax, eax	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000e2	            0x7522	                           jne 0x4000106	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000e4	      0x488b542408	                mov rdx, qword [rsp + 8]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000e9	           0xfb602	                   movzx eax, byte [rdx]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000ec	            0x84c0	                             test al, al	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000ee	            0x7409	                            je 0x40000f9	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000f0	    0xf68000000000	                      test byte [rax], 1	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000f7	            0x741c	                            je 0x4000115	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000f9	          0x4889d5	                            mov rbp, rdx	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000fc	        0x4883c418	                           add rsp, 0x18	        42	update-ref.c	FUNCTION_1
0x4000100	          0x4889e8	                            mov rax, rbp	        42	update-ref.c	FUNCTION_1
0x4000103	              0x5b	                                 pop rbx	        42	update-ref.c	FUNCTION_1
0x4000104	              0x5d	                                 pop rbp	        42	update-ref.c	FUNCTION_1
0x4000105	              0xc3	                                     ret	        42	update-ref.c	FUNCTION_1
0x4000106	          0x4889ee	                            mov rsi, rbp	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000109	      0xbf00000000	                              mov edi, 0	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x400010e	            0x31c0	                            xor eax, eax	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000110	      0xe800000000	                          call 0x4000115	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000115	          0x4889ee	                            mov rsi, rbp	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x4000118	      0xbf00000000	                              mov edi, 0	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x400011d	            0x31c0	                            xor eax, eax	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x400011f	      0xe800000000	                          call 0x4000124	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
cmd_update_ref	IF,16:functions,0:FOR,0:CALL,36:SWITCH,0:DO,0:WHILE,0:ELSE,3	595
0x40003f0	            0x4157	                                push r15	       355	update-ref.c	FUNCTION_10
0x40003f2	            0x4156	                                push r14	       355	update-ref.c	FUNCTION_10
0x40003f4	      0xb938000000	                           mov ecx, 0x38	       361	update-ref.c	FUNCTION_10
0x40003f9	            0x4155	                                push r13	       355	update-ref.c	FUNCTION_10
0x40003fb	            0x4154	                                push r12	       355	update-ref.c	FUNCTION_10
0x40003fd	          0x4989d4	                            mov r12, rdx	       355	update-ref.c	FUNCTION_10
0x4000400	              0x55	                                push rbp	       355	update-ref.c	FUNCTION_10
0x4000401	              0x53	                                push rbx	       355	update-ref.c	FUNCTION_10
0x4000402	            0x89fd	                            mov ebp, edi	       355	update-ref.c	FUNCTION_10
0x4000404	          0x4889f3	                            mov rbx, rsi	       355	update-ref.c	FUNCTION_10
0x4000407	            0x31f6	                            xor esi, esi	       372	update-ref.c	FUNCTION_10	CALL_15
0x4000409	    0x4881ecc80200	                          sub rsp, 0x2c8	       355	update-ref.c	FUNCTION_10
0x4000410	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	update-ref.c	FUNCTION_10
0x4000419	    0x48898424b802	            mov qword [rsp + 0x2b8], rax	       355	update-ref.c	FUNCTION_10
0x4000421	            0x31c0	                            xor eax, eax	       355	update-ref.c	FUNCTION_10
0x4000423	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       361	update-ref.c	FUNCTION_10
0x400042b	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       358	update-ref.c	FUNCTION_10
0x4000433	    0xc74424200000	               mov dword [rsp + 0x20], 0	       358	update-ref.c	FUNCTION_10
0x400043b	    0xc74424240000	               mov dword [rsp + 0x24], 0	       358	update-ref.c	FUNCTION_10
0x4000443	    0xc74424280000	               mov dword [rsp + 0x28], 0	       358	update-ref.c	FUNCTION_10
0x400044b	          0xf348ab	              rep stosq qword [rdi], rax	       361	update-ref.c	FUNCTION_10
0x400044e	      0x488d44241c	                   lea rax, [rsp + 0x1c]	       361	update-ref.c	FUNCTION_10
0x4000453	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       360	update-ref.c	FUNCTION_10
0x400045b	    0xc78424f00000	               mov dword [rsp + 0xf0], 9	       361	update-ref.c	FUNCTION_10
0x4000466	    0xc78424f40000	           mov dword [rsp + 0xf4], 0x6d 	       361	update-ref.c	FUNCTION_10
0x4000471	    0x48c784240001	              mov qword [rsp + 0x100], 0	       361	update-ref.c	FUNCTION_10
0x400047d	      0xbf00000000	                              mov edi, 0	       372	update-ref.c	FUNCTION_10	CALL_15
0x4000482	    0x488984244001	            mov qword [rsp + 0x140], rax	       361	update-ref.c	FUNCTION_10
0x400048a	      0x488d442420	                   lea rax, [rsp + 0x20]	       361	update-ref.c	FUNCTION_10
0x400048f	    0x48c784240801	              mov qword [rsp + 0x108], 0	       361	update-ref.c	FUNCTION_10
0x400049b	    0x48c784241001	              mov qword [rsp + 0x110], 0	       361	update-ref.c	FUNCTION_10
0x40004a7	    0xc78424300100	              mov dword [rsp + 0x130], 7	       361	update-ref.c	FUNCTION_10
0x40004b2	    0x488984248001	            mov qword [rsp + 0x180], rax	       361	update-ref.c	FUNCTION_10
0x40004ba	      0x488d442428	                   lea rax, [rsp + 0x28]	       361	update-ref.c	FUNCTION_10
0x40004bf	    0xc78424340100	          mov dword [rsp + 0x134], 0x64 	       361	update-ref.c	FUNCTION_10
0x40004ca	    0x48c784245001	              mov qword [rsp + 0x150], 0	       361	update-ref.c	FUNCTION_10
0x40004d6	    0xc78424580100	              mov dword [rsp + 0x158], 2	       361	update-ref.c	FUNCTION_10
0x40004e1	    0x48c784246801	              mov qword [rsp + 0x168], 1	       361	update-ref.c	FUNCTION_10
0x40004ed	    0xc78424700100	              mov dword [rsp + 0x170], 7	       361	update-ref.c	FUNCTION_10
0x40004f8	    0x48c784247801	              mov qword [rsp + 0x178], 0	       361	update-ref.c	FUNCTION_10
0x4000504	    0x48c784249001	              mov qword [rsp + 0x190], 0	       361	update-ref.c	FUNCTION_10
0x4000510	    0xc78424980100	              mov dword [rsp + 0x198], 2	       361	update-ref.c	FUNCTION_10
0x400051b	    0x48c78424a801	              mov qword [rsp + 0x1a8], 1	       361	update-ref.c	FUNCTION_10
0x4000527	    0xc78424b00100	              mov dword [rsp + 0x1b0], 7	       361	update-ref.c	FUNCTION_10
0x4000532	    0xc78424b40100	          mov dword [rsp + 0x1b4], 0x7a 	       361	update-ref.c	FUNCTION_10
0x400053d	    0x48898424c001	            mov qword [rsp + 0x1c0], rax	       361	update-ref.c	FUNCTION_10
0x4000545	      0x488d442424	                   lea rax, [rsp + 0x24]	       361	update-ref.c	FUNCTION_10
0x400054a	    0x48c78424d001	              mov qword [rsp + 0x1d0], 0	       361	update-ref.c	FUNCTION_10
0x4000556	    0xc78424d80100	              mov dword [rsp + 0x1d8], 2	       361	update-ref.c	FUNCTION_10
0x4000561	    0x48c78424e801	              mov qword [rsp + 0x1e8], 1	       361	update-ref.c	FUNCTION_10
0x400056d	    0x488984240002	            mov qword [rsp + 0x200], rax	       361	update-ref.c	FUNCTION_10
0x4000575	      0x488d44242c	                   lea rax, [rsp + 0x2c]	       361	update-ref.c	FUNCTION_10
0x400057a	    0xc78424f00100	              mov dword [rsp + 0x1f0], 7	       361	update-ref.c	FUNCTION_10
0x4000585	    0x48c78424f801	              mov qword [rsp + 0x1f8], 0	       361	update-ref.c	FUNCTION_10
0x4000591	    0x48c784241002	              mov qword [rsp + 0x210], 0	       361	update-ref.c	FUNCTION_10
0x400059d	    0x488984244002	            mov qword [rsp + 0x240], rax	       361	update-ref.c	FUNCTION_10
0x40005a5	    0xc78424180200	              mov dword [rsp + 0x218], 2	       361	update-ref.c	FUNCTION_10
0x40005b0	    0x48c784242802	              mov qword [rsp + 0x228], 1	       361	update-ref.c	FUNCTION_10
0x40005bc	    0xc78424300200	              mov dword [rsp + 0x230], 7	       361	update-ref.c	FUNCTION_10
0x40005c7	    0x48c784243802	              mov qword [rsp + 0x238], 0	       361	update-ref.c	FUNCTION_10
0x40005d3	    0x48c784245002	              mov qword [rsp + 0x250], 0	       361	update-ref.c	FUNCTION_10
0x40005df	    0xc78424580200	              mov dword [rsp + 0x258], 2	       361	update-ref.c	FUNCTION_10
0x40005ea	    0x48c784246802	              mov qword [rsp + 0x268], 1	       361	update-ref.c	FUNCTION_10
0x40005f6	      0xe800000000	                          call 0x40005fb	       372	update-ref.c	FUNCTION_10	CALL_15
0x40005fb	    0x488d8c24f000	                   lea rcx, [rsp + 0xf0]	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000603	          0x4531c9	                            xor r9d, r9d	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000606	            0x89ef	                            mov edi, ebp	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000608	    0x41b800000000	                              mov r8d, 0	       373	update-ref.c	FUNCTION_10	CALL_16
0x400060e	          0x4c89e2	                            mov rdx, r12	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000611	          0x4889de	                            mov rsi, rbx	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000614	      0xe800000000	                          call 0x4000619	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000619	            0x89c5	                            mov ebp, eax	       373	update-ref.c	FUNCTION_10	CALL_16
0x400061b	    0x488b05000000	            mov rax, qword [0x04000622] 	       375	update-ref.c	FUNCTION_10	IF_1
0x4000622	          0x4885c0	                           test rax, rax	       375	update-ref.c	FUNCTION_10	IF_1
0x4000625	            0x7409	                            je 0x4000630	       375	update-ref.c	FUNCTION_10	IF_1
0x4000627	          0x803800	                       cmp byte [rax], 0	       375	update-ref.c	FUNCTION_10	IF_1
0x400062a	     0xf842d090000	                            je 0x4000f5d	       375	update-ref.c	FUNCTION_10	IF_1
0x4000630	      0x837c242c01	               cmp dword [rsp + 0x2c], 1	       378	update-ref.c	FUNCTION_10
0x4000635	      0x448b7c2424	           mov r15d, dword [rsp + 0x24] 	       380	update-ref.c	FUNCTION_10	IF_2
0x400063a	            0x19c0	                            sbb eax, eax	       378	update-ref.c	FUNCTION_10
0x400063c	            0xf7d0	                                 not eax	       378	update-ref.c	FUNCTION_10
0x400063e	          0x83e002	                              and eax, 2	       378	update-ref.c	FUNCTION_10
0x4000641	          0x4585ff	                         test r15d, r15d	       380	update-ref.c	FUNCTION_10	IF_2
0x4000644	    0x890500000000	            mov dword [0x0400064a], eax 	       378	update-ref.c	FUNCTION_10
0x400064a	     0xf8560010000	                           jne 0x40007b0	       380	update-ref.c	FUNCTION_10	IF_2
0x4000650	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	       399	update-ref.c	FUNCTION_10	IF_7
0x4000655	          0x4585c9	                           test r9d, r9d	       399	update-ref.c	FUNCTION_10	IF_7
0x4000658	     0xf850b090000	                           jne 0x4000f69	       399	update-ref.c	FUNCTION_10	IF_7
0x400065e	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	       402	update-ref.c	FUNCTION_10	IF_8
0x4000663	          0x4585c0	                           test r8d, r8d	       402	update-ref.c	FUNCTION_10	IF_8
0x4000666	     0xf85e4000000	                           jne 0x4000750	       402	update-ref.c	FUNCTION_10	IF_8
0x400066c	          0x83ed02	                              sub ebp, 2	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x400066f	          0x83fd01	                              cmp ebp, 1	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x4000672	     0xf87f1080000	                            ja 0x4000f69	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x4000678	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       412	update-ref.c	FUNCTION_10	ELSE_1
0x400067c	    0x4c8db424b000	                   lea r14, [rsp + 0xb0]	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x4000684	          0x488b2b	                    mov rbp, qword [rbx]	       411	update-ref.c	FUNCTION_10	ELSE_1
0x4000687	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	       413	update-ref.c	FUNCTION_10	ELSE_1
0x400068b	          0x4c89f6	                            mov rsi, r14	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x400068e	          0x4c89ef	                            mov rdi, r13	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x4000691	      0xe800000000	                          call 0x4000696	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x4000696	            0x85c0	                           test eax, eax	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x4000698	     0xf85ee080000	                           jne 0x4000f8c	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x400069e	          0x4d85e4	                           test r12, r12	       418	update-ref.c	FUNCTION_10	IF_12
0x40006a1	     0xf8495070000	                            je 0x4000e3c	       418	update-ref.c	FUNCTION_10	IF_12
0x40006a7	      0x41803c2400	                       cmp byte [r12], 0	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x40006ac	     0xf85ce000000	                           jne 0x4000780	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x40006b2	    0x488d9c24d000	                   lea rbx, [rsp + 0xd0]	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x40006ba	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	        90	string3.h	FUNCTION_25	CALL_6
0x40006c6	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	        90	string3.h	FUNCTION_25	CALL_6
0x40006d2	    0xc78424e00000	               mov dword [rsp + 0xe0], 0	        90	string3.h	FUNCTION_25	CALL_6
0x40006dd	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       359	update-ref.c	FUNCTION_10
0x40006e1	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	       431	update-ref.c	FUNCTION_10	IF_16
0x40006e5	          0x4531e4	                          xor r12d, r12d	       359	update-ref.c	FUNCTION_10
0x40006e8	            0x85f6	                           test esi, esi	       359	update-ref.c	FUNCTION_10
0x40006ea	        0x410f95c4	                              setne r12b	       359	update-ref.c	FUNCTION_10
0x40006ee	            0x85ff	                           test edi, edi	       431	update-ref.c	FUNCTION_10	IF_16
0x40006f0	     0xf849a060000	                            je 0x4000d90	       431	update-ref.c	FUNCTION_10	IF_16
0x40006f6	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_41	CALL_1
0x40006fb	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_41	CALL_1
0x4000700	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_41	CALL_1
0x4000703	      0xe800000000	                          call 0x4000708	       975	cache.h	FUNCTION_41	CALL_1
0x4000708	      0xba00000000	                              mov edx, 0	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400070d	            0x85c0	                           test eax, eax	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400070f	        0x480f45d3	                         cmovne rdx, rbx	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000713	    0x488b3d000000	            mov rdi, qword [0x0400071a] 	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400071a	          0x4489e1	                           mov ecx, r12d	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400071d	          0x4889ee	                            mov rsi, rbp	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000720	      0xe800000000	                          call 0x4000725	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000725	    0x488b8c24b802	           mov rcx, qword [rsp + 0x2b8] 	       443	update-ref.c	FUNCTION_10
0x400072d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       443	update-ref.c	FUNCTION_10
0x4000736	     0xf855f080000	                           jne 0x4000f9b	       443	update-ref.c	FUNCTION_10
0x400073c	    0x4881c4c80200	                          add rsp, 0x2c8	       443	update-ref.c	FUNCTION_10
0x4000743	              0x5b	                                 pop rbx	       443	update-ref.c	FUNCTION_10
0x4000744	              0x5d	                                 pop rbp	       443	update-ref.c	FUNCTION_10
0x4000745	            0x415c	                                 pop r12	       443	update-ref.c	FUNCTION_10
0x4000747	            0x415d	                                 pop r13	       443	update-ref.c	FUNCTION_10
0x4000749	            0x415e	                                 pop r14	       443	update-ref.c	FUNCTION_10
0x400074b	            0x415f	                                 pop r15	       443	update-ref.c	FUNCTION_10
0x400074d	              0xc3	                                     ret	       443	update-ref.c	FUNCTION_10
0x400074e	            0x6690	                                     nop	       443	update-ref.c	FUNCTION_10
0x4000750	          0x83ed01	                              sub ebp, 1	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x4000753	          0x83fd01	                              cmp ebp, 1	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x4000756	     0xf870d080000	                            ja 0x4000f69	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x400075c	        0x4c8b6308	                mov r12, qword [rbx + 8]	       406	update-ref.c	FUNCTION_10	IF_8
0x4000760	          0x488b2b	                    mov rbp, qword [rbx]	       405	update-ref.c	FUNCTION_10	IF_8
0x4000763	          0x4d85e4	                           test r12, r12	       418	update-ref.c	FUNCTION_10	IF_12
0x4000766	     0xf853bffffff	                           jne 0x40006a7	       418	update-ref.c	FUNCTION_10	IF_12
0x400076c	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       359	update-ref.c	FUNCTION_10
0x4000770	          0x4531e4	                          xor r12d, r12d	       359	update-ref.c	FUNCTION_10
0x4000773	            0x85c0	                           test eax, eax	       359	update-ref.c	FUNCTION_10
0x4000775	        0x410f95c4	                              setne r12b	       359	update-ref.c	FUNCTION_10
0x4000779	            0x31d2	                            xor edx, edx	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400077b	            0xeb96	                           jmp 0x4000713	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400077d	           0xf1f00	                         nop dword [rax]	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000780	    0x488d9c24d000	                   lea rbx, [rsp + 0xd0]	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x4000788	          0x4c89e7	                            mov rdi, r12	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x400078b	          0x4889de	                            mov rsi, rbx	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x400078e	      0xe800000000	                          call 0x4000793	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x4000793	            0x85c0	                           test eax, eax	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x4000795	     0xf8442ffffff	                            je 0x40006dd	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x400079b	          0x4c89e6	                            mov rsi, r12	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x400079e	      0xbf00000000	                              mov edi, 0	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x40007a3	            0x31c0	                            xor eax, eax	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x40007a5	      0xe800000000	                          call 0x40007aa	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x40007aa	    0x660f1f440000	                    nop word [rax + rax]	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x40007b0	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x40007b5	    0x48c744245000	               mov qword [rsp + 0x50], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x40007be	    0x48c744245800	               mov qword [rsp + 0x58], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x40007c7	    0x48c744246000	               mov qword [rsp + 0x60], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x40007d0	      0xe800000000	                          call 0x40007d5	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x40007d5	          0x4885c0	                           test rax, rax	       385	update-ref.c	FUNCTION_10	IF_2	IF_3
0x40007d8	          0x4989c5	                            mov r13, rax	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x40007db	     0xf849a070000	                            je 0x4000f7b	       385	update-ref.c	FUNCTION_10	IF_2	IF_3
0x40007e1	      0x448b74241c	           mov r14d, dword [rsp + 0x1c] 	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40007e6	          0x4585f6	                         test r14d, r14d	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40007e9	     0xf857a070000	                           jne 0x4000f69	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40007ef	      0x448b642420	           mov r12d, dword [rsp + 0x20] 	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40007f4	          0x4585e4	                         test r12d, r12d	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40007f7	     0xf856c070000	                           jne 0x4000f69	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40007fd	            0x85ed	                           test ebp, ebp	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40007ff	     0xf8f64070000	                            jg 0x4000f69	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x4000805	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x4000809	            0x85db	                           test ebx, ebx	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x400080b	     0xf851f060000	                           jne 0x4000e30	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x4000811	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000816	            0x31f6	                            xor esi, esi	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000818	      0xbae8030000	                          mov edx, 0x3e8	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x400081d	    0x48c744247000	               mov qword [rsp + 0x70], 0	       323	update-ref.c	FUNCTION_9
0x4000826	    0x48c744247800	               mov qword [rsp + 0x78], 0	       323	update-ref.c	FUNCTION_9
0x400082f	    0x48c784248000	               mov qword [rsp + 0x80], 0	       323	update-ref.c	FUNCTION_9
0x400083b	      0xe800000000	                          call 0x4000840	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000840	          0x4885c0	                           test rax, rax	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000843	     0xf88ad060000	                            js 0x4000ef6	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000849	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	       328	update-ref.c	FUNCTION_9
0x4000851	          0x4889d8	                            mov rax, rbx	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000854	      0x4803442478	             add rax, qword [rsp + 0x78]	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000859	          0x4839c3	                            cmp rbx, rax	       330	update-ref.c	FUNCTION_9	WHILE_1
0x400085c	     0xf8366050000	                           jae 0x4000dc8	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000862	           0xfb603	                   movzx eax, byte [rbx]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x4000865	    0x3a0500000000	               cmp al, byte [0x0400086b]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x400086b	     0xf84f5050000	                            je 0x4000e66	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x4000871	    0xf68000000000	                      test byte [rax], 1	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000878	     0xf85f4050000	                           jne 0x4000e72	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x400087e	    0x488dac24d000	                   lea rbp, [rsp + 0xd0]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000886	    0x4c8da4249000	                   lea r12, [rsp + 0x90]	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x400088e	      0xe95f010000	                           jmp 0x40009f2	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000893	       0xf1f440000	                   nop dword [rax + rax]	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000898	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       188	update-ref.c	FUNCTION_4	CALL_1
0x400089d	        0x4883c307	                              add rbx, 7	       188	update-ref.c	FUNCTION_4	CALL_1
0x40008a1	    0x48c784249000	               mov qword [rsp + 0x90], 0	       183	update-ref.c	FUNCTION_4
0x40008ad	      0x48895c2430	             mov qword [rsp + 0x30], rbx	       183	update-ref.c	FUNCTION_4
0x40008b2	    0x48c784249800	               mov qword [rsp + 0x98], 0	       183	update-ref.c	FUNCTION_4
0x40008be	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       183	update-ref.c	FUNCTION_4
0x40008ca	      0xe861f8ffff	           call sym.parse_refname.isra.1	       188	update-ref.c	FUNCTION_4	CALL_1
0x40008cf	          0x4885c0	                           test rax, rax	       189	update-ref.c	FUNCTION_4	IF_1
0x40008d2	          0x4889c3	                            mov rbx, rax	       188	update-ref.c	FUNCTION_4	CALL_1
0x40008d5	     0xf84d8050000	                            je 0x4000eb3	       189	update-ref.c	FUNCTION_4	IF_1
0x40008db	    0x4c8db424b000	                   lea r14, [rsp + 0xb0]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008e3	    0x4c8dbc248000	                   lea r15, [rsp + 0x80]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008eb	        0x4883ec08	                              sub rsp, 8	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008ef	            0x6a02	                                  push 2	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008f1	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008f9	          0x4989c1	                             mov r9, rax	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008fc	    0x41b800000000	                              mov r8d, 0	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000902	          0x4c89f1	                            mov rcx, r14	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000905	          0x4c89fe	                            mov rsi, r15	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000908	      0x488d542440	                   lea rdx, [rsp + 0x40]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x400090d	      0xe8fef8ffff	          call sym.parse_next_oid.isra.2	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000912	            0x85c0	                           test eax, eax	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000914	            0x415a	                                 pop r10	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000916	            0x415b	                                 pop r11	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000918	     0xf8577050000	                           jne 0x4000e95	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x400091e	        0x4883ec08	                              sub rsp, 8	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000922	          0x4989d9	                             mov r9, rbx	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000925	    0x41b800000000	                              mov r8d, 0	       196	update-ref.c	FUNCTION_4	CALL_5
0x400092b	            0x6a01	                                  push 1	       196	update-ref.c	FUNCTION_4	CALL_5
0x400092d	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000935	          0x4c89fe	                            mov rsi, r15	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000938	          0x4889e9	                            mov rcx, rbp	       196	update-ref.c	FUNCTION_4	CALL_5
0x400093b	      0x488d542440	                   lea rdx, [rsp + 0x40]	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000940	      0xe8cbf8ffff	          call sym.parse_next_oid.isra.2	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000945	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       199	update-ref.c	FUNCTION_4	IF_3
0x400094a	     0xfb635000000	           movzx esi, byte [0x04000951] 	       199	update-ref.c	FUNCTION_4	IF_3
0x4000951	            0x4158	                                  pop r8	       199	update-ref.c	FUNCTION_4	IF_3
0x4000953	            0x4159	                                  pop r9	       199	update-ref.c	FUNCTION_4	IF_3
0x4000955	          0x403832	                     cmp byte [rdx], sil	       199	update-ref.c	FUNCTION_4	IF_3
0x4000958	     0xf8546050000	                           jne 0x4000ea4	       199	update-ref.c	FUNCTION_4	IF_3
0x400095e	            0x85c0	                           test eax, eax	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000960	      0xb900000000	                              mov ecx, 0	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000965	    0x448b05000000	            mov r8d, dword [0x0400096c] 	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x400096c	        0x480f44cd	                          cmove rcx, rbp	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000970	    0x440b05000000	              or r8d, dword [0x04000977]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000977	        0x4883ec08	                              sub rsp, 8	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x400097b	    0x4c8b0d000000	              mov r9, qword [0x04000982]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000982	            0x4154	                                push r12	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000984	          0x4889de	                            mov rsi, rbx	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000987	          0x4c89ef	                            mov rdi, r13	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x400098a	          0x4c89f2	                            mov rdx, r14	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x400098d	      0xe800000000	                          call 0x4000992	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000992	            0x85c0	                           test eax, eax	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000994	              0x5e	                                 pop rsi	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000995	              0x5f	                                 pop rdi	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000996	     0xf85e5040000	                           jne 0x4000e81	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x400099c	          0x4889df	                            mov rdi, rbx	       209	update-ref.c	FUNCTION_4	CALL_9
0x400099f	    0xc70500000000	               mov dword [0x040009a9], 0	       208	update-ref.c	FUNCTION_4
0x40009a9	      0xe800000000	                          call 0x40009ae	       209	update-ref.c	FUNCTION_4	CALL_9
0x40009ae	          0x4c89e7	                            mov rdi, r12	       210	update-ref.c	FUNCTION_4	CALL_10
0x40009b1	      0xe800000000	                          call 0x40009b6	       210	update-ref.c	FUNCTION_4	CALL_10
0x40009b6	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       212	update-ref.c	FUNCTION_4
0x40009bb	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       330	update-ref.c	FUNCTION_9	WHILE_1
0x40009c0	    0x480384248000	             add rax, qword [rsp + 0x80]	       330	update-ref.c	FUNCTION_9	WHILE_1
0x40009c8	        0x488d5a01	                      lea rbx, [rdx + 1]	       348	update-ref.c	FUNCTION_9	WHILE_1
0x40009cc	          0x4839c3	                            cmp rbx, rax	       330	update-ref.c	FUNCTION_9	WHILE_1
0x40009cf	     0xf83f3030000	                           jae 0x4000dc8	       330	update-ref.c	FUNCTION_9	WHILE_1
0x40009d5	         0xfb64201	               movzx eax, byte [rdx + 1]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x40009d9	    0x3a0500000000	               cmp al, byte [0x040009df]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x40009df	     0xf8481040000	                            je 0x4000e66	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x40009e5	    0xf68000000000	                      test byte [rax], 1	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x40009ec	     0xf8580040000	                           jne 0x4000e72	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x40009f2	      0xbe00000000	                              mov esi, 0	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x40009f7	          0x4889df	                            mov rdi, rbx	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x40009fa	      0xe800000000	                          call 0x40009ff	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x40009ff	            0x85c0	                           test eax, eax	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x4000a01	     0xf8591feffff	                           jne 0x4000898	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x4000a07	      0xbe00000000	                              mov esi, 0	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000a0c	          0x4889df	                            mov rdi, rbx	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000a0f	      0xe800000000	                          call 0x4000a14	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000a14	            0x85c0	                           test eax, eax	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000a16	     0xf84fc000000	                            je 0x4000b18	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000a1c	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       222	update-ref.c	FUNCTION_5	CALL_1
0x4000a21	        0x4883c307	                              add rbx, 7	       222	update-ref.c	FUNCTION_5	CALL_1
0x4000a25	    0x48c784249000	               mov qword [rsp + 0x90], 0	       218	update-ref.c	FUNCTION_5
0x4000a31	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       218	update-ref.c	FUNCTION_5
0x4000a36	    0x48c784249800	               mov qword [rsp + 0x98], 0	       218	update-ref.c	FUNCTION_5
0x4000a42	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       218	update-ref.c	FUNCTION_5
0x4000a4e	      0xe8ddf6ffff	           call sym.parse_refname.isra.1	       222	update-ref.c	FUNCTION_5	CALL_1
0x4000a53	          0x4885c0	                           test rax, rax	       223	update-ref.c	FUNCTION_5	IF_1
0x4000a56	          0x4889c3	                            mov rbx, rax	       222	update-ref.c	FUNCTION_5	CALL_1
0x4000a59	     0xf8460040000	                            je 0x4000ebf	       223	update-ref.c	FUNCTION_5	IF_1
0x4000a5f	    0x488db4248000	                   lea rsi, [rsp + 0x80]	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a67	        0x4883ec08	                              sub rsp, 8	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a6b	          0x4889e9	                            mov rcx, rbp	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a6e	            0x6a00	                                  push 0	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a70	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a78	          0x4989c1	                             mov r9, rax	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a7b	    0x41b800000000	                              mov r8d, 0	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a81	      0x488d542448	                   lea rdx, [rsp + 0x48]	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a86	      0xe885f7ffff	          call sym.parse_next_oid.isra.2	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a8b	            0x85c0	                           test eax, eax	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a8d	              0x5a	                                 pop rdx	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a8e	              0x59	                                 pop rcx	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a8f	     0xf8536040000	                           jne 0x4000ecb	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a95	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_41	CALL_1
0x4000a9a	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_41	CALL_1
0x4000a9f	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_41	CALL_1
0x4000aa2	      0xe800000000	                          call 0x4000aa7	       975	cache.h	FUNCTION_41	CALL_1
0x4000aa7	            0x85c0	                           test eax, eax	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x4000aa9	     0xf842b040000	                            je 0x4000eda	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x4000aaf	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       232	update-ref.c	FUNCTION_5	IF_4
0x4000ab4	     0xfb605000000	           movzx eax, byte [0x04000abb] 	       232	update-ref.c	FUNCTION_5	IF_4
0x4000abb	            0x3802	                      cmp byte [rdx], al	       232	update-ref.c	FUNCTION_5	IF_4
0x4000abd	     0xf8524040000	                           jne 0x4000ee7	       232	update-ref.c	FUNCTION_5	IF_4
0x4000ac3	    0x8b0d00000000	            mov ecx, dword [0x04000ac9] 	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000ac9	     0xb0d00000000	              or ecx, dword [0x04000acf]	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000acf	          0x4d89e1	                             mov r9, r12	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000ad2	    0x4c8b05000000	              mov r8, qword [0x04000ad9]	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000ad9	          0x4889ea	                            mov rdx, rbp	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000adc	          0x4889de	                            mov rsi, rbx	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000adf	          0x4c89ef	                            mov rdi, r13	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000ae2	      0xe800000000	                          call 0x4000ae7	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000ae7	            0x85c0	                           test eax, eax	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000ae9	     0xf8592030000	                           jne 0x4000e81	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000aef	          0x4889df	                            mov rdi, rbx	       241	update-ref.c	FUNCTION_5	CALL_10
0x4000af2	    0xc70500000000	               mov dword [0x04000afc], 0	       240	update-ref.c	FUNCTION_5
0x4000afc	      0xe800000000	                          call 0x4000b01	       241	update-ref.c	FUNCTION_5	CALL_10
0x4000b01	          0x4c89e7	                            mov rdi, r12	       242	update-ref.c	FUNCTION_5	CALL_11
0x4000b04	      0xe800000000	                          call 0x4000b09	       242	update-ref.c	FUNCTION_5	CALL_11
0x4000b09	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       244	update-ref.c	FUNCTION_5
0x4000b0e	      0xe9a8feffff	                           jmp 0x40009bb	       244	update-ref.c	FUNCTION_5
0x4000b13	       0xf1f440000	                   nop dword [rax + rax]	       244	update-ref.c	FUNCTION_5
0x4000b18	      0xbe00000000	                              mov esi, 0	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000b1d	          0x4889df	                            mov rdi, rbx	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000b20	      0xe800000000	                          call 0x4000b25	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000b25	            0x85c0	                           test eax, eax	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000b27	     0xf84f3000000	                            je 0x4000c20	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000b2d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       255	update-ref.c	FUNCTION_6	CALL_1
0x4000b32	        0x4883c307	                              add rbx, 7	       255	update-ref.c	FUNCTION_6	CALL_1
0x4000b36	    0x48c784249000	               mov qword [rsp + 0x90], 0	       250	update-ref.c	FUNCTION_6
0x4000b42	      0x48895c2440	             mov qword [rsp + 0x40], rbx	       250	update-ref.c	FUNCTION_6
0x4000b47	    0x48c784249800	               mov qword [rsp + 0x98], 0	       250	update-ref.c	FUNCTION_6
0x4000b53	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       250	update-ref.c	FUNCTION_6
0x4000b5f	      0xe8ccf5ffff	           call sym.parse_refname.isra.1	       255	update-ref.c	FUNCTION_6	CALL_1
0x4000b64	          0x4885c0	                           test rax, rax	       256	update-ref.c	FUNCTION_6	IF_1
0x4000b67	          0x4889c3	                            mov rbx, rax	       255	update-ref.c	FUNCTION_6	CALL_1
0x4000b6a	     0xf84d2030000	                            je 0x4000f42	       256	update-ref.c	FUNCTION_6	IF_1
0x4000b70	    0x488db4248000	                   lea rsi, [rsp + 0x80]	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000b78	        0x4883ec08	                              sub rsp, 8	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000b7c	          0x4989c1	                             mov r9, rax	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000b7f	            0x6a01	                                  push 1	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000b81	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000b89	    0x41b800000000	                              mov r8d, 0	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000b8f	          0x4889e9	                            mov rcx, rbp	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000b92	      0x488d542450	                   lea rdx, [rsp + 0x50]	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000b97	      0xe874f6ffff	          call sym.parse_next_oid.isra.2	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000b9c	            0x85c0	                           test eax, eax	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000b9e	            0x415e	                                 pop r14	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000ba0	            0x415f	                                 pop r15	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000ba2	     0xf8568010000	                           jne 0x4000d10	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000ba8	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_41	CALL_1
0x4000bad	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_41	CALL_1
0x4000bb2	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_41	CALL_1
0x4000bb5	      0xe800000000	                          call 0x4000bba	       975	cache.h	FUNCTION_41	CALL_1
0x4000bba	            0x85c0	                           test eax, eax	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x4000bbc	     0xf84de030000	                            je 0x4000fa0	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x4000bc2	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000bc7	     0xfb605000000	           movzx eax, byte [0x04000bce] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000bce	            0x3802	                      cmp byte [rdx], al	       268	update-ref.c	FUNCTION_6	IF_4
0x4000bd0	     0xf8542030000	                           jne 0x4000f18	       268	update-ref.c	FUNCTION_6	IF_4
0x4000bd6	    0x4c8b05000000	              mov r8, qword [0x04000bdd]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000bdd	    0x8b0d00000000	            mov ecx, dword [0x04000be3] 	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000be3	          0x4889ea	                            mov rdx, rbp	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000be6	          0x4d89e1	                             mov r9, r12	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000be9	          0x4889de	                            mov rsi, rbx	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000bec	          0x4c89ef	                            mov rdi, r13	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000bef	      0xe800000000	                          call 0x4000bf4	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000bf4	            0x85c0	                           test eax, eax	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000bf6	     0xf8585020000	                           jne 0x4000e81	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000bfc	          0x4889df	                            mov rdi, rbx	       277	update-ref.c	FUNCTION_6	CALL_9
0x4000bff	    0xc70500000000	               mov dword [0x04000c09], 0	       276	update-ref.c	FUNCTION_6
0x4000c09	      0xe800000000	                          call 0x4000c0e	       277	update-ref.c	FUNCTION_6	CALL_9
0x4000c0e	          0x4c89e7	                            mov rdi, r12	       278	update-ref.c	FUNCTION_6	CALL_10
0x4000c11	      0xe800000000	                          call 0x4000c16	       278	update-ref.c	FUNCTION_6	CALL_10
0x4000c16	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       280	update-ref.c	FUNCTION_6
0x4000c1b	      0xe99bfdffff	                           jmp 0x40009bb	       280	update-ref.c	FUNCTION_6
0x4000c20	      0xbe00000000	                              mov esi, 0	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000c25	          0x4889df	                            mov rdi, rbx	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000c28	      0xe800000000	                          call 0x4000c2d	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000c2d	            0x85c0	                           test eax, eax	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000c2f	     0xf840b010000	                            je 0x4000d40	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000c35	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       290	update-ref.c	FUNCTION_7	CALL_1
0x4000c3a	        0x4883c307	                              add rbx, 7	       290	update-ref.c	FUNCTION_7	CALL_1
0x4000c3e	    0x48c784249000	               mov qword [rsp + 0x90], 0	       286	update-ref.c	FUNCTION_7
0x4000c4a	      0x48895c2448	             mov qword [rsp + 0x48], rbx	       286	update-ref.c	FUNCTION_7
0x4000c4f	    0x48c784249800	               mov qword [rsp + 0x98], 0	       286	update-ref.c	FUNCTION_7
0x4000c5b	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       286	update-ref.c	FUNCTION_7
0x4000c67	      0xe8c4f4ffff	           call sym.parse_refname.isra.1	       290	update-ref.c	FUNCTION_7	CALL_1
0x4000c6c	          0x4885c0	                           test rax, rax	       291	update-ref.c	FUNCTION_7	IF_1
0x4000c6f	          0x4889c3	                            mov rbx, rax	       290	update-ref.c	FUNCTION_7	CALL_1
0x4000c72	     0xf84af020000	                            je 0x4000f27	       291	update-ref.c	FUNCTION_7	IF_1
0x4000c78	    0x488db4248000	                   lea rsi, [rsp + 0x80]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c80	        0x4883ec08	                              sub rsp, 8	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c84	          0x4989c1	                             mov r9, rax	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c87	            0x6a01	                                  push 1	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c89	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c91	    0x41b800000000	                              mov r8d, 0	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c97	          0x4889e9	                            mov rcx, rbp	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c9a	      0x488d542458	                   lea rdx, [rsp + 0x58]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c9f	      0xe86cf5ffff	          call sym.parse_next_oid.isra.2	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000ca4	            0x85c0	                           test eax, eax	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000ca6	            0x415a	                                 pop r10	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000ca8	            0x415b	                                 pop r11	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000caa	     0xf8560010000	                           jne 0x4000e10	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000cb0	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       298	update-ref.c	FUNCTION_7	IF_3
0x4000cb5	     0xfb605000000	           movzx eax, byte [0x04000cbc] 	       298	update-ref.c	FUNCTION_7	IF_3
0x4000cbc	            0x3802	                      cmp byte [rdx], al	       298	update-ref.c	FUNCTION_7	IF_3
0x4000cbe	     0xf856f020000	                           jne 0x4000f33	       298	update-ref.c	FUNCTION_7	IF_3
0x4000cc4	    0x8b0d00000000	            mov ecx, dword [0x04000cca] 	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000cca	          0x4d89e0	                             mov r8, r12	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000ccd	          0x4889ea	                            mov rdx, rbp	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000cd0	          0x4889de	                            mov rsi, rbx	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000cd3	          0x4c89ef	                            mov rdi, r13	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000cd6	      0xe800000000	                          call 0x4000cdb	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000cdb	            0x85c0	                           test eax, eax	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000cdd	     0xf859e010000	                           jne 0x4000e81	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000ce3	          0x4889df	                            mov rdi, rbx	       306	update-ref.c	FUNCTION_7	CALL_8
0x4000ce6	    0xc70500000000	               mov dword [0x04000cf0], 0	       305	update-ref.c	FUNCTION_7
0x4000cf0	      0xe800000000	                          call 0x4000cf5	       306	update-ref.c	FUNCTION_7	CALL_8
0x4000cf5	          0x4c89e7	                            mov rdi, r12	       307	update-ref.c	FUNCTION_7	CALL_9
0x4000cf8	      0xe800000000	                          call 0x4000cfd	       307	update-ref.c	FUNCTION_7	CALL_9
0x4000cfd	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       309	update-ref.c	FUNCTION_7
0x4000d02	      0xe9b4fcffff	                           jmp 0x40009bb	       309	update-ref.c	FUNCTION_7
0x4000d07	    0x660f1f840000	                    nop word [rax + rax]	       309	update-ref.c	FUNCTION_7
0x4000d10	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000d15	           0xfb602	                   movzx eax, byte [rdx]	       268	update-ref.c	FUNCTION_6	IF_4
0x4000d18	    0x380500000000	               cmp byte [0x04000d1e], al	       268	update-ref.c	FUNCTION_6	IF_4
0x4000d1e	     0xf85f4010000	                           jne 0x4000f18	       268	update-ref.c	FUNCTION_6	IF_4
0x4000d24	    0x4c8b05000000	              mov r8, qword [0x04000d2b]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000d2b	    0x8b0d00000000	            mov ecx, dword [0x04000d31] 	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000d31	            0x31d2	                            xor edx, edx	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000d33	      0xe9aefeffff	                           jmp 0x4000be6	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000d38	     0xf1f84000000	                   nop dword [rax + rax]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000d40	      0xbe00000000	                              mov esi, 0	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000d45	          0x4889df	                            mov rdi, rbx	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000d48	      0xe800000000	                          call 0x4000d4d	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000d4d	            0x85c0	                           test eax, eax	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000d4f	     0xf84b4010000	                            je 0x4000f09	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000d55	        0x488d4307	                      lea rax, [rbx + 7]	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0x4000d59	      0xbf00000000	                              mov edi, 0	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000d5e	      0xb908000000	                              mov ecx, 8	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000d63	          0x4889c6	                            mov rsi, rax	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000d66	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000d68	     0xf85e0010000	                           jne 0x4000f4e	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000d6e	     0xfb60d000000	           movzx ecx, byte [0x04000d75] 	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000d75	          0x384b0f	                cmp byte [rbx + 0xf], cl	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000d78	     0xf85d0010000	                           jne 0x4000f4e	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000d7e	    0x830d00000000	                or dword [0x04000d85], 1	       315	update-ref.c	FUNCTION_8	IF_1
0x4000d85	        0x488d530f	                    lea rdx, [rbx + 0xf]	       318	update-ref.c	FUNCTION_8
0x4000d89	      0xe92dfcffff	                           jmp 0x40009bb	       318	update-ref.c	FUNCTION_8
0x4000d8e	            0x6690	                                     nop	       318	update-ref.c	FUNCTION_8
0x4000d90	    0x448b05000000	            mov r8d, dword [0x04000d97] 	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000d97	    0x4c8db424b000	                   lea r14, [rsp + 0xb0]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000d9f	          0x4889d9	                            mov rcx, rbx	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000da2	          0x4509e0	                            or r8d, r12d	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000da5	    0x488b3d000000	            mov rdi, qword [0x04000dac] 	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000dac	    0x41b901000000	                              mov r9d, 1	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000db2	          0x4c89f2	                            mov rdx, r14	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000db5	          0x4889ee	                            mov rsi, rbp	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000db8	      0xe800000000	                          call 0x4000dbd	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000dbd	      0xe963f9ffff	                           jmp 0x4000725	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000dc2	    0x660f1f440000	                    nop word [rax + rax]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000dc8	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       351	update-ref.c	FUNCTION_9	CALL_17
0x4000dcd	      0xe800000000	                          call 0x4000dd2	       351	update-ref.c	FUNCTION_9	CALL_17
0x4000dd2	      0x488d742450	                   lea rsi, [rsp + 0x50]	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000dd7	          0x4c89ef	                            mov rdi, r13	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000dda	      0xe800000000	                          call 0x4000ddf	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000ddf	            0x85c0	                           test eax, eax	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000de1	     0xf8594010000	                           jne 0x4000f7b	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000de7	          0x4c89ef	                            mov rdi, r13	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x4000dea	        0x8944240c	              mov dword [rsp + 0xc], eax	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x4000dee	      0xe800000000	                          call 0x4000df3	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x4000df3	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4000df8	      0xe800000000	                          call 0x4000dfd	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4000dfd	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4000e01	      0xe91ff9ffff	                           jmp 0x4000725	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4000e06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4000e10	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_25	CALL_6
0x4000e18	    0x48c745080000	                  mov qword [rbp + 8], 0	        90	string3.h	FUNCTION_25	CALL_6
0x4000e20	    0xc74510000000	               mov dword [rbp + 0x10], 0	        90	string3.h	FUNCTION_25	CALL_6
0x4000e27	      0xe984feffff	                           jmp 0x4000cb0	        90	string3.h	FUNCTION_25	CALL_6
0x4000e2c	         0xf1f4000	                         nop dword [rax]	        90	string3.h	FUNCTION_25	CALL_6
0x4000e30	    0xc60500000000	                mov byte [0x04000e37], 0	       390	update-ref.c	FUNCTION_10	IF_2	IF_5
0x4000e37	      0xe9d5f9ffff	                           jmp 0x4000811	       390	update-ref.c	FUNCTION_10	IF_2	IF_5
0x4000e3c	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       359	update-ref.c	FUNCTION_10
0x4000e40	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	       431	update-ref.c	FUNCTION_10	IF_16
0x4000e44	          0x4531e4	                          xor r12d, r12d	       359	update-ref.c	FUNCTION_10
0x4000e47	            0x85d2	                           test edx, edx	       359	update-ref.c	FUNCTION_10
0x4000e49	        0x410f95c4	                              setne r12b	       359	update-ref.c	FUNCTION_10
0x4000e4d	            0x85c9	                           test ecx, ecx	       431	update-ref.c	FUNCTION_10	IF_16
0x4000e4f	     0xf85ad000000	                           jne 0x4000f02	       431	update-ref.c	FUNCTION_10	IF_16
0x4000e55	    0x448b05000000	            mov r8d, dword [0x04000e5c] 	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000e5c	            0x31c9	                            xor ecx, ecx	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000e5e	          0x4509e0	                            or r8d, r12d	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000e61	      0xe93fffffff	                           jmp 0x4000da5	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000e66	      0xbf00000000	                              mov edi, 0	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0x4000e6b	            0x31c0	                            xor eax, eax	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0x4000e6d	      0xe800000000	                          call 0x4000e72	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0x4000e72	          0x4889de	                            mov rsi, rbx	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x4000e75	      0xbf00000000	                              mov edi, 0	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x4000e7a	            0x31c0	                            xor eax, eax	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x4000e7c	      0xe800000000	                          call 0x4000e81	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x4000e81	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	       303	update-ref.c	FUNCTION_7	CALL_7
0x4000e89	      0xbf00000000	                              mov edi, 0	       303	update-ref.c	FUNCTION_7	CALL_7
0x4000e8e	            0x31c0	                            xor eax, eax	       303	update-ref.c	FUNCTION_7	CALL_7
0x4000e90	      0xe800000000	                          call 0x4000e95	       303	update-ref.c	FUNCTION_7	CALL_7
0x4000e95	          0x4889de	                            mov rsi, rbx	       194	update-ref.c	FUNCTION_4	CALL_4
0x4000e98	      0xbf00000000	                              mov edi, 0	       194	update-ref.c	FUNCTION_4	CALL_4
0x4000e9d	            0x31c0	                            xor eax, eax	       194	update-ref.c	FUNCTION_4	CALL_4
0x4000e9f	      0xe800000000	                          call 0x4000ea4	       194	update-ref.c	FUNCTION_4	CALL_4
0x4000ea4	          0x4889de	                            mov rsi, rbx	       200	update-ref.c	FUNCTION_4	CALL_6
0x4000ea7	      0xbf00000000	                              mov edi, 0	       200	update-ref.c	FUNCTION_4	CALL_6
0x4000eac	            0x31c0	                            xor eax, eax	       200	update-ref.c	FUNCTION_4	CALL_6
0x4000eae	      0xe800000000	                          call 0x4000eb3	       200	update-ref.c	FUNCTION_4	CALL_6
0x4000eb3	      0xbf00000000	                              mov edi, 0	       190	update-ref.c	FUNCTION_4	CALL_2
0x4000eb8	            0x31c0	                            xor eax, eax	       190	update-ref.c	FUNCTION_4	CALL_2
0x4000eba	      0xe800000000	                          call 0x4000ebf	       190	update-ref.c	FUNCTION_4	CALL_2
0x4000ebf	      0xbf00000000	                              mov edi, 0	       224	update-ref.c	FUNCTION_5	CALL_2
0x4000ec4	            0x31c0	                            xor eax, eax	       224	update-ref.c	FUNCTION_5	CALL_2
0x4000ec6	      0xe800000000	                          call 0x4000ecb	       224	update-ref.c	FUNCTION_5	CALL_2
0x4000ecb	          0x4889de	                            mov rsi, rbx	       227	update-ref.c	FUNCTION_5	CALL_4
0x4000ece	      0xbf00000000	                              mov edi, 0	       227	update-ref.c	FUNCTION_5	CALL_4
0x4000ed3	            0x31c0	                            xor eax, eax	       227	update-ref.c	FUNCTION_5	CALL_4
0x4000ed5	      0xe800000000	                          call 0x4000eda	       227	update-ref.c	FUNCTION_5	CALL_4
0x4000eda	          0x4889de	                            mov rsi, rbx	       230	update-ref.c	FUNCTION_5	CALL_6
0x4000edd	      0xbf00000000	                              mov edi, 0	       230	update-ref.c	FUNCTION_5	CALL_6
0x4000ee2	      0xe800000000	                          call 0x4000ee7	       230	update-ref.c	FUNCTION_5	CALL_6
0x4000ee7	          0x4889de	                            mov rsi, rbx	       233	update-ref.c	FUNCTION_5	CALL_7
0x4000eea	      0xbf00000000	                              mov edi, 0	       233	update-ref.c	FUNCTION_5	CALL_7
0x4000eef	            0x31c0	                            xor eax, eax	       233	update-ref.c	FUNCTION_5	CALL_7
0x4000ef1	      0xe800000000	                          call 0x4000ef6	       233	update-ref.c	FUNCTION_5	CALL_7
0x4000ef6	      0xbf00000000	                              mov edi, 0	       327	update-ref.c	FUNCTION_9	CALL_2
0x4000efb	            0x31c0	                            xor eax, eax	       327	update-ref.c	FUNCTION_9	CALL_2
0x4000efd	      0xe800000000	                          call 0x4000f02	       327	update-ref.c	FUNCTION_9	CALL_2
0x4000f02	            0x31d2	                            xor edx, edx	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000f04	      0xe90af8ffff	                           jmp 0x4000713	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000f09	          0x4889de	                            mov rsi, rbx	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4000f0c	      0xbf00000000	                              mov edi, 0	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4000f11	            0x31c0	                            xor eax, eax	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4000f13	      0xe800000000	                          call 0x4000f18	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4000f18	          0x4889de	                            mov rsi, rbx	       269	update-ref.c	FUNCTION_6	CALL_6
0x4000f1b	      0xbf00000000	                              mov edi, 0	       269	update-ref.c	FUNCTION_6	CALL_6
0x4000f20	            0x31c0	                            xor eax, eax	       269	update-ref.c	FUNCTION_6	CALL_6
0x4000f22	      0xe800000000	                          call 0x4000f27	       269	update-ref.c	FUNCTION_6	CALL_6
0x4000f27	      0xbf00000000	                              mov edi, 0	       292	update-ref.c	FUNCTION_7	CALL_2
0x4000f2c	            0x31c0	                            xor eax, eax	       292	update-ref.c	FUNCTION_7	CALL_2
0x4000f2e	      0xe800000000	                          call 0x4000f33	       292	update-ref.c	FUNCTION_7	CALL_2
0x4000f33	          0x4889de	                            mov rsi, rbx	       299	update-ref.c	FUNCTION_7	CALL_5
0x4000f36	      0xbf00000000	                              mov edi, 0	       299	update-ref.c	FUNCTION_7	CALL_5
0x4000f3b	            0x31c0	                            xor eax, eax	       299	update-ref.c	FUNCTION_7	CALL_5
0x4000f3d	      0xe800000000	                          call 0x4000f42	       299	update-ref.c	FUNCTION_7	CALL_5
0x4000f42	      0xbf00000000	                              mov edi, 0	       257	update-ref.c	FUNCTION_6	CALL_2
0x4000f47	            0x31c0	                            xor eax, eax	       257	update-ref.c	FUNCTION_6	CALL_2
0x4000f49	      0xe800000000	                          call 0x4000f4e	       257	update-ref.c	FUNCTION_6	CALL_2
0x4000f4e	          0x4889c6	                            mov rsi, rax	       317	update-ref.c	FUNCTION_8	CALL_2
0x4000f51	      0xbf00000000	                              mov edi, 0	       317	update-ref.c	FUNCTION_8	CALL_2
0x4000f56	            0x31c0	                            xor eax, eax	       317	update-ref.c	FUNCTION_8	CALL_2
0x4000f58	      0xe800000000	                          call 0x4000f5d	       317	update-ref.c	FUNCTION_8	CALL_2
0x4000f5d	      0xbf00000000	                              mov edi, 0	       376	update-ref.c	FUNCTION_10	CALL_17
0x4000f62	            0x31c0	                            xor eax, eax	       376	update-ref.c	FUNCTION_10	CALL_17
0x4000f64	      0xe800000000	                          call 0x4000f69	       376	update-ref.c	FUNCTION_10	CALL_17
0x4000f69	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x4000f71	      0xbf00000000	                              mov edi, 0	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x4000f76	      0xe800000000	                          call 0x4000f7b	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x4000f7b	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4000f80	      0xbf00000000	                              mov edi, 0	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4000f85	            0x31c0	                            xor eax, eax	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4000f87	      0xe800000000	                          call 0x4000f8c	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4000f8c	          0x4c89ee	                            mov rsi, r13	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4000f8f	      0xbf00000000	                              mov edi, 0	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4000f94	            0x31c0	                            xor eax, eax	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4000f96	      0xe800000000	                          call 0x4000f9b	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4000f9b	      0xe800000000	                          call 0x4000fa0	       443	update-ref.c	FUNCTION_10
0x4000fa0	          0x4889de	                            mov rsi, rbx	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x4000fa3	      0xbf00000000	                              mov edi, 0	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x4000fa8	      0xe800000000	               call obj.line_termination	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
