read_untracked_extension	WHILE,0:CALL,24:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,10	189
0x4005500	            0x4156	                                push r14	      2850	dir.c	FUNCTION_94
0x4005502	            0x4155	                                push r13	      2850	dir.c	FUNCTION_94
0x4005504	            0x4154	                                push r12	      2850	dir.c	FUNCTION_94
0x4005506	              0x55	                                push rbp	      2850	dir.c	FUNCTION_94
0x4005507	              0x53	                                push rbx	      2850	dir.c	FUNCTION_94
0x4005508	        0x4883ec50	                           sub rsp, 0x50	      2850	dir.c	FUNCTION_94
0x400550c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2850	dir.c	FUNCTION_94
0x4005515	      0x4889442448	             mov qword [rsp + 0x48], rax	      2850	dir.c	FUNCTION_94
0x400551a	            0x31c0	                            xor eax, eax	      2850	dir.c	FUNCTION_94
0x400551c	      0x48897c2408	                mov qword [rsp + 8], rdi	      2853	dir.c	FUNCTION_94
0x4005521	          0x4801f7	                            add rdi, rsi	      2853	dir.c	FUNCTION_94
0x4005524	        0x4883fe01	                              cmp rsi, 1	      2858	dir.c	FUNCTION_94	IF_1
0x4005528	     0xf8642010000	                           jbe 0x4005670	      2858	dir.c	FUNCTION_94	IF_1
0x400552e	        0x807fff00	                   cmp byte [rdi - 1], 0	      2858	dir.c	FUNCTION_94	IF_1
0x4005532	     0xf8538010000	                           jne 0x4005670	      2858	dir.c	FUNCTION_94	IF_1
0x4005538	        0x488d6fff	                      lea rbp, [rdi - 1]	      2860	dir.c	FUNCTION_94
0x400553c	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2862	dir.c	FUNCTION_94	CALL_1
0x4005541	      0xe800000000	                          call 0x4005546	      2862	dir.c	FUNCTION_94	CALL_1
0x4005546	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2863	dir.c	FUNCTION_94	IF_2
0x400554b	          0x4c63e0	                         movsxd r12, eax	      2863	dir.c	FUNCTION_94	IF_2
0x400554e	      0x4b8d4c2500	                    lea rcx, [r13 + r12]	      2863	dir.c	FUNCTION_94	IF_2
0x4005553	          0x4839cd	                            cmp rbp, rcx	      2863	dir.c	FUNCTION_94	IF_2
0x4005556	     0xf8214010000	                            jb 0x4005670	      2863	dir.c	FUNCTION_94	IF_2
0x400555c	      0x48894c2408	                mov qword [rsp + 8], rcx	      2866	dir.c	FUNCTION_94
0x4005561	        0x4883c175	                           add rcx, 0x75	      2868	dir.c	FUNCTION_94	IF_3
0x4005565	          0x4839cd	                            cmp rbp, rcx	      2868	dir.c	FUNCTION_94	IF_3
0x4005568	     0xf8202010000	                            jb 0x4005670	      2868	dir.c	FUNCTION_94	IF_3
0x400556e	      0xbec0000000	                           mov esi, 0xc0	      2871	dir.c	FUNCTION_94	CALL_2
0x4005573	      0xbf01000000	                              mov edi, 1	      2871	dir.c	FUNCTION_94	CALL_2
0x4005578	      0xe800000000	                          call 0x400557d	      2871	dir.c	FUNCTION_94	CALL_2
0x400557d	    0x4c8db0800000	                   lea r14, [rax + 0x80]	      2872	dir.c	FUNCTION_94	CALL_3
0x4005584	          0x4c89e6	                            mov rsi, r12	      2872	dir.c	FUNCTION_94	CALL_3
0x4005587	          0x4889c3	                            mov rbx, rax	      2871	dir.c	FUNCTION_94	CALL_2
0x400558a	          0x4c89f7	                            mov rdi, r14	      2872	dir.c	FUNCTION_94	CALL_3
0x400558d	      0xe800000000	                          call 0x4005592	      2872	dir.c	FUNCTION_94	CALL_3
0x4005592	          0x4c89e2	                            mov rdx, r12	      2873	dir.c	FUNCTION_94	CALL_4
0x4005595	          0x4c89f7	                            mov rdi, r14	      2873	dir.c	FUNCTION_94	CALL_4
0x4005598	          0x4c89ee	                            mov rsi, r13	      2873	dir.c	FUNCTION_94	CALL_4
0x400559b	      0xe800000000	                          call 0x40055a0	      2873	dir.c	FUNCTION_94	CALL_4
0x40055a0	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2874	dir.c	FUNCTION_94	CALL_5
0x40055a5	          0x4889df	                            mov rdi, rbx	      2844	dir.c	FUNCTION_93	CALL_1
0x40055a8	          0x4c89f6	                            mov rsi, r14	      2844	dir.c	FUNCTION_93	CALL_1
0x40055ab	      0xe8a0acffff	            call sym.stat_data_from_disk	      2844	dir.c	FUNCTION_93	CALL_1
0x40055b0	        0x498b4e4c	            mov rcx, qword [r14 + 0x4c] 	        53	string3.h	FUNCTION_103	CALL_3
0x40055b4	        0x488d7b3c	                   lea rdi, [rbx + 0x3c]	      2844	dir.c	FUNCTION_93	CALL_1
0x40055b8	        0x48894b24	             mov qword [rbx + 0x24], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40055bc	        0x498b4e54	            mov rcx, qword [r14 + 0x54] 	        53	string3.h	FUNCTION_103	CALL_3
0x40055c0	        0x48894b2c	             mov qword [rbx + 0x2c], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40055c4	        0x418b565c	            mov edx, dword [r14 + 0x5c] 	        53	string3.h	FUNCTION_103	CALL_3
0x40055c8	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2877	dir.c	FUNCTION_94	CALL_6
0x40055cd	    0xc74338010000	               mov dword [rbx + 0x38], 1	      2846	dir.c	FUNCTION_93
0x40055d4	          0x895334	             mov dword [rbx + 0x34], edx	        53	string3.h	FUNCTION_103	CALL_3
0x40055d7	        0x498d7624	                   lea rsi, [r14 + 0x24]	      2844	dir.c	FUNCTION_93	CALL_1
0x40055db	      0xe870acffff	            call sym.stat_data_from_disk	      2844	dir.c	FUNCTION_93	CALL_1
0x40055e0	        0x498b4e60	            mov rcx, qword [r14 + 0x60] 	        53	string3.h	FUNCTION_103	CALL_3
0x40055e4	      0x4c8b642408	                mov r12, qword [rsp + 8]	      2880	dir.c	FUNCTION_94
0x40055e9	        0x48894b60	             mov qword [rbx + 0x60], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40055ed	        0x498b4e68	            mov rcx, qword [r14 + 0x68] 	        53	string3.h	FUNCTION_103	CALL_3
0x40055f1	        0x4983c474	                           add r12, 0x74	      2881	dir.c	FUNCTION_94
0x40055f5	        0x48894b68	             mov qword [rbx + 0x68], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40055f9	        0x418b5670	            mov edx, dword [r14 + 0x70] 	        53	string3.h	FUNCTION_103	CALL_3
0x40055fd	    0xc74374010000	               mov dword [rbx + 0x74], 1	      2846	dir.c	FUNCTION_93
0x4005604	          0x895370	             mov dword [rbx + 0x70], edx	        53	string3.h	FUNCTION_103	CALL_3
0x4005607	      0x418b4424d4	             mov eax, dword [r12 - 0x2c]	        44	bswap.h	FUNCTION_117	CALL_3
0x400560c	          0x4c89e7	                            mov rdi, r12	      2882	dir.c	FUNCTION_94	CALL_7
0x400560f	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x4005611	    0x898398000000	             mov dword [rbx + 0x98], eax	      2880	dir.c	FUNCTION_94
0x4005617	      0xe800000000	                          call 0x400561c	      2882	dir.c	FUNCTION_94	CALL_7
0x400561c	          0x4c89e7	                            mov rdi, r12	      2884	dir.c	FUNCTION_94	CALL_8
0x400561f	        0x48894378	             mov qword [rbx + 0x78], rax	      2882	dir.c	FUNCTION_94	CALL_7
0x4005623	      0xe800000000	                          call 0x4005628	      2884	dir.c	FUNCTION_94	CALL_8
0x4005628	      0x488b542408	                mov rdx, qword [rsp + 8]	      2884	dir.c	FUNCTION_94	CALL_8
0x400562d	      0x488d540275	            lea rdx, [rdx + rax + 0x75] 	      2884	dir.c	FUNCTION_94	CALL_8
0x4005632	          0x4839d5	                            cmp rbp, rdx	      2885	dir.c	FUNCTION_94	IF_4
0x4005635	      0x4889542408	                mov qword [rsp + 8], rdx	      2884	dir.c	FUNCTION_94	CALL_8
0x400563a	            0x773c	                            ja 0x4005678	      2885	dir.c	FUNCTION_94	IF_4
0x400563c	          0x4839d5	                            cmp rbp, rdx	      2930	dir.c	FUNCTION_94	IF_10
0x400563f	          0x4889d8	                            mov rax, rbx	      2930	dir.c	FUNCTION_94	IF_10
0x4005642	            0x7524	                           jne 0x4005668	      2930	dir.c	FUNCTION_94	IF_10
0x4005644	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      2935	dir.c	FUNCTION_94
0x4005649	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2935	dir.c	FUNCTION_94
0x4005652	     0xf85a9010000	                           jne 0x4005801	      2935	dir.c	FUNCTION_94
0x4005658	        0x4883c450	                           add rsp, 0x50	      2935	dir.c	FUNCTION_94
0x400565c	              0x5b	                                 pop rbx	      2935	dir.c	FUNCTION_94
0x400565d	              0x5d	                                 pop rbp	      2935	dir.c	FUNCTION_94
0x400565e	            0x415c	                                 pop r12	      2935	dir.c	FUNCTION_94
0x4005660	            0x415d	                                 pop r13	      2935	dir.c	FUNCTION_94
0x4005662	            0x415e	                                 pop r14	      2935	dir.c	FUNCTION_94
0x4005664	              0xc3	                                     ret	      2935	dir.c	FUNCTION_94
0x4005665	           0xf1f00	                         nop dword [rax]	      2935	dir.c	FUNCTION_94
0x4005668	          0x4889df	                            mov rdi, rbx	      2931	dir.c	FUNCTION_94	IF_10	CALL_24
0x400566b	      0xe800000000	                          call 0x4005670	      2931	dir.c	FUNCTION_94	IF_10	CALL_24
0x4005670	            0x31c0	                            xor eax, eax	      2932	dir.c	FUNCTION_94	IF_10
0x4005672	            0xebd0	                           jmp 0x4005644	      2932	dir.c	FUNCTION_94	IF_10
0x4005674	         0xf1f4000	                         nop dword [rax]	      2932	dir.c	FUNCTION_94	IF_10
0x4005678	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2888	dir.c	FUNCTION_94	CALL_9
0x400567d	      0xe800000000	                          call 0x4005682	      2888	dir.c	FUNCTION_94	CALL_9
0x4005682	            0x85c0	                           test eax, eax	      2889	dir.c	FUNCTION_94	IF_5
0x4005684	          0x4989c4	                            mov r12, rax	      2888	dir.c	FUNCTION_94	CALL_9
0x4005687	      0x488b542408	                mov rdx, qword [rsp + 8]	      2889	dir.c	FUNCTION_94	IF_5
0x400568c	            0x74ae	                            je 0x400563c	      2889	dir.c	FUNCTION_94	IF_5
0x400568e	          0x4839d5	                            cmp rbp, rdx	      2889	dir.c	FUNCTION_94	IF_5
0x4005691	            0x72a9	                            jb 0x400563c	      2889	dir.c	FUNCTION_94	IF_5
0x4005693	      0xe800000000	                          call 0x4005698	      2892	dir.c	FUNCTION_94	CALL_10
0x4005698	      0x4889442428	             mov qword [rsp + 0x28], rax	      2892	dir.c	FUNCTION_94	CALL_10
0x400569d	      0xe800000000	                          call 0x40056a2	      2893	dir.c	FUNCTION_94	CALL_11
0x40056a2	      0x4889442420	             mov qword [rsp + 0x20], rax	      2893	dir.c	FUNCTION_94	CALL_11
0x40056a7	      0xe800000000	                          call 0x40056ac	      2894	dir.c	FUNCTION_94	CALL_12
0x40056ac	      0x4889442430	             mov qword [rsp + 0x30], rax	      2894	dir.c	FUNCTION_94	CALL_12
0x40056b1	      0x488b442408	                mov rax, qword [rsp + 8]	      2895	dir.c	FUNCTION_94
0x40056b6	          0x4963d4	                        movsxd rdx, r12d	      2898	dir.c	FUNCTION_94
0x40056b9	      0x48896c2440	             mov qword [rsp + 0x40], rbp	      2896	dir.c	FUNCTION_94
0x40056be	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2897	dir.c	FUNCTION_94
0x40056c6	      0x4889442438	             mov qword [rsp + 0x38], rax	      2895	dir.c	FUNCTION_94
0x40056cb	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_134	IF_1
0x40056d5	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_134	IF_1
0x40056d8	     0xf8728010000	                            ja 0x4005806	       795	git-compat-util.h	FUNCTION_134	IF_1
0x40056de	    0x488d3cd50000	                        lea rdi, [rdx*8]	      2898	dir.c	FUNCTION_94
0x40056e6	      0xe800000000	                          call 0x40056eb	      2898	dir.c	FUNCTION_94
0x40056eb	    0x488dbba00000	                   lea rdi, [rbx + 0xa0]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40056f2	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40056f7	      0x4889442418	             mov qword [rsp + 0x18], rax	      2898	dir.c	FUNCTION_94
0x40056fc	      0xe88fb5ffff	                   call sym.read_one_dir	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x4005701	            0x85c0	                           test eax, eax	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x4005703	            0x7507	                           jne 0x400570c	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x4005705	      0x443b642410	           cmp r12d, dword [rsp + 0x10] 	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x400570a	            0x7432	                            je 0x400573e	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x400570c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2925	dir.c	FUNCTION_94	CALL_20
0x4005711	      0xe800000000	                          call 0x4005716	      2925	dir.c	FUNCTION_94	CALL_20
0x4005716	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2926	dir.c	FUNCTION_94	CALL_21
0x400571b	      0xe800000000	                          call 0x4005720	      2926	dir.c	FUNCTION_94	CALL_21
0x4005720	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2927	dir.c	FUNCTION_94	CALL_22
0x4005725	      0xe800000000	                          call 0x400572a	      2927	dir.c	FUNCTION_94	CALL_22
0x400572a	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2928	dir.c	FUNCTION_94	CALL_23
0x400572f	      0xe800000000	                          call 0x4005734	      2928	dir.c	FUNCTION_94	CALL_23
0x4005734	      0x488b542408	                mov rdx, qword [rsp + 8]	      2928	dir.c	FUNCTION_94	CALL_23
0x4005739	      0xe9fefeffff	                           jmp 0x400563c	      2928	dir.c	FUNCTION_94	CALL_23
0x400573e	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2903	dir.c	FUNCTION_94
0x4005743	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2904	dir.c	FUNCTION_94	CALL_14
0x4005748	          0x4889ea	                            mov rdx, rbp	      2904	dir.c	FUNCTION_94	CALL_14
0x400574b	          0x4829f2	                            sub rdx, rsi	      2904	dir.c	FUNCTION_94	CALL_14
0x400574e	      0x4889742408	                mov qword [rsp + 8], rsi	      2903	dir.c	FUNCTION_94
0x4005753	      0xe800000000	                          call 0x4005758	      2904	dir.c	FUNCTION_94	CALL_14
0x4005758	            0x85c0	                           test eax, eax	      2905	dir.c	FUNCTION_94	IF_7
0x400575a	            0x78b0	                            js 0x400570c	      2905	dir.c	FUNCTION_94	IF_7
0x400575c	            0x4898	                                    cdqe	      2908	dir.c	FUNCTION_94
0x400575e	      0x4803442408	                add rax, qword [rsp + 8]	      2908	dir.c	FUNCTION_94
0x4005763	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2909	dir.c	FUNCTION_94	CALL_15
0x4005768	          0x4889ea	                            mov rdx, rbp	      2909	dir.c	FUNCTION_94	CALL_15
0x400576b	          0x4829c2	                            sub rdx, rax	      2909	dir.c	FUNCTION_94	CALL_15
0x400576e	          0x4889c6	                            mov rsi, rax	      2908	dir.c	FUNCTION_94
0x4005771	      0x4889442408	                mov qword [rsp + 8], rax	      2908	dir.c	FUNCTION_94
0x4005776	      0xe800000000	                          call 0x400577b	      2909	dir.c	FUNCTION_94	CALL_15
0x400577b	            0x85c0	                           test eax, eax	      2910	dir.c	FUNCTION_94	IF_8
0x400577d	            0x788d	                            js 0x400570c	      2910	dir.c	FUNCTION_94	IF_8
0x400577f	            0x4898	                                    cdqe	      2913	dir.c	FUNCTION_94
0x4005781	      0x4803442408	                add rax, qword [rsp + 8]	      2913	dir.c	FUNCTION_94
0x4005786	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2914	dir.c	FUNCTION_94	CALL_16
0x400578b	          0x4889ea	                            mov rdx, rbp	      2914	dir.c	FUNCTION_94	CALL_16
0x400578e	          0x4829c2	                            sub rdx, rax	      2914	dir.c	FUNCTION_94	CALL_16
0x4005791	          0x4889c6	                            mov rsi, rax	      2913	dir.c	FUNCTION_94
0x4005794	      0x4889442408	                mov qword [rsp + 8], rax	      2913	dir.c	FUNCTION_94
0x4005799	      0xe800000000	                          call 0x400579e	      2914	dir.c	FUNCTION_94	CALL_16
0x400579e	            0x85c0	                           test eax, eax	      2915	dir.c	FUNCTION_94	IF_9
0x40057a0	          0x4189c4	                           mov r12d, eax	      2914	dir.c	FUNCTION_94	CALL_16
0x40057a3	     0xf8863ffffff	                            js 0x400570c	      2915	dir.c	FUNCTION_94	IF_9
0x40057a9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2918	dir.c	FUNCTION_94	CALL_17
0x40057ae	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2918	dir.c	FUNCTION_94	CALL_17
0x40057b3	      0xbe00000000	                              mov esi, 0	      2918	dir.c	FUNCTION_94	CALL_17
0x40057b8	      0xe800000000	                          call 0x40057bd	      2918	dir.c	FUNCTION_94	CALL_17
0x40057bd	          0x4963c4	                        movsxd rax, r12d	      2919	dir.c	FUNCTION_94
0x40057c0	      0x4803442408	                add rax, qword [rsp + 8]	      2919	dir.c	FUNCTION_94
0x40057c5	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2920	dir.c	FUNCTION_94	CALL_18
0x40057ca	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2920	dir.c	FUNCTION_94	CALL_18
0x40057cf	      0xbe00000000	                              mov esi, 0	      2920	dir.c	FUNCTION_94	CALL_18
0x40057d4	      0x4889442438	             mov qword [rsp + 0x38], rax	      2919	dir.c	FUNCTION_94
0x40057d9	      0xe800000000	                          call 0x40057de	      2920	dir.c	FUNCTION_94	CALL_18
0x40057de	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2921	dir.c	FUNCTION_94	CALL_19
0x40057e3	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2921	dir.c	FUNCTION_94	CALL_19
0x40057e8	      0xbe00000000	                              mov esi, 0	      2921	dir.c	FUNCTION_94	CALL_19
0x40057ed	      0xe800000000	                          call 0x40057f2	      2921	dir.c	FUNCTION_94	CALL_19
0x40057f2	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2922	dir.c	FUNCTION_94
0x40057f7	      0x4889442408	                mov qword [rsp + 8], rax	      2922	dir.c	FUNCTION_94
0x40057fc	      0xe90bffffff	                           jmp 0x400570c	      2922	dir.c	FUNCTION_94
0x4005801	      0xe800000000	                          call 0x4005806	      2935	dir.c	FUNCTION_94
0x4005806	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400580b	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4005810	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4005812	      0xe800000000	                          call 0x4005817	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
add_exclude	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,1:IF,1	109
0x4002330	            0x4157	                                push r15	       630	dir.c	FUNCTION_20
0x4002332	            0x4156	                                push r14	       630	dir.c	FUNCTION_20
0x4002334	          0x4989f7	                            mov r15, rsi	       630	dir.c	FUNCTION_20
0x4002337	            0x4155	                                push r13	       630	dir.c	FUNCTION_20
0x4002339	            0x4154	                                push r12	       630	dir.c	FUNCTION_20
0x400233b	          0x4189d6	                           mov r14d, edx	       630	dir.c	FUNCTION_20
0x400233e	              0x55	                                push rbp	       630	dir.c	FUNCTION_20
0x400233f	              0x53	                                push rbx	       630	dir.c	FUNCTION_20
0x4002340	          0x4889cd	                            mov rbp, rcx	       630	dir.c	FUNCTION_20
0x4002343	          0x4589c5	                           mov r13d, r8d	       630	dir.c	FUNCTION_20
0x4002346	        0x4883ec38	                           sub rsp, 0x38	       630	dir.c	FUNCTION_20
0x400234a	      0x48897c2408	                mov qword [rsp + 8], rdi	       630	dir.c	FUNCTION_20
0x400234f	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	       636	dir.c	FUNCTION_20	CALL_1
0x4002354	      0x488d542420	                   lea rdx, [rsp + 0x20]	       636	dir.c	FUNCTION_20	CALL_1
0x4002359	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	       636	dir.c	FUNCTION_20	CALL_1
0x400235e	      0x488d7c2408	                      lea rdi, [rsp + 8]	       636	dir.c	FUNCTION_20	CALL_1
0x4002363	    0x64488b042528	                mov rax, qword fs:[0x28]	       630	dir.c	FUNCTION_20
0x400236c	      0x4889442428	             mov qword [rsp + 0x28], rax	       630	dir.c	FUNCTION_20
0x4002371	            0x31c0	                            xor eax, eax	       630	dir.c	FUNCTION_20
0x4002373	      0xe800000000	                          call 0x4002378	       636	dir.c	FUNCTION_20	CALL_1
0x4002378	      0xf644242008	               test byte [rsp + 0x20], 8	       637	dir.c	FUNCTION_20	IF_1
0x400237d	     0xf84fd000000	                            je 0x4002480	       637	dir.c	FUNCTION_20	IF_1
0x4002383	      0x4c6364241c	         movsxd r12, dword [rsp + 0x1c] 	       638	dir.c	FUNCTION_20	IF_1
0x4002388	        0x4983fccf	             cmp r12, 0xffffffffffffffcf	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400238c	     0xf8723010000	                            ja 0x40024b5	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4002392	     0xf8408010000	                            je 0x40024a0	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4002398	      0x498d742431	                   lea rsi, [r12 + 0x31]	       638	dir.c	FUNCTION_20	IF_1
0x400239d	      0xbf01000000	                              mov edi, 1	       638	dir.c	FUNCTION_20	IF_1
0x40023a2	      0xe800000000	                          call 0x40023a7	       638	dir.c	FUNCTION_20	IF_1
0x40023a7	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_103	CALL_3
0x40023ac	        0x488d4830	                   lea rcx, [rax + 0x30]	       638	dir.c	FUNCTION_20	IF_1
0x40023b0	          0x4889c3	                            mov rbx, rax	       638	dir.c	FUNCTION_20	IF_1
0x40023b3	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_103	CALL_3
0x40023b6	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40023b9	      0xe800000000	                          call 0x40023be	        53	string3.h	FUNCTION_103	CALL_3
0x40023be	        0x48894308	                mov qword [rbx + 8], rax	       638	dir.c	FUNCTION_20	IF_1
0x40023c2	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       643	dir.c	FUNCTION_20
0x40023c6	        0x48634d00	                 movsxd rcx, dword [rbp]	       649	dir.c	FUNCTION_20
0x40023ca	        0x4c897b18	             mov qword [rbx + 0x18], r15	       645	dir.c	FUNCTION_20
0x40023ce	        0x44897320	            mov dword [rbx + 0x20], r14d	       646	dir.c	FUNCTION_20
0x40023d2	        0x44896b28	            mov dword [rbx + 0x28], r13d	       648	dir.c	FUNCTION_20
0x40023d6	          0x894310	             mov dword [rbx + 0x10], eax	       643	dir.c	FUNCTION_20
0x40023d9	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       644	dir.c	FUNCTION_20
0x40023dd	          0x894314	             mov dword [rbx + 0x14], eax	       644	dir.c	FUNCTION_20
0x40023e0	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       647	dir.c	FUNCTION_20
0x40023e4	          0x894324	             mov dword [rbx + 0x24], eax	       647	dir.c	FUNCTION_20
0x40023e7	          0x8b4504	                mov eax, dword [rbp + 4]	       649	dir.c	FUNCTION_20
0x40023ea	            0x39c1	                            cmp ecx, eax	       649	dir.c	FUNCTION_20
0x40023ec	     0xf8c7e000000	                            jl 0x4002470	       649	dir.c	FUNCTION_20
0x40023f2	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       649	dir.c	FUNCTION_20
0x40023f6	            0x89c2	                            mov edx, eax	       649	dir.c	FUNCTION_20
0x40023f8	          0xc1ea1f	                           shr edx, 0x1f	       649	dir.c	FUNCTION_20
0x40023fb	             0x1c2	                            add edx, eax	       649	dir.c	FUNCTION_20
0x40023fd	            0xd1fa	                              sar edx, 1	       649	dir.c	FUNCTION_20
0x40023ff	            0x39d1	                            cmp ecx, edx	       649	dir.c	FUNCTION_20
0x4002401	            0x7d65	                           jge 0x4002468	       649	dir.c	FUNCTION_20
0x4002403	          0x895504	                mov dword [rbp + 4], edx	       649	dir.c	FUNCTION_20
0x4002406	          0x4863d2	                         movsxd rdx, edx	       649	dir.c	FUNCTION_20
0x4002409	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4002413	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4002416	     0xf87ad000000	                            ja 0x40024c9	       795	git-compat-util.h	FUNCTION_134	IF_1
0x400241c	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       649	dir.c	FUNCTION_20
0x4002420	    0x488d34d50000	                        lea rsi, [rdx*8]	       649	dir.c	FUNCTION_20
0x4002428	      0xe800000000	                          call 0x400242d	       649	dir.c	FUNCTION_20
0x400242d	        0x48634d00	                 movsxd rcx, dword [rbp]	       649	dir.c	FUNCTION_20
0x4002431	        0x48894518	            mov qword [rbp + 0x18], rax 	       649	dir.c	FUNCTION_20
0x4002435	          0x8d5101	                      lea edx, [rcx + 1]	       650	dir.c	FUNCTION_20
0x4002438	          0x895500	                    mov dword [rbp], edx	       650	dir.c	FUNCTION_20
0x400243b	        0x48891cc8	            mov qword [rax + rcx*8], rbx	       650	dir.c	FUNCTION_20
0x400243f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       652	dir.c	FUNCTION_20
0x4002444	    0x644833042528	                xor rax, qword fs:[0x28]	       652	dir.c	FUNCTION_20
0x400244d	          0x48892b	                    mov qword [rbx], rbp	       651	dir.c	FUNCTION_20
0x4002450	            0x7549	                           jne 0x400249b	       652	dir.c	FUNCTION_20
0x4002452	        0x4883c438	                           add rsp, 0x38	       652	dir.c	FUNCTION_20
0x4002456	              0x5b	                                 pop rbx	       652	dir.c	FUNCTION_20
0x4002457	              0x5d	                                 pop rbp	       652	dir.c	FUNCTION_20
0x4002458	            0x415c	                                 pop r12	       652	dir.c	FUNCTION_20
0x400245a	            0x415d	                                 pop r13	       652	dir.c	FUNCTION_20
0x400245c	            0x415e	                                 pop r14	       652	dir.c	FUNCTION_20
0x400245e	            0x415f	                                 pop r15	       652	dir.c	FUNCTION_20
0x4002460	              0xc3	                                     ret	       652	dir.c	FUNCTION_20
0x4002461	     0xf1f80000000	                         nop dword [rax]	       652	dir.c	FUNCTION_20
0x4002468	          0x8d5101	                      lea edx, [rcx + 1]	       649	dir.c	FUNCTION_20
0x400246b	          0x895504	                mov dword [rbp + 4], edx	       649	dir.c	FUNCTION_20
0x400246e	            0xeb96	                           jmp 0x4002406	       649	dir.c	FUNCTION_20
0x4002470	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       649	dir.c	FUNCTION_20
0x4002474	            0xebbf	                           jmp 0x4002435	       649	dir.c	FUNCTION_20
0x4002476	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       649	dir.c	FUNCTION_20
0x4002480	      0xbf30000000	                           mov edi, 0x30	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x4002485	      0xe800000000	                          call 0x400248a	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x400248a	          0x4889c3	                            mov rbx, rax	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x400248d	      0x488b442408	                mov rax, qword [rsp + 8]	       641	dir.c	FUNCTION_20	ELSE_1
0x4002492	        0x48894308	                mov qword [rbx + 8], rax	       641	dir.c	FUNCTION_20	ELSE_1
0x4002496	      0xe927ffffff	                           jmp 0x40023c2	       641	dir.c	FUNCTION_20	ELSE_1
0x400249b	      0xe800000000	                          call 0x40024a0	       652	dir.c	FUNCTION_20
0x40024a0	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40024a5	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40024a9	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40024ae	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40024b0	      0xe800000000	                          call 0x40024b5	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40024b5	          0x4c89e2	                            mov rdx, r12	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40024b8	      0xbe30000000	                           mov esi, 0x30	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40024bd	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40024c2	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40024c4	      0xe800000000	                          call 0x40024c9	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40024c9	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x40024ce	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x40024d3	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x40024d5	      0xe800000000	                          call 0x40024da	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
invalidate_one_component	WHILE,0:CALL,5:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,2	54
0x40010e0	            0x4157	                                push r15	      2972	dir.c	FUNCTION_96
0x40010e2	            0x4156	                                push r14	      2972	dir.c	FUNCTION_96
0x40010e4	          0x4989d7	                            mov r15, rdx	      2972	dir.c	FUNCTION_96
0x40010e7	            0x4155	                                push r13	      2972	dir.c	FUNCTION_96
0x40010e9	            0x4154	                                push r12	      2972	dir.c	FUNCTION_96
0x40010eb	          0x4989f4	                            mov r12, rsi	      2972	dir.c	FUNCTION_96
0x40010ee	              0x55	                                push rbp	      2972	dir.c	FUNCTION_96
0x40010ef	              0x53	                                push rbx	      2972	dir.c	FUNCTION_96
0x40010f0	          0x4889fd	                            mov rbp, rdi	      2972	dir.c	FUNCTION_96
0x40010f3	      0xbe2f000000	                           mov esi, 0x2f	      2973	dir.c	FUNCTION_96	CALL_1
0x40010f8	          0x4889d7	                            mov rdi, rdx	      2973	dir.c	FUNCTION_96	CALL_1
0x40010fb	          0x4189ce	                           mov r14d, ecx	      2972	dir.c	FUNCTION_96
0x40010fe	        0x4883ec08	                              sub rsp, 8	      2972	dir.c	FUNCTION_96
0x4001102	      0xe800000000	                          call 0x4001107	      2973	dir.c	FUNCTION_96	CALL_1
0x4001107	          0x4885c0	                           test rax, rax	      2975	dir.c	FUNCTION_96	IF_1
0x400110a	            0x746c	                            je 0x4001178	      2975	dir.c	FUNCTION_96	IF_1
0x400110c	          0x4989c5	                            mov r13, rax	      2976	dir.c	FUNCTION_96	IF_1
0x400110f	    0x488dbda80000	                   lea rdi, [rbp + 0xa8]	      2976	dir.c	FUNCTION_96	IF_1
0x4001116	          0x4889c3	                            mov rbx, rax	      2976	dir.c	FUNCTION_96	IF_1
0x4001119	          0x4d29fd	                            sub r13, r15	      2976	dir.c	FUNCTION_96	IF_1
0x400111c	          0x4c89fa	                            mov rdx, r15	      2977	dir.c	FUNCTION_96	IF_1
0x400111f	          0x4c89e6	                            mov rsi, r12	      2977	dir.c	FUNCTION_96	IF_1
0x4001122	          0x4489e9	                           mov ecx, r13d	      2977	dir.c	FUNCTION_96	IF_1
0x4001125	        0x4183c501	                             add r13d, 1	      2979	dir.c	FUNCTION_96	IF_1
0x4001129	      0xe8c2fdffff	        call sym.lookup_untracked.isra.8	      2977	dir.c	FUNCTION_96	IF_1
0x400112e	        0x488d5301	                      lea rdx, [rbx + 1]	      2979	dir.c	FUNCTION_96	IF_1
0x4001132	          0x4489f1	                           mov ecx, r14d	      2979	dir.c	FUNCTION_96	IF_1
0x4001135	          0x4889c6	                            mov rsi, rax	      2979	dir.c	FUNCTION_96	IF_1
0x4001138	          0x4429e9	                           sub ecx, r13d	      2979	dir.c	FUNCTION_96	IF_1
0x400113b	          0x4889ef	                            mov rdi, rbp	      2979	dir.c	FUNCTION_96	IF_1
0x400113e	      0xe89dffffff	       call sym.invalidate_one_component	      2979	dir.c	FUNCTION_96	IF_1
0x4001143	            0x31d2	                            xor edx, edx	      2979	dir.c	FUNCTION_96	IF_1
0x4001145	            0x85c0	                           test eax, eax	      2982	dir.c	FUNCTION_96	IF_1	IF_2
0x4001147	            0x7418	                            je 0x4001161	      2982	dir.c	FUNCTION_96	IF_1	IF_2
0x4001149	    0x8385b0000000	               add dword [rbp + 0xb0], 1	      2940	dir.c	FUNCTION_95
0x4001150	            0x89c2	                            mov edx, eax	      2942	dir.c	FUNCTION_95
0x4001152	    0x41c744244000	               mov dword [r12 + 0x40], 0	      2942	dir.c	FUNCTION_95
0x400115b	    0x4180642444fd	             and byte [r12 + 0x44], 0xfd	      2941	dir.c	FUNCTION_95
0x4001161	        0x4883c408	                              add rsp, 8	      2989	dir.c	FUNCTION_96
0x4001165	            0x89d0	                            mov eax, edx	      2989	dir.c	FUNCTION_96
0x4001167	              0x5b	                                 pop rbx	      2989	dir.c	FUNCTION_96
0x4001168	              0x5d	                                 pop rbp	      2989	dir.c	FUNCTION_96
0x4001169	            0x415c	                                 pop r12	      2989	dir.c	FUNCTION_96
0x400116b	            0x415d	                                 pop r13	      2989	dir.c	FUNCTION_96
0x400116d	            0x415e	                                 pop r14	      2989	dir.c	FUNCTION_96
0x400116f	            0x415f	                                 pop r15	      2989	dir.c	FUNCTION_96
0x4001171	              0xc3	                                     ret	      2989	dir.c	FUNCTION_96
0x4001172	    0x660f1f440000	                    nop word [rax + rax]	      2989	dir.c	FUNCTION_96
0x4001178	    0x8385b0000000	               add dword [rbp + 0xb0], 1	      2940	dir.c	FUNCTION_95
0x400117f	    0x41c744244000	               mov dword [r12 + 0x40], 0	      2942	dir.c	FUNCTION_95
0x4001188	    0x4180642444fd	             and byte [r12 + 0x44], 0xfd	      2941	dir.c	FUNCTION_95
0x400118e	    0x8b9598000000	            mov edx, dword [rbp + 0x98] 	      2988	dir.c	FUNCTION_96
0x4001194	          0x83e202	                              and edx, 2	      2988	dir.c	FUNCTION_96
0x4001197	            0xebc8	                           jmp 0x4001161	      2988	dir.c	FUNCTION_96
add_excludes_from_file_1	WHILE,0:CALL,3:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,2	30
0x4002aa0	              0x55	                                push rbp	       941	dir.c	FUNCTION_33
0x4002aa1	              0x53	                                push rbx	       941	dir.c	FUNCTION_33
0x4002aa2	          0x4889d5	                            mov rbp, rdx	       941	dir.c	FUNCTION_33
0x4002aa5	          0x4889f3	                            mov rbx, rsi	       941	dir.c	FUNCTION_33
0x4002aa8	        0x4883ec08	                              sub rsp, 8	       941	dir.c	FUNCTION_33
0x4002aac	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	       948	dir.c	FUNCTION_33	IF_1
0x4002ab4	            0x743a	                            je 0x4002af0	       948	dir.c	FUNCTION_33	IF_1
0x4002ab6	          0x4889da	                            mov rdx, rbx	       950	dir.c	FUNCTION_33	CALL_1
0x4002ab9	      0xbe02000000	                              mov esi, 2	       950	dir.c	FUNCTION_33	CALL_1
0x4002abe	      0xe800000000	                          call 0x4002ac3	       950	dir.c	FUNCTION_33	CALL_1
0x4002ac3	          0x4531c0	                            xor r8d, r8d	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002ac6	            0x31d2	                            xor edx, edx	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002ac8	          0x4989e9	                             mov r9, rbp	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002acb	          0x4889c1	                            mov rcx, rax	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002ace	      0xbe00000000	                              mov esi, 0	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002ad3	          0x4889df	                            mov rdi, rbx	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002ad6	      0xe845fbffff	                   call sym.add_excludes	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002adb	            0x85c0	                           test eax, eax	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002add	            0x781a	                            js 0x4002af9	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002adf	        0x4883c408	                              add rsp, 8	       953	dir.c	FUNCTION_33
0x4002ae3	              0x5b	                                 pop rbx	       953	dir.c	FUNCTION_33
0x4002ae4	              0x5d	                                 pop rbp	       953	dir.c	FUNCTION_33
0x4002ae5	              0xc3	                                     ret	       953	dir.c	FUNCTION_33
0x4002ae6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       953	dir.c	FUNCTION_33
0x4002af0	    0x838708010000	              add dword [rdi + 0x108], 1	       949	dir.c	FUNCTION_33	IF_1
0x4002af7	            0xebbd	                           jmp 0x4002ab6	       949	dir.c	FUNCTION_33	IF_1
0x4002af9	          0x4889de	                            mov rsi, rbx	       952	dir.c	FUNCTION_33	CALL_3
0x4002afc	      0xbf00000000	                              mov edi, 0	       952	dir.c	FUNCTION_33	CALL_3
0x4002b01	            0x31c0	                            xor eax, eax	       952	dir.c	FUNCTION_33	CALL_3
0x4002b03	      0xe800000000	                          call 0x4002b08	       952	dir.c	FUNCTION_33	CALL_3
add_excludes_from_buffer	WHILE,0:CALL,3:functions,0:FOR,1:SWITCH,0:DO,0:ELSE,0:IF,3	104
0x40024e0	            0x4157	                                push r15	       873	dir.c	FUNCTION_29
0x40024e2	            0x4156	                                push r14	       873	dir.c	FUNCTION_29
0x40024e4	          0x4989f7	                            mov r15, rsi	       873	dir.c	FUNCTION_29
0x40024e7	            0x4155	                                push r13	       873	dir.c	FUNCTION_29
0x40024e9	            0x4154	                                push r12	       873	dir.c	FUNCTION_29
0x40024eb	          0x4189cc	                           mov r12d, ecx	       873	dir.c	FUNCTION_29
0x40024ee	              0x55	                                push rbp	       873	dir.c	FUNCTION_29
0x40024ef	              0x53	                                push rbx	       873	dir.c	FUNCTION_29
0x40024f0	          0x4c89c3	                             mov rbx, r8	       873	dir.c	FUNCTION_29
0x40024f3	        0x4883ec18	                           sub rsp, 0x18	       873	dir.c	FUNCTION_29
0x40024f7	        0x49897808	                 mov qword [r8 + 8], rdi	       877	dir.c	FUNCTION_29
0x40024fb	      0x48897c2408	                mov qword [rsp + 8], rdi	       873	dir.c	FUNCTION_29
0x4002500	      0x488d7c2408	                      lea rdi, [rsp + 8]	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4002505	        0x48891424	                    mov qword [rsp], rdx	       873	dir.c	FUNCTION_29
0x4002509	      0xe800000000	                          call 0x400250e	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x400250e	            0x85c0	                           test eax, eax	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4002510	      0x488b442408	                mov rax, qword [rsp + 8]	       880	dir.c	FUNCTION_29	IF_1
0x4002515	            0x740a	                            je 0x4002521	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4002517	          0x4889c2	                            mov rdx, rax	       880	dir.c	FUNCTION_29	IF_1
0x400251a	        0x482b5308	                sub rdx, qword [rbx + 8]	       880	dir.c	FUNCTION_29	IF_1
0x400251e	          0x4929d7	                            sub r15, rdx	       880	dir.c	FUNCTION_29	IF_1
0x4002521	          0x4d85ff	                           test r15, r15	       884	dir.c	FUNCTION_29	FOR_1
0x4002524	     0xf84ba000000	                            je 0x40025e4	       884	dir.c	FUNCTION_29	FOR_1
0x400252a	          0x4889c7	                            mov rdi, rax	       884	dir.c	FUNCTION_29	FOR_1
0x400252d	          0x4531f6	                          xor r14d, r14d	       884	dir.c	FUNCTION_29	FOR_1
0x4002530	          0x4531ed	                          xor r13d, r13d	       884	dir.c	FUNCTION_29	FOR_1
0x4002533	      0xbd01000000	                              mov ebp, 1	       884	dir.c	FUNCTION_29	FOR_1
0x4002538	            0xeb16	                           jmp 0x4002550	       884	dir.c	FUNCTION_29	FOR_1
0x400253a	    0x660f1f440000	                    nop word [rax + rax]	       884	dir.c	FUNCTION_29	FOR_1
0x4002540	        0x4d8d6e01	                      lea r13, [r14 + 1]	       884	dir.c	FUNCTION_29	FOR_1
0x4002544	          0x4d39ef	                            cmp r15, r13	       884	dir.c	FUNCTION_29	FOR_1
0x4002547	     0xf8497000000	                            je 0x40025e4	       884	dir.c	FUNCTION_29	FOR_1
0x400254d	          0x4d89ee	                            mov r14, r13	       884	dir.c	FUNCTION_29	FOR_1
0x4002550	        0x4a8d1428	                    lea rdx, [rax + r13]	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002554	          0x4489f1	                           mov ecx, r14d	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002557	          0x803a0a	                     cmp byte [rdx], 0xa	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x400255a	            0x75e4	                           jne 0x4002540	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x400255c	          0x4839fa	                            cmp rdx, rdi	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400255f	            0x746e	                            je 0x40025cf	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4002561	          0x803f23	                    cmp byte [rdi], 0x23	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4002564	            0x7469	                            je 0x40025cf	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4002566	          0x4585f6	                         test r14d, r14d	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4002569	     0xf84a9000000	                            je 0x4002618	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400256f	            0x31d2	                            xor edx, edx	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4002571	    0x42807c28ff0d	          cmp byte [rax + r13 - 1], 0xd 	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4002577	           0xf94c2	                                 sete dl	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400257a	            0x29d1	                            sub ecx, edx	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400257c	          0x4863c9	                         movsxd rcx, ecx	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400257f	        0xc6040800	                 mov byte [rax + rcx], 0	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4002583	           0xfb607	                   movzx eax, byte [rdi]	       691	dir.c	FUNCTION_23	FOR_1
0x4002586	            0x84c0	                             test al, al	       691	dir.c	FUNCTION_23	FOR_1
0x4002588	            0x742e	                            je 0x40025b8	       691	dir.c	FUNCTION_23	FOR_1
0x400258a	          0x4889fa	                            mov rdx, rdi	       691	dir.c	FUNCTION_23	FOR_1
0x400258d	            0x31c9	                            xor ecx, ecx	       691	dir.c	FUNCTION_23	FOR_1
0x400258f	              0x90	                                     nop	       691	dir.c	FUNCTION_23	FOR_1
0x4002590	            0x3c20	                            cmp al, 0x20	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4002592	            0x746c	                            je 0x4002600	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4002594	            0x3c5c	                            cmp al, 0x5c	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4002596	            0x7560	                           jne 0x40025f8	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4002598	        0x807a0100	                   cmp byte [rdx + 1], 0	       699	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x400259c	        0x488d4201	                      lea rax, [rdx + 1]	       698	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40025a0	            0x7416	                            je 0x40025b8	       699	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x40025a2	            0x31c9	                            xor ecx, ecx	       703	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40025a4	        0x488d5001	                      lea rdx, [rax + 1]	       691	dir.c	FUNCTION_23	FOR_1
0x40025a8	         0xfb64001	               movzx eax, byte [rax + 1]	       691	dir.c	FUNCTION_23	FOR_1
0x40025ac	            0x84c0	                             test al, al	       691	dir.c	FUNCTION_23	FOR_1
0x40025ae	            0x75e0	                           jne 0x4002590	       691	dir.c	FUNCTION_23	FOR_1
0x40025b0	          0x4885c9	                           test rcx, rcx	       706	dir.c	FUNCTION_23	IF_3
0x40025b3	            0x7403	                            je 0x40025b8	       706	dir.c	FUNCTION_23	IF_3
0x40025b5	          0xc60100	                       mov byte [rcx], 0	       707	dir.c	FUNCTION_23	IF_3
0x40025b8	        0x488b3424	                    mov rsi, qword [rsp]	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40025bc	          0x4189e8	                            mov r8d, ebp	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40025bf	          0x4889d9	                            mov rcx, rbx	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40025c2	          0x4489e2	                           mov edx, r12d	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40025c5	      0xe800000000	                          call 0x40025ca	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40025ca	      0x488b442408	                mov rax, qword [rsp + 8]	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40025cf	      0x4a8d7c2801	                lea rdi, [rax + r13 + 1]	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x40025d4	        0x4d8d6e01	                      lea r13, [r14 + 1]	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x40025d8	          0x83c501	                              add ebp, 1	       891	dir.c	FUNCTION_29	FOR_1	IF_2
0x40025db	          0x4d39ef	                            cmp r15, r13	       884	dir.c	FUNCTION_29	FOR_1
0x40025de	     0xf8569ffffff	                           jne 0x400254d	       884	dir.c	FUNCTION_29	FOR_1
0x40025e4	        0x4883c418	                           add rsp, 0x18	       896	dir.c	FUNCTION_29
0x40025e8	            0x31c0	                            xor eax, eax	       896	dir.c	FUNCTION_29
0x40025ea	              0x5b	                                 pop rbx	       896	dir.c	FUNCTION_29
0x40025eb	              0x5d	                                 pop rbp	       896	dir.c	FUNCTION_29
0x40025ec	            0x415c	                                 pop r12	       896	dir.c	FUNCTION_29
0x40025ee	            0x415d	                                 pop r13	       896	dir.c	FUNCTION_29
0x40025f0	            0x415e	                                 pop r14	       896	dir.c	FUNCTION_29
0x40025f2	            0x415f	                                 pop r15	       896	dir.c	FUNCTION_29
0x40025f4	              0xc3	                                     ret	       896	dir.c	FUNCTION_29
0x40025f5	           0xf1f00	                         nop dword [rax]	       896	dir.c	FUNCTION_29
0x40025f8	          0x4889d0	                            mov rax, rdx	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40025fb	            0xeba5	                           jmp 0x40025a2	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40025fd	           0xf1f00	                         nop dword [rax]	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4002600	          0x4885c9	                           test rcx, rcx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4002603	            0x740b	                            je 0x4002610	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4002605	          0x4889d0	                            mov rax, rdx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4002608	            0xeb9a	                           jmp 0x40025a4	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x400260a	    0x660f1f440000	                    nop word [rax + rax]	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4002610	          0x4889d1	                            mov rcx, rdx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4002613	          0x4889d0	                            mov rax, rdx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4002616	            0xeb8c	                           jmp 0x40025a4	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4002618	            0x31d2	                            xor edx, edx	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400261a	      0xe95bffffff	                           jmp 0x400257a	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
do_read_blob	WHILE,0:CALL,8:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,4	76
0x4000310	            0x4155	                                push r13	       239	dir.c	FUNCTION_10
0x4000312	            0x4154	                                push r12	       239	dir.c	FUNCTION_10
0x4000314	          0x4989d4	                            mov r12, rdx	       239	dir.c	FUNCTION_10
0x4000317	              0x55	                                push rbp	       239	dir.c	FUNCTION_10
0x4000318	              0x53	                                push rbx	       239	dir.c	FUNCTION_10
0x4000319	          0x4889f3	                            mov rbx, rsi	       239	dir.c	FUNCTION_10
0x400031c	          0x4889cd	                            mov rbp, rcx	       239	dir.c	FUNCTION_10
0x400031f	          0x4989fd	                            mov r13, rdi	       239	dir.c	FUNCTION_10
0x4000322	        0x4883ec28	                           sub rsp, 0x28	       239	dir.c	FUNCTION_10
0x4000326	    0x48c702000000	                      mov qword [rdx], 0	       244	dir.c	FUNCTION_10
0x400032d	    0x48c701000000	                      mov qword [rcx], 0	       245	dir.c	FUNCTION_10
0x4000334	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1200	cache.h	FUNCTION_170	CALL_1
0x4000339	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      1200	cache.h	FUNCTION_170	CALL_1
0x400033e	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_170	CALL_1
0x4000343	    0x64488b042528	                mov rax, qword fs:[0x28]	       239	dir.c	FUNCTION_10
0x400034c	      0x4889442418	             mov qword [rsp + 0x18], rax	       239	dir.c	FUNCTION_10
0x4000351	            0x31c0	                            xor eax, eax	       239	dir.c	FUNCTION_10
0x4000353	      0xe800000000	                          call 0x4000358	      1200	cache.h	FUNCTION_170	CALL_1
0x4000358	          0x4885c0	                           test rax, rax	       248	dir.c	FUNCTION_10	IF_1
0x400035b	     0xf84bf000000	                            je 0x4000420	       248	dir.c	FUNCTION_10	IF_1
0x4000361	      0x837c240c03	                cmp dword [rsp + 0xc], 3	       248	dir.c	FUNCTION_10	IF_1
0x4000366	     0xf85b4000000	                           jne 0x4000420	       248	dir.c	FUNCTION_10	IF_1
0x400036c	          0x4885db	                           test rbx, rbx	       253	dir.c	FUNCTION_10	IF_2
0x400036f	            0x743d	                            je 0x40003ae	       253	dir.c	FUNCTION_10	IF_2
0x4000371	    0x48c703000000	                      mov qword [rbx], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4000378	    0x48c743080000	                  mov qword [rbx + 8], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4000380	    0x48c743100000	               mov qword [rbx + 0x10], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4000388	    0x48c743180000	               mov qword [rbx + 0x18], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4000390	    0xc74320000000	               mov dword [rbx + 0x20], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4000397	        0x498b4d00	                    mov rcx, qword [r13]	        53	string3.h	FUNCTION_103	CALL_3
0x400039b	        0x48894b24	             mov qword [rbx + 0x24], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x400039f	        0x498b4d08	                mov rcx, qword [r13 + 8]	        53	string3.h	FUNCTION_103	CALL_3
0x40003a3	        0x48894b2c	             mov qword [rbx + 0x2c], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40003a7	        0x418b4d10	            mov ecx, dword [r13 + 0x10] 	        53	string3.h	FUNCTION_103	CALL_3
0x40003ab	          0x894b34	             mov dword [rbx + 0x34], ecx	        53	string3.h	FUNCTION_103	CALL_3
0x40003ae	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       258	dir.c	FUNCTION_10	IF_3
0x40003b3	          0x4885f6	                           test rsi, rsi	       258	dir.c	FUNCTION_10	IF_3
0x40003b6	            0x7458	                            je 0x4000410	       258	dir.c	FUNCTION_10	IF_3
0x40003b8	      0x807c30ff0a	          cmp byte [rax + rsi - 1], 0xa 	       263	dir.c	FUNCTION_10	IF_4
0x40003bd	            0x7429	                            je 0x40003e8	       263	dir.c	FUNCTION_10	IF_4
0x40003bf	        0x4883feff	             cmp rsi, 0xffffffffffffffff	       785	git-compat-util.h	FUNCTION_133	IF_1
0x40003c3	            0x746f	                            je 0x4000434	       785	git-compat-util.h	FUNCTION_133	IF_1
0x40003c5	        0x4883c601	                              add rsi, 1	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x40003c9	          0x4889c7	                            mov rdi, rax	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x40003cc	      0xe800000000	                          call 0x40003d1	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x40003d1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       265	dir.c	FUNCTION_10	IF_4
0x40003d6	        0x488d4a01	                      lea rcx, [rdx + 1]	       265	dir.c	FUNCTION_10	IF_4
0x40003da	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       265	dir.c	FUNCTION_10	IF_4
0x40003df	        0xc604100a	               mov byte [rax + rdx], 0xa	       265	dir.c	FUNCTION_10	IF_4
0x40003e3	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       265	dir.c	FUNCTION_10	IF_4
0x40003e8	        0x49893424	                    mov qword [r12], rsi	       268	dir.c	FUNCTION_10	CALL_8
0x40003ec	        0x48894500	                    mov qword [rbp], rax	       269	dir.c	FUNCTION_10
0x40003f0	      0xb801000000	                              mov eax, 1	       271	dir.c	FUNCTION_10
0x40003f5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       272	dir.c	FUNCTION_10
0x40003fa	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       272	dir.c	FUNCTION_10
0x4000403	            0x752a	                           jne 0x400042f	       272	dir.c	FUNCTION_10
0x4000405	        0x4883c428	                           add rsp, 0x28	       272	dir.c	FUNCTION_10
0x4000409	              0x5b	                                 pop rbx	       272	dir.c	FUNCTION_10
0x400040a	              0x5d	                                 pop rbp	       272	dir.c	FUNCTION_10
0x400040b	            0x415c	                                 pop r12	       272	dir.c	FUNCTION_10
0x400040d	            0x415d	                                 pop r13	       272	dir.c	FUNCTION_10
0x400040f	              0xc3	                                     ret	       272	dir.c	FUNCTION_10
0x4000410	          0x4889c7	                            mov rdi, rax	       259	dir.c	FUNCTION_10	IF_3	CALL_5
0x4000413	      0xe800000000	                          call 0x4000418	       259	dir.c	FUNCTION_10	IF_3	CALL_5
0x4000418	            0x31c0	                            xor eax, eax	       260	dir.c	FUNCTION_10	IF_3
0x400041a	            0xebd9	                           jmp 0x40003f5	       260	dir.c	FUNCTION_10	IF_3
0x400041c	         0xf1f4000	                         nop dword [rax]	       260	dir.c	FUNCTION_10	IF_3
0x4000420	          0x4889c7	                            mov rdi, rax	       249	dir.c	FUNCTION_10	IF_1	CALL_2
0x4000423	      0xe800000000	                          call 0x4000428	       249	dir.c	FUNCTION_10	IF_1	CALL_2
0x4000428	      0xb8ffffffff	                     mov eax, 0xffffffff	       250	dir.c	FUNCTION_10	IF_1
0x400042d	            0xebc6	                           jmp 0x40003f5	       250	dir.c	FUNCTION_10	IF_1
0x400042f	      0xe800000000	                          call 0x4000434	       272	dir.c	FUNCTION_10
0x4000434	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000439	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400043e	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000440	      0xe800000000	                          call 0x4000445	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
dir_inside_of	WHILE,1:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,3	75
0x4004cf0	        0x4883ec08	                              sub rsp, 8	      2355	dir.c	FUNCTION_75
0x4004cf4	          0x4885f6	                           test rsi, rsi	      2358	dir.c	FUNCTION_75	CALL_1
0x4004cf7	     0xf84dc000000	                            je 0x4004dd9	      2358	dir.c	FUNCTION_75	CALL_1
0x4004cfd	          0x4885ff	                           test rdi, rdi	      2358	dir.c	FUNCTION_75	CALL_1
0x4004d00	     0xf84d3000000	                            je 0x4004dd9	      2358	dir.c	FUNCTION_75	CALL_1
0x4004d06	           0xfb606	                   movzx eax, byte [rsi]	      2358	dir.c	FUNCTION_75	CALL_1
0x4004d09	            0x84c0	                             test al, al	      2358	dir.c	FUNCTION_75	CALL_1
0x4004d0b	     0xf84c8000000	                            je 0x4004dd9	      2358	dir.c	FUNCTION_75	CALL_1
0x4004d11	           0xfb617	                   movzx edx, byte [rdi]	      2358	dir.c	FUNCTION_75	CALL_1
0x4004d14	            0x84d2	                             test dl, dl	      2358	dir.c	FUNCTION_75	CALL_1
0x4004d16	     0xf84bd000000	                            je 0x4004dd9	      2358	dir.c	FUNCTION_75	CALL_1
0x4004d1c	    0x448b0d000000	            mov r9d, dword [0x04004d23] 	      2344	dir.c	FUNCTION_74	IF_2
0x4004d23	          0x4531c0	                            xor r8d, r8d	      2344	dir.c	FUNCTION_74	IF_2
0x4004d26	            0xeb51	                           jmp 0x4004d79	      2344	dir.c	FUNCTION_74	IF_2
0x4004d28	     0xf1f84000000	                   nop dword [rax + rax]	      2344	dir.c	FUNCTION_74	IF_2
0x4004d30	          0x4c63d0	                         movsxd r10, eax	       993	git-compat-util.h	FUNCTION_140	IF_1
0x4004d33	            0x89c1	                            mov ecx, eax	       994	git-compat-util.h	FUNCTION_140	IF_1
0x4004d35	          0x83e1df	                     and ecx, 0xffffffdf	       994	git-compat-util.h	FUNCTION_140	IF_1
0x4004d38	    0x41f682000000	                      test byte [r10], 4	       994	git-compat-util.h	FUNCTION_140	IF_1
0x4004d40	          0x4c63d2	                         movsxd r10, edx	       993	git-compat-util.h	FUNCTION_140	IF_1
0x4004d43	           0xf45c1	                         cmovne eax, ecx	       994	git-compat-util.h	FUNCTION_140	IF_1
0x4004d46	            0x89d1	                            mov ecx, edx	       994	git-compat-util.h	FUNCTION_140	IF_1
0x4004d48	          0x83e1df	                     and ecx, 0xffffffdf	       994	git-compat-util.h	FUNCTION_140	IF_1
0x4004d4b	    0x41f682000000	                      test byte [r10], 4	       994	git-compat-util.h	FUNCTION_140	IF_1
0x4004d53	           0xf45d1	                         cmovne edx, ecx	       994	git-compat-util.h	FUNCTION_140	IF_1
0x4004d56	            0x29d0	                            sub eax, edx	      2345	dir.c	FUNCTION_74	IF_2
0x4004d58	            0x85c0	                           test eax, eax	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004d5a	            0x7532	                           jne 0x4004d8e	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004d5c	        0x4883c601	                              add rsi, 1	      2361	dir.c	FUNCTION_75	WHILE_1
0x4004d60	           0xfb606	                   movzx eax, byte [rsi]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004d63	        0x4883c701	                              add rdi, 1	      2362	dir.c	FUNCTION_75	WHILE_1
0x4004d67	        0x418d4801	                       lea ecx, [r8 + 1]	      2363	dir.c	FUNCTION_75	WHILE_1
0x4004d6b	            0x84c0	                             test al, al	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004d6d	            0x7431	                            je 0x4004da0	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004d6f	           0xfb617	                   movzx edx, byte [rdi]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004d72	            0x84d2	                             test dl, dl	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004d74	            0x7418	                            je 0x4004d8e	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004d76	          0x4189c8	                            mov r8d, ecx	      2363	dir.c	FUNCTION_75	WHILE_1
0x4004d79	            0x38d0	                              cmp al, dl	      2342	dir.c	FUNCTION_74	IF_1
0x4004d7b	            0x74df	                            je 0x4004d5c	      2342	dir.c	FUNCTION_74	IF_1
0x4004d7d	          0x4585c9	                           test r9d, r9d	      2344	dir.c	FUNCTION_74	IF_2
0x4004d80	            0x75ae	                           jne 0x4004d30	      2344	dir.c	FUNCTION_74	IF_2
0x4004d82	           0xfbec0	                           movsx eax, al	      2346	dir.c	FUNCTION_74
0x4004d85	           0xfbed2	                           movsx edx, dl	      2346	dir.c	FUNCTION_74
0x4004d88	            0x29d0	                            sub eax, edx	      2346	dir.c	FUNCTION_74
0x4004d8a	            0x85c0	                           test eax, eax	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004d8c	            0x74ce	                            je 0x4004d5c	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004d8e	      0xb8ffffffff	                     mov eax, 0xffffffff	      2375	dir.c	FUNCTION_75	IF_3
0x4004d93	        0x4883c408	                              add rsp, 8	      2379	dir.c	FUNCTION_75
0x4004d97	              0xc3	                                     ret	      2379	dir.c	FUNCTION_75
0x4004d98	     0xf1f84000000	                   nop dword [rax + rax]	      2379	dir.c	FUNCTION_75
0x4004da0	           0xfb617	                   movzx edx, byte [rdi]	      2370	dir.c	FUNCTION_75	IF_2
0x4004da3	            0x84d2	                             test dl, dl	      2370	dir.c	FUNCTION_75	IF_2
0x4004da5	            0x744b	                            je 0x4004df2	      2370	dir.c	FUNCTION_75	IF_2
0x4004da7	        0x807eff2f	                cmp byte [rsi - 1], 0x2f	      2374	dir.c	FUNCTION_75	IF_3
0x4004dab	            0x741b	                            je 0x4004dc8	      2374	dir.c	FUNCTION_75	IF_3
0x4004dad	        0x418d4002	                       lea eax, [r8 + 2]	      2378	dir.c	FUNCTION_75
0x4004db1	          0x80fa2f	                            cmp dl, 0x2f	      2378	dir.c	FUNCTION_75
0x4004db4	      0xb9ffffffff	                     mov ecx, 0xffffffff	      2378	dir.c	FUNCTION_75
0x4004db9	           0xf45c1	                         cmovne eax, ecx	      2378	dir.c	FUNCTION_75
0x4004dbc	        0x4883c408	                              add rsp, 8	      2379	dir.c	FUNCTION_75
0x4004dc0	              0xc3	                                     ret	      2379	dir.c	FUNCTION_75
0x4004dc1	     0xf1f80000000	                         nop dword [rax]	      2379	dir.c	FUNCTION_75
0x4004dc8	        0x807fff2f	                cmp byte [rdi - 1], 0x2f	      2363	dir.c	FUNCTION_75	WHILE_1
0x4004dcc	      0xb8ffffffff	                     mov eax, 0xffffffff	      2363	dir.c	FUNCTION_75	WHILE_1
0x4004dd1	           0xf44c1	                          cmove eax, ecx	      2363	dir.c	FUNCTION_75	WHILE_1
0x4004dd4	        0x4883c408	                              add rsp, 8	      2379	dir.c	FUNCTION_75
0x4004dd8	              0xc3	                                     ret	      2379	dir.c	FUNCTION_75
0x4004dd9	      0xb900000000	                              mov ecx, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4004dde	      0xba36090000	                          mov edx, 0x936	      2358	dir.c	FUNCTION_75	CALL_1
0x4004de3	      0xbe00000000	                              mov esi, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4004de8	      0xbf00000000	                              mov edi, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4004ded	      0xe800000000	                          call 0x4004df2	      2358	dir.c	FUNCTION_75	CALL_1
0x4004df2	            0x89c8	                            mov eax, ecx	      2363	dir.c	FUNCTION_75	WHILE_1
0x4004df4	            0xeb9d	                           jmp 0x4004d93	      2363	dir.c	FUNCTION_75	WHILE_1
parse_exclude_pattern	WHILE,0:CALL,3:functions,0:FOR,1:SWITCH,0:DO,0:ELSE,0:IF,6	94
0x4002200	            0x4156	                                push r14	       594	dir.c	FUNCTION_19
0x4002202	            0x4155	                                push r13	       594	dir.c	FUNCTION_19
0x4002204	          0x4989ce	                            mov r14, rcx	       594	dir.c	FUNCTION_19
0x4002207	            0x4154	                                push r12	       594	dir.c	FUNCTION_19
0x4002209	              0x55	                                push rbp	       594	dir.c	FUNCTION_19
0x400220a	          0x4989f4	                            mov r12, rsi	       594	dir.c	FUNCTION_19
0x400220d	              0x53	                                push rbx	       594	dir.c	FUNCTION_19
0x400220e	          0x488b1f	                    mov rbx, qword [rdi]	       595	dir.c	FUNCTION_19
0x4002211	          0x4889fd	                            mov rbp, rdi	       594	dir.c	FUNCTION_19
0x4002214	    0xc70200000000	                      mov dword [rdx], 0	       598	dir.c	FUNCTION_19
0x400221a	          0x4989d5	                            mov r13, rdx	       594	dir.c	FUNCTION_19
0x400221d	          0x803b21	                    cmp byte [rbx], 0x21	       599	dir.c	FUNCTION_19	IF_1
0x4002220	     0xf84da000000	                            je 0x4002300	       599	dir.c	FUNCTION_19	IF_1
0x4002226	          0x4889df	                            mov rdi, rbx	       603	dir.c	FUNCTION_19	CALL_1
0x4002229	      0xe800000000	                          call 0x400222e	       603	dir.c	FUNCTION_19	CALL_1
0x400222e	          0x4885c0	                           test rax, rax	       604	dir.c	FUNCTION_19	IF_2
0x4002231	            0x747d	                            je 0x40022b0	       604	dir.c	FUNCTION_19	IF_2
0x4002233	      0x807c03ff2f	         cmp byte [rbx + rax - 1], 0x2f 	       604	dir.c	FUNCTION_19	IF_2
0x4002238	        0x488d48ff	                      lea rcx, [rax - 1]	       604	dir.c	FUNCTION_19	IF_2
0x400223c	     0xf84ce000000	                            je 0x4002310	       604	dir.c	FUNCTION_19	IF_2
0x4002242	           0xfb63b	                   movzx edi, byte [rbx]	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4002245	          0x4531c0	                            xor r8d, r8d	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4002248	        0x4080ff2f	                           cmp dil, 0x2f	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400224c	            0x741b	                            je 0x4002269	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400224e	            0x6690	                                     nop	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4002250	        0x4983c001	                               add r8, 1	       608	dir.c	FUNCTION_19	FOR_1
0x4002254	          0x4939c0	                             cmp r8, rax	       608	dir.c	FUNCTION_19	FOR_1
0x4002257	            0x7307	                           jae 0x4002260	       608	dir.c	FUNCTION_19	FOR_1
0x4002259	      0x42803c032f	               cmp byte [rbx + r8], 0x2f	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400225e	            0x75f0	                           jne 0x4002250	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4002260	          0x4939c0	                             cmp r8, rax	       612	dir.c	FUNCTION_19	IF_4
0x4002263	     0xf84bf000000	                            je 0x4002328	       612	dir.c	FUNCTION_19	IF_4
0x4002269	            0x89c6	                            mov esi, eax	       612	dir.c	FUNCTION_19	IF_4
0x400226b	          0x4531c0	                            xor r8d, r8d	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400226e	            0xeb12	                           jmp 0x4002282	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4002270	        0x4983c001	                               add r8, 1	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4002274	    0xf68700000000	                      test byte [rdi], 8	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x400227b	            0x750d	                           jne 0x400228a	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x400227d	      0x420fb63c03	              movzx edi, byte [rbx + r8]	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4002282	          0x4084ff	                           test dil, dil	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4002285	          0x4489c2	                            mov edx, r8d	       579	dir.c	FUNCTION_17	FOR_1
0x4002288	            0x75e6	                           jne 0x4002270	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x400228a	          0x4863ca	                         movsxd rcx, edx	       620	dir.c	FUNCTION_19	IF_5
0x400228d	          0x4839c1	                            cmp rcx, rax	       614	dir.c	FUNCTION_19	CALL_2
0x4002290	           0xf47d6	                          cmova edx, esi	       614	dir.c	FUNCTION_19	CALL_2
0x4002293	          0x418916	                    mov dword [r14], edx	       614	dir.c	FUNCTION_19	CALL_2
0x4002296	          0x803b2a	                    cmp byte [rbx], 0x2a	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4002299	            0x742d	                            je 0x40022c8	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x400229b	        0x48895d00	                    mov qword [rbp], rbx	       624	dir.c	FUNCTION_19
0x400229f	        0x41893424	                    mov dword [r12], esi	       625	dir.c	FUNCTION_19
0x40022a3	              0x5b	                                 pop rbx	       626	dir.c	FUNCTION_19
0x40022a4	              0x5d	                                 pop rbp	       626	dir.c	FUNCTION_19
0x40022a5	            0x415c	                                 pop r12	       626	dir.c	FUNCTION_19
0x40022a7	            0x415d	                                 pop r13	       626	dir.c	FUNCTION_19
0x40022a9	            0x415e	                                 pop r14	       626	dir.c	FUNCTION_19
0x40022ab	              0xc3	                                     ret	       626	dir.c	FUNCTION_19
0x40022ac	         0xf1f4000	                         nop dword [rax]	       626	dir.c	FUNCTION_19
0x40022b0	        0x418b5500	                    mov edx, dword [r13]	       626	dir.c	FUNCTION_19
0x40022b4	            0x31f6	                            xor esi, esi	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x40022b6	            0x31c0	                            xor eax, eax	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x40022b8	          0x83ca01	                               or edx, 1	       613	dir.c	FUNCTION_19	IF_4
0x40022bb	        0x41895500	                    mov dword [r13], edx	       613	dir.c	FUNCTION_19	IF_4
0x40022bf	           0xfb63b	                   movzx edi, byte [rbx]	       613	dir.c	FUNCTION_19	IF_4
0x40022c2	            0xeba7	                           jmp 0x400226b	       613	dir.c	FUNCTION_19	IF_4
0x40022c4	         0xf1f4000	                         nop dword [rax]	       613	dir.c	FUNCTION_19	IF_4
0x40022c8	            0x31c9	                            xor ecx, ecx	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40022ca	            0xeb11	                           jmp 0x40022dd	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40022cc	         0xf1f4000	                         nop dword [rax]	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40022d0	        0x4883c101	                              add rcx, 1	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40022d4	    0xf68000000000	                      test byte [rax], 8	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x40022db	            0x750c	                           jne 0x40022e9	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x40022dd	       0xfb6440b01	        movzx eax, byte [rbx + rcx + 1] 	       578	dir.c	FUNCTION_17	FOR_1
0x40022e2	          0x4863d1	                         movsxd rdx, ecx	       579	dir.c	FUNCTION_17	FOR_1
0x40022e5	            0x84c0	                             test al, al	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x40022e7	            0x75e7	                           jne 0x40022d0	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x40022e9	      0x807c130100	             cmp byte [rbx + rdx + 1], 0	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40022ee	            0x75ab	                           jne 0x400229b	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40022f0	      0x41834d0004	                       or dword [r13], 4	       623	dir.c	FUNCTION_19	IF_6
0x40022f5	            0xeba4	                           jmp 0x400229b	       623	dir.c	FUNCTION_19	IF_6
0x40022f7	    0x660f1f840000	                    nop word [rax + rax]	       623	dir.c	FUNCTION_19	IF_6
0x4002300	    0xc70210000000	                   mov dword [rdx], 0x10	       600	dir.c	FUNCTION_19	IF_1
0x4002306	        0x4883c301	                              add rbx, 1	       601	dir.c	FUNCTION_19	IF_1
0x400230a	      0xe917ffffff	                           jmp 0x4002226	       601	dir.c	FUNCTION_19	IF_1
0x400230f	              0x90	                                     nop	       601	dir.c	FUNCTION_19	IF_1
0x4002310	        0x418b5500	                    mov edx, dword [r13]	       606	dir.c	FUNCTION_19	IF_2
0x4002314	          0x83ca08	                               or edx, 8	       606	dir.c	FUNCTION_19	IF_2
0x4002317	          0x4885c9	                           test rcx, rcx	       608	dir.c	FUNCTION_19	FOR_1
0x400231a	        0x41895500	                    mov dword [r13], edx	       606	dir.c	FUNCTION_19	IF_2
0x400231e	            0x7494	                            je 0x40022b4	       608	dir.c	FUNCTION_19	FOR_1
0x4002320	          0x4889c8	                            mov rax, rcx	       608	dir.c	FUNCTION_19	FOR_1
0x4002323	      0xe91affffff	                           jmp 0x4002242	       608	dir.c	FUNCTION_19	FOR_1
0x4002328	        0x418b5500	                    mov edx, dword [r13]	       608	dir.c	FUNCTION_19	FOR_1
0x400232c	            0x89c6	                            mov esi, eax	       608	dir.c	FUNCTION_19	FOR_1
0x400232e	            0xeb88	                           jmp 0x40022b8	       608	dir.c	FUNCTION_19	FOR_1
last_exclude_matching	WHILE,0:CALL,4:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	56
0x40034d0	            0x4157	                                push r15	      1299	dir.c	FUNCTION_41
0x40034d2	            0x4156	                                push r14	      1299	dir.c	FUNCTION_41
0x40034d4	          0x4989cf	                            mov r15, rcx	      1299	dir.c	FUNCTION_41
0x40034d7	            0x4155	                                push r13	      1299	dir.c	FUNCTION_41
0x40034d9	            0x4154	                                push r12	      1299	dir.c	FUNCTION_41
0x40034db	          0x4989fc	                            mov r12, rdi	      1299	dir.c	FUNCTION_41
0x40034de	              0x55	                                push rbp	      1299	dir.c	FUNCTION_41
0x40034df	              0x53	                                push rbx	      1299	dir.c	FUNCTION_41
0x40034e0	          0x4889d7	                            mov rdi, rdx	      1300	dir.c	FUNCTION_41	CALL_1
0x40034e3	          0x4889d3	                            mov rbx, rdx	      1299	dir.c	FUNCTION_41
0x40034e6	          0x4989f5	                            mov r13, rsi	      1299	dir.c	FUNCTION_41
0x40034e9	        0x4883ec08	                              sub rsp, 8	      1299	dir.c	FUNCTION_41
0x40034ed	      0xe800000000	                          call 0x40034f2	      1300	dir.c	FUNCTION_41	CALL_1
0x40034f2	      0xbe2f000000	                           mov esi, 0x2f	      1301	dir.c	FUNCTION_41	CALL_2
0x40034f7	          0x4889df	                            mov rdi, rbx	      1301	dir.c	FUNCTION_41	CALL_2
0x40034fa	          0x4989c6	                            mov r14, rax	      1300	dir.c	FUNCTION_41	CALL_1
0x40034fd	      0xe800000000	                          call 0x4003502	      1301	dir.c	FUNCTION_41	CALL_2
0x4003502	          0x4885c0	                           test rax, rax	      1302	dir.c	FUNCTION_41
0x4003505	            0x7439	                            je 0x4003540	      1302	dir.c	FUNCTION_41
0x4003507	        0x488d6801	                      lea rbp, [rax + 1]	      1302	dir.c	FUNCTION_41
0x400350b	            0x89e9	                            mov ecx, ebp	      1302	dir.c	FUNCTION_41
0x400350d	            0x29d9	                            sub ecx, ebx	      1302	dir.c	FUNCTION_41
0x400350f	          0x4889da	                            mov rdx, rbx	      1304	dir.c	FUNCTION_41	CALL_3
0x4003512	          0x4c89ee	                            mov rsi, r13	      1304	dir.c	FUNCTION_41	CALL_3
0x4003515	          0x4c89e7	                            mov rdi, r12	      1304	dir.c	FUNCTION_41	CALL_3
0x4003518	      0xe823faffff	                   call sym.prep_exclude	      1304	dir.c	FUNCTION_41	CALL_3
0x400351d	      0x498b442468	            mov rax, qword [r12 + 0x68] 	      1306	dir.c	FUNCTION_41	IF_1
0x4003522	          0x4885c0	                           test rax, rax	      1306	dir.c	FUNCTION_41	IF_1
0x4003525	            0x7429	                            je 0x4003550	      1306	dir.c	FUNCTION_41	IF_1
0x4003527	        0x4883c408	                              add rsp, 8	      1311	dir.c	FUNCTION_41
0x400352b	              0x5b	                                 pop rbx	      1311	dir.c	FUNCTION_41
0x400352c	              0x5d	                                 pop rbp	      1311	dir.c	FUNCTION_41
0x400352d	            0x415c	                                 pop r12	      1311	dir.c	FUNCTION_41
0x400352f	            0x415d	                                 pop r13	      1311	dir.c	FUNCTION_41
0x4003531	            0x415e	                                 pop r14	      1311	dir.c	FUNCTION_41
0x4003533	            0x415f	                                 pop r15	      1311	dir.c	FUNCTION_41
0x4003535	              0xc3	                                     ret	      1311	dir.c	FUNCTION_41
0x4003536	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1311	dir.c	FUNCTION_41
0x4003540	          0x4889dd	                            mov rbp, rbx	      1311	dir.c	FUNCTION_41
0x4003543	            0x31c9	                            xor ecx, ecx	      1311	dir.c	FUNCTION_41
0x4003545	            0xebc8	                           jmp 0x400350f	      1311	dir.c	FUNCTION_41
0x4003547	    0x660f1f840000	                    nop word [rax + rax]	      1311	dir.c	FUNCTION_41
0x4003550	        0x4883c408	                              add rsp, 8	      1311	dir.c	FUNCTION_41
0x4003554	          0x4d89f9	                             mov r9, r15	      1309	dir.c	FUNCTION_41	CALL_4
0x4003557	          0x4989e8	                             mov r8, rbp	      1309	dir.c	FUNCTION_41	CALL_4
0x400355a	          0x4489f1	                           mov ecx, r14d	      1309	dir.c	FUNCTION_41	CALL_4
0x400355d	          0x4889da	                            mov rdx, rbx	      1309	dir.c	FUNCTION_41	CALL_4
0x4003560	          0x4c89ee	                            mov rsi, r13	      1309	dir.c	FUNCTION_41	CALL_4
0x4003563	              0x5b	                                 pop rbx	      1311	dir.c	FUNCTION_41
0x4003564	          0x4c89e7	                            mov rdi, r12	      1309	dir.c	FUNCTION_41	CALL_4
0x4003567	              0x5d	                                 pop rbp	      1311	dir.c	FUNCTION_41
0x4003568	            0x415c	                                 pop r12	      1311	dir.c	FUNCTION_41
0x400356a	            0x415d	                                 pop r13	      1311	dir.c	FUNCTION_41
0x400356c	            0x415e	                                 pop r14	      1311	dir.c	FUNCTION_41
0x400356e	            0x415f	                                 pop r15	      1311	dir.c	FUNCTION_41
0x4003570	      0xe90bf9ffff	jmp sym.last_exclude_matching_from_lists	      1309	dir.c	FUNCTION_41	CALL_4
untracked_cache_add_to_index	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	2
0x40058a0	      0xba01000000	                              mov edx, 1	      3011	dir.c	FUNCTION_99	CALL_1
0x40058a5	      0xe976ffffff	 jmp sym.untracked_cache_invalidate_path	      3011	dir.c	FUNCTION_99	CALL_1
simplify_away	WHILE,0:CALL,1:functions,0:FOR,1:SWITCH,0:DO,0:ELSE,0:IF,3	63
0x40011a0	          0x4885d2	                           test rdx, rdx	      1528	dir.c	FUNCTION_49	IF_1
0x40011a3	     0xf849f000000	                            je 0x4001248	      1528	dir.c	FUNCTION_49	IF_1
0x40011a9	            0x8b02	                    mov eax, dword [rdx]	      1528	dir.c	FUNCTION_49	IF_1
0x40011ab	            0x85c0	                           test eax, eax	      1528	dir.c	FUNCTION_49	IF_1
0x40011ad	            0x747e	                            je 0x400122d	      1528	dir.c	FUNCTION_49	IF_1
0x40011af	            0x4155	                                push r13	      1525	dir.c	FUNCTION_49
0x40011b1	            0x4154	                                push r12	      1525	dir.c	FUNCTION_49
0x40011b3	              0x55	                                push rbp	      1525	dir.c	FUNCTION_49
0x40011b4	              0x53	                                push rbx	      1525	dir.c	FUNCTION_49
0x40011b5	          0x4889fd	                            mov rbp, rdi	      1525	dir.c	FUNCTION_49
0x40011b8	          0x4863de	                         movsxd rbx, esi	      1525	dir.c	FUNCTION_49
0x40011bb	        0x4883ec08	                              sub rsp, 8	      1525	dir.c	FUNCTION_49
0x40011bf	          0x8b4a08	                mov ecx, dword [rdx + 8]	      1531	dir.c	FUNCTION_49
0x40011c2	          0x83e180	                     and ecx, 0xffffff80	      1531	dir.c	FUNCTION_49
0x40011c5	     0xf8580000000	                           jne 0x400124b	      1531	dir.c	FUNCTION_49
0x40011cb	            0x85c0	                           test eax, eax	      1540	dir.c	FUNCTION_49	FOR_1
0x40011cd	            0x7e61	                           jle 0x4001230	      1540	dir.c	FUNCTION_49	FOR_1
0x40011cf	          0x83e801	                              sub eax, 1	      1540	dir.c	FUNCTION_49	FOR_1
0x40011d2	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1540	dir.c	FUNCTION_49	FOR_1
0x40011d6	    0x488d0cc50000	                        lea rcx, [rax*8]	      1540	dir.c	FUNCTION_49	FOR_1
0x40011de	        0x48c1e006	                              shl rax, 6	      1540	dir.c	FUNCTION_49	FOR_1
0x40011e2	          0x4829c8	                            sub rax, rcx	      1540	dir.c	FUNCTION_49	FOR_1
0x40011e5	        0x4c8d6a1c	                   lea r13, [rdx + 0x1c]	      1540	dir.c	FUNCTION_49	FOR_1
0x40011e9	      0x4c8d640254	            lea r12, [rdx + rax + 0x54] 	      1540	dir.c	FUNCTION_49	FOR_1
0x40011ee	            0xeb12	                           jmp 0x4001202	      1540	dir.c	FUNCTION_49	FOR_1
0x40011f0	      0xe800000000	                          call 0x40011f5	        95	pathspec.h	FUNCTION_147	CALL_2
0x40011f5	            0x85c0	                           test eax, eax	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x40011f7	            0x742a	                            je 0x4001223	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x40011f9	        0x4983c538	                           add r13, 0x38	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x40011fd	          0x4d39ec	                            cmp r12, r13	      1540	dir.c	FUNCTION_49	FOR_1
0x4001200	            0x742e	                            je 0x4001230	      1540	dir.c	FUNCTION_49	FOR_1
0x4001202	        0x49635500	                 movsxd rdx, dword [r13]	      1542	dir.c	FUNCTION_49	FOR_1
0x4001206	        0x498b7de4	             mov rdi, qword [r13 - 0x1c]	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x400120a	          0x4889ee	                            mov rsi, rbp	        93	pathspec.h	FUNCTION_147	CALL_1
0x400120d	            0x39da	                            cmp edx, ebx	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x400120f	        0x480f4fd3	                          cmovg rdx, rbx	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4001213	      0x41f645f410	            test byte [r13 - 0xc], 0x10 	        92	pathspec.h	FUNCTION_147	IF_1
0x4001218	            0x74d6	                            je 0x40011f0	        92	pathspec.h	FUNCTION_147	IF_1
0x400121a	      0xe800000000	                          call 0x400121f	        93	pathspec.h	FUNCTION_147	CALL_1
0x400121f	            0x85c0	                           test eax, eax	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4001221	            0x75d6	                           jne 0x40011f9	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4001223	        0x4883c408	                              add rsp, 8	      1551	dir.c	FUNCTION_49
0x4001227	              0x5b	                                 pop rbx	      1551	dir.c	FUNCTION_49
0x4001228	              0x5d	                                 pop rbp	      1551	dir.c	FUNCTION_49
0x4001229	            0x415c	                                 pop r12	      1551	dir.c	FUNCTION_49
0x400122b	            0x415d	                                 pop r13	      1551	dir.c	FUNCTION_49
0x400122d	            0xf3c3	                                     ret	      1551	dir.c	FUNCTION_49
0x400122f	              0x90	                                     nop	      1551	dir.c	FUNCTION_49
0x4001230	        0x4883c408	                              add rsp, 8	      1551	dir.c	FUNCTION_49
0x4001234	      0xb801000000	                              mov eax, 1	      1550	dir.c	FUNCTION_49
0x4001239	              0x5b	                                 pop rbx	      1551	dir.c	FUNCTION_49
0x400123a	              0x5d	                                 pop rbp	      1551	dir.c	FUNCTION_49
0x400123b	            0x415c	                                 pop r12	      1551	dir.c	FUNCTION_49
0x400123d	            0x415d	                                 pop r13	      1551	dir.c	FUNCTION_49
0x400123f	            0xebec	                           jmp 0x400122d	      1551	dir.c	FUNCTION_49
0x4001241	     0xf1f80000000	                         nop dword [rax]	      1551	dir.c	FUNCTION_49
0x4001248	            0x31c0	                            xor eax, eax	      1529	dir.c	FUNCTION_49	IF_1
0x400124a	              0xc3	                                     ret	      1529	dir.c	FUNCTION_49	IF_1
0x400124b	      0xba02060000	                          mov edx, 0x602	      1531	dir.c	FUNCTION_49
0x4001250	      0xbe00000000	                              mov esi, 0	      1531	dir.c	FUNCTION_49
0x4001255	      0xbf00000000	                              mov edi, 0	      1531	dir.c	FUNCTION_49
0x400125a	            0x31c0	                            xor eax, eax	      1531	dir.c	FUNCTION_49
0x400125c	      0xe800000000	                          call 0x4001261	      1531	dir.c	FUNCTION_49
match_pathname	WHILE,0:CALL,3:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,6	89
0x4002bc0	            0x4157	                                push r15	       989	dir.c	FUNCTION_36
0x4002bc2	            0x4156	                                push r14	       989	dir.c	FUNCTION_36
0x4002bc4	          0x4989ff	                            mov r15, rdi	       989	dir.c	FUNCTION_36
0x4002bc7	            0x4155	                                push r13	       989	dir.c	FUNCTION_36
0x4002bc9	            0x4154	                                push r12	       989	dir.c	FUNCTION_36
0x4002bcb	          0x4589ce	                           mov r14d, r9d	       989	dir.c	FUNCTION_36
0x4002bce	              0x55	                                push rbp	       989	dir.c	FUNCTION_36
0x4002bcf	              0x53	                                push rbx	       989	dir.c	FUNCTION_36
0x4002bd0	            0x89f5	                            mov ebp, esi	       989	dir.c	FUNCTION_36
0x4002bd2	            0x89cb	                            mov ebx, ecx	       989	dir.c	FUNCTION_36
0x4002bd4	          0x4889d6	                            mov rsi, rdx	       989	dir.c	FUNCTION_36
0x4002bd7	          0x4d89c4	                             mov r12, r8	       989	dir.c	FUNCTION_36
0x4002bda	        0x4883ec08	                              sub rsp, 8	       989	dir.c	FUNCTION_36
0x4002bde	        0x4180382f	                     cmp byte [r8], 0x2f	       997	dir.c	FUNCTION_36	IF_1
0x4002be2	     0xf84b0000000	                            je 0x4002c98	       997	dir.c	FUNCTION_36	IF_1
0x4002be8	          0x4531ed	                          xor r13d, r13d	      1010	dir.c	FUNCTION_36	IF_2
0x4002beb	            0x39eb	                            cmp ebx, ebp	      1007	dir.c	FUNCTION_36	IF_2
0x4002bed	            0x7d12	                           jge 0x4002c01	      1007	dir.c	FUNCTION_36	IF_2
0x4002bef	            0x85db	                           test ebx, ebx	      1007	dir.c	FUNCTION_36	IF_2
0x4002bf1	            0x7425	                            je 0x4002c18	      1007	dir.c	FUNCTION_36	IF_2
0x4002bf3	          0x4863d3	                         movsxd rdx, ebx	      1008	dir.c	FUNCTION_36	IF_2
0x4002bf6	      0x41803c172f	              cmp byte [r15 + rdx], 0x2f	      1008	dir.c	FUNCTION_36	IF_2
0x4002bfb	     0xf84af000000	                            je 0x4002cb0	      1008	dir.c	FUNCTION_36	IF_2
0x4002c01	        0x4883c408	                              add rsp, 8	      1042	dir.c	FUNCTION_36
0x4002c05	          0x4489e8	                           mov eax, r13d	      1042	dir.c	FUNCTION_36
0x4002c08	              0x5b	                                 pop rbx	      1042	dir.c	FUNCTION_36
0x4002c09	              0x5d	                                 pop rbp	      1042	dir.c	FUNCTION_36
0x4002c0a	            0x415c	                                 pop r12	      1042	dir.c	FUNCTION_36
0x4002c0c	            0x415d	                                 pop r13	      1042	dir.c	FUNCTION_36
0x4002c0e	            0x415e	                                 pop r14	      1042	dir.c	FUNCTION_36
0x4002c10	            0x415f	                                 pop r15	      1042	dir.c	FUNCTION_36
0x4002c12	              0xc3	                                     ret	      1042	dir.c	FUNCTION_36
0x4002c13	       0xf1f440000	                   nop dword [rax + rax]	      1042	dir.c	FUNCTION_36
0x4002c18	            0x31d2	                            xor edx, edx	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x4002c1a	          0x4c89ff	                            mov rdi, r15	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x4002c1d	          0x4189dd	                           mov r13d, ebx	      1010	dir.c	FUNCTION_36	IF_2
0x4002c20	      0xe800000000	                          call 0x4002c25	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x4002c25	            0x85c0	                           test eax, eax	      1008	dir.c	FUNCTION_36	IF_2
0x4002c27	            0x75d8	                           jne 0x4002c01	      1008	dir.c	FUNCTION_36	IF_2
0x4002c29	            0x31c0	                            xor eax, eax	      1008	dir.c	FUNCTION_36	IF_2
0x4002c2b	          0x4901c7	                            add r15, rax	      1013	dir.c	FUNCTION_36
0x4002c2e	          0x4585f6	                         test r14d, r14d	      1015	dir.c	FUNCTION_36	IF_3
0x4002c31	            0x7439	                            je 0x4002c6c	      1015	dir.c	FUNCTION_36	IF_3
0x4002c33	          0x4531ed	                          xor r13d, r13d	      1010	dir.c	FUNCTION_36	IF_2
0x4002c36	          0x4139ee	                           cmp r14d, ebp	      1020	dir.c	FUNCTION_36	IF_3	IF_4
0x4002c39	            0x7fc6	                            jg 0x4002c01	      1020	dir.c	FUNCTION_36	IF_3	IF_4
0x4002c3b	          0x4963de	                        movsxd rbx, r14d	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002c3e	          0x4c89fe	                            mov rsi, r15	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002c41	          0x4c89e7	                            mov rdi, r12	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002c44	          0x4889da	                            mov rdx, rbx	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002c47	      0xe800000000	                          call 0x4002c4c	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002c4c	            0x85c0	                           test eax, eax	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002c4e	            0x75b1	                           jne 0x4002c01	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002c50	          0x4429f5	                           sub ebp, r14d	      1028	dir.c	FUNCTION_36	IF_3
0x4002c53	      0x4429742440	            sub dword [rsp + 0x40], r14d	      1026	dir.c	FUNCTION_36	IF_3
0x4002c58	    0x41bd01000000	                             mov r13d, 1	      1036	dir.c	FUNCTION_36	IF_3	IF_6
0x4002c5e	            0x89e8	                            mov eax, ebp	      1035	dir.c	FUNCTION_36	IF_3	IF_6
0x4002c60	         0xb442440	              or eax, dword [rsp + 0x40]	      1035	dir.c	FUNCTION_36	IF_3	IF_6
0x4002c64	            0x749b	                            je 0x4002c01	      1035	dir.c	FUNCTION_36	IF_3	IF_6
0x4002c66	          0x4901dc	                            add r12, rbx	      1025	dir.c	FUNCTION_36	IF_3
0x4002c69	          0x4901df	                            add r15, rbx	      1027	dir.c	FUNCTION_36	IF_3
0x4002c6c	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c70	    0x41b802000000	                              mov r8d, 2	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c76	            0x89e9	                            mov ecx, ebp	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c78	          0x4c89fa	                            mov rdx, r15	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c7b	          0x4c89e7	                            mov rdi, r12	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c7e	          0x4531ed	                          xor r13d, r13d	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c81	      0xe8cad7ffff	              call sym.fnmatch_icase_mem	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c86	            0x85c0	                           test eax, eax	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c88	        0x410f94c5	                               sete r13b	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c8c	      0xe970ffffff	                           jmp 0x4002c01	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c91	     0xf1f80000000	                         nop dword [rax]	      1039	dir.c	FUNCTION_36	CALL_3
0x4002c98	        0x4983c401	                              add r12, 1	       998	dir.c	FUNCTION_36	IF_1
0x4002c9c	      0x836c244001	               sub dword [rsp + 0x40], 1	       999	dir.c	FUNCTION_36	IF_1
0x4002ca1	        0x4183ee01	                             sub r14d, 1	      1000	dir.c	FUNCTION_36	IF_1
0x4002ca5	      0xe93effffff	                           jmp 0x4002be8	      1000	dir.c	FUNCTION_36	IF_1
0x4002caa	    0x660f1f440000	                    nop word [rax + rax]	      1000	dir.c	FUNCTION_36	IF_1
0x4002cb0	          0x4c89ff	                            mov rdi, r15	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x4002cb3	      0xe800000000	                          call 0x4002cb8	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x4002cb8	            0x85c0	                           test eax, eax	      1008	dir.c	FUNCTION_36	IF_2
0x4002cba	     0xf8541ffffff	                           jne 0x4002c01	      1008	dir.c	FUNCTION_36	IF_2
0x4002cc0	            0x89ea	                            mov edx, ebp	      1012	dir.c	FUNCTION_36
0x4002cc2	          0x4863c5	                         movsxd rax, ebp	      1012	dir.c	FUNCTION_36
0x4002cc5	            0x29da	                            sub edx, ebx	      1012	dir.c	FUNCTION_36
0x4002cc7	          0x83ea01	                              sub edx, 1	      1012	dir.c	FUNCTION_36
0x4002cca	          0x4863ca	                         movsxd rcx, edx	      1012	dir.c	FUNCTION_36
0x4002ccd	            0x89d5	                            mov ebp, edx	      1012	dir.c	FUNCTION_36
0x4002ccf	          0x4829c8	                            sub rax, rcx	      1012	dir.c	FUNCTION_36
0x4002cd2	      0xe954ffffff	                           jmp 0x4002c2b	      1012	dir.c	FUNCTION_36
is_empty_dir	WHILE,1:CALL,4:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,2	43
0x4004e50	              0x55	                                push rbp	      2396	dir.c	FUNCTION_77
0x4004e51	              0x53	                                push rbx	      2396	dir.c	FUNCTION_77
0x4004e52	        0x4883ec08	                              sub rsp, 8	      2396	dir.c	FUNCTION_77
0x4004e56	      0xe800000000	                          call 0x4004e5b	      2397	dir.c	FUNCTION_77	CALL_1
0x4004e5b	          0x4885c0	                           test rax, rax	      2401	dir.c	FUNCTION_77	IF_1
0x4004e5e	          0x4889c3	                            mov rbx, rax	      2397	dir.c	FUNCTION_77	CALL_1
0x4004e61	            0x745d	                            je 0x4004ec0	      2401	dir.c	FUNCTION_77	IF_1
0x4004e63	       0xf1f440000	                   nop dword [rax + rax]	      2401	dir.c	FUNCTION_77	IF_1
0x4004e68	          0x4889df	                            mov rdi, rbx	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004e6b	      0xe800000000	                          call 0x4004e70	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004e70	          0x4885c0	                           test rax, rax	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004e73	            0x7443	                            je 0x4004eb8	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004e75	        0x8078132e	            cmp byte [rax + 0x13], 0x2e 	       277	dir.h	FUNCTION_176
0x4004e79	            0x750d	                           jne 0x4004e88	       277	dir.h	FUNCTION_176
0x4004e7b	         0xfb65014	           movzx edx, byte [rax + 0x14] 	       278	dir.h	FUNCTION_176
0x4004e7f	            0x84d2	                             test dl, dl	       277	dir.h	FUNCTION_176
0x4004e81	            0x74e5	                            je 0x4004e68	       277	dir.h	FUNCTION_176
0x4004e83	          0x80fa2e	                            cmp dl, 0x2e	       278	dir.h	FUNCTION_176
0x4004e86	            0x7418	                            je 0x4004ea0	       278	dir.h	FUNCTION_176
0x4004e88	            0x31ed	                            xor ebp, ebp	      2406	dir.c	FUNCTION_77	WHILE_1	IF_2
0x4004e8a	          0x4889df	                            mov rdi, rbx	      2410	dir.c	FUNCTION_77	CALL_4
0x4004e8d	      0xe800000000	                          call 0x4004e92	      2410	dir.c	FUNCTION_77	CALL_4
0x4004e92	        0x4883c408	                              add rsp, 8	      2412	dir.c	FUNCTION_77
0x4004e96	            0x89e8	                            mov eax, ebp	      2411	dir.c	FUNCTION_77
0x4004e98	              0x5b	                                 pop rbx	      2412	dir.c	FUNCTION_77
0x4004e99	              0x5d	                                 pop rbp	      2412	dir.c	FUNCTION_77
0x4004e9a	              0xc3	                                     ret	      2412	dir.c	FUNCTION_77
0x4004e9b	       0xf1f440000	                   nop dword [rax + rax]	      2412	dir.c	FUNCTION_77
0x4004ea0	        0x80781500	                cmp byte [rax + 0x15], 0	       279	dir.h	FUNCTION_176
0x4004ea4	            0x75e2	                           jne 0x4004e88	       279	dir.h	FUNCTION_176
0x4004ea6	          0x4889df	                            mov rdi, rbx	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004ea9	      0xe800000000	                          call 0x4004eae	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004eae	          0x4885c0	                           test rax, rax	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004eb1	            0x75c2	                           jne 0x4004e75	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004eb3	       0xf1f440000	                   nop dword [rax + rax]	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004eb8	      0xbd01000000	                              mov ebp, 1	      2399	dir.c	FUNCTION_77
0x4004ebd	            0xebcb	                           jmp 0x4004e8a	      2399	dir.c	FUNCTION_77
0x4004ebf	              0x90	                                     nop	      2399	dir.c	FUNCTION_77
0x4004ec0	        0x4883c408	                              add rsp, 8	      2412	dir.c	FUNCTION_77
0x4004ec4	            0x31c0	                            xor eax, eax	      2402	dir.c	FUNCTION_77	IF_1
0x4004ec6	              0x5b	                                 pop rbx	      2412	dir.c	FUNCTION_77
0x4004ec7	              0x5d	                                 pop rbp	      2412	dir.c	FUNCTION_77
0x4004ec8	              0xc3	                                     ret	      2412	dir.c	FUNCTION_77
add_excludes_from_file	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	3
0x4002b10	    0x838708010000	              add dword [rdi + 0x108], 1	       957	dir.c	FUNCTION_34
0x4002b17	            0x31d2	                            xor edx, edx	       958	dir.c	FUNCTION_34	CALL_1
0x4002b19	            0xeb85	        jmp sym.add_excludes_from_file_1	       958	dir.c	FUNCTION_34	CALL_1
stat_data_from_disk	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	36
0x4000250	          0x488b06	                    mov rax, qword [rsi]	        53	string3.h	FUNCTION_103	CALL_3
0x4000253	          0x488907	                    mov qword [rdi], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000256	        0x488b4608	                mov rax, qword [rsi + 8]	        53	string3.h	FUNCTION_103	CALL_3
0x400025a	            0x8b17	                    mov edx, dword [rdi]	        44	bswap.h	FUNCTION_117	CALL_3
0x400025c	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_117	CALL_3
0x400025e	        0x48894708	                mov qword [rdi + 8], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000262	        0x488b4610	            mov rax, qword [rsi + 0x10] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000266	        0x48894710	             mov qword [rdi + 0x10], rax	        53	string3.h	FUNCTION_103	CALL_3
0x400026a	        0x488b4618	            mov rax, qword [rsi + 0x18] 	        53	string3.h	FUNCTION_103	CALL_3
0x400026e	        0x48894718	             mov qword [rdi + 0x18], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000272	          0x8b4620	            mov eax, dword [rsi + 0x20] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000275	            0x8917	                    mov dword [rdi], edx	      2741	dir.c	FUNCTION_88
0x4000277	          0x8b5704	                mov edx, dword [rdi + 4]	        44	bswap.h	FUNCTION_117	CALL_3
0x400027a	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x400027c	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_117	CALL_3
0x400027e	          0x894720	             mov dword [rdi + 0x20], eax	      2749	dir.c	FUNCTION_88
0x4000281	          0x895704	                mov dword [rdi + 4], edx	      2742	dir.c	FUNCTION_88
0x4000284	          0x8b5708	                mov edx, dword [rdi + 8]	        44	bswap.h	FUNCTION_117	CALL_3
0x4000287	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_117	CALL_3
0x4000289	          0x895708	                mov dword [rdi + 8], edx	      2743	dir.c	FUNCTION_88
0x400028c	          0x8b570c	              mov edx, dword [rdi + 0xc]	        44	bswap.h	FUNCTION_117	CALL_3
0x400028f	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_117	CALL_3
0x4000291	          0x89570c	              mov dword [rdi + 0xc], edx	      2744	dir.c	FUNCTION_88
0x4000294	          0x8b5710	            mov edx, dword [rdi + 0x10] 	        44	bswap.h	FUNCTION_117	CALL_3
0x4000297	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_117	CALL_3
0x4000299	          0x895710	             mov dword [rdi + 0x10], edx	      2745	dir.c	FUNCTION_88
0x400029c	          0x8b5714	            mov edx, dword [rdi + 0x14] 	        44	bswap.h	FUNCTION_117	CALL_3
0x400029f	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_117	CALL_3
0x40002a1	          0x895714	             mov dword [rdi + 0x14], edx	      2746	dir.c	FUNCTION_88
0x40002a4	          0x8b5718	            mov edx, dword [rdi + 0x18] 	        44	bswap.h	FUNCTION_117	CALL_3
0x40002a7	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_117	CALL_3
0x40002a9	          0x895718	             mov dword [rdi + 0x18], edx	      2747	dir.c	FUNCTION_88
0x40002ac	          0x8b571c	            mov edx, dword [rdi + 0x1c] 	        44	bswap.h	FUNCTION_117	CALL_3
0x40002af	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_117	CALL_3
0x40002b1	          0x89571c	             mov dword [rdi + 0x1c], edx	      2748	dir.c	FUNCTION_88
0x40002b4	              0xc3	                                     ret	      2749	dir.c	FUNCTION_88
fill_directory	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	30
0x4004c30	            0x4155	                                push r13	       193	dir.c	FUNCTION_8
0x4004c32	            0x4154	                                push r12	       193	dir.c	FUNCTION_8
0x4004c34	          0x4989f5	                            mov r13, rsi	       193	dir.c	FUNCTION_8
0x4004c37	              0x55	                                push rbp	       193	dir.c	FUNCTION_8
0x4004c38	              0x53	                                push rbx	       193	dir.c	FUNCTION_8
0x4004c39	          0x4889d3	                            mov rbx, rdx	       193	dir.c	FUNCTION_8
0x4004c3c	          0x4989fc	                            mov r12, rdi	       193	dir.c	FUNCTION_8
0x4004c3f	        0x4883c210	                           add rdx, 0x10	       193	dir.c	FUNCTION_8
0x4004c43	        0x4883ec08	                              sub rsp, 8	       193	dir.c	FUNCTION_8
0x4004c47	          0x8b7308	                mov esi, dword [rbx + 8]	       201	dir.c	FUNCTION_8	CALL_1
0x4004c4a	            0x8b3b	                    mov edi, dword [rbx]	       201	dir.c	FUNCTION_8	CALL_1
0x4004c4c	      0xe82fbcffff	       call sym.common_prefix_len.isra.6	       201	dir.c	FUNCTION_8	CALL_1
0x4004c51	          0x4885c0	                           test rax, rax	       202	dir.c	FUNCTION_8
0x4004c54	          0x4889c5	                            mov rbp, rax	       201	dir.c	FUNCTION_8	CALL_1
0x4004c57	      0xba00000000	                              mov edx, 0	       201	dir.c	FUNCTION_8	CALL_1
0x4004c5c	            0x7407	                            je 0x4004c65	       202	dir.c	FUNCTION_8
0x4004c5e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       202	dir.c	FUNCTION_8
0x4004c62	          0x488b10	                    mov rdx, qword [rax]	       202	dir.c	FUNCTION_8
0x4004c65	          0x4989d8	                             mov r8, rbx	       205	dir.c	FUNCTION_8	CALL_2
0x4004c68	            0x89e9	                            mov ecx, ebp	       205	dir.c	FUNCTION_8	CALL_2
0x4004c6a	          0x4c89ee	                            mov rsi, r13	       205	dir.c	FUNCTION_8	CALL_2
0x4004c6d	          0x4c89e7	                            mov rdi, r12	       205	dir.c	FUNCTION_8	CALL_2
0x4004c70	      0xe800000000	                          call 0x4004c75	       205	dir.c	FUNCTION_8	CALL_2
0x4004c75	        0x4883c408	                              add rsp, 8	       208	dir.c	FUNCTION_8
0x4004c79	            0x89e8	                            mov eax, ebp	       208	dir.c	FUNCTION_8
0x4004c7b	              0x5b	                                 pop rbx	       208	dir.c	FUNCTION_8
0x4004c7c	              0x5d	                                 pop rbp	       208	dir.c	FUNCTION_8
0x4004c7d	            0x415c	                                 pop r12	       208	dir.c	FUNCTION_8
0x4004c7f	            0x415d	                                 pop r13	       208	dir.c	FUNCTION_8
0x4004c81	              0xc3	                                     ret	       208	dir.c	FUNCTION_8
git_fnmatch	WHILE,0:CALL,6:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,1:IF,4	84
0x4001810	            0x4155	                                push r13	        80	dir.c	FUNCTION_4
0x4001812	            0x4154	                                push r12	        80	dir.c	FUNCTION_4
0x4001814	          0x4989fd	                            mov r13, rdi	        80	dir.c	FUNCTION_4
0x4001817	              0x55	                                push rbp	        80	dir.c	FUNCTION_4
0x4001818	              0x53	                                push rbx	        80	dir.c	FUNCTION_4
0x4001819	          0x4989f4	                            mov r12, rsi	        80	dir.c	FUNCTION_4
0x400181c	          0x4889d5	                            mov rbp, rdx	        80	dir.c	FUNCTION_4
0x400181f	        0x4883ec08	                              sub rsp, 8	        80	dir.c	FUNCTION_4
0x4001823	            0x85c9	                           test ecx, ecx	        81	dir.c	FUNCTION_4	IF_1
0x4001825	            0x7e2a	                           jle 0x4001851	        81	dir.c	FUNCTION_4	IF_1
0x4001827	      0x41f6451010	           test byte [r13 + 0x10], 0x10 	        92	pathspec.h	FUNCTION_147	IF_1
0x400182c	          0x4863d9	                         movsxd rbx, ecx	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x400182f	          0x4889ee	                            mov rsi, rbp	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001832	          0x4889da	                            mov rdx, rbx	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001835	          0x4c89e7	                            mov rdi, r12	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001838	     0xf85a2000000	                           jne 0x40018e0	        92	pathspec.h	FUNCTION_147	IF_1
0x400183e	      0xe800000000	                          call 0x4001843	        95	pathspec.h	FUNCTION_147	CALL_2
0x4001843	            0x85c0	                           test eax, eax	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4001845	     0xf85a2000000	                           jne 0x40018ed	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x400184b	          0x4901dc	                            add r12, rbx	        84	dir.c	FUNCTION_4	IF_1
0x400184e	          0x4801dd	                            add rbp, rbx	        85	dir.c	FUNCTION_4	IF_1
0x4001851	      0x41f6452001	               test byte [r13 + 0x20], 1	        87	dir.c	FUNCTION_4	IF_3
0x4001856	            0x7530	                           jne 0x4001888	        87	dir.c	FUNCTION_4	IF_3
0x4001858	        0x418b5510	            mov edx, dword [r13 + 0x10] 	        94	dir.c	FUNCTION_4	IF_4
0x400185c	          0xf6c208	                              test dl, 8	        94	dir.c	FUNCTION_4	IF_4
0x400185f	     0xf84ab000000	                            je 0x4001910	        94	dir.c	FUNCTION_4	IF_4
0x4001865	          0x83e210	                           and edx, 0x10	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4001868	          0x83fa01	                              cmp edx, 1	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400186b	            0x19d2	                            sbb edx, edx	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400186d	          0x83c203	                              add edx, 3	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4001870	        0x4883c408	                              add rsp, 8	       102	dir.c	FUNCTION_4
0x4001874	          0x4889ee	                            mov rsi, rbp	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4001877	          0x4c89e7	                            mov rdi, r12	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x400187a	              0x5b	                                 pop rbx	       102	dir.c	FUNCTION_4
0x400187b	              0x5d	                                 pop rbp	       102	dir.c	FUNCTION_4
0x400187c	            0x415c	                                 pop r12	       102	dir.c	FUNCTION_4
0x400187e	            0x415d	                                 pop r13	       102	dir.c	FUNCTION_4
0x4001880	      0xe900000000	                           jmp 0x4001885	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4001885	           0xf1f00	                         nop dword [rax]	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4001888	        0x4983c401	                              add r12, 1	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x400188c	          0x4c89e7	                            mov rdi, r12	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x400188f	      0xe800000000	                          call 0x4001894	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x4001894	          0x4889ef	                            mov rdi, rbp	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x4001897	          0x4889c3	                            mov rbx, rax	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x400189a	      0xe800000000	                          call 0x400189f	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x400189f	          0x4889c2	                            mov rdx, rax	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x40018a2	      0xb801000000	                              mov eax, 1	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x40018a7	            0x39d3	                            cmp ebx, edx	        90	dir.c	FUNCTION_4	IF_3
0x40018a9	            0x7f25	                            jg 0x40018d0	        90	dir.c	FUNCTION_4	IF_3
0x40018ab	          0x4863f2	                         movsxd rsi, edx	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40018ae	          0x4863db	                         movsxd rbx, ebx	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40018b1	          0x4c89e7	                            mov rdi, r12	       102	pathspec.h	FUNCTION_148	CALL_1
0x40018b4	          0x4829de	                            sub rsi, rbx	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40018b7	      0x41f6451010	           test byte [r13 + 0x10], 0x10 	       101	pathspec.h	FUNCTION_148	IF_1
0x40018bc	      0x488d743500	                    lea rsi, [rbp + rsi]	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40018c1	            0x753d	                           jne 0x4001900	       101	pathspec.h	FUNCTION_148	IF_1
0x40018c3	      0xe800000000	                          call 0x40018c8	       104	pathspec.h	FUNCTION_148	CALL_2
0x40018c8	            0x85c0	                           test eax, eax	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x40018ca	           0xf95c0	                                setne al	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x40018cd	           0xfb6c0	                           movzx eax, al	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x40018d0	        0x4883c408	                              add rsp, 8	       102	dir.c	FUNCTION_4
0x40018d4	              0x5b	                                 pop rbx	       102	dir.c	FUNCTION_4
0x40018d5	              0x5d	                                 pop rbp	       102	dir.c	FUNCTION_4
0x40018d6	            0x415c	                                 pop r12	       102	dir.c	FUNCTION_4
0x40018d8	            0x415d	                                 pop r13	       102	dir.c	FUNCTION_4
0x40018da	              0xc3	                                     ret	       102	dir.c	FUNCTION_4
0x40018db	       0xf1f440000	                   nop dword [rax + rax]	       102	dir.c	FUNCTION_4
0x40018e0	      0xe800000000	                          call 0x40018e5	        93	pathspec.h	FUNCTION_147	CALL_1
0x40018e5	            0x85c0	                           test eax, eax	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40018e7	     0xf845effffff	                            je 0x400184b	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40018ed	        0x4883c408	                              add rsp, 8	       102	dir.c	FUNCTION_4
0x40018f1	      0xb801000000	                              mov eax, 1	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x40018f6	              0x5b	                                 pop rbx	       102	dir.c	FUNCTION_4
0x40018f7	              0x5d	                                 pop rbp	       102	dir.c	FUNCTION_4
0x40018f8	            0x415c	                                 pop r12	       102	dir.c	FUNCTION_4
0x40018fa	            0x415d	                                 pop r13	       102	dir.c	FUNCTION_4
0x40018fc	              0xc3	                                     ret	       102	dir.c	FUNCTION_4
0x40018fd	           0xf1f00	                         nop dword [rax]	       102	dir.c	FUNCTION_4
0x4001900	      0xe800000000	                          call 0x4001905	       102	pathspec.h	FUNCTION_148	CALL_1
0x4001905	            0xebc1	                           jmp 0x40018c8	       102	pathspec.h	FUNCTION_148	CALL_1
0x4001907	    0x660f1f840000	                    nop word [rax + rax]	       102	pathspec.h	FUNCTION_148	CALL_1
0x4001910	          0xc1ea04	                              shr edx, 4	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4001913	          0x83e201	                              and edx, 1	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4001916	      0xe955ffffff	                           jmp 0x4001870	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
write_one_dir	WHILE,0:CALL,16:functions,0:FOR,3:SWITCH,0:DO,0:ELSE,0:IF,6	149
0x4000660	            0x4157	                                push r15	      2603	dir.c	FUNCTION_84
0x4000662	            0x4156	                                push r14	      2603	dir.c	FUNCTION_84
0x4000664	            0x4155	                                push r13	      2603	dir.c	FUNCTION_84
0x4000666	            0x4154	                                push r12	      2603	dir.c	FUNCTION_84
0x4000668	          0x4989f4	                            mov r12, rsi	      2603	dir.c	FUNCTION_84
0x400066b	              0x55	                                push rbp	      2603	dir.c	FUNCTION_84
0x400066c	              0x53	                                push rbx	      2603	dir.c	FUNCTION_84
0x400066d	        0x488d6e20	                   lea rbp, [rsi + 0x20]	      2605	dir.c	FUNCTION_84
0x4000671	          0x4889fb	                            mov rbx, rdi	      2603	dir.c	FUNCTION_84
0x4000674	        0x4883ec58	                           sub rsp, 0x58	      2603	dir.c	FUNCTION_84
0x4000678	          0x448b2e	                   mov r13d, dword [rsi]	      2608	dir.c	FUNCTION_84
0x400067b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2603	dir.c	FUNCTION_84
0x4000684	      0x4889442448	             mov qword [rsp + 0x48], rax	      2603	dir.c	FUNCTION_84
0x4000689	            0x31c0	                            xor eax, eax	      2603	dir.c	FUNCTION_84
0x400068b	        0x418d4501	                      lea eax, [r13 + 1]	      2608	dir.c	FUNCTION_84
0x400068f	            0x8906	                    mov dword [rsi], eax	      2608	dir.c	FUNCTION_84
0x4000691	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	      2614	dir.c	FUNCTION_84	IF_1
0x4000695	            0xa802	                              test al, 2	      2614	dir.c	FUNCTION_84	IF_1
0x4000697	     0xf8563010000	                           jne 0x4000800	      2614	dir.c	FUNCTION_84	IF_1
0x400069d	          0x83e0fe	                     and eax, 0xfffffffe	      2616	dir.c	FUNCTION_84	IF_1
0x40006a0	    0xc74740000000	               mov dword [rdi + 0x40], 0	      2615	dir.c	FUNCTION_84	IF_1
0x40006a7	          0x884744	               mov byte [rdi + 0x44], al	      2616	dir.c	FUNCTION_84	IF_1
0x40006aa	            0xa802	                              test al, 2	      2621	dir.c	FUNCTION_84	IF_3
0x40006ac	     0xf8552010000	                           jne 0x4000804	      2621	dir.c	FUNCTION_84	IF_3
0x40006b2	        0x4c8d7345	                   lea r14, [rbx + 0x45]	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x40006b6	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_156	CALL_1
0x40006bb	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_156	CALL_1
0x40006c0	          0x4c89f7	                            mov rdi, r14	       975	cache.h	FUNCTION_156	CALL_1
0x40006c3	      0xe800000000	                          call 0x40006c8	       975	cache.h	FUNCTION_156	CALL_1
0x40006c8	            0x85c0	                           test eax, eax	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x40006ca	     0xf8580010000	                           jne 0x4000850	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x40006d0	          0x8b7b40	            mov edi, dword [rbx + 0x40] 	      2631	dir.c	FUNCTION_84	CALL_8
0x40006d3	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2631	dir.c	FUNCTION_84	CALL_8
0x40006d8	      0xe800000000	                          call 0x40006dd	      2631	dir.c	FUNCTION_84	CALL_8
0x40006dd	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2632	dir.c	FUNCTION_84	CALL_9
0x40006e2	            0x89c2	                            mov edx, eax	      2632	dir.c	FUNCTION_84	CALL_9
0x40006e4	          0x4889ef	                            mov rdi, rbp	      2632	dir.c	FUNCTION_84	CALL_9
0x40006e7	      0xe800000000	                          call 0x40006ec	      2632	dir.c	FUNCTION_84	CALL_9
0x40006ec	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      2635	dir.c	FUNCTION_84	FOR_1
0x40006ef	            0x85d2	                           test edx, edx	      2635	dir.c	FUNCTION_84	FOR_1
0x40006f1	     0xf847d010000	                            je 0x4000874	      2635	dir.c	FUNCTION_84	FOR_1
0x40006f7	          0x488b03	                    mov rax, qword [rbx]	      2635	dir.c	FUNCTION_84	FOR_1
0x40006fa	          0x83ea01	                              sub edx, 1	      2635	dir.c	FUNCTION_84	FOR_1
0x40006fd	            0x31ff	                            xor edi, edi	      2635	dir.c	FUNCTION_84	FOR_1
0x40006ff	      0x488d4cd008	              lea rcx, [rax + rdx*8 + 8]	      2635	dir.c	FUNCTION_84	FOR_1
0x4000704	         0xf1f4000	                         nop dword [rax]	      2635	dir.c	FUNCTION_84	FOR_1
0x4000708	          0x488b10	                    mov rdx, qword [rax]	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x400070b	         0xfb65244	           movzx edx, byte [rdx + 0x44] 	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x400070f	          0x83e204	                              and edx, 4	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000712	          0x80fa01	                               cmp dl, 1	      2637	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000715	          0x83dfff	             sbb edi, 0xffffffffffffffff	      2637	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000718	        0x4883c008	                              add rax, 8	      2637	dir.c	FUNCTION_84	FOR_1	IF_5
0x400071c	          0x4839c8	                            cmp rax, rcx	      2635	dir.c	FUNCTION_84	FOR_1
0x400071f	            0x75e7	                           jne 0x4000708	      2635	dir.c	FUNCTION_84	FOR_1
0x4000721	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2638	dir.c	FUNCTION_84	CALL_10
0x4000726	        0x4c8d6b59	                   lea r13, [rbx + 0x59]	      2641	dir.c	FUNCTION_84	CALL_13
0x400072a	          0x4531f6	                          xor r14d, r14d	      2643	dir.c	FUNCTION_84	FOR_2
0x400072d	      0xe800000000	                          call 0x4000732	      2638	dir.c	FUNCTION_84	CALL_10
0x4000732	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2639	dir.c	FUNCTION_84	CALL_11
0x4000737	            0x89c2	                            mov edx, eax	      2639	dir.c	FUNCTION_84	CALL_11
0x4000739	          0x4889ef	                            mov rdi, rbp	      2639	dir.c	FUNCTION_84	CALL_11
0x400073c	      0xe800000000	                          call 0x4000741	      2639	dir.c	FUNCTION_84	CALL_11
0x4000741	          0x4c89ef	                            mov rdi, r13	      2641	dir.c	FUNCTION_84	CALL_13
0x4000744	      0xe800000000	                          call 0x4000749	      2641	dir.c	FUNCTION_84	CALL_13
0x4000749	        0x488d5001	                      lea rdx, [rax + 1]	      2641	dir.c	FUNCTION_84	CALL_13
0x400074d	          0x4c89ee	                            mov rsi, r13	      2641	dir.c	FUNCTION_84	CALL_13
0x4000750	          0x4889ef	                            mov rdi, rbp	      2641	dir.c	FUNCTION_84	CALL_13
0x4000753	          0x4531ed	                          xor r13d, r13d	      2643	dir.c	FUNCTION_84	FOR_2
0x4000756	      0xe800000000	                          call 0x400075b	      2641	dir.c	FUNCTION_84	CALL_13
0x400075b	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      2643	dir.c	FUNCTION_84	FOR_2
0x400075e	            0x85d2	                           test edx, edx	      2643	dir.c	FUNCTION_84	FOR_2
0x4000760	            0x7433	                            je 0x4000795	      2643	dir.c	FUNCTION_84	FOR_2
0x4000762	    0x660f1f440000	                    nop word [rax + rax]	      2643	dir.c	FUNCTION_84	FOR_2
0x4000768	        0x488b4308	                mov rax, qword [rbx + 8]	      2645	dir.c	FUNCTION_84	CALL_15
0x400076c	        0x4183c501	                             add r13d, 1	      2643	dir.c	FUNCTION_84	FOR_2
0x4000770	        0x4e8b3c30	              mov r15, qword [rax + r14]	      2645	dir.c	FUNCTION_84	CALL_15
0x4000774	        0x4983c608	                              add r14, 8	      2645	dir.c	FUNCTION_84	CALL_15
0x4000778	          0x4c89ff	                            mov rdi, r15	      2645	dir.c	FUNCTION_84	CALL_15
0x400077b	      0xe800000000	                          call 0x4000780	      2645	dir.c	FUNCTION_84	CALL_15
0x4000780	        0x488d5001	                      lea rdx, [rax + 1]	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4000784	          0x4c89fe	                            mov rsi, r15	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4000787	          0x4889ef	                            mov rdi, rbp	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x400078a	      0xe800000000	                          call 0x400078f	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x400078f	        0x44396b40	           cmp dword [rbx + 0x40], r13d 	      2643	dir.c	FUNCTION_84	FOR_2
0x4000793	            0x77d3	                            ja 0x4000768	      2643	dir.c	FUNCTION_84	FOR_2
0x4000795	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      2647	dir.c	FUNCTION_84	FOR_3
0x4000798	          0x4531ed	                          xor r13d, r13d	      2647	dir.c	FUNCTION_84	FOR_3
0x400079b	            0x31ed	                            xor ebp, ebp	      2647	dir.c	FUNCTION_84	FOR_3
0x400079d	            0x85c0	                           test eax, eax	      2647	dir.c	FUNCTION_84	FOR_3
0x400079f	            0x7513	                           jne 0x40007b4	      2647	dir.c	FUNCTION_84	FOR_3
0x40007a1	            0xeb32	                           jmp 0x40007d5	      2647	dir.c	FUNCTION_84	FOR_3
0x40007a3	       0xf1f440000	                   nop dword [rax + rax]	      2647	dir.c	FUNCTION_84	FOR_3
0x40007a8	          0x83c501	                              add ebp, 1	      2647	dir.c	FUNCTION_84	FOR_3
0x40007ab	        0x4983c508	                              add r13, 8	      2647	dir.c	FUNCTION_84	FOR_3
0x40007af	          0x396b38	            cmp dword [rbx + 0x38], ebp 	      2647	dir.c	FUNCTION_84	FOR_3
0x40007b2	            0x7621	                           jbe 0x40007d5	      2647	dir.c	FUNCTION_84	FOR_3
0x40007b4	          0x488b03	                    mov rax, qword [rbx]	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40007b7	        0x4a8b3c28	              mov rdi, qword [rax + r13]	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40007bb	        0xf6474404	               test byte [rdi + 0x44], 4	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40007bf	            0x74e7	                            je 0x40007a8	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40007c1	          0x4c89e6	                            mov rsi, r12	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40007c4	          0x83c501	                              add ebp, 1	      2647	dir.c	FUNCTION_84	FOR_3
0x40007c7	        0x4983c508	                              add r13, 8	      2647	dir.c	FUNCTION_84	FOR_3
0x40007cb	      0xe890feffff	                  call sym.write_one_dir	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40007d0	          0x396b38	            cmp dword [rbx + 0x38], ebp 	      2647	dir.c	FUNCTION_84	FOR_3
0x40007d3	            0x77df	                            ja 0x40007b4	      2647	dir.c	FUNCTION_84	FOR_3
0x40007d5	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2650	dir.c	FUNCTION_84
0x40007da	    0x644833042528	                xor rax, qword fs:[0x28]	      2650	dir.c	FUNCTION_84
0x40007e3	     0xf8592000000	                           jne 0x400087b	      2650	dir.c	FUNCTION_84
0x40007e9	        0x4883c458	                           add rsp, 0x58	      2650	dir.c	FUNCTION_84
0x40007ed	              0x5b	                                 pop rbx	      2650	dir.c	FUNCTION_84
0x40007ee	              0x5d	                                 pop rbp	      2650	dir.c	FUNCTION_84
0x40007ef	            0x415c	                                 pop r12	      2650	dir.c	FUNCTION_84
0x40007f1	            0x415d	                                 pop r13	      2650	dir.c	FUNCTION_84
0x40007f3	            0x415e	                                 pop r14	      2650	dir.c	FUNCTION_84
0x40007f5	            0x415f	                                 pop r15	      2650	dir.c	FUNCTION_84
0x40007f7	              0xc3	                                     ret	      2650	dir.c	FUNCTION_84
0x40007f8	     0xf1f84000000	                   nop dword [rax + rax]	      2650	dir.c	FUNCTION_84
0x4000800	            0xa801	                              test al, 1	      2619	dir.c	FUNCTION_84	IF_2
0x4000802	            0x7534	                           jne 0x4000838	      2619	dir.c	FUNCTION_84	IF_2
0x4000804	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x4000809	          0x4963f5	                        movsxd rsi, r13d	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x400080c	      0xe800000000	                          call 0x4000811	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x4000811	        0x488d7310	                   lea rsi, [rbx + 0x10]	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x4000815	          0x4889e7	                            mov rdi, rsp	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x4000818	      0xe8e3f9ffff	              call sym.stat_data_to_disk	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x400081d	      0x498d7c2438	                   lea rdi, [r12 + 0x38]	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000822	      0xba24000000	                           mov edx, 0x24	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000827	          0x4889e6	                            mov rsi, rsp	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x400082a	      0xe800000000	                          call 0x400082f	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x400082f	      0xe97efeffff	                           jmp 0x40006b2	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000834	         0xf1f4000	                         nop dword [rax]	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000838	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2620	dir.c	FUNCTION_84	CALL_1
0x400083d	          0x4963f5	                        movsxd rsi, r13d	      2620	dir.c	FUNCTION_84	CALL_1
0x4000840	      0xe800000000	                          call 0x4000845	      2620	dir.c	FUNCTION_84	CALL_1
0x4000845	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	      2620	dir.c	FUNCTION_84	CALL_1
0x4000849	      0xe95cfeffff	                           jmp 0x40006aa	      2620	dir.c	FUNCTION_84	CALL_1
0x400084e	            0x6690	                                     nop	      2620	dir.c	FUNCTION_84	CALL_1
0x4000850	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4000855	          0x4963f5	                        movsxd rsi, r13d	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4000858	      0xe800000000	                          call 0x400085d	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x400085d	      0x498d7c2450	                   lea rdi, [r12 + 0x50]	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4000862	      0xba14000000	                           mov edx, 0x14	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4000867	          0x4c89f6	                            mov rsi, r14	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x400086a	      0xe800000000	                          call 0x400086f	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x400086f	      0xe95cfeffff	                           jmp 0x40006d0	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4000874	            0x31ff	                            xor edi, edi	      2635	dir.c	FUNCTION_84	FOR_1
0x4000876	      0xe9a6feffff	                           jmp 0x4000721	      2635	dir.c	FUNCTION_84	FOR_1
0x400087b	      0xe800000000	       call sym.common_prefix_len.isra.6	      2650	dir.c	FUNCTION_84
read_stat	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	18
0x40002c0	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      2820	dir.c	FUNCTION_91	IF_1
0x40002c4	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2820	dir.c	FUNCTION_91	IF_1
0x40002c8	        0x488d4a24	                   lea rcx, [rdx + 0x24]	      2820	dir.c	FUNCTION_91	IF_1
0x40002cc	          0x4839c8	                            cmp rax, rcx	      2820	dir.c	FUNCTION_91	IF_1
0x40002cf	            0x730f	                           jae 0x40002e0	      2820	dir.c	FUNCTION_91	IF_1
0x40002d1	        0x4883c001	                              add rax, 1	      2821	dir.c	FUNCTION_91	IF_1
0x40002d5	        0x48894628	             mov qword [rsi + 0x28], rax	      2821	dir.c	FUNCTION_91	IF_1
0x40002d9	              0xc3	                                     ret	      2822	dir.c	FUNCTION_91	IF_1
0x40002da	    0x660f1f440000	                    nop word [rax + rax]	      2822	dir.c	FUNCTION_91	IF_1
0x40002e0	        0x488b4608	                mov rax, qword [rsi + 8]	      2819	dir.c	FUNCTION_91
0x40002e4	          0x4889f1	                            mov rcx, rsi	      2819	dir.c	FUNCTION_91
0x40002e7	          0x4889d6	                            mov rsi, rdx	      2824	dir.c	FUNCTION_91	CALL_1
0x40002ea	        0x4c8b04f8	             mov r8, qword [rax + rdi*8]	      2819	dir.c	FUNCTION_91
0x40002ee	        0x498d7810	                    lea rdi, [r8 + 0x10]	      2824	dir.c	FUNCTION_91	CALL_1
0x40002f2	      0xe859ffffff	            call sym.stat_data_from_disk	      2824	dir.c	FUNCTION_91	CALL_1
0x40002f7	      0x4883412824	           add qword [rcx + 0x28], 0x24 	      2825	dir.c	FUNCTION_91
0x40002fc	      0x4180484402	                  or byte [r8 + 0x44], 2	      2826	dir.c	FUNCTION_91
0x4000301	              0xc3	                                     ret	      2826	dir.c	FUNCTION_91
fnmatch_icase_mem	WHILE,0:CALL,5:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,3	61
0x4000450	            0x4154	                                push r12	       107	dir.c	FUNCTION_5
0x4000452	              0x55	                                push rbp	       107	dir.c	FUNCTION_5
0x4000453	          0x4989d4	                            mov r12, rdx	       107	dir.c	FUNCTION_5
0x4000456	              0x53	                                push rbx	       107	dir.c	FUNCTION_5
0x4000457	          0x4863d6	                         movsxd rdx, esi	       114	dir.c	FUNCTION_5	IF_1
0x400045a	          0x4889fd	                            mov rbp, rdi	       107	dir.c	FUNCTION_5
0x400045d	          0x4489c3	                            mov ebx, r8d	       107	dir.c	FUNCTION_5
0x4000460	        0x4883ec50	                           sub rsp, 0x50	       107	dir.c	FUNCTION_5
0x4000464	    0x64488b042528	                mov rax, qword fs:[0x28]	       107	dir.c	FUNCTION_5
0x400046d	      0x4889442448	             mov qword [rsp + 0x48], rax	       107	dir.c	FUNCTION_5
0x4000472	            0x31c0	                            xor eax, eax	       107	dir.c	FUNCTION_5
0x4000474	        0x803c1700	                 cmp byte [rdi + rdx], 0	       114	dir.c	FUNCTION_5	IF_1
0x4000478	    0x48c744241000	               mov qword [rsp + 0x10], 0	       109	dir.c	FUNCTION_5
0x4000481	    0x48c744241800	               mov qword [rsp + 0x18], 0	       109	dir.c	FUNCTION_5
0x400048a	    0x48c744242000	               mov qword [rsp + 0x20], 0	       109	dir.c	FUNCTION_5
0x4000493	    0x48c744243000	               mov qword [rsp + 0x30], 0	       110	dir.c	FUNCTION_5
0x400049c	    0x48c744243800	               mov qword [rsp + 0x38], 0	       110	dir.c	FUNCTION_5
0x40004a5	    0x48c744244000	               mov qword [rsp + 0x40], 0	       110	dir.c	FUNCTION_5
0x40004ae	            0x7560	                           jne 0x4000510	       114	dir.c	FUNCTION_5	IF_1
0x40004b0	          0x4863d1	                         movsxd rdx, ecx	       118	dir.c	FUNCTION_5	IF_2
0x40004b3	      0x41803c1400	                 cmp byte [r12 + rdx], 0	       118	dir.c	FUNCTION_5	IF_2
0x40004b8	            0x757a	                           jne 0x4000534	       118	dir.c	FUNCTION_5	IF_2
0x40004ba	    0x8b1500000000	            mov edx, dword [0x040004c0] 	       124	dir.c	FUNCTION_5	IF_3
0x40004c0	            0x89d8	                            mov eax, ebx	       124	dir.c	FUNCTION_5	IF_3
0x40004c2	          0x4c89e6	                            mov rsi, r12	       125	dir.c	FUNCTION_5	CALL_3
0x40004c5	          0x83c801	                               or eax, 1	       124	dir.c	FUNCTION_5	IF_3
0x40004c8	          0x4889ef	                            mov rdi, rbp	       125	dir.c	FUNCTION_5	CALL_3
0x40004cb	            0x85d2	                           test edx, edx	       124	dir.c	FUNCTION_5	IF_3
0x40004cd	           0xf45d8	                         cmovne ebx, eax	       124	dir.c	FUNCTION_5	IF_3
0x40004d0	            0x89da	                            mov edx, ebx	       125	dir.c	FUNCTION_5	CALL_3
0x40004d2	      0xe800000000	                          call 0x40004d7	       125	dir.c	FUNCTION_5	CALL_3
0x40004d7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       127	dir.c	FUNCTION_5	CALL_4
0x40004dc	            0x89c3	                            mov ebx, eax	       125	dir.c	FUNCTION_5	CALL_3
0x40004de	      0xe800000000	                          call 0x40004e3	       127	dir.c	FUNCTION_5	CALL_4
0x40004e3	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       128	dir.c	FUNCTION_5	CALL_5
0x40004e8	      0xe800000000	                          call 0x40004ed	       128	dir.c	FUNCTION_5	CALL_5
0x40004ed	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       131	dir.c	FUNCTION_5
0x40004f2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       131	dir.c	FUNCTION_5
0x40004fb	            0x89d8	                            mov eax, ebx	       131	dir.c	FUNCTION_5
0x40004fd	            0x754c	                           jne 0x400054b	       131	dir.c	FUNCTION_5
0x40004ff	        0x4883c450	                           add rsp, 0x50	       131	dir.c	FUNCTION_5
0x4000503	              0x5b	                                 pop rbx	       131	dir.c	FUNCTION_5
0x4000504	              0x5d	                                 pop rbp	       131	dir.c	FUNCTION_5
0x4000505	            0x415c	                                 pop r12	       131	dir.c	FUNCTION_5
0x4000507	              0xc3	                                     ret	       131	dir.c	FUNCTION_5
0x4000508	     0xf1f84000000	                   nop dword [rax + rax]	       131	dir.c	FUNCTION_5
0x4000510	          0x4889fe	                            mov rsi, rdi	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x4000513	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x4000518	        0x894c240c	              mov dword [rsp + 0xc], ecx	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x400051c	      0xe800000000	                          call 0x4000521	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x4000521	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       116	dir.c	FUNCTION_5	IF_1
0x4000525	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	       116	dir.c	FUNCTION_5	IF_1
0x400052a	          0x4863d1	                         movsxd rdx, ecx	       118	dir.c	FUNCTION_5	IF_2
0x400052d	      0x41803c1400	                 cmp byte [r12 + rdx], 0	       118	dir.c	FUNCTION_5	IF_2
0x4000532	            0x7486	                            je 0x40004ba	       118	dir.c	FUNCTION_5	IF_2
0x4000534	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x4000539	          0x4c89e6	                            mov rsi, r12	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x400053c	      0xe800000000	                          call 0x4000541	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x4000541	      0x4c8b642440	            mov r12, qword [rsp + 0x40] 	       120	dir.c	FUNCTION_5	IF_2
0x4000546	      0xe96fffffff	                           jmp 0x40004ba	       120	dir.c	FUNCTION_5	IF_2
0x400054b	      0xe800000000	                  call sym.cmp_dir_entry	       131	dir.c	FUNCTION_5
read_sha1	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	20
0x40000a0	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      2833	dir.c	FUNCTION_92	IF_1
0x40000a4	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2833	dir.c	FUNCTION_92	IF_1
0x40000a8	        0x488d4a14	                   lea rcx, [rdx + 0x14]	      2833	dir.c	FUNCTION_92	IF_1
0x40000ac	          0x4839c8	                            cmp rax, rcx	      2833	dir.c	FUNCTION_92	IF_1
0x40000af	            0x730f	                           jae 0x40000c0	      2833	dir.c	FUNCTION_92	IF_1
0x40000b1	        0x4883c001	                              add rax, 1	      2834	dir.c	FUNCTION_92	IF_1
0x40000b5	        0x48894628	             mov qword [rsi + 0x28], rax	      2834	dir.c	FUNCTION_92	IF_1
0x40000b9	              0xc3	                                     ret	      2835	dir.c	FUNCTION_92	IF_1
0x40000ba	    0x660f1f440000	                    nop word [rax + rax]	      2835	dir.c	FUNCTION_92	IF_1
0x40000c0	        0x488b4608	                mov rax, qword [rsi + 8]	      2832	dir.c	FUNCTION_92
0x40000c4	        0x488b0cf8	            mov rcx, qword [rax + rdi*8]	        53	string3.h	FUNCTION_103	CALL_3
0x40000c8	          0x488b3a	                    mov rdi, qword [rdx]	        53	string3.h	FUNCTION_103	CALL_3
0x40000cb	        0x488d4145	                   lea rax, [rcx + 0x45]	        53	string3.h	FUNCTION_103	CALL_3
0x40000cf	        0x48897945	             mov qword [rcx + 0x45], rdi	        53	string3.h	FUNCTION_103	CALL_3
0x40000d3	        0x488b4a08	                mov rcx, qword [rdx + 8]	        53	string3.h	FUNCTION_103	CALL_3
0x40000d7	        0x48894808	                mov qword [rax + 8], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40000db	          0x8b5210	            mov edx, dword [rdx + 0x10] 	        53	string3.h	FUNCTION_103	CALL_3
0x40000de	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_103	CALL_3
0x40000e1	      0x4883462814	            add qword [rsi + 0x28], 0x14	      2838	dir.c	FUNCTION_92
0x40000e6	              0xc3	                                     ret	      2838	dir.c	FUNCTION_92
do_invalidate_gitignore	WHILE,0:CALL,1:functions,0:FOR,1:SWITCH,0:DO,0:ELSE,0:IF,0	23
0x4000040	          0x8b4738	            mov eax, dword [rdi + 0x38] 	       760	dir.c	FUNCTION_25	FOR_1
0x4000043	        0x806744fd	             and byte [rdi + 0x44], 0xfd	       758	dir.c	FUNCTION_25
0x4000047	    0xc74740000000	               mov dword [rdi + 0x40], 0	       759	dir.c	FUNCTION_25
0x400004e	            0x85c0	                           test eax, eax	       760	dir.c	FUNCTION_25	FOR_1
0x4000050	            0x742d	                            je 0x400007f	       760	dir.c	FUNCTION_25	FOR_1
0x4000052	            0x4154	                                push r12	       756	dir.c	FUNCTION_25
0x4000054	          0x4989fc	                            mov r12, rdi	       756	dir.c	FUNCTION_25
0x4000057	              0x55	                                push rbp	       756	dir.c	FUNCTION_25
0x4000058	            0x31ed	                            xor ebp, ebp	       756	dir.c	FUNCTION_25
0x400005a	              0x53	                                push rbx	       756	dir.c	FUNCTION_25
0x400005b	            0x31db	                            xor ebx, ebx	       756	dir.c	FUNCTION_25
0x400005d	           0xf1f00	                         nop dword [rax]	       756	dir.c	FUNCTION_25
0x4000060	        0x498b0424	                    mov rax, qword [r12]	       761	dir.c	FUNCTION_25	CALL_1
0x4000064	          0x83c301	                              add ebx, 1	       760	dir.c	FUNCTION_25	FOR_1
0x4000067	        0x488b3c28	              mov rdi, qword [rax + rbp]	       761	dir.c	FUNCTION_25	CALL_1
0x400006b	        0x4883c508	                              add rbp, 8	       761	dir.c	FUNCTION_25	CALL_1
0x400006f	      0xe8ccffffff	        call sym.do_invalidate_gitignore	       761	dir.c	FUNCTION_25	CALL_1
0x4000074	      0x41395c2438	            cmp dword [r12 + 0x38], ebx 	       760	dir.c	FUNCTION_25	FOR_1
0x4000079	            0x77e5	                            ja 0x4000060	       760	dir.c	FUNCTION_25	FOR_1
0x400007b	              0x5b	                                 pop rbx	       762	dir.c	FUNCTION_25
0x400007c	              0x5d	                                 pop rbp	       762	dir.c	FUNCTION_25
0x400007d	            0x415c	                                 pop r12	       762	dir.c	FUNCTION_25
0x400007f	            0xf3c3	                                     ret	       762	dir.c	FUNCTION_25
stat_data_to_disk	WHILE,0:CALL,0:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	28
0x4000200	            0x8b06	                    mov eax, dword [rsi]	        44	bswap.h	FUNCTION_117	CALL_3
0x4000202	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x4000204	            0x8907	                    mov dword [rdi], eax	      2590	dir.c	FUNCTION_83
0x4000206	          0x8b4604	                mov eax, dword [rsi + 4]	        44	bswap.h	FUNCTION_117	CALL_3
0x4000209	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x400020b	          0x894704	                mov dword [rdi + 4], eax	      2591	dir.c	FUNCTION_83
0x400020e	          0x8b4608	                mov eax, dword [rsi + 8]	        44	bswap.h	FUNCTION_117	CALL_3
0x4000211	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x4000213	          0x894708	                mov dword [rdi + 8], eax	      2592	dir.c	FUNCTION_83
0x4000216	          0x8b460c	              mov eax, dword [rsi + 0xc]	        44	bswap.h	FUNCTION_117	CALL_3
0x4000219	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x400021b	          0x89470c	              mov dword [rdi + 0xc], eax	      2593	dir.c	FUNCTION_83
0x400021e	          0x8b4610	            mov eax, dword [rsi + 0x10] 	        44	bswap.h	FUNCTION_117	CALL_3
0x4000221	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x4000223	          0x894710	             mov dword [rdi + 0x10], eax	      2594	dir.c	FUNCTION_83
0x4000226	          0x8b4614	            mov eax, dword [rsi + 0x14] 	        44	bswap.h	FUNCTION_117	CALL_3
0x4000229	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x400022b	          0x894714	             mov dword [rdi + 0x14], eax	      2595	dir.c	FUNCTION_83
0x400022e	          0x8b4618	            mov eax, dword [rsi + 0x18] 	        44	bswap.h	FUNCTION_117	CALL_3
0x4000231	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x4000233	          0x894718	             mov dword [rdi + 0x18], eax	      2596	dir.c	FUNCTION_83
0x4000236	          0x8b461c	            mov eax, dword [rsi + 0x1c] 	        44	bswap.h	FUNCTION_117	CALL_3
0x4000239	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x400023b	          0x89471c	             mov dword [rdi + 0x1c], eax	      2597	dir.c	FUNCTION_83
0x400023e	          0x8b4620	            mov eax, dword [rsi + 0x20] 	        44	bswap.h	FUNCTION_117	CALL_3
0x4000241	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x4000243	          0x894720	             mov dword [rdi + 0x20], eax	      2598	dir.c	FUNCTION_83
0x4000246	              0xc3	                                     ret	      2598	dir.c	FUNCTION_83
directory_exists_in_index_icase	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,2	37
0x4000570	            0x4154	                                push r12	      1372	dir.c	FUNCTION_46
0x4000572	              0x55	                                push rbp	      1372	dir.c	FUNCTION_46
0x4000573	          0x4189d4	                           mov r12d, edx	      1372	dir.c	FUNCTION_46
0x4000576	              0x53	                                push rbx	      1372	dir.c	FUNCTION_46
0x4000577	          0x4889f5	                            mov rbp, rsi	      1372	dir.c	FUNCTION_46
0x400057a	          0x4889fb	                            mov rbx, rdi	      1372	dir.c	FUNCTION_46
0x400057d	      0xe800000000	                          call 0x4000582	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x4000582	            0x85c0	                           test eax, eax	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x4000584	      0xba01000000	                              mov edx, 1	      1376	dir.c	FUNCTION_46	IF_1
0x4000589	            0x740d	                            je 0x4000598	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x400058b	              0x5b	                                 pop rbx	      1383	dir.c	FUNCTION_46
0x400058c	            0x89d0	                            mov eax, edx	      1383	dir.c	FUNCTION_46
0x400058e	              0x5d	                                 pop rbp	      1383	dir.c	FUNCTION_46
0x400058f	            0x415c	                                 pop r12	      1383	dir.c	FUNCTION_46
0x4000591	              0xc3	                                     ret	      1383	dir.c	FUNCTION_46
0x4000592	    0x660f1f440000	                    nop word [rax + rax]	      1383	dir.c	FUNCTION_46
0x4000598	    0x8b0d00000000	            mov ecx, dword [0x0400059e] 	      1378	dir.c	FUNCTION_46	CALL_2
0x400059e	          0x4489e2	                           mov edx, r12d	      1378	dir.c	FUNCTION_46	CALL_2
0x40005a1	          0x4889ee	                            mov rsi, rbp	      1378	dir.c	FUNCTION_46	CALL_2
0x40005a4	          0x4889df	                            mov rdi, rbx	      1378	dir.c	FUNCTION_46	CALL_2
0x40005a7	      0xe800000000	                          call 0x40005ac	      1378	dir.c	FUNCTION_46	CALL_2
0x40005ac	          0x4885c0	                           test rax, rax	      1379	dir.c	FUNCTION_46	IF_2
0x40005af	            0x741f	                            je 0x40005d0	      1379	dir.c	FUNCTION_46	IF_2
0x40005b1	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1379	dir.c	FUNCTION_46	IF_2
0x40005b4	            0x31d2	                            xor edx, edx	      1380	dir.c	FUNCTION_46	IF_2
0x40005b6	              0x5b	                                 pop rbx	      1383	dir.c	FUNCTION_46
0x40005b7	              0x5d	                                 pop rbp	      1383	dir.c	FUNCTION_46
0x40005b8	      0x2500f00000	                         and eax, 0xf000	      1379	dir.c	FUNCTION_46	IF_2
0x40005bd	      0x3d00e00000	                         cmp eax, 0xe000	      1380	dir.c	FUNCTION_46	IF_2
0x40005c2	           0xf94c2	                                 sete dl	      1380	dir.c	FUNCTION_46	IF_2
0x40005c5	             0x1d2	                            add edx, edx	      1380	dir.c	FUNCTION_46	IF_2
0x40005c7	            0x89d0	                            mov eax, edx	      1383	dir.c	FUNCTION_46
0x40005c9	            0x415c	                                 pop r12	      1383	dir.c	FUNCTION_46
0x40005cb	              0xc3	                                     ret	      1383	dir.c	FUNCTION_46
0x40005cc	         0xf1f4000	                         nop dword [rax]	      1383	dir.c	FUNCTION_46
0x40005d0	            0x31d2	                            xor edx, edx	      1382	dir.c	FUNCTION_46
0x40005d2	            0xebb7	                           jmp 0x400058b	      1382	dir.c	FUNCTION_46
do_match_pathspec	WHILE,0:CALL,3:functions,0:FOR,1:SWITCH,0:DO,0:ELSE,2:IF,12	392
0x4001920	            0x4157	                                push r15	       432	dir.c	FUNCTION_13
0x4001922	            0x4156	                                push r14	       432	dir.c	FUNCTION_13
0x4001924	            0x4155	                                push r13	       432	dir.c	FUNCTION_13
0x4001926	            0x4154	                                push r12	       432	dir.c	FUNCTION_13
0x4001928	          0x4989fd	                            mov r13, rdi	       432	dir.c	FUNCTION_13
0x400192b	              0x55	                                push rbp	       432	dir.c	FUNCTION_13
0x400192c	              0x53	                                push rbx	       432	dir.c	FUNCTION_13
0x400192d	          0x4489cf	                            mov edi, r9d	       432	dir.c	FUNCTION_13
0x4001930	        0x4883ec68	                           sub rsp, 0x68	       432	dir.c	FUNCTION_13
0x4001934	        0x458b4d08	                mov r9d, dword [r13 + 8]	       435	dir.c	FUNCTION_13
0x4001938	        0x894c2438	             mov dword [rsp + 0x38], ecx	       432	dir.c	FUNCTION_13
0x400193c	          0x4489c9	                            mov ecx, r9d	       435	dir.c	FUNCTION_13
0x400193f	          0x83e180	                     and ecx, 0xffffff80	       435	dir.c	FUNCTION_13
0x4001942	     0xf85b9050000	                           jne 0x4001f01	       435	dir.c	FUNCTION_13
0x4001948	        0x418b4500	                    mov eax, dword [r13]	       444	dir.c	FUNCTION_13	IF_1
0x400194c	            0x85c0	                           test eax, eax	       444	dir.c	FUNCTION_13	IF_1
0x400194e	            0x7570	                           jne 0x40019c0	       444	dir.c	FUNCTION_13	IF_1
0x4001950	      0x41f6450402	                  test byte [r13 + 4], 2	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x4001955	     0xf8455020000	                            je 0x4001bb0	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x400195b	        0x4183e102	                              and r9d, 2	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x400195f	     0xf844b020000	                            je 0x4001bb0	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x4001965	        0x418b7d0c	              mov edi, dword [r13 + 0xc]	       447	dir.c	FUNCTION_13	IF_1	IF_2
0x4001969	          0x83ffff	             cmp edi, 0xffffffffffffffff	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x400196c	     0xf843e020000	                            je 0x4001bb0	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x4001972	          0x4863d2	                         movsxd rdx, edx	       213	dir.c	FUNCTION_9
0x4001975	          0x4801f2	                            add rdx, rsi	       213	dir.c	FUNCTION_9
0x4001978	          0x4839d6	                            cmp rsi, rdx	       215	dir.c	FUNCTION_9	WHILE_1
0x400197b	            0x732a	                           jae 0x40019a7	       215	dir.c	FUNCTION_9	WHILE_1
0x400197d	            0x31c9	                            xor ecx, ecx	       215	dir.c	FUNCTION_9	WHILE_1
0x400197f	            0xeb0c	                           jmp 0x400198d	       215	dir.c	FUNCTION_9	WHILE_1
0x4001981	     0xf1f80000000	                         nop dword [rax]	       215	dir.c	FUNCTION_9	WHILE_1
0x4001988	          0x4839f2	                            cmp rdx, rsi	       215	dir.c	FUNCTION_9	WHILE_1
0x400198b	            0x741a	                            je 0x40019a7	       215	dir.c	FUNCTION_9	WHILE_1
0x400198d	        0x4883c601	                              add rsi, 1	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4001991	        0x807eff2f	                cmp byte [rsi - 1], 0x2f	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4001995	            0x75f1	                           jne 0x4001988	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4001997	          0x83c101	                              add ecx, 1	       218	dir.c	FUNCTION_9	WHILE_1
0x400199a	            0x39cf	                            cmp edi, ecx	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x400199c	     0xf8c13020000	                            jl 0x4001bb5	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x40019a2	          0x4839f2	                            cmp rdx, rsi	       215	dir.c	FUNCTION_9	WHILE_1
0x40019a5	            0x75e6	                           jne 0x400198d	       215	dir.c	FUNCTION_9	WHILE_1
0x40019a7	        0x4883c468	                           add rsp, 0x68	       496	dir.c	FUNCTION_13
0x40019ab	      0xb803000000	                              mov eax, 3	       451	dir.c	FUNCTION_13	IF_1	IF_3
0x40019b0	              0x5b	                                 pop rbx	       496	dir.c	FUNCTION_13
0x40019b1	              0x5d	                                 pop rbp	       496	dir.c	FUNCTION_13
0x40019b2	            0x415c	                                 pop r12	       496	dir.c	FUNCTION_13
0x40019b4	            0x415d	                                 pop r13	       496	dir.c	FUNCTION_13
0x40019b6	            0x415e	                                 pop r14	       496	dir.c	FUNCTION_13
0x40019b8	            0x415f	                                 pop r15	       496	dir.c	FUNCTION_13
0x40019ba	              0xc3	                                     ret	       496	dir.c	FUNCTION_13
0x40019bb	       0xf1f440000	                   nop dword [rax + rax]	       496	dir.c	FUNCTION_13
0x40019c0	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	       456	dir.c	FUNCTION_13	ELSE_1
0x40019c4	          0x4863cb	                         movsxd rcx, ebx	       456	dir.c	FUNCTION_13	ELSE_1
0x40019c7	            0x29da	                            sub edx, ebx	       457	dir.c	FUNCTION_13	ELSE_1
0x40019c9	          0x4801ce	                            add rsi, rcx	       456	dir.c	FUNCTION_13	ELSE_1
0x40019cc	          0x83e801	                              sub eax, 1	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x40019cf	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       456	dir.c	FUNCTION_13	ELSE_1
0x40019d4	      0x4889742428	             mov qword [rsp + 0x28], rsi	       456	dir.c	FUNCTION_13	ELSE_1
0x40019d9	            0x89d1	                            mov ecx, edx	       457	dir.c	FUNCTION_13	ELSE_1
0x40019db	        0x8954243c	             mov dword [rsp + 0x3c], edx	       457	dir.c	FUNCTION_13	ELSE_1
0x40019df	     0xf88fc040000	                            js 0x4001ee1	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x40019e5	          0x4c63f8	                         movsxd r15, eax	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x40019e8	            0x89c0	                            mov eax, eax	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x40019ea	    0xc74424240000	               mov dword [rsp + 0x24], 0	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x40019f2	          0x4d89fc	                            mov r12, r15	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x40019f5	    0x4a8d14fd0000	                        lea rdx, [r15*8]	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x40019fd	          0x4d89fa	                            mov r10, r15	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001a00	          0x4929c4	                            sub r12, rax	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001a03	        0x49c1e206	                              shl r10, 6	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001a07	    0x4a8d04e50000	                        lea rax, [r12*8]	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001a0f	        0x49c1e406	                              shl r12, 6	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001a13	          0x4929d2	                            sub r10, rdx	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001a16	          0x4d89d6	                            mov r14, r10	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001a19	          0x4929c4	                            sub r12, rax	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001a1c	      0x498d4424c8	                   lea rax, [r12 - 0x38]	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001a21	          0x4d89c4	                             mov r12, r8	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001a24	      0x4889442410	             mov qword [rsp + 0x10], rax	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001a29	            0x89f8	                            mov eax, edi	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001a2b	          0x83e001	                              and eax, 1	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001a2e	        0x89442420	             mov dword [rsp + 0x20], eax	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001a32	            0x89f8	                            mov eax, edi	       385	dir.c	FUNCTION_12	IF_9
0x4001a34	          0x83e702	                              and edi, 2	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001a37	          0x83e004	                              and eax, 4	       385	dir.c	FUNCTION_12	IF_9
0x4001a3a	        0x897c2448	             mov dword [rsp + 0x48], edi	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001a3e	        0x8944244c	             mov dword [rsp + 0x4c], eax	       385	dir.c	FUNCTION_12	IF_9
0x4001a42	          0x4863c1	                         movsxd rax, ecx	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001a45	      0x4889442458	             mov qword [rsp + 0x58], rax	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001a4a	    0x660f1f440000	                    nop word [rax + rax]	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001a50	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001a54	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001a58	            0x85f6	                           test esi, esi	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001a5a	     0xf8468010000	                            je 0x4001bc8	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001a60	    0x42f644331020	     test byte [rbx + r14 + 0x10], 0x20 	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001a66	     0xf8414010000	                            je 0x4001b80	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001a6c	          0x4d85e4	                           test r12, r12	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x4001a6f	     0xf840b030000	                            je 0x4001d80	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x4001a75	      0x43803c3c03	                 cmp byte [r12 + r15], 3	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x4001a7a	     0xf8400010000	                            je 0x4001b80	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x4001a80	          0x4c01f3	                            add rbx, r14	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001a83	        0xf6431020	           test byte [rbx + 0x10], 0x20 	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001a87	            0x740c	                            je 0x4001a95	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001a89	      0x43c6043c02	                 mov byte [r12 + r15], 2	       473	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001a8e	          0x4c89f3	                            mov rbx, r14	       473	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001a91	        0x49035d10	             add rbx, qword [r13 + 0x10]	       473	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001a95	          0x488b3b	                    mov rdi, qword [rbx]	       324	dir.c	FUNCTION_12
0x4001a98	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       324	dir.c	FUNCTION_12
0x4001a9d	        0x48635318	         movsxd rdx, dword [rbx + 0x18] 	       356	dir.c	FUNCTION_12	IF_1
0x4001aa1	        0x488d0c07	                    lea rcx, [rdi + rax]	       324	dir.c	FUNCTION_12
0x4001aa5	      0x48894c2408	                mov qword [rsp + 8], rcx	       324	dir.c	FUNCTION_12
0x4001aaa	          0x8b4b14	            mov ecx, dword [rbx + 0x14] 	       325	dir.c	FUNCTION_12
0x4001aad	            0x85d2	                           test edx, edx	       356	dir.c	FUNCTION_12	IF_1
0x4001aaf	        0x894c2418	             mov dword [rsp + 0x18], ecx	       325	dir.c	FUNCTION_12
0x4001ab3	            0x741b	                            je 0x4001ad0	       356	dir.c	FUNCTION_12	IF_1
0x4001ab5	        0xf6431010	           test byte [rbx + 0x10], 0x10 	       356	dir.c	FUNCTION_12	IF_1
0x4001ab9	            0x7415	                            je 0x4001ad0	       356	dir.c	FUNCTION_12	IF_1
0x4001abb	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4001ac0	          0x4829c6	                            sub rsi, rax	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4001ac3	      0xe800000000	                          call 0x4001ac8	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4001ac8	            0x85c0	                           test eax, eax	       356	dir.c	FUNCTION_12	IF_1
0x4001aca	     0xf85b0000000	                           jne 0x4001b80	       356	dir.c	FUNCTION_12	IF_1
0x4001ad0	          0x8b4b24	            mov ecx, dword [rbx + 0x24] 	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4001ad3	            0x85c9	                           test ecx, ecx	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4001ad5	     0xf85a5010000	                           jne 0x4001c80	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4001adb	      0x488b442408	                mov rax, qword [rsp + 8]	       364	dir.c	FUNCTION_12	IF_3
0x4001ae0	          0x803800	                       cmp byte [rax], 0	       364	dir.c	FUNCTION_12	IF_3
0x4001ae3	            0x746b	                            je 0x4001b50	       364	dir.c	FUNCTION_12	IF_3
0x4001ae5	        0x8b6c2418	            mov ebp, dword [rsp + 0x18] 	       325	dir.c	FUNCTION_12
0x4001ae9	        0x2b6c2438	             sub ebp, dword [rsp + 0x38]	       325	dir.c	FUNCTION_12
0x4001aed	        0x396c243c	            cmp dword [rsp + 0x3c], ebp 	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001af1	     0xf8cf9000000	                            jl 0x4001bf0	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001af7	        0xf6431010	           test byte [rbx + 0x10], 0x10 	        92	pathspec.h	FUNCTION_147	IF_1
0x4001afb	          0x4863cd	                         movsxd rcx, ebp	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001afe	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001b03	          0x4889ca	                            mov rdx, rcx	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001b06	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001b0b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001b10	     0xf852a030000	                           jne 0x4001e40	        92	pathspec.h	FUNCTION_147	IF_1
0x4001b16	      0xe800000000	                          call 0x4001b1b	        95	pathspec.h	FUNCTION_147	CALL_2
0x4001b1b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        95	pathspec.h	FUNCTION_147	CALL_2
0x4001b20	            0x85c0	                           test eax, eax	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001b22	     0xf85c8000000	                           jne 0x4001bf0	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001b28	        0x396c243c	            cmp dword [rsp + 0x3c], ebp 	       368	dir.c	FUNCTION_12	IF_4	IF_5
0x4001b2c	     0xf841e030000	                            je 0x4001e50	       368	dir.c	FUNCTION_12	IF_4	IF_5
0x4001b32	      0x488b442408	                mov rax, qword [rsp + 8]	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001b37	      0x807c08ff2f	         cmp byte [rax + rcx - 1], 0x2f 	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001b3c	            0x7412	                            je 0x4001b50	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001b3e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001b43	        0x803c082f	              cmp byte [rax + rcx], 0x2f	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001b47	     0xf85be000000	                           jne 0x4001c0b	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001b4d	           0xf1f00	                         nop dword [rax]	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001b50	      0xba01000000	                              mov edx, 1	       365	dir.c	FUNCTION_12	IF_3
0x4001b55	      0x41f6450402	                  test byte [r13 + 4], 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001b5a	     0xf8530020000	                           jne 0x4001d90	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001b60	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001b64	            0x39d0	                            cmp eax, edx	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001b66	           0xf4cc2	                          cmovl eax, edx	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001b69	          0x4d85e4	                           test r12, r12	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001b6c	        0x89442424	             mov dword [rsp + 0x24], eax	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001b70	            0x740e	                            je 0x4001b80	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001b72	      0x430fbe043c	             movsx eax, byte [r12 + r15]	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001b77	            0x39d0	                            cmp eax, edx	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001b79	            0x7d05	                           jge 0x4001b80	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001b7b	        0x4388143c	                mov byte [r12 + r15], dl	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001b7f	              0x90	                                     nop	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001b80	        0x4983ee38	                           sub r14, 0x38	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001b84	        0x4983ef01	                              sub r15, 1	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001b88	      0x4c39742410	            cmp qword [rsp + 0x10], r14 	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001b8d	     0xf85bdfeffff	                           jne 0x4001a50	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001b93	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001b97	        0x4883c468	                           add rsp, 0x68	       496	dir.c	FUNCTION_13
0x4001b9b	              0x5b	                                 pop rbx	       496	dir.c	FUNCTION_13
0x4001b9c	              0x5d	                                 pop rbp	       496	dir.c	FUNCTION_13
0x4001b9d	            0x415c	                                 pop r12	       496	dir.c	FUNCTION_13
0x4001b9f	            0x415d	                                 pop r13	       496	dir.c	FUNCTION_13
0x4001ba1	            0x415e	                                 pop r14	       496	dir.c	FUNCTION_13
0x4001ba3	            0x415f	                                 pop r15	       496	dir.c	FUNCTION_13
0x4001ba5	              0xc3	                                     ret	       496	dir.c	FUNCTION_13
0x4001ba6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       496	dir.c	FUNCTION_13
0x4001bb0	      0xb801000000	                              mov eax, 1	       448	dir.c	FUNCTION_13	IF_1	IF_2
0x4001bb5	        0x4883c468	                           add rsp, 0x68	       496	dir.c	FUNCTION_13
0x4001bb9	              0x5b	                                 pop rbx	       496	dir.c	FUNCTION_13
0x4001bba	              0x5d	                                 pop rbp	       496	dir.c	FUNCTION_13
0x4001bbb	            0x415c	                                 pop r12	       496	dir.c	FUNCTION_13
0x4001bbd	            0x415d	                                 pop r13	       496	dir.c	FUNCTION_13
0x4001bbf	            0x415e	                                 pop r14	       496	dir.c	FUNCTION_13
0x4001bc1	            0x415f	                                 pop r15	       496	dir.c	FUNCTION_13
0x4001bc3	              0xc3	                                     ret	       496	dir.c	FUNCTION_13
0x4001bc4	         0xf1f4000	                         nop dword [rax]	       496	dir.c	FUNCTION_13
0x4001bc8	    0x42f644331020	     test byte [rbx + r14 + 0x10], 0x20 	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001bce	     0xf8498feffff	                            je 0x4001a6c	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001bd4	        0x4983ee38	                           sub r14, 0x38	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001bd8	        0x4983ef01	                              sub r15, 1	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001bdc	      0x4c39742410	            cmp qword [rsp + 0x10], r14 	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001be1	     0xf8569feffff	                           jne 0x4001a50	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001be7	            0xebaa	                           jmp 0x4001b93	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001be9	     0xf1f80000000	                         nop dword [rax]	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001bf0	        0x8b542448	            mov edx, dword [rsp + 0x48] 	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001bf4	            0x85d2	                           test edx, edx	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001bf6	            0x7413	                            je 0x4001c0b	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001bf8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001bfd	          0x4863c5	                         movsxd rax, ebp	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001c00	      0x807c07ff2f	         cmp byte [rdi + rax - 1], 0x2f 	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001c05	     0xf848d020000	                            je 0x4001e98	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001c0b	          0x8b4b1c	            mov ecx, dword [rbx + 0x1c] 	       379	dir.c	FUNCTION_12	IF_8
0x4001c0e	          0x3b4b14	            cmp ecx, dword [rbx + 0x14] 	       379	dir.c	FUNCTION_12	IF_8
0x4001c11	     0xf8cf9010000	                            jl 0x4001e10	       379	dir.c	FUNCTION_12	IF_8
0x4001c17	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	       385	dir.c	FUNCTION_12	IF_9
0x4001c1b	            0x85c0	                           test eax, eax	       385	dir.c	FUNCTION_12	IF_9
0x4001c1d	     0xf845dffffff	                            je 0x4001b80	       385	dir.c	FUNCTION_12	IF_9
0x4001c23	        0x396c243c	            cmp dword [rsp + 0x3c], ebp 	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001c27	            0x7d14	                           jge 0x4001c3d	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001c29	      0x488b442408	                mov rax, qword [rsp + 8]	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001c2e	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001c33	        0x803c382f	              cmp byte [rax + rdi], 0x2f	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001c37	     0xf842d020000	                            je 0x4001e6a	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001c3d	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001c40	          0x3b5314	            cmp edx, dword [rbx + 0x14] 	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001c43	     0xf8d07ffffff	                           jge 0x4001b50	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001c49	        0x2b542438	             sub edx, dword [rsp + 0x38]	       394	dir.c	FUNCTION_12	IF_9	IF_11	CALL_7
0x4001c4d	        0xf6431010	           test byte [rbx + 0x10], 0x10 	        92	pathspec.h	FUNCTION_147	IF_1
0x4001c51	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001c56	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001c5b	          0x4863d2	                         movsxd rdx, edx	       394	dir.c	FUNCTION_12	IF_9	IF_11	CALL_7
0x4001c5e	     0xf85fc010000	                           jne 0x4001e60	        92	pathspec.h	FUNCTION_147	IF_1
0x4001c64	      0xe800000000	                          call 0x4001c69	        95	pathspec.h	FUNCTION_147	CALL_2
0x4001c69	            0x85c0	                           test eax, eax	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001c6b	     0xf84dffeffff	                            je 0x4001b50	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001c71	      0xe90affffff	                           jmp 0x4001b80	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001c76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001c80	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       283	dir.c	FUNCTION_11	CALL_1
0x4001c84	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       283	dir.c	FUNCTION_11	CALL_1
0x4001c89	      0xe800000000	                          call 0x4001c8e	       283	dir.c	FUNCTION_11	CALL_1
0x4001c8e	          0x8b4324	            mov eax, dword [rbx + 0x24] 	       284	dir.c	FUNCTION_11	FOR_1
0x4001c91	            0x85c0	                           test eax, eax	       284	dir.c	FUNCTION_11	FOR_1
0x4001c93	     0xf8e42feffff	                           jle 0x4001adb	       284	dir.c	FUNCTION_11	FOR_1
0x4001c99	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       284	dir.c	FUNCTION_11	FOR_1
0x4001c9d	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       284	dir.c	FUNCTION_11	FOR_1
0x4001ca1	          0x83e801	                              sub eax, 1	       284	dir.c	FUNCTION_11	FOR_1
0x4001ca4	        0x48c1e004	                              shl rax, 4	       284	dir.c	FUNCTION_11	FOR_1
0x4001ca8	      0x48895c2450	             mov qword [rsp + 0x50], rbx	       284	dir.c	FUNCTION_11	FOR_1
0x4001cad	        0x488b5208	                mov rdx, qword [rdx + 8]	       284	dir.c	FUNCTION_11	FOR_1
0x4001cb1	        0x488d6908	                      lea rbp, [rcx + 8]	       284	dir.c	FUNCTION_11	FOR_1
0x4001cb5	      0x488d4c0118	            lea rcx, [rcx + rax + 0x18] 	       284	dir.c	FUNCTION_11	FOR_1
0x4001cba	        0x4883c208	                              add rdx, 8	       284	dir.c	FUNCTION_11	FOR_1
0x4001cbe	          0x4889d3	                            mov rbx, rdx	       284	dir.c	FUNCTION_11	FOR_1
0x4001cc1	            0xeb2d	                           jmp 0x4001cf0	       284	dir.c	FUNCTION_11	FOR_1
0x4001cc3	       0xf1f440000	                   nop dword [rax + rax]	       284	dir.c	FUNCTION_11	FOR_1
0x4001cc8	        0x488b7df8	                mov rdi, qword [rbp - 8]	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4001ccc	      0x48894c2440	             mov qword [rsp + 0x40], rcx	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4001cd1	      0xe800000000	                          call 0x4001cd6	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4001cd6	            0x85c0	                           test eax, eax	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001cd8	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001cdd	     0xf859dfeffff	                           jne 0x4001b80	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001ce3	        0x4883c510	                           add rbp, 0x10	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001ce7	        0x4883c310	                           add rbx, 0x10	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001ceb	          0x4839e9	                            cmp rcx, rbp	       284	dir.c	FUNCTION_11	FOR_1
0x4001cee	            0x745d	                            je 0x4001d4d	       284	dir.c	FUNCTION_11	FOR_1
0x4001cf0	          0x488b33	                    mov rsi, qword [rbx]	       289	dir.c	FUNCTION_11	FOR_1
0x4001cf3	          0x8b4500	                    mov eax, dword [rbp]	       290	dir.c	FUNCTION_11	FOR_1
0x4001cf6	    0x4881fe000000	                              cmp rsi, 0	       292	dir.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4001cfd	            0x7431	                            je 0x4001d30	       292	dir.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4001cff	    0x4881fe000000	                              cmp rsi, 0	       294	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2	CALL_3
0x4001d06	            0x7458	                            je 0x4001d60	       294	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2	CALL_3
0x4001d08	          0x4885f6	                           test rsi, rsi	       296	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3	CALL_4
0x4001d0b	            0x7463	                            je 0x4001d70	       296	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3	CALL_4
0x4001d0d	          0x83f802	                              cmp eax, 2	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001d10	            0x74b6	                            je 0x4001cc8	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001d12	        0x4983ee38	                           sub r14, 0x38	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001d16	        0x4983ef01	                              sub r15, 1	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001d1a	      0x4c39742410	            cmp qword [rsp + 0x10], r14 	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001d1f	     0xf852bfdffff	                           jne 0x4001a50	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001d25	      0xe969feffff	                           jmp 0x4001b93	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001d2a	    0x660f1f440000	                    nop word [rax + rax]	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001d30	            0x85c0	                           test eax, eax	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4001d32	           0xf94c0	                                 sete al	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4001d35	           0xfb6c0	                           movzx eax, al	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4001d38	            0x85c0	                           test eax, eax	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4001d3a	     0xf8440feffff	                            je 0x4001b80	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4001d40	        0x4883c510	                           add rbp, 0x10	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4001d44	        0x4883c310	                           add rbx, 0x10	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4001d48	          0x4839e9	                            cmp rcx, rbp	       284	dir.c	FUNCTION_11	FOR_1
0x4001d4b	            0x75a3	                           jne 0x4001cf0	       284	dir.c	FUNCTION_11	FOR_1
0x4001d4d	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       284	dir.c	FUNCTION_11	FOR_1
0x4001d52	      0xe984fdffff	                           jmp 0x4001adb	       284	dir.c	FUNCTION_11	FOR_1
0x4001d57	    0x660f1f840000	                    nop word [rax + rax]	       284	dir.c	FUNCTION_11	FOR_1
0x4001d60	          0x83f801	                              cmp eax, 1	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4001d63	           0xf94c0	                                 sete al	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4001d66	           0xfb6c0	                           movzx eax, al	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4001d69	            0xebcd	                           jmp 0x4001d38	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4001d6b	       0xf1f440000	                   nop dword [rax + rax]	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4001d70	          0x83f803	                              cmp eax, 3	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4001d73	           0xf94c0	                                 sete al	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4001d76	           0xfb6c0	                           movzx eax, al	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4001d79	            0xebbd	                           jmp 0x4001d38	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4001d7b	       0xf1f440000	                   nop dword [rax + rax]	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4001d80	          0x4c01f3	                            add rbx, r14	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4001d83	      0xe90dfdffff	                           jmp 0x4001a95	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4001d88	     0xf1f84000000	                   nop dword [rax + rax]	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4001d90	      0x41f6450802	                  test byte [r13 + 8], 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001d95	     0xf84c5fdffff	                            je 0x4001b60	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001d9b	        0x418b4d0c	              mov ecx, dword [r13 + 0xc]	       478	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001d9f	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001da2	     0xf84b8fdffff	                            je 0x4001b60	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001da8	          0xf6c201	                              test dl, 1	       479	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001dab	     0xf84affdffff	                            je 0x4001b60	       479	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001db1	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001db5	      0x4a63443014	   movsxd rax, dword [rax + r14 + 0x14] 	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001dba	          0x4889c2	                            mov rdx, rax	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001dbd	      0x4803442428	             add rax, qword [rsp + 0x28]	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001dc2	          0x80382f	                    cmp byte [rax], 0x2f	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001dc5	     0xf8406010000	                            je 0x4001ed1	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001dcb	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	       213	dir.c	FUNCTION_9
0x4001dcf	            0x29d7	                            sub edi, edx	       213	dir.c	FUNCTION_9
0x4001dd1	          0x4863d7	                         movsxd rdx, edi	       213	dir.c	FUNCTION_9
0x4001dd4	          0x4801c2	                            add rdx, rax	       213	dir.c	FUNCTION_9
0x4001dd7	          0x4839c2	                            cmp rdx, rax	       215	dir.c	FUNCTION_9	WHILE_1
0x4001dda	            0x7623	                           jbe 0x4001dff	       215	dir.c	FUNCTION_9	WHILE_1
0x4001ddc	            0x31f6	                            xor esi, esi	       215	dir.c	FUNCTION_9	WHILE_1
0x4001dde	            0xeb05	                           jmp 0x4001de5	       215	dir.c	FUNCTION_9	WHILE_1
0x4001de0	          0x4839c2	                            cmp rdx, rax	       215	dir.c	FUNCTION_9	WHILE_1
0x4001de3	            0x741a	                            je 0x4001dff	       215	dir.c	FUNCTION_9	WHILE_1
0x4001de5	        0x4883c001	                              add rax, 1	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4001de9	        0x8078ff2f	                cmp byte [rax - 1], 0x2f	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4001ded	            0x75f1	                           jne 0x4001de0	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4001def	          0x83c601	                              add esi, 1	       218	dir.c	FUNCTION_9	WHILE_1
0x4001df2	            0x39f1	                            cmp ecx, esi	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4001df4	     0xf8c86fdffff	                            jl 0x4001b80	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4001dfa	          0x4839c2	                            cmp rdx, rax	       215	dir.c	FUNCTION_9	WHILE_1
0x4001dfd	            0x75e6	                           jne 0x4001de5	       215	dir.c	FUNCTION_9	WHILE_1
0x4001dff	      0xba03000000	                              mov edx, 3	       215	dir.c	FUNCTION_9	WHILE_1
0x4001e04	      0xe957fdffff	                           jmp 0x4001b60	       215	dir.c	FUNCTION_9	WHILE_1
0x4001e09	     0xf1f80000000	                         nop dword [rax]	       215	dir.c	FUNCTION_9	WHILE_1
0x4001e10	        0x2b4c2438	             sub ecx, dword [rsp + 0x38]	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4001e14	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4001e19	          0x4889df	                            mov rdi, rbx	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4001e1c	      0x488b742408	                mov rsi, qword [rsp + 8]	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4001e21	      0xe800000000	                          call 0x4001e26	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4001e26	            0x85c0	                           test eax, eax	       379	dir.c	FUNCTION_12	IF_8
0x4001e28	      0xba02000000	                              mov edx, 2	       382	dir.c	FUNCTION_12	IF_8
0x4001e2d	     0xf8422fdffff	                            je 0x4001b55	       379	dir.c	FUNCTION_12	IF_8
0x4001e33	      0xe9dffdffff	                           jmp 0x4001c17	       379	dir.c	FUNCTION_12	IF_8
0x4001e38	     0xf1f84000000	                   nop dword [rax + rax]	       379	dir.c	FUNCTION_12	IF_8
0x4001e40	      0xe800000000	                          call 0x4001e45	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001e45	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001e4a	      0xe9d1fcffff	                           jmp 0x4001b20	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001e4f	              0x90	                                     nop	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001e50	      0xba03000000	                              mov edx, 3	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x4001e55	      0xe9fbfcffff	                           jmp 0x4001b55	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x4001e5a	    0x660f1f440000	                    nop word [rax + rax]	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x4001e60	      0xe800000000	                          call 0x4001e65	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001e65	      0xe9fffdffff	                           jmp 0x4001c69	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001e6a	        0xf6431010	           test byte [rbx + 0x10], 0x10 	        92	pathspec.h	FUNCTION_147	IF_1
0x4001e6e	            0x7578	                           jne 0x4001ee8	        92	pathspec.h	FUNCTION_147	IF_1
0x4001e70	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	        95	pathspec.h	FUNCTION_147	CALL_2
0x4001e75	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        95	pathspec.h	FUNCTION_147	CALL_2
0x4001e7a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        95	pathspec.h	FUNCTION_147	CALL_2
0x4001e7f	      0xe800000000	                          call 0x4001e84	        95	pathspec.h	FUNCTION_147	CALL_2
0x4001e84	            0x85c0	                           test eax, eax	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001e86	     0xf85b1fdffff	                           jne 0x4001c3d	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001e8c	      0xe9bffcffff	                           jmp 0x4001b50	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001e91	     0xf1f80000000	                         nop dword [rax]	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001e98	          0x8d45ff	                      lea eax, [rbp - 1]	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001e9b	        0x3944243c	            cmp dword [rsp + 0x3c], eax 	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001e9f	     0xf8566fdffff	                           jne 0x4001c0b	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001ea5	        0xf6431010	           test byte [rbx + 0x10], 0x10 	        92	pathspec.h	FUNCTION_147	IF_1
0x4001ea9	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001eae	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001eb3	            0x7545	                           jne 0x4001efa	        92	pathspec.h	FUNCTION_147	IF_1
0x4001eb5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        95	pathspec.h	FUNCTION_147	CALL_2
0x4001eba	      0xe800000000	                          call 0x4001ebf	        95	pathspec.h	FUNCTION_147	CALL_2
0x4001ebf	            0x85c0	                           test eax, eax	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001ec1	      0xba03000000	                              mov edx, 3	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x4001ec6	     0xf8489fcffff	                            je 0x4001b55	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001ecc	      0xe93afdffff	                           jmp 0x4001c0b	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001ed1	          0x83c201	                              add edx, 1	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001ed4	          0x4863c2	                         movsxd rax, edx	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001ed7	      0x4803442428	             add rax, qword [rsp + 0x28]	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001edc	      0xe9eafeffff	                           jmp 0x4001dcb	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001ee1	            0x31c0	                            xor eax, eax	       453	dir.c	FUNCTION_13	IF_1	ELSE_1
0x4001ee3	      0xe9cdfcffff	                           jmp 0x4001bb5	       453	dir.c	FUNCTION_13	IF_1	ELSE_1
0x4001ee8	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001eed	          0x4889fa	                            mov rdx, rdi	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001ef0	          0x4889c7	                            mov rdi, rax	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001ef3	      0xe800000000	                          call 0x4001ef8	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001ef8	            0xeb8a	                           jmp 0x4001e84	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001efa	      0xe800000000	                          call 0x4001eff	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001eff	            0xebbe	                           jmp 0x4001ebf	        93	pathspec.h	FUNCTION_147	CALL_1
0x4001f01	      0xbaba010000	                          mov edx, 0x1ba	       435	dir.c	FUNCTION_13
0x4001f06	      0xbe00000000	                              mov esi, 0	       435	dir.c	FUNCTION_13
0x4001f0b	      0xbf00000000	                              mov edi, 0	       435	dir.c	FUNCTION_13
0x4001f10	            0x31c0	                            xor eax, eax	       435	dir.c	FUNCTION_13
0x4001f12	      0xe800000000	                          call 0x4001f17	       435	dir.c	FUNCTION_13
add_excludes_from_blob_to_list	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	34
0x4002970	            0x4154	                                push r12	       909	dir.c	FUNCTION_31
0x4002972	              0x55	                                push rbp	       909	dir.c	FUNCTION_31
0x4002973	          0x4989cc	                            mov r12, rcx	       909	dir.c	FUNCTION_31
0x4002976	              0x53	                                push rbx	       909	dir.c	FUNCTION_31
0x4002977	            0x89d5	                            mov ebp, edx	       909	dir.c	FUNCTION_31
0x4002979	          0x4889f3	                            mov rbx, rsi	       909	dir.c	FUNCTION_31
0x400297c	            0x31f6	                            xor esi, esi	       914	dir.c	FUNCTION_31	CALL_1
0x400297e	        0x4883ec20	                           sub rsp, 0x20	       909	dir.c	FUNCTION_31
0x4002982	      0x488d4c2408	                      lea rcx, [rsp + 8]	       914	dir.c	FUNCTION_31	CALL_1
0x4002987	      0x488d542410	                   lea rdx, [rsp + 0x10]	       914	dir.c	FUNCTION_31	CALL_1
0x400298c	    0x64488b042528	                mov rax, qword fs:[0x28]	       909	dir.c	FUNCTION_31
0x4002995	      0x4889442418	             mov qword [rsp + 0x18], rax	       909	dir.c	FUNCTION_31
0x400299a	            0x31c0	                            xor eax, eax	       909	dir.c	FUNCTION_31
0x400299c	      0xe86fd9ffff	                   call sym.do_read_blob	       914	dir.c	FUNCTION_31	CALL_1
0x40029a1	          0x83f801	                              cmp eax, 1	       915	dir.c	FUNCTION_31	IF_1
0x40029a4	            0x741a	                            je 0x40029c0	       915	dir.c	FUNCTION_31	IF_1
0x40029a6	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       920	dir.c	FUNCTION_31
0x40029ab	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       920	dir.c	FUNCTION_31
0x40029b4	            0x7525	                           jne 0x40029db	       920	dir.c	FUNCTION_31
0x40029b6	        0x4883c420	                           add rsp, 0x20	       920	dir.c	FUNCTION_31
0x40029ba	              0x5b	                                 pop rbx	       920	dir.c	FUNCTION_31
0x40029bb	              0x5d	                                 pop rbp	       920	dir.c	FUNCTION_31
0x40029bc	            0x415c	                                 pop r12	       920	dir.c	FUNCTION_31
0x40029be	              0xc3	                                     ret	       920	dir.c	FUNCTION_31
0x40029bf	              0x90	                                     nop	       920	dir.c	FUNCTION_31
0x40029c0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       918	dir.c	FUNCTION_31	CALL_2
0x40029c5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       918	dir.c	FUNCTION_31	CALL_2
0x40029ca	          0x4d89e0	                             mov r8, r12	       918	dir.c	FUNCTION_31	CALL_2
0x40029cd	            0x89e9	                            mov ecx, ebp	       918	dir.c	FUNCTION_31	CALL_2
0x40029cf	          0x4889da	                            mov rdx, rbx	       918	dir.c	FUNCTION_31	CALL_2
0x40029d2	      0xe809fbffff	       call sym.add_excludes_from_buffer	       918	dir.c	FUNCTION_31	CALL_2
0x40029d7	            0x31c0	                            xor eax, eax	       919	dir.c	FUNCTION_31
0x40029d9	            0xebcb	                           jmp 0x40029a6	       919	dir.c	FUNCTION_31
0x40029db	      0xe800000000	               call sym.add_exclude_list	       920	dir.c	FUNCTION_31
report_path_error	WHILE,0:CALL,1:functions,0:FOR,2:SWITCH,0:DO,0:ELSE,0:IF,4	83
0x4002060	            0x4157	                                push r15	       532	dir.c	FUNCTION_16
0x4002062	            0x4156	                                push r14	       532	dir.c	FUNCTION_16
0x4002064	            0x4155	                                push r13	       532	dir.c	FUNCTION_16
0x4002066	            0x4154	                                push r12	       532	dir.c	FUNCTION_16
0x4002068	              0x55	                                push rbp	       532	dir.c	FUNCTION_16
0x4002069	              0x53	                                push rbx	       532	dir.c	FUNCTION_16
0x400206a	        0x4883ec38	                           sub rsp, 0x38	       532	dir.c	FUNCTION_16
0x400206e	          0x448b36	                   mov r14d, dword [rsi]	       537	dir.c	FUNCTION_16	FOR_1
0x4002071	          0x4585f6	                         test r14d, r14d	       537	dir.c	FUNCTION_16	FOR_1
0x4002074	     0xf8e14010000	                           jle 0x400218e	       537	dir.c	FUNCTION_16	FOR_1
0x400207a	      0x4889742420	             mov qword [rsp + 0x20], rsi	       537	dir.c	FUNCTION_16	FOR_1
0x400207f	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       537	dir.c	FUNCTION_16	FOR_1
0x4002084	          0x4531ff	                          xor r15d, r15d	       537	dir.c	FUNCTION_16	FOR_1
0x4002087	    0x48c744241000	               mov qword [rsp + 0x10], 0	       537	dir.c	FUNCTION_16	FOR_1
0x4002090	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       537	dir.c	FUNCTION_16	FOR_1
0x4002098	     0xf1f84000000	                   nop dword [rax + rax]	       537	dir.c	FUNCTION_16	FOR_1
0x40020a0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40020a5	          0x4589fd	                          mov r13d, r15d	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40020a8	      0x42803c3800	                 cmp byte [rax + r15], 0	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40020ad	     0xf8597000000	                           jne 0x400214a	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40020b3	          0x4585f6	                         test r14d, r14d	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020b6	     0xf8eb8000000	                           jle 0x4002174	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020bc	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020c1	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020c6	      0xbb01000000	                              mov ebx, 1	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020cb	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020cf	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020d4	      0x488b440108	         mov rax, qword [rcx + rax + 8] 	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020d9	        0x4c8d6108	                      lea r12, [rcx + 8]	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020dd	      0x4889442408	                mov qword [rsp + 8], rax	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020e2	            0xeb28	                           jmp 0x400210c	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020e4	         0xf1f4000	                         nop dword [rax]	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020e8	      0x488b742408	                mov rsi, qword [rsp + 8]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x40020ed	        0x498b3c24	                    mov rdi, qword [r12]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x40020f1	      0xe800000000	                          call 0x40020f6	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x40020f6	            0x85c0	                           test eax, eax	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020f8	            0x89de	                            mov esi, ebx	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020fa	            0x744e	                            je 0x400214a	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020fc	          0x83c301	                              add ebx, 1	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40020ff	        0x4983c438	                           add r12, 0x38	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4002103	        0x4883c501	                              add rbp, 1	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4002107	          0x4139f6	                           cmp r14d, esi	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400210a	            0x7e20	                           jle 0x400212c	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400210c	          0x8d43ff	                      lea eax, [rbx - 1]	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x400210f	          0x4139c5	                           cmp r13d, eax	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4002112	            0x7406	                            je 0x400211a	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4002114	        0x807d0000	                       cmp byte [rbp], 0	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4002118	            0x75ce	                           jne 0x40020e8	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x400211a	            0x89de	                            mov esi, ebx	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400211c	        0x4983c438	                           add r12, 0x38	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4002120	          0x83c301	                              add ebx, 1	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4002123	        0x4883c501	                              add rbp, 1	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4002127	          0x4139f6	                           cmp r14d, esi	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400212a	            0x7fe0	                            jg 0x400210c	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400212c	      0x488b742408	                mov rsi, qword [rsp + 8]	       563	dir.c	FUNCTION_16	FOR_1
0x4002131	      0xbf00000000	                              mov edi, 0	       563	dir.c	FUNCTION_16	FOR_1
0x4002136	            0x31c0	                            xor eax, eax	       563	dir.c	FUNCTION_16	FOR_1
0x4002138	      0xe800000000	                          call 0x400213d	       563	dir.c	FUNCTION_16	FOR_1
0x400213d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       563	dir.c	FUNCTION_16	FOR_1
0x4002142	      0x8344242c01	               add dword [rsp + 0x2c], 1	       565	dir.c	FUNCTION_16	FOR_1
0x4002147	          0x448b30	                   mov r14d, dword [rax]	       565	dir.c	FUNCTION_16	FOR_1
0x400214a	        0x418d4701	                      lea eax, [r15 + 1]	       565	dir.c	FUNCTION_16	FOR_1
0x400214e	    0x488344241038	           add qword [rsp + 0x10], 0x38 	       565	dir.c	FUNCTION_16	FOR_1
0x4002154	        0x4983c701	                              add r15, 1	       565	dir.c	FUNCTION_16	FOR_1
0x4002158	          0x4439f0	                           cmp eax, r14d	       537	dir.c	FUNCTION_16	FOR_1
0x400215b	     0xf8c3fffffff	                            jl 0x40020a0	       537	dir.c	FUNCTION_16	FOR_1
0x4002161	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       568	dir.c	FUNCTION_16
0x4002165	        0x4883c438	                           add rsp, 0x38	       568	dir.c	FUNCTION_16
0x4002169	              0x5b	                                 pop rbx	       568	dir.c	FUNCTION_16
0x400216a	              0x5d	                                 pop rbp	       568	dir.c	FUNCTION_16
0x400216b	            0x415c	                                 pop r12	       568	dir.c	FUNCTION_16
0x400216d	            0x415d	                                 pop r13	       568	dir.c	FUNCTION_16
0x400216f	            0x415e	                                 pop r14	       568	dir.c	FUNCTION_16
0x4002171	            0x415f	                                 pop r15	       568	dir.c	FUNCTION_16
0x4002173	              0xc3	                                     ret	       568	dir.c	FUNCTION_16
0x4002174	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       568	dir.c	FUNCTION_16
0x4002179	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       568	dir.c	FUNCTION_16
0x400217e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       568	dir.c	FUNCTION_16
0x4002182	      0x488b440808	         mov rax, qword [rax + rcx + 8] 	       568	dir.c	FUNCTION_16
0x4002187	      0x4889442408	                mov qword [rsp + 8], rax	       568	dir.c	FUNCTION_16
0x400218c	            0xeb9e	                           jmp 0x400212c	       568	dir.c	FUNCTION_16
0x400218e	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       536	dir.c	FUNCTION_16
0x4002196	            0xebc9	                           jmp 0x4002161	       567	dir.c	FUNCTION_16
fspathncmp	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	6
0x40017f0	    0x8b0500000000	            mov eax, dword [0x040017f6] 	        74	dir.c	FUNCTION_3	CALL_2
0x40017f6	            0x85c0	                           test eax, eax	        74	dir.c	FUNCTION_3	CALL_2
0x40017f8	            0x7506	                           jne 0x4001800	        74	dir.c	FUNCTION_3	CALL_2
0x40017fa	      0xe900000000	                           jmp 0x40017ff	        74	dir.c	FUNCTION_3	CALL_2
0x40017ff	              0x90	                                     nop	        74	dir.c	FUNCTION_3	CALL_2
0x4001800	      0xe900000000	                           jmp 0x4001805	        74	dir.c	FUNCTION_3	CALL_2
remove_dir_recursively	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	2
0x4004ed0	            0x31d2	                            xor edx, edx	      2491	dir.c	FUNCTION_79	CALL_1
0x4004ed2	      0xe999c3ffff	              jmp sym.remove_dir_recurse	      2491	dir.c	FUNCTION_79	CALL_1
read_directory	WHILE,0:CALL,10:functions,0:FOR,1:SWITCH,0:DO,0:ELSE,1:IF,9	416
0x40044f0	            0x4157	                                push r15	      2263	dir.c	FUNCTION_72
0x40044f2	            0x4156	                                push r14	      2263	dir.c	FUNCTION_72
0x40044f4	          0x4989d6	                            mov r14, rdx	      2263	dir.c	FUNCTION_72
0x40044f7	            0x4155	                                push r13	      2263	dir.c	FUNCTION_72
0x40044f9	            0x4154	                                push r12	      2263	dir.c	FUNCTION_72
0x40044fb	          0x4d89c7	                             mov r15, r8	      2263	dir.c	FUNCTION_72
0x40044fe	              0x55	                                push rbp	      2263	dir.c	FUNCTION_72
0x40044ff	              0x53	                                push rbx	      2263	dir.c	FUNCTION_72
0x4004500	            0x89cb	                            mov ebx, ecx	      2263	dir.c	FUNCTION_72
0x4004502	          0x4889fd	                            mov rbp, rdi	      2263	dir.c	FUNCTION_72
0x4004505	        0x4883ec58	                           sub rsp, 0x58	      2263	dir.c	FUNCTION_72
0x4004509	      0x4889742408	                mov qword [rsp + 8], rsi	      2263	dir.c	FUNCTION_72
0x400450e	        0x894c2428	             mov dword [rsp + 0x28], ecx	      2263	dir.c	FUNCTION_72
0x4004512	    0x64488b042528	                mov rax, qword fs:[0x28]	      2263	dir.c	FUNCTION_72
0x400451b	      0x4889442448	             mov qword [rsp + 0x48], rax	      2263	dir.c	FUNCTION_72
0x4004520	            0x31c0	                            xor eax, eax	      2263	dir.c	FUNCTION_72
0x4004522	      0xe800000000	                          call 0x4004527	      2265	dir.c	FUNCTION_72	CALL_1
0x4004527	            0x89de	                            mov esi, ebx	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4004529	          0x4c89f7	                            mov rdi, r14	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x400452c	      0x4889442420	             mov qword [rsp + 0x20], rax	      2265	dir.c	FUNCTION_72	CALL_1
0x4004531	      0xe800000000	                          call 0x4004536	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4004536	            0x85c0	                           test eax, eax	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4004538	            0x7426	                            je 0x4004560	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x400453a	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2332	dir.c	FUNCTION_72
0x400453f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2332	dir.c	FUNCTION_72
0x4004548	          0x8b4500	                    mov eax, dword [rbp]	      2331	dir.c	FUNCTION_72
0x400454b	     0xf85d1060000	                           jne 0x4004c22	      2332	dir.c	FUNCTION_72
0x4004551	        0x4883c458	                           add rsp, 0x58	      2332	dir.c	FUNCTION_72
0x4004555	              0x5b	                                 pop rbx	      2332	dir.c	FUNCTION_72
0x4004556	              0x5d	                                 pop rbp	      2332	dir.c	FUNCTION_72
0x4004557	            0x415c	                                 pop r12	      2332	dir.c	FUNCTION_72
0x4004559	            0x415d	                                 pop r13	      2332	dir.c	FUNCTION_72
0x400455b	            0x415e	                                 pop r14	      2332	dir.c	FUNCTION_72
0x400455d	            0x415f	                                 pop r15	      2332	dir.c	FUNCTION_72
0x400455f	              0xc3	                                     ret	      2332	dir.c	FUNCTION_72
0x4004560	    0x4883bd880000	               cmp qword [rbp + 0x88], 0	      2178	dir.c	FUNCTION_71	IF_1
0x4004568	     0xf8422010000	                            je 0x4004690	      2178	dir.c	FUNCTION_71	IF_1
0x400456e	    0x8b0500000000	            mov eax, dword [0x04004574] 	      2180	dir.c	FUNCTION_71	IF_2
0x4004574	            0x85c0	                           test eax, eax	      2180	dir.c	FUNCTION_71	IF_2
0x4004576	     0xf88b4040000	                            js 0x4004a30	      2180	dir.c	FUNCTION_71	IF_2
0x400457c	            0x85c0	                           test eax, eax	      2182	dir.c	FUNCTION_71	IF_3
0x400457e	     0xf850c010000	                           jne 0x4004690	      2182	dir.c	FUNCTION_71	IF_3
0x4004584	    0x448b8d080100	           mov r9d, dword [rbp + 0x108] 	      2201	dir.c	FUNCTION_71	IF_5
0x400458b	          0x4585c9	                           test r9d, r9d	      2201	dir.c	FUNCTION_71	IF_5
0x400458e	     0xf85fc000000	                           jne 0x4004690	      2201	dir.c	FUNCTION_71	IF_5
0x4004594	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      2201	dir.c	FUNCTION_71	IF_5
0x4004599	          0x4585c0	                           test r8d, r8d	      2201	dir.c	FUNCTION_71	IF_5
0x400459c	     0xf85ee000000	                           jne 0x4004690	      2201	dir.c	FUNCTION_71	IF_5
0x40045a2	          0x4d85ff	                           test r15, r15	      2201	dir.c	FUNCTION_71	IF_5
0x40045a5	            0x740b	                            je 0x40045b2	      2201	dir.c	FUNCTION_71	IF_5
0x40045a7	          0x418b3f	                    mov edi, dword [r15]	      2201	dir.c	FUNCTION_71	IF_5
0x40045aa	            0x85ff	                           test edi, edi	      2201	dir.c	FUNCTION_71	IF_5
0x40045ac	     0xf85de000000	                           jne 0x4004690	      2201	dir.c	FUNCTION_71	IF_5
0x40045b2	    0x488b9d880000	            mov rbx, qword [rbp + 0x88] 	      2205	dir.c	FUNCTION_71	IF_6
0x40045b9	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      2205	dir.c	FUNCTION_71	IF_6
0x40045bc	    0x3b8398000000	            cmp eax, dword [rbx + 0x98] 	      2205	dir.c	FUNCTION_71	IF_6
0x40045c2	     0xf85c8000000	                           jne 0x4004690	      2205	dir.c	FUNCTION_71	IF_6
0x40045c8	          0x83e033	                           and eax, 0x33	      2211	dir.c	FUNCTION_71	IF_6
0x40045cb	          0x83f802	                              cmp eax, 2	      2211	dir.c	FUNCTION_71	IF_6
0x40045ce	     0xf85bc000000	                           jne 0x4004690	      2211	dir.c	FUNCTION_71	IF_6
0x40045d4	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      2221	dir.c	FUNCTION_71	IF_7
0x40045d8	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      2221	dir.c	FUNCTION_71	IF_7
0x40045dc	          0x4839f7	                            cmp rdi, rsi	      2221	dir.c	FUNCTION_71	IF_7
0x40045df	            0x740d	                            je 0x40045ee	      2221	dir.c	FUNCTION_71	IF_7
0x40045e1	      0xe800000000	                          call 0x40045e6	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x40045e6	            0x85c0	                           test eax, eax	      2221	dir.c	FUNCTION_71	IF_7
0x40045e8	     0xf85a2000000	                           jne 0x4004690	      2221	dir.c	FUNCTION_71	IF_7
0x40045ee	          0x8b7530	            mov esi, dword [rbp + 0x30] 	      2229	dir.c	FUNCTION_71	IF_8
0x40045f1	            0x85f6	                           test esi, esi	      2229	dir.c	FUNCTION_71	IF_8
0x40045f3	     0xf8597000000	                           jne 0x4004690	      2229	dir.c	FUNCTION_71	IF_8
0x40045f9	      0xe8f2cfffff	               call sym.get_ident_string	      2123	dir.c	FUNCTION_66	CALL_2
0x40045fe	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	      2123	dir.c	FUNCTION_66	CALL_2
0x4004605	          0x4889c6	                            mov rsi, rax	      2123	dir.c	FUNCTION_66	CALL_2
0x4004608	      0xe800000000	                          call 0x400460d	      2123	dir.c	FUNCTION_66	CALL_2
0x400460d	            0x85c0	                           test eax, eax	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x400460f	            0x755a	                           jne 0x400466b	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x4004611	    0x4c8ba5880000	            mov r12, qword [rbp + 0x88] 	      2237	dir.c	FUNCTION_71	IF_10
0x4004618	    0x498b9c24a000	            mov rbx, qword [r12 + 0xa0] 	      2237	dir.c	FUNCTION_71	IF_10
0x4004620	          0x4885db	                           test rbx, rbx	      2237	dir.c	FUNCTION_71	IF_10
0x4004623	     0xf849f050000	                            je 0x4004bc8	      2237	dir.c	FUNCTION_71	IF_10
0x4004629	      0x498d742424	                   lea rsi, [r12 + 0x24]	       975	cache.h	FUNCTION_156	CALL_1
0x400462e	    0x488dbdb40000	                   lea rdi, [rbp + 0xb4]	       975	cache.h	FUNCTION_156	CALL_1
0x4004635	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_156	CALL_1
0x400463a	      0xe800000000	                          call 0x400463f	       975	cache.h	FUNCTION_156	CALL_1
0x400463f	            0x85c0	                           test eax, eax	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x4004641	     0xf85a1040000	                           jne 0x4004ae8	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x4004647	      0x498d742460	                   lea rsi, [r12 + 0x60]	       975	cache.h	FUNCTION_156	CALL_1
0x400464c	    0x488dbdf00000	                   lea rdi, [rbp + 0xf0]	       975	cache.h	FUNCTION_156	CALL_1
0x4004653	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_156	CALL_1
0x4004658	      0xe800000000	                          call 0x400465d	       975	cache.h	FUNCTION_156	CALL_1
0x400465d	            0x85c0	                           test eax, eax	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x400465f	     0xf850b040000	                           jne 0x4004a70	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x4004665	        0x804b4404	                 or byte [rbx + 0x44], 4	      2257	dir.c	FUNCTION_71
0x4004669	            0xeb7d	                           jmp 0x40046e8	      2257	dir.c	FUNCTION_71
0x400466b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_192
0x400466d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_192
0x4004672	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_192
0x4004677	      0xe800000000	                          call 0x400467c	        54	gettext.h	FUNCTION_192
0x400467c	          0x4889c7	                            mov rdi, rax	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x400467f	            0x31c0	                            xor eax, eax	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x4004681	      0xe800000000	                          call 0x4004686	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x4004686	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x4004690	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x4004694	    0x48c785880000	               mov qword [rbp + 0x88], 0	      2276	dir.c	FUNCTION_72	IF_2
0x400469f	            0x85c0	                           test eax, eax	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40046a1	            0x7443	                            je 0x40046e6	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40046a3	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40046a8	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2064	dir.c	FUNCTION_64
0x40046b1	    0x48c744243800	               mov qword [rsp + 0x38], 0	      2064	dir.c	FUNCTION_64
0x40046ba	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2064	dir.c	FUNCTION_64
0x40046c3	          0x4963c5	                        movsxd rax, r13d	      2064	dir.c	FUNCTION_64
0x40046c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2064	dir.c	FUNCTION_64
0x40046d0	    0x41807c06ff2f	         cmp byte [r14 + rax - 1], 0x2f 	      2069	dir.c	FUNCTION_64	WHILE_1
0x40046d6	     0xf8534020000	                           jne 0x4004910	      2069	dir.c	FUNCTION_64	WHILE_1
0x40046dc	        0x4883e801	                              sub rax, 1	      2069	dir.c	FUNCTION_64	WHILE_1
0x40046e0	        0x4183ed01	                             sub r13d, 1	      2069	dir.c	FUNCTION_64	WHILE_1
0x40046e4	            0x75ea	                           jne 0x40046d0	      2069	dir.c	FUNCTION_64	WHILE_1
0x40046e6	            0x31db	                            xor ebx, ebx	      2069	dir.c	FUNCTION_64	WHILE_1
0x40046e8	            0x4157	                                push r15	      2278	dir.c	FUNCTION_72	CALL_5
0x40046ea	            0x6a00	                                  push 0	      2278	dir.c	FUNCTION_72	CALL_5
0x40046ec	          0x4531c9	                            xor r9d, r9d	      2278	dir.c	FUNCTION_72	CALL_5
0x40046ef	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      2278	dir.c	FUNCTION_72	CALL_5
0x40046f3	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2278	dir.c	FUNCTION_72	CALL_5
0x40046f8	          0x4989d8	                             mov r8, rbx	      2278	dir.c	FUNCTION_72	CALL_5
0x40046fb	          0x4c89f2	                            mov rdx, r14	      2278	dir.c	FUNCTION_72	CALL_5
0x40046fe	          0x4889ef	                            mov rdi, rbp	      2278	dir.c	FUNCTION_72	CALL_5
0x4004701	      0xe87aefffff	       call sym.read_directory_recursive	      2278	dir.c	FUNCTION_72	CALL_5
0x4004706	            0x415c	                                 pop r12	      2278	dir.c	FUNCTION_72	CALL_5
0x4004708	            0x415d	                                 pop r13	      2278	dir.c	FUNCTION_72	CALL_5
0x400470a	        0x48637500	                 movsxd rsi, dword [rbp]	      2279	dir.c	FUNCTION_72
0x400470e	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_144	IF_1
0x4004712	            0x7613	                           jbe 0x4004727	      1048	git-compat-util.h	FUNCTION_144	IF_1
0x4004714	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      1049	git-compat-util.h	FUNCTION_144	IF_1
0x4004718	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_144	IF_1
0x400471d	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_144	IF_1
0x4004722	      0xe800000000	                          call 0x4004727	      1049	git-compat-util.h	FUNCTION_144	IF_1
0x4004727	        0x48637508	            movsxd rsi, dword [rbp + 8] 	      2280	dir.c	FUNCTION_72
0x400472b	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_144	IF_1
0x400472f	            0x7613	                           jbe 0x4004744	      1048	git-compat-util.h	FUNCTION_144	IF_1
0x4004731	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1049	git-compat-util.h	FUNCTION_144	IF_1
0x4004735	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_144	IF_1
0x400473a	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_144	IF_1
0x400473f	      0xe800000000	                          call 0x4004744	      1049	git-compat-util.h	FUNCTION_144	IF_1
0x4004744	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      2287	dir.c	FUNCTION_72	IF_4
0x4004747	      0x25a0000000	                           and eax, 0xa0	      2287	dir.c	FUNCTION_72	IF_4
0x400474c	          0x83f820	                           cmp eax, 0x20	      2287	dir.c	FUNCTION_72	IF_4
0x400474f	     0xf841b010000	                            je 0x4004870	      2287	dir.c	FUNCTION_72	IF_4
0x4004755	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	      2304	dir.c	FUNCTION_72	CALL_7
0x400475f	    0x482305000000	             and rax, qword [0x04004766]	      2304	dir.c	FUNCTION_72	CALL_7
0x4004766	    0x48ba00000000	                 movabs rdx, 0x100000000	      2304	dir.c	FUNCTION_72	CALL_7
0x4004770	          0x4839d0	                            cmp rax, rdx	      2304	dir.c	FUNCTION_72	CALL_7
0x4004773	            0x742b	                            je 0x40047a0	      2304	dir.c	FUNCTION_72	CALL_7
0x4004775	      0xe800000000	                          call 0x400477a	      2304	dir.c	FUNCTION_72	CALL_7
0x400477a	      0x482b442420	             sub rax, qword [rsp + 0x20]	      2304	dir.c	FUNCTION_72	CALL_7
0x400477f	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      2304	dir.c	FUNCTION_72	CALL_7
0x4004784	          0x4d89f1	                             mov r9, r14	      2304	dir.c	FUNCTION_72	CALL_7
0x4004787	      0xb900000000	                              mov ecx, 0	      2304	dir.c	FUNCTION_72	CALL_7
0x400478c	      0xbe00090000	                          mov esi, 0x900	      2304	dir.c	FUNCTION_72	CALL_7
0x4004791	      0xbf00000000	                              mov edi, 0	      2304	dir.c	FUNCTION_72	CALL_7
0x4004796	          0x4889c2	                            mov rdx, rax	      2304	dir.c	FUNCTION_72	CALL_7
0x4004799	            0x31c0	                            xor eax, eax	      2304	dir.c	FUNCTION_72	CALL_7
0x400479b	      0xe800000000	                          call 0x40047a0	      2304	dir.c	FUNCTION_72	CALL_7
0x40047a0	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      2305	dir.c	FUNCTION_72	IF_6
0x40047a7	          0x4885ff	                           test rdi, rdi	      2305	dir.c	FUNCTION_72	IF_6
0x40047aa	     0xf848afdffff	                            je 0x400453a	      2305	dir.c	FUNCTION_72	IF_6
0x40047b0	    0x448b1d000000	           mov r11d, dword [0x040047b7] 	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40047b7	          0x4585db	                         test r11d, r11d	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40047ba	     0xf8890020000	                            js 0x4004a50	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40047c0	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047ca	    0x482305000000	             and rax, qword [0x040047d1]	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047d1	    0x48ba00000000	                 movabs rdx, 0x100000000	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047db	          0x4839d0	                            cmp rax, rdx	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047de	            0x7442	                            je 0x4004822	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047e0	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047e6	      0xb900000000	                              mov ecx, 0	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047eb	      0xba00000000	                              mov edx, 0	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047f0	      0xbe10090000	                          mov esi, 0x910	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047f5	              0x50	                                push rax	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047f6	    0x8b87b0000000	            mov eax, dword [rdi + 0xb0] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047fc	              0x50	                                push rax	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40047fd	    0x448b8fac0000	            mov r9d, dword [rdi + 0xac] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004804	            0x31c0	                            xor eax, eax	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004806	    0x448b87a80000	            mov r8d, dword [rdi + 0xa8] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400480d	      0xbf00000000	                              mov edi, 0	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004812	      0xe800000000	                          call 0x4004817	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004817	            0x4159	                                  pop r9	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004819	            0x415a	                                 pop r10	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400481b	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004822	    0x448b05000000	            mov r8d, dword [0x04004829] 	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4004829	      0x488b442408	                mov rax, qword [rsp + 8]	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x400482e	          0x4585c0	                           test r8d, r8d	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4004831	            0x7425	                            je 0x4004858	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4004833	    0x4839b8b80000	            cmp qword [rax + 0xb8], rdi 	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x400483a	     0xf8448030000	                            je 0x4004b88	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4004840	      0xe800000000	                          call 0x4004845	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4004845	    0x48c785880000	               mov qword [rbp + 0x88], 0	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4004850	      0xe9e5fcffff	                           jmp 0x400453a	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4004855	           0xf1f00	                         nop dword [rax]	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4004858	    0x4839b8b80000	            cmp qword [rax + 0xb8], rdi 	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x400485f	            0x75df	                           jne 0x4004840	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x4004861	      0xe9d4fcffff	                           jmp 0x400453a	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x4004866	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x4004870	          0x8b5d00	                    mov ebx, dword [rbp]	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004873	            0x85db	                           test ebx, ebx	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004875	     0xf8e46030000	                           jle 0x4004bc1	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400487b	            0x31d2	                            xor edx, edx	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400487d	      0x4c89742418	             mov qword [rsp + 0x18], r14	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004882	          0x4531ff	                          xor r15d, r15d	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004885	          0x4989ee	                            mov r14, rbp	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004888	            0x31db	                            xor ebx, ebx	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400488a	            0x89d5	                            mov ebp, edx	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400488c	            0xeb38	                           jmp 0x40048c6	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400488e	            0x6690	                                     nop	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004890	          0x4c63e3	                         movsxd r12, ebx	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x4004893	          0x4889d6	                            mov rsi, rdx	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x4004896	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x400489b	        0x49c1e403	                              shl r12, 3	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x400489f	      0x4b8b7c25f8	          mov rdi, qword [r13 + r12 - 8]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40048a4	      0xe800000000	                          call 0x40048a9	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40048a9	            0x85c0	                           test eax, eax	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048ab	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048b0	            0x752e	                           jne 0x40048e0	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048b2	          0x83c301	                              add ebx, 1	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x40048b5	      0x4b89542500	              mov qword [r13 + r12], rdx	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x40048ba	          0x83c501	                              add ebp, 1	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40048bd	        0x4983c708	                              add r15, 8	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40048c1	          0x41392e	                    cmp dword [r14], ebp	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40048c4	            0x7e3a	                           jle 0x4004900	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40048c6	        0x4d8b6e18	            mov r13, qword [r14 + 0x18] 	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40048ca	            0x85db	                           test ebx, ebx	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048cc	      0x4b8b543d00	              mov rdx, qword [r13 + r15]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40048d1	            0x75bd	                           jne 0x4004890	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048d3	          0x4531e4	                          xor r12d, r12d	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048d6	            0xebda	                           jmp 0x40048b2	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048d8	     0xf1f84000000	                   nop dword [rax + rax]	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048e0	          0x4889d7	                            mov rdi, rdx	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048e3	      0xe800000000	                          call 0x40048e8	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048e8	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048ec	    0x4ac704380000	                mov qword [rax + r15], 0	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048f4	            0xebc4	                           jmp 0x40048ba	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40048f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4004900	          0x4c89f5	                            mov rbp, r14	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4004903	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4004908	          0x895d00	                    mov dword [rbp], ebx	      2301	dir.c	FUNCTION_72	IF_4
0x400490b	      0xe945feffff	                           jmp 0x4004755	      2301	dir.c	FUNCTION_72	IF_4
0x4004910	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	      2067	dir.c	FUNCTION_64
0x4004913	          0x4c01f0	                            add rax, r14	      2067	dir.c	FUNCTION_64
0x4004916	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      2067	dir.c	FUNCTION_64
0x400491b	      0x4889442418	             mov qword [rsp + 0x18], rax	      2067	dir.c	FUNCTION_64
0x4004920	          0x4531e4	                          xor r12d, r12d	      2073	dir.c	FUNCTION_64
0x4004923	            0x31db	                            xor ebx, ebx	      2073	dir.c	FUNCTION_64
0x4004925	            0x89ca	                            mov edx, ecx	      2074	dir.c	FUNCTION_64
0x4004927	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      2067	dir.c	FUNCTION_64
0x400492b	      0xb900000000	                              mov ecx, 0	      2074	dir.c	FUNCTION_64
0x4004930	          0x83e2fd	                     and edx, 0xfffffffd	      2074	dir.c	FUNCTION_64
0x4004933	          0x895510	            mov dword [rbp + 0x10], edx 	      2074	dir.c	FUNCTION_64
0x4004936	          0x4889cd	                            mov rbp, rcx	      2074	dir.c	FUNCTION_64
0x4004939	            0xeb7b	                           jmp 0x40049b6	      2074	dir.c	FUNCTION_64
0x400493b	       0xf1f440000	                   nop dword [rax + rax]	      2074	dir.c	FUNCTION_64
0x4004940	        0xc6450000	                       mov byte [rbp], 0	       166	strbuf.h	FUNCTION_181	IF_2
0x4004944	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4004949	          0x4963dc	                        movsxd rbx, r12d	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x400494c	          0x4c89f6	                            mov rsi, r14	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x400494f	          0x4889da	                            mov rdx, rbx	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4004952	      0xe800000000	                          call 0x4004957	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4004957	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x400495c	      0xe800000000	                          call 0x4004961	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x4004961	            0x85c0	                           test eax, eax	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x4004963	     0xf84a7000000	                            je 0x4004a10	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x4004969	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x400496d	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4004972	          0x4c89fa	                            mov rdx, r15	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4004975	      0xe826c8ffff	                  call sym.simplify_away	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x400497a	            0x85c0	                           test eax, eax	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x400497c	     0xf858e000000	                           jne 0x4004a10	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4004982	            0x6a00	                                  push 0	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004984	            0x6a04	                                  push 4	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004986	            0x31f6	                            xor esi, esi	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004988	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400498d	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004992	          0x4d89f9	                             mov r9, r15	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004995	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400499a	          0x4589e0	                           mov r8d, r12d	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400499d	      0xe87ef7ffff	                 call sym.treat_one_path	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x40049a2	            0x85c0	                           test eax, eax	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x40049a4	              0x5a	                                 pop rdx	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x40049a5	              0x59	                                 pop rcx	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x40049a6	            0x7468	                            je 0x4004a10	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x40049a8	          0x4539ec	                          cmp r12d, r13d	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x40049ab	     0xf8db7010000	                           jge 0x4004b68	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x40049b1	      0x488b6c2440	            mov rbp, qword [rsp + 0x40] 	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x40049b6	            0x31ff	                            xor edi, edi	      2076	dir.c	FUNCTION_64	WHILE_2
0x40049b8	          0x4585e4	                         test r12d, r12d	      2076	dir.c	FUNCTION_64	WHILE_2
0x40049bb	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x40049c0	        0x400f95c7	                               setne dil	      2076	dir.c	FUNCTION_64	WHILE_2
0x40049c4	      0xbe2f000000	                           mov esi, 0x2f	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x40049c9	          0x4801df	                            add rdi, rbx	      2076	dir.c	FUNCTION_64	WHILE_2
0x40049cc	          0x4c01f7	                            add rdi, r14	      2076	dir.c	FUNCTION_64	WHILE_2
0x40049cf	          0x4829fa	                            sub rdx, rdi	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x40049d2	      0xe800000000	                          call 0x40049d7	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x40049d7	          0x4189c4	                           mov r12d, eax	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x40049da	    0x48c744243800	               mov qword [rsp + 0x38], 0	       164	strbuf.h	FUNCTION_181
0x40049e3	          0x4529f4	                          sub r12d, r14d	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x40049e6	          0x4885c0	                           test rax, rax	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x40049e9	        0x450f44e5	                        cmove r12d, r13d	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x40049ed	    0x4881fd000000	                              cmp rbp, 0	       165	strbuf.h	FUNCTION_181	IF_2
0x40049f4	     0xf8546ffffff	                           jne 0x4004940	       165	strbuf.h	FUNCTION_181	IF_2
0x40049fa	    0x803d00000000	                cmp byte [0x04004a01], 0	       168	strbuf.h	FUNCTION_181	CALL_2
0x4004a01	     0xf843dffffff	                            je 0x4004944	       168	strbuf.h	FUNCTION_181	CALL_2
0x4004a07	      0xe800000000	                          call 0x4004a0c	       168	strbuf.h	FUNCTION_181	CALL_2
0x4004a0c	         0xf1f4000	                         nop dword [rax]	       168	strbuf.h	FUNCTION_181	CALL_2
0x4004a10	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2096	dir.c	FUNCTION_64	CALL_7
0x4004a15	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      2096	dir.c	FUNCTION_64	CALL_7
0x4004a1a	      0xe800000000	                          call 0x4004a1f	      2096	dir.c	FUNCTION_64	CALL_7
0x4004a1f	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      2097	dir.c	FUNCTION_64
0x4004a23	          0x894510	            mov dword [rbp + 0x10], eax 	      2097	dir.c	FUNCTION_64
0x4004a26	      0xe9dffcffff	                           jmp 0x400470a	      2097	dir.c	FUNCTION_64
0x4004a2b	       0xf1f440000	                   nop dword [rax + rax]	      2097	dir.c	FUNCTION_64
0x4004a30	            0x31f6	                            xor esi, esi	      2181	dir.c	FUNCTION_71	CALL_1
0x4004a32	      0xbf00000000	                              mov edi, 0	      2181	dir.c	FUNCTION_71	CALL_1
0x4004a37	      0xe800000000	                          call 0x4004a3c	      2181	dir.c	FUNCTION_71	CALL_1
0x4004a3c	    0x890500000000	            mov dword [0x04004a42], eax 	      2181	dir.c	FUNCTION_71	CALL_1
0x4004a42	      0xe935fbffff	                           jmp 0x400457c	      2181	dir.c	FUNCTION_71	CALL_1
0x4004a47	    0x660f1f840000	                    nop word [rax + rax]	      2181	dir.c	FUNCTION_71	CALL_1
0x4004a50	      0xbf00000000	                              mov edi, 0	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x4004a55	            0x31f6	                            xor esi, esi	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x4004a57	      0xe800000000	                          call 0x4004a5c	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x4004a5c	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x4004a63	    0x890500000000	            mov dword [0x04004a69], eax 	      2310	dir.c	FUNCTION_72	IF_6	IF_7
0x4004a69	      0xe952fdffff	                           jmp 0x40047c0	      2310	dir.c	FUNCTION_72	IF_6	IF_7
0x4004a6e	            0x6690	                                     nop	      2310	dir.c	FUNCTION_72	IF_6	IF_7
0x4004a70	    0x41838424ac00	               add dword [r12 + 0xac], 1	       767	dir.c	FUNCTION_26
0x4004a79	          0x4889df	                            mov rdi, rbx	       768	dir.c	FUNCTION_26	CALL_1
0x4004a7c	      0xe8bfb5ffff	        call sym.do_invalidate_gitignore	       768	dir.c	FUNCTION_26	CALL_1
0x4004a81	    0x488b95cc0000	            mov rdx, qword [rbp + 0xcc] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004a88	    0x488b85880000	            mov rax, qword [rbp + 0x88] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004a8f	        0x4889503c	             mov qword [rax + 0x3c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4004a93	    0x488b95d40000	            mov rdx, qword [rbp + 0xd4] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004a9a	        0x48895044	             mov qword [rax + 0x44], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4004a9e	    0x488b95dc0000	            mov rdx, qword [rbp + 0xdc] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004aa5	        0x4889504c	             mov qword [rax + 0x4c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4004aa9	    0x488b95e40000	            mov rdx, qword [rbp + 0xe4] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004ab0	        0x48895054	             mov qword [rax + 0x54], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4004ab4	    0x488b95ec0000	            mov rdx, qword [rbp + 0xec] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004abb	        0x4889505c	             mov qword [rax + 0x5c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4004abf	    0x488b95f40000	            mov rdx, qword [rbp + 0xf4] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004ac6	        0x48895064	             mov qword [rax + 0x64], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4004aca	    0x488b95fc0000	            mov rdx, qword [rbp + 0xfc] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004ad1	        0x4889506c	             mov qword [rax + 0x6c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4004ad5	    0x8b9504010000	           mov edx, dword [rbp + 0x104] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004adb	          0x895074	             mov dword [rax + 0x74], edx	      2253	dir.c	FUNCTION_71	IF_12
0x4004ade	      0xe982fbffff	                           jmp 0x4004665	      2253	dir.c	FUNCTION_71	IF_12
0x4004ae3	       0xf1f440000	                   nop dword [rax + rax]	      2253	dir.c	FUNCTION_71	IF_12
0x4004ae8	    0x41838424ac00	               add dword [r12 + 0xac], 1	       767	dir.c	FUNCTION_26
0x4004af1	          0x4889df	                            mov rdi, rbx	       768	dir.c	FUNCTION_26	CALL_1
0x4004af4	      0xe847b5ffff	        call sym.do_invalidate_gitignore	       768	dir.c	FUNCTION_26	CALL_1
0x4004af9	    0x488b95900000	            mov rdx, qword [rbp + 0x90] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004b00	    0x488b85880000	            mov rax, qword [rbp + 0x88] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004b07	          0x488910	                    mov qword [rax], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004b0a	    0x488b95980000	            mov rdx, qword [rbp + 0x98] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004b11	        0x48895008	                mov qword [rax + 8], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004b15	    0x488b95a00000	            mov rdx, qword [rbp + 0xa0] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004b1c	        0x48895010	             mov qword [rax + 0x10], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004b20	    0x488b95a80000	            mov rdx, qword [rbp + 0xa8] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004b27	        0x48895018	             mov qword [rax + 0x18], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004b2b	    0x488b95b00000	            mov rdx, qword [rbp + 0xb0] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004b32	        0x48895020	             mov qword [rax + 0x20], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004b36	    0x488b95b80000	            mov rdx, qword [rbp + 0xb8] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004b3d	        0x48895028	             mov qword [rax + 0x28], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004b41	    0x488b95c00000	            mov rdx, qword [rbp + 0xc0] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004b48	        0x48895030	             mov qword [rax + 0x30], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004b4c	    0x8b95c8000000	            mov edx, dword [rbp + 0xc8] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004b52	          0x895038	             mov dword [rax + 0x38], edx	      2248	dir.c	FUNCTION_71	IF_11
0x4004b55	    0x4c8ba5880000	            mov r12, qword [rbp + 0x88] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004b5c	      0xe9e6faffff	                           jmp 0x4004647	      2248	dir.c	FUNCTION_71	IF_11
0x4004b61	     0xf1f80000000	                         nop dword [rax]	      2248	dir.c	FUNCTION_71	IF_11
0x4004b68	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2096	dir.c	FUNCTION_64	CALL_7
0x4004b6d	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      2096	dir.c	FUNCTION_64	CALL_7
0x4004b72	      0xe800000000	                          call 0x4004b77	      2096	dir.c	FUNCTION_64	CALL_7
0x4004b77	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      2097	dir.c	FUNCTION_64
0x4004b7b	          0x894510	            mov dword [rbp + 0x10], eax 	      2097	dir.c	FUNCTION_64
0x4004b7e	      0xe963fbffff	                           jmp 0x40046e6	      2097	dir.c	FUNCTION_64
0x4004b83	       0xf1f440000	                   nop dword [rax + rax]	      2097	dir.c	FUNCTION_64
0x4004b88	    0x8bb7b4000000	            mov esi, dword [rdi + 0xb4] 	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4004b8e	            0x85f6	                           test esi, esi	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4004b90	            0x751e	                           jne 0x4004bb0	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4004b92	    0x8b8fac000000	            mov ecx, dword [rdi + 0xac] 	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x4004b98	            0x85c9	                           test ecx, ecx	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x4004b9a	            0x7514	                           jne 0x4004bb0	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x4004b9c	    0x8b97b0000000	            mov edx, dword [rdi + 0xb0] 	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x4004ba2	            0x85d2	                           test edx, edx	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x4004ba4	     0xf8490f9ffff	                            je 0x400453a	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x4004baa	    0x660f1f440000	                    nop word [rax + rax]	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x4004bb0	      0x488b442408	                mov rax, qword [rsp + 8]	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x4004bb5	    0x814814800000	             or dword [rax + 0x14], 0x80	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x4004bbc	      0xe979f9ffff	                           jmp 0x400453a	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x4004bc1	            0x31db	                            xor ebx, ebx	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004bc3	      0xe940fdffff	                           jmp 0x4004908	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004bc8	      0xbf60000000	                           mov edi, 0x60	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x4004bcd	      0xe800000000	                          call 0x4004bd2	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x4004bd2	    0x49898424a000	             mov qword [r12 + 0xa0], rax	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x4004bda	    0x488b85880000	            mov rax, qword [rbp + 0x88] 	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x4004be1	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	        90	string3.h	FUNCTION_106	CALL_6
0x4004be8	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_106	CALL_6
0x4004bec	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4004bf3	    0x48c740580000	               mov qword [rax + 0x58], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4004bfb	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_106	CALL_6
0x4004bff	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_106	CALL_6
0x4004c02	          0x8d4860	                   lea ecx, [rax + 0x60]	        90	string3.h	FUNCTION_106	CALL_6
0x4004c05	          0x4889d8	                            mov rax, rbx	        90	string3.h	FUNCTION_106	CALL_6
0x4004c08	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_106	CALL_6
0x4004c0b	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_106	CALL_6
0x4004c0e	    0x4c8ba5880000	            mov r12, qword [rbp + 0x88] 	        90	string3.h	FUNCTION_106	CALL_6
0x4004c15	    0x498b9c24a000	            mov rbx, qword [r12 + 0xa0] 	        90	string3.h	FUNCTION_106	CALL_6
0x4004c1d	      0xe907faffff	                           jmp 0x4004629	        90	string3.h	FUNCTION_106	CALL_6
0x4004c22	      0xe800000000	                          call 0x4004c27	      2332	dir.c	FUNCTION_72
add_untracked	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	39
0x40005e0	          0x4885ff	                           test rdi, rdi	      1796	dir.c	FUNCTION_56	IF_1
0x40005e3	            0x745b	                            je 0x4000640	      1796	dir.c	FUNCTION_56	IF_1
0x40005e5	              0x55	                                push rbp	      1795	dir.c	FUNCTION_56
0x40005e6	              0x53	                                push rbx	      1795	dir.c	FUNCTION_56
0x40005e7	          0x4889f5	                            mov rbp, rsi	      1795	dir.c	FUNCTION_56
0x40005ea	          0x4889fb	                            mov rbx, rdi	      1795	dir.c	FUNCTION_56
0x40005ed	        0x4883ec08	                              sub rsp, 8	      1795	dir.c	FUNCTION_56
0x40005f1	          0x8b4f40	            mov ecx, dword [rdi + 0x40] 	      1798	dir.c	FUNCTION_56
0x40005f4	          0x8b4734	            mov eax, dword [rdi + 0x34] 	      1798	dir.c	FUNCTION_56
0x40005f7	          0x8d5101	                      lea edx, [rcx + 1]	      1798	dir.c	FUNCTION_56
0x40005fa	            0x39c2	                            cmp edx, eax	      1798	dir.c	FUNCTION_56
0x40005fc	            0x7652	                           jbe 0x4000650	      1798	dir.c	FUNCTION_56
0x40005fe	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1798	dir.c	FUNCTION_56
0x4000602	            0xd1e8	                              shr eax, 1	      1798	dir.c	FUNCTION_56
0x4000604	            0x39c2	                            cmp edx, eax	      1798	dir.c	FUNCTION_56
0x4000606	            0x7740	                            ja 0x4000648	      1798	dir.c	FUNCTION_56
0x4000608	          0x894734	             mov dword [rdi + 0x34], eax	      1798	dir.c	FUNCTION_56
0x400060b	            0x89c2	                            mov edx, eax	      1798	dir.c	FUNCTION_56
0x400060d	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1798	dir.c	FUNCTION_56
0x4000611	    0x488d34d50000	                        lea rsi, [rdx*8]	      1798	dir.c	FUNCTION_56
0x4000619	      0xe800000000	                          call 0x400061e	      1798	dir.c	FUNCTION_56
0x400061e	          0x8b4b40	            mov ecx, dword [rbx + 0x40] 	      1798	dir.c	FUNCTION_56
0x4000621	        0x48894308	                mov qword [rbx + 8], rax	      1798	dir.c	FUNCTION_56
0x4000625	          0x8d5101	                      lea edx, [rcx + 1]	      1798	dir.c	FUNCTION_56
0x4000628	          0x895340	             mov dword [rbx + 0x40], edx	      1800	dir.c	FUNCTION_56	CALL_1
0x400062b	        0x488d1cc8	                  lea rbx, [rax + rcx*8]	      1800	dir.c	FUNCTION_56	CALL_1
0x400062f	          0x4889ef	                            mov rdi, rbp	      1800	dir.c	FUNCTION_56	CALL_1
0x4000632	      0xe800000000	                          call 0x4000637	      1800	dir.c	FUNCTION_56	CALL_1
0x4000637	          0x488903	                    mov qword [rbx], rax	      1800	dir.c	FUNCTION_56	CALL_1
0x400063a	        0x4883c408	                              add rsp, 8	      1801	dir.c	FUNCTION_56
0x400063e	              0x5b	                                 pop rbx	      1801	dir.c	FUNCTION_56
0x400063f	              0x5d	                                 pop rbp	      1801	dir.c	FUNCTION_56
0x4000640	            0xf3c3	                                     ret	      1801	dir.c	FUNCTION_56
0x4000642	    0x660f1f440000	                    nop word [rax + rax]	      1801	dir.c	FUNCTION_56
0x4000648	          0x895734	             mov dword [rdi + 0x34], edx	      1798	dir.c	FUNCTION_56
0x400064b	            0xebc0	                           jmp 0x400060d	      1798	dir.c	FUNCTION_56
0x400064d	           0xf1f00	                         nop dword [rax]	      1798	dir.c	FUNCTION_56
0x4000650	        0x488b4708	                mov rax, qword [rdi + 8]	      1798	dir.c	FUNCTION_56
0x4000654	            0xebd2	                           jmp 0x4000628	      1798	dir.c	FUNCTION_56
fspathcmp	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	6
0x40017d0	    0x8b0500000000	            mov eax, dword [0x040017d6] 	        69	dir.c	FUNCTION_2	CALL_2
0x40017d6	            0x85c0	                           test eax, eax	        69	dir.c	FUNCTION_2	CALL_2
0x40017d8	            0x7506	                           jne 0x40017e0	        69	dir.c	FUNCTION_2	CALL_2
0x40017da	      0xe900000000	                           jmp 0x40017df	        69	dir.c	FUNCTION_2	CALL_2
0x40017df	              0x90	                                     nop	        69	dir.c	FUNCTION_2	CALL_2
0x40017e0	      0xe900000000	                           jmp 0x40017e5	        69	dir.c	FUNCTION_2	CALL_2
add_excludes_from_file_to_list	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	2
0x4002960	          0x4531c9	                            xor r9d, r9d	       902	dir.c	FUNCTION_30	CALL_1
0x4002963	      0xe9b8fcffff	                    jmp sym.add_excludes	       902	dir.c	FUNCTION_30	CALL_1
prep_exclude	WHILE,2:CALL,24:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,2:IF,11	298
0x4002f40	            0x4157	                                push r15	      1141	dir.c	FUNCTION_40
0x4002f42	            0x4156	                                push r14	      1141	dir.c	FUNCTION_40
0x4002f44	          0x4989fe	                            mov r14, rdi	      1141	dir.c	FUNCTION_40
0x4002f47	            0x4155	                                push r13	      1141	dir.c	FUNCTION_40
0x4002f49	            0x4154	                                push r12	      1141	dir.c	FUNCTION_40
0x4002f4b	          0x4989d5	                            mov r13, rdx	      1141	dir.c	FUNCTION_40
0x4002f4e	              0x55	                                push rbp	      1141	dir.c	FUNCTION_40
0x4002f4f	              0x53	                                push rbx	      1141	dir.c	FUNCTION_40
0x4002f50	    0x4881eca80000	                           sub rsp, 0xa8	      1141	dir.c	FUNCTION_40
0x4002f57	        0x488b6f60	            mov rbp, qword [rdi + 0x60] 	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002f5b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1141	dir.c	FUNCTION_40
0x4002f64	    0x488984249800	             mov qword [rsp + 0x98], rax	      1141	dir.c	FUNCTION_40
0x4002f6c	            0x31c0	                            xor eax, eax	      1141	dir.c	FUNCTION_40
0x4002f6e	      0x4889742428	             mov qword [rsp + 0x28], rsi	      1141	dir.c	FUNCTION_40
0x4002f73	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1141	dir.c	FUNCTION_40
0x4002f77	          0x4885ed	                           test rbp, rbp	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002f7a	            0x7464	                            je 0x4002fe0	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002f7c	         0xf1f4000	                         nop dword [rax]	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002f80	        0x48635508	            movsxd rdx, dword [rbp + 8] 	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002f84	        0x3b54240c	              cmp edx, dword [rsp + 0xc]	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002f88	            0x7f13	                            jg 0x4002f9d	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002f8a	    0x498bbe800000	            mov rdi, qword [r14 + 0x80] 	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002f91	          0x4c89ee	                            mov rsi, r13	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002f94	      0xe800000000	                          call 0x4002f99	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002f99	            0x85c0	                           test eax, eax	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002f9b	            0x7445	                            je 0x4002fe2	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002f9d	        0x48635d0c	          movsxd rbx, dword [rbp + 0xc] 	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002fa1	        0x488b4500	                    mov rax, qword [rbp]	      1160	dir.c	FUNCTION_40	WHILE_1
0x4002fa5	    0x49c746680000	               mov qword [r14 + 0x68], 0	      1161	dir.c	FUNCTION_40	WHILE_1
0x4002fad	        0x49894660	             mov qword [r14 + 0x60], rax	      1160	dir.c	FUNCTION_40	WHILE_1
0x4002fb1	        0x48c1e305	                              shl rbx, 5	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002fb5	        0x49035e48	             add rbx, qword [r14 + 0x48]	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002fb9	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1162	dir.c	FUNCTION_40	WHILE_1	CALL_2
0x4002fbd	      0xe800000000	                          call 0x4002fc2	      1162	dir.c	FUNCTION_40	WHILE_1	CALL_2
0x4002fc2	          0x4889df	                            mov rdi, rbx	      1163	dir.c	FUNCTION_40	WHILE_1	CALL_3
0x4002fc5	      0xe800000000	                          call 0x4002fca	      1163	dir.c	FUNCTION_40	WHILE_1	CALL_3
0x4002fca	          0x4889ef	                            mov rdi, rbp	      1164	dir.c	FUNCTION_40	WHILE_1	CALL_4
0x4002fcd	      0xe800000000	                          call 0x4002fd2	      1164	dir.c	FUNCTION_40	WHILE_1	CALL_4
0x4002fd2	        0x498b6e60	            mov rbp, qword [r14 + 0x60] 	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002fd6	      0x41836e4001	               sub dword [r14 + 0x40], 1	      1165	dir.c	FUNCTION_40	WHILE_1
0x4002fdb	          0x4885ed	                           test rbp, rbp	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002fde	            0x75a0	                           jne 0x4002f80	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002fe0	            0x31ed	                            xor ebp, ebp	      1141	dir.c	FUNCTION_40
0x4002fe2	      0x49837e6800	               cmp qword [r14 + 0x68], 0	      1169	dir.c	FUNCTION_40	IF_2
0x4002fe7	            0x742f	                            je 0x4003018	      1169	dir.c	FUNCTION_40	IF_2
0x4002fe9	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1287	dir.c	FUNCTION_40
0x4002ff1	    0x644833042528	                xor rax, qword fs:[0x28]	      1287	dir.c	FUNCTION_40
0x4002ffa	     0xf857d040000	                           jne 0x400347d	      1287	dir.c	FUNCTION_40
0x4003000	    0x4881c4a80000	                           add rsp, 0xa8	      1287	dir.c	FUNCTION_40
0x4003007	              0x5b	                                 pop rbx	      1287	dir.c	FUNCTION_40
0x4003008	              0x5d	                                 pop rbp	      1287	dir.c	FUNCTION_40
0x4003009	            0x415c	                                 pop r12	      1287	dir.c	FUNCTION_40
0x400300b	            0x415d	                                 pop r13	      1287	dir.c	FUNCTION_40
0x400300d	            0x415e	                                 pop r14	      1287	dir.c	FUNCTION_40
0x400300f	            0x415f	                                 pop r15	      1287	dir.c	FUNCTION_40
0x4003011	              0xc3	                                     ret	      1287	dir.c	FUNCTION_40
0x4003012	    0x660f1f440000	                    nop word [rax + rax]	      1287	dir.c	FUNCTION_40
0x4003018	    0x4983be800000	               cmp qword [r14 + 0x80], 0	      1177	dir.c	FUNCTION_40	IF_3
0x4003020	        0x498d4670	                   lea rax, [r14 + 0x70]	      1178	dir.c	FUNCTION_40	CALL_5
0x4003024	      0x4889442420	             mov qword [rsp + 0x20], rax	      1178	dir.c	FUNCTION_40	CALL_5
0x4003029	     0xf840d040000	                            je 0x400343c	      1177	dir.c	FUNCTION_40	IF_3
0x400302f	          0x4885ed	                           test rbp, rbp	      1181	dir.c	FUNCTION_40
0x4003032	     0xf84ae030000	                            je 0x40033e6	      1181	dir.c	FUNCTION_40
0x4003038	        0x4c636508	            movsxd r12, dword [rbp + 8] 	      1181	dir.c	FUNCTION_40
0x400303c	        0x498b5670	            mov rdx, qword [r14 + 0x70] 	       162	strbuf.h	FUNCTION_181	IF_1
0x4003040	      0xb800000000	                              mov eax, 0	      1182	dir.c	FUNCTION_40	CALL_6
0x4003045	          0x4585e4	                         test r12d, r12d	      1182	dir.c	FUNCTION_40	CALL_6
0x4003048	        0x490f49c4	                         cmovns rax, r12	      1182	dir.c	FUNCTION_40	CALL_6
0x400304c	          0x4885d2	                           test rdx, rdx	       162	strbuf.h	FUNCTION_181	IF_1
0x400304f	            0x7404	                            je 0x4003055	       162	strbuf.h	FUNCTION_181	IF_1
0x4003051	        0x4883ea01	                              sub rdx, 1	       162	strbuf.h	FUNCTION_181	IF_1
0x4003055	          0x4839c2	                            cmp rdx, rax	       162	strbuf.h	FUNCTION_181	IF_1
0x4003058	     0xf8213040000	                            jb 0x4003471	       162	strbuf.h	FUNCTION_181	IF_1
0x400305e	    0x498b96800000	            mov rdx, qword [r14 + 0x80] 	       165	strbuf.h	FUNCTION_181	IF_2
0x4003065	        0x49894678	             mov qword [r14 + 0x78], rax	       164	strbuf.h	FUNCTION_181
0x4003069	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_181	IF_2
0x4003070	     0xf848d030000	                            je 0x4003403	       165	strbuf.h	FUNCTION_181	IF_2
0x4003076	        0xc6040200	                 mov byte [rdx + rax], 0	       166	strbuf.h	FUNCTION_181	IF_2
0x400307a	    0x498b86880000	            mov rax, qword [r14 + 0x88] 	      1183	dir.c	FUNCTION_40	IF_4
0x4003081	          0x4885c0	                           test rax, rax	      1183	dir.c	FUNCTION_40	IF_4
0x4003084	     0xf848e030000	                            je 0x4003418	      1183	dir.c	FUNCTION_40	IF_4
0x400308a	          0x4885ed	                           test rbp, rbp	      1184	dir.c	FUNCTION_40	IF_4
0x400308d	     0xf849d030000	                            je 0x4003430	      1184	dir.c	FUNCTION_40	IF_4
0x4003093	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      1184	dir.c	FUNCTION_40	IF_4
0x4003097	            0xeb0f	                           jmp 0x40030a8	      1184	dir.c	FUNCTION_40	IF_4
0x4003099	     0xf1f80000000	                         nop dword [rax]	      1184	dir.c	FUNCTION_40	IF_4
0x40030a0	        0x448b6308	               mov r12d, dword [rbx + 8]	      1284	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40030a4	        0x49895e60	             mov qword [r14 + 0x60], rbx	      1283	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40030a8	      0x443964240c	            cmp dword [rsp + 0xc], r12d 	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40030ad	     0xf8efd020000	                           jle 0x40033b0	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40030b3	      0xbe18000000	                           mov esi, 0x18	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x40030b8	      0xbf01000000	                              mov edi, 1	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x40030bd	      0xe800000000	                          call 0x40030c2	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x40030c2	          0x4585e4	                         test r12d, r12d	      1193	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x40030c5	          0x4889c3	                            mov rbx, rax	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x40030c8	     0xf8862020000	                            js 0x4003330	      1193	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x40030ce	          0x4d63fc	                        movsxd r15, r12d	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x40030d1	      0xbe2f000000	                           mov esi, 0x2f	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x40030d6	      0x4b8d7c3d01	                lea rdi, [r13 + r15 + 1]	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x40030db	      0xe800000000	                          call 0x40030e0	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x40030e0	          0x4885c0	                           test rax, rax	      1198	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	IF_6
0x40030e3	     0xf8465030000	                            je 0x400344e	      1198	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	IF_6
0x40030e9	    0x498bb6880000	            mov rsi, qword [r14 + 0x88] 	      1198	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	IF_6
0x40030f0	        0x4c8d4001	                       lea r8, [rax + 1]	      1204	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x40030f4	      0x4b8d443d00	                    lea rax, [r13 + r15]	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x40030f9	          0x4d29e8	                             sub r8, r13	      1204	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x40030fc	          0x4889c2	                            mov rdx, rax	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x40030ff	      0x4889442418	             mov qword [rsp + 0x18], rax	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x4003104	          0x4489c1	                            mov ecx, r8d	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4003107	    0x488dbea80000	                   lea rdi, [rsi + 0xa8]	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x400310e	          0x4889ee	                            mov rsi, rbp	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4003111	          0x4429e1	                           sub ecx, r12d	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4003114	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4003119	      0xe8d2ddffff	        call sym.lookup_untracked.isra.8	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x400311e	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4003123	          0x4889c5	                            mov rbp, rax	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4003126	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1206	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x400312a	            0x31d2	                            xor edx, edx	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x400312c	        0x44894308	                mov dword [rbx + 8], r8d	      1207	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003130	      0xbe01000000	                              mov esi, 1	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x4003135	          0x4c89f7	                            mov rdi, r14	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x4003138	          0x488903	                    mov qword [rbx], rax	      1206	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x400313b	        0x418b4640	            mov eax, dword [r14 + 0x40] 	      1208	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x400313f	        0x48896b10	             mov qword [rbx + 0x10], rbp	      1209	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003143	          0x89430c	              mov dword [rbx + 0xc], eax	      1208	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003146	      0xe800000000	                          call 0x400314b	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x400314b	          0x8b5308	                mov edx, dword [rbx + 8]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x400314e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4003153	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4003158	      0x4889442410	             mov qword [rsp + 0x10], rax	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x400315d	          0x4429e2	                           sub edx, r12d	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4003160	          0x4863d2	                         movsxd rdx, edx	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4003163	      0xe800000000	                          call 0x4003168	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4003168	        0x48635308	            movsxd rdx, dword [rbx + 8] 	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x400316c	        0x493b5678	            cmp rdx, qword [r14 + 0x78] 	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003170	     0xf85e2020000	                           jne 0x4003458	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003176	            0x85d2	                           test edx, edx	      1215	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003178	            0x7466	                            je 0x40031e0	      1215	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400317a	    0x498b86800000	            mov rax, qword [r14 + 0x80] 	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003181	    0xc74424300400	               mov dword [rsp + 0x30], 4	      1216	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003189	      0x4c8d4c2430	                    lea r9, [rsp + 0x30]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x400318e	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4003193	          0x4c89f7	                            mov rdi, r14	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4003196	      0xc64410ff00	             mov byte [rax + rdx - 1], 0	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400319b	    0x498b96800000	            mov rdx, qword [r14 + 0x80] 	      1221	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031a2	          0x8b4308	                mov eax, dword [rbx + 8]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031a5	        0x4e8d043a	                     lea r8, [rdx + r15]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031a9	          0x8d48ff	                      lea ecx, [rax - 1]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031ac	      0xe8cffcffff	call sym.last_exclude_matching_from_lists	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031b1	        0x49894668	             mov qword [r14 + 0x68], rax	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031b5	        0x48634308	            movsxd rax, dword [rbx + 8] 	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031b9	    0x498b96800000	            mov rdx, qword [r14 + 0x80] 	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031c0	      0xc64402ff2f	         mov byte [rdx + rax - 1], 0x2f 	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031c5	        0x498b4668	            mov rax, qword [r14 + 0x68] 	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031c9	          0x4885c0	                           test rax, rax	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031cc	            0x7412	                            je 0x40031e0	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031ce	        0xf6402410	           test byte [rax + 0x24], 0x10 	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031d2	     0xf8448010000	                            je 0x4003320	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031d8	    0x49c746680000	               mov qword [r14 + 0x68], 0	      1225	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031e0	      0x49837e2800	               cmp qword [r14 + 0x28], 0	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x40031e5	    0x48c744247400	               mov qword [rsp + 0x74], 0	        90	string3.h	FUNCTION_106	CALL_6
0x40031ee	    0x48c744247c00	               mov qword [rsp + 0x7c], 0	        90	string3.h	FUNCTION_106	CALL_6
0x40031f7	    0xc78424840000	               mov dword [rsp + 0x84], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4003202	    0xc78424880000	               mov dword [rsp + 0x88], 0	      1234	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x400320d	     0xf84a5000000	                            je 0x40032b8	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003213	          0x4885ed	                           test rbp, rbp	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003216	     0xf842c010000	                            je 0x4003348	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x400321c	        0xf6454402	               test byte [rbp + 0x44], 2	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003220	            0x741e	                            je 0x4003240	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003222	        0x4c8d6545	                   lea r12, [rbp + 0x45]	      1248	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_16
0x4003226	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_156	CALL_1
0x400322b	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_156	CALL_1
0x4003230	          0x4c89e7	                            mov rdi, r12	       975	cache.h	FUNCTION_156	CALL_1
0x4003233	      0xe800000000	                          call 0x4003238	       975	cache.h	FUNCTION_156	CALL_1
0x4003238	            0x85c0	                           test eax, eax	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x400323a	     0xf8485000000	                            je 0x40032c5	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003240	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x4003245	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x400324a	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003253	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x400325c	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003265	      0xe800000000	                          call 0x400326a	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x400326a	        0x4d8b6628	            mov r12, qword [r14 + 0x28] 	      1259	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_18
0x400326e	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_183	CALL_2
0x4003271	      0xe800000000	                          call 0x4003276	       279	strbuf.h	FUNCTION_183	CALL_2
0x4003276	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       279	strbuf.h	FUNCTION_183	CALL_2
0x400327b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_183	CALL_2
0x400327e	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_183	CALL_2
0x4003281	      0xe800000000	                          call 0x4003286	       279	strbuf.h	FUNCTION_183	CALL_2
0x4003286	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x400328b	            0x31f6	                            xor esi, esi	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x400328d	      0xe800000000	                          call 0x4003292	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4003292	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4003297	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x400329c	        0x48894110	             mov qword [rcx + 0x10], rax	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x40032a0	          0x8b5308	                mov edx, dword [rbx + 8]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x40032a3	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x40032a8	          0x4889c6	                            mov rsi, rax	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x40032ab	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x40032b0	          0x4889c7	                            mov rdi, rax	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x40032b3	      0xe868f3ffff	                   call sym.add_excludes	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x40032b8	          0x4885ed	                           test rbp, rbp	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x40032bb	        0x4c8d6545	                   lea r12, [rbp + 0x45]	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x40032bf	     0xf84dbfdffff	                            je 0x40030a0	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x40032c5	      0x488d7c2474	                   lea rdi, [rsp + 0x74]	       975	cache.h	FUNCTION_156	CALL_1
0x40032ca	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_156	CALL_1
0x40032cf	          0x4c89e6	                            mov rsi, r12	       975	cache.h	FUNCTION_156	CALL_1
0x40032d2	      0xe800000000	                          call 0x40032d7	       975	cache.h	FUNCTION_156	CALL_1
0x40032d7	            0x85c0	                           test eax, eax	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x40032d9	     0xf84c1fdffff	                            je 0x40030a0	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x40032df	    0x498b86880000	            mov rax, qword [r14 + 0x88] 	      1280	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_22
0x40032e6	          0x4889ef	                            mov rdi, rbp	       768	dir.c	FUNCTION_26	CALL_1
0x40032e9	    0x8380ac000000	               add dword [rax + 0xac], 1	       767	dir.c	FUNCTION_26
0x40032f0	      0xe84bcdffff	        call sym.do_invalidate_gitignore	       768	dir.c	FUNCTION_26	CALL_1
0x40032f5	      0x488b442474	            mov rax, qword [rsp + 0x74] 	        53	string3.h	FUNCTION_103	CALL_3
0x40032fa	        0x48894545	            mov qword [rbp + 0x45], rax 	        53	string3.h	FUNCTION_103	CALL_3
0x40032fe	      0x488b44247c	            mov rax, qword [rsp + 0x7c] 	        53	string3.h	FUNCTION_103	CALL_3
0x4003303	        0x4889454d	            mov qword [rbp + 0x4d], rax 	        53	string3.h	FUNCTION_103	CALL_3
0x4003307	    0x8b8424840000	            mov eax, dword [rsp + 0x84] 	        53	string3.h	FUNCTION_103	CALL_3
0x400330e	          0x894555	            mov dword [rbp + 0x55], eax 	        53	string3.h	FUNCTION_103	CALL_3
0x4003311	      0xe98afdffff	                           jmp 0x40030a0	        53	string3.h	FUNCTION_103	CALL_3
0x4003316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        53	string3.h	FUNCTION_103	CALL_3
0x4003320	        0x49895e60	             mov qword [r14 + 0x60], rbx	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4003324	      0xe9c0fcffff	                           jmp 0x4002fe9	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4003329	     0xf1f80000000	                         nop dword [rax]	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4003330	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4003335	          0x4531ff	                          xor r15d, r15d	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4003338	          0x4531c0	                            xor r8d, r8d	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x400333b	          0x4531e4	                          xor r12d, r12d	      1195	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x400333e	      0xe9e3fdffff	                           jmp 0x4003126	      1195	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4003343	       0xf1f440000	                   nop dword [rax + rax]	      1195	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4003348	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x400334d	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x4003352	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x400335b	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003364	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x400336d	      0xe800000000	                          call 0x4003372	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x4003372	        0x4d8b6628	            mov r12, qword [r14 + 0x28] 	      1259	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_18
0x4003376	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_183	CALL_2
0x4003379	      0xe800000000	                          call 0x400337e	       279	strbuf.h	FUNCTION_183	CALL_2
0x400337e	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       279	strbuf.h	FUNCTION_183	CALL_2
0x4003383	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_183	CALL_2
0x4003386	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_183	CALL_2
0x4003389	      0xe800000000	                          call 0x400338e	       279	strbuf.h	FUNCTION_183	CALL_2
0x400338e	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4003393	            0x31f6	                            xor esi, esi	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4003395	      0xe800000000	                          call 0x400339a	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x400339a	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x400339f	          0x4531c9	                            xor r9d, r9d	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x40033a2	        0x48894110	             mov qword [rcx + 0x10], rax	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x40033a6	      0xe9f5feffff	                           jmp 0x40032a0	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x40033ab	       0xf1f440000	                   nop dword [rax + rax]	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x40033b0	        0x498b4670	            mov rax, qword [r14 + 0x70] 	       162	strbuf.h	FUNCTION_181	IF_1
0x40033b4	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      1286	dir.c	FUNCTION_40	CALL_24
0x40033b9	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_181	IF_1
0x40033bd	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_181	IF_1
0x40033c1	          0x4839c2	                            cmp rdx, rax	       162	strbuf.h	FUNCTION_181	IF_1
0x40033c4	     0xf87a7000000	                            ja 0x4003471	       162	strbuf.h	FUNCTION_181	IF_1
0x40033ca	    0x498b86800000	            mov rax, qword [r14 + 0x80] 	       165	strbuf.h	FUNCTION_181	IF_2
0x40033d1	        0x49895678	             mov qword [r14 + 0x78], rdx	       164	strbuf.h	FUNCTION_181
0x40033d5	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_181	IF_2
0x40033db	            0x7442	                            je 0x400341f	       165	strbuf.h	FUNCTION_181	IF_2
0x40033dd	        0xc6041000	                 mov byte [rax + rdx], 0	       166	strbuf.h	FUNCTION_181	IF_2
0x40033e1	      0xe903fcffff	                           jmp 0x4002fe9	       166	strbuf.h	FUNCTION_181	IF_2
0x40033e6	        0x498b5670	            mov rdx, qword [r14 + 0x70] 	       162	strbuf.h	FUNCTION_181	IF_1
0x40033ea	            0x31c0	                            xor eax, eax	      1182	dir.c	FUNCTION_40	CALL_6
0x40033ec	    0x41bcffffffff	                    mov r12d, 0xffffffff	      1181	dir.c	FUNCTION_40
0x40033f2	          0x4885d2	                           test rdx, rdx	       162	strbuf.h	FUNCTION_181	IF_1
0x40033f5	     0xf8556fcffff	                           jne 0x4003051	       162	strbuf.h	FUNCTION_181	IF_1
0x40033fb	          0x4889e8	                            mov rax, rbp	      1182	dir.c	FUNCTION_40	CALL_6
0x40033fe	      0xe95bfcffff	                           jmp 0x400305e	      1182	dir.c	FUNCTION_40	CALL_6
0x4003403	    0x803d00000000	                cmp byte [0x0400340a], 0	       168	strbuf.h	FUNCTION_181	CALL_2
0x400340a	     0xf846afcffff	                            je 0x400307a	       168	strbuf.h	FUNCTION_181	CALL_2
0x4003410	      0xe800000000	                          call 0x4003415	       168	strbuf.h	FUNCTION_181	CALL_2
0x4003415	           0xf1f00	                         nop dword [rax]	       168	strbuf.h	FUNCTION_181	CALL_2
0x4003418	            0x31ed	                            xor ebp, ebp	      1186	dir.c	FUNCTION_40	ELSE_1
0x400341a	      0xe989fcffff	                           jmp 0x40030a8	      1186	dir.c	FUNCTION_40	ELSE_1
0x400341f	    0x803d00000000	                cmp byte [0x04003426], 0	       168	strbuf.h	FUNCTION_181	CALL_2
0x4003426	     0xf84bdfbffff	                            je 0x4002fe9	       168	strbuf.h	FUNCTION_181	CALL_2
0x400342c	            0xebe2	                           jmp 0x4003410	       168	strbuf.h	FUNCTION_181	CALL_2
0x400342e	            0x6690	                                     nop	       168	strbuf.h	FUNCTION_181	CALL_2
0x4003430	    0x488ba8a00000	            mov rbp, qword [rax + 0xa0] 	      1184	dir.c	FUNCTION_40	IF_4
0x4003437	      0xe96cfcffff	                           jmp 0x40030a8	      1184	dir.c	FUNCTION_40	IF_4
0x400343c	      0xbe00100000	                         mov esi, 0x1000	      1178	dir.c	FUNCTION_40	CALL_5
0x4003441	          0x4889c7	                            mov rdi, rax	      1178	dir.c	FUNCTION_40	CALL_5
0x4003444	      0xe800000000	                          call 0x4003449	      1178	dir.c	FUNCTION_40	CALL_5
0x4003449	      0xe9e1fbffff	                           jmp 0x400302f	      1178	dir.c	FUNCTION_40	CALL_5
0x400344e	      0xbf00000000	                              mov edi, 0	      1199	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_9
0x4003453	      0xe800000000	                          call 0x4003458	      1199	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_9
0x4003458	      0xb900000000	                              mov ecx, 0	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x400345d	      0xbabc040000	                          mov edx, 0x4bc	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003462	      0xbe00000000	                              mov esi, 0	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003467	      0xbf00000000	                              mov edi, 0	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x400346c	      0xe800000000	                          call 0x4003471	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003471	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_181	CALL_1
0x4003476	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_181	CALL_1
0x4003478	      0xe800000000	                          call 0x400347d	       163	strbuf.h	FUNCTION_181	CALL_1
0x400347d	      0xe800000000	                          call 0x4003482	      1287	dir.c	FUNCTION_40
treat_one_path	WHILE,0:CALL,6:functions,0:FOR,0:SWITCH,1:DO,0:ELSE,0:IF,5	227
0x4004120	            0x4157	                                push r15	      1663	dir.c	FUNCTION_53
0x4004122	            0x4156	                                push r14	      1663	dir.c	FUNCTION_53
0x4004124	          0x4989ce	                            mov r14, rcx	      1663	dir.c	FUNCTION_53
0x4004127	            0x4155	                                push r13	      1663	dir.c	FUNCTION_53
0x4004129	            0x4154	                                push r12	      1663	dir.c	FUNCTION_53
0x400412b	          0x4d89cd	                             mov r13, r9	      1663	dir.c	FUNCTION_53
0x400412e	              0x55	                                push rbp	      1663	dir.c	FUNCTION_53
0x400412f	              0x53	                                push rbx	      1663	dir.c	FUNCTION_53
0x4004130	          0x4889d3	                            mov rbx, rdx	      1663	dir.c	FUNCTION_53
0x4004133	          0x4889fd	                            mov rbp, rdi	      1663	dir.c	FUNCTION_53
0x4004136	          0x4889df	                            mov rdi, rbx	      1665	dir.c	FUNCTION_53	CALL_1
0x4004139	          0x4589c4	                           mov r12d, r8d	      1663	dir.c	FUNCTION_53
0x400413c	        0x4883ec48	                           sub rsp, 0x48	      1663	dir.c	FUNCTION_53
0x4004140	        0x418b5608	                mov edx, dword [r14 + 8]	      1665	dir.c	FUNCTION_53	CALL_1
0x4004144	      0x4889742408	                mov qword [rsp + 8], rsi	      1663	dir.c	FUNCTION_53
0x4004149	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      1665	dir.c	FUNCTION_53	CALL_1
0x400414d	    0x8b0d00000000	            mov ecx, dword [0x04004153] 	      1665	dir.c	FUNCTION_53	CALL_1
0x4004153	    0x4c8bbc248800	            mov r15, qword [rsp + 0x88] 	      1663	dir.c	FUNCTION_53
0x400415b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1663	dir.c	FUNCTION_53
0x4004164	      0x4889442438	             mov qword [rsp + 0x38], rax	      1663	dir.c	FUNCTION_53
0x4004169	            0x31c0	                            xor eax, eax	      1663	dir.c	FUNCTION_53
0x400416b	      0xe800000000	                          call 0x4004170	      1665	dir.c	FUNCTION_53	CALL_1
0x4004170	          0x4885c0	                           test rax, rax	      1665	dir.c	FUNCTION_53	CALL_1
0x4004173	          0x4889c1	                            mov rcx, rax	      1665	dir.c	FUNCTION_53	CALL_1
0x4004176	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      1668	dir.c	FUNCTION_53	IF_1
0x400417d	        0x410f95c0	                               setne r8b	      1665	dir.c	FUNCTION_53	CALL_1
0x4004181	            0x85c0	                           test eax, eax	      1668	dir.c	FUNCTION_53	IF_1
0x4004183	            0x751d	                           jne 0x40041a2	      1668	dir.c	FUNCTION_53	IF_1
0x4004185	          0x4d85ff	                           test r15, r15	      1637	dir.c	FUNCTION_52
0x4004188	     0xf8402020000	                            je 0x4004390	      1637	dir.c	FUNCTION_52
0x400418e	      0x410fb64712	           movzx eax, byte [r15 + 0x12] 	      1637	dir.c	FUNCTION_52
0x4004193	            0x85c0	                           test eax, eax	      1640	dir.c	FUNCTION_52	IF_1
0x4004195	     0xf84f5010000	                            je 0x4004390	      1640	dir.c	FUNCTION_52	IF_1
0x400419b	    0x898424800000	             mov dword [rsp + 0x80], eax	      1669	dir.c	FUNCTION_53	CALL_2
0x40041a2	          0x83f804	                              cmp eax, 4	      1672	dir.c	FUNCTION_53	IF_2
0x40041a5	            0x7431	                            je 0x40041d8	      1672	dir.c	FUNCTION_53	IF_2
0x40041a7	          0x4584c0	                           test r8b, r8b	      1672	dir.c	FUNCTION_53	IF_2
0x40041aa	            0x742c	                            je 0x40041d8	      1672	dir.c	FUNCTION_53	IF_2
0x40041ac	            0x31c9	                            xor ecx, ecx	      1710	dir.c	FUNCTION_53	SWITCH_1
0x40041ae	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      1734	dir.c	FUNCTION_53
0x40041b3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1734	dir.c	FUNCTION_53
0x40041bc	            0x89c8	                            mov eax, ecx	      1734	dir.c	FUNCTION_53
0x40041be	     0xf85de020000	                           jne 0x40044a2	      1734	dir.c	FUNCTION_53
0x40041c4	        0x4883c448	                           add rsp, 0x48	      1734	dir.c	FUNCTION_53
0x40041c8	              0x5b	                                 pop rbx	      1734	dir.c	FUNCTION_53
0x40041c9	              0x5d	                                 pop rbp	      1734	dir.c	FUNCTION_53
0x40041ca	            0x415c	                                 pop r12	      1734	dir.c	FUNCTION_53
0x40041cc	            0x415d	                                 pop r13	      1734	dir.c	FUNCTION_53
0x40041ce	            0x415e	                                 pop r14	      1734	dir.c	FUNCTION_53
0x40041d0	            0x415f	                                 pop r15	      1734	dir.c	FUNCTION_53
0x40041d2	              0xc3	                                     ret	      1734	dir.c	FUNCTION_53
0x40041d3	       0xf1f440000	                   nop dword [rax + rax]	      1734	dir.c	FUNCTION_53
0x40041d8	        0xf6451040	           test byte [rbp + 0x10], 0x40 	      1693	dir.c	FUNCTION_53	IF_3
0x40041dc	            0x740e	                            je 0x40041ec	      1693	dir.c	FUNCTION_53	IF_3
0x40041de	          0x83f804	                              cmp eax, 4	      1694	dir.c	FUNCTION_53	IF_3
0x40041e1	            0x7509	                           jne 0x40041ec	      1694	dir.c	FUNCTION_53	IF_3
0x40041e3	          0x4885c9	                           test rcx, rcx	      1694	dir.c	FUNCTION_53	IF_3
0x40041e6	     0xf8474010000	                            je 0x4004360	      1694	dir.c	FUNCTION_53	IF_3
0x40041ec	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      1321	dir.c	FUNCTION_42
0x40041f0	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      1321	dir.c	FUNCTION_42
0x40041f8	          0x4889de	                            mov rsi, rbx	      1321	dir.c	FUNCTION_42
0x40041fb	          0x4889ef	                            mov rdi, rbp	      1321	dir.c	FUNCTION_42
0x40041fe	      0xe800000000	                          call 0x4004203	      1321	dir.c	FUNCTION_42
0x4004203	          0x4885c0	                           test rax, rax	      1323	dir.c	FUNCTION_42	IF_1
0x4004206	     0xf8444010000	                            je 0x4004350	      1323	dir.c	FUNCTION_42	IF_1
0x400420c	        0xf6402410	           test byte [rax + 0x24], 0x10 	      1705	dir.c	FUNCTION_53	IF_4
0x4004210	     0xf853a010000	                           jne 0x4004350	      1705	dir.c	FUNCTION_53	IF_4
0x4004216	        0xf6451021	           test byte [rbp + 0x10], 0x21 	      1705	dir.c	FUNCTION_53	IF_4
0x400421a	      0xb902000000	                              mov ecx, 2	      1706	dir.c	FUNCTION_53	IF_4
0x400421f	    0x41bf01000000	                             mov r15d, 1	      1324	dir.c	FUNCTION_42	IF_1
0x4004225	            0x7487	                            je 0x40041ae	      1705	dir.c	FUNCTION_53	IF_4
0x4004227	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      1708	dir.c	FUNCTION_53	SWITCH_1
0x400422e	          0x83f808	                              cmp eax, 8	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4004231	     0xf84e1010000	                            je 0x4004418	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4004237	          0x83f80a	                            cmp eax, 0xa	      1708	dir.c	FUNCTION_53	SWITCH_1
0x400423a	     0xf84d8010000	                            je 0x4004418	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4004240	          0x83f804	                              cmp eax, 4	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4004243	     0xf8563ffffff	                           jne 0x40041ac	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4004249	          0x498b06	                    mov rax, qword [r14]	      1708	dir.c	FUNCTION_53	SWITCH_1
0x400424c	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_180
0x400424f	     0xf85d3010000	                           jne 0x4004428	       141	strbuf.h	FUNCTION_180
0x4004255	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_182	CALL_2
0x400425a	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_182	CALL_2
0x400425d	      0xe800000000	                          call 0x4004262	       228	strbuf.h	FUNCTION_182	CALL_2
0x4004262	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_182	CALL_2
0x4004266	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_182
0x400426a	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_182
0x400426e	        0x49894e08	                mov qword [r14 + 8], rcx	       229	strbuf.h	FUNCTION_182
0x4004272	        0xc604102f	              mov byte [rax + rdx], 0x2f	       229	strbuf.h	FUNCTION_182
0x4004276	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_182
0x400427a	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_182
0x400427e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_182
0x4004282	    0x448b05000000	            mov r8d, dword [0x04004289] 	      1397	dir.c	FUNCTION_47	IF_1
0x4004289	        0x498b4608	                mov rax, qword [r14 + 8]	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x400428d	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      1714	dir.c	FUNCTION_53	SWITCH_1
0x4004291	          0x4585c0	                           test r8d, r8d	      1397	dir.c	FUNCTION_47	IF_1
0x4004294	          0x4989fe	                            mov r14, rdi	      1714	dir.c	FUNCTION_53	SWITCH_1
0x4004297	          0x4889fe	                            mov rsi, rdi	      1398	dir.c	FUNCTION_47	CALL_1
0x400429a	      0x4889442410	             mov qword [rsp + 0x10], rax	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x400429f	          0x8d50ff	                      lea edx, [rax - 1]	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40042a2	          0x4889df	                            mov rdi, rbx	      1398	dir.c	FUNCTION_47	CALL_1
0x40042a5	     0xf85a5010000	                           jne 0x4004450	      1397	dir.c	FUNCTION_47	IF_1
0x40042ab	      0xe810c9ffff	call sym.directory_exists_in_index.part.16	      1397	dir.c	FUNCTION_47	IF_1
0x40042b0	          0x83f801	                              cmp eax, 1	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40042b3	      0xb901000000	                              mov ecx, 1	      1462	dir.c	FUNCTION_48	SWITCH_1
0x40042b8	     0xf84f0feffff	                            je 0x40041ae	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40042be	     0xf82fc000000	                            jb 0x40043c0	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40042c4	            0x31c9	                            xor ecx, ecx	      1465	dir.c	FUNCTION_48	SWITCH_1
0x40042c6	          0x83f802	                              cmp eax, 2	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40042c9	     0xf84dffeffff	                            je 0x40041ae	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40042cf	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40042d2	            0xa804	                              test al, 4	      1504	dir.c	FUNCTION_48	IF_7
0x40042d4	     0xf843e010000	                            je 0x4004418	      1504	dir.c	FUNCTION_48	IF_7
0x40042da	    0x488b85880000	            mov rax, qword [rbp + 0x88] 	      1504	dir.c	FUNCTION_48	IF_7
0x40042e1	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      1507	dir.c	FUNCTION_48	CALL_4
0x40042e5	          0x4963d4	                        movsxd rdx, r12d	      1507	dir.c	FUNCTION_48	CALL_4
0x40042e8	      0x488b742408	                mov rsi, qword [rsp + 8]	      1507	dir.c	FUNCTION_48	CALL_4
0x40042ed	          0x4c01f2	                            add rdx, r14	      1507	dir.c	FUNCTION_48	CALL_4
0x40042f0	    0x488db8a80000	                   lea rdi, [rax + 0xa8]	      1507	dir.c	FUNCTION_48	CALL_4
0x40042f7	          0x4429e1	                           sub ecx, r12d	      1507	dir.c	FUNCTION_48	CALL_4
0x40042fa	      0xe8f1cbffff	        call sym.lookup_untracked.isra.8	      1507	dir.c	FUNCTION_48	CALL_4
0x40042ff	            0x4155	                                push r13	      1514	dir.c	FUNCTION_48	CALL_5
0x4004301	            0x4157	                                push r15	      1514	dir.c	FUNCTION_48	CALL_5
0x4004303	          0x4c89f2	                            mov rdx, r14	      1514	dir.c	FUNCTION_48	CALL_5
0x4004306	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      1514	dir.c	FUNCTION_48	CALL_5
0x400430a	          0x4989c0	                             mov r8, rax	      1507	dir.c	FUNCTION_48	CALL_4
0x400430d	    0x41b901000000	                              mov r9d, 1	      1514	dir.c	FUNCTION_48	CALL_5
0x4004313	          0x4889de	                            mov rsi, rbx	      1514	dir.c	FUNCTION_48	CALL_5
0x4004316	          0x4889ef	                            mov rdi, rbp	      1514	dir.c	FUNCTION_48	CALL_5
0x4004319	      0xe862f3ffff	       call sym.read_directory_recursive	      1514	dir.c	FUNCTION_48	CALL_5
0x400431e	            0x89c1	                            mov ecx, eax	      1514	dir.c	FUNCTION_48	CALL_5
0x4004320	          0x83f902	                              cmp ecx, 2	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004323	              0x58	                                 pop rax	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004324	              0x5a	                                 pop rdx	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004325	     0xf8583feffff	                           jne 0x40041ae	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x400432b	          0x4585ff	                         test r15d, r15d	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x400432e	     0xf857afeffff	                           jne 0x40041ae	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004334	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1726	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004337	      0x2520010000	                          and eax, 0x120	      1726	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x400433c	      0x3d20010000	                          cmp eax, 0x120	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004341	      0xb801000000	                              mov eax, 1	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004346	           0xf44c8	                          cmove ecx, eax	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004349	      0xe960feffff	                           jmp 0x40041ae	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x400434e	            0x6690	                                     nop	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004350	          0x4531ff	                          xor r15d, r15d	      1325	dir.c	FUNCTION_42
0x4004353	      0xe9cffeffff	                           jmp 0x4004227	      1325	dir.c	FUNCTION_42
0x4004358	     0xf1f84000000	                   nop dword [rax + rax]	      1325	dir.c	FUNCTION_42
0x4004360	    0x448b0d000000	            mov r9d, dword [0x04004367] 	      1397	dir.c	FUNCTION_47	IF_1
0x4004367	        0x498b5608	                mov rdx, qword [r14 + 8]	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x400436b	          0x4889df	                            mov rdi, rbx	      1398	dir.c	FUNCTION_47	CALL_1
0x400436e	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x4004372	          0x4585c9	                           test r9d, r9d	      1397	dir.c	FUNCTION_47	IF_1
0x4004375	     0xf85c5000000	                           jne 0x4004440	      1397	dir.c	FUNCTION_47	IF_1
0x400437b	      0xe840c8ffff	call sym.directory_exists_in_index.part.16	      1397	dir.c	FUNCTION_47	IF_1
0x4004380	            0x85c0	                           test eax, eax	      1695	dir.c	FUNCTION_53	IF_3
0x4004382	     0xf8564feffff	                           jne 0x40041ec	      1695	dir.c	FUNCTION_53	IF_3
0x4004388	      0xe91ffeffff	                           jmp 0x40041ac	      1695	dir.c	FUNCTION_53	IF_3
0x400438d	           0xf1f00	                         nop dword [rax]	      1695	dir.c	FUNCTION_53	IF_3
0x4004390	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	      1695	dir.c	FUNCTION_53	IF_3
0x4004394	        0x418b5608	                mov edx, dword [r14 + 8]	      1695	dir.c	FUNCTION_53	IF_3
0x4004398	          0x4889df	                            mov rdi, rbx	      1695	dir.c	FUNCTION_53	IF_3
0x400439b	      0x448844241c	              mov byte [rsp + 0x1c], r8b	      1695	dir.c	FUNCTION_53	IF_3
0x40043a0	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1695	dir.c	FUNCTION_53	IF_3
0x40043a5	      0xe8e6c5ffff	              call sym.get_dtype.part.10	      1695	dir.c	FUNCTION_53	IF_3
0x40043aa	    0x440fb644241c	           movzx r8d, byte [rsp + 0x1c] 	      1695	dir.c	FUNCTION_53	IF_3
0x40043b0	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1695	dir.c	FUNCTION_53	IF_3
0x40043b5	      0xe9e1fdffff	                           jmp 0x400419b	      1695	dir.c	FUNCTION_53	IF_3
0x40043ba	    0x660f1f440000	                    nop word [rax + rax]	      1695	dir.c	FUNCTION_53	IF_3
0x40043c0	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x40043c3	          0x4189c2	                           mov r10d, eax	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x40043c6	        0x4183e202	                             and r10d, 2	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x40043ca	     0xf8502ffffff	                           jne 0x40042d2	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x40043d0	          0x4585ff	                         test r15d, r15d	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x40043d3	            0x7410	                            je 0x40043e5	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x40043d5	            0x89c2	                            mov edx, eax	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x40043d7	    0x81e220010000	                          and edx, 0x120	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x40043dd	    0x81fa20010000	                          cmp edx, 0x120	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x40043e3	            0x7475	                            je 0x400445a	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x40043e5	            0xa808	                              test al, 8	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x40043e7	      0xb901000000	                              mov ecx, 1	      1499	dir.c	FUNCTION_48	SWITCH_1
0x40043ec	     0xf85bcfdffff	                           jne 0x40041ae	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x40043f2	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40043f7	      0xbe00000000	                              mov esi, 0	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40043fc	          0x4c89f7	                            mov rdi, r14	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40043ff	        0x894c2408	                mov dword [rsp + 8], ecx	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4004403	      0xe800000000	                          call 0x4004408	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4004408	            0x85c0	                           test eax, eax	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x400440a	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x400440e	     0xf859afdffff	                           jne 0x40041ae	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4004414	         0xf1f4000	                         nop dword [rax]	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4004418	          0x4489f9	                           mov ecx, r15d	      1706	dir.c	FUNCTION_53	IF_4
0x400441b	            0xf7d9	                                 neg ecx	      1706	dir.c	FUNCTION_53	IF_4
0x400441d	          0x83c103	                              add ecx, 3	      1706	dir.c	FUNCTION_53	IF_4
0x4004420	      0xe989fdffff	                           jmp 0x40041ae	      1706	dir.c	FUNCTION_53	IF_4
0x4004425	           0xf1f00	                         nop dword [rax]	      1706	dir.c	FUNCTION_53	IF_4
0x4004428	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_180
0x400442c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x4004430	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x4004433	     0xf852dfeffff	                           jne 0x4004266	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x4004439	      0xe917feffff	                           jmp 0x4004255	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x400443e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x4004440	      0xe82bc1ffff	call sym.directory_exists_in_index_icase	      1398	dir.c	FUNCTION_47	CALL_1
0x4004445	      0xe936ffffff	                           jmp 0x4004380	      1398	dir.c	FUNCTION_47	CALL_1
0x400444a	    0x660f1f440000	                    nop word [rax + rax]	      1398	dir.c	FUNCTION_47	CALL_1
0x4004450	      0xe81bc1ffff	call sym.directory_exists_in_index_icase	      1398	dir.c	FUNCTION_47	CALL_1
0x4004455	      0xe956feffff	                           jmp 0x40042b0	      1398	dir.c	FUNCTION_47	CALL_1
0x400445a	            0xa804	                              test al, 4	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x400445c	      0xb902000000	                              mov ecx, 2	      1486	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4004461	     0xf8447fdffff	                            je 0x40041ae	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4004467	      0x448954241c	            mov dword [rsp + 0x1c], r10d	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x400446c	            0x4155	                                push r13	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400446e	          0x4889de	                            mov rsi, rbx	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4004471	            0x6a01	                                  push 1	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4004473	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4004477	          0x4889ef	                            mov rdi, rbp	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400447a	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400447f	    0x41b901000000	                              mov r9d, 1	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4004485	          0x4c89f2	                            mov rdx, r14	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4004488	      0xe8f3f1ffff	       call sym.read_directory_recursive	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400448d	              0x5e	                                 pop rsi	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400448e	              0x5f	                                 pop rdi	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400448f	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4004494	            0x89c1	                            mov ecx, eax	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4004496	          0x83f802	                              cmp eax, 2	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4004499	        0x410f45ca	                        cmovne ecx, r10d	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x400449d	      0xe90cfdffff	                           jmp 0x40041ae	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x40044a2	      0xe800000000	                          call 0x40044a7	      1734	dir.c	FUNCTION_53
setup_standard_excludes	WHILE,0:CALL,6:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,4	65
0x4004ee0	              0x55	                                push rbp	      2497	dir.c	FUNCTION_80
0x4004ee1	              0x53	                                push rbx	      2497	dir.c	FUNCTION_80
0x4004ee2	          0x4889fb	                            mov rbx, rdi	      2497	dir.c	FUNCTION_80
0x4004ee5	        0x4883ec08	                              sub rsp, 8	      2497	dir.c	FUNCTION_80
0x4004ee9	    0x48c747280000	               mov qword [rdi + 0x28], 0	      2498	dir.c	FUNCTION_80
0x4004ef1	    0x488b3d000000	            mov rdi, qword [0x04004ef8] 	      2501	dir.c	FUNCTION_80	IF_1
0x4004ef8	          0x4885ff	                           test rdi, rdi	      2501	dir.c	FUNCTION_80	IF_1
0x4004efb	     0xf84af000000	                            je 0x4004fb0	      2501	dir.c	FUNCTION_80	IF_1
0x4004f01	            0x31d2	                            xor edx, edx	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004f03	      0xbe04000000	                              mov esi, 4	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004f08	      0xe800000000	                          call 0x4004f0d	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004f0d	            0x85c0	                           test eax, eax	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004f0f	            0x746f	                            je 0x4004f80	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004f11	    0x488b05000000	            mov rax, qword [0x04004f18] 	      2508	dir.c	FUNCTION_80	IF_3
0x4004f18	            0x8b00	                    mov eax, dword [rax]	      2508	dir.c	FUNCTION_80	IF_3
0x4004f1a	            0x85c0	                           test eax, eax	      2508	dir.c	FUNCTION_80	IF_3
0x4004f1c	            0x7452	                            je 0x4004f70	      2508	dir.c	FUNCTION_80	IF_3
0x4004f1e	    0x488b2d000000	            mov rbp, qword [0x04004f25] 	      2494	dir.c	CALL_4
0x4004f25	          0x4885ed	                           test rbp, rbp	      2494	dir.c	CALL_4
0x4004f28	     0xf84aa000000	                            je 0x4004fd8	      2494	dir.c	CALL_4
0x4004f2e	            0x31d2	                            xor edx, edx	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4004f30	      0xbe04000000	                              mov esi, 4	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4004f35	          0x4889ef	                            mov rdi, rbp	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4004f38	      0xe800000000	                          call 0x4004f3d	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4004f3d	            0x85c0	                           test eax, eax	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4004f3f	            0x752f	                           jne 0x4004f70	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4004f41	    0x4883bb880000	               cmp qword [rbx + 0x88], 0	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4004f49	    0x488d83900000	                   lea rax, [rbx + 0x90]	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4004f50	      0xba00000000	                              mov edx, 0	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4004f55	          0x4889ee	                            mov rsi, rbp	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4004f58	          0x4889df	                            mov rdi, rbx	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4004f5b	        0x480f45d0	                         cmovne rdx, rax	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4004f5f	        0x4883c408	                              add rsp, 8	      2514	dir.c	FUNCTION_80
0x4004f63	              0x5b	                                 pop rbx	      2514	dir.c	FUNCTION_80
0x4004f64	              0x5d	                                 pop rbp	      2514	dir.c	FUNCTION_80
0x4004f65	      0xe936dbffff	        jmp sym.add_excludes_from_file_1	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4004f6a	    0x660f1f440000	                    nop word [rax + rax]	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4004f70	        0x4883c408	                              add rsp, 8	      2514	dir.c	FUNCTION_80
0x4004f74	              0x5b	                                 pop rbx	      2514	dir.c	FUNCTION_80
0x4004f75	              0x5d	                                 pop rbp	      2514	dir.c	FUNCTION_80
0x4004f76	              0xc3	                                     ret	      2514	dir.c	FUNCTION_80
0x4004f77	    0x660f1f840000	                    nop word [rax + rax]	      2514	dir.c	FUNCTION_80
0x4004f80	    0x4883bb880000	               cmp qword [rbx + 0x88], 0	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004f88	    0x488d83cc0000	                   lea rax, [rbx + 0xcc]	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004f8f	    0x488b35000000	            mov rsi, qword [0x04004f96] 	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004f96	      0xba00000000	                              mov edx, 0	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004f9b	          0x4889df	                            mov rdi, rbx	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004f9e	        0x480f45d0	                         cmovne rdx, rax	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004fa2	      0xe8f9daffff	       call sym.add_excludes_from_file_1	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004fa7	      0xe965ffffff	                           jmp 0x4004f11	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004fac	         0xf1f4000	                         nop dword [rax]	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004fb0	      0xbf00000000	                              mov edi, 0	      2502	dir.c	FUNCTION_80	CALL_1
0x4004fb5	      0xe800000000	                          call 0x4004fba	      2502	dir.c	FUNCTION_80	CALL_1
0x4004fba	          0x4885c0	                           test rax, rax	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004fbd	    0x488905000000	            mov qword [0x04004fc4], rax 	      2502	dir.c	FUNCTION_80	CALL_1
0x4004fc4	     0xf8447ffffff	                            je 0x4004f11	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004fca	          0x4889c7	                            mov rdi, rax	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004fcd	      0xe92fffffff	                           jmp 0x4004f01	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004fd2	    0x660f1f440000	                    nop word [rax + rax]	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004fd8	      0xbf00000000	                              mov edi, 0	      2494	dir.c	CALL_4
0x4004fdd	            0x31c0	                            xor eax, eax	      2494	dir.c	CALL_4
0x4004fdf	      0xe800000000	                          call 0x4004fe4	      2494	dir.c	CALL_4
0x4004fe4	          0x4889c5	                            mov rbp, rax	      2494	dir.c	CALL_4
0x4004fe7	    0x488905000000	            mov qword [0x04004fee], rax 	      2494	dir.c	CALL_4
0x4004fee	      0xe93bffffff	                           jmp 0x4004f2e	      2494	dir.c	CALL_4
free_untracked	WHILE,0:CALL,5:functions,0:FOR,2:SWITCH,0:DO,0:ELSE,0:IF,1	43
0x4000170	          0x4885ff	                           test rdi, rdi	      2710	dir.c	FUNCTION_86	IF_1
0x4000173	            0x747b	                            je 0x40001f0	      2710	dir.c	FUNCTION_86	IF_1
0x4000175	            0x4154	                                push r12	      2708	dir.c	FUNCTION_86
0x4000177	              0x55	                                push rbp	      2708	dir.c	FUNCTION_86
0x4000178	          0x4531e4	                          xor r12d, r12d	      2712	dir.c	FUNCTION_86	FOR_1
0x400017b	              0x53	                                push rbx	      2708	dir.c	FUNCTION_86
0x400017c	          0x8b5738	            mov edx, dword [rdi + 0x38] 	      2712	dir.c	FUNCTION_86	FOR_1
0x400017f	            0x31ed	                            xor ebp, ebp	      2712	dir.c	FUNCTION_86	FOR_1
0x4000181	          0x4889fb	                            mov rbx, rdi	      2712	dir.c	FUNCTION_86	FOR_1
0x4000184	            0x85d2	                           test edx, edx	      2712	dir.c	FUNCTION_86	FOR_1
0x4000186	            0x7420	                            je 0x40001a8	      2712	dir.c	FUNCTION_86	FOR_1
0x4000188	     0xf1f84000000	                   nop dword [rax + rax]	      2712	dir.c	FUNCTION_86	FOR_1
0x4000190	          0x488b03	                    mov rax, qword [rbx]	      2713	dir.c	FUNCTION_86	CALL_1
0x4000193	          0x83c501	                              add ebp, 1	      2712	dir.c	FUNCTION_86	FOR_1
0x4000196	        0x4a8b3c20	              mov rdi, qword [rax + r12]	      2713	dir.c	FUNCTION_86	CALL_1
0x400019a	        0x4983c408	                              add r12, 8	      2713	dir.c	FUNCTION_86	CALL_1
0x400019e	      0xe8cdffffff	                 call sym.free_untracked	      2713	dir.c	FUNCTION_86	CALL_1
0x40001a3	          0x396b38	            cmp dword [rbx + 0x38], ebp 	      2712	dir.c	FUNCTION_86	FOR_1
0x40001a6	            0x77e8	                            ja 0x4000190	      2712	dir.c	FUNCTION_86	FOR_1
0x40001a8	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      2714	dir.c	FUNCTION_86	FOR_2
0x40001ab	          0x4531e4	                          xor r12d, r12d	      2714	dir.c	FUNCTION_86	FOR_2
0x40001ae	            0x31ed	                            xor ebp, ebp	      2714	dir.c	FUNCTION_86	FOR_2
0x40001b0	            0x85c0	                           test eax, eax	      2714	dir.c	FUNCTION_86	FOR_2
0x40001b2	            0x741d	                            je 0x40001d1	      2714	dir.c	FUNCTION_86	FOR_2
0x40001b4	         0xf1f4000	                         nop dword [rax]	      2714	dir.c	FUNCTION_86	FOR_2
0x40001b8	        0x488b4308	                mov rax, qword [rbx + 8]	      2715	dir.c	FUNCTION_86	CALL_2
0x40001bc	          0x83c501	                              add ebp, 1	      2714	dir.c	FUNCTION_86	FOR_2
0x40001bf	        0x4a8b3c20	              mov rdi, qword [rax + r12]	      2715	dir.c	FUNCTION_86	CALL_2
0x40001c3	        0x4983c408	                              add r12, 8	      2715	dir.c	FUNCTION_86	CALL_2
0x40001c7	      0xe800000000	                          call 0x40001cc	      2715	dir.c	FUNCTION_86	CALL_2
0x40001cc	          0x396b40	            cmp dword [rbx + 0x40], ebp 	      2714	dir.c	FUNCTION_86	FOR_2
0x40001cf	            0x77e7	                            ja 0x40001b8	      2714	dir.c	FUNCTION_86	FOR_2
0x40001d1	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2716	dir.c	FUNCTION_86	CALL_3
0x40001d5	      0xe800000000	                          call 0x40001da	      2716	dir.c	FUNCTION_86	CALL_3
0x40001da	          0x488b3b	                    mov rdi, qword [rbx]	      2717	dir.c	FUNCTION_86	CALL_4
0x40001dd	      0xe800000000	                          call 0x40001e2	      2717	dir.c	FUNCTION_86	CALL_4
0x40001e2	          0x4889df	                            mov rdi, rbx	      2718	dir.c	FUNCTION_86	CALL_5
0x40001e5	              0x5b	                                 pop rbx	      2719	dir.c	FUNCTION_86
0x40001e6	              0x5d	                                 pop rbp	      2719	dir.c	FUNCTION_86
0x40001e7	            0x415c	                                 pop r12	      2719	dir.c	FUNCTION_86
0x40001e9	      0xe900000000	                           jmp 0x40001ee	      2718	dir.c	FUNCTION_86	CALL_5
0x40001ee	            0x6690	                                     nop	      2718	dir.c	FUNCTION_86	CALL_5
0x40001f0	            0xf3c3	                                     ret	      2718	dir.c	FUNCTION_86	CALL_5
dir_entry_new	WHILE,0:CALL,0:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	36
0x40000f0	            0x4155	                                push r13	      1329	dir.c	FUNCTION_43
0x40000f2	            0x4154	                                push r12	      1329	dir.c	FUNCTION_43
0x40000f4	              0x55	                                push rbp	      1329	dir.c	FUNCTION_43
0x40000f5	              0x53	                                push rbx	      1329	dir.c	FUNCTION_43
0x40000f6	          0x4863de	                         movsxd rbx, esi	      1329	dir.c	FUNCTION_43
0x40000f9	        0x4883ec08	                              sub rsp, 8	      1329	dir.c	FUNCTION_43
0x40000fd	        0x4883fbfb	             cmp rbx, 0xfffffffffffffffb	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4000101	            0x7736	                            ja 0x4000139	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4000103	            0x7448	                            je 0x400014d	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4000105	        0x488d7305	                      lea rsi, [rbx + 5]	      1332	dir.c	FUNCTION_43
0x4000109	          0x4989fd	                            mov r13, rdi	      1332	dir.c	FUNCTION_43
0x400010c	      0xbf01000000	                              mov edi, 1	      1332	dir.c	FUNCTION_43
0x4000111	      0xe800000000	                          call 0x4000116	      1332	dir.c	FUNCTION_43
0x4000116	        0x488d7804	                      lea rdi, [rax + 4]	        53	string3.h	FUNCTION_103	CALL_3
0x400011a	          0x4889c5	                            mov rbp, rax	      1332	dir.c	FUNCTION_43
0x400011d	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_103	CALL_3
0x4000120	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_103	CALL_3
0x4000123	      0xe800000000	                          call 0x4000128	        53	string3.h	FUNCTION_103	CALL_3
0x4000128	          0x895d00	                    mov dword [rbp], ebx	      1333	dir.c	FUNCTION_43
0x400012b	        0x4883c408	                              add rsp, 8	      1335	dir.c	FUNCTION_43
0x400012f	          0x4889e8	                            mov rax, rbp	      1335	dir.c	FUNCTION_43
0x4000132	              0x5b	                                 pop rbx	      1335	dir.c	FUNCTION_43
0x4000133	              0x5d	                                 pop rbp	      1335	dir.c	FUNCTION_43
0x4000134	            0x415c	                                 pop r12	      1335	dir.c	FUNCTION_43
0x4000136	            0x415d	                                 pop r13	      1335	dir.c	FUNCTION_43
0x4000138	              0xc3	                                     ret	      1335	dir.c	FUNCTION_43
0x4000139	          0x4889da	                            mov rdx, rbx	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400013c	      0xbe04000000	                              mov esi, 4	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000141	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000146	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000148	      0xe800000000	                          call 0x400014d	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400014d	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000152	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000156	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400015b	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400015d	      0xe800000000	                          call 0x4000162	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
read_one_dir	WHILE,0:CALL,11:functions,0:FOR,2:SWITCH,0:DO,0:ELSE,0:IF,6	156
0x4000c90	            0x4157	                                push r15	      2754	dir.c	FUNCTION_89
0x4000c92	            0x4156	                                push r14	      2754	dir.c	FUNCTION_89
0x4000c94	      0xb90c000000	                            mov ecx, 0xc	        90	string3.h	FUNCTION_106	CALL_6
0x4000c99	            0x4155	                                push r13	      2754	dir.c	FUNCTION_89
0x4000c9b	            0x4154	                                push r12	      2754	dir.c	FUNCTION_89
0x4000c9d	          0x4989f6	                            mov r14, rsi	      2754	dir.c	FUNCTION_89
0x4000ca0	              0x55	                                push rbp	      2754	dir.c	FUNCTION_89
0x4000ca1	              0x53	                                push rbx	      2754	dir.c	FUNCTION_89
0x4000ca2	          0x4889fd	                            mov rbp, rdi	      2754	dir.c	FUNCTION_89
0x4000ca5	    0x4881ec880000	                           sub rsp, 0x88	      2754	dir.c	FUNCTION_89
0x4000cac	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	      2756	dir.c	FUNCTION_89
0x4000cb0	        0x498b5e30	            mov rbx, qword [r14 + 0x30] 	      2756	dir.c	FUNCTION_89
0x4000cb4	      0x488d542410	                   lea rdx, [rsp + 0x10]	        90	string3.h	FUNCTION_106	CALL_6
0x4000cb9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2754	dir.c	FUNCTION_89
0x4000cc2	      0x4889442478	             mov qword [rsp + 0x78], rax	      2754	dir.c	FUNCTION_89
0x4000cc7	            0x31c0	                            xor eax, eax	      2754	dir.c	FUNCTION_89
0x4000cc9	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_106	CALL_6
0x4000ccc	      0x4889742408	                mov qword [rsp + 8], rsi	      2762	dir.c	FUNCTION_89
0x4000cd1	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_106	CALL_6
0x4000cd4	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2763	dir.c	FUNCTION_89	CALL_2
0x4000cd9	      0xe800000000	                          call 0x4000cde	      2763	dir.c	FUNCTION_89	CALL_2
0x4000cde	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      2764	dir.c	FUNCTION_89	IF_1
0x4000ce3	     0xf826e010000	                            jb 0x4000e57	      2764	dir.c	FUNCTION_89	IF_1
0x4000ce9	      0x804c245404	                 or byte [rsp + 0x54], 4	      2766	dir.c	FUNCTION_89
0x4000cee	            0x85c0	                           test eax, eax	      2769	dir.c	FUNCTION_89	IF_2
0x4000cf0	        0x89442444	             mov dword [rsp + 0x44], eax	      2767	dir.c	FUNCTION_89
0x4000cf4	        0x89442450	             mov dword [rsp + 0x50], eax	      2768	dir.c	FUNCTION_89
0x4000cf8	            0x7414	                            je 0x4000d0e	      2769	dir.c	FUNCTION_89	IF_2
0x4000cfa	            0x89c0	                            mov eax, eax	      2770	dir.c	FUNCTION_89	IF_2
0x4000cfc	    0x488d3cc50000	                        lea rdi, [rax*8]	      2770	dir.c	FUNCTION_89	IF_2
0x4000d04	      0xe800000000	                          call 0x4000d09	      2770	dir.c	FUNCTION_89	IF_2
0x4000d09	      0x4889442418	             mov qword [rsp + 0x18], rax	      2770	dir.c	FUNCTION_89	IF_2
0x4000d0e	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2774	dir.c	FUNCTION_89	CALL_3
0x4000d13	      0xe800000000	                          call 0x4000d18	      2774	dir.c	FUNCTION_89	CALL_3
0x4000d18	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      2775	dir.c	FUNCTION_89	IF_3
0x4000d1d	        0x89442448	             mov dword [rsp + 0x48], eax	      2774	dir.c	FUNCTION_89	CALL_3
0x4000d21	        0x8944244c	             mov dword [rsp + 0x4c], eax	      2774	dir.c	FUNCTION_89	CALL_3
0x4000d25	     0xf822c010000	                            jb 0x4000e57	      2775	dir.c	FUNCTION_89	IF_3
0x4000d2b	            0x89c0	                            mov eax, eax	      2777	dir.c	FUNCTION_89
0x4000d2d	    0x488d3cc50000	                        lea rdi, [rax*8]	      2777	dir.c	FUNCTION_89
0x4000d35	      0xe800000000	                          call 0x4000d3a	      2777	dir.c	FUNCTION_89
0x4000d3a	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2778	dir.c	FUNCTION_89
0x4000d3f	      0x4889442410	             mov qword [rsp + 0x10], rax	      2777	dir.c	FUNCTION_89
0x4000d44	          0x4c89ef	                            mov rdi, r13	      2780	dir.c	FUNCTION_89	CALL_4
0x4000d47	      0xe800000000	                          call 0x4000d4c	      2780	dir.c	FUNCTION_89	CALL_4
0x4000d4c	          0x4863d0	                         movsxd rdx, eax	      2781	dir.c	FUNCTION_89
0x4000d4f	          0x4989c4	                            mov r12, rax	      2780	dir.c	FUNCTION_89	CALL_4
0x4000d52	      0x498d441501	                lea rax, [r13 + rdx + 1]	      2781	dir.c	FUNCTION_89
0x4000d57	        0x493b4630	            cmp rax, qword [r14 + 0x30] 	      2782	dir.c	FUNCTION_89	IF_4
0x4000d5b	      0x4889442408	                mov qword [rsp + 8], rax	      2781	dir.c	FUNCTION_89
0x4000d60	     0xf87f1000000	                            ja 0x4000e57	      2782	dir.c	FUNCTION_89	IF_4
0x4000d66	        0x4883fa9f	             cmp rdx, 0xffffffffffffff9f	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4000d6a	     0xf8764010000	                            ja 0x4000ed4	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4000d70	        0x488d7a60	                   lea rdi, [rdx + 0x60]	      2784	dir.c	FUNCTION_89	CALL_6
0x4000d74	      0xe800000000	                          call 0x4000d79	      2784	dir.c	FUNCTION_89	CALL_6
0x4000d79	          0x4889c3	                            mov rbx, rax	      2784	dir.c	FUNCTION_89	CALL_6
0x4000d7c	        0x48894500	                    mov qword [rbp], rax	      2784	dir.c	FUNCTION_89	CALL_6
0x4000d80	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000d85	      0x418d542401	                      lea edx, [r12 + 1]	        53	string3.h	FUNCTION_103	CALL_3
0x4000d8a	        0x488d7b59	                   lea rdi, [rbx + 0x59]	        53	string3.h	FUNCTION_103	CALL_3
0x4000d8e	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_103	CALL_3
0x4000d91	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000d94	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000d99	          0x4863d2	                         movsxd rdx, edx	        53	string3.h	FUNCTION_103	CALL_3
0x4000d9c	        0x48894308	                mov qword [rbx + 8], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000da0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000da5	        0x48894310	             mov qword [rbx + 0x10], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000da9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000dae	        0x48894318	             mov qword [rbx + 0x18], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000db2	      0x488b442430	            mov rax, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000db7	        0x48894320	             mov qword [rbx + 0x20], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000dbb	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000dc0	        0x48894328	             mov qword [rbx + 0x28], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000dc4	      0x488b442440	            mov rax, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000dc9	        0x48894330	             mov qword [rbx + 0x30], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000dcd	      0x488b442448	            mov rax, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000dd2	        0x48894338	             mov qword [rbx + 0x38], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000dd6	      0x488b442450	            mov rax, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000ddb	        0x48894340	             mov qword [rbx + 0x40], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000ddf	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000de4	        0x48894348	             mov qword [rbx + 0x48], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000de8	      0x488b442460	            mov rax, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000ded	        0x48894350	             mov qword [rbx + 0x50], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000df1	      0x488b442468	            mov rax, qword [rsp + 0x68] 	        53	string3.h	FUNCTION_103	CALL_3
0x4000df6	        0x48894358	             mov qword [rbx + 0x58], rax	        53	string3.h	FUNCTION_103	CALL_3
0x4000dfa	      0xe800000000	                          call 0x4000dff	        53	string3.h	FUNCTION_103	CALL_3
0x4000dff	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      2789	dir.c	FUNCTION_89	FOR_1
0x4000e02	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2787	dir.c	FUNCTION_89
0x4000e07	            0x85d2	                           test edx, edx	      2789	dir.c	FUNCTION_89	FOR_1
0x4000e09	            0x7475	                            je 0x4000e80	      2789	dir.c	FUNCTION_89	FOR_1
0x4000e0b	          0x4531ed	                          xor r13d, r13d	      2789	dir.c	FUNCTION_89	FOR_1
0x4000e0e	          0x4531e4	                          xor r12d, r12d	      2789	dir.c	FUNCTION_89	FOR_1
0x4000e11	            0xeb2a	                           jmp 0x4000e3d	      2789	dir.c	FUNCTION_89	FOR_1
0x4000e13	       0xf1f440000	                   nop dword [rax + rax]	      2789	dir.c	FUNCTION_89	FOR_1
0x4000e18	          0x4889ef	                            mov rdi, rbp	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000e1b	          0x4d89ef	                            mov r15, r13	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000e1e	        0x4183c401	                             add r12d, 1	      2789	dir.c	FUNCTION_89	FOR_1
0x4000e22	        0x4c037b08	                add r15, qword [rbx + 8]	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000e26	        0x4983c508	                              add r13, 8	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000e2a	      0xe800000000	                          call 0x4000e2f	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000e2f	        0x44396340	           cmp dword [rbx + 0x40], r12d 	      2789	dir.c	FUNCTION_89	FOR_1
0x4000e33	          0x498907	                    mov qword [r15], rax	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000e36	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2795	dir.c	FUNCTION_89	FOR_1
0x4000e3b	            0x7643	                           jbe 0x4000e80	      2789	dir.c	FUNCTION_89	FOR_1
0x4000e3d	          0x4889ef	                            mov rdi, rbp	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4000e40	      0xe800000000	                          call 0x4000e45	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4000e45	            0x4898	                                    cdqe	      2791	dir.c	FUNCTION_89	FOR_1
0x4000e47	      0x488d440501	                lea rax, [rbp + rax + 1]	      2791	dir.c	FUNCTION_89	FOR_1
0x4000e4c	        0x493b4630	            cmp rax, qword [r14 + 0x30] 	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x4000e50	      0x4889442408	                mov qword [rsp + 8], rax	      2791	dir.c	FUNCTION_89	FOR_1
0x4000e55	            0x76c1	                           jbe 0x4000e18	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x4000e57	      0xb8ffffffff	                     mov eax, 0xffffffff	      2765	dir.c	FUNCTION_89	IF_1
0x4000e5c	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      2807	dir.c	FUNCTION_89
0x4000e61	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2807	dir.c	FUNCTION_89
0x4000e6a	            0x7579	                           jne 0x4000ee5	      2807	dir.c	FUNCTION_89
0x4000e6c	    0x4881c4880000	                           add rsp, 0x88	      2807	dir.c	FUNCTION_89
0x4000e73	              0x5b	                                 pop rbx	      2807	dir.c	FUNCTION_89
0x4000e74	              0x5d	                                 pop rbp	      2807	dir.c	FUNCTION_89
0x4000e75	            0x415c	                                 pop r12	      2807	dir.c	FUNCTION_89
0x4000e77	            0x415d	                                 pop r13	      2807	dir.c	FUNCTION_89
0x4000e79	            0x415e	                                 pop r14	      2807	dir.c	FUNCTION_89
0x4000e7b	            0x415f	                                 pop r15	      2807	dir.c	FUNCTION_89
0x4000e7d	              0xc3	                                     ret	      2807	dir.c	FUNCTION_89
0x4000e7e	            0x6690	                                     nop	      2807	dir.c	FUNCTION_89
0x4000e80	          0x496306	                 movsxd rax, dword [r14]	      2798	dir.c	FUNCTION_89
0x4000e83	        0x498b5608	                mov rdx, qword [r14 + 8]	      2798	dir.c	FUNCTION_89
0x4000e87	          0x4531e4	                          xor r12d, r12d	      2801	dir.c	FUNCTION_89	FOR_2
0x4000e8a	          0x8d4801	                      lea ecx, [rax + 1]	      2798	dir.c	FUNCTION_89
0x4000e8d	          0x41890e	                    mov dword [r14], ecx	      2798	dir.c	FUNCTION_89
0x4000e90	        0x48891cc2	            mov qword [rdx + rax*8], rbx	      2798	dir.c	FUNCTION_89
0x4000e94	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      2801	dir.c	FUNCTION_89	FOR_2
0x4000e97	        0x49896e28	             mov qword [r14 + 0x28], rbp	      2799	dir.c	FUNCTION_89
0x4000e9b	            0x31ed	                            xor ebp, ebp	      2801	dir.c	FUNCTION_89	FOR_2
0x4000e9d	            0x85c0	                           test eax, eax	      2801	dir.c	FUNCTION_89	FOR_2
0x4000e9f	            0x7515	                           jne 0x4000eb6	      2801	dir.c	FUNCTION_89	FOR_2
0x4000ea1	            0xeb2d	                           jmp 0x4000ed0	      2801	dir.c	FUNCTION_89	FOR_2
0x4000ea3	       0xf1f440000	                   nop dword [rax + rax]	      2801	dir.c	FUNCTION_89	FOR_2
0x4000ea8	        0x4183c401	                             add r12d, 1	      2801	dir.c	FUNCTION_89	FOR_2
0x4000eac	        0x4883c508	                              add rbp, 8	      2801	dir.c	FUNCTION_89	FOR_2
0x4000eb0	        0x44396338	           cmp dword [rbx + 0x38], r12d 	      2801	dir.c	FUNCTION_89	FOR_2
0x4000eb4	            0x761a	                           jbe 0x4000ed0	      2801	dir.c	FUNCTION_89	FOR_2
0x4000eb6	          0x4889ef	                            mov rdi, rbp	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000eb9	          0x48033b	                    add rdi, qword [rbx]	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000ebc	          0x4c89f6	                            mov rsi, r14	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000ebf	      0xe8ccfdffff	                   call sym.read_one_dir	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000ec4	            0x85c0	                           test eax, eax	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4000ec6	            0x79e0	                           jns 0x4000ea8	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4000ec8	            0xeb8d	                           jmp 0x4000e57	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4000eca	    0x660f1f440000	                    nop word [rax + rax]	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4000ed0	            0x31c0	                            xor eax, eax	      2806	dir.c	FUNCTION_89
0x4000ed2	            0xeb88	                           jmp 0x4000e5c	      2806	dir.c	FUNCTION_89
0x4000ed4	      0xbe60000000	                           mov esi, 0x60	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000ed9	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000ede	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000ee0	      0xe800000000	                          call 0x4000ee5	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4000ee5	      0xe800000000	                          call 0x4000eea	      2807	dir.c	FUNCTION_89
write_untracked_extension	WHILE,0:CALL,33:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	174
0x4005140	            0x4156	                                push r14	      2653	dir.c	FUNCTION_85
0x4005142	            0x4155	                                push r13	      2653	dir.c	FUNCTION_85
0x4005144	            0x4154	                                push r12	      2653	dir.c	FUNCTION_85
0x4005146	              0x55	                                push rbp	      2653	dir.c	FUNCTION_85
0x4005147	          0x4889f5	                            mov rbp, rsi	      2653	dir.c	FUNCTION_85
0x400514a	              0x53	                                push rbx	      2653	dir.c	FUNCTION_85
0x400514b	          0x4889fb	                            mov rbx, rdi	      2653	dir.c	FUNCTION_85
0x400514e	    0x4881ec900000	                           sub rsp, 0x90	      2653	dir.c	FUNCTION_85
0x4005155	        0x488b7e78	            mov rdi, qword [rsi + 0x78] 	      2658	dir.c	FUNCTION_85	CALL_1
0x4005159	    0x64488b042528	                mov rax, qword fs:[0x28]	      2653	dir.c	FUNCTION_85
0x4005162	    0x488984248800	             mov qword [rsp + 0x88], rax	      2653	dir.c	FUNCTION_85
0x400516a	            0x31c0	                            xor eax, eax	      2653	dir.c	FUNCTION_85
0x400516c	      0xe800000000	                          call 0x4005171	      2658	dir.c	FUNCTION_85	CALL_1
0x4005171	        0x4883f88b	             cmp rax, 0xffffffffffffff8b	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4005175	          0x4989c5	                            mov r13, rax	      2658	dir.c	FUNCTION_85	CALL_1
0x4005178	     0xf8785020000	                            ja 0x4005403	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400517e	     0xf8493020000	                            je 0x4005417	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4005184	        0x4c8d7075	                   lea r14, [rax + 0x75]	       788	git-compat-util.h	FUNCTION_133
0x4005188	      0xbf01000000	                              mov edi, 1	      2660	dir.c	FUNCTION_85
0x400518d	          0x4c89f6	                            mov rsi, r14	      2660	dir.c	FUNCTION_85
0x4005190	      0xe800000000	                          call 0x4005195	      2660	dir.c	FUNCTION_85
0x4005195	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	        53	string3.h	FUNCTION_103	CALL_3
0x4005199	        0x488d7874	                   lea rdi, [rax + 0x74]	        53	string3.h	FUNCTION_103	CALL_3
0x400519d	          0x4989c4	                            mov r12, rax	      2660	dir.c	FUNCTION_85
0x40051a0	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_103	CALL_3
0x40051a3	      0xe800000000	                          call 0x40051a8	        53	string3.h	FUNCTION_103	CALL_3
0x40051a8	          0x4889ee	                            mov rsi, rbp	      2661	dir.c	FUNCTION_85	CALL_2
0x40051ab	          0x4c89e7	                            mov rdi, r12	      2661	dir.c	FUNCTION_85	CALL_2
0x40051ae	      0xe84db0ffff	              call sym.stat_data_to_disk	      2661	dir.c	FUNCTION_85	CALL_2
0x40051b3	        0x488d753c	                   lea rsi, [rbp + 0x3c]	      2662	dir.c	FUNCTION_85	CALL_3
0x40051b7	      0x498d7c2424	                   lea rdi, [r12 + 0x24]	      2662	dir.c	FUNCTION_85	CALL_3
0x40051bc	      0xe83fb0ffff	              call sym.stat_data_to_disk	      2662	dir.c	FUNCTION_85	CALL_3
0x40051c1	        0x488b4d24	            mov rcx, qword [rbp + 0x24] 	        53	string3.h	FUNCTION_103	CALL_3
0x40051c5	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2667	dir.c	FUNCTION_85	CALL_6
0x40051ca	      0x49894c244c	             mov qword [r12 + 0x4c], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40051cf	        0x488b4d2c	            mov rcx, qword [rbp + 0x2c] 	        53	string3.h	FUNCTION_103	CALL_3
0x40051d3	      0x49894c2454	             mov qword [r12 + 0x54], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40051d8	          0x8b5534	            mov edx, dword [rbp + 0x34] 	        53	string3.h	FUNCTION_103	CALL_3
0x40051db	      0x418954245c	             mov dword [r12 + 0x5c], edx	        53	string3.h	FUNCTION_103	CALL_3
0x40051e0	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	        53	string3.h	FUNCTION_103	CALL_3
0x40051e4	      0x49894c2460	             mov qword [r12 + 0x60], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40051e9	        0x488b4d68	            mov rcx, qword [rbp + 0x68] 	        53	string3.h	FUNCTION_103	CALL_3
0x40051ed	      0x49894c2468	             mov qword [r12 + 0x68], rcx	        53	string3.h	FUNCTION_103	CALL_3
0x40051f2	          0x8b5570	            mov edx, dword [rbp + 0x70] 	        53	string3.h	FUNCTION_103	CALL_3
0x40051f5	      0x4189542470	             mov dword [r12 + 0x70], edx	        53	string3.h	FUNCTION_103	CALL_3
0x40051fa	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      2667	dir.c	FUNCTION_85	CALL_6
0x4005201	    0x8b8598000000	            mov eax, dword [rbp + 0x98] 	        44	bswap.h	FUNCTION_117	CALL_3
0x4005207	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_117	CALL_3
0x4005209	      0x4189442448	             mov dword [r12 + 0x48], eax	      2665	dir.c	FUNCTION_85
0x400520e	      0xe800000000	                          call 0x4005213	      2667	dir.c	FUNCTION_85	CALL_6
0x4005213	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2668	dir.c	FUNCTION_85	CALL_7
0x4005218	          0x4863d0	                         movsxd rdx, eax	      2668	dir.c	FUNCTION_85	CALL_7
0x400521b	          0x4889df	                            mov rdi, rbx	      2668	dir.c	FUNCTION_85	CALL_7
0x400521e	      0xe800000000	                          call 0x4005223	      2668	dir.c	FUNCTION_85	CALL_7
0x4005223	    0x488db5800000	                   lea rsi, [rbp + 0x80]	      2669	dir.c	FUNCTION_85	CALL_8
0x400522a	          0x4889df	                            mov rdi, rbx	      2669	dir.c	FUNCTION_85	CALL_8
0x400522d	      0xe800000000	                          call 0x4005232	      2669	dir.c	FUNCTION_85	CALL_8
0x4005232	          0x4c89f2	                            mov rdx, r14	      2671	dir.c	FUNCTION_85	CALL_9
0x4005235	          0x4c89e6	                            mov rsi, r12	      2671	dir.c	FUNCTION_85	CALL_9
0x4005238	          0x4889df	                            mov rdi, rbx	      2671	dir.c	FUNCTION_85	CALL_9
0x400523b	      0xe800000000	                          call 0x4005240	      2671	dir.c	FUNCTION_85	CALL_9
0x4005240	          0x4c89e7	                            mov rdi, r12	      2672	dir.c	FUNCTION_85
0x4005243	      0xe800000000	                          call 0x4005248	      2672	dir.c	FUNCTION_85
0x4005248	    0x4883bda00000	               cmp qword [rbp + 0xa0], 0	      2674	dir.c	FUNCTION_85	IF_1
0x4005250	     0xf848a010000	                            je 0x40053e0	      2674	dir.c	FUNCTION_85	IF_1
0x4005256	      0x4c8d742420	                   lea r14, [rsp + 0x20]	      2684	dir.c	FUNCTION_85	CALL_15
0x400525b	      0x4c8d6c2438	                   lea r13, [rsp + 0x38]	      2685	dir.c	FUNCTION_85	CALL_16
0x4005260	      0x4c8d642450	                   lea r12, [rsp + 0x50]	      2686	dir.c	FUNCTION_85	CALL_17
0x4005265	    0xc70424000000	                      mov dword [rsp], 0	      2680	dir.c	FUNCTION_85
0x400526c	      0xe800000000	                          call 0x4005271	      2681	dir.c	FUNCTION_85	CALL_12
0x4005271	      0x4889442408	                mov qword [rsp + 8], rax	      2681	dir.c	FUNCTION_85	CALL_12
0x4005276	      0xe800000000	                          call 0x400527b	      2682	dir.c	FUNCTION_85	CALL_13
0x400527b	      0x4889442410	             mov qword [rsp + 0x10], rax	      2682	dir.c	FUNCTION_85	CALL_13
0x4005280	      0xe800000000	                          call 0x4005285	      2683	dir.c	FUNCTION_85	CALL_14
0x4005285	      0xbe00040000	                          mov esi, 0x400	      2684	dir.c	FUNCTION_85	CALL_15
0x400528a	          0x4c89f7	                            mov rdi, r14	      2684	dir.c	FUNCTION_85	CALL_15
0x400528d	      0x4889442418	             mov qword [rsp + 0x18], rax	      2683	dir.c	FUNCTION_85	CALL_14
0x4005292	      0xe800000000	                          call 0x4005297	      2684	dir.c	FUNCTION_85	CALL_15
0x4005297	      0xbe00040000	                          mov esi, 0x400	      2685	dir.c	FUNCTION_85	CALL_16
0x400529c	          0x4c89ef	                            mov rdi, r13	      2685	dir.c	FUNCTION_85	CALL_16
0x400529f	      0xe800000000	                          call 0x40052a4	      2685	dir.c	FUNCTION_85	CALL_16
0x40052a4	      0xbe00040000	                          mov esi, 0x400	      2686	dir.c	FUNCTION_85	CALL_17
0x40052a9	          0x4c89e7	                            mov rdi, r12	      2686	dir.c	FUNCTION_85	CALL_17
0x40052ac	      0xe800000000	                          call 0x40052b1	      2686	dir.c	FUNCTION_85	CALL_17
0x40052b1	    0x488bbda00000	            mov rdi, qword [rbp + 0xa0] 	      2687	dir.c	FUNCTION_85	CALL_18
0x40052b8	          0x4889e6	                            mov rsi, rsp	      2687	dir.c	FUNCTION_85	CALL_18
0x40052bb	      0xe8a0b3ffff	                  call sym.write_one_dir	      2687	dir.c	FUNCTION_85	CALL_18
0x40052c0	        0x48633c24	                 movsxd rdi, dword [rsp]	      2689	dir.c	FUNCTION_85	CALL_19
0x40052c4	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2689	dir.c	FUNCTION_85	CALL_19
0x40052c9	      0xe800000000	                          call 0x40052ce	      2689	dir.c	FUNCTION_85	CALL_19
0x40052ce	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2690	dir.c	FUNCTION_85	CALL_20
0x40052d3	          0x4863d0	                         movsxd rdx, eax	      2690	dir.c	FUNCTION_85	CALL_20
0x40052d6	          0x4889df	                            mov rdi, rbx	      2690	dir.c	FUNCTION_85	CALL_20
0x40052d9	      0xe800000000	                          call 0x40052de	      2690	dir.c	FUNCTION_85	CALL_20
0x40052de	          0x4c89f6	                            mov rsi, r14	      2691	dir.c	FUNCTION_85	CALL_21
0x40052e1	          0x4889df	                            mov rdi, rbx	      2691	dir.c	FUNCTION_85	CALL_21
0x40052e4	      0xe800000000	                          call 0x40052e9	      2691	dir.c	FUNCTION_85	CALL_21
0x40052e9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2692	dir.c	FUNCTION_85	CALL_22
0x40052ee	          0x4889de	                            mov rsi, rbx	      2692	dir.c	FUNCTION_85	CALL_22
0x40052f1	      0xe800000000	                          call 0x40052f6	      2692	dir.c	FUNCTION_85	CALL_22
0x40052f6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2693	dir.c	FUNCTION_85	CALL_23
0x40052fb	          0x4889de	                            mov rsi, rbx	      2693	dir.c	FUNCTION_85	CALL_23
0x40052fe	      0xe800000000	                          call 0x4005303	      2693	dir.c	FUNCTION_85	CALL_23
0x4005303	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2694	dir.c	FUNCTION_85	CALL_24
0x4005308	          0x4889de	                            mov rsi, rbx	      2694	dir.c	FUNCTION_85	CALL_24
0x400530b	      0xe800000000	                          call 0x4005310	      2694	dir.c	FUNCTION_85	CALL_24
0x4005310	          0x4c89ee	                            mov rsi, r13	      2695	dir.c	FUNCTION_85	CALL_25
0x4005313	          0x4889df	                            mov rdi, rbx	      2695	dir.c	FUNCTION_85	CALL_25
0x4005316	      0xe800000000	                          call 0x400531b	      2695	dir.c	FUNCTION_85	CALL_25
0x400531b	          0x4c89e6	                            mov rsi, r12	      2696	dir.c	FUNCTION_85	CALL_26
0x400531e	          0x4889df	                            mov rdi, rbx	      2696	dir.c	FUNCTION_85	CALL_26
0x4005321	      0xe800000000	                          call 0x4005326	      2696	dir.c	FUNCTION_85	CALL_26
0x4005326	          0x488b03	                    mov rax, qword [rbx]	      2696	dir.c	FUNCTION_85	CALL_26
0x4005329	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_180
0x400532c	     0xf848e000000	                            je 0x40053c0	       141	strbuf.h	FUNCTION_180
0x4005332	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_180
0x4005336	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x400533a	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x400533d	     0xf847d000000	                            je 0x40053c0	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x4005343	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_182
0x4005347	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_182
0x400534b	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_182
0x400534f	        0xc6041000	                 mov byte [rax + rdx], 0	       229	strbuf.h	FUNCTION_182
0x4005353	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_182
0x4005357	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_182
0x400535b	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_182
0x400535f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2699	dir.c	FUNCTION_85	CALL_28
0x4005364	      0xe800000000	                          call 0x4005369	      2699	dir.c	FUNCTION_85	CALL_28
0x4005369	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2700	dir.c	FUNCTION_85	CALL_29
0x400536e	      0xe800000000	                          call 0x4005373	      2700	dir.c	FUNCTION_85	CALL_29
0x4005373	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2701	dir.c	FUNCTION_85	CALL_30
0x4005378	      0xe800000000	                          call 0x400537d	      2701	dir.c	FUNCTION_85	CALL_30
0x400537d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2702	dir.c	FUNCTION_85	CALL_31
0x4005382	      0xe800000000	                          call 0x4005387	      2702	dir.c	FUNCTION_85	CALL_31
0x4005387	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	      2703	dir.c	FUNCTION_85	CALL_32
0x400538c	      0xe800000000	                          call 0x4005391	      2703	dir.c	FUNCTION_85	CALL_32
0x4005391	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2704	dir.c	FUNCTION_85	CALL_33
0x4005396	      0xe800000000	                          call 0x400539b	      2704	dir.c	FUNCTION_85	CALL_33
0x400539b	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      2705	dir.c	FUNCTION_85
0x40053a3	    0x644833042528	                xor rax, qword fs:[0x28]	      2705	dir.c	FUNCTION_85
0x40053ac	            0x7550	                           jne 0x40053fe	      2705	dir.c	FUNCTION_85
0x40053ae	    0x4881c4900000	                           add rsp, 0x90	      2705	dir.c	FUNCTION_85
0x40053b5	              0x5b	                                 pop rbx	      2705	dir.c	FUNCTION_85
0x40053b6	              0x5d	                                 pop rbp	      2705	dir.c	FUNCTION_85
0x40053b7	            0x415c	                                 pop r12	      2705	dir.c	FUNCTION_85
0x40053b9	            0x415d	                                 pop r13	      2705	dir.c	FUNCTION_85
0x40053bb	            0x415e	                                 pop r14	      2705	dir.c	FUNCTION_85
0x40053bd	              0xc3	                                     ret	      2705	dir.c	FUNCTION_85
0x40053be	            0x6690	                                     nop	      2705	dir.c	FUNCTION_85
0x40053c0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_182	CALL_2
0x40053c5	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_182	CALL_2
0x40053c8	      0xe800000000	                          call 0x40053cd	       228	strbuf.h	FUNCTION_182	CALL_2
0x40053cd	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_182	CALL_2
0x40053d1	      0xe96dffffff	                           jmp 0x4005343	       228	strbuf.h	FUNCTION_182	CALL_2
0x40053d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       228	strbuf.h	FUNCTION_182	CALL_2
0x40053e0	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x40053e5	            0x31ff	                            xor edi, edi	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x40053e7	      0xe800000000	                          call 0x40053ec	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x40053ec	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x40053f1	          0x4863d0	                         movsxd rdx, eax	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x40053f4	          0x4889df	                            mov rdi, rbx	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x40053f7	      0xe800000000	                          call 0x40053fc	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x40053fc	            0xeb9d	                           jmp 0x400539b	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x40053fe	      0xe800000000	                          call 0x4005403	      2705	dir.c	FUNCTION_85
0x4005403	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4005406	      0xbe74000000	                           mov esi, 0x74	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400540b	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4005410	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4005412	      0xe800000000	                          call 0x4005417	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4005417	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400541c	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4005420	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4005425	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4005427	      0xe800000000	                          call 0x400542c	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
free_untracked_cache	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	9
0x4005430	          0x4885ff	                           test rdi, rdi	      2723	dir.c	FUNCTION_87	IF_1
0x4005433	              0x53	                                push rbx	      2722	dir.c	FUNCTION_87
0x4005434	          0x4889fb	                            mov rbx, rdi	      2722	dir.c	FUNCTION_87
0x4005437	            0x740c	                            je 0x4005445	      2723	dir.c	FUNCTION_87	IF_1
0x4005439	    0x488bbfa00000	            mov rdi, qword [rdi + 0xa0] 	      2724	dir.c	FUNCTION_87	CALL_1
0x4005440	      0xe82badffff	                 call sym.free_untracked	      2724	dir.c	FUNCTION_87	CALL_1
0x4005445	          0x4889df	                            mov rdi, rbx	      2725	dir.c	FUNCTION_87	CALL_2
0x4005448	              0x5b	                                 pop rbx	      2726	dir.c	FUNCTION_87
0x4005449	      0xe900000000	                           jmp 0x400544e	      2725	dir.c	FUNCTION_87	CALL_2
match_pathspec	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	45
0x4001fa0	            0x4157	                                push r15	       501	dir.c	FUNCTION_14
0x4001fa2	            0x4156	                                push r14	       501	dir.c	FUNCTION_14
0x4001fa4	          0x4d89c7	                             mov r15, r8	       501	dir.c	FUNCTION_14
0x4001fa7	            0x4155	                                push r13	       501	dir.c	FUNCTION_14
0x4001fa9	            0x4154	                                push r12	       501	dir.c	FUNCTION_14
0x4001fab	          0x4989fc	                            mov r12, rdi	       501	dir.c	FUNCTION_14
0x4001fae	              0x55	                                push rbp	       501	dir.c	FUNCTION_14
0x4001faf	              0x53	                                push rbx	       501	dir.c	FUNCTION_14
0x4001fb0	          0x4189d5	                           mov r13d, edx	       501	dir.c	FUNCTION_14
0x4001fb3	          0x4189ce	                           mov r14d, ecx	       501	dir.c	FUNCTION_14
0x4001fb6	        0x4883ec18	                           sub rsp, 0x18	       501	dir.c	FUNCTION_14
0x4001fba	        0x4183f901	                              cmp r9d, 1	       503	dir.c	FUNCTION_14
0x4001fbe	            0x19db	                            sbb ebx, ebx	       503	dir.c	FUNCTION_14
0x4001fc0	      0x4889742408	                mov qword [rsp + 8], rsi	       501	dir.c	FUNCTION_14
0x4001fc5	            0xf7d3	                                 not ebx	       503	dir.c	FUNCTION_14
0x4001fc7	          0x83e302	                              and ebx, 2	       503	dir.c	FUNCTION_14
0x4001fca	          0x4189d9	                            mov r9d, ebx	       504	dir.c	FUNCTION_14	CALL_1
0x4001fcd	      0xe84ef9ffff	              call sym.do_match_pathspec	       504	dir.c	FUNCTION_14	CALL_1
0x4001fd2	    0x41f644240820	               test byte [r12 + 8], 0x20	       506	dir.c	FUNCTION_14	IF_1
0x4001fd8	            0x89c5	                            mov ebp, eax	       504	dir.c	FUNCTION_14	CALL_1
0x4001fda	            0x7406	                            je 0x4001fe2	       506	dir.c	FUNCTION_14	IF_1
0x4001fdc	            0x85c0	                           test eax, eax	       506	dir.c	FUNCTION_14	IF_1
0x4001fde	            0x7518	                           jne 0x4001ff8	       506	dir.c	FUNCTION_14	IF_1
0x4001fe0	            0x31ed	                            xor ebp, ebp	       503	dir.c	FUNCTION_14
0x4001fe2	        0x4883c418	                           add rsp, 0x18	       512	dir.c	FUNCTION_14
0x4001fe6	            0x89e8	                            mov eax, ebp	       512	dir.c	FUNCTION_14
0x4001fe8	              0x5b	                                 pop rbx	       512	dir.c	FUNCTION_14
0x4001fe9	              0x5d	                                 pop rbp	       512	dir.c	FUNCTION_14
0x4001fea	            0x415c	                                 pop r12	       512	dir.c	FUNCTION_14
0x4001fec	            0x415d	                                 pop r13	       512	dir.c	FUNCTION_14
0x4001fee	            0x415e	                                 pop r14	       512	dir.c	FUNCTION_14
0x4001ff0	            0x415f	                                 pop r15	       512	dir.c	FUNCTION_14
0x4001ff2	              0xc3	                                     ret	       512	dir.c	FUNCTION_14
0x4001ff3	       0xf1f440000	                   nop dword [rax + rax]	       512	dir.c	FUNCTION_14
0x4001ff8	      0x488b742408	                mov rsi, qword [rsp + 8]	       508	dir.c	FUNCTION_14	CALL_2
0x4001ffd	          0x83cb01	                               or ebx, 1	       508	dir.c	FUNCTION_14	CALL_2
0x4002000	          0x4d89f8	                             mov r8, r15	       508	dir.c	FUNCTION_14	CALL_2
0x4002003	          0x4189d9	                            mov r9d, ebx	       508	dir.c	FUNCTION_14	CALL_2
0x4002006	          0x4489f1	                           mov ecx, r14d	       508	dir.c	FUNCTION_14	CALL_2
0x4002009	          0x4489ea	                           mov edx, r13d	       508	dir.c	FUNCTION_14	CALL_2
0x400200c	          0x4c89e7	                            mov rdi, r12	       508	dir.c	FUNCTION_14	CALL_2
0x400200f	      0xe80cf9ffff	              call sym.do_match_pathspec	       508	dir.c	FUNCTION_14	CALL_2
0x4002014	            0x85c0	                           test eax, eax	       511	dir.c	FUNCTION_14
0x4002016	            0x74ca	                            je 0x4001fe2	       511	dir.c	FUNCTION_14
0x4002018	            0xebc6	                           jmp 0x4001fe0	       511	dir.c	FUNCTION_14
remove_untracked_cache	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	10
0x40054d0	              0x53	                                push rbx	      2163	dir.c	FUNCTION_70
0x40054d1	          0x4889fb	                            mov rbx, rdi	      2163	dir.c	FUNCTION_70
0x40054d4	    0x488bbfb80000	            mov rdi, qword [rdi + 0xb8] 	      2164	dir.c	FUNCTION_70	IF_1
0x40054db	          0x4885ff	                           test rdi, rdi	      2164	dir.c	FUNCTION_70	IF_1
0x40054de	            0x7417	                            je 0x40054f7	      2164	dir.c	FUNCTION_70	IF_1
0x40054e0	      0xe800000000	                          call 0x40054e5	      2165	dir.c	FUNCTION_70	IF_1	CALL_1
0x40054e5	    0x814b14800000	             or dword [rbx + 0x14], 0x80	      2167	dir.c	FUNCTION_70	IF_1
0x40054ec	    0x48c783b80000	               mov qword [rbx + 0xb8], 0	      2166	dir.c	FUNCTION_70	IF_1
0x40054f7	              0x5b	                                 pop rbx	      2169	dir.c	FUNCTION_70
0x40054f8	              0xc3	                                     ret	      2169	dir.c	FUNCTION_70
set_check_only	WHILE,0:CALL,0:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	4
0x4000090	        0x488b4608	                mov rax, qword [rsi + 8]	      2812	dir.c	FUNCTION_90
0x4000094	        0x488b04f8	            mov rax, qword [rax + rdi*8]	      2812	dir.c	FUNCTION_90
0x4000098	        0x80484401	                 or byte [rax + 0x44], 1	      2813	dir.c	FUNCTION_90
0x400009c	              0xc3	                                     ret	      2813	dir.c	FUNCTION_90
add_exclude_list	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	51
0x40029e0	          0x4863f6	                         movsxd rsi, esi	       924	dir.c	FUNCTION_32
0x40029e3	              0x55	                                push rbp	       924	dir.c	FUNCTION_32
0x40029e4	              0x53	                                push rbx	       924	dir.c	FUNCTION_32
0x40029e5	        0x48c1e604	                              shl rsi, 4	       924	dir.c	FUNCTION_32
0x40029e9	          0x4889d5	                            mov rbp, rdx	       924	dir.c	FUNCTION_32
0x40029ec	        0x488d1c37	                    lea rbx, [rdi + rsi]	       924	dir.c	FUNCTION_32
0x40029f0	        0x4883ec08	                              sub rsp, 8	       924	dir.c	FUNCTION_32
0x40029f4	        0x48634b30	         movsxd rcx, dword [rbx + 0x30] 	       929	dir.c	FUNCTION_32
0x40029f8	          0x8b4334	            mov eax, dword [rbx + 0x34] 	       929	dir.c	FUNCTION_32
0x40029fb	            0x39c1	                            cmp ecx, eax	       929	dir.c	FUNCTION_32
0x40029fd	     0xf8c7d000000	                            jl 0x4002a80	       929	dir.c	FUNCTION_32
0x4002a03	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       929	dir.c	FUNCTION_32
0x4002a07	            0x89c6	                            mov esi, eax	       929	dir.c	FUNCTION_32
0x4002a09	          0xc1ee1f	                           shr esi, 0x1f	       929	dir.c	FUNCTION_32
0x4002a0c	             0x1c6	                            add esi, eax	       929	dir.c	FUNCTION_32
0x4002a0e	            0xd1fe	                              sar esi, 1	       929	dir.c	FUNCTION_32
0x4002a10	            0x39f1	                            cmp ecx, esi	       929	dir.c	FUNCTION_32
0x4002a12	            0x7d5c	                           jge 0x4002a70	       929	dir.c	FUNCTION_32
0x4002a14	          0x897334	             mov dword [rbx + 0x34], esi	       929	dir.c	FUNCTION_32
0x4002a17	          0x4863d6	                         movsxd rdx, esi	       929	dir.c	FUNCTION_32
0x4002a1a	    0x48b8ffffffff	          movabs rax, 0x7ffffffffffffff 	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4002a24	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4002a27	            0x775d	                            ja 0x4002a86	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4002a29	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       929	dir.c	FUNCTION_32
0x4002a2d	        0x48c1e205	                              shl rdx, 5	       929	dir.c	FUNCTION_32
0x4002a31	          0x4889d6	                            mov rsi, rdx	       929	dir.c	FUNCTION_32
0x4002a34	      0xe800000000	                          call 0x4002a39	       929	dir.c	FUNCTION_32
0x4002a39	        0x48634b30	         movsxd rcx, dword [rbx + 0x30] 	       929	dir.c	FUNCTION_32
0x4002a3d	        0x48894338	             mov qword [rbx + 0x38], rax	       929	dir.c	FUNCTION_32
0x4002a41	          0x8d5101	                      lea edx, [rcx + 1]	       930	dir.c	FUNCTION_32
0x4002a44	        0x48c1e105	                              shl rcx, 5	       930	dir.c	FUNCTION_32
0x4002a48	          0x4801c8	                            add rax, rcx	       930	dir.c	FUNCTION_32
0x4002a4b	          0x895330	             mov dword [rbx + 0x30], edx	       930	dir.c	FUNCTION_32
0x4002a4e	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4002a55	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4002a5d	    0x48c740180000	               mov qword [rax + 0x18], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4002a65	        0x48896810	             mov qword [rax + 0x10], rbp	       932	dir.c	FUNCTION_32
0x4002a69	        0x4883c408	                              add rsp, 8	       934	dir.c	FUNCTION_32
0x4002a6d	              0x5b	                                 pop rbx	       934	dir.c	FUNCTION_32
0x4002a6e	              0x5d	                                 pop rbp	       934	dir.c	FUNCTION_32
0x4002a6f	              0xc3	                                     ret	       934	dir.c	FUNCTION_32
0x4002a70	          0x8d7101	                      lea esi, [rcx + 1]	       929	dir.c	FUNCTION_32
0x4002a73	          0x897334	             mov dword [rbx + 0x34], esi	       929	dir.c	FUNCTION_32
0x4002a76	            0xeb9f	                           jmp 0x4002a17	       929	dir.c	FUNCTION_32
0x4002a78	     0xf1f84000000	                   nop dword [rax + rax]	       929	dir.c	FUNCTION_32
0x4002a80	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       929	dir.c	FUNCTION_32
0x4002a84	            0xebbb	                           jmp 0x4002a41	       929	dir.c	FUNCTION_32
0x4002a86	      0xbe20000000	                           mov esi, 0x20	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4002a8b	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4002a90	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4002a92	      0xe800000000	                          call 0x4002a97	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
dir_add_ignored	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	61
0x40035b0	            0x4154	                                push r12	      1351	dir.c	FUNCTION_45
0x40035b2	              0x55	                                push rbp	      1351	dir.c	FUNCTION_45
0x40035b3	          0x4989fc	                            mov r12, rdi	      1351	dir.c	FUNCTION_45
0x40035b6	              0x53	                                push rbx	      1351	dir.c	FUNCTION_45
0x40035b7	          0x4889d3	                            mov rbx, rdx	      1351	dir.c	FUNCTION_45
0x40035ba	          0x4889f7	                            mov rdi, rsi	      1351	dir.c	FUNCTION_45
0x40035bd	            0x89ca	                            mov edx, ecx	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40035bf	          0x4889de	                            mov rsi, rbx	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40035c2	            0x89cd	                            mov ebp, ecx	      1351	dir.c	FUNCTION_45
0x40035c4	      0xe800000000	                          call 0x40035c9	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40035c9	            0x85c0	                           test eax, eax	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40035cb	     0xf848f000000	                            je 0x4003660	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40035d1	      0x49634c2408	            movsxd rcx, dword [r12 + 8] 	      1355	dir.c	FUNCTION_45
0x40035d6	      0x418b44240c	              mov eax, dword [r12 + 0xc]	      1355	dir.c	FUNCTION_45
0x40035db	            0x39c1	                            cmp ecx, eax	      1355	dir.c	FUNCTION_45
0x40035dd	            0x7c79	                            jl 0x4003658	      1355	dir.c	FUNCTION_45
0x40035df	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1355	dir.c	FUNCTION_45
0x40035e3	            0x89c2	                            mov edx, eax	      1355	dir.c	FUNCTION_45
0x40035e5	          0xc1ea1f	                           shr edx, 0x1f	      1355	dir.c	FUNCTION_45
0x40035e8	             0x1c2	                            add edx, eax	      1355	dir.c	FUNCTION_45
0x40035ea	            0xd1fa	                              sar edx, 1	      1355	dir.c	FUNCTION_45
0x40035ec	            0x39d1	                            cmp ecx, edx	      1355	dir.c	FUNCTION_45
0x40035ee	            0x7d58	                           jge 0x4003648	      1355	dir.c	FUNCTION_45
0x40035f0	      0x418954240c	              mov dword [r12 + 0xc], edx	      1355	dir.c	FUNCTION_45
0x40035f5	          0x4863d2	                         movsxd rdx, edx	      1355	dir.c	FUNCTION_45
0x40035f8	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4003602	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4003605	            0x7760	                            ja 0x4003667	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4003607	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      1355	dir.c	FUNCTION_45
0x400360c	    0x488d34d50000	                        lea rsi, [rdx*8]	      1355	dir.c	FUNCTION_45
0x4003614	      0xe800000000	                          call 0x4003619	      1355	dir.c	FUNCTION_45
0x4003619	      0x49634c2408	            movsxd rcx, dword [r12 + 8] 	      1355	dir.c	FUNCTION_45
0x400361e	      0x4989442420	             mov qword [r12 + 0x20], rax	      1355	dir.c	FUNCTION_45
0x4003623	          0x8d5101	                      lea edx, [rcx + 1]	      1356	dir.c	FUNCTION_45	CALL_2
0x4003626	            0x89ee	                            mov esi, ebp	      1356	dir.c	FUNCTION_45	CALL_2
0x4003628	          0x4889df	                            mov rdi, rbx	      1356	dir.c	FUNCTION_45	CALL_2
0x400362b	      0x4189542408	                mov dword [r12 + 8], edx	      1356	dir.c	FUNCTION_45	CALL_2
0x4003630	        0x4c8d24c8	                  lea r12, [rax + rcx*8]	      1356	dir.c	FUNCTION_45	CALL_2
0x4003634	      0xe8b7caffff	                  call sym.dir_entry_new	      1356	dir.c	FUNCTION_45	CALL_2
0x4003639	        0x49890424	                    mov qword [r12], rax	      1356	dir.c	FUNCTION_45	CALL_2
0x400363d	              0x5b	                                 pop rbx	      1357	dir.c	FUNCTION_45
0x400363e	              0x5d	                                 pop rbp	      1357	dir.c	FUNCTION_45
0x400363f	            0x415c	                                 pop r12	      1357	dir.c	FUNCTION_45
0x4003641	              0xc3	                                     ret	      1357	dir.c	FUNCTION_45
0x4003642	    0x660f1f440000	                    nop word [rax + rax]	      1357	dir.c	FUNCTION_45
0x4003648	          0x8d5101	                      lea edx, [rcx + 1]	      1355	dir.c	FUNCTION_45
0x400364b	      0x418954240c	              mov dword [r12 + 0xc], edx	      1355	dir.c	FUNCTION_45
0x4003650	            0xeba3	                           jmp 0x40035f5	      1355	dir.c	FUNCTION_45
0x4003652	    0x660f1f440000	                    nop word [rax + rax]	      1355	dir.c	FUNCTION_45
0x4003658	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      1355	dir.c	FUNCTION_45
0x400365d	            0xebc4	                           jmp 0x4003623	      1355	dir.c	FUNCTION_45
0x400365f	              0x90	                                     nop	      1355	dir.c	FUNCTION_45
0x4003660	              0x5b	                                 pop rbx	      1357	dir.c	FUNCTION_45
0x4003661	            0x31c0	                            xor eax, eax	      1353	dir.c	FUNCTION_45	IF_1
0x4003663	              0x5d	                                 pop rbp	      1357	dir.c	FUNCTION_45
0x4003664	            0x415c	                                 pop r12	      1357	dir.c	FUNCTION_45
0x4003666	              0xc3	                                     ret	      1357	dir.c	FUNCTION_45
0x4003667	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400366c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4003671	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4003673	      0xe800000000	                          call 0x4003678	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
common_prefix	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	17
0x4001f20	              0x53	                                push rbx	       184	dir.c	FUNCTION_7
0x4001f21	        0x488d5710	                   lea rdx, [rdi + 0x10]	       184	dir.c	FUNCTION_7
0x4001f25	          0x8b7708	                mov esi, dword [rdi + 8]	       185	dir.c	FUNCTION_7	CALL_1
0x4001f28	          0x4889fb	                            mov rbx, rdi	       184	dir.c	FUNCTION_7
0x4001f2b	            0x8b3f	                    mov edi, dword [rdi]	       185	dir.c	FUNCTION_7	CALL_1
0x4001f2d	      0xe84ee9ffff	       call sym.common_prefix_len.isra.6	       185	dir.c	FUNCTION_7	CALL_1
0x4001f32	          0x4885c0	                           test rax, rax	       187	dir.c	FUNCTION_7	CALL_2
0x4001f35	            0x7419	                            je 0x4001f50	       187	dir.c	FUNCTION_7	CALL_2
0x4001f37	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       187	dir.c	FUNCTION_7	CALL_2
0x4001f3b	          0x4889c6	                            mov rsi, rax	       187	dir.c	FUNCTION_7	CALL_2
0x4001f3e	              0x5b	                                 pop rbx	       188	dir.c	FUNCTION_7
0x4001f3f	          0x488b3a	                    mov rdi, qword [rdx]	       187	dir.c	FUNCTION_7	CALL_2
0x4001f42	      0xe900000000	                           jmp 0x4001f47	       187	dir.c	FUNCTION_7	CALL_2
0x4001f47	    0x660f1f840000	                    nop word [rax + rax]	       187	dir.c	FUNCTION_7	CALL_2
0x4001f50	            0x31c0	                            xor eax, eax	       188	dir.c	FUNCTION_7
0x4001f52	              0x5b	                                 pop rbx	       188	dir.c	FUNCTION_7
0x4001f53	              0xc3	                                     ret	       188	dir.c	FUNCTION_7
add_untracked_cache	WHILE,0:CALL,4:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,1:IF,2	33
0x4005450	              0x55	                                push rbp	      2151	dir.c	FUNCTION_69
0x4005451	              0x53	                                push rbx	      2151	dir.c	FUNCTION_69
0x4005452	        0x4883ec08	                              sub rsp, 8	      2151	dir.c	FUNCTION_69
0x4005456	    0x488bafb80000	            mov rbp, qword [rdi + 0xb8] 	      2152	dir.c	FUNCTION_69	IF_1
0x400545d	          0x4885ed	                           test rbp, rbp	      2152	dir.c	FUNCTION_69	IF_1
0x4005460	            0x744e	                            je 0x40054b0	      2152	dir.c	FUNCTION_69	IF_1
0x4005462	          0x4889fb	                            mov rbx, rdi	      2152	dir.c	FUNCTION_69	IF_1
0x4005465	      0xe886c1ffff	               call sym.get_ident_string	      2123	dir.c	FUNCTION_66	CALL_2
0x400546a	    0x488bbd900000	            mov rdi, qword [rbp + 0x90] 	      2123	dir.c	FUNCTION_66	CALL_2
0x4005471	          0x4889c6	                            mov rsi, rax	      2123	dir.c	FUNCTION_66	CALL_2
0x4005474	      0xe800000000	                          call 0x4005479	      2123	dir.c	FUNCTION_66	CALL_2
0x4005479	            0x85c0	                           test eax, eax	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x400547b	            0x750b	                           jne 0x4005488	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x400547d	        0x4883c408	                              add rsp, 8	      2160	dir.c	FUNCTION_69
0x4005481	              0x5b	                                 pop rbx	      2160	dir.c	FUNCTION_69
0x4005482	              0x5d	                                 pop rbp	      2160	dir.c	FUNCTION_69
0x4005483	              0xc3	                                     ret	      2160	dir.c	FUNCTION_69
0x4005484	         0xf1f4000	                         nop dword [rax]	      2160	dir.c	FUNCTION_69
0x4005488	    0x488bbbb80000	            mov rdi, qword [rbx + 0xb8] 	      2156	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_3
0x400548f	      0xe800000000	                          call 0x4005494	      2156	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_3
0x4005494	        0x4883c408	                              add rsp, 8	      2160	dir.c	FUNCTION_69
0x4005498	    0x488db3b80000	                   lea rsi, [rbx + 0xb8]	      2160	dir.c	FUNCTION_69
0x400549f	        0x488d7b14	                   lea rdi, [rbx + 0x14]	      2160	dir.c	FUNCTION_69
0x40054a3	              0x5b	                                 pop rbx	      2160	dir.c	FUNCTION_69
0x40054a4	              0x5d	                                 pop rbp	      2160	dir.c	FUNCTION_69
0x40054a5	      0xe9e6c1ffff	     jmp sym.new_untracked_cache.isra.15	      2157	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_4
0x40054aa	    0x660f1f440000	                    nop word [rax + rax]	      2157	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_4
0x40054b0	        0x4883c408	                              add rsp, 8	      2160	dir.c	FUNCTION_69
0x40054b4	    0x488db7b80000	                   lea rsi, [rdi + 0xb8]	      2160	dir.c	FUNCTION_69
0x40054bb	        0x4883c714	                           add rdi, 0x14	      2160	dir.c	FUNCTION_69
0x40054bf	              0x5b	                                 pop rbx	      2160	dir.c	FUNCTION_69
0x40054c0	              0x5d	                                 pop rbp	      2160	dir.c	FUNCTION_69
0x40054c1	      0xe9cac1ffff	     jmp sym.new_untracked_cache.isra.15	      2153	dir.c	FUNCTION_69	IF_1	CALL_1
count_slashes	WHILE,1:CALL,0:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	12
0x40017b0	            0x31c0	                            xor eax, eax	        60	dir.c	FUNCTION_1
0x40017b2	            0xeb13	                           jmp 0x40017c7	        61	dir.c	FUNCTION_1	WHILE_1
0x40017b4	         0xf1f4000	                         nop dword [rax]	        61	dir.c	FUNCTION_1	WHILE_1
0x40017b8	        0x4883c701	                              add rdi, 1	        62	dir.c	FUNCTION_1	WHILE_1	IF_1
0x40017bc	          0x80fa2f	                            cmp dl, 0x2f	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x40017bf	           0xf94c2	                                 sete dl	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x40017c2	           0xfb6d2	                           movzx edx, dl	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x40017c5	             0x1d0	                            add eax, edx	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x40017c7	           0xfb617	                   movzx edx, byte [rdi]	        61	dir.c	FUNCTION_1	WHILE_1
0x40017ca	            0x84d2	                             test dl, dl	        61	dir.c	FUNCTION_1	WHILE_1
0x40017cc	            0x75ea	                           jne 0x40017b8	        61	dir.c	FUNCTION_1	WHILE_1
0x40017ce	            0xf3c3	                                     ret	        65	dir.c	FUNCTION_1
last_exclude_matching_from_lists	WHILE,0:CALL,1:functions,0:FOR,2:SWITCH,0:DO,0:ELSE,0:IF,1	66
0x4002e80	            0x4157	                                push r15	      1117	dir.c	FUNCTION_39
0x4002e82	            0x4156	                                push r14	      1117	dir.c	FUNCTION_39
0x4002e84	        0x488d4760	                   lea rax, [rdi + 0x60]	      1117	dir.c	FUNCTION_39
0x4002e88	            0x4155	                                push r13	      1117	dir.c	FUNCTION_39
0x4002e8a	            0x4154	                                push r12	      1117	dir.c	FUNCTION_39
0x4002e8c	          0x4989f7	                            mov r15, rsi	      1117	dir.c	FUNCTION_39
0x4002e8f	              0x55	                                push rbp	      1117	dir.c	FUNCTION_39
0x4002e90	              0x53	                                push rbx	      1117	dir.c	FUNCTION_39
0x4002e91	        0x488d5f30	                   lea rbx, [rdi + 0x30]	      1117	dir.c	FUNCTION_39
0x4002e95	          0x4989d6	                            mov r14, rdx	      1117	dir.c	FUNCTION_39
0x4002e98	          0x4189cd	                           mov r13d, ecx	      1117	dir.c	FUNCTION_39
0x4002e9b	          0x4d89c4	                             mov r12, r8	      1117	dir.c	FUNCTION_39
0x4002e9e	        0x4883ec28	                           sub rsp, 0x28	      1117	dir.c	FUNCTION_39
0x4002ea2	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1117	dir.c	FUNCTION_39
0x4002ea7	      0x4889442418	             mov qword [rsp + 0x18], rax	      1117	dir.c	FUNCTION_39
0x4002eac	            0x8b03	                    mov eax, dword [rbx]	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002eae	          0x83e801	                              sub eax, 1	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002eb1	            0x786d	                            js 0x4002f20	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002eb3	          0x4863d0	                         movsxd rdx, eax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002eb6	            0x89c0	                            mov eax, eax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002eb8	          0x4889d5	                            mov rbp, rdx	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ebb	          0x4829c2	                            sub rdx, rax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ebe	        0x48c1e205	                              shl rdx, 5	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ec2	        0x48c1e505	                              shl rbp, 5	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ec6	        0x488d42e0	                   lea rax, [rdx - 0x20]	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002eca	      0x4889442410	             mov qword [rsp + 0x10], rax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ecf	            0xeb12	                           jmp 0x4002ee3	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ed1	     0xf1f80000000	                         nop dword [rax]	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ed8	        0x4883ed20	                           sub rbp, 0x20	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002edc	      0x48396c2410	            cmp qword [rsp + 0x10], rbp 	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ee1	            0x743d	                            je 0x4002f20	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ee3	          0x4889e8	                            mov rax, rbp	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002ee6	        0x48034308	                add rax, qword [rbx + 8]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002eea	        0x4883ec08	                              sub rsp, 8	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002eee	            0x4157	                                push r15	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002ef0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002ef5	          0x4c89e2	                            mov rdx, r12	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002ef8	          0x4489ee	                           mov esi, r13d	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002efb	          0x4c89f7	                            mov rdi, r14	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002efe	          0x448b00	                    mov r8d, dword [rax]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002f01	        0x4c8d4818	                    lea r9, [rax + 0x18]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002f05	      0xe8d6fdffff	call sym.last_exclude_matching_from_list.isra.19	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002f0a	          0x4885c0	                           test rax, rax	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002f0d	              0x5a	                                 pop rdx	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002f0e	              0x59	                                 pop rcx	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002f0f	            0x74c7	                            je 0x4002ed8	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002f11	        0x4883c428	                           add rsp, 0x28	      1132	dir.c	FUNCTION_39
0x4002f15	              0x5b	                                 pop rbx	      1132	dir.c	FUNCTION_39
0x4002f16	              0x5d	                                 pop rbp	      1132	dir.c	FUNCTION_39
0x4002f17	            0x415c	                                 pop r12	      1132	dir.c	FUNCTION_39
0x4002f19	            0x415d	                                 pop r13	      1132	dir.c	FUNCTION_39
0x4002f1b	            0x415e	                                 pop r14	      1132	dir.c	FUNCTION_39
0x4002f1d	            0x415f	                                 pop r15	      1132	dir.c	FUNCTION_39
0x4002f1f	              0xc3	                                     ret	      1132	dir.c	FUNCTION_39
0x4002f20	        0x4883c310	                           add rbx, 0x10	      1132	dir.c	FUNCTION_39
0x4002f24	      0x48395c2418	            cmp qword [rsp + 0x18], rbx 	      1121	dir.c	FUNCTION_39	FOR_1
0x4002f29	            0x7581	                           jne 0x4002eac	      1121	dir.c	FUNCTION_39	FOR_1
0x4002f2b	        0x4883c428	                           add rsp, 0x28	      1132	dir.c	FUNCTION_39
0x4002f2f	            0x31c0	                            xor eax, eax	      1131	dir.c	FUNCTION_39
0x4002f31	              0x5b	                                 pop rbx	      1132	dir.c	FUNCTION_39
0x4002f32	              0x5d	                                 pop rbp	      1132	dir.c	FUNCTION_39
0x4002f33	            0x415c	                                 pop r12	      1132	dir.c	FUNCTION_39
0x4002f35	            0x415d	                                 pop r13	      1132	dir.c	FUNCTION_39
0x4002f37	            0x415e	                                 pop r14	      1132	dir.c	FUNCTION_39
0x4002f39	            0x415f	                                 pop r15	      1132	dir.c	FUNCTION_39
0x4002f3b	              0xc3	                                     ret	      1132	dir.c	FUNCTION_39
clear_directory	WHILE,1:CALL,5:functions,0:FOR,2:SWITCH,0:DO,0:ELSE,0:IF,1	53
0x4005090	            0x4157	                                push r15	      2540	dir.c	FUNCTION_82
0x4005092	            0x4156	                                push r14	      2540	dir.c	FUNCTION_82
0x4005094	          0x4531ff	                          xor r15d, r15d	      2546	dir.c	FUNCTION_82	FOR_1
0x4005097	            0x4155	                                push r13	      2540	dir.c	FUNCTION_82
0x4005099	            0x4154	                                push r12	      2540	dir.c	FUNCTION_82
0x400509b	        0x4c8d6730	                   lea r12, [rdi + 0x30]	      2540	dir.c	FUNCTION_82
0x400509f	              0x55	                                push rbp	      2540	dir.c	FUNCTION_82
0x40050a0	              0x53	                                push rbx	      2540	dir.c	FUNCTION_82
0x40050a1	          0x4989fe	                            mov r14, rdi	      2540	dir.c	FUNCTION_82
0x40050a4	        0x4883ec08	                              sub rsp, 8	      2540	dir.c	FUNCTION_82
0x40050a8	        0x418b0424	                    mov eax, dword [r12]	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050ac	            0x31ed	                            xor ebp, ebp	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050ae	            0x31db	                            xor ebx, ebx	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050b0	            0x85c0	                           test eax, eax	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050b2	            0x7e27	                           jle 0x40050db	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050b4	         0xf1f4000	                         nop dword [rax]	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050b8	          0x4989ed	                            mov r13, rbp	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050bb	      0x4d036c2408	                add r13, qword [r12 + 8]	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050c0	        0x4183ff01	                             cmp r15d, 1	      2550	dir.c	FUNCTION_82	FOR_1	FOR_2	IF_1
0x40050c4	            0x7461	                            je 0x4005127	      2550	dir.c	FUNCTION_82	FOR_1	FOR_2	IF_1
0x40050c6	          0x4c89ef	                            mov rdi, r13	      2552	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_2
0x40050c9	          0x83c301	                              add ebx, 1	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050cc	        0x4883c520	                           add rbp, 0x20	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050d0	      0xe800000000	                          call 0x40050d5	      2552	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_2
0x40050d5	        0x41391c24	                    cmp dword [r12], ebx	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050d9	            0x7fdd	                            jg 0x40050b8	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40050db	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x40050e0	        0x4183c701	                             add r15d, 1	      2546	dir.c	FUNCTION_82	FOR_1
0x40050e4	        0x4983c410	                           add r12, 0x10	      2546	dir.c	FUNCTION_82	FOR_1
0x40050e8	      0xe800000000	                          call 0x40050ed	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x40050ed	        0x4183ff03	                             cmp r15d, 3	      2546	dir.c	FUNCTION_82	FOR_1
0x40050f1	            0x75b5	                           jne 0x40050a8	      2546	dir.c	FUNCTION_82	FOR_1
0x40050f3	        0x498b7e60	            mov rdi, qword [r14 + 0x60] 	      2557	dir.c	FUNCTION_82
0x40050f7	          0x4885ff	                           test rdi, rdi	      2558	dir.c	FUNCTION_82	WHILE_1
0x40050fa	            0x7414	                            je 0x4005110	      2558	dir.c	FUNCTION_82	WHILE_1
0x40050fc	         0xf1f4000	                         nop dword [rax]	      2558	dir.c	FUNCTION_82	WHILE_1
0x4005100	          0x488b1f	                    mov rbx, qword [rdi]	      2559	dir.c	FUNCTION_82	WHILE_1
0x4005103	      0xe800000000	                          call 0x4005108	      2560	dir.c	FUNCTION_82	WHILE_1	CALL_4
0x4005108	          0x4885db	                           test rbx, rbx	      2558	dir.c	FUNCTION_82	WHILE_1
0x400510b	          0x4889df	                            mov rdi, rbx	      2558	dir.c	FUNCTION_82	WHILE_1
0x400510e	            0x75f0	                           jne 0x4005100	      2558	dir.c	FUNCTION_82	WHILE_1
0x4005110	        0x4883c408	                              add rsp, 8	      2564	dir.c	FUNCTION_82
0x4005114	        0x498d7e70	                   lea rdi, [r14 + 0x70]	      2563	dir.c	FUNCTION_82	CALL_5
0x4005118	              0x5b	                                 pop rbx	      2564	dir.c	FUNCTION_82
0x4005119	              0x5d	                                 pop rbp	      2564	dir.c	FUNCTION_82
0x400511a	            0x415c	                                 pop r12	      2564	dir.c	FUNCTION_82
0x400511c	            0x415d	                                 pop r13	      2564	dir.c	FUNCTION_82
0x400511e	            0x415e	                                 pop r14	      2564	dir.c	FUNCTION_82
0x4005120	            0x415f	                                 pop r15	      2564	dir.c	FUNCTION_82
0x4005122	      0xe900000000	                           jmp 0x4005127	      2563	dir.c	FUNCTION_82	CALL_5
0x4005127	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
0x400512b	      0xe800000000	                          call 0x4005130	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
0x4005130	            0xeb94	                           jmp 0x40050c6	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
is_excluded_from_list	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	17
0x4003490	        0x4883ec10	                           sub rsp, 0x10	      1104	dir.c	FUNCTION_38
0x4003494	            0x4151	                                 push r9	      1106	dir.c	FUNCTION_38	CALL_1
0x4003496	        0x4d8d4818	                     lea r9, [r8 + 0x18]	      1106	dir.c	FUNCTION_38	CALL_1
0x400349a	          0x458b00	                     mov r8d, dword [r8]	      1106	dir.c	FUNCTION_38	CALL_1
0x400349d	      0xe83ef8ffff	call sym.last_exclude_matching_from_list.isra.19	      1106	dir.c	FUNCTION_38	CALL_1
0x40034a2	          0x4885c0	                           test rax, rax	      1108	dir.c	FUNCTION_38	IF_1
0x40034a5	              0x5a	                                 pop rdx	      1108	dir.c	FUNCTION_38	IF_1
0x40034a6	              0x59	                                 pop rcx	      1108	dir.c	FUNCTION_38	IF_1
0x40034a7	            0x7411	                            je 0x40034ba	      1108	dir.c	FUNCTION_38	IF_1
0x40034a9	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1109	dir.c	FUNCTION_38	IF_1
0x40034ac	          0xc1e804	                              shr eax, 4	      1109	dir.c	FUNCTION_38	IF_1
0x40034af	          0x83f001	                              xor eax, 1	      1109	dir.c	FUNCTION_38	IF_1
0x40034b2	          0x83e001	                              and eax, 1	      1109	dir.c	FUNCTION_38	IF_1
0x40034b5	        0x4883c408	                              add rsp, 8	      1111	dir.c	FUNCTION_38
0x40034b9	              0xc3	                                     ret	      1111	dir.c	FUNCTION_38
0x40034ba	      0xb8ffffffff	                     mov eax, 0xffffffff	      1110	dir.c	FUNCTION_38
0x40034bf	            0xebf4	                           jmp 0x40034b5	      1110	dir.c	FUNCTION_38
is_inside_dir	WHILE,0:CALL,3:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	24
0x4004e00	          0x4885ff	                           test rdi, rdi	      2386	dir.c	FUNCTION_76	IF_1
0x4004e03	            0x743b	                            je 0x4004e40	      2386	dir.c	FUNCTION_76	IF_1
0x4004e05	              0x55	                                push rbp	      2382	dir.c	FUNCTION_76
0x4004e06	              0x53	                                push rbx	      2382	dir.c	FUNCTION_76
0x4004e07	          0x4889fb	                            mov rbx, rdi	      2382	dir.c	FUNCTION_76
0x4004e0a	        0x4883ec08	                              sub rsp, 8	      2382	dir.c	FUNCTION_76
0x4004e0e	      0xe800000000	                          call 0x4004e13	      2389	dir.c	FUNCTION_76	CALL_1
0x4004e13	          0x4889de	                            mov rsi, rbx	      2390	dir.c	FUNCTION_76	CALL_2
0x4004e16	          0x4889c7	                            mov rdi, rax	      2390	dir.c	FUNCTION_76	CALL_2
0x4004e19	          0x4889c5	                            mov rbp, rax	      2389	dir.c	FUNCTION_76	CALL_1
0x4004e1c	      0xe800000000	                          call 0x4004e21	      2390	dir.c	FUNCTION_76	CALL_2
0x4004e21	            0xf7d0	                                 not eax	      2390	dir.c	FUNCTION_76	CALL_2
0x4004e23	          0x4889ef	                            mov rdi, rbp	      2391	dir.c	FUNCTION_76	CALL_3
0x4004e26	          0xc1e81f	                           shr eax, 0x1f	      2390	dir.c	FUNCTION_76	CALL_2
0x4004e29	            0x89c3	                            mov ebx, eax	      2390	dir.c	FUNCTION_76	CALL_2
0x4004e2b	      0xe800000000	                          call 0x4004e30	      2391	dir.c	FUNCTION_76	CALL_3
0x4004e30	        0x4883c408	                              add rsp, 8	      2393	dir.c	FUNCTION_76
0x4004e34	            0x89d8	                            mov eax, ebx	      2392	dir.c	FUNCTION_76
0x4004e36	              0x5b	                                 pop rbx	      2393	dir.c	FUNCTION_76
0x4004e37	              0x5d	                                 pop rbp	      2393	dir.c	FUNCTION_76
0x4004e38	              0xc3	                                     ret	      2393	dir.c	FUNCTION_76
0x4004e39	     0xf1f80000000	                         nop dword [rax]	      2393	dir.c	FUNCTION_76
0x4004e40	            0x31c0	                            xor eax, eax	      2393	dir.c	FUNCTION_76
0x4004e42	              0xc3	                                     ret	      2393	dir.c	FUNCTION_76
connect_work_tree_and_git_dir	WHILE,0:CALL,20:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,3	213
0x40058c0	            0x4157	                                push r15	      3065	dir.c	FUNCTION_101
0x40058c2	            0x4156	                                push r14	      3065	dir.c	FUNCTION_101
0x40058c4	            0x4155	                                push r13	      3065	dir.c	FUNCTION_101
0x40058c6	            0x4154	                                push r12	      3065	dir.c	FUNCTION_101
0x40058c8	          0x4189d4	                           mov r12d, edx	      3065	dir.c	FUNCTION_101
0x40058cb	              0x55	                                push rbp	      3065	dir.c	FUNCTION_101
0x40058cc	              0x53	                                push rbx	      3065	dir.c	FUNCTION_101
0x40058cd	          0x4889fa	                            mov rdx, rdi	      3072	dir.c	FUNCTION_101	CALL_1
0x40058d0	          0x4889fb	                            mov rbx, rdi	      3065	dir.c	FUNCTION_101
0x40058d3	          0x4889f5	                            mov rbp, rsi	      3065	dir.c	FUNCTION_101
0x40058d6	      0xbe00000000	                              mov esi, 0	      3072	dir.c	FUNCTION_101	CALL_1
0x40058db	    0x4881ec280100	                          sub rsp, 0x128	      3065	dir.c	FUNCTION_101
0x40058e2	    0x64488b042528	                mov rax, qword fs:[0x28]	      3065	dir.c	FUNCTION_101
0x40058eb	    0x488984241801	            mov qword [rsp + 0x118], rax	      3065	dir.c	FUNCTION_101
0x40058f3	            0x31c0	                            xor eax, eax	      3065	dir.c	FUNCTION_101
0x40058f5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3072	dir.c	FUNCTION_101	CALL_1
0x40058fa	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3066	dir.c	FUNCTION_101
0x4005903	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3066	dir.c	FUNCTION_101
0x400590c	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3066	dir.c	FUNCTION_101
0x4005915	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3067	dir.c	FUNCTION_101
0x400591e	    0x48c744243800	               mov qword [rsp + 0x38], 0	      3067	dir.c	FUNCTION_101
0x4005927	    0x48c744244000	               mov qword [rsp + 0x40], 0	      3067	dir.c	FUNCTION_101
0x4005930	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3068	dir.c	FUNCTION_101
0x4005939	    0x48c744245800	               mov qword [rsp + 0x58], 0	      3068	dir.c	FUNCTION_101
0x4005942	    0x48c744246000	               mov qword [rsp + 0x60], 0	      3068	dir.c	FUNCTION_101
0x400594b	      0xe800000000	                          call 0x4005950	      3072	dir.c	FUNCTION_101	CALL_1
0x4005950	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x4005955	      0xe800000000	                          call 0x400595a	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x400595a	            0x85c0	                           test eax, eax	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x400595c	     0xf8545030000	                           jne 0x4005ca7	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x4005962	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3077	dir.c	FUNCTION_101	CALL_5
0x4005967	            0x31c0	                            xor eax, eax	      3077	dir.c	FUNCTION_101	CALL_5
0x4005969	          0x4889ea	                            mov rdx, rbp	      3077	dir.c	FUNCTION_101	CALL_5
0x400596c	      0xbe00000000	                              mov esi, 0	      3077	dir.c	FUNCTION_101	CALL_5
0x4005971	      0xe800000000	                          call 0x4005976	      3077	dir.c	FUNCTION_101	CALL_5
0x4005976	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x400597b	      0xe800000000	                          call 0x4005980	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x4005980	            0x85c0	                           test eax, eax	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x4005982	     0xf85fc020000	                           jne 0x4005c84	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x4005988	      0xbe01000000	                              mov esi, 1	      3081	dir.c	FUNCTION_101	CALL_9
0x400598d	          0x4889ef	                            mov rdi, rbp	      3081	dir.c	FUNCTION_101	CALL_9
0x4005990	      0xe800000000	                          call 0x4005995	      3081	dir.c	FUNCTION_101	CALL_9
0x4005995	      0xbe01000000	                              mov esi, 1	      3082	dir.c	FUNCTION_101	CALL_10
0x400599a	          0x4889df	                            mov rdi, rbx	      3082	dir.c	FUNCTION_101	CALL_10
0x400599d	          0x4989c6	                            mov r14, rax	      3081	dir.c	FUNCTION_101	CALL_9
0x40059a0	      0xe800000000	                          call 0x40059a5	      3082	dir.c	FUNCTION_101	CALL_10
0x40059a5	      0x488d542450	                   lea rdx, [rsp + 0x50]	      3085	dir.c	FUNCTION_101	CALL_11
0x40059aa	          0x4889c6	                            mov rsi, rax	      3085	dir.c	FUNCTION_101	CALL_11
0x40059ad	          0x4c89f7	                            mov rdi, r14	      3085	dir.c	FUNCTION_101	CALL_11
0x40059b0	          0x4989c7	                            mov r15, rax	      3082	dir.c	FUNCTION_101	CALL_10
0x40059b3	      0xe800000000	                          call 0x40059b8	      3085	dir.c	FUNCTION_101	CALL_11
0x40059b8	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3085	dir.c	FUNCTION_101	CALL_11
0x40059bd	          0x4889c2	                            mov rdx, rax	      3085	dir.c	FUNCTION_101	CALL_11
0x40059c0	      0xbe00000000	                              mov esi, 0	      3085	dir.c	FUNCTION_101	CALL_11
0x40059c5	            0x31c0	                            xor eax, eax	      3085	dir.c	FUNCTION_101	CALL_11
0x40059c7	      0xe800000000	                          call 0x40059cc	      3085	dir.c	FUNCTION_101	CALL_11
0x40059cc	      0x488d542450	                   lea rdx, [rsp + 0x50]	      3088	dir.c	FUNCTION_101	CALL_13
0x40059d1	          0x4c89f6	                            mov rsi, r14	      3088	dir.c	FUNCTION_101	CALL_13
0x40059d4	          0x4c89ff	                            mov rdi, r15	      3088	dir.c	FUNCTION_101	CALL_13
0x40059d7	      0xe800000000	                          call 0x40059dc	      3088	dir.c	FUNCTION_101	CALL_13
0x40059dc	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3088	dir.c	FUNCTION_101	CALL_13
0x40059e1	          0x4889c2	                            mov rdx, rax	      3088	dir.c	FUNCTION_101	CALL_13
0x40059e4	      0xbe00000000	                              mov esi, 0	      3088	dir.c	FUNCTION_101	CALL_13
0x40059e9	      0xe800000000	                          call 0x40059ee	      3088	dir.c	FUNCTION_101	CALL_13
0x40059ee	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3091	dir.c	FUNCTION_101	CALL_15
0x40059f3	      0xe800000000	                          call 0x40059f8	      3091	dir.c	FUNCTION_101	CALL_15
0x40059f8	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3092	dir.c	FUNCTION_101	CALL_16
0x40059fd	      0xe800000000	                          call 0x4005a02	      3092	dir.c	FUNCTION_101	CALL_16
0x4005a02	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      3093	dir.c	FUNCTION_101	CALL_17
0x4005a07	      0xe800000000	                          call 0x4005a0c	      3093	dir.c	FUNCTION_101	CALL_17
0x4005a0c	          0x4585e4	                         test r12d, r12d	      3095	dir.c	FUNCTION_101	IF_3
0x4005a0f	            0x753f	                           jne 0x4005a50	      3095	dir.c	FUNCTION_101	IF_3
0x4005a11	          0x4c89ff	                            mov rdi, r15	      3098	dir.c	FUNCTION_101	CALL_19
0x4005a14	      0xe800000000	                          call 0x4005a19	      3098	dir.c	FUNCTION_101	CALL_19
0x4005a19	          0x4c89f7	                            mov rdi, r14	      3099	dir.c	FUNCTION_101	CALL_20
0x4005a1c	      0xe800000000	                          call 0x4005a21	      3099	dir.c	FUNCTION_101	CALL_20
0x4005a21	    0x488b84241801	           mov rax, qword [rsp + 0x118] 	      3100	dir.c	FUNCTION_101
0x4005a29	    0x644833042528	                xor rax, qword fs:[0x28]	      3100	dir.c	FUNCTION_101
0x4005a32	     0xf8547020000	                           jne 0x4005c7f	      3100	dir.c	FUNCTION_101
0x4005a38	    0x4881c4280100	                          add rsp, 0x128	      3100	dir.c	FUNCTION_101
0x4005a3f	              0x5b	                                 pop rbx	      3100	dir.c	FUNCTION_101
0x4005a40	              0x5d	                                 pop rbp	      3100	dir.c	FUNCTION_101
0x4005a41	            0x415c	                                 pop r12	      3100	dir.c	FUNCTION_101
0x4005a43	            0x415d	                                 pop r13	      3100	dir.c	FUNCTION_101
0x4005a45	            0x415e	                                 pop r14	      3100	dir.c	FUNCTION_101
0x4005a47	            0x415f	                                 pop r15	      3100	dir.c	FUNCTION_101
0x4005a49	              0xc3	                                     ret	      3100	dir.c	FUNCTION_101
0x4005a4a	    0x660f1f440000	                    nop word [rax + rax]	      3100	dir.c	FUNCTION_101
0x4005a50	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x4005a58	          0x4c89fa	                            mov rdx, r15	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x4005a5b	          0x4c89f6	                            mov rsi, r14	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x4005a5e	    0x48c744247000	               mov qword [rsp + 0x70], 0	      3019	dir.c	FUNCTION_100
0x4005a67	    0x48c744247800	               mov qword [rsp + 0x78], 0	      3019	dir.c	FUNCTION_100
0x4005a70	    0x48c784248000	               mov qword [rsp + 0x80], 0	      3019	dir.c	FUNCTION_100
0x4005a7c	    0x48c784249000	               mov qword [rsp + 0x90], 0	      3020	dir.c	FUNCTION_100
0x4005a88	    0x48c784249800	               mov qword [rsp + 0x98], 0	      3020	dir.c	FUNCTION_100
0x4005a94	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      3020	dir.c	FUNCTION_100
0x4005aa0	      0xe800000000	                          call 0x4005aa5	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x4005aa5	            0x85c0	                           test eax, eax	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x4005aa7	     0xf8564ffffff	                           jne 0x4005a11	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x4005aad	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x4005ab5	      0xe800000000	                          call 0x4005aba	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x4005aba	            0x85c0	                           test eax, eax	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x4005abc	     0xf88ec010000	                            js 0x4005cae	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x4005ac2	    0x488b8c240001	           mov rcx, qword [rsp + 0x100] 	      3031	dir.c	FUNCTION_100	FOR_1
0x4005aca	            0x31db	                            xor ebx, ebx	      3031	dir.c	FUNCTION_100	FOR_1
0x4005acc	        0x448b610c	            mov r12d, dword [rcx + 0xc] 	      3031	dir.c	FUNCTION_100	FOR_1
0x4005ad0	          0x4585e4	                         test r12d, r12d	      3031	dir.c	FUNCTION_100	FOR_1
0x4005ad3	            0x751e	                           jne 0x4005af3	      3031	dir.c	FUNCTION_100	FOR_1
0x4005ad5	      0xe956010000	                           jmp 0x4005c30	      3031	dir.c	FUNCTION_100	FOR_1
0x4005ada	    0x660f1f440000	                    nop word [rax + rax]	      3031	dir.c	FUNCTION_100	FOR_1
0x4005ae0	          0x83c301	                              add ebx, 1	      3031	dir.c	FUNCTION_100	FOR_1
0x4005ae3	          0x4189dd	                           mov r13d, ebx	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005ae6	        0x448b610c	            mov r12d, dword [rcx + 0xc] 	      3031	dir.c	FUNCTION_100	FOR_1
0x4005aea	          0x4539ec	                          cmp r12d, r13d	      3031	dir.c	FUNCTION_100	FOR_1
0x4005aed	     0xf863d010000	                           jbe 0x4005c30	      3031	dir.c	FUNCTION_100	FOR_1
0x4005af3	          0x488b11	                    mov rdx, qword [rcx]	      3032	dir.c	FUNCTION_100	FOR_1
0x4005af6	          0x4863c3	                         movsxd rax, ebx	      3032	dir.c	FUNCTION_100	FOR_1
0x4005af9	        0x488d14c2	                  lea rdx, [rdx + rax*8]	      3032	dir.c	FUNCTION_100	FOR_1
0x4005afd	          0x488b2a	                    mov rbp, qword [rdx]	      3032	dir.c	FUNCTION_100	FOR_1
0x4005b00	          0x8b4534	            mov eax, dword [rbp + 0x34] 	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005b03	      0x2500f00000	                         and eax, 0xf000	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005b08	      0x3d00e00000	                         cmp eax, 0xe000	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005b0d	            0x75d1	                           jne 0x4005ae0	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005b0f	        0x488d4558	                   lea rax, [rbp + 0x58]	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005b13	          0x4889d5	                            mov rbp, rdx	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005b16	      0x4889442408	                mov qword [rsp + 8], rax	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005b1b	            0xeb1d	                           jmp 0x4005b3a	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005b1d	           0xf1f00	                         nop dword [rax]	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005b20	        0x488b4508	                mov rax, qword [rbp + 8]	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4005b24	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4005b29	        0x4883c508	                              add rbp, 8	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4005b2d	        0x488d7058	                   lea rsi, [rax + 0x58]	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4005b31	      0xe800000000	                          call 0x4005b36	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4005b36	            0x85c0	                           test eax, eax	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4005b38	            0x750b	                           jne 0x4005b45	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4005b3a	          0x83c301	                              add ebx, 1	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4005b3d	          0x4439e3	                           cmp ebx, r12d	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4005b40	          0x4189dd	                           mov r13d, ebx	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4005b43	            0x72db	                            jb 0x4005b20	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4005b45	      0x488b542408	                mov rdx, qword [rsp + 8]	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x4005b4a	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x4005b52	      0xbe00000000	                              mov esi, 0	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x4005b57	      0xe800000000	                          call 0x4005b5c	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x4005b5c	          0x4885c0	                           test rax, rax	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4005b5f	          0x4989c4	                            mov r12, rax	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x4005b62	     0xf84b3000000	                            je 0x4005c1b	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4005b68	      0x488b742408	                mov rsi, qword [rsp + 8]	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4005b6d	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4005b75	      0xe800000000	                          call 0x4005b7a	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4005b7a	            0x85c0	                           test eax, eax	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4005b7c	    0x488b8c240001	           mov rcx, qword [rsp + 0x100] 	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4005b84	     0xf845cffffff	                            je 0x4005ae6	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4005b8a	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       165	strbuf.h	FUNCTION_181	IF_2
0x4005b92	    0x48c744247800	               mov qword [rsp + 0x78], 0	       164	strbuf.h	FUNCTION_181
0x4005b9b	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_181	IF_2
0x4005ba1	     0xf84b2000000	                            je 0x4005c59	       165	strbuf.h	FUNCTION_181	IF_2
0x4005ba7	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_181	IF_2
0x4005baa	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       165	strbuf.h	FUNCTION_181	IF_2
0x4005bb2	    0x48c784249800	               mov qword [rsp + 0x98], 0	       164	strbuf.h	FUNCTION_181
0x4005bbe	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_181	IF_2
0x4005bc4	     0xf84a6000000	                            je 0x4005c70	       165	strbuf.h	FUNCTION_181	IF_2
0x4005bca	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_181	IF_2
0x4005bcd	        0x498b0c24	                    mov rcx, qword [r12]	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4005bd1	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4005bd6	          0x4c89fa	                            mov rdx, r15	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4005bd9	      0xbe00000000	                              mov esi, 0	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4005bde	            0x31c0	                            xor eax, eax	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4005be0	      0xe800000000	                          call 0x4005be5	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4005be5	      0x498b4c2408	                mov rcx, qword [r12 + 8]	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4005bea	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4005bf2	          0x4c89f2	                            mov rdx, r14	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4005bf5	      0xbe00000000	                              mov esi, 0	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4005bfa	            0x31c0	                            xor eax, eax	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4005bfc	      0xe800000000	                          call 0x4005c01	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4005c01	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4005c09	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4005c11	      0xba01000000	                              mov edx, 1	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4005c16	      0xe800000000	                          call 0x4005c1b	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4005c1b	    0x488b8c240001	           mov rcx, qword [rsp + 0x100] 	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4005c23	        0x448b610c	            mov r12d, dword [rcx + 0xc] 	      3031	dir.c	FUNCTION_100	FOR_1
0x4005c27	          0x4539ec	                          cmp r12d, r13d	      3031	dir.c	FUNCTION_100	FOR_1
0x4005c2a	     0xf87c3feffff	                            ja 0x4005af3	      3031	dir.c	FUNCTION_100	FOR_1
0x4005c30	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      3057	dir.c	FUNCTION_100	CALL_10
0x4005c35	      0xe800000000	                          call 0x4005c3a	      3057	dir.c	FUNCTION_100	CALL_10
0x4005c3a	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      3058	dir.c	FUNCTION_100	CALL_11
0x4005c42	      0xe800000000	                          call 0x4005c47	      3058	dir.c	FUNCTION_100	CALL_11
0x4005c47	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3059	dir.c	FUNCTION_100	CALL_12
0x4005c4f	      0xe800000000	                          call 0x4005c54	      3059	dir.c	FUNCTION_100	CALL_12
0x4005c54	      0xe9b8fdffff	                           jmp 0x4005a11	      3059	dir.c	FUNCTION_100	CALL_12
0x4005c59	    0x803d00000000	                cmp byte [0x04005c60], 0	       168	strbuf.h	FUNCTION_181	CALL_2
0x4005c60	     0xf8444ffffff	                            je 0x4005baa	       168	strbuf.h	FUNCTION_181	CALL_2
0x4005c66	      0xe800000000	                          call 0x4005c6b	       168	strbuf.h	FUNCTION_181	CALL_2
0x4005c6b	       0xf1f440000	                   nop dword [rax + rax]	       168	strbuf.h	FUNCTION_181	CALL_2
0x4005c70	    0x803d00000000	                cmp byte [0x04005c77], 0	       168	strbuf.h	FUNCTION_181	CALL_2
0x4005c77	     0xf8450ffffff	                            je 0x4005bcd	       168	strbuf.h	FUNCTION_181	CALL_2
0x4005c7d	            0xebe7	                           jmp 0x4005c66	       168	strbuf.h	FUNCTION_181	CALL_2
0x4005c7f	      0xe800000000	                          call 0x4005c84	      3100	dir.c	FUNCTION_101
0x4005c84	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      3079	dir.c	FUNCTION_101	CALL_8
0x4005c89	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_192
0x4005c8e	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_192
0x4005c90	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_192
0x4005c95	      0xe800000000	                          call 0x4005c9a	        54	gettext.h	FUNCTION_192
0x4005c9a	          0x4889de	                            mov rsi, rbx	      3079	dir.c	FUNCTION_101	CALL_8
0x4005c9d	          0x4889c7	                            mov rdi, rax	      3079	dir.c	FUNCTION_101	CALL_8
0x4005ca0	            0x31c0	                            xor eax, eax	      3079	dir.c	FUNCTION_101	CALL_8
0x4005ca2	      0xe800000000	                          call 0x4005ca7	      3079	dir.c	FUNCTION_101	CALL_8
0x4005ca7	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      3074	dir.c	FUNCTION_101	CALL_4
0x4005cac	            0xebdb	                           jmp 0x4005c89	      3074	dir.c	FUNCTION_101	CALL_4
0x4005cae	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	      3029	dir.c	FUNCTION_100	CALL_3
0x4005cb6	      0xbf00000000	                              mov edi, 0	      3029	dir.c	FUNCTION_100	CALL_3
0x4005cbb	            0x31c0	                            xor eax, eax	      3029	dir.c	FUNCTION_100	CALL_3
0x4005cbd	      0xe800000000	                          call 0x4005cc2	      3029	dir.c	FUNCTION_100	CALL_3
cmp_dir_entry	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	7
0x4000550	          0x488b16	                    mov rdx, qword [rsi]	      2046	dir.c	FUNCTION_62
0x4000553	          0x488b3f	                    mov rdi, qword [rdi]	      2045	dir.c	FUNCTION_62
0x4000556	            0x8b0a	                    mov ecx, dword [rdx]	      2048	dir.c	FUNCTION_62	CALL_1
0x4000558	            0x8b37	                    mov esi, dword [rdi]	      2048	dir.c	FUNCTION_62	CALL_1
0x400055a	        0x4883c204	                              add rdx, 4	      2048	dir.c	FUNCTION_62	CALL_1
0x400055e	        0x4883c704	                              add rdi, 4	      2048	dir.c	FUNCTION_62	CALL_1
0x4000562	      0xe900000000	                           jmp 0x4000567	      2048	dir.c	FUNCTION_62	CALL_1
remove_path	WHILE,0:CALL,7:functions,0:FOR,0:SWITCH,0:DO,1:ELSE,0:IF,2	45
0x4005000	            0x4154	                                push r12	      2517	dir.c	FUNCTION_81
0x4005002	              0x55	                                push rbp	      2517	dir.c	FUNCTION_81
0x4005003	          0x4989fc	                            mov r12, rdi	      2517	dir.c	FUNCTION_81
0x4005006	              0x53	                                push rbx	      2517	dir.c	FUNCTION_81
0x4005007	      0xe800000000	                          call 0x400500c	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x400500c	            0x85c0	                           test eax, eax	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x400500e	            0x7416	                            je 0x4005026	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4005010	      0xe800000000	                          call 0x4005015	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4005015	            0x8b10	                    mov edx, dword [rax]	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4005017	          0x83fa02	                              cmp edx, 2	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x400501a	            0x740a	                            je 0x4005026	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x400501c	          0x83fa14	                           cmp edx, 0x14	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x400501f	      0xb8ffffffff	                     mov eax, 0xffffffff	      2521	dir.c	FUNCTION_81	IF_1
0x4005024	            0x755d	                           jne 0x4005083	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4005026	      0xbe2f000000	                           mov esi, 0x2f	      2523	dir.c	FUNCTION_81	CALL_3
0x400502b	          0x4c89e7	                            mov rdi, r12	      2523	dir.c	FUNCTION_81	CALL_3
0x400502e	      0xe800000000	                          call 0x4005033	      2523	dir.c	FUNCTION_81	CALL_3
0x4005033	          0x4889c3	                            mov rbx, rax	      2523	dir.c	FUNCTION_81	CALL_3
0x4005036	            0x31c0	                            xor eax, eax	      2532	dir.c	FUNCTION_81
0x4005038	          0x4885db	                           test rbx, rbx	      2524	dir.c	FUNCTION_81	IF_2
0x400503b	            0x7446	                            je 0x4005083	      2524	dir.c	FUNCTION_81	IF_2
0x400503d	          0x4c89e7	                            mov rdi, r12	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x4005040	          0x4c29e3	                            sub rbx, r12	      2526	dir.c	FUNCTION_81	IF_2
0x4005043	      0xe800000000	                          call 0x4005048	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x4005048	          0x4889c5	                            mov rbp, rax	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x400504b	        0x488d0418	                    lea rax, [rax + rbx]	      2526	dir.c	FUNCTION_81	IF_2
0x400504f	            0xeb19	                           jmp 0x400506a	      2526	dir.c	FUNCTION_81	IF_2
0x4005051	     0xf1f80000000	                         nop dword [rax]	      2526	dir.c	FUNCTION_81	IF_2
0x4005058	      0xbe2f000000	                           mov esi, 0x2f	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x400505d	          0x4889ef	                            mov rdi, rbp	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4005060	      0xe800000000	                          call 0x4005065	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4005065	          0x4885c0	                           test rax, rax	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4005068	            0x740f	                            je 0x4005079	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x400506a	          0xc60000	                       mov byte [rax], 0	      2528	dir.c	FUNCTION_81	IF_2	DO_1
0x400506d	          0x4889ef	                            mov rdi, rbp	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4005070	      0xe800000000	                          call 0x4005075	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4005075	            0x85c0	                           test eax, eax	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4005077	            0x74df	                            je 0x4005058	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4005079	          0x4889ef	                            mov rdi, rbp	      2530	dir.c	FUNCTION_81	IF_2	CALL_7
0x400507c	      0xe800000000	                          call 0x4005081	      2530	dir.c	FUNCTION_81	IF_2	CALL_7
0x4005081	            0x31c0	                            xor eax, eax	      2532	dir.c	FUNCTION_81
0x4005083	              0x5b	                                 pop rbx	      2533	dir.c	FUNCTION_81
0x4005084	              0x5d	                                 pop rbp	      2533	dir.c	FUNCTION_81
0x4005085	            0x415c	                                 pop r12	      2533	dir.c	FUNCTION_81
0x4005087	              0xc3	                                     ret	      2533	dir.c	FUNCTION_81
clear_exclude_list	WHILE,0:CALL,4:functions,0:FOR,1:SWITCH,0:DO,0:ELSE,0:IF,0	29
0x40028f0	            0x4154	                                push r12	       676	dir.c	FUNCTION_22
0x40028f2	              0x55	                                push rbp	       676	dir.c	FUNCTION_22
0x40028f3	            0x31ed	                            xor ebp, ebp	       676	dir.c	FUNCTION_22
0x40028f5	              0x53	                                push rbx	       676	dir.c	FUNCTION_22
0x40028f6	            0x8b07	                    mov eax, dword [rdi]	       679	dir.c	FUNCTION_22	FOR_1
0x40028f8	            0x31db	                            xor ebx, ebx	       679	dir.c	FUNCTION_22	FOR_1
0x40028fa	          0x4989fc	                            mov r12, rdi	       676	dir.c	FUNCTION_22
0x40028fd	            0x85c0	                           test eax, eax	       679	dir.c	FUNCTION_22	FOR_1
0x40028ff	            0x7e22	                           jle 0x4002923	       679	dir.c	FUNCTION_22	FOR_1
0x4002901	     0xf1f80000000	                         nop dword [rax]	       679	dir.c	FUNCTION_22	FOR_1
0x4002908	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       680	dir.c	FUNCTION_22	CALL_1
0x400290d	          0x83c301	                              add ebx, 1	       679	dir.c	FUNCTION_22	FOR_1
0x4002910	        0x488b3c28	              mov rdi, qword [rax + rbp]	       680	dir.c	FUNCTION_22	CALL_1
0x4002914	        0x4883c508	                              add rbp, 8	       680	dir.c	FUNCTION_22	CALL_1
0x4002918	      0xe800000000	                          call 0x400291d	       680	dir.c	FUNCTION_22	CALL_1
0x400291d	        0x41391c24	                    cmp dword [r12], ebx	       679	dir.c	FUNCTION_22	FOR_1
0x4002921	            0x7fe5	                            jg 0x4002908	       679	dir.c	FUNCTION_22	FOR_1
0x4002923	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       681	dir.c	FUNCTION_22	CALL_2
0x4002928	      0xe800000000	                          call 0x400292d	       681	dir.c	FUNCTION_22	CALL_2
0x400292d	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       682	dir.c	FUNCTION_22	CALL_3
0x4002932	      0xe800000000	                          call 0x4002937	       682	dir.c	FUNCTION_22	CALL_3
0x4002937	              0x5b	                                 pop rbx	       685	dir.c	FUNCTION_22
0x4002938	    0x49c704240000	                      mov qword [r12], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4002940	    0x49c744240800	                  mov qword [r12 + 8], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4002949	    0x49c744241000	               mov qword [r12 + 0x10], 0	        90	string3.h	FUNCTION_106	CALL_6
0x4002952	    0x49c744241800	               mov qword [r12 + 0x18], 0	        90	string3.h	FUNCTION_106	CALL_6
0x400295b	              0x5d	                                 pop rbp	       685	dir.c	FUNCTION_22
0x400295c	            0x415c	                                 pop r12	       685	dir.c	FUNCTION_22
0x400295e	              0xc3	                                     ret	       685	dir.c	FUNCTION_22
submodule_path_match	WHILE,0:CALL,2:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	18
0x4002020	            0x4154	                                push r12	       520	dir.c	FUNCTION_15
0x4002022	              0x55	                                push rbp	       520	dir.c	FUNCTION_15
0x4002023	          0x4989d4	                            mov r12, rdx	       520	dir.c	FUNCTION_15
0x4002026	              0x53	                                push rbx	       520	dir.c	FUNCTION_15
0x4002027	          0x4889fd	                            mov rbp, rdi	       520	dir.c	FUNCTION_15
0x400202a	          0x4889f3	                            mov rbx, rsi	       520	dir.c	FUNCTION_15
0x400202d	          0x4889f7	                            mov rdi, rsi	       522	dir.c	FUNCTION_15	CALL_2
0x4002030	      0xe800000000	                          call 0x4002035	       522	dir.c	FUNCTION_15	CALL_2
0x4002035	          0x4d89e0	                             mov r8, r12	       521	dir.c	FUNCTION_15	CALL_1
0x4002038	          0x4889de	                            mov rsi, rbx	       521	dir.c	FUNCTION_15	CALL_1
0x400203b	          0x4889ef	                            mov rdi, rbp	       521	dir.c	FUNCTION_15	CALL_1
0x400203e	              0x5b	                                 pop rbx	       527	dir.c	FUNCTION_15
0x400203f	              0x5d	                                 pop rbp	       527	dir.c	FUNCTION_15
0x4002040	            0x415c	                                 pop r12	       527	dir.c	FUNCTION_15
0x4002042	    0x41b906000000	                              mov r9d, 6	       521	dir.c	FUNCTION_15	CALL_1
0x4002048	            0x31c9	                            xor ecx, ecx	       521	dir.c	FUNCTION_15	CALL_1
0x400204a	            0x89c2	                            mov edx, eax	       521	dir.c	FUNCTION_15	CALL_1
0x400204c	      0xe9cff8ffff	               jmp sym.do_match_pathspec	       521	dir.c	FUNCTION_15	CALL_1
check_dir_entry_contains	WHILE,0:CALL,1:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,0	18
0x40044b0	            0x8b17	                    mov edx, dword [rdi]	      2054	dir.c	FUNCTION_63
0x40044b2	            0x31c0	                            xor eax, eax	      2055	dir.c	FUNCTION_63
0x40044b4	            0x3b16	                    cmp edx, dword [rsi]	      2055	dir.c	FUNCTION_63
0x40044b6	            0x730a	                           jae 0x40044c2	      2055	dir.c	FUNCTION_63
0x40044b8	          0x8d4aff	                      lea ecx, [rdx - 1]	      2055	dir.c	FUNCTION_63
0x40044bb	      0x807c0f042f	         cmp byte [rdi + rcx + 4], 0x2f 	      2054	dir.c	FUNCTION_63
0x40044c0	            0x7406	                            je 0x40044c8	      2054	dir.c	FUNCTION_63
0x40044c2	              0xc3	                                     ret	      2057	dir.c	FUNCTION_63
0x40044c3	       0xf1f440000	                   nop dword [rax + rax]	      2057	dir.c	FUNCTION_63
0x40044c8	        0x4883ec08	                              sub rsp, 8	      2053	dir.c	FUNCTION_63
0x40044cc	        0x4883c604	                              add rsi, 4	      2056	dir.c	FUNCTION_63	CALL_1
0x40044d0	        0x4883c704	                              add rdi, 4	      2056	dir.c	FUNCTION_63	CALL_1
0x40044d4	      0xe800000000	                          call 0x40044d9	      2056	dir.c	FUNCTION_63	CALL_1
0x40044d9	            0x85c0	                           test eax, eax	      2055	dir.c	FUNCTION_63
0x40044db	           0xf94c0	                                 sete al	      2055	dir.c	FUNCTION_63
0x40044de	        0x4883c408	                              add rsp, 8	      2057	dir.c	FUNCTION_63
0x40044e2	           0xfb6c0	                           movzx eax, al	      2055	dir.c	FUNCTION_63
0x40044e5	              0xc3	                                     ret	      2057	dir.c	FUNCTION_63
relocate_gitdir	WHILE,0:CALL,4:functions,0:FOR,0:SWITCH,0:DO,0:ELSE,0:IF,1	27
0x4005cd0	            0x4154	                                push r12	      3106	dir.c	FUNCTION_102
0x4005cd2	              0x55	                                push rbp	      3106	dir.c	FUNCTION_102
0x4005cd3	          0x4889f5	                            mov rbp, rsi	      3106	dir.c	FUNCTION_102
0x4005cd6	              0x53	                                push rbx	      3106	dir.c	FUNCTION_102
0x4005cd7	          0x4989fc	                            mov r12, rdi	      3106	dir.c	FUNCTION_102
0x4005cda	          0x4889d6	                            mov rsi, rdx	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4005cdd	          0x4889ef	                            mov rdi, rbp	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4005ce0	          0x4889d3	                            mov rbx, rdx	      3106	dir.c	FUNCTION_102
0x4005ce3	      0xe800000000	                          call 0x4005ce8	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4005ce8	            0x85c0	                           test eax, eax	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4005cea	            0x7811	                            js 0x4005cfd	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4005cec	          0x4889de	                            mov rsi, rbx	      3111	dir.c	FUNCTION_102	CALL_4
0x4005cef	          0x4c89e7	                            mov rdi, r12	      3111	dir.c	FUNCTION_102	CALL_4
0x4005cf2	            0x31d2	                            xor edx, edx	      3111	dir.c	FUNCTION_102	CALL_4
0x4005cf4	              0x5b	                                 pop rbx	      3112	dir.c	FUNCTION_102
0x4005cf5	              0x5d	                                 pop rbp	      3112	dir.c	FUNCTION_102
0x4005cf6	            0x415c	                                 pop r12	      3112	dir.c	FUNCTION_102
0x4005cf8	      0xe9c3fbffff	   jmp sym.connect_work_tree_and_git_dir	      3111	dir.c	FUNCTION_102	CALL_4
0x4005cfd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_192
0x4005d02	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_192
0x4005d07	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_192
0x4005d09	      0xe800000000	                          call 0x4005d0e	        54	gettext.h	FUNCTION_192
0x4005d0e	          0x4889da	                            mov rdx, rbx	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4005d11	          0x4889c7	                            mov rdi, rax	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4005d14	          0x4889ee	                            mov rsi, rbp	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4005d17	            0x31c0	                            xor eax, eax	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4005d19	      0xe800000000	                  call section_end..text	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
