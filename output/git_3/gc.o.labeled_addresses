process_log_file_at_exit	functions,0:FOR,0:IF,0:WHILE,0:ELSE,0:CALL,2:DO,0:SWITCH,0	5
0x40006e0	        0x4883ec08	                              sub rsp, 8	       105	gc.c	FUNCTION_4
0x40006e4	    0x488b3d000000	            mov rdi, qword [0x040006eb] 	       106	gc.c	FUNCTION_4	CALL_1
0x40006eb	      0xe800000000	                          call 0x40006f0	       106	gc.c	FUNCTION_4	CALL_1
0x40006f0	        0x4883c408	                              add rsp, 8	       108	gc.c	FUNCTION_4
0x40006f4	      0xe9c7feffff	                jmp sym.process_log_file	       107	gc.c	FUNCTION_4	CALL_2
find_base_packs	functions,0:FOR,1:IF,5:WHILE,0:ELSE,1:CALL,3:DO,0:SWITCH,0	54
0x4000060	            0x4155	                                push r13	       180	gc.c	FUNCTION_8
0x4000062	            0x4154	                                push r12	       180	gc.c	FUNCTION_8
0x4000064	          0x4989fd	                            mov r13, rdi	       180	gc.c	FUNCTION_8
0x4000067	              0x55	                                push rbp	       180	gc.c	FUNCTION_8
0x4000068	              0x53	                                push rbx	       180	gc.c	FUNCTION_8
0x4000069	          0x4989f4	                            mov r12, rsi	       180	gc.c	FUNCTION_8
0x400006c	        0x4883ec08	                              sub rsp, 8	       180	gc.c	FUNCTION_8
0x4000070	    0x488b3d000000	            mov rdi, qword [0x04000077] 	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x4000077	      0xe800000000	                          call 0x400007c	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x400007c	          0x4885c0	                           test rax, rax	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x400007f	     0xf8480000000	                            je 0x4000105	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x4000085	          0x4889c3	                            mov rbx, rax	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x4000088	            0x31ed	                            xor ebp, ebp	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x400008a	            0xeb12	                           jmp 0x400009e	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x400008c	         0xf1f4000	                         nop dword [rax]	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x4000090	        0x4c3b6320	            cmp r12, qword [rbx + 0x20] 	       187	gc.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4000094	            0x7652	                           jbe 0x40000e8	       187	gc.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4000096	          0x488b1b	                    mov rbx, qword [rbx]	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x4000099	          0x4885db	                           test rbx, rbx	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x400009c	            0x7424	                            je 0x40000c2	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x400009e	        0xf6436001	               test byte [rbx + 0x60], 1	       184	gc.c	FUNCTION_8	FOR_1	IF_1
0x40000a2	            0x74f2	                            je 0x4000096	       184	gc.c	FUNCTION_8	FOR_1	IF_1
0x40000a4	          0x4d85e4	                           test r12, r12	       186	gc.c	FUNCTION_8	FOR_1	IF_2
0x40000a7	            0x75e7	                           jne 0x4000090	       186	gc.c	FUNCTION_8	FOR_1	IF_2
0x40000a9	          0x4885ed	                           test rbp, rbp	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x40000ac	            0x7452	                            je 0x4000100	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x40000ae	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x40000b2	        0x48394520	            cmp qword [rbp + 0x20], rax 	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x40000b6	        0x480f4ceb	                          cmovl rbp, rbx	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x40000ba	          0x488b1b	                    mov rbx, qword [rbx]	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x40000bd	          0x4885db	                           test rbx, rbx	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x40000c0	            0x75dc	                           jne 0x400009e	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x40000c2	          0x4885ed	                           test rbp, rbp	       194	gc.c	FUNCTION_8	IF_5
0x40000c5	            0x740f	                            je 0x40000d6	       194	gc.c	FUNCTION_8	IF_5
0x40000c7	    0x488db5800000	                   lea rsi, [rbp + 0x80]	       195	gc.c	FUNCTION_8	CALL_3
0x40000ce	          0x4c89ef	                            mov rdi, r13	       195	gc.c	FUNCTION_8	CALL_3
0x40000d1	      0xe800000000	                          call 0x40000d6	       195	gc.c	FUNCTION_8	CALL_3
0x40000d6	        0x4883c408	                              add rsp, 8	       198	gc.c	FUNCTION_8
0x40000da	          0x4889e8	                            mov rax, rbp	       198	gc.c	FUNCTION_8
0x40000dd	              0x5b	                                 pop rbx	       198	gc.c	FUNCTION_8
0x40000de	              0x5d	                                 pop rbp	       198	gc.c	FUNCTION_8
0x40000df	            0x415c	                                 pop r12	       198	gc.c	FUNCTION_8
0x40000e1	            0x415d	                                 pop r13	       198	gc.c	FUNCTION_8
0x40000e3	              0xc3	                                     ret	       198	gc.c	FUNCTION_8
0x40000e4	         0xf1f4000	                         nop dword [rax]	       198	gc.c	FUNCTION_8
0x40000e8	    0x488db3800000	                   lea rsi, [rbx + 0x80]	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x40000ef	          0x4c89ef	                            mov rdi, r13	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x40000f2	      0xe800000000	                          call 0x40000f7	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x40000f7	            0xeb9d	                           jmp 0x4000096	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x40000f9	     0xf1f80000000	                         nop dword [rax]	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000100	          0x4889dd	                            mov rbp, rbx	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000103	            0xeb91	                           jmp 0x4000096	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000105	            0x31ed	                            xor ebp, ebp	       181	gc.c	FUNCTION_8
0x4000107	            0xebcd	                           jmp 0x40000d6	       181	gc.c	FUNCTION_8
add_repack_all_option	functions,0:FOR,0:IF,3:WHILE,0:ELSE,1:CALL,5:DO,0:SWITCH,0	38
0x4000110	    0x488b05000000	            mov rax, qword [0x04000117] 	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000117	              0x53	                                push rbx	       302	gc.c	FUNCTION_13
0x4000118	          0x4889fb	                            mov rbx, rdi	       302	gc.c	FUNCTION_13
0x400011b	          0x4885c0	                           test rax, rax	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x400011e	            0x7405	                            je 0x4000125	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000120	          0x80386e	                    cmp byte [rax], 0x6e	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000123	            0x744b	                            je 0x4000170	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000125	      0xbe00000000	                              mov esi, 0	       306	gc.c	FUNCTION_13	ELSE_1	CALL_3
0x400012a	      0xbf00000000	                              mov edi, 0	       306	gc.c	FUNCTION_13	ELSE_1	CALL_3
0x400012f	      0xe800000000	                          call 0x4000134	       306	gc.c	FUNCTION_13	ELSE_1	CALL_3
0x4000134	    0x488b15000000	            mov rdx, qword [0x0400013b] 	       307	gc.c	FUNCTION_13	ELSE_1	IF_2
0x400013b	          0x4885d2	                           test rdx, rdx	       307	gc.c	FUNCTION_13	ELSE_1	IF_2
0x400013e	            0x7411	                            je 0x4000151	       307	gc.c	FUNCTION_13	ELSE_1	IF_2
0x4000140	      0xbe00000000	                              mov esi, 0	       308	gc.c	FUNCTION_13	ELSE_1	CALL_4
0x4000145	      0xbf00000000	                              mov edi, 0	       308	gc.c	FUNCTION_13	ELSE_1	CALL_4
0x400014a	            0x31c0	                            xor eax, eax	       308	gc.c	FUNCTION_13	ELSE_1	CALL_4
0x400014c	      0xe800000000	                          call 0x4000151	       308	gc.c	FUNCTION_13	ELSE_1	CALL_4
0x4000151	          0x4885db	                           test rbx, rbx	       311	gc.c	FUNCTION_13	IF_3
0x4000154	            0x7440	                            je 0x4000196	       311	gc.c	FUNCTION_13	IF_3
0x4000156	          0x4889df	                            mov rdi, rbx	       312	gc.c	FUNCTION_13	CALL_5
0x4000159	            0x31d2	                            xor edx, edx	       312	gc.c	FUNCTION_13	CALL_5
0x400015b	      0xbe00000000	                              mov esi, 0	       312	gc.c	FUNCTION_13	CALL_5
0x4000160	              0x5b	                                 pop rbx	       313	gc.c	FUNCTION_13
0x4000161	      0xe900000000	                           jmp 0x4000166	       312	gc.c	FUNCTION_13	CALL_5
0x4000166	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       312	gc.c	FUNCTION_13	CALL_5
0x4000170	        0x8078016f	                cmp byte [rax + 1], 0x6f	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000174	            0x75af	                           jne 0x4000125	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000176	        0x80780277	                cmp byte [rax + 2], 0x77	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x400017a	            0x75a9	                           jne 0x4000125	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x400017c	        0x80780300	                   cmp byte [rax + 3], 0	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000180	            0x75a3	                           jne 0x4000125	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000182	      0xbe00000000	                              mov esi, 0	       304	gc.c	FUNCTION_13	CALL_2
0x4000187	      0xbf00000000	                              mov edi, 0	       304	gc.c	FUNCTION_13	CALL_2
0x400018c	      0xe800000000	                          call 0x4000191	       304	gc.c	FUNCTION_13	CALL_2
0x4000191	          0x4885db	                           test rbx, rbx	       311	gc.c	FUNCTION_13	IF_3
0x4000194	            0x75c0	                           jne 0x4000156	       311	gc.c	FUNCTION_13	IF_3
0x4000196	              0x5b	                                 pop rbx	       313	gc.c	FUNCTION_13
0x4000197	              0xc3	                                     ret	       313	gc.c	FUNCTION_13
report_pack_garbage	functions,0:FOR,0:IF,1:WHILE,0:ELSE,0:CALL,1:DO,0:SWITCH,0	6
0x4000040	          0x83ff02	                              cmp edi, 2	        73	gc.c	FUNCTION_2	IF_1
0x4000043	            0x740b	                            je 0x4000050	        73	gc.c	FUNCTION_2	IF_1
0x4000045	            0xf3c3	                                     ret	        73	gc.c	FUNCTION_2	IF_1
0x4000047	    0x660f1f840000	                    nop word [rax + rax]	        73	gc.c	FUNCTION_2	IF_1
0x4000050	      0xbf00000000	                              mov edi, 0	        74	gc.c	FUNCTION_2	CALL_1
0x4000055	      0xe900000000	                           jmp 0x400005a	        74	gc.c	FUNCTION_2	CALL_1
keep_one_pack	functions,0:FOR,0:IF,0:WHILE,0:ELSE,0:CALL,2:DO,0:SWITCH,0	11
0x40001a0	        0x4883ec08	                              sub rsp, 8	       296	gc.c	FUNCTION_12
0x40001a4	          0x488b3f	                    mov rdi, qword [rdi]	       297	gc.c	FUNCTION_12	CALL_2
0x40001a7	      0xe800000000	                          call 0x40001ac	       297	gc.c	FUNCTION_12	CALL_2
0x40001ac	      0xbe00000000	                              mov esi, 0	       297	gc.c	FUNCTION_12	CALL_2
0x40001b1	          0x4889c2	                            mov rdx, rax	       297	gc.c	FUNCTION_12	CALL_2
0x40001b4	      0xbf00000000	                              mov edi, 0	       297	gc.c	FUNCTION_12	CALL_2
0x40001b9	            0x31c0	                            xor eax, eax	       297	gc.c	FUNCTION_12	CALL_2
0x40001bb	      0xe800000000	                          call 0x40001c0	       297	gc.c	FUNCTION_12	CALL_2
0x40001c0	            0x31c0	                            xor eax, eax	       299	gc.c	FUNCTION_12
0x40001c2	        0x4883c408	                              add rsp, 8	       299	gc.c	FUNCTION_12
0x40001c6	              0xc3	                                     ret	       299	gc.c	FUNCTION_12
process_log_file_on_signal	functions,0:FOR,0:IF,0:WHILE,0:ELSE,0:CALL,3:DO,0:SWITCH,0	8
0x4000700	              0x53	                                push rbx	       111	gc.c	FUNCTION_5
0x4000701	            0x89fb	                            mov ebx, edi	       111	gc.c	FUNCTION_5
0x4000703	      0xe8b8feffff	               call sym.process_log_file	       112	gc.c	FUNCTION_5	CALL_1
0x4000708	            0x89df	                            mov edi, ebx	       113	gc.c	FUNCTION_5	CALL_2
0x400070a	      0xe800000000	                          call 0x400070f	       113	gc.c	FUNCTION_5	CALL_2
0x400070f	            0x89df	                            mov edi, ebx	       114	gc.c	FUNCTION_5	CALL_3
0x4000711	              0x5b	                                 pop rbx	       115	gc.c	FUNCTION_5
0x4000712	      0xe900000000	                           jmp 0x4000717	       114	gc.c	FUNCTION_5	CALL_3
