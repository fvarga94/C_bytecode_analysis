write_merge_state	FOR,0:ELSE,0:WHILE,0:functions,0:CALL,4:IF,0:SWITCH,0:DO,0	13
0x40007c5	        0x89442418	             mov dword [rsp + 0x18], eax	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007c9	     0xf1f80000000	                         nop dword [rax]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007d0	    0x488b05000000	            mov rax, qword [0x040007d7] 	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007d7	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007dc	          0x4531ff	                          xor r15d, r15d	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007df	          0x4531e4	                          xor r12d, r12d	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007e2	        0x488b1c08	              mov rbx, qword [rax + rcx]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007e6	          0x488b2b	                    mov rbp, qword [rbx]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007e9	        0x4883c308	                              add rbx, 8	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007ed	           0xf1f00	                         nop dword [rax]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007f0	    0x4d8bb7000000	                    mov r14, qword [r15]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007f7	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007fa	              0x48	                                 invalid	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
reduce_parents	FOR,0:ELSE,1:WHILE,1:functions,0:CALL,4:IF,1:SWITCH,0:DO,0	43
0x4000400	            0x4154	                                push r12	       987	merge.c	FUNCTION_35
0x4000402	              0x55	                                push rbp	       987	merge.c	FUNCTION_35
0x4000403	          0x4889fd	                            mov rbp, rdi	       987	merge.c	FUNCTION_35
0x4000406	              0x53	                                push rbx	       987	merge.c	FUNCTION_35
0x4000407	          0x4889d7	                            mov rdi, rdx	       987	merge.c	FUNCTION_35
0x400040a	          0x4989f4	                            mov r12, rsi	       987	merge.c	FUNCTION_35
0x400040d	        0x4883ec20	                           sub rsp, 0x20	       987	merge.c	FUNCTION_35
0x4000411	    0xc70601000000	                      mov dword [rsi], 1	       997	merge.c	FUNCTION_35
0x4000417	      0x4889542408	                mov qword [rsp + 8], rdx	       987	merge.c	FUNCTION_35
0x400041c	      0x488d5c2408	                      lea rbx, [rsp + 8]	      1004	merge.c	FUNCTION_35
0x4000421	    0x64488b042528	                mov rax, qword fs:[0x28]	       987	merge.c	FUNCTION_35
0x400042a	      0x4889442418	             mov qword [rsp + 0x18], rax	       987	merge.c	FUNCTION_35
0x400042f	            0x31c0	                            xor eax, eax	       987	merge.c	FUNCTION_35
0x4000431	      0xe800000000	                          call 0x4000436	      1000	merge.c	FUNCTION_35	CALL_1
0x4000436	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1001	merge.c	FUNCTION_35	CALL_2
0x400043b	      0x4889442410	             mov qword [rsp + 0x10], rax	      1000	merge.c	FUNCTION_35	CALL_1
0x4000440	      0xe800000000	                          call 0x4000445	      1001	merge.c	FUNCTION_35	CALL_2
0x4000445	    0x48c744240800	                  mov qword [rsp + 8], 0	      1003	merge.c	FUNCTION_35
0x400044e	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1005	merge.c	FUNCTION_35	WHILE_1
0x4000454	            0x7426	                            je 0x400047c	      1005	merge.c	FUNCTION_35	WHILE_1
0x4000456	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x400045b	      0xe800000000	                          call 0x4000460	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x4000460	          0x4839e8	                            cmp rax, rbp	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x4000463	            0x743b	                            je 0x40004a0	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x4000465	          0x4889de	                            mov rsi, rbx	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4000468	          0x4889c7	                            mov rdi, rax	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x400046b	      0xe800000000	                          call 0x4000470	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4000470	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1005	merge.c	FUNCTION_35	WHILE_1
0x4000476	        0x488d5808	                      lea rbx, [rax + 8]	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x400047a	            0x75da	                           jne 0x4000456	      1005	merge.c	FUNCTION_35	WHILE_1
0x400047c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1013	merge.c	FUNCTION_35
0x4000481	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1013	merge.c	FUNCTION_35
0x400048a	      0x488b442408	                mov rax, qword [rsp + 8]	      1013	merge.c	FUNCTION_35
0x400048f	            0x7519	                           jne 0x40004aa	      1013	merge.c	FUNCTION_35
0x4000491	        0x4883c420	                           add rsp, 0x20	      1013	merge.c	FUNCTION_35
0x4000495	              0x5b	                                 pop rbx	      1013	merge.c	FUNCTION_35
0x4000496	              0x5d	                                 pop rbp	      1013	merge.c	FUNCTION_35
0x4000497	            0x415c	                                 pop r12	      1013	merge.c	FUNCTION_35
0x4000499	              0xc3	                                     ret	      1013	merge.c	FUNCTION_35
0x400049a	    0x660f1f440000	                    nop word [rax + rax]	      1013	merge.c	FUNCTION_35
0x40004a0	    0x41c704240000	                      mov dword [r12], 0	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40004a8	            0xeba4	                           jmp 0x400044e	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40004aa	      0xe800000000	                          call 0x40004af	      1013	merge.c	FUNCTION_35
try_merge_strategy	FOR,2:ELSE,1:WHILE,0:functions,0:CALL,22:IF,7:SWITCH,0:DO,0	164
0x40011f0	            0x4156	                                push r14	       649	merge.c	FUNCTION_20
0x40011f2	            0x4155	                                push r13	       649	merge.c	FUNCTION_20
0x40011f4	          0x4989ce	                            mov r14, rcx	       649	merge.c	FUNCTION_20
0x40011f7	            0x4154	                                push r12	       649	merge.c	FUNCTION_20
0x40011f9	              0x55	                                push rbp	       649	merge.c	FUNCTION_20
0x40011fa	          0x4889f5	                            mov rbp, rsi	       649	merge.c	FUNCTION_20
0x40011fd	              0x53	                                push rbx	       649	merge.c	FUNCTION_20
0x40011fe	      0xbe01000000	                              mov esi, 1	       653	merge.c	FUNCTION_20	CALL_1
0x4001203	          0x4889fb	                            mov rbx, rdi	       649	merge.c	FUNCTION_20
0x4001206	      0xbf00000000	                              mov edi, 0	       653	merge.c	FUNCTION_20	CALL_1
0x400120b	          0x4989d5	                            mov r13, rdx	       649	merge.c	FUNCTION_20
0x400120e	    0x4881ecb00400	                          sub rsp, 0x4b0	       649	merge.c	FUNCTION_20
0x4001215	    0x64488b042528	                mov rax, qword fs:[0x28]	       649	merge.c	FUNCTION_20
0x400121e	    0x48898424a804	            mov qword [rsp + 0x4a8], rax	       649	merge.c	FUNCTION_20
0x4001226	            0x31c0	                            xor eax, eax	       649	merge.c	FUNCTION_20
0x4001228	      0xe800000000	                          call 0x400122d	       653	merge.c	FUNCTION_20	CALL_1
0x400122d	          0x4531c0	                            xor r8d, r8d	       654	merge.c	FUNCTION_20
0x4001230	            0x31c9	                            xor ecx, ecx	       654	merge.c	FUNCTION_20
0x4001232	            0x31d2	                            xor edx, edx	       654	merge.c	FUNCTION_20
0x4001234	      0xbe04000000	                              mov esi, 4	       654	merge.c	FUNCTION_20
0x4001239	      0xbf00000000	                              mov edi, 0	       654	merge.c	FUNCTION_20
0x400123e	      0xe800000000	                          call 0x4001243	       654	merge.c	FUNCTION_20
0x4001243	      0xba03000000	                              mov edx, 3	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4001248	      0xbe00000000	                              mov esi, 0	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x400124d	      0xbf00000000	                              mov edi, 0	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4001252	      0xe800000000	                          call 0x4001257	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4001257	            0x85c0	                           test eax, eax	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4001259	     0xf85d9010000	                           jne 0x4001438	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x400125f	      0xbf00000000	                              mov edi, 0	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x4001264	      0xb90a000000	                            mov ecx, 0xa	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x4001269	          0x4889de	                            mov rsi, rbx	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x400126c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x400126e	            0x7560	                           jne 0x40012d0	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x4001270	      0x49837d0800	                  cmp qword [r13 + 8], 0	       666	merge.c	FUNCTION_20	IF_2	IF_3
0x4001275	    0x48c744240800	                  mov qword [rsp + 8], 0	       662	merge.c	FUNCTION_20	IF_2
0x400127e	     0xf8484000000	                            je 0x4001308	       666	merge.c	FUNCTION_20	IF_2	IF_3
0x4001284	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_43
0x4001289	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_43
0x400128e	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_43
0x4001290	      0xe800000000	                          call 0x4001295	        54	gettext.h	FUNCTION_43
0x4001295	          0x4889c7	                            mov rdi, rax	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x4001298	            0x31c0	                            xor eax, eax	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x400129a	      0xe800000000	                          call 0x400129f	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x400129f	      0xb802000000	                              mov eax, 2	       668	merge.c	FUNCTION_20	IF_2	IF_3
0x40012a4	    0x488b8c24a804	           mov rcx, qword [rsp + 0x4a8] 	       702	merge.c	FUNCTION_20
0x40012ac	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       702	merge.c	FUNCTION_20
0x40012b5	     0xf85c4010000	                           jne 0x400147f	       702	merge.c	FUNCTION_20
0x40012bb	    0x4881c4b00400	                          add rsp, 0x4b0	       702	merge.c	FUNCTION_20
0x40012c2	              0x5b	                                 pop rbx	       702	merge.c	FUNCTION_20
0x40012c3	              0x5d	                                 pop rbp	       702	merge.c	FUNCTION_20
0x40012c4	            0x415c	                                 pop r12	       702	merge.c	FUNCTION_20
0x40012c6	            0x415d	                                 pop r13	       702	merge.c	FUNCTION_20
0x40012c8	            0x415e	                                 pop r14	       702	merge.c	FUNCTION_20
0x40012ca	              0xc3	                                     ret	       702	merge.c	FUNCTION_20
0x40012cb	       0xf1f440000	                   nop dword [rax + rax]	       702	merge.c	FUNCTION_20
0x40012d0	      0xbf00000000	                              mov edi, 0	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40012d5	      0xb908000000	                              mov ecx, 8	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40012da	          0x4889de	                            mov rsi, rbx	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40012dd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40012df	            0x748f	                            je 0x4001270	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40012e1	    0x488b15000000	            mov rdx, qword [0x040012e8] 	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40012e8	    0x488b35000000	            mov rsi, qword [0x040012ef] 	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40012ef	          0x4d89e9	                             mov r9, r13	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40012f2	    0x41b800000000	                              mov r8d, 0	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40012f8	          0x4889e9	                            mov rcx, rbp	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40012fb	          0x4889df	                            mov rdi, rbx	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40012fe	      0xe800000000	                          call 0x4001303	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4001303	            0xeb9f	                           jmp 0x40012a4	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4001305	           0xf1f00	                         nop dword [rax]	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4001308	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       671	merge.c	FUNCTION_20	IF_2	CALL_7
0x400130d	      0xe800000000	                          call 0x4001312	       671	merge.c	FUNCTION_20	IF_2	CALL_7
0x4001312	      0xbf00000000	                              mov edi, 0	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4001317	      0xb908000000	                              mov ecx, 8	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x400131c	          0x4889de	                            mov rsi, rbx	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x400131f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4001321	            0x7509	                           jne 0x400132c	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4001323	    0x48c744243000	               mov qword [rsp + 0x30], 0	       673	merge.c	FUNCTION_20	IF_2	IF_4
0x400132c	       0xfb654243c	           movzx edx, byte [rsp + 0x3c] 	       675	merge.c	FUNCTION_20	IF_2
0x4001331	     0xfb605000000	           movzx eax, byte [0x04001338] 	       675	merge.c	FUNCTION_20	IF_2
0x4001338	          0x83e2fe	                     and edx, 0xfffffffe	       675	merge.c	FUNCTION_20	IF_2
0x400133b	          0x83e001	                              and eax, 1	       675	merge.c	FUNCTION_20	IF_2
0x400133e	             0x9d0	                             or eax, edx	       675	merge.c	FUNCTION_20	IF_2
0x4001340	        0x8844243c	               mov byte [rsp + 0x3c], al	       675	merge.c	FUNCTION_20	IF_2
0x4001344	    0x8b0500000000	            mov eax, dword [0x0400134a] 	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x400134a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x400134d	     0xf84d6000000	                            je 0x4001429	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4001353	            0x31db	                            xor ebx, ebx	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4001355	    0x48833d000000	               cmp qword [0x0400135d], 0	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x400135d	        0x89442460	             mov dword [rsp + 0x60], eax	       676	merge.c	FUNCTION_20	IF_2
0x4001361	            0x7437	                            je 0x400139a	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4001363	       0xf1f440000	                   nop dword [rax + rax]	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4001368	    0x488b05000000	            mov rax, qword [0x0400136f] 	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x400136f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4001374	    0x4c8d24dd0000	                        lea r12, [rbx*8]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x400137c	        0x488b34d8	            mov rsi, qword [rax + rbx*8]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4001380	      0xe800000000	                          call 0x4001385	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4001385	            0x85c0	                           test eax, eax	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4001387	     0xf85d0000000	                           jne 0x400145d	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x400138d	        0x4883c301	                              add rbx, 1	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4001391	    0x48391d000000	            cmp qword [0x04001398], rbx 	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4001398	            0x77ce	                            ja 0x4001368	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x400139a	        0x498b4500	                    mov rax, qword [r13]	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x400139e	    0x48c744241800	               mov qword [rsp + 0x18], 0	       683	merge.c	FUNCTION_20	IF_2
0x40013a7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x40013ab	        0x4883c008	                              add rax, 8	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x40013af	          0x4885ed	                           test rbp, rbp	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x40013b2	      0x4889442420	             mov qword [rsp + 0x20], rax	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x40013b7	            0x741e	                            je 0x40013d7	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x40013b9	     0xf1f80000000	                         nop dword [rax]	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x40013c0	        0x488b7d00	                    mov rdi, qword [rbp]	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x40013c4	      0x488d742408	                      lea rsi, [rsp + 8]	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x40013c9	      0xe800000000	                          call 0x40013ce	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x40013ce	        0x488b6d08	                mov rbp, qword [rbp + 8]	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x40013d2	          0x4885ed	                           test rbp, rbp	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x40013d5	            0x75e9	                           jne 0x40013c0	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x40013d7	      0xbe01000000	                              mov esi, 1	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x40013dc	      0xbf00000000	                              mov edi, 0	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x40013e1	      0xe800000000	                          call 0x40013e6	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x40013e6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40013eb	        0x498b5500	                    mov rdx, qword [r13]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40013ef	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40013f4	          0x4989e0	                             mov r8, rsp	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40013f7	          0x4c89f6	                            mov rsi, r14	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40013fa	      0xe800000000	                          call 0x40013ff	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40013ff	            0x85c0	                           test eax, eax	       692	merge.c	FUNCTION_20	IF_2	IF_6
0x4001401	            0x89c3	                            mov ebx, eax	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x4001403	            0x787f	                            js 0x4001484	       692	merge.c	FUNCTION_20	IF_2	IF_6
0x4001405	      0xba03000000	                              mov edx, 3	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x400140a	      0xbe00000000	                              mov esi, 0	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x400140f	      0xbf00000000	                              mov edi, 0	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x4001414	      0xe800000000	                          call 0x4001419	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x4001419	            0x85c0	                           test eax, eax	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x400141b	            0x7571	                           jne 0x400148e	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x400141d	            0x31c0	                            xor eax, eax	       697	merge.c	FUNCTION_20	IF_2
0x400141f	            0x85db	                           test ebx, ebx	       697	merge.c	FUNCTION_20	IF_2
0x4001421	           0xf94c0	                                 sete al	       697	merge.c	FUNCTION_20	IF_2
0x4001424	      0xe97bfeffff	                           jmp 0x40012a4	       697	merge.c	FUNCTION_20	IF_2
0x4001429	      0xbf02000000	                              mov edi, 2	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x400142e	      0xe800000000	                          call 0x4001433	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4001433	      0xe91bffffff	                           jmp 0x4001353	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4001438	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_43
0x400143d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_43
0x4001442	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_43
0x4001444	      0xe800000000	                          call 0x4001449	        54	gettext.h	FUNCTION_43
0x4001449	          0x4889c7	                            mov rdi, rax	       657	merge.c	FUNCTION_20	CALL_3
0x400144c	            0x31c0	                            xor eax, eax	       657	merge.c	FUNCTION_20	CALL_3
0x400144e	      0xe800000000	                          call 0x4001453	       657	merge.c	FUNCTION_20	CALL_3
0x4001453	      0xb8ffffffff	                     mov eax, 0xffffffff	       657	merge.c	FUNCTION_20	CALL_3
0x4001458	      0xe947feffff	                           jmp 0x40012a4	       657	merge.c	FUNCTION_20	CALL_3
0x400145d	    0x488b05000000	            mov rax, qword [0x04001464] 	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4001464	      0xbf00000000	                              mov edi, 0	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4001469	        0x4a8b1c20	              mov rbx, qword [rax + r12]	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x400146d	      0xe85ef1ffff	                       call sym._.part.4	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4001472	          0x4889de	                            mov rsi, rbx	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4001475	          0x4889c7	                            mov rdi, rax	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4001478	            0x31c0	                            xor eax, eax	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x400147a	      0xe800000000	                          call 0x400147f	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x400147f	      0xe800000000	                          call 0x4001484	       702	merge.c	FUNCTION_20
0x4001484	      0xbf80000000	                           mov edi, 0x80	       693	merge.c	FUNCTION_20	IF_2	CALL_17
0x4001489	      0xe800000000	                          call 0x400148e	       693	merge.c	FUNCTION_20	IF_2	CALL_17
0x400148e	      0xe800000000	                          call 0x4001493	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4001493	      0xbf00000000	                              mov edi, 0	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4001498	          0x4889c3	                            mov rbx, rax	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x400149b	            0xebd0	                           jmp 0x400146d	       696	merge.c	FUNCTION_20	IF_2	CALL_21
abort_commit	FOR,0:ELSE,0:WHILE,0:functions,0:CALL,3:IF,1:SWITCH,0:DO,0	19
0x40007fb	            0x89df	                            mov edi, ebx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007fd	          0x4c89f6	                            mov rsi, r14	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000800	      0xe800000000	                          call 0x4000805	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000805	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000807	            0x750e	                           jne 0x4000817	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000809	      0x41803c2e00	                 cmp byte [r14 + rbp], 0	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400080e	      0xb801000000	                              mov eax, 1	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4000813	        0x440f44e0	                         cmove r12d, eax	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4000817	        0x4983c710	                           add r15, 0x10	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400081b	        0x4983ff50	                           cmp r15, 0x50	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x400081f	            0x75cf	                           jne 0x40007f0	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x4000821	          0x4585e4	                         test r12d, r12d	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x4000824	            0x7432	                            je 0x4000858	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x4000826	      0x8344240c01	                add dword [rsp + 0xc], 1	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400082b	    0x488344241008	               add qword [rsp + 0x10], 8	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000831	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000835	    0x390500000000	            cmp dword [0x0400083b], eax 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400083b	            0x7f93	                            jg 0x40007d0	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400083d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       142	merge.c	FUNCTION_2	IF_3	CALL_6
append_strategy	FOR,0:ELSE,0:WHILE,0:functions,0:CALL,0:IF,0:SWITCH,0:DO,0	39
0x4000350	    0x488b15000000	            mov rdx, qword [0x04000357] 	       167	merge.c	FUNCTION_3
0x4000357	    0x488b05000000	            mov rax, qword [0x0400035e] 	       167	merge.c	FUNCTION_3
0x400035e	              0x53	                                push rbx	       166	merge.c	FUNCTION_3
0x400035f	          0x4889fb	                            mov rbx, rdi	       166	merge.c	FUNCTION_3
0x4000362	        0x488d7201	                      lea rsi, [rdx + 1]	       167	merge.c	FUNCTION_3
0x4000366	          0x4839c6	                            cmp rsi, rax	       167	merge.c	FUNCTION_3
0x4000369	            0x7665	                           jbe 0x40003d0	       167	merge.c	FUNCTION_3
0x400036b	      0x488d444030	          lea rax, [rax + rax*2 + 0x30] 	       167	merge.c	FUNCTION_3
0x4000370	          0x48d1e8	                              shr rax, 1	       167	merge.c	FUNCTION_3
0x4000373	          0x4839c6	                            cmp rsi, rax	       167	merge.c	FUNCTION_3
0x4000376	            0x7748	                            ja 0x40003c0	       167	merge.c	FUNCTION_3
0x4000378	    0x488905000000	            mov qword [0x0400037f], rax 	       167	merge.c	FUNCTION_3
0x400037f	          0x4889c6	                            mov rsi, rax	       167	merge.c	FUNCTION_3
0x4000382	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_59	IF_1
0x400038c	          0x4839c6	                            cmp rsi, rax	       795	git-compat-util.h	FUNCTION_59	IF_1
0x400038f	            0x7753	                            ja 0x40003e4	       795	git-compat-util.h	FUNCTION_59	IF_1
0x4000391	    0x488b3d000000	            mov rdi, qword [0x04000398] 	       167	merge.c	FUNCTION_3
0x4000398	        0x48c1e603	                              shl rsi, 3	       167	merge.c	FUNCTION_3
0x400039c	      0xe800000000	                          call 0x40003a1	       167	merge.c	FUNCTION_3
0x40003a1	    0x488b15000000	            mov rdx, qword [0x040003a8] 	       167	merge.c	FUNCTION_3
0x40003a8	    0x488905000000	            mov qword [0x040003af], rax 	       167	merge.c	FUNCTION_3
0x40003af	        0x488d7201	                      lea rsi, [rdx + 1]	       167	merge.c	FUNCTION_3
0x40003b3	        0x48891cd0	            mov qword [rax + rdx*8], rbx	       168	merge.c	FUNCTION_3
0x40003b7	              0x5b	                                 pop rbx	       169	merge.c	FUNCTION_3
0x40003b8	    0x488935000000	            mov qword [0x040003bf], rsi 	       168	merge.c	FUNCTION_3
0x40003bf	              0xc3	                                     ret	       169	merge.c	FUNCTION_3
0x40003c0	    0x488935000000	            mov qword [0x040003c7], rsi 	       167	merge.c	FUNCTION_3
0x40003c7	            0xebb9	                           jmp 0x4000382	       167	merge.c	FUNCTION_3
0x40003c9	     0xf1f80000000	                         nop dword [rax]	       167	merge.c	FUNCTION_3
0x40003d0	    0x488b05000000	            mov rax, qword [0x040003d7] 	       167	merge.c	FUNCTION_3
0x40003d7	    0x488935000000	            mov qword [0x040003de], rsi 	       168	merge.c	FUNCTION_3
0x40003de	        0x48891cd0	            mov qword [rax + rdx*8], rbx	       168	merge.c	FUNCTION_3
0x40003e2	              0x5b	                                 pop rbx	       169	merge.c	FUNCTION_3
0x40003e3	              0xc3	                                     ret	       169	merge.c	FUNCTION_3
0x40003e4	          0x4889f2	                            mov rdx, rsi	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40003e7	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40003ec	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40003f1	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40003f3	      0xe800000000	                          call 0x40003f8	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
restore_state	FOR,0:ELSE,0:WHILE,0:functions,0:CALL,5:IF,1:SWITCH,0:DO,0	72
0x40002b5	              0xef	                             out dx, eax	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002b6	      0xe800000000	                          call 0x40002bb	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002bb	    0x890500000000	            mov dword [0x040002c1], eax 	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002c1	      0xe9fcfdffff	                           jmp 0x40000c2	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002d0	          0x4c89e2	                            mov rdx, r12	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002d3	          0x4889ee	                            mov rsi, rbp	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002d6	      0xbf00000000	                              mov edi, 0	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002db	            0xeb9e	                           jmp 0x400027b	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002dd	           0xf1f00	                         nop dword [rax]	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002e0	          0x4c89e7	                            mov rdi, r12	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x40002e3	      0xe800000000	                          call 0x40002e8	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x40002e8	            0x85c0	                           test eax, eax	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ea	            0x7834	                            js 0x4000320	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ec	           0xf95c0	                                setne al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ef	           0xfb6c0	                           movzx eax, al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002f2	    0x890500000000	            mov dword [0x040002f8], eax 	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002f8	      0xe9ddfdffff	                           jmp 0x40000da	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002fd	           0xf1f00	                         nop dword [rax]	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4000300	          0x4c89e6	                            mov rsi, r12	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000303	          0x4889ef	                            mov rdi, rbp	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000306	      0xe800000000	                          call 0x400030b	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x400030b	    0x890500000000	            mov dword [0x04000311], eax 	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000311	      0xe9c4fdffff	                           jmp 0x40000da	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x4000316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x4000320	          0x4d85e4	                           test r12, r12	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000323	     0xf84b1fdffff	                            je 0x40000da	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000329	      0xbf00000000	                              mov edi, 0	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400032e	      0xb905000000	                              mov ecx, 5	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000333	          0x4c89e6	                            mov rsi, r12	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000336	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000338	     0xf859cfdffff	                           jne 0x40000da	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400033e	    0xc70500000000	               mov dword [0x04000348], 2	       584	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9
0x4000348	            0x31db	                            xor ebx, ebx	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x400034a	      0xe98bfdffff	                           jmp 0x40000da	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x400034f	              0x90	                                     nop	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x4000350	    0x488b15000000	            mov rdx, qword [0x04000357] 	       167	merge.c	FUNCTION_3
0x4000357	    0x488b05000000	            mov rax, qword [0x0400035e] 	       167	merge.c	FUNCTION_3
0x400035e	              0x53	                                push rbx	       166	merge.c	FUNCTION_3
0x400035f	          0x4889fb	                            mov rbx, rdi	       166	merge.c	FUNCTION_3
0x4000362	        0x488d7201	                      lea rsi, [rdx + 1]	       167	merge.c	FUNCTION_3
0x4000366	          0x4839c6	                            cmp rsi, rax	       167	merge.c	FUNCTION_3
0x4000369	            0x7665	                           jbe 0x40003d0	       167	merge.c	FUNCTION_3
0x400036b	      0x488d444030	          lea rax, [rax + rax*2 + 0x30] 	       167	merge.c	FUNCTION_3
0x4000370	          0x48d1e8	                              shr rax, 1	       167	merge.c	FUNCTION_3
0x4000373	          0x4839c6	                            cmp rsi, rax	       167	merge.c	FUNCTION_3
0x4000376	            0x7748	                            ja 0x40003c0	       167	merge.c	FUNCTION_3
0x4000378	    0x488905000000	            mov qword [0x0400037f], rax 	       167	merge.c	FUNCTION_3
0x400037f	          0x4889c6	                            mov rsi, rax	       167	merge.c	FUNCTION_3
0x4000382	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_59	IF_1
0x400038c	          0x4839c6	                            cmp rsi, rax	       795	git-compat-util.h	FUNCTION_59	IF_1
0x400038f	            0x7753	                            ja 0x40003e4	       795	git-compat-util.h	FUNCTION_59	IF_1
0x4000391	    0x488b3d000000	            mov rdi, qword [0x04000398] 	       167	merge.c	FUNCTION_3
0x4000398	        0x48c1e603	                              shl rsi, 3	       167	merge.c	FUNCTION_3
0x400039c	      0xe800000000	                          call 0x40003a1	       167	merge.c	FUNCTION_3
0x40003a1	    0x488b15000000	            mov rdx, qword [0x040003a8] 	       167	merge.c	FUNCTION_3
0x40003a8	    0x488905000000	            mov qword [0x040003af], rax 	       167	merge.c	FUNCTION_3
0x40003af	        0x488d7201	                      lea rsi, [rdx + 1]	       167	merge.c	FUNCTION_3
0x40003b3	        0x48891cd0	            mov qword [rax + rdx*8], rbx	       168	merge.c	FUNCTION_3
0x40003b7	              0x5b	                                 pop rbx	       169	merge.c	FUNCTION_3
0x40003b8	    0x488935000000	            mov qword [0x040003bf], rsi 	       168	merge.c	FUNCTION_3
0x40003bf	              0xc3	                                     ret	       169	merge.c	FUNCTION_3
0x40003c0	    0x488935000000	            mov qword [0x040003c7], rsi 	       167	merge.c	FUNCTION_3
0x40003c7	            0xebb9	                           jmp 0x4000382	       167	merge.c	FUNCTION_3
0x40003c9	     0xf1f80000000	                         nop dword [rax]	       167	merge.c	FUNCTION_3
0x40003d0	    0x488b05000000	            mov rax, qword [0x040003d7] 	       167	merge.c	FUNCTION_3
0x40003d7	    0x488935000000	            mov qword [0x040003de], rsi 	       168	merge.c	FUNCTION_3
0x40003de	        0x48891cd0	            mov qword [rax + rdx*8], rbx	       168	merge.c	FUNCTION_3
0x40003e2	              0x5b	                                 pop rbx	       169	merge.c	FUNCTION_3
0x40003e3	              0xc3	                                     ret	       169	merge.c	FUNCTION_3
0x40003e4	              0x48	                                 invalid	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40003e5	              0x89	                                 invalid	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
get_strategy	FOR,5:ELSE,0:WHILE,0:functions,0:CALL,14:IF,7:SWITCH,0:DO,0	194
0x40005e0	            0x4157	                                push r15	       113	merge.c	FUNCTION_2
0x40005e2	            0x4156	                                push r14	       113	merge.c	FUNCTION_2
0x40005e4	            0x4155	                                push r13	       113	merge.c	FUNCTION_2
0x40005e6	            0x4154	                                push r12	       113	merge.c	FUNCTION_2
0x40005e8	              0x55	                                push rbp	       113	merge.c	FUNCTION_2
0x40005e9	              0x53	                                push rbx	       113	merge.c	FUNCTION_2
0x40005ea	        0x4883ec48	                           sub rsp, 0x48	       113	merge.c	FUNCTION_2
0x40005ee	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	merge.c	FUNCTION_2
0x40005f7	      0x4889442438	             mov qword [rsp + 0x38], rax	       113	merge.c	FUNCTION_2
0x40005fc	            0x31c0	                            xor eax, eax	       113	merge.c	FUNCTION_2
0x40005fe	          0x4885ff	                           test rdi, rdi	       119	merge.c	FUNCTION_2	IF_1
0x4000601	     0xf8485020000	                            je 0x400088c	       119	merge.c	FUNCTION_2	IF_1
0x4000607	          0x4989fd	                            mov r13, rdi	       119	merge.c	FUNCTION_2	IF_1
0x400060a	            0x31db	                            xor ebx, ebx	       119	merge.c	FUNCTION_2	IF_1
0x400060c	          0x4889d8	                            mov rax, rbx	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400060f	          0x4c89ef	                            mov rdi, r13	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000612	          0x4863eb	                         movsxd rbp, ebx	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000615	        0x48c1e004	                              shl rax, 4	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000619	    0x488bb0000000	                    mov rsi, qword [rax]	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000620	      0xe800000000	                          call 0x4000625	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000625	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000627	     0xf8443020000	                            je 0x4000870	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400062d	        0x4883c301	                              add rbx, 1	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000631	        0x4883fb05	                              cmp rbx, 5	       122	merge.c	FUNCTION_2	FOR_1
0x4000635	            0x75d5	                           jne 0x400060c	       122	merge.c	FUNCTION_2	FOR_1
0x4000637	    0x8b3d00000000	            mov edi, dword [0x0400063d] 	       126	merge.c	FUNCTION_2	IF_3
0x400063d	            0x85ff	                           test edi, edi	       126	merge.c	FUNCTION_2	IF_3
0x400063f	     0xf842b010000	                            je 0x4000770	       126	merge.c	FUNCTION_2	IF_3
0x4000645	          0x4c89ee	                            mov rsi, r13	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000648	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x400064d	      0xe800000000	                          call 0x4000652	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000652	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000654	            0x744a	                            je 0x40006a0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000656	      0xbe10000000	                           mov esi, 0x10	       159	merge.c	FUNCTION_2	CALL_13
0x400065b	      0xbf01000000	                              mov edi, 1	       159	merge.c	FUNCTION_2	CALL_13
0x4000660	      0xe800000000	                          call 0x4000665	       159	merge.c	FUNCTION_2	CALL_13
0x4000665	          0x4c89ef	                            mov rdi, r13	       160	merge.c	FUNCTION_2	CALL_14
0x4000668	          0x4889c3	                            mov rbx, rax	       159	merge.c	FUNCTION_2	CALL_13
0x400066b	      0xe800000000	                          call 0x4000670	       160	merge.c	FUNCTION_2	CALL_14
0x4000670	    0xc74308080000	                  mov dword [rbx + 8], 8	       161	merge.c	FUNCTION_2
0x4000677	          0x488903	                    mov qword [rbx], rax	       160	merge.c	FUNCTION_2	CALL_14
0x400067a	          0x4889d8	                            mov rax, rbx	       162	merge.c	FUNCTION_2
0x400067d	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       163	merge.c	FUNCTION_2
0x4000682	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       163	merge.c	FUNCTION_2
0x400068b	     0xf8502020000	                           jne 0x4000893	       163	merge.c	FUNCTION_2
0x4000691	        0x4883c448	                           add rsp, 0x48	       163	merge.c	FUNCTION_2
0x4000695	              0x5b	                                 pop rbx	       163	merge.c	FUNCTION_2
0x4000696	              0x5d	                                 pop rbp	       163	merge.c	FUNCTION_2
0x4000697	            0x415c	                                 pop r12	       163	merge.c	FUNCTION_2
0x4000699	            0x415d	                                 pop r13	       163	merge.c	FUNCTION_2
0x400069b	            0x415e	                                 pop r14	       163	merge.c	FUNCTION_2
0x400069d	            0x415f	                                 pop r15	       163	merge.c	FUNCTION_2
0x400069f	              0xc3	                                     ret	       163	merge.c	FUNCTION_2
0x40006a0	          0x4c89ee	                            mov rsi, r13	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006a3	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006a8	      0xe800000000	                          call 0x40006ad	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006ad	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006af	            0x75a5	                           jne 0x4000656	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006b1	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006b6	            0x31ed	                            xor ebp, ebp	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006b8	            0x31db	                            xor ebx, ebx	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006ba	      0xe811ffffff	                       call sym._.part.4	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006bf	    0x488b3d000000	            mov rdi, qword [0x040006c6] 	        97	stdio2.h	CALL_228
0x40006c6	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_228
0x40006c9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x40006cc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40006d1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x40006d3	      0xe800000000	                          call 0x40006d8	        97	stdio2.h	CALL_228
0x40006d8	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x40006dd	      0xe8eefeffff	                       call sym._.part.4	        97	stdio2.h	CALL_228
0x40006e2	    0x488b3d000000	            mov rdi, qword [0x040006e9] 	        97	stdio2.h	CALL_228
0x40006e9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x40006ec	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40006f1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x40006f3	      0xe800000000	                          call 0x40006f8	        97	stdio2.h	CALL_228
0x40006f8	    0x8b0d00000000	            mov ecx, dword [0x040006fe] 	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006fe	            0x85c9	                           test ecx, ecx	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000700	            0x7e36	                           jle 0x4000738	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000702	    0x488b05000000	            mov rax, qword [0x04000709] 	       148	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000709	    0x488b3d000000	            mov rdi, qword [0x04000710] 	        97	stdio2.h	CALL_228
0x4000710	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_228
0x4000715	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x400071a	          0x83c301	                              add ebx, 1	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x400071d	        0x488b0c28	              mov rcx, qword [rax + rbp]	        97	stdio2.h	CALL_228
0x4000721	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x4000723	        0x4883c508	                              add rbp, 8	        97	stdio2.h	CALL_228
0x4000727	        0x4883c108	                              add rcx, 8	        97	stdio2.h	CALL_228
0x400072b	      0xe800000000	                          call 0x4000730	        97	stdio2.h	CALL_228
0x4000730	    0x391d00000000	            cmp dword [0x04000736], ebx 	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000736	            0x7fca	                            jg 0x4000702	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000738	    0x488b0d000000	            mov rcx, qword [0x0400073f] 	        97	stdio2.h	CALL_228
0x400073f	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_228
0x4000744	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000749	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x400074e	      0xe800000000	                          call 0x4000753	        97	stdio2.h	CALL_228
0x4000753	    0x8b1500000000	            mov edx, dword [0x04000759] 	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x4000759	            0x85d2	                           test edx, edx	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x400075b	     0xf8537010000	                           jne 0x4000898	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x4000761	      0xbf01000000	                              mov edi, 1	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x4000766	      0xe800000000	                          call 0x400076b	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x400076b	       0xf1f440000	                   nop dword [rax + rax]	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x4000770	      0xbe00000000	                              mov esi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x4000775	      0xba00000000	                              mov edx, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x400077a	      0xbf00000000	                              mov edi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x400077f	    0xc70500000000	               mov dword [0x04000789], 1	       128	merge.c	FUNCTION_2	IF_3
0x4000789	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4000792	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_75	CALL_6
0x400079b	      0xe800000000	                          call 0x40007a0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x40007a0	    0x8b3500000000	            mov esi, dword [0x040007a6] 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007a6	            0x85f6	                           test esi, esi	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007a8	     0xf8ed2000000	                           jle 0x4000880	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007ae	      0x488d442420	                   lea rax, [rsp + 0x20]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007b3	    0x48c744241000	               mov qword [rsp + 0x10], 0	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007bc	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007c4	      0x4889442418	             mov qword [rsp + 0x18], rax	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007c9	     0xf1f80000000	                         nop dword [rax]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007d0	    0x488b05000000	            mov rax, qword [0x040007d7] 	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007d7	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007dc	          0x4531ff	                          xor r15d, r15d	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007df	          0x4531e4	                          xor r12d, r12d	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007e2	        0x488b1c08	              mov rbx, qword [rax + rcx]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007e6	          0x488b2b	                    mov rbp, qword [rbx]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007e9	        0x4883c308	                              add rbx, 8	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007ed	           0xf1f00	                         nop dword [rax]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007f0	    0x4d8bb7000000	                    mov r14, qword [r15]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007f7	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007fa	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007fd	          0x4c89f6	                            mov rsi, r14	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000800	      0xe800000000	                          call 0x4000805	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000805	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000807	            0x750e	                           jne 0x4000817	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000809	      0x41803c2e00	                 cmp byte [r14 + rbp], 0	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400080e	      0xb801000000	                              mov eax, 1	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4000813	        0x440f44e0	                         cmove r12d, eax	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4000817	        0x4983c710	                           add r15, 0x10	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400081b	        0x4983ff50	                           cmp r15, 0x50	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x400081f	            0x75cf	                           jne 0x40007f0	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x4000821	          0x4585e4	                         test r12d, r12d	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x4000824	            0x7432	                            je 0x4000858	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x4000826	      0x8344240c01	                add dword [rsp + 0xc], 1	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400082b	    0x488344241008	               add qword [rsp + 0x10], 8	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000831	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000835	    0x390500000000	            cmp dword [0x0400083b], eax 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400083b	            0x7f93	                            jg 0x40007d0	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400083d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000842	      0xbf00000000	                              mov edi, 0	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000847	      0xe800000000	                          call 0x400084c	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x400084c	      0xe9f4fdffff	                           jmp 0x4000645	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000851	     0xf1f80000000	                         nop dword [rax]	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000858	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x400085d	            0x89ea	                            mov edx, ebp	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x400085f	          0x4889de	                            mov rsi, rbx	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000862	      0xe800000000	                          call 0x4000867	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000867	            0xebbd	                           jmp 0x4000826	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000869	     0xf1f80000000	                         nop dword [rax]	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000870	        0x48c1e504	                              shl rbp, 4	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000874	    0x488d85000000	                          lea rax, [rbp]	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x400087b	      0xe9fdfdffff	                           jmp 0x400067d	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000880	      0x488d442420	                   lea rax, [rsp + 0x20]	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000885	      0x4889442418	             mov qword [rsp + 0x18], rax	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x400088a	            0xebb1	                           jmp 0x400083d	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x400088c	            0x31c0	                            xor eax, eax	       120	merge.c	FUNCTION_2	IF_1
0x400088e	      0xe9eafdffff	                           jmp 0x400067d	       120	merge.c	FUNCTION_2	IF_1
0x4000893	      0xe800000000	                          call 0x4000898	       163	merge.c	FUNCTION_2
0x4000898	      0xbf00000000	                              mov edi, 0	       163	merge.c	FUNCTION_2
0x400089d	            0x31ed	                            xor ebp, ebp	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400089f	            0x31db	                            xor ebx, ebx	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008a1	      0xe82afdffff	                       call sym._.part.4	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008a6	    0x488b3d000000	            mov rdi, qword [0x040008ad] 	        97	stdio2.h	CALL_228
0x40008ad	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x40008b0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40008b5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x40008b7	      0xe800000000	                          call 0x40008bc	        97	stdio2.h	CALL_228
0x40008bc	    0x8b0500000000	            mov eax, dword [0x040008c2] 	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008c2	            0x85c0	                           test eax, eax	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008c4	            0x7e36	                           jle 0x40008fc	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008c6	    0x488b05000000	            mov rax, qword [0x040008cd] 	       153	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008cd	    0x488b3d000000	            mov rdi, qword [0x040008d4] 	        97	stdio2.h	CALL_228
0x40008d4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_228
0x40008d9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40008de	          0x83c301	                              add ebx, 1	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008e1	        0x488b0c28	              mov rcx, qword [rax + rbp]	        97	stdio2.h	CALL_228
0x40008e5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x40008e7	        0x4883c508	                              add rbp, 8	        97	stdio2.h	CALL_228
0x40008eb	        0x4883c108	                              add rcx, 8	        97	stdio2.h	CALL_228
0x40008ef	      0xe800000000	                          call 0x40008f4	        97	stdio2.h	CALL_228
0x40008f4	    0x391d00000000	            cmp dword [0x040008fa], ebx 	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008fa	            0x7fca	                            jg 0x40008c6	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008fc	    0x488b0d000000	            mov rcx, qword [0x04000903] 	        97	stdio2.h	CALL_228
0x4000903	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_228
0x4000908	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x400090d	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x4000912	      0xe800000000	                          call 0x4000917	        97	stdio2.h	CALL_228
0x4000917	      0xe945feffff	                           jmp 0x4000761	        97	stdio2.h	CALL_228
finish	FOR,0:ELSE,3:WHILE,0:functions,0:CALL,16:IF,5:SWITCH,0:DO,0	224
0x400042a	      0x4889442418	             mov qword [rsp + 0x18], rax	       987	merge.c	FUNCTION_35
0x400042f	            0x31c0	                            xor eax, eax	       987	merge.c	FUNCTION_35
0x4000431	      0xe800000000	                          call 0x4000436	      1000	merge.c	FUNCTION_35	CALL_1
0x4000436	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1001	merge.c	FUNCTION_35	CALL_2
0x400043b	      0x4889442410	             mov qword [rsp + 0x10], rax	      1000	merge.c	FUNCTION_35	CALL_1
0x4000440	      0xe800000000	                          call 0x4000445	      1001	merge.c	FUNCTION_35	CALL_2
0x4000445	    0x48c744240800	                  mov qword [rsp + 8], 0	      1003	merge.c	FUNCTION_35
0x400044e	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1005	merge.c	FUNCTION_35	WHILE_1
0x4000454	            0x7426	                            je 0x400047c	      1005	merge.c	FUNCTION_35	WHILE_1
0x4000456	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x400045b	      0xe800000000	                          call 0x4000460	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x4000460	          0x4839e8	                            cmp rax, rbp	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x4000463	            0x743b	                            je 0x40004a0	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x4000465	          0x4889de	                            mov rsi, rbx	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4000468	          0x4889c7	                            mov rdi, rax	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x400046b	      0xe800000000	                          call 0x4000470	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4000470	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1005	merge.c	FUNCTION_35	WHILE_1
0x4000476	        0x488d5808	                      lea rbx, [rax + 8]	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x400047a	            0x75da	                           jne 0x4000456	      1005	merge.c	FUNCTION_35	WHILE_1
0x400047c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1013	merge.c	FUNCTION_35
0x4000481	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1013	merge.c	FUNCTION_35
0x400048a	      0x488b442408	                mov rax, qword [rsp + 8]	      1013	merge.c	FUNCTION_35
0x400048f	            0x7519	                           jne 0x40004aa	      1013	merge.c	FUNCTION_35
0x4000491	        0x4883c420	                           add rsp, 0x20	      1013	merge.c	FUNCTION_35
0x4000495	              0x5b	                                 pop rbx	      1013	merge.c	FUNCTION_35
0x4000496	              0x5d	                                 pop rbp	      1013	merge.c	FUNCTION_35
0x4000497	            0x415c	                                 pop r12	      1013	merge.c	FUNCTION_35
0x4000499	              0xc3	                                     ret	      1013	merge.c	FUNCTION_35
0x400049a	    0x660f1f440000	                    nop word [rax + rax]	      1013	merge.c	FUNCTION_35
0x40004a0	    0x41c704240000	                      mov dword [r12], 0	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40004a8	            0xeba4	                           jmp 0x400044e	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40004aa	      0xe800000000	                          call 0x40004af	      1013	merge.c	FUNCTION_35
0x40004af	              0x90	                                     nop	      1013	merge.c	FUNCTION_35
0x40004b0	            0x85d2	                           test edx, edx	       184	merge.c	FUNCTION_5	IF_1
0x40004b2	     0xf8590000000	                           jne 0x4000548	       184	merge.c	FUNCTION_5	IF_1
0x40004b8	              0x55	                                push rbp	       183	merge.c	FUNCTION_5
0x40004b9	              0x53	                                push rbx	       183	merge.c	FUNCTION_5
0x40004ba	          0x4889f3	                            mov rbx, rsi	       183	merge.c	FUNCTION_5
0x40004bd	        0x4883ec08	                              sub rsp, 8	       183	merge.c	FUNCTION_5
0x40004c1	    0x488b0d000000	            mov rcx, qword [0x040004c8] 	       187	merge.c	FUNCTION_5
0x40004c8	    0x488b05000000	            mov rax, qword [0x040004cf] 	       187	merge.c	FUNCTION_5
0x40004cf	        0x488d5101	                      lea rdx, [rcx + 1]	       187	merge.c	FUNCTION_5
0x40004d3	          0x4839c2	                            cmp rdx, rax	       187	merge.c	FUNCTION_5
0x40004d6	     0xf8684000000	                           jbe 0x4000560	       187	merge.c	FUNCTION_5
0x40004dc	      0x488d444030	          lea rax, [rax + rax*2 + 0x30] 	       187	merge.c	FUNCTION_5
0x40004e1	          0x48d1e8	                              shr rax, 1	       187	merge.c	FUNCTION_5
0x40004e4	          0x4839c2	                            cmp rdx, rax	       187	merge.c	FUNCTION_5
0x40004e7	            0x7667	                           jbe 0x4000550	       187	merge.c	FUNCTION_5
0x40004e9	    0x488915000000	            mov qword [0x040004f0], rdx 	       187	merge.c	FUNCTION_5
0x40004f0	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_59	IF_1
0x40004fa	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_59	IF_1
0x40004fd	            0x776a	                            ja 0x4000569	       795	git-compat-util.h	FUNCTION_59	IF_1
0x40004ff	    0x488b3d000000	            mov rdi, qword [0x04000506] 	       187	merge.c	FUNCTION_5
0x4000506	    0x488d34d50000	                        lea rsi, [rdx*8]	       187	merge.c	FUNCTION_5
0x400050e	      0xe800000000	                          call 0x4000513	       187	merge.c	FUNCTION_5
0x4000513	    0x488b0d000000	            mov rcx, qword [0x0400051a] 	       187	merge.c	FUNCTION_5
0x400051a	    0x488905000000	            mov qword [0x04000521], rax 	       187	merge.c	FUNCTION_5
0x4000521	        0x488d5101	                      lea rdx, [rcx + 1]	       187	merge.c	FUNCTION_5
0x4000525	        0x488d2cc8	                  lea rbp, [rax + rcx*8]	       188	merge.c	FUNCTION_5	CALL_1
0x4000529	          0x4889df	                            mov rdi, rbx	       188	merge.c	FUNCTION_5	CALL_1
0x400052c	    0x488915000000	            mov qword [0x04000533], rdx 	       188	merge.c	FUNCTION_5	CALL_1
0x4000533	      0xe800000000	                          call 0x4000538	       188	merge.c	FUNCTION_5	CALL_1
0x4000538	        0x48894500	                    mov qword [rbp], rax	       188	merge.c	FUNCTION_5	CALL_1
0x400053c	        0x4883c408	                              add rsp, 8	       190	merge.c	FUNCTION_5
0x4000540	            0x31c0	                            xor eax, eax	       190	merge.c	FUNCTION_5
0x4000542	              0x5b	                                 pop rbx	       190	merge.c	FUNCTION_5
0x4000543	              0x5d	                                 pop rbp	       190	merge.c	FUNCTION_5
0x4000544	              0xc3	                                     ret	       190	merge.c	FUNCTION_5
0x4000545	           0xf1f00	                         nop dword [rax]	       190	merge.c	FUNCTION_5
0x4000548	            0x31c0	                            xor eax, eax	       190	merge.c	FUNCTION_5
0x400054a	              0xc3	                                     ret	       190	merge.c	FUNCTION_5
0x400054b	       0xf1f440000	                   nop dword [rax + rax]	       190	merge.c	FUNCTION_5
0x4000550	    0x488905000000	            mov qword [0x04000557], rax 	       187	merge.c	FUNCTION_5
0x4000557	          0x4889c2	                            mov rdx, rax	       187	merge.c	FUNCTION_5
0x400055a	            0xeb94	                           jmp 0x40004f0	       187	merge.c	FUNCTION_5
0x400055c	         0xf1f4000	                         nop dword [rax]	       187	merge.c	FUNCTION_5
0x4000560	    0x488b05000000	            mov rax, qword [0x04000567] 	       187	merge.c	FUNCTION_5
0x4000567	            0xebbc	                           jmp 0x4000525	       187	merge.c	FUNCTION_5
0x4000569	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x400056e	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x4000573	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x4000575	      0xe800000000	                          call 0x400057a	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x400057a	    0x660f1f440000	                    nop word [rax + rax]	       796	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x4000580	        0x4883ec08	                              sub rsp, 8	       161	strbuf.h	FUNCTION_86
0x4000584	          0x488b07	                    mov rax, qword [rdi]	       162	strbuf.h	FUNCTION_86	IF_1
0x4000587	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_86	IF_1
0x400058b	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_86	IF_1
0x400058f	          0x4839f0	                            cmp rax, rsi	       162	strbuf.h	FUNCTION_86	IF_1
0x4000592	            0x722a	                            jb 0x40005be	       162	strbuf.h	FUNCTION_86	IF_1
0x4000594	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       165	strbuf.h	FUNCTION_86	IF_2
0x4000598	        0x48897708	                mov qword [rdi + 8], rsi	       164	strbuf.h	FUNCTION_86
0x400059c	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_86	IF_2
0x40005a2	            0x740c	                            je 0x40005b0	       165	strbuf.h	FUNCTION_86	IF_2
0x40005a4	        0xc6043000	                 mov byte [rax + rsi], 0	       166	strbuf.h	FUNCTION_86	IF_2
0x40005a8	        0x4883c408	                              add rsp, 8	       169	strbuf.h	FUNCTION_86
0x40005ac	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_86
0x40005ad	           0xf1f00	                         nop dword [rax]	       169	strbuf.h	FUNCTION_86
0x40005b0	    0x803d00000000	                cmp byte [0x040005b7], 0	       168	strbuf.h	FUNCTION_86	CALL_2
0x40005b7	            0x74ef	                            je 0x40005a8	       168	strbuf.h	FUNCTION_86	CALL_2
0x40005b9	      0xe800000000	                          call 0x40005be	       168	strbuf.h	FUNCTION_86	CALL_2
0x40005be	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_86	CALL_1
0x40005c3	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_86	CALL_1
0x40005c5	      0xe800000000	                          call 0x40005ca	       163	strbuf.h	FUNCTION_86	CALL_1
0x40005ca	    0x660f1f440000	                    nop word [rax + rax]	       163	strbuf.h	FUNCTION_86	CALL_1
0x40005d0	          0x4889fe	                            mov rsi, rdi	        50	gettext.h	
0x40005d3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_43
0x40005d8	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_43
0x40005da	      0xe900000000	                           jmp 0x40005df	        54	gettext.h	FUNCTION_43
0x40005df	              0x90	                                     nop	        54	gettext.h	FUNCTION_43
0x40005e0	            0x4157	                                push r15	       113	merge.c	FUNCTION_2
0x40005e2	            0x4156	                                push r14	       113	merge.c	FUNCTION_2
0x40005e4	            0x4155	                                push r13	       113	merge.c	FUNCTION_2
0x40005e6	            0x4154	                                push r12	       113	merge.c	FUNCTION_2
0x40005e8	              0x55	                                push rbp	       113	merge.c	FUNCTION_2
0x40005e9	              0x53	                                push rbx	       113	merge.c	FUNCTION_2
0x40005ea	        0x4883ec48	                           sub rsp, 0x48	       113	merge.c	FUNCTION_2
0x40005ee	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	merge.c	FUNCTION_2
0x40005f7	      0x4889442438	             mov qword [rsp + 0x38], rax	       113	merge.c	FUNCTION_2
0x40005fc	            0x31c0	                            xor eax, eax	       113	merge.c	FUNCTION_2
0x40005fe	          0x4885ff	                           test rdi, rdi	       119	merge.c	FUNCTION_2	IF_1
0x4000601	     0xf8485020000	                            je 0x400088c	       119	merge.c	FUNCTION_2	IF_1
0x4000607	          0x4989fd	                            mov r13, rdi	       119	merge.c	FUNCTION_2	IF_1
0x400060a	            0x31db	                            xor ebx, ebx	       119	merge.c	FUNCTION_2	IF_1
0x400060c	          0x4889d8	                            mov rax, rbx	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400060f	          0x4c89ef	                            mov rdi, r13	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000612	          0x4863eb	                         movsxd rbp, ebx	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000615	        0x48c1e004	                              shl rax, 4	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000619	    0x488bb0000000	                    mov rsi, qword [rax]	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000620	      0xe800000000	                          call 0x4000625	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000625	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000627	     0xf8443020000	                            je 0x4000870	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400062d	        0x4883c301	                              add rbx, 1	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000631	        0x4883fb05	                              cmp rbx, 5	       122	merge.c	FUNCTION_2	FOR_1
0x4000635	            0x75d5	                           jne 0x400060c	       122	merge.c	FUNCTION_2	FOR_1
0x4000637	    0x8b3d00000000	            mov edi, dword [0x0400063d] 	       126	merge.c	FUNCTION_2	IF_3
0x400063d	            0x85ff	                           test edi, edi	       126	merge.c	FUNCTION_2	IF_3
0x400063f	     0xf842b010000	                            je 0x4000770	       126	merge.c	FUNCTION_2	IF_3
0x4000645	          0x4c89ee	                            mov rsi, r13	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000648	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x400064d	      0xe800000000	                          call 0x4000652	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000652	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000654	            0x744a	                            je 0x40006a0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000656	      0xbe10000000	                           mov esi, 0x10	       159	merge.c	FUNCTION_2	CALL_13
0x400065b	      0xbf01000000	                              mov edi, 1	       159	merge.c	FUNCTION_2	CALL_13
0x4000660	      0xe800000000	                          call 0x4000665	       159	merge.c	FUNCTION_2	CALL_13
0x4000665	          0x4c89ef	                            mov rdi, r13	       160	merge.c	FUNCTION_2	CALL_14
0x4000668	          0x4889c3	                            mov rbx, rax	       159	merge.c	FUNCTION_2	CALL_13
0x400066b	      0xe800000000	                          call 0x4000670	       160	merge.c	FUNCTION_2	CALL_14
0x4000670	    0xc74308080000	                  mov dword [rbx + 8], 8	       161	merge.c	FUNCTION_2
0x4000677	          0x488903	                    mov qword [rbx], rax	       160	merge.c	FUNCTION_2	CALL_14
0x400067a	          0x4889d8	                            mov rax, rbx	       162	merge.c	FUNCTION_2
0x400067d	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       163	merge.c	FUNCTION_2
0x4000682	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       163	merge.c	FUNCTION_2
0x400068b	     0xf8502020000	                           jne 0x4000893	       163	merge.c	FUNCTION_2
0x4000691	        0x4883c448	                           add rsp, 0x48	       163	merge.c	FUNCTION_2
0x4000695	              0x5b	                                 pop rbx	       163	merge.c	FUNCTION_2
0x4000696	              0x5d	                                 pop rbp	       163	merge.c	FUNCTION_2
0x4000697	            0x415c	                                 pop r12	       163	merge.c	FUNCTION_2
0x4000699	            0x415d	                                 pop r13	       163	merge.c	FUNCTION_2
0x400069b	            0x415e	                                 pop r14	       163	merge.c	FUNCTION_2
0x400069d	            0x415f	                                 pop r15	       163	merge.c	FUNCTION_2
0x400069f	              0xc3	                                     ret	       163	merge.c	FUNCTION_2
0x40006a0	          0x4c89ee	                            mov rsi, r13	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006a3	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006a8	      0xe800000000	                          call 0x40006ad	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006ad	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006af	            0x75a5	                           jne 0x4000656	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006b1	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40006b6	            0x31ed	                            xor ebp, ebp	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006b8	            0x31db	                            xor ebx, ebx	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006ba	      0xe811ffffff	                       call sym._.part.4	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006bf	    0x488b3d000000	            mov rdi, qword [0x040006c6] 	        97	stdio2.h	CALL_228
0x40006c6	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_228
0x40006c9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x40006cc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40006d1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x40006d3	      0xe800000000	                          call 0x40006d8	        97	stdio2.h	CALL_228
0x40006d8	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x40006dd	      0xe8eefeffff	                       call sym._.part.4	        97	stdio2.h	CALL_228
0x40006e2	    0x488b3d000000	            mov rdi, qword [0x040006e9] 	        97	stdio2.h	CALL_228
0x40006e9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x40006ec	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40006f1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x40006f3	      0xe800000000	                          call 0x40006f8	        97	stdio2.h	CALL_228
0x40006f8	    0x8b0d00000000	            mov ecx, dword [0x040006fe] 	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006fe	            0x85c9	                           test ecx, ecx	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000700	            0x7e36	                           jle 0x4000738	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000702	    0x488b05000000	            mov rax, qword [0x04000709] 	       148	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000709	    0x488b3d000000	            mov rdi, qword [0x04000710] 	        97	stdio2.h	CALL_228
0x4000710	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_228
0x4000715	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x400071a	          0x83c301	                              add ebx, 1	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x400071d	        0x488b0c28	              mov rcx, qword [rax + rbp]	        97	stdio2.h	CALL_228
0x4000721	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x4000723	        0x4883c508	                              add rbp, 8	        97	stdio2.h	CALL_228
0x4000727	        0x4883c108	                              add rcx, 8	        97	stdio2.h	CALL_228
0x400072b	      0xe800000000	                          call 0x4000730	        97	stdio2.h	CALL_228
0x4000730	    0x391d00000000	            cmp dword [0x04000736], ebx 	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000736	            0x7fca	                            jg 0x4000702	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000738	    0x488b0d000000	            mov rcx, qword [0x0400073f] 	        97	stdio2.h	CALL_228
0x400073f	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_228
0x4000744	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000749	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x400074e	      0xe800000000	                          call 0x4000753	        97	stdio2.h	CALL_228
0x4000753	    0x8b1500000000	            mov edx, dword [0x04000759] 	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x4000759	            0x85d2	                           test edx, edx	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x400075b	     0xf8537010000	                           jne 0x4000898	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x4000761	      0xbf01000000	                              mov edi, 1	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x4000766	      0xe800000000	                          call 0x400076b	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x400076b	       0xf1f440000	                   nop dword [rax + rax]	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x4000770	      0xbe00000000	                              mov esi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x4000775	      0xba00000000	                              mov edx, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x400077a	      0xbf00000000	                              mov edi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x400077f	    0xc70500000000	               mov dword [0x04000789], 1	       128	merge.c	FUNCTION_2	IF_3
0x4000789	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4000792	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_75	CALL_6
0x400079b	      0xe800000000	                          call 0x40007a0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x40007a0	    0x8b3500000000	            mov esi, dword [0x040007a6] 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007a6	            0x85f6	                           test esi, esi	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007a8	     0xf8ed2000000	                           jle 0x4000880	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007ae	      0x488d442420	                   lea rax, [rsp + 0x20]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007b3	    0x48c744241000	               mov qword [rsp + 0x10], 0	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007bc	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40007c4	              0x48	                                 invalid	       132	merge.c	FUNCTION_2	IF_3	FOR_2
finish_up_to_date	FOR,0:ELSE,0:WHILE,0:functions,0:CALL,2:IF,1:SWITCH,0:DO,0	23
0x4000179	              0x92	                           xchg eax, edx	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400017a	          0xc229d3	                              ret 0xd329	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400017d	           0xfbedb	                           movsx ebx, bl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000180	            0x85db	                           test ebx, ebx	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000182	     0xf8478010000	                            je 0x4000300	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000188	      0xbf00000000	                              mov edi, 0	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400018d	      0xb90f000000	                            mov ecx, 0xf	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000192	          0x4889ee	                            mov rsi, rbp	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000195	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000197	           0xf97c3	                                 seta bl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019a	           0xf92c2	                                 setb dl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019d	            0x29d3	                            sub ebx, edx	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019f	           0xfbedb	                           movsx ebx, bl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001a2	            0x85db	                           test ebx, ebx	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001a4	     0xf8518ffffff	                           jne 0x40000c2	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001aa	          0x4c89e6	                            mov rsi, r12	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001ad	          0x4889ef	                            mov rdi, rbp	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001b0	      0xe800000000	                          call 0x40001b5	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001b5	      0xba00000000	                              mov edx, 0	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001ba	            0x85c0	                           test eax, eax	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001bc	              0xb8	                                 invalid	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001bd	               0x0	                      add byte [rax], al	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001bf	               0x0	                                 invalid	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
write_merge_heads	FOR,1:ELSE,1:WHILE,0:functions,0:CALL,10:IF,2:SWITCH,0:DO,0	69
0x4000083	               0x0	                      add byte [rax], al	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000085	               0x0	                      add byte [rax], al	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000087	            0x85c0	                           test eax, eax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000089	     0xf8549010000	                           jne 0x40001d8	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400008f	      0xbf00000000	                              mov edi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000094	      0xb90f000000	                            mov ecx, 0xf	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000099	          0x4889ee	                            mov rsi, rbp	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400009c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400009e	            0x7411	                            je 0x40000b1	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000a0	      0xbf00000000	                              mov edi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000a5	      0xb90b000000	                            mov ecx, 0xb	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000aa	          0x4889ee	                            mov rsi, rbp	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000af	            0x753f	                           jne 0x40000f0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000b1	          0x4c89e6	                            mov rsi, r12	       570	merge.c	FUNCTION_17	CALL_9
0x40000b4	          0x4889ef	                            mov rdi, rbp	       570	merge.c	FUNCTION_17	CALL_9
0x40000b7	      0xe800000000	                          call 0x40000bc	       570	merge.c	FUNCTION_17	CALL_9
0x40000bc	    0x890500000000	            mov dword [0x040000c2], eax 	       570	merge.c	FUNCTION_17	CALL_9
0x40000c2	          0x4c89ea	                            mov rdx, r13	       595	merge.c	FUNCTION_17	CALL_25
0x40000c5	          0x4c89e6	                            mov rsi, r12	       595	merge.c	FUNCTION_17	CALL_25
0x40000c8	          0x4889ef	                            mov rdi, rbp	       595	merge.c	FUNCTION_17	CALL_25
0x40000cb	      0xe800000000	                          call 0x40000d0	       595	merge.c	FUNCTION_17	CALL_25
0x40000d0	            0x85c0	                           test eax, eax	       596	merge.c	FUNCTION_17	IF_12
0x40000d2	            0x89c3	                            mov ebx, eax	       596	merge.c	FUNCTION_17	IF_12
0x40000d4	     0xf8466010000	                            je 0x4000240	       596	merge.c	FUNCTION_17	IF_12
0x40000da	        0x4883c408	                              add rsp, 8	       602	merge.c	FUNCTION_17
0x40000de	            0x89d8	                            mov eax, ebx	       602	merge.c	FUNCTION_17
0x40000e0	              0x5b	                                 pop rbx	       602	merge.c	FUNCTION_17
0x40000e1	              0x5d	                                 pop rbp	       602	merge.c	FUNCTION_17
0x40000e2	            0x415c	                                 pop r12	       602	merge.c	FUNCTION_17
0x40000e4	            0x415d	                                 pop r13	       602	merge.c	FUNCTION_17
0x40000e6	              0xc3	                                     ret	       602	merge.c	FUNCTION_17
0x40000e7	    0x660f1f840000	                    nop word [rax + rax]	       602	merge.c	FUNCTION_17
0x40000f0	      0xbf00000000	                              mov edi, 0	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000f5	      0xb917000000	                           mov ecx, 0x17	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000fa	          0x4889ee	                            mov rsi, rbp	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000fd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000ff	     0xf848b010000	                            je 0x4000290	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4000105	      0xbf00000000	                              mov edi, 0	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400010a	      0xb90d000000	                            mov ecx, 0xd	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400010f	          0x4889ee	                            mov rsi, rbp	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000112	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000114	     0xf8456010000	                            je 0x4000270	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400011a	      0xbf00000000	                              mov edi, 0	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x400011f	      0xb90d000000	                            mov ecx, 0xd	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000124	          0x4889ee	                            mov rsi, rbp	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000127	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000129	     0xf84a1010000	                            je 0x40002d0	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x400012f	      0xbf00000000	                              mov edi, 0	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000134	      0xb912000000	                           mov ecx, 0x12	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000139	          0x4889ee	                            mov rsi, rbp	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x400013c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x400013e	     0xf846c010000	                            je 0x40002b0	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000144	      0xbf00000000	                              mov edi, 0	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000149	      0xb909000000	                              mov ecx, 9	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400014e	          0x4889ee	                            mov rsi, rbp	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000151	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000153	           0xf97c3	                                 seta bl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000156	           0xf92c2	                                 setb dl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000159	            0x29d3	                            sub ebx, edx	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400015b	           0xfbedb	                           movsx ebx, bl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400015e	            0x85db	                           test ebx, ebx	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000160	     0xf847a010000	                            je 0x40002e0	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000166	      0xbf00000000	                              mov edi, 0	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400016b	      0xb918000000	                           mov ecx, 0x18	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000170	          0x4889ee	                            mov rsi, rbp	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000173	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000175	           0xf97c3	                                 seta bl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000178	               0xf	                                 invalid	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
option_parse_n	FOR,0:ELSE,0:WHILE,0:functions,0:CALL,0:IF,0:SWITCH,0:DO,0	3
0x4000040	    0x891500000000	            mov dword [0x04000046], edx 	       195	merge.c	FUNCTION_6
0x4000046	            0x31c0	                            xor eax, eax	       197	merge.c	FUNCTION_6
0x4000048	              0xc3	                                     ret	       197	merge.c	FUNCTION_6
count_diff_files	FOR,0:ELSE,0:WHILE,0:functions,0:CALL,0:IF,0:SWITCH,0:DO,0	3
0x4000050	          0x8b470c	              mov eax, dword [rdi + 0xc]	       709	merge.c	FUNCTION_21
0x4000053	             0x102	                    add dword [rdx], eax	       709	merge.c	FUNCTION_21
0x4000055	              0xc3	                                     ret	       709	merge.c	FUNCTION_21
git_merge_config	FOR,0:ELSE,8:WHILE,0:functions,0:CALL,27:IF,13:SWITCH,0:DO,0	195
0x4000060	            0x4155	                                push r13	       558	merge.c	FUNCTION_17
0x4000062	            0x4154	                                push r12	       558	merge.c	FUNCTION_17
0x4000064	          0x4989d5	                            mov r13, rdx	       558	merge.c	FUNCTION_17
0x4000067	              0x55	                                push rbp	       558	merge.c	FUNCTION_17
0x4000068	              0x53	                                push rbx	       558	merge.c	FUNCTION_17
0x4000069	          0x4889fd	                            mov rbp, rdi	       558	merge.c	FUNCTION_17
0x400006c	          0x4989f4	                            mov r12, rsi	       558	merge.c	FUNCTION_17
0x400006f	        0x4883ec08	                              sub rsp, 8	       558	merge.c	FUNCTION_17
0x4000073	    0x48833d000000	               cmp qword [0x0400007b], 0	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400007b	            0x7412	                            je 0x400008f	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400007d	      0xbe00000000	                              mov esi, 0	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000087	            0x85c0	                           test eax, eax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000089	     0xf8549010000	                           jne 0x40001d8	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400008f	      0xbf00000000	                              mov edi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000094	      0xb90f000000	                            mov ecx, 0xf	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000099	          0x4889ee	                            mov rsi, rbp	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400009c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400009e	            0x7411	                            je 0x40000b1	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000a0	      0xbf00000000	                              mov edi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000a5	      0xb90b000000	                            mov ecx, 0xb	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000aa	          0x4889ee	                            mov rsi, rbp	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000af	            0x753f	                           jne 0x40000f0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000b1	          0x4c89e6	                            mov rsi, r12	       570	merge.c	FUNCTION_17	CALL_9
0x40000b4	          0x4889ef	                            mov rdi, rbp	       570	merge.c	FUNCTION_17	CALL_9
0x40000b7	      0xe800000000	                          call 0x40000bc	       570	merge.c	FUNCTION_17	CALL_9
0x40000bc	    0x890500000000	            mov dword [0x040000c2], eax 	       570	merge.c	FUNCTION_17	CALL_9
0x40000c2	          0x4c89ea	                            mov rdx, r13	       595	merge.c	FUNCTION_17	CALL_25
0x40000c5	          0x4c89e6	                            mov rsi, r12	       595	merge.c	FUNCTION_17	CALL_25
0x40000c8	          0x4889ef	                            mov rdi, rbp	       595	merge.c	FUNCTION_17	CALL_25
0x40000cb	      0xe800000000	                          call 0x40000d0	       595	merge.c	FUNCTION_17	CALL_25
0x40000d0	            0x85c0	                           test eax, eax	       596	merge.c	FUNCTION_17	IF_12
0x40000d2	            0x89c3	                            mov ebx, eax	       596	merge.c	FUNCTION_17	IF_12
0x40000d4	     0xf8466010000	                            je 0x4000240	       596	merge.c	FUNCTION_17	IF_12
0x40000da	        0x4883c408	                              add rsp, 8	       602	merge.c	FUNCTION_17
0x40000de	            0x89d8	                            mov eax, ebx	       602	merge.c	FUNCTION_17
0x40000e0	              0x5b	                                 pop rbx	       602	merge.c	FUNCTION_17
0x40000e1	              0x5d	                                 pop rbp	       602	merge.c	FUNCTION_17
0x40000e2	            0x415c	                                 pop r12	       602	merge.c	FUNCTION_17
0x40000e4	            0x415d	                                 pop r13	       602	merge.c	FUNCTION_17
0x40000e6	              0xc3	                                     ret	       602	merge.c	FUNCTION_17
0x40000e7	    0x660f1f840000	                    nop word [rax + rax]	       602	merge.c	FUNCTION_17
0x40000f0	      0xbf00000000	                              mov edi, 0	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000f5	      0xb917000000	                           mov ecx, 0x17	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000fa	          0x4889ee	                            mov rsi, rbp	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000fd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000ff	     0xf848b010000	                            je 0x4000290	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4000105	      0xbf00000000	                              mov edi, 0	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400010a	      0xb90d000000	                            mov ecx, 0xd	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400010f	          0x4889ee	                            mov rsi, rbp	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000112	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000114	     0xf8456010000	                            je 0x4000270	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400011a	      0xbf00000000	                              mov edi, 0	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x400011f	      0xb90d000000	                            mov ecx, 0xd	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000124	          0x4889ee	                            mov rsi, rbp	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000127	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000129	     0xf84a1010000	                            je 0x40002d0	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x400012f	      0xbf00000000	                              mov edi, 0	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000134	      0xb912000000	                           mov ecx, 0x12	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000139	          0x4889ee	                            mov rsi, rbp	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x400013c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x400013e	     0xf846c010000	                            je 0x40002b0	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000144	      0xbf00000000	                              mov edi, 0	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000149	      0xb909000000	                              mov ecx, 9	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400014e	          0x4889ee	                            mov rsi, rbp	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000151	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000153	           0xf97c3	                                 seta bl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000156	           0xf92c2	                                 setb dl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000159	            0x29d3	                            sub ebx, edx	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400015b	           0xfbedb	                           movsx ebx, bl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400015e	            0x85db	                           test ebx, ebx	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000160	     0xf847a010000	                            je 0x40002e0	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000166	      0xbf00000000	                              mov edi, 0	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400016b	      0xb918000000	                           mov ecx, 0x18	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000170	          0x4889ee	                            mov rsi, rbp	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000173	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000175	           0xf97c3	                                 seta bl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000178	           0xf92c2	                                 setb dl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400017b	            0x29d3	                            sub ebx, edx	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400017d	           0xfbedb	                           movsx ebx, bl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000180	            0x85db	                           test ebx, ebx	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000182	     0xf8478010000	                            je 0x4000300	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000188	      0xbf00000000	                              mov edi, 0	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400018d	      0xb90f000000	                            mov ecx, 0xf	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000192	          0x4889ee	                            mov rsi, rbp	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000195	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000197	           0xf97c3	                                 seta bl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019a	           0xf92c2	                                 setb dl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019d	            0x29d3	                            sub ebx, edx	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019f	           0xfbedb	                           movsx ebx, bl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001a2	            0x85db	                           test ebx, ebx	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001a4	     0xf8518ffffff	                           jne 0x40000c2	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001aa	          0x4c89e6	                            mov rsi, r12	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001ad	          0x4889ef	                            mov rdi, rbp	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001b0	      0xe800000000	                          call 0x40001b5	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001b5	      0xba00000000	                              mov edx, 0	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001ba	            0x85c0	                           test eax, eax	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001bc	      0xb800000000	                              mov eax, 0	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001c1	        0x480f44c2	                          cmove rax, rdx	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001c5	    0x488905000000	            mov qword [0x040001cc], rax 	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001cc	      0xe909ffffff	                           jmp 0x40000da	       592	merge.c	FUNCTION_17	ELSE_8	IF_11
0x40001d1	     0xf1f80000000	                         nop dword [rax]	       592	merge.c	FUNCTION_17	ELSE_8	IF_11
0x40001d8	    0x488b35000000	            mov rsi, qword [0x040001df] 	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x40001df	        0x488d7d07	                      lea rdi, [rbp + 7]	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x40001e3	      0xe800000000	                          call 0x40001e8	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x40001e8	            0x85c0	                           test eax, eax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x40001ea	     0xf849ffeffff	                            je 0x400008f	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x40001f0	    0x488b3d000000	            mov rdi, qword [0x040001f7] 	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40001f7	      0xe800000000	                          call 0x40001fc	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40001fc	      0x488d740507	                lea rsi, [rbp + rax + 7]	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000201	      0xbf00000000	                              mov edi, 0	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000206	      0xb90e000000	                            mov ecx, 0xe	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x400020b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x400020d	           0xf97c3	                                 seta bl	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000210	           0xf92c2	                                 setb dl	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000213	            0x29d3	                            sub ebx, edx	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000215	           0xfbedb	                           movsx ebx, bl	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000218	            0x85db	                           test ebx, ebx	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x400021a	     0xf856ffeffff	                           jne 0x400008f	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4000220	    0x488b3d000000	            mov rdi, qword [0x04000227] 	       564	merge.c	FUNCTION_17	IF_1	CALL_5
0x4000227	      0xe800000000	                          call 0x400022c	       564	merge.c	FUNCTION_17	IF_1	CALL_5
0x400022c	          0x4c89e7	                            mov rdi, r12	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x400022f	      0xe800000000	                          call 0x4000234	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x4000234	    0x488905000000	            mov qword [0x0400023b], rax 	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x400023b	      0xe99afeffff	                           jmp 0x40000da	       566	merge.c	FUNCTION_17	IF_1
0x4000240	            0x31d2	                            xor edx, edx	       598	merge.c	FUNCTION_17	CALL_26
0x4000242	          0x4c89e6	                            mov rsi, r12	       598	merge.c	FUNCTION_17	CALL_26
0x4000245	          0x4889ef	                            mov rdi, rbp	       598	merge.c	FUNCTION_17	CALL_26
0x4000248	      0xe800000000	                          call 0x400024d	       598	merge.c	FUNCTION_17	CALL_26
0x400024d	            0x85c0	                           test eax, eax	       599	merge.c	FUNCTION_17	IF_13
0x400024f	            0x89c3	                            mov ebx, eax	       599	merge.c	FUNCTION_17	IF_13
0x4000251	     0xf8583feffff	                           jne 0x40000da	       599	merge.c	FUNCTION_17	IF_13
0x4000257	        0x4883c408	                              add rsp, 8	       602	merge.c	FUNCTION_17
0x400025b	          0x4c89ea	                            mov rdx, r13	       601	merge.c	FUNCTION_17	CALL_27
0x400025e	          0x4c89e6	                            mov rsi, r12	       601	merge.c	FUNCTION_17	CALL_27
0x4000261	              0x5b	                                 pop rbx	       602	merge.c	FUNCTION_17
0x4000262	          0x4889ef	                            mov rdi, rbp	       601	merge.c	FUNCTION_17	CALL_27
0x4000265	              0x5d	                                 pop rbp	       602	merge.c	FUNCTION_17
0x4000266	            0x415c	                                 pop r12	       602	merge.c	FUNCTION_17
0x4000268	            0x415d	                                 pop r13	       602	merge.c	FUNCTION_17
0x400026a	      0xe900000000	                           jmp 0x400026f	       601	merge.c	FUNCTION_17	CALL_27
0x400026f	              0x90	                                     nop	       601	merge.c	FUNCTION_17	CALL_27
0x4000270	          0x4c89e2	                            mov rdx, r12	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4000273	          0x4889ee	                            mov rsi, rbp	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4000276	      0xbf00000000	                              mov edi, 0	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x400027b	        0x4883c408	                              add rsp, 8	       602	merge.c	FUNCTION_17
0x400027f	              0x5b	                                 pop rbx	       602	merge.c	FUNCTION_17
0x4000280	              0x5d	                                 pop rbp	       602	merge.c	FUNCTION_17
0x4000281	            0x415c	                                 pop r12	       602	merge.c	FUNCTION_17
0x4000283	            0x415d	                                 pop r13	       602	merge.c	FUNCTION_17
0x4000285	      0xe900000000	                           jmp 0x400028a	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x400028a	    0x660f1f440000	                    nop word [rax + rax]	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x4000290	          0x4c89e6	                            mov rsi, r12	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4000293	          0x4889ef	                            mov rdi, rbp	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4000296	      0xe800000000	                          call 0x400029b	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x400029b	    0x890500000000	            mov dword [0x040002a1], eax 	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x40002a1	      0xe91cfeffff	                           jmp 0x40000c2	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x40002a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x40002b0	          0x4c89e6	                            mov rsi, r12	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002b3	          0x4889ef	                            mov rdi, rbp	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002b6	      0xe800000000	                          call 0x40002bb	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002bb	    0x890500000000	            mov dword [0x040002c1], eax 	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002c1	      0xe9fcfdffff	                           jmp 0x40000c2	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002d0	          0x4c89e2	                            mov rdx, r12	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002d3	          0x4889ee	                            mov rsi, rbp	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002d6	      0xbf00000000	                              mov edi, 0	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002db	            0xeb9e	                           jmp 0x400027b	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002dd	           0xf1f00	                         nop dword [rax]	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002e0	          0x4c89e7	                            mov rdi, r12	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x40002e3	      0xe800000000	                          call 0x40002e8	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x40002e8	            0x85c0	                           test eax, eax	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ea	            0x7834	                            js 0x4000320	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ec	           0xf95c0	                                setne al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ef	           0xfb6c0	                           movzx eax, al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002f2	    0x890500000000	            mov dword [0x040002f8], eax 	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002f8	      0xe9ddfdffff	                           jmp 0x40000da	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002fd	           0xf1f00	                         nop dword [rax]	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4000300	          0x4c89e6	                            mov rsi, r12	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000303	          0x4889ef	                            mov rdi, rbp	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000306	      0xe800000000	                          call 0x400030b	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x400030b	    0x890500000000	            mov dword [0x04000311], eax 	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000311	      0xe9c4fdffff	                           jmp 0x40000da	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x4000316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x4000320	          0x4d85e4	                           test r12, r12	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000323	     0xf84b1fdffff	                            je 0x40000da	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000329	      0xbf00000000	                              mov edi, 0	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400032e	      0xb905000000	                              mov ecx, 5	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000333	          0x4c89e6	                            mov rsi, r12	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000336	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000338	     0xf859cfdffff	                           jne 0x40000da	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400033e	    0xc70500000000	               mov dword [0x04000348], 2	       584	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9
0x4000348	            0x31db	                            xor ebx, ebx	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x400034a	      0xe98bfdffff	                           jmp 0x40000da	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
collect_parents	FOR,2:ELSE,1:WHILE,0:functions,0:CALL,13:IF,6:SWITCH,0:DO,0	491
0x4000950	            0x4157	                                push r15	      1087	merge.c	FUNCTION_38
0x4000952	            0x4156	                                push r14	      1087	merge.c	FUNCTION_38
0x4000954	            0x4155	                                push r13	      1087	merge.c	FUNCTION_38
0x4000956	            0x4154	                                push r12	      1087	merge.c	FUNCTION_38
0x4000958	          0x4989cc	                            mov r12, rcx	      1087	merge.c	FUNCTION_38
0x400095b	              0x55	                                push rbp	      1087	merge.c	FUNCTION_38
0x400095c	              0x53	                                push rbx	      1087	merge.c	FUNCTION_38
0x400095d	            0x89d5	                            mov ebp, edx	      1087	merge.c	FUNCTION_38
0x400095f	    0x4881ec080100	                          sub rsp, 0x108	      1087	merge.c	FUNCTION_38
0x4000966	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1087	merge.c	FUNCTION_38
0x400096f	    0x48898c24f800	             mov qword [rsp + 0xf8], rcx	      1087	merge.c	FUNCTION_38
0x4000977	            0x31c9	                            xor ecx, ecx	      1087	merge.c	FUNCTION_38
0x4000979	          0x4d85c0	                             test r8, r8	      1093	merge.c	FUNCTION_38	IF_1
0x400097c	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1087	merge.c	FUNCTION_38
0x4000981	      0x4889742430	             mov qword [rsp + 0x30], rsi	      1087	merge.c	FUNCTION_38
0x4000986	      0x4c89442420	              mov qword [rsp + 0x20], r8	      1087	merge.c	FUNCTION_38
0x400098b	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1089	merge.c	FUNCTION_38
0x4000994	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1091	merge.c	FUNCTION_38
0x400099d	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1091	merge.c	FUNCTION_38
0x40009a6	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1091	merge.c	FUNCTION_38
0x40009af	     0xf846d070000	                            je 0x4001122	      1093	merge.c	FUNCTION_38	IF_1
0x40009b5	    0x8b3500000000	            mov esi, dword [0x040009bb] 	      1093	merge.c	FUNCTION_38	IF_1
0x40009bb	      0x4c8d742460	                   lea r14, [rsp + 0x60]	      1094	merge.c	FUNCTION_38	IF_1
0x40009c0	            0x85f6	                           test esi, esi	      1093	merge.c	FUNCTION_38	IF_1
0x40009c2	     0xf85cf040000	                           jne 0x4000e97	      1093	merge.c	FUNCTION_38	IF_1
0x40009c8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1096	merge.c	FUNCTION_38	IF_2
0x40009cd	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      1090	merge.c	FUNCTION_38
0x40009d2	          0x4885c0	                           test rax, rax	      1096	merge.c	FUNCTION_38	IF_2
0x40009d5	            0x7411	                            je 0x40009e8	      1096	merge.c	FUNCTION_38	IF_2
0x40009d7	      0x488d742450	                   lea rsi, [rsp + 0x50]	      1097	merge.c	FUNCTION_38	CALL_1
0x40009dc	          0x4889c7	                            mov rdi, rax	      1097	merge.c	FUNCTION_38	CALL_1
0x40009df	      0xe800000000	                          call 0x40009e4	      1097	merge.c	FUNCTION_38	CALL_1
0x40009e4	        0x488d5808	                      lea rbx, [rax + 8]	      1097	merge.c	FUNCTION_38	CALL_1
0x40009e8	          0x83fd01	                              cmp ebp, 1	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x40009eb	     0xf8437050000	                            je 0x4000f28	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x40009f1	          0x4531ed	                          xor r13d, r13d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x40009f4	            0x85ed	                           test ebp, ebp	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x40009f6	            0x7e35	                           jle 0x4000a2d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x40009f8	     0xf1f84000000	                   nop dword [rax + rax]	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a00	        0x4b8b3cec	            mov rdi, qword [r12 + r13*8]	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a04	      0xe800000000	                          call 0x4000a09	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a09	          0x4885c0	                           test rax, rax	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4000a0c	          0x4989c7	                            mov r15, rax	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a0f	     0xf845b040000	                            je 0x4000e70	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4000a15	          0x4889de	                            mov rsi, rbx	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a18	          0x4c89ff	                            mov rdi, r15	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a1b	        0x4983c501	                              add r13, 1	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a1f	      0xe800000000	                          call 0x4000a24	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a24	          0x4439ed	                           cmp ebp, r13d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a27	        0x488d5808	                      lea rbx, [rax + 8]	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a2b	            0x7fd3	                            jg 0x4000a00	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a2d	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a32	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a37	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a3c	      0xe8bff9ffff	                 call sym.reduce_parents	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a41	          0x4d85f6	                           test r14, r14	      1111	merge.c	FUNCTION_38	ELSE_1	IF_5
0x4000a44	          0x4989c4	                            mov r12, rax	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a47	      0x4889442450	             mov qword [rsp + 0x50], rax	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a4c	     0xf84c7020000	                            je 0x4000d19	      1111	merge.c	FUNCTION_38	ELSE_1	IF_5
0x4000a52	          0x4885c0	                           test rax, rax	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000a55	     0xf845d020000	                            je 0x4000cb8	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000a5b	       0xf1f440000	                   nop dword [rax + rax]	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000a60	        0x498b0424	                    mov rax, qword [r12]	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x4000a64	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       450	merge.c	FUNCTION_15	CALL_1
0x4000a6c	            0x31d2	                            xor edx, edx	       450	merge.c	FUNCTION_15	CALL_1
0x4000a6e	    0x48c784248000	               mov qword [rsp + 0x80], 0	       444	merge.c	FUNCTION_15
0x4000a7a	    0x48c784248800	               mov qword [rsp + 0x88], 0	       444	merge.c	FUNCTION_15
0x4000a86	    0x48c784249000	               mov qword [rsp + 0x90], 0	       444	merge.c	FUNCTION_15
0x4000a92	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       445	merge.c	FUNCTION_15
0x4000a9e	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x4000aa2	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       445	merge.c	FUNCTION_15
0x4000aae	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	       445	merge.c	FUNCTION_15
0x4000aba	        0x4883c608	                              add rsi, 8	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x4000abe	      0xe800000000	                          call 0x4000ac3	       450	merge.c	FUNCTION_15	CALL_1
0x4000ac3	    0x488bac24b000	            mov rbp, qword [rsp + 0xb0] 	       451	merge.c	FUNCTION_15
0x4000acb	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4000ad7	    0x48c78424e800	               mov qword [rsp + 0xe8], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4000ae3	    0xc78424f00000	               mov dword [rsp + 0xf0], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4000aee	          0x4889ef	                            mov rdi, rbp	       454	merge.c	FUNCTION_15	CALL_3
0x4000af1	      0xe800000000	                          call 0x4000af6	       454	merge.c	FUNCTION_15	CALL_3
0x4000af6	          0x4885c0	                           test rax, rax	       455	merge.c	FUNCTION_15	IF_1
0x4000af9	          0x4989c5	                            mov r13, rax	       454	merge.c	FUNCTION_15	CALL_3
0x4000afc	     0xf8490060000	                            je 0x4001192	       455	merge.c	FUNCTION_15	IF_1
0x4000b02	          0x4889ef	                            mov rdi, rbp	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b05	      0xe800000000	                          call 0x4000b0a	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b0a	      0x488d4c2458	                   lea rcx, [rsp + 0x58]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b0f	    0x488d9424e000	                   lea rdx, [rsp + 0xe0]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b17	            0x89c6	                            mov esi, eax	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b19	          0x4889ef	                            mov rdi, rbp	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b1c	      0xe800000000	                          call 0x4000b21	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b21	            0x85c0	                           test eax, eax	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b23	            0x7e45	                           jle 0x4000b6a	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b25	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000b2a	      0xbe00000000	                              mov esi, 0	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000b2f	      0xe800000000	                          call 0x4000b34	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000b34	            0x85c0	                           test eax, eax	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000b36	     0xf85d4020000	                           jne 0x4000e10	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000b3c	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4000b41	      0xbe00000000	                              mov esi, 0	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4000b46	      0xe800000000	                          call 0x4000b4b	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4000b4b	            0x85c0	                           test eax, eax	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4000b4d	     0xf85ed020000	                           jne 0x4000e40	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4000b53	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4000b58	      0xbe00000000	                              mov esi, 0	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4000b5d	      0xe800000000	                          call 0x4000b62	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4000b62	            0x85c0	                           test eax, eax	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4000b64	     0xf857f030000	                           jne 0x4000ee9	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4000b6a	          0x4889ef	                            mov rdi, rbp	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000b6d	      0xe800000000	                          call 0x4000b72	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000b72	          0x4801e8	                            add rax, rbp	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000b75	          0x4839c5	                            cmp rbp, rax	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000b78	     0xf83c4010000	                           jae 0x4000d42	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000b7e	        0x8078ff5e	                cmp byte [rax - 1], 0x5e	       478	merge.c	FUNCTION_15	FOR_1
0x4000b82	     0xf85ba010000	                           jne 0x4000d42	       478	merge.c	FUNCTION_15	FOR_1
0x4000b88	            0x31db	                            xor ebx, ebx	       478	merge.c	FUNCTION_15	FOR_1
0x4000b8a	            0xeb0a	                           jmp 0x4000b96	       478	merge.c	FUNCTION_15	FOR_1
0x4000b8c	         0xf1f4000	                         nop dword [rax]	       478	merge.c	FUNCTION_15	FOR_1
0x4000b90	        0x8078ff5e	                cmp byte [rax - 1], 0x5e	       478	merge.c	FUNCTION_15	FOR_1
0x4000b94	            0x750c	                           jne 0x4000ba2	       478	merge.c	FUNCTION_15	FOR_1
0x4000b96	        0x4883e801	                              sub rax, 1	       479	merge.c	FUNCTION_15	FOR_1
0x4000b9a	          0x83c301	                              add ebx, 1	       480	merge.c	FUNCTION_15	FOR_1
0x4000b9d	          0x4839c5	                            cmp rbp, rax	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000ba0	            0x75ee	                           jne 0x4000b90	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000ba2	          0x4863db	                         movsxd rbx, ebx	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000ba5	    0x41bf01000000	                             mov r15d, 1	       482	merge.c	FUNCTION_15	IF_6
0x4000bab	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4000bb3	            0x31c0	                            xor eax, eax	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4000bb5	          0x4889ea	                            mov rdx, rbp	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4000bb8	      0xbe00000000	                              mov esi, 0	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4000bbd	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       503	merge.c	FUNCTION_15	IF_11
0x4000bc9	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       503	merge.c	FUNCTION_15	IF_11
0x4000bd5	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	       503	merge.c	FUNCTION_15	IF_11
0x4000be1	      0xe800000000	                          call 0x4000be6	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4000be6	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	       162	strbuf.h	FUNCTION_86	IF_1
0x4000bee	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4000bf6	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_86	IF_1
0x4000bfa	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_86	IF_1
0x4000bfe	          0x4829da	                            sub rdx, rbx	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4000c01	          0x4839c2	                            cmp rdx, rax	       162	strbuf.h	FUNCTION_86	IF_1
0x4000c04	     0xf879f050000	                            ja 0x40011a9	       162	strbuf.h	FUNCTION_86	IF_1
0x4000c0a	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	       165	strbuf.h	FUNCTION_86	IF_2
0x4000c12	    0x48899424c800	             mov qword [rsp + 0xc8], rdx	       164	strbuf.h	FUNCTION_86
0x4000c1a	    0x4881ff000000	                              cmp rdi, 0	       165	strbuf.h	FUNCTION_86	IF_2
0x4000c21	     0xf84e9020000	                            je 0x4000f10	       165	strbuf.h	FUNCTION_86	IF_2
0x4000c27	        0xc6041700	                 mov byte [rdi + rdx], 0	       166	strbuf.h	FUNCTION_86	IF_2
0x4000c2b	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	       166	strbuf.h	FUNCTION_86	IF_2
0x4000c33	      0xe800000000	                          call 0x4000c38	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4000c38	            0x85c0	                           test eax, eax	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4000c3a	     0xf8475010000	                            je 0x4000db5	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4000c40	          0x4585ff	                         test r15d, r15d	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c43	      0xb800000000	                              mov eax, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c48	      0xbd00000000	                              mov ebp, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c4d	        0x480f44e8	                          cmove rbp, rax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c51	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c59	        0x498d7d04	                      lea rdi, [r13 + 4]	       509	merge.c	FUNCTION_15	IF_11	IF_12	CALL_23
0x4000c5d	        0x488d580b	                    lea rbx, [rax + 0xb]	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c61	      0xe800000000	                          call 0x4000c66	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c66	          0x4c89f7	                            mov rdi, r14	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c69	          0x4889c2	                            mov rdx, rax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c6c	          0x4989e8	                             mov r8, rbp	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c6f	          0x4889d9	                            mov rcx, rbx	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c72	      0xbe00000000	                              mov esi, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c77	            0x31c0	                            xor eax, eax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c79	      0xe800000000	                          call 0x4000c7e	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000c7e	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x4000c86	      0xe800000000	                          call 0x4000c8b	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x4000c8b	       0xf1f440000	                   nop dword [rax + rax]	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x4000c90	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       533	merge.c	FUNCTION_15	CALL_32
0x4000c98	      0xe800000000	                          call 0x4000c9d	       533	merge.c	FUNCTION_15	CALL_32
0x4000c9d	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       534	merge.c	FUNCTION_15	CALL_33
0x4000ca5	      0xe800000000	                          call 0x4000caa	       534	merge.c	FUNCTION_15	CALL_33
0x4000caa	      0x4d8b642408	                mov r12, qword [r12 + 8]	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000caf	          0x4d85e4	                           test r12, r12	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000cb2	     0xf85a8fdffff	                           jne 0x4000a60	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000cb8	    0x8b0500000000	            mov eax, dword [0x04000cbe] 	      1020	merge.c	FUNCTION_36
0x4000cbe	    0x8b1500000000	            mov edx, dword [0x04000cc4] 	      1022	merge.c	FUNCTION_36
0x4000cc4	          0x4c89f7	                            mov rdi, r14	      1024	merge.c	FUNCTION_36	CALL_2
0x4000cc7	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1024	merge.c	FUNCTION_36	CALL_2
0x4000ccc	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4000cd5	            0x85c0	                           test eax, eax	      1020	merge.c	FUNCTION_36
0x4000cd7	    0x8b0500000000	            mov eax, dword [0x04000cdd] 	      1021	merge.c	FUNCTION_36
0x4000cdd	           0xf94c1	                                 sete cl	      1020	merge.c	FUNCTION_36
0x4000ce0	            0x85d2	                           test edx, edx	      1022	merge.c	FUNCTION_36
0x4000ce2	          0x4889de	                            mov rsi, rbx	      1024	merge.c	FUNCTION_36	CALL_2
0x4000ce5	           0xf9fc2	                                 setg dl	      1022	merge.c	FUNCTION_36
0x4000ce8	        0x89442444	             mov dword [rsp + 0x44], eax	      1021	merge.c	FUNCTION_36
0x4000cec	          0x8d0412	                    lea eax, [rdx + rdx]	      1022	merge.c	FUNCTION_36
0x4000cef	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1024	merge.c	FUNCTION_36	CALL_2
0x4000cf4	             0x9c8	                             or eax, ecx	      1022	merge.c	FUNCTION_36
0x4000cf6	        0x88442440	               mov byte [rsp + 0x40], al	      1022	merge.c	FUNCTION_36
0x4000cfa	      0xe800000000	                          call 0x4000cff	      1024	merge.c	FUNCTION_36	CALL_2
0x4000cff	        0x488b4308	                mov rax, qword [rbx + 8]	      1025	merge.c	FUNCTION_36	IF_1
0x4000d03	          0x4885c0	                           test rax, rax	      1025	merge.c	FUNCTION_36	IF_1
0x4000d06	     0xf85a1010000	                           jne 0x4000ead	      1025	merge.c	FUNCTION_36	IF_1
0x4000d0c	          0x4c89f7	                            mov rdi, r14	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x4000d0f	      0xe800000000	                          call 0x4000d14	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x4000d14	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x4000d19	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	      1124	merge.c	FUNCTION_38
0x4000d21	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1124	merge.c	FUNCTION_38
0x4000d2a	     0xf8585040000	                           jne 0x40011b5	      1124	merge.c	FUNCTION_38
0x4000d30	    0x4881c4080100	                          add rsp, 0x108	      1124	merge.c	FUNCTION_38
0x4000d37	              0x5b	                                 pop rbx	      1124	merge.c	FUNCTION_38
0x4000d38	              0x5d	                                 pop rbp	      1124	merge.c	FUNCTION_38
0x4000d39	            0x415c	                                 pop r12	      1124	merge.c	FUNCTION_38
0x4000d3b	            0x415d	                                 pop r13	      1124	merge.c	FUNCTION_38
0x4000d3d	            0x415e	                                 pop r14	      1124	merge.c	FUNCTION_38
0x4000d3f	            0x415f	                                 pop r15	      1124	merge.c	FUNCTION_38
0x4000d41	              0xc3	                                     ret	      1124	merge.c	FUNCTION_38
0x4000d42	      0xbe7e000000	                           mov esi, 0x7e	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4000d47	          0x4889ef	                            mov rdi, rbp	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4000d4a	      0xe800000000	                          call 0x4000d4f	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4000d4f	          0x4885c0	                           test rax, rax	       486	merge.c	FUNCTION_15	ELSE_1	IF_7
0x4000d52	            0x746e	                            je 0x4000dc2	       486	merge.c	FUNCTION_15	ELSE_1	IF_7
0x4000d54	        0x488d5001	                      lea rdx, [rax + 1]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d58	         0xfb64001	               movzx eax, byte [rax + 1]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d5c	            0x84c0	                             test al, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d5e	     0xf84c6030000	                            je 0x400112a	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d64	           0xfb6c8	                           movzx ecx, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d67	    0xf68100000000	                      test byte [rcx], 2	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d6e	            0x7452	                            je 0x4000dc2	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d70	      0xbb01000000	                              mov ebx, 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d75	            0x31c9	                            xor ecx, ecx	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d77	            0xeb13	                           jmp 0x4000d8c	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d79	     0xf1f80000000	                         nop dword [rax]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d80	           0xfb6f0	                           movzx esi, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d83	    0xf68600000000	                      test byte [rsi], 2	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d8a	            0x7436	                            je 0x4000dc2	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d8c	            0x3c30	                            cmp al, 0x30	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d8e	           0xf95c0	                                setne al	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d91	        0x4883c201	                              add rdx, 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d95	          0x83c301	                              add ebx, 1	       492	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d98	           0xfb6c0	                           movzx eax, al	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d9b	             0x9c1	                             or ecx, eax	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000d9d	           0xfb602	                   movzx eax, byte [rdx]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000da0	            0x84c0	                             test al, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000da2	            0x75dc	                           jne 0x4000d80	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000da4	          0x4531ff	                          xor r15d, r15d	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4000da7	            0x85c9	                           test ecx, ecx	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4000da9	          0x4863db	                         movsxd rbx, ebx	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4000dac	        0x410f95c7	                              setne r15b	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4000db0	      0xe9f6fdffff	                           jmp 0x4000bab	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4000db5	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	       515	merge.c	FUNCTION_15	IF_11	CALL_25
0x4000dbd	      0xe800000000	                          call 0x4000dc2	       515	merge.c	FUNCTION_15	IF_11	CALL_25
0x4000dc2	        0x498b5d18	            mov rbx, qword [r13 + 0x18] 	       518	merge.c	FUNCTION_15	IF_13
0x4000dc6	          0x4885db	                           test rbx, rbx	       518	merge.c	FUNCTION_15	IF_13
0x4000dc9	            0x7419	                            je 0x4000de4	       518	merge.c	FUNCTION_15	IF_13
0x4000dcb	          0x488b03	                    mov rax, qword [rbx]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000dce	          0x4885c0	                           test rax, rax	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000dd1	            0x7411	                            je 0x4000de4	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000dd3	           0xfb600	                   movzx eax, byte [rax]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000dd6	            0x89c2	                            mov edx, eax	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000dd8	          0x83e20e	                            and edx, 0xe	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000ddb	          0x80fa08	                               cmp dl, 8	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000dde	     0xf84cd020000	                            je 0x40010b1	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000de4	        0x498d7d04	                      lea rdi, [r13 + 4]	       531	merge.c	FUNCTION_15	CALL_31
0x4000de8	      0xe800000000	                          call 0x4000ded	       530	merge.c	FUNCTION_15	CALL_30
0x4000ded	          0x4889e9	                            mov rcx, rbp	       530	merge.c	FUNCTION_15	CALL_30
0x4000df0	          0x4889c2	                            mov rdx, rax	       530	merge.c	FUNCTION_15	CALL_30
0x4000df3	      0xbe00000000	                              mov esi, 0	       530	merge.c	FUNCTION_15	CALL_30
0x4000df8	          0x4c89f7	                            mov rdi, r14	       530	merge.c	FUNCTION_15	CALL_30
0x4000dfb	            0x31c0	                            xor eax, eax	       530	merge.c	FUNCTION_15	CALL_30
0x4000dfd	      0xe800000000	                          call 0x4000e02	       530	merge.c	FUNCTION_15	CALL_30
0x4000e02	      0xe989feffff	                           jmp 0x4000c90	       530	merge.c	FUNCTION_15	CALL_30
0x4000e07	    0x660f1f840000	                    nop word [rax + rax]	       530	merge.c	FUNCTION_15	CALL_30
0x4000e10	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000e18	      0xe800000000	                          call 0x4000e1d	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000e1d	          0x4889e9	                            mov rcx, rbp	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000e20	          0x4889c2	                            mov rdx, rax	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000e23	      0xbe00000000	                              mov esi, 0	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000e28	          0x4c89f7	                            mov rdi, r14	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000e2b	            0x31c0	                            xor eax, eax	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000e2d	      0xe800000000	                          call 0x4000e32	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000e32	      0xe959feffff	                           jmp 0x4000c90	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000e37	    0x660f1f840000	                    nop word [rax + rax]	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000e40	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000e48	      0xe800000000	                          call 0x4000e4d	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000e4d	          0x4889e9	                            mov rcx, rbp	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000e50	          0x4889c2	                            mov rdx, rax	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000e53	      0xbe00000000	                              mov esi, 0	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000e58	          0x4c89f7	                            mov rdi, r14	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000e5b	            0x31c0	                            xor eax, eax	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000e5d	      0xe800000000	                          call 0x4000e62	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000e62	      0xe929feffff	                           jmp 0x4000c90	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000e67	    0x660f1f840000	                    nop word [rax + rax]	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000e70	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_43
0x4000e72	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_43
0x4000e77	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_43
0x4000e7c	      0xe800000000	                          call 0x4000e81	        54	gettext.h	FUNCTION_43
0x4000e81	        0x4b8b3cec	            mov rdi, qword [r12 + r13*8]	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000e85	          0x4889c2	                            mov rdx, rax	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000e88	      0xbe00000000	                              mov esi, 0	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000e8d	      0xe800000000	                          call 0x4000e92	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000e92	      0xe97efbffff	                           jmp 0x4000a15	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000e97	    0x8b0d00000000	            mov ecx, dword [0x04000e9d] 	      1094	merge.c	FUNCTION_38	IF_1
0x4000e9d	      0xb800000000	                              mov eax, 0	      1094	merge.c	FUNCTION_38	IF_1
0x4000ea2	            0x85c9	                           test ecx, ecx	      1094	merge.c	FUNCTION_38	IF_1
0x4000ea4	        0x4c0f44f0	                          cmove r14, rax	      1094	merge.c	FUNCTION_38	IF_1
0x4000ea8	      0xe91bfbffff	                           jmp 0x40009c8	      1094	merge.c	FUNCTION_38	IF_1
0x4000ead	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       162	strbuf.h	FUNCTION_86	IF_1
0x4000eb2	        0x488d48ff	                      lea rcx, [rax - 1]	      1026	merge.c	FUNCTION_36	CALL_3
0x4000eb6	          0x488b13	                    mov rdx, qword [rbx]	       162	strbuf.h	FUNCTION_86	IF_1
0x4000eb9	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_86	IF_1
0x4000ebd	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_86	IF_1
0x4000ec1	          0x4839d1	                            cmp rcx, rdx	       162	strbuf.h	FUNCTION_86	IF_1
0x4000ec4	     0xf87df020000	                            ja 0x40011a9	       162	strbuf.h	FUNCTION_86	IF_1
0x4000eca	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       165	strbuf.h	FUNCTION_86	IF_2
0x4000ece	        0x48894b08	                mov qword [rbx + 8], rcx	       164	strbuf.h	FUNCTION_86
0x4000ed2	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_86	IF_2
0x4000ed9	     0xf8491020000	                            je 0x4001170	       165	strbuf.h	FUNCTION_86	IF_2
0x4000edf	      0xc64402ff00	             mov byte [rdx + rax - 1], 0	       166	strbuf.h	FUNCTION_86	IF_2
0x4000ee4	      0xe923feffff	                           jmp 0x4000d0c	       166	strbuf.h	FUNCTION_86	IF_2
0x4000ee9	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000ef1	      0xe800000000	                          call 0x4000ef6	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000ef6	          0x4889e9	                            mov rcx, rbp	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000ef9	          0x4889c2	                            mov rdx, rax	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000efc	      0xbe00000000	                              mov esi, 0	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f01	          0x4c89f7	                            mov rdi, r14	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f04	            0x31c0	                            xor eax, eax	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f06	      0xe800000000	                          call 0x4000f0b	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f0b	      0xe980fdffff	                           jmp 0x4000c90	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f10	    0x803d00000000	                cmp byte [0x04000f17], 0	       168	strbuf.h	FUNCTION_86	CALL_2
0x4000f17	     0xf8416fdffff	                            je 0x4000c33	       168	strbuf.h	FUNCTION_86	CALL_2
0x4000f1d	      0xe800000000	                          call 0x4000f22	       168	strbuf.h	FUNCTION_86	CALL_2
0x4000f22	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_86	CALL_2
0x4000f28	        0x498b3424	                    mov rsi, qword [r12]	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000f2c	      0xbf00000000	                              mov edi, 0	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000f31	      0xb90b000000	                            mov ecx, 0xb	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000f36	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000f38	           0xf97c2	                                 seta dl	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000f3b	           0xf92c0	                                 setb al	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000f3e	          0x4531ed	                          xor r13d, r13d	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000f41	            0x38c2	                              cmp dl, al	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000f43	     0xf85b7faffff	                           jne 0x4000a00	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000f49	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	      1035	merge.c	FUNCTION_37	IF_1
0x4000f51	          0x4d85f6	                           test r14, r14	      1035	merge.c	FUNCTION_37	IF_1
0x4000f54	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      1033	merge.c	FUNCTION_37
0x4000f60	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      1033	merge.c	FUNCTION_37
0x4000f6c	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1033	merge.c	FUNCTION_37
0x4000f78	        0x4d0f45e6	                         cmovne r12, r14	      1035	merge.c	FUNCTION_37	IF_1
0x4000f7c	      0xe800000000	                          call 0x4000f81	      1038	merge.c	FUNCTION_37	CALL_1
0x4000f81	            0x31f6	                            xor esi, esi	        53	fcntl2.h	FUNCTION_95	IF_2	CALL_9
0x4000f83	      0x4889442438	             mov qword [rsp + 0x38], rax	      1038	merge.c	FUNCTION_37	CALL_1
0x4000f88	          0x4889c7	                            mov rdi, rax	        53	fcntl2.h	FUNCTION_95	IF_2	CALL_9
0x4000f8b	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_95	IF_2	CALL_9
0x4000f8d	      0xe800000000	                          call 0x4000f92	        53	fcntl2.h	FUNCTION_95	IF_2	CALL_9
0x4000f92	            0x85c0	                           test eax, eax	      1040	merge.c	FUNCTION_37	IF_2
0x4000f94	            0x89c5	                            mov ebp, eax	        53	fcntl2.h	FUNCTION_95	IF_2	CALL_9
0x4000f96	     0xf883e020000	                            js 0x40011da	      1040	merge.c	FUNCTION_37	IF_2
0x4000f9c	            0x31d2	                            xor edx, edx	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4000f9e	            0x89c6	                            mov esi, eax	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4000fa0	          0x4c89e7	                            mov rdi, r12	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4000fa3	      0xe800000000	                          call 0x4000fa8	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4000fa8	          0x4885c0	                           test rax, rax	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4000fab	     0xf8822020000	                            js 0x40011d3	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4000fb1	            0x89ef	                            mov edi, ebp	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4000fb3	      0xe800000000	                          call 0x4000fb8	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4000fb8	            0x85c0	                           test eax, eax	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4000fba	     0xf88fa010000	                            js 0x40011ba	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4000fc0	            0x31d2	                            xor edx, edx	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4000fc2	            0xeb07	                           jmp 0x4000fcb	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4000fc4	         0xf1f4000	                         nop dword [rax]	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4000fc8	          0x4489fa	                           mov edx, r15d	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4000fcb	      0x498b442408	                mov rax, qword [r12 + 8]	      1048	merge.c	FUNCTION_37	FOR_1
0x4000fd0	          0x4863ea	                         movsxd rbp, edx	      1048	merge.c	FUNCTION_37	FOR_1
0x4000fd3	          0x4839c5	                            cmp rbp, rax	      1048	merge.c	FUNCTION_37	FOR_1
0x4000fd6	      0x4889442428	             mov qword [rsp + 0x28], rax	      1048	merge.c	FUNCTION_37	FOR_1
0x4000fdb	     0xf8359010000	                           jae 0x400113a	      1048	merge.c	FUNCTION_37	FOR_1
0x4000fe1	      0x4d8b7c2410	            mov r15, qword [r12 + 0x10] 	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4000fe6	      0xbe0a000000	                            mov esi, 0xa	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4000feb	        0x89542414	             mov dword [rsp + 0x14], edx	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4000fef	        0x498d0c2f	                    lea rcx, [r15 + rbp]	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4000ff3	          0x4889cf	                            mov rdi, rcx	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4000ff6	      0x48894c2408	                mov qword [rsp + 8], rcx	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4000ffb	      0xe800000000	                          call 0x4001000	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001000	          0x4885c0	                           test rax, rax	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x4001003	          0x4989c5	                            mov r13, rax	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001006	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x400100b	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x400100f	     0xf8403010000	                            je 0x4001118	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x4001015	          0x4c29f8	                            sub rax, r15	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x4001018	          0x4989c7	                            mov r15, rax	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x400101b	        0x4183c701	                             add r15d, 1	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x400101f	          0x4489f8	                           mov eax, r15d	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4001022	            0x29d0	                            sub eax, edx	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4001024	          0x83f829	                           cmp eax, 0x29	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4001027	     0xf8ebc000000	                           jle 0x40010e9	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x400102d	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x4001035	          0x4889cf	                            mov rdi, rcx	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x4001038	      0xe800000000	                          call 0x400103d	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x400103d	            0x85c0	                           test eax, eax	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x400103f	     0xf85a4000000	                           jne 0x40010e9	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4001045	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x400104a	      0xba02000000	                              mov edx, 2	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x400104f	      0xbe00000000	                              mov esi, 0	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4001054	      0x488d4c2828	            lea rcx, [rax + rbp + 0x28] 	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4001059	          0x4889cf	                            mov rdi, rcx	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x400105c	      0x48894c2408	                mov qword [rsp + 8], rcx	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4001061	      0xe800000000	                          call 0x4001066	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4001066	            0x85c0	                           test eax, eax	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4001068	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x400106d	     0xf8555ffffff	                           jne 0x4000fc8	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4001073	           0xfb611	                   movzx edx, byte [rcx]	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4001076	          0x4889ef	                            mov rdi, rbp	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x4001079	          0xc60100	                       mov byte [rcx], 0	      1066	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x400107c	      0x49037c2410	             add rdi, qword [r12 + 0x10]	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x4001081	        0x88542408	                  mov byte [rsp + 8], dl	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4001085	      0xe800000000	                          call 0x400108a	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x400108a	       0xfb6542408	               movzx edx, byte [rsp + 8]	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x400108f	          0x4889c7	                            mov rdi, rax	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x4001092	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4001097	          0x4885ff	                           test rdi, rdi	      1070	merge.c	FUNCTION_37	FOR_1	IF_8
0x400109a	        0x88542828	         mov byte [rax + rbp + 0x28], dl	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x400109e	            0x7449	                            je 0x40010e9	      1070	merge.c	FUNCTION_37	FOR_1	IF_8
0x40010a0	          0x4889de	                            mov rsi, rbx	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x40010a3	      0xe800000000	                          call 0x40010a8	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x40010a8	        0x488d5808	                      lea rbx, [rax + 8]	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x40010ac	      0xe917ffffff	                           jmp 0x4000fc8	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x40010b1	            0xd0e8	                               shr al, 1	       524	merge.c	FUNCTION_15	IF_13	IF_14	CALL_29
0x40010b3	            0x89c7	                            mov edi, eax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010b5	          0x83e707	                              and edi, 7	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010b8	      0xe800000000	                          call 0x40010bd	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010bd	          0x488b3b	                    mov rdi, qword [rbx]	       523	merge.c	FUNCTION_15	IF_13	IF_14	CALL_28
0x40010c0	          0x4989c5	                            mov r13, rax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010c3	        0x4883c704	                              add rdi, 4	       523	merge.c	FUNCTION_15	IF_13	IF_14	CALL_28
0x40010c7	      0xe800000000	                          call 0x40010cc	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010cc	          0x4989e8	                             mov r8, rbp	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010cf	          0x4889c2	                            mov rdx, rax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010d2	          0x4c89e9	                            mov rcx, r13	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010d5	      0xbe00000000	                              mov esi, 0	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010da	          0x4c89f7	                            mov rdi, r14	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010dd	            0x31c0	                            xor eax, eax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010df	      0xe800000000	                          call 0x40010e4	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010e4	      0xe9a7fbffff	                           jmp 0x4000c90	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40010e9	          0x4d85ed	                           test r13, r13	      1071	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x40010ec	            0x7405	                            je 0x40010f3	      1071	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x40010ee	      0x41c6450000	                       mov byte [r13], 0	      1072	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x40010f3	      0x49036c2410	             add rbp, qword [r12 + 0x10]	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x40010f8	      0xbf00000000	                              mov edi, 0	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x40010fd	      0xe8cef4ffff	                       call sym._.part.4	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001102	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001107	          0x4889c7	                            mov rdi, rax	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x400110a	            0x31c0	                            xor eax, eax	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x400110c	          0x4889ea	                            mov rdx, rbp	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x400110f	      0xe800000000	                          call 0x4001114	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001114	         0xf1f4000	                         nop dword [rax]	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001118	      0x448b7c2428	           mov r15d, dword [rsp + 0x28] 	      1057	merge.c	FUNCTION_37	FOR_1	ELSE_1
0x400111d	      0xe9fdfeffff	                           jmp 0x400101f	      1057	merge.c	FUNCTION_37	FOR_1	ELSE_1
0x4001122	          0x4531f6	                          xor r14d, r14d	      1091	merge.c	FUNCTION_38
0x4001125	      0xe99ef8ffff	                           jmp 0x40009c8	      1091	merge.c	FUNCTION_38
0x400112a	      0xbb01000000	                              mov ebx, 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x400112f	    0x41bf01000000	                             mov r15d, 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001135	      0xe971faffff	                           jmp 0x4000bab	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x400113a	    0x488d8424c000	                   lea rax, [rsp + 0xc0]	      1079	merge.c	FUNCTION_37	IF_10
0x4001142	          0x4939c4	                            cmp r12, rax	      1079	merge.c	FUNCTION_37	IF_10
0x4001145	            0x7441	                            je 0x4001188	      1079	merge.c	FUNCTION_37	IF_10
0x4001147	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x400114c	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x4001151	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x4001156	      0xe8a5f2ffff	                 call sym.reduce_parents	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x400115b	          0x4d85f6	                           test r14, r14	      1118	merge.c	FUNCTION_38	IF_6
0x400115e	      0x4889442450	             mov qword [rsp + 0x50], rax	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x4001163	     0xf84b0fbffff	                            je 0x4000d19	      1118	merge.c	FUNCTION_38	IF_6
0x4001169	      0xe94afbffff	                           jmp 0x4000cb8	      1118	merge.c	FUNCTION_38	IF_6
0x400116e	            0x6690	                                     nop	      1118	merge.c	FUNCTION_38	IF_6
0x4001170	    0x803d00000000	                cmp byte [0x04001177], 0	       168	strbuf.h	FUNCTION_86	CALL_2
0x4001177	     0xf848ffbffff	                            je 0x4000d0c	       168	strbuf.h	FUNCTION_86	CALL_2
0x400117d	      0xe99bfdffff	                           jmp 0x4000f1d	       168	strbuf.h	FUNCTION_86	CALL_2
0x4001182	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_86	CALL_2
0x4001188	          0x4c89e7	                            mov rdi, r12	      1080	merge.c	FUNCTION_37	CALL_18
0x400118b	      0xe800000000	                          call 0x4001190	      1080	merge.c	FUNCTION_37	CALL_18
0x4001190	            0xebb5	                           jmp 0x4001147	      1080	merge.c	FUNCTION_37	CALL_18
0x4001192	      0xbf00000000	                              mov edi, 0	      1080	merge.c	FUNCTION_37	CALL_18
0x4001197	      0xe834f4ffff	                       call sym._.part.4	      1080	merge.c	FUNCTION_37	CALL_18
0x400119c	          0x4889ee	                            mov rsi, rbp	       456	merge.c	FUNCTION_15	CALL_5
0x400119f	          0x4889c7	                            mov rdi, rax	       456	merge.c	FUNCTION_15	CALL_5
0x40011a2	            0x31c0	                            xor eax, eax	       456	merge.c	FUNCTION_15	CALL_5
0x40011a4	      0xe800000000	                          call 0x40011a9	       456	merge.c	FUNCTION_15	CALL_5
0x40011a9	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_86	CALL_1
0x40011ae	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_86	CALL_1
0x40011b0	      0xe800000000	                          call 0x40011b5	       163	strbuf.h	FUNCTION_86	CALL_1
0x40011b5	      0xe800000000	                          call 0x40011ba	      1124	merge.c	FUNCTION_38
0x40011ba	      0xbf00000000	                              mov edi, 0	      1124	merge.c	FUNCTION_38
0x40011bf	      0xe80cf4ffff	                       call sym._.part.4	      1124	merge.c	FUNCTION_38
0x40011c4	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1044	merge.c	FUNCTION_37	CALL_7
0x40011c9	          0x4889c7	                            mov rdi, rax	      1044	merge.c	FUNCTION_37	CALL_7
0x40011cc	            0x31c0	                            xor eax, eax	      1044	merge.c	FUNCTION_37	CALL_7
0x40011ce	      0xe800000000	                          call 0x40011d3	      1044	merge.c	FUNCTION_37	CALL_7
0x40011d3	      0xbf00000000	                              mov edi, 0	      1044	merge.c	FUNCTION_37	CALL_7
0x40011d8	            0xebe5	                           jmp 0x40011bf	      1044	merge.c	FUNCTION_37	CALL_7
0x40011da	      0xbf00000000	                              mov edi, 0	      1044	merge.c	FUNCTION_37	CALL_7
0x40011df	            0xebde	                           jmp 0x40011bf	      1044	merge.c	FUNCTION_37	CALL_7
prepare_to_commit	FOR,0:ELSE,0:WHILE,0:functions,0:CALL,27:IF,8:SWITCH,0:DO,0	127
0x4000842	      0xbf00000000	                              mov edi, 0	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000847	      0xe800000000	                          call 0x400084c	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x400084c	      0xe9f4fdffff	                           jmp 0x4000645	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000851	     0xf1f80000000	                         nop dword [rax]	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000858	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x400085d	            0x89ea	                            mov edx, ebp	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x400085f	          0x4889de	                            mov rsi, rbx	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000862	      0xe800000000	                          call 0x4000867	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000867	            0xebbd	                           jmp 0x4000826	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000869	     0xf1f80000000	                         nop dword [rax]	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000870	        0x48c1e504	                              shl rbp, 4	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000874	    0x488d85000000	                          lea rax, [rbp]	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x400087b	      0xe9fdfdffff	                           jmp 0x400067d	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000880	      0x488d442420	                   lea rax, [rsp + 0x20]	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000885	      0x4889442418	             mov qword [rsp + 0x18], rax	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x400088a	            0xebb1	                           jmp 0x400083d	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x400088c	            0x31c0	                            xor eax, eax	       120	merge.c	FUNCTION_2	IF_1
0x400088e	      0xe9eafdffff	                           jmp 0x400067d	       120	merge.c	FUNCTION_2	IF_1
0x4000893	      0xe800000000	                          call 0x4000898	       163	merge.c	FUNCTION_2
0x4000898	      0xbf00000000	                              mov edi, 0	       163	merge.c	FUNCTION_2
0x400089d	            0x31ed	                            xor ebp, ebp	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400089f	            0x31db	                            xor ebx, ebx	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008a1	      0xe82afdffff	                       call sym._.part.4	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008a6	    0x488b3d000000	            mov rdi, qword [0x040008ad] 	        97	stdio2.h	CALL_228
0x40008ad	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x40008b0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40008b5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x40008b7	      0xe800000000	                          call 0x40008bc	        97	stdio2.h	CALL_228
0x40008bc	    0x8b0500000000	            mov eax, dword [0x040008c2] 	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008c2	            0x85c0	                           test eax, eax	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008c4	            0x7e36	                           jle 0x40008fc	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008c6	    0x488b05000000	            mov rax, qword [0x040008cd] 	       153	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008cd	    0x488b3d000000	            mov rdi, qword [0x040008d4] 	        97	stdio2.h	CALL_228
0x40008d4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_228
0x40008d9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40008de	          0x83c301	                              add ebx, 1	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008e1	        0x488b0c28	              mov rcx, qword [rax + rbp]	        97	stdio2.h	CALL_228
0x40008e5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x40008e7	        0x4883c508	                              add rbp, 8	        97	stdio2.h	CALL_228
0x40008eb	        0x4883c108	                              add rcx, 8	        97	stdio2.h	CALL_228
0x40008ef	      0xe800000000	                          call 0x40008f4	        97	stdio2.h	CALL_228
0x40008f4	    0x391d00000000	            cmp dword [0x040008fa], ebx 	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008fa	            0x7fca	                            jg 0x40008c6	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008fc	    0x488b0d000000	            mov rcx, qword [0x04000903] 	        97	stdio2.h	CALL_228
0x4000903	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_228
0x4000908	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x400090d	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x4000912	      0xe800000000	                          call 0x4000917	        97	stdio2.h	CALL_228
0x4000917	      0xe945feffff	                           jmp 0x4000761	        97	stdio2.h	CALL_228
0x400091c	         0xf1f4000	                         nop dword [rax]	        97	stdio2.h	CALL_228
0x4000920	            0x85d2	                           test edx, edx	       174	merge.c	FUNCTION_4	IF_1
0x4000922	            0x740c	                            je 0x4000930	       174	merge.c	FUNCTION_4	IF_1
0x4000924	            0x31c0	                            xor eax, eax	       179	merge.c	FUNCTION_4
0x4000926	              0xc3	                                     ret	       179	merge.c	FUNCTION_4
0x4000927	    0x660f1f840000	                    nop word [rax + rax]	       179	merge.c	FUNCTION_4
0x4000930	        0x4883ec08	                              sub rsp, 8	       173	merge.c	FUNCTION_4
0x4000934	          0x4889f7	                            mov rdi, rsi	       173	merge.c	FUNCTION_4
0x4000937	      0xe8a4fcffff	                   call sym.get_strategy	       177	merge.c	FUNCTION_4	CALL_2
0x400093c	          0x4889c7	                            mov rdi, rax	       177	merge.c	FUNCTION_4	CALL_2
0x400093f	      0xe80cfaffff	                call sym.append_strategy	       177	merge.c	FUNCTION_4	CALL_2
0x4000944	            0x31c0	                            xor eax, eax	       179	merge.c	FUNCTION_4
0x4000946	        0x4883c408	                              add rsp, 8	       179	merge.c	FUNCTION_4
0x400094a	              0xc3	                                     ret	       179	merge.c	FUNCTION_4
0x400094b	       0xf1f440000	                   nop dword [rax + rax]	       179	merge.c	FUNCTION_4
0x4000950	            0x4157	                                push r15	      1087	merge.c	FUNCTION_38
0x4000952	            0x4156	                                push r14	      1087	merge.c	FUNCTION_38
0x4000954	            0x4155	                                push r13	      1087	merge.c	FUNCTION_38
0x4000956	            0x4154	                                push r12	      1087	merge.c	FUNCTION_38
0x4000958	          0x4989cc	                            mov r12, rcx	      1087	merge.c	FUNCTION_38
0x400095b	              0x55	                                push rbp	      1087	merge.c	FUNCTION_38
0x400095c	              0x53	                                push rbx	      1087	merge.c	FUNCTION_38
0x400095d	            0x89d5	                            mov ebp, edx	      1087	merge.c	FUNCTION_38
0x400095f	    0x4881ec080100	                          sub rsp, 0x108	      1087	merge.c	FUNCTION_38
0x4000966	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1087	merge.c	FUNCTION_38
0x400096f	    0x48898c24f800	             mov qword [rsp + 0xf8], rcx	      1087	merge.c	FUNCTION_38
0x4000977	            0x31c9	                            xor ecx, ecx	      1087	merge.c	FUNCTION_38
0x4000979	          0x4d85c0	                             test r8, r8	      1093	merge.c	FUNCTION_38	IF_1
0x400097c	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1087	merge.c	FUNCTION_38
0x4000981	      0x4889742430	             mov qword [rsp + 0x30], rsi	      1087	merge.c	FUNCTION_38
0x4000986	      0x4c89442420	              mov qword [rsp + 0x20], r8	      1087	merge.c	FUNCTION_38
0x400098b	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1089	merge.c	FUNCTION_38
0x4000994	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1091	merge.c	FUNCTION_38
0x400099d	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1091	merge.c	FUNCTION_38
0x40009a6	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1091	merge.c	FUNCTION_38
0x40009af	     0xf846d070000	                            je 0x4001122	      1093	merge.c	FUNCTION_38	IF_1
0x40009b5	    0x8b3500000000	            mov esi, dword [0x040009bb] 	      1093	merge.c	FUNCTION_38	IF_1
0x40009bb	      0x4c8d742460	                   lea r14, [rsp + 0x60]	      1094	merge.c	FUNCTION_38	IF_1
0x40009c0	            0x85f6	                           test esi, esi	      1093	merge.c	FUNCTION_38	IF_1
0x40009c2	     0xf85cf040000	                           jne 0x4000e97	      1093	merge.c	FUNCTION_38	IF_1
0x40009c8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1096	merge.c	FUNCTION_38	IF_2
0x40009cd	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      1090	merge.c	FUNCTION_38
0x40009d2	          0x4885c0	                           test rax, rax	      1096	merge.c	FUNCTION_38	IF_2
0x40009d5	            0x7411	                            je 0x40009e8	      1096	merge.c	FUNCTION_38	IF_2
0x40009d7	      0x488d742450	                   lea rsi, [rsp + 0x50]	      1097	merge.c	FUNCTION_38	CALL_1
0x40009dc	          0x4889c7	                            mov rdi, rax	      1097	merge.c	FUNCTION_38	CALL_1
0x40009df	      0xe800000000	                          call 0x40009e4	      1097	merge.c	FUNCTION_38	CALL_1
0x40009e4	        0x488d5808	                      lea rbx, [rax + 8]	      1097	merge.c	FUNCTION_38	CALL_1
0x40009e8	          0x83fd01	                              cmp ebp, 1	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x40009eb	     0xf8437050000	                            je 0x4000f28	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x40009f1	          0x4531ed	                          xor r13d, r13d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x40009f4	            0x85ed	                           test ebp, ebp	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x40009f6	            0x7e35	                           jle 0x4000a2d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x40009f8	     0xf1f84000000	                   nop dword [rax + rax]	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a00	        0x4b8b3cec	            mov rdi, qword [r12 + r13*8]	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a04	      0xe800000000	                          call 0x4000a09	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a09	          0x4885c0	                           test rax, rax	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4000a0c	          0x4989c7	                            mov r15, rax	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a0f	     0xf845b040000	                            je 0x4000e70	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4000a15	          0x4889de	                            mov rsi, rbx	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a18	          0x4c89ff	                            mov rdi, r15	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a1b	        0x4983c501	                              add r13, 1	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a1f	      0xe800000000	                          call 0x4000a24	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a24	          0x4439ed	                           cmp ebp, r13d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a27	        0x488d5808	                      lea rbx, [rax + 8]	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a2b	            0x7fd3	                            jg 0x4000a00	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a2d	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a32	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a37	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a3c	      0xe8bff9ffff	                 call sym.reduce_parents	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a41	          0x4d85f6	                           test r14, r14	      1111	merge.c	FUNCTION_38	ELSE_1	IF_5
0x4000a44	          0x4989c4	                            mov r12, rax	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a47	      0x4889442450	             mov qword [rsp + 0x50], rax	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a4c	     0xf84c7020000	                            je 0x4000d19	      1111	merge.c	FUNCTION_38	ELSE_1	IF_5
0x4000a52	          0x4885c0	                           test rax, rax	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000a55	     0xf845d020000	                            je 0x4000cb8	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000a5b	       0xf1f440000	                   nop dword [rax + rax]	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000a60	        0x498b0424	                    mov rax, qword [r12]	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
drop_save	FOR,0:ELSE,0:WHILE,0:functions,0:CALL,6:IF,0:SWITCH,0:DO,0	13
0x4000040	    0x891500000000	            mov dword [0x04000046], edx 	       195	merge.c	FUNCTION_6
0x4000046	            0x31c0	                            xor eax, eax	       197	merge.c	FUNCTION_6
0x4000048	              0xc3	                                     ret	       197	merge.c	FUNCTION_6
0x4000049	     0xf1f80000000	                         nop dword [rax]	       197	merge.c	FUNCTION_6
0x4000050	          0x8b470c	              mov eax, dword [rdi + 0xc]	       709	merge.c	FUNCTION_21
0x4000053	             0x102	                    add dword [rdx], eax	       709	merge.c	FUNCTION_21
0x4000055	              0xc3	                                     ret	       709	merge.c	FUNCTION_21
0x4000056	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       709	merge.c	FUNCTION_21
0x4000060	            0x4155	                                push r13	       558	merge.c	FUNCTION_17
0x4000062	            0x4154	                                push r12	       558	merge.c	FUNCTION_17
0x4000064	          0x4989d5	                            mov r13, rdx	       558	merge.c	FUNCTION_17
0x4000067	              0x55	                                push rbp	       558	merge.c	FUNCTION_17
0x4000068	              0x53	                                push rbx	       558	merge.c	FUNCTION_17
