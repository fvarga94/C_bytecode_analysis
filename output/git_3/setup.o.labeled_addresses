discover_git_directory	ELSE,1:WHILE,0:FOR,0:SWITCH,0:CALL,17:IF,5:functions,0:DO,0	175
0x4001b70	            0x4157	                                push r15	       982	setup.c	FUNCTION_30
0x4001b72	            0x4156	                                push r14	       982	setup.c	FUNCTION_30
0x4001b74	            0x4155	                                push r13	       982	setup.c	FUNCTION_30
0x4001b76	            0x4154	                                push r12	       982	setup.c	FUNCTION_30
0x4001b78	              0x55	                                push rbp	       982	setup.c	FUNCTION_30
0x4001b79	              0x53	                                push rbx	       982	setup.c	FUNCTION_30
0x4001b7a	          0x4889fd	                            mov rbp, rdi	       982	setup.c	FUNCTION_30
0x4001b7d	          0x4889f3	                            mov rbx, rsi	       982	setup.c	FUNCTION_30
0x4001b80	    0x4881ec980000	                           sub rsp, 0x98	       982	setup.c	FUNCTION_30
0x4001b87	        0x4c8b7708	                mov r14, qword [rdi + 8]	       985	setup.c	FUNCTION_30
0x4001b8b	        0x4c8b6e08	                mov r13, qword [rsi + 8]	       984	setup.c	FUNCTION_30
0x4001b8f	          0x4889e7	                            mov rdi, rsp	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x4001b92	    0x48c704240000	                      mov qword [rsp], 0	       983	setup.c	FUNCTION_30
0x4001b9a	    0x48c744240800	                  mov qword [rsp + 8], 0	       983	setup.c	FUNCTION_30
0x4001ba3	    0x64488b042528	                mov rax, qword fs:[0x28]	       982	setup.c	FUNCTION_30
0x4001bac	    0x488984248800	             mov qword [rsp + 0x88], rax	       982	setup.c	FUNCTION_30
0x4001bb4	            0x31c0	                            xor eax, eax	       982	setup.c	FUNCTION_30
0x4001bb6	    0x48c744241000	               mov qword [rsp + 0x10], 0	       983	setup.c	FUNCTION_30
0x4001bbf	    0x48c744242000	               mov qword [rsp + 0x20], 0	       983	setup.c	FUNCTION_30
0x4001bc8	    0x48c744242800	               mov qword [rsp + 0x28], 0	       983	setup.c	FUNCTION_30
0x4001bd1	    0x48c744243000	               mov qword [rsp + 0x30], 0	       983	setup.c	FUNCTION_30
0x4001bda	      0xe800000000	                          call 0x4001bdf	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x4001bdf	            0x85c0	                           test eax, eax	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x4001be1	     0xf8599010000	                           jne 0x4001d80	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x4001be7	            0x31d2	                            xor edx, edx	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001be9	          0x4889de	                            mov rsi, rbx	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001bec	          0x4889e7	                            mov rdi, rsp	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001bef	          0x4189c4	                           mov r12d, eax	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001bf2	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       991	setup.c	FUNCTION_30
0x4001bf7	      0xe834f8ffff	   call sym.setup_git_directory_gently_1	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001bfc	            0x85c0	                           test eax, eax	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001bfe	     0xf8eac010000	                           jle 0x4001db0	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001c04	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001c09	          0x4939cf	                            cmp r15, rcx	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001c0c	     0xf879e000000	                            ja 0x4001cb0	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001c12	          0x4c89ee	                            mov rsi, r13	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001c15	        0x48037310	             add rsi, qword [rbx + 0x10]	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001c19	          0x4889ef	                            mov rdi, rbp	      1010	setup.c	FUNCTION_30	CALL_9
0x4001c1c	      0xe800000000	                          call 0x4001c21	      1010	setup.c	FUNCTION_30	CALL_9
0x4001c21	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_40	IF_2
0x4001c26	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_40
0x4001c2f	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x4001c35	     0xf841d010000	                            je 0x4001d58	       165	strbuf.h	FUNCTION_40	IF_2
0x4001c3b	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x4001c3e	          0x4c89f2	                            mov rdx, r14	      1013	setup.c	FUNCTION_30	CALL_10
0x4001c41	        0x48035510	             add rdx, qword [rbp + 0x10]	      1013	setup.c	FUNCTION_30	CALL_10
0x4001c45	            0x31c0	                            xor eax, eax	      1013	setup.c	FUNCTION_30	CALL_10
0x4001c47	      0xbe00000000	                              mov esi, 0	      1013	setup.c	FUNCTION_30	CALL_10
0x4001c4c	          0x4889e7	                            mov rdi, rsp	      1013	setup.c	FUNCTION_30	CALL_10
0x4001c4f	      0xe800000000	                          call 0x4001c54	      1013	setup.c	FUNCTION_30	CALL_10
0x4001c54	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1014	setup.c	FUNCTION_30	CALL_11
0x4001c59	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1014	setup.c	FUNCTION_30	CALL_11
0x4001c5e	      0xe800000000	                          call 0x4001c63	      1014	setup.c	FUNCTION_30	CALL_11
0x4001c63	          0x4889e7	                            mov rdi, rsp	      1015	setup.c	FUNCTION_30	CALL_12
0x4001c66	      0xe800000000	                          call 0x4001c6b	      1015	setup.c	FUNCTION_30	CALL_12
0x4001c6b	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1017	setup.c	FUNCTION_30	IF_5	CALL_13
0x4001c70	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1017	setup.c	FUNCTION_30	IF_5	CALL_13
0x4001c75	      0xe800000000	                          call 0x4001c7a	      1017	setup.c	FUNCTION_30	IF_5	CALL_13
0x4001c7a	            0x85c0	                           test eax, eax	      1017	setup.c	FUNCTION_30	IF_5	CALL_13
0x4001c7c	     0xf8841010000	                            js 0x4001dc3	      1017	setup.c	FUNCTION_30	IF_5	CALL_13
0x4001c82	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1027	setup.c	FUNCTION_30
0x4001c8a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1027	setup.c	FUNCTION_30
0x4001c93	          0x4489e0	                           mov eax, r12d	      1027	setup.c	FUNCTION_30
0x4001c96	     0xf85b1010000	                           jne 0x4001e4d	      1027	setup.c	FUNCTION_30
0x4001c9c	    0x4881c4980000	                           add rsp, 0x98	      1027	setup.c	FUNCTION_30
0x4001ca3	              0x5b	                                 pop rbx	      1027	setup.c	FUNCTION_30
0x4001ca4	              0x5d	                                 pop rbp	      1027	setup.c	FUNCTION_30
0x4001ca5	            0x415c	                                 pop r12	      1027	setup.c	FUNCTION_30
0x4001ca7	            0x415d	                                 pop r13	      1027	setup.c	FUNCTION_30
0x4001ca9	            0x415e	                                 pop r14	      1027	setup.c	FUNCTION_30
0x4001cab	            0x415f	                                 pop r15	      1027	setup.c	FUNCTION_30
0x4001cad	              0xc3	                                     ret	      1027	setup.c	FUNCTION_30
0x4001cae	            0x6690	                                     nop	      1027	setup.c	FUNCTION_30
0x4001cb0	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001cb4	        0x4a8d342a	                    lea rsi, [rdx + r13]	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001cb8	           0xfb606	                   movzx eax, byte [rsi]	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001cbb	            0x3c2f	                            cmp al, 0x2f	      1154	cache.h	FUNCTION_69
0x4001cbd	     0xf8456ffffff	                            je 0x4001c19	      1154	cache.h	FUNCTION_69
0x4001cc3	            0x3c2e	                            cmp al, 0x2e	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4001cc5	            0x7549	                           jne 0x4001d10	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4001cc7	        0x807e0100	                   cmp byte [rsi + 1], 0	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4001ccb	            0x7543	                           jne 0x4001d10	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4001ccd	          0x488b03	                    mov rax, qword [rbx]	       162	strbuf.h	FUNCTION_40	IF_1
0x4001cd0	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_40	IF_1
0x4001cd4	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_40	IF_1
0x4001cd8	          0x4939c5	                            cmp r13, rax	       162	strbuf.h	FUNCTION_40	IF_1
0x4001cdb	     0xf8771010000	                            ja 0x4001e52	       162	strbuf.h	FUNCTION_40	IF_1
0x4001ce1	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x4001ce8	        0x4c896b08	                mov qword [rbx + 8], r13	       164	strbuf.h	FUNCTION_40
0x4001cec	     0xf84ae000000	                            je 0x4001da0	       165	strbuf.h	FUNCTION_40	IF_2
0x4001cf2	          0xc60600	                       mov byte [rsi], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x4001cf5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       166	strbuf.h	FUNCTION_40	IF_2
0x4001cfa	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001cff	          0x4c89ee	                            mov rsi, r13	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001d02	          0x4889df	                            mov rdi, rbx	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001d05	      0xe800000000	                          call 0x4001d0a	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001d0a	      0xe903ffffff	                           jmp 0x4001c12	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001d0f	              0x90	                                     nop	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001d10	        0x488b0424	                    mov rax, qword [rsp]	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001d14	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_39
0x4001d17	            0x7577	                           jne 0x4001d90	       141	strbuf.h	FUNCTION_39
0x4001d19	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_41	CALL_2
0x4001d1e	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_41	CALL_2
0x4001d21	      0xe800000000	                          call 0x4001d26	       228	strbuf.h	FUNCTION_41	CALL_2
0x4001d26	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_41	CALL_2
0x4001d2b	        0x488d4101	                      lea rax, [rcx + 1]	       229	strbuf.h	FUNCTION_41
0x4001d2f	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_41
0x4001d34	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_41
0x4001d39	        0xc604082f	              mov byte [rax + rcx], 0x2f	       229	strbuf.h	FUNCTION_41
0x4001d3d	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_41
0x4001d42	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_41
0x4001d47	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_41
0x4001d4b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       230	strbuf.h	FUNCTION_41
0x4001d50	            0xeba8	                           jmp 0x4001cfa	       230	strbuf.h	FUNCTION_41
0x4001d52	    0x660f1f440000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_41
0x4001d58	    0x803d00000000	                cmp byte [0x04001d5f], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001d5f	     0xf84d9feffff	                            je 0x4001c3e	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001d65	      0xe800000000	                          call 0x4001d6a	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001d6a	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001d70	    0x803d00000000	                cmp byte [0x04001d77], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001d77	            0x75ec	                           jne 0x4001d65	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001d79	     0xf1f80000000	                         nop dword [rax]	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001d80	    0x41bcffffffff	                    mov r12d, 0xffffffff	       989	setup.c	FUNCTION_30	IF_1
0x4001d86	      0xe9f7feffff	                           jmp 0x4001c82	       989	setup.c	FUNCTION_30	IF_1
0x4001d8b	       0xf1f440000	                   nop dword [rax + rax]	       989	setup.c	FUNCTION_30	IF_1
0x4001d90	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4001d94	          0x4839c1	                            cmp rcx, rax	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4001d97	            0x7592	                           jne 0x4001d2b	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4001d99	      0xe97bffffff	                           jmp 0x4001d19	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4001d9e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4001da0	    0x803d00000000	                cmp byte [0x04001da7], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001da7	     0xf844dffffff	                            je 0x4001cfa	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001dad	            0xebb6	                           jmp 0x4001d65	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001daf	              0x90	                                     nop	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001db0	          0x4889e7	                            mov rdi, rsp	       993	setup.c	FUNCTION_30	IF_2	CALL_3
0x4001db3	    0x41bcffffffff	                    mov r12d, 0xffffffff	       994	setup.c	FUNCTION_30	IF_2
0x4001db9	      0xe800000000	                          call 0x4001dbe	       993	setup.c	FUNCTION_30	IF_2	CALL_3
0x4001dbe	      0xe9bffeffff	                           jmp 0x4001c82	       994	setup.c	FUNCTION_30	IF_2
0x4001dc3	          0x4c89ee	                            mov rsi, r13	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001dc6	        0x48037310	             add rsi, qword [rbx + 0x10]	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001dca	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001dcf	            0x31c0	                            xor eax, eax	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001dd1	      0xbf00000000	                              mov edi, 0	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001dd6	      0xe800000000	                          call 0x4001ddb	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001ddb	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1020	setup.c	FUNCTION_30	IF_5	CALL_15
0x4001de0	      0xe800000000	                          call 0x4001de5	      1020	setup.c	FUNCTION_30	IF_5	CALL_15
0x4001de5	        0x488b4500	                    mov rax, qword [rbp]	       162	strbuf.h	FUNCTION_40	IF_1
0x4001de9	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_40	IF_1
0x4001ded	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_40	IF_1
0x4001df1	          0x4939c6	                            cmp r14, rax	       162	strbuf.h	FUNCTION_40	IF_1
0x4001df4	            0x775c	                            ja 0x4001e52	       162	strbuf.h	FUNCTION_40	IF_1
0x4001df6	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       165	strbuf.h	FUNCTION_40	IF_2
0x4001dfa	        0x4c897508	                mov qword [rbp + 8], r14	       164	strbuf.h	FUNCTION_40
0x4001dfe	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x4001e04	            0x7439	                            je 0x4001e3f	       165	strbuf.h	FUNCTION_40	IF_2
0x4001e06	      0x42c6043000	                 mov byte [rax + r14], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x4001e0b	          0x488b03	                    mov rax, qword [rbx]	       162	strbuf.h	FUNCTION_40	IF_1
0x4001e0e	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_40	IF_1
0x4001e12	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_40	IF_1
0x4001e16	          0x4939c5	                            cmp r13, rax	       162	strbuf.h	FUNCTION_40	IF_1
0x4001e19	            0x7737	                            ja 0x4001e52	       162	strbuf.h	FUNCTION_40	IF_1
0x4001e1b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       165	strbuf.h	FUNCTION_40	IF_2
0x4001e1f	        0x4c896b08	                mov qword [rbx + 8], r13	       164	strbuf.h	FUNCTION_40
0x4001e23	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x4001e29	     0xf8441ffffff	                            je 0x4001d70	       165	strbuf.h	FUNCTION_40	IF_2
0x4001e2f	      0x42c6042800	                 mov byte [rax + r13], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x4001e34	    0x41bcffffffff	                    mov r12d, 0xffffffff	      1023	setup.c	FUNCTION_30	IF_5
0x4001e3a	      0xe943feffff	                           jmp 0x4001c82	      1023	setup.c	FUNCTION_30	IF_5
0x4001e3f	    0x803d00000000	                cmp byte [0x04001e46], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001e46	            0x74c3	                            je 0x4001e0b	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001e48	      0xe918ffffff	                           jmp 0x4001d65	       168	strbuf.h	FUNCTION_40	CALL_2
0x4001e4d	      0xe800000000	                          call 0x4001e52	      1027	setup.c	FUNCTION_30
0x4001e52	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_40	CALL_1
0x4001e57	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_40	CALL_1
0x4001e59	      0xe800000000	                          call 0x4001e5e	       163	strbuf.h	FUNCTION_40	CALL_1
is_git_directory	ELSE,1:WHILE,0:FOR,0:SWITCH,0:CALL,15:IF,5:functions,0:DO,0	136
0x4000900	              0x53	                                push rbx	       310	setup.c	FUNCTION_12
0x4000901	          0x4889fb	                            mov rbx, rdi	       310	setup.c	FUNCTION_12
0x4000904	        0x4883ec20	                           sub rsp, 0x20	       310	setup.c	FUNCTION_12
0x4000908	    0x64488b042528	                mov rax, qword fs:[0x28]	       310	setup.c	FUNCTION_12
0x4000911	      0x4889442418	             mov qword [rsp + 0x18], rax	       310	setup.c	FUNCTION_12
0x4000916	            0x31c0	                            xor eax, eax	       310	setup.c	FUNCTION_12
0x4000918	    0x48c704240000	                      mov qword [rsp], 0	       311	setup.c	FUNCTION_12
0x4000920	    0x48c744240800	                  mov qword [rsp + 8], 0	       311	setup.c	FUNCTION_12
0x4000929	    0x48c744241000	               mov qword [rsp + 0x10], 0	       311	setup.c	FUNCTION_12
0x4000932	      0xe800000000	                          call 0x4000937	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000937	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_42	CALL_2
0x400093a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_42	CALL_2
0x400093d	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000940	      0xe800000000	                          call 0x4000945	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000945	      0x488b442408	                mov rax, qword [rsp + 8]	       595	strbuf.h	FUNCTION_47	IF_1
0x400094a	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_47	IF_1
0x400094d	            0x7441	                            je 0x4000990	       595	strbuf.h	FUNCTION_47	IF_1
0x400094f	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       595	strbuf.h	FUNCTION_47	IF_1
0x4000954	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	       595	strbuf.h	FUNCTION_47	IF_1
0x4000959	            0x7435	                            je 0x4000990	       595	strbuf.h	FUNCTION_47	IF_1
0x400095b	        0x488b0c24	                    mov rcx, qword [rsp]	       595	strbuf.h	FUNCTION_47	IF_1
0x400095f	          0x4885c9	                           test rcx, rcx	       141	strbuf.h	FUNCTION_39
0x4000962	     0xf8438010000	                            je 0x4000aa0	       141	strbuf.h	FUNCTION_39
0x4000968	        0x4883e901	                              sub rcx, 1	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x400096c	          0x4839c8	                            cmp rax, rcx	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x400096f	     0xf842b010000	                            je 0x4000aa0	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4000975	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_41
0x4000979	      0x48894c2408	                mov qword [rsp + 8], rcx	       229	strbuf.h	FUNCTION_41
0x400097e	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_41
0x4000982	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_41
0x4000987	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_41
0x400098c	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_41
0x4000990	      0xba04000000	                              mov edx, 4	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000995	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_42	CALL_2
0x400099a	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_42	CALL_2
0x400099d	      0xe800000000	                          call 0x40009a2	       279	strbuf.h	FUNCTION_42	CALL_2
0x40009a2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x40009a7	      0xe800000000	                          call 0x40009ac	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x40009ac	            0x85c0	                           test eax, eax	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x40009ae	            0x7430	                            je 0x40009e0	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x40009b0	            0x31db	                            xor ebx, ebx	       312	setup.c	FUNCTION_12
0x40009b2	          0x4889e7	                            mov rdi, rsp	       345	setup.c	FUNCTION_12	CALL_15
0x40009b5	      0xe800000000	                          call 0x40009ba	       345	setup.c	FUNCTION_12	CALL_15
0x40009ba	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       347	setup.c	FUNCTION_12
0x40009bf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       347	setup.c	FUNCTION_12
0x40009c8	            0x89d8	                            mov eax, ebx	       347	setup.c	FUNCTION_12
0x40009ca	     0xf8576010000	                           jne 0x4000b46	       347	setup.c	FUNCTION_12
0x40009d0	        0x4883c420	                           add rsp, 0x20	       347	setup.c	FUNCTION_12
0x40009d4	              0x5b	                                 pop rbx	       347	setup.c	FUNCTION_12
0x40009d5	              0xc3	                                     ret	       347	setup.c	FUNCTION_12
0x40009d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       347	setup.c	FUNCTION_12
0x40009e0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_40	IF_2
0x40009e5	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_40
0x40009ee	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x40009f4	     0xf84d6000000	                            je 0x4000ad0	       165	strbuf.h	FUNCTION_40	IF_2
0x40009fa	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x40009fd	          0x4889de	                            mov rsi, rbx	       323	setup.c	FUNCTION_12	CALL_5
0x4000a00	          0x4889e7	                            mov rdi, rsp	       323	setup.c	FUNCTION_12	CALL_5
0x4000a03	      0xe800000000	                          call 0x4000a08	       323	setup.c	FUNCTION_12	CALL_5
0x4000a08	      0xbf00000000	                              mov edi, 0	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000a0d	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       324	setup.c	FUNCTION_12
0x4000a12	      0xe800000000	                          call 0x4000a17	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000a17	          0x4885c0	                           test rax, rax	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000a1a	     0xf84c0000000	                            je 0x4000ae0	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000a20	      0xbf00000000	                              mov edi, 0	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000a25	      0xe800000000	                          call 0x4000a2a	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000a2a	      0xbe01000000	                              mov esi, 1	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000a2f	          0x4889c7	                            mov rdi, rax	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000a32	      0xe800000000	                          call 0x4000a37	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000a37	            0x85c0	                           test eax, eax	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000a39	     0xf8571ffffff	                           jne 0x40009b0	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000a3f	        0x488b0424	                    mov rax, qword [rsp]	       162	strbuf.h	FUNCTION_40	IF_1
0x4000a43	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_40	IF_1
0x4000a47	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_40	IF_1
0x4000a4b	          0x4839c3	                            cmp rbx, rax	       162	strbuf.h	FUNCTION_40	IF_1
0x4000a4e	     0xf87f7000000	                            ja 0x4000b4b	       162	strbuf.h	FUNCTION_40	IF_1
0x4000a54	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_40	IF_2
0x4000a59	      0x48895c2408	                mov qword [rsp + 8], rbx	       164	strbuf.h	FUNCTION_40
0x4000a5e	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x4000a64	            0x745a	                            je 0x4000ac0	       165	strbuf.h	FUNCTION_40	IF_2
0x4000a66	        0xc6041800	                 mov byte [rax + rbx], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x4000a6a	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000a6f	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000a74	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000a77	      0xe800000000	                          call 0x4000a7c	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000a7c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       340	setup.c	FUNCTION_12	IF_5	CALL_14
0x4000a81	      0xbe01000000	                              mov esi, 1	       340	setup.c	FUNCTION_12	IF_5	CALL_14
0x4000a86	            0x31db	                            xor ebx, ebx	       312	setup.c	FUNCTION_12
0x4000a88	      0xe800000000	                          call 0x4000a8d	       340	setup.c	FUNCTION_12	IF_5	CALL_14
0x4000a8d	            0x85c0	                           test eax, eax	       312	setup.c	FUNCTION_12
0x4000a8f	           0xf94c3	                                 sete bl	       312	setup.c	FUNCTION_12
0x4000a92	      0xe91bffffff	                           jmp 0x40009b2	       312	setup.c	FUNCTION_12
0x4000a97	    0x660f1f840000	                    nop word [rax + rax]	       312	setup.c	FUNCTION_12
0x4000aa0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_41	CALL_2
0x4000aa5	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_41	CALL_2
0x4000aa8	      0xe800000000	                          call 0x4000aad	       228	strbuf.h	FUNCTION_41	CALL_2
0x4000aad	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       228	strbuf.h	FUNCTION_41	CALL_2
0x4000ab2	      0x488b442408	                mov rax, qword [rsp + 8]	       228	strbuf.h	FUNCTION_41	CALL_2
0x4000ab7	      0xe9b9feffff	                           jmp 0x4000975	       228	strbuf.h	FUNCTION_41	CALL_2
0x4000abc	         0xf1f4000	                         nop dword [rax]	       228	strbuf.h	FUNCTION_41	CALL_2
0x4000ac0	    0x803d00000000	                cmp byte [0x04000ac7], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000ac7	            0x74a1	                            je 0x4000a6a	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000ac9	            0xeb76	                           jmp 0x4000b41	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000acb	       0xf1f440000	                   nop dword [rax + rax]	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000ad0	    0x803d00000000	                cmp byte [0x04000ad7], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000ad7	     0xf8420ffffff	                            je 0x40009fd	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000add	            0xeb62	                           jmp 0x4000b41	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000adf	              0x90	                                     nop	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000ae0	        0x488b0424	                    mov rax, qword [rsp]	       162	strbuf.h	FUNCTION_40	IF_1
0x4000ae4	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_40	IF_1
0x4000ae8	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_40	IF_1
0x4000aec	          0x4839c3	                            cmp rbx, rax	       162	strbuf.h	FUNCTION_40	IF_1
0x4000aef	            0x775a	                            ja 0x4000b4b	       162	strbuf.h	FUNCTION_40	IF_1
0x4000af1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_40	IF_2
0x4000af6	      0x48895c2408	                mov qword [rsp + 8], rbx	       164	strbuf.h	FUNCTION_40
0x4000afb	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x4000b01	            0x7435	                            je 0x4000b38	       165	strbuf.h	FUNCTION_40	IF_2
0x4000b03	        0xc6041800	                 mov byte [rax + rbx], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x4000b07	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000b0c	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000b11	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000b14	      0xe800000000	                          call 0x4000b19	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000b19	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b1e	      0xbe01000000	                              mov esi, 1	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b23	      0xe800000000	                          call 0x4000b28	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b28	            0x85c0	                           test eax, eax	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b2a	     0xf840fffffff	                            je 0x4000a3f	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b30	      0xe97bfeffff	                           jmp 0x40009b0	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b35	           0xf1f00	                         nop dword [rax]	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b38	    0x803d00000000	                cmp byte [0x04000b3f], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000b3f	            0x74c6	                            je 0x4000b07	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000b41	      0xe800000000	                          call 0x4000b46	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000b46	      0xe800000000	                          call 0x4000b4b	       347	setup.c	FUNCTION_12
0x4000b4b	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_40	CALL_1
0x4000b50	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_40	CALL_1
0x4000b52	      0xe800000000	                          call 0x4000b57	       163	strbuf.h	FUNCTION_40	CALL_1
read_repository_format	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,3:IF,0:functions,0:DO,0	30
0x4000cb0	              0x55	                                push rbp	       489	setup.c	FUNCTION_19
0x4000cb1	              0x53	                                push rbx	       489	setup.c	FUNCTION_19
0x4000cb2	          0x4889fb	                            mov rbx, rdi	       489	setup.c	FUNCTION_19
0x4000cb5	        0x488d7f08	                      lea rdi, [rdi + 8]	        90	string3.h	FUNCTION_114	CALL_6
0x4000cb9	          0x4889d9	                            mov rcx, rbx	        90	string3.h	FUNCTION_114	CALL_6
0x4000cbc	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_114	CALL_6
0x4000cbe	        0x4883ec08	                              sub rsp, 8	       489	setup.c	FUNCTION_19
0x4000cc2	    0x48c747f80000	                  mov qword [rdi - 8], 0	        90	string3.h	FUNCTION_114	CALL_6
0x4000cca	    0x48c747300000	               mov qword [rdi + 0x30], 0	        90	string3.h	FUNCTION_114	CALL_6
0x4000cd2	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_114	CALL_6
0x4000cd6	          0x4889f5	                            mov rbp, rsi	       489	setup.c	FUNCTION_19
0x4000cd9	      0xbe01000000	                              mov esi, 1	       494	setup.c	FUNCTION_19	CALL_2
0x4000cde	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_114	CALL_6
0x4000ce1	          0x83c140	                           add ecx, 0x40	        90	string3.h	FUNCTION_114	CALL_6
0x4000ce4	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_114	CALL_6
0x4000ce7	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_114	CALL_6
0x4000cea	        0x488d7b20	                   lea rdi, [rbx + 0x20]	       494	setup.c	FUNCTION_19	CALL_2
0x4000cee	    0xc703ffffffff	            mov dword [rbx], 0xffffffff 	       491	setup.c	FUNCTION_19
0x4000cf4	    0xc74310ffffff	     mov dword [rbx + 0x10], 0xffffffff 	       492	setup.c	FUNCTION_19
0x4000cfb	    0xc74314010000	               mov dword [rbx + 0x14], 1	       493	setup.c	FUNCTION_19
0x4000d02	      0xe800000000	                          call 0x4000d07	       494	setup.c	FUNCTION_19	CALL_2
0x4000d07	          0x4889da	                            mov rdx, rbx	       495	setup.c	FUNCTION_19	CALL_3
0x4000d0a	          0x4889ee	                            mov rsi, rbp	       495	setup.c	FUNCTION_19	CALL_3
0x4000d0d	      0xbf00000000	                              mov edi, 0	       495	setup.c	FUNCTION_19	CALL_3
0x4000d12	      0xe800000000	                          call 0x4000d17	       495	setup.c	FUNCTION_19	CALL_3
0x4000d17	            0x8b03	                    mov eax, dword [rbx]	       496	setup.c	FUNCTION_19
0x4000d19	        0x4883c408	                              add rsp, 8	       497	setup.c	FUNCTION_19
0x4000d1d	              0x5b	                                 pop rbx	       497	setup.c	FUNCTION_19
0x4000d1e	              0x5d	                                 pop rbp	       497	setup.c	FUNCTION_19
0x4000d1f	              0xc3	                                     ret	       497	setup.c	FUNCTION_19
check_repository_format	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,2:IF,0:functions,0:DO,0	17
0x40025e0	        0x4883ec58	                           sub rsp, 0x58	      1180	setup.c	FUNCTION_33
0x40025e4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1180	setup.c	FUNCTION_33
0x40025ed	      0x4889442448	             mov qword [rsp + 0x48], rax	      1180	setup.c	FUNCTION_33
0x40025f2	            0x31c0	                            xor eax, eax	      1180	setup.c	FUNCTION_33
0x40025f4	      0xe800000000	                          call 0x40025f9	      1182	setup.c	FUNCTION_33	CALL_2
0x40025f9	            0x31d2	                            xor edx, edx	      1182	setup.c	FUNCTION_33	CALL_2
0x40025fb	          0x4889e6	                            mov rsi, rsp	      1182	setup.c	FUNCTION_33	CALL_2
0x40025fe	          0x4889c7	                            mov rdi, rax	      1182	setup.c	FUNCTION_33	CALL_2
0x4002601	      0xe80ae8ffff	 call sym.check_repository_format_gently	      1182	setup.c	FUNCTION_33	CALL_2
0x4002606	    0x488b05000000	            mov rax, qword [0x0400260d] 	      1183	setup.c	FUNCTION_33
0x400260d	    0xc70001000000	                      mov dword [rax], 1	      1183	setup.c	FUNCTION_33
0x4002613	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1184	setup.c	FUNCTION_33
0x4002618	    0x644833042528	                xor rax, qword fs:[0x28]	      1184	setup.c	FUNCTION_33
0x4002621	            0x7505	                           jne 0x4002628	      1184	setup.c	FUNCTION_33
0x4002623	        0x4883c458	                           add rsp, 0x58	      1184	setup.c	FUNCTION_33
0x4002627	              0xc3	                                     ret	      1184	setup.c	FUNCTION_33
0x4002628	      0xe800000000	                          call 0x400262d	      1184	setup.c	FUNCTION_33
read_gitfile_error_die	ELSE,0:WHILE,0:FOR,0:SWITCH,1:CALL,13:IF,0:functions,0:DO,0	57
0x4000fa0	              0x55	                                push rbp	       523	setup.c	FUNCTION_21
0x4000fa1	              0x53	                                push rbx	       523	setup.c	FUNCTION_21
0x4000fa2	        0x4883ec08	                              sub rsp, 8	       523	setup.c	FUNCTION_21
0x4000fa6	          0x83ff08	                              cmp edi, 8	       524	setup.c	FUNCTION_21	SWITCH_1
0x4000fa9	     0xf87b9000000	                            ja 0x4001068	       524	setup.c	FUNCTION_21	SWITCH_1
0x4000faf	            0x89ff	                            mov edi, edi	       524	setup.c	FUNCTION_21	SWITCH_1
0x4000fb1	          0x4889f3	                            mov rbx, rsi	       524	setup.c	FUNCTION_21	SWITCH_1
0x4000fb4	    0xff24fd000000	                       jmp qword [rdi*8]	       524	setup.c	FUNCTION_21	SWITCH_1
0x4000fbb	       0xf1f440000	                   nop dword [rax + rax]	       524	setup.c	FUNCTION_21	SWITCH_1
0x4000fc0	        0x4883c408	                              add rsp, 8	       544	setup.c	FUNCTION_21
0x4000fc4	              0x5b	                                 pop rbx	       544	setup.c	FUNCTION_21
0x4000fc5	              0x5d	                                 pop rbp	       544	setup.c	FUNCTION_21
0x4000fc6	              0xc3	                                     ret	       544	setup.c	FUNCTION_21
0x4000fc7	    0x660f1f840000	                    nop word [rax + rax]	       544	setup.c	FUNCTION_21
0x4000fd0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_78
0x4000fd5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_78
0x4000fda	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_78
0x4000fdc	      0xe800000000	                          call 0x4000fe1	        54	gettext.h	FUNCTION_78
0x4000fe1	          0x4889de	                            mov rsi, rbx	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x4000fe4	          0x4889c7	                            mov rdi, rax	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x4000fe7	            0x31c0	                            xor eax, eax	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x4000fe9	      0xe800000000	                          call 0x4000fee	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x4000fee	            0x6690	                                     nop	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x4000ff0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_78
0x4000ff5	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_78
0x4000ff7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_78
0x4000ffc	      0xe800000000	                          call 0x4001001	        54	gettext.h	FUNCTION_78
0x4001001	          0x4889de	                            mov rsi, rbx	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x4001004	          0x4889c7	                            mov rdi, rax	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x4001007	            0x31c0	                            xor eax, eax	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x4001009	      0xe800000000	                          call 0x400100e	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x400100e	            0x6690	                                     nop	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x4001010	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_78
0x4001015	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_78
0x400101a	            0xebbe	                           jmp 0x4000fda	        54	gettext.h	FUNCTION_78
0x400101c	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_78
0x4001020	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_78
0x4001025	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_78
0x400102a	            0xebae	                           jmp 0x4000fda	        54	gettext.h	FUNCTION_78
0x400102c	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_78
0x4001030	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_78
0x4001035	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_78
0x400103a	            0xeb9e	                           jmp 0x4000fda	        54	gettext.h	FUNCTION_78
0x400103c	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_78
0x4001040	          0x4889d5	                            mov rbp, rdx	        54	gettext.h	FUNCTION_78
0x4001043	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_78
0x4001048	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_78
0x400104a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_78
0x400104f	      0xe800000000	                          call 0x4001054	        54	gettext.h	FUNCTION_78
0x4001054	          0x4889ee	                            mov rsi, rbp	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001057	          0x4889c7	                            mov rdi, rax	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x400105a	            0x31c0	                            xor eax, eax	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x400105c	      0xe800000000	                          call 0x4001061	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001061	     0xf1f80000000	                         nop dword [rax]	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001068	      0xbf00000000	                              mov edi, 0	       542	setup.c	FUNCTION_21	SWITCH_1	CALL_13
0x400106d	            0x31c0	                            xor eax, eax	       542	setup.c	FUNCTION_21	SWITCH_1	CALL_13
0x400106f	      0xe800000000	                          call 0x4001074	       542	setup.c	FUNCTION_21	SWITCH_1	CALL_13
check_repo_format	ELSE,6:WHILE,0:FOR,0:SWITCH,0:CALL,15:IF,9:functions,0:DO,0	134
0x4000040	              0x55	                                push rbp	       406	setup.c	FUNCTION_17
0x4000041	              0x53	                                push rbx	       406	setup.c	FUNCTION_17
0x4000042	          0x4989f9	                             mov r9, rdi	       406	setup.c	FUNCTION_17
0x4000045	          0x4989f2	                            mov r10, rsi	       406	setup.c	FUNCTION_17
0x4000048	      0xbf00000000	                              mov edi, 0	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x400004d	      0xb91d000000	                           mov ecx, 0x1d	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000052	        0x4883ec08	                              sub rsp, 8	       406	setup.c	FUNCTION_17
0x4000056	          0x4c89ce	                             mov rsi, r9	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000059	          0x4889d5	                            mov rbp, rdx	       406	setup.c	FUNCTION_17
0x400005c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x400005e	          0x4d89c8	                              mov r8, r9	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000061	           0xf92c0	                                 setb al	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000064	           0xf97c3	                                 seta bl	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000067	            0x29c3	                            sub ebx, eax	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000069	      0xb800000000	                              mov eax, 0	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x400006e	           0xfbedb	                           movsx ebx, bl	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000071	            0x85db	                           test ebx, ebx	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000073	            0x751d	                           jne 0x4000092	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000075	      0xe906010000	                           jmp 0x4000180	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x400007a	    0x660f1f440000	                    nop word [rax + rax]	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000080	        0x4983c001	                               add r8, 1	       488	git-compat-util.h	FUNCTION_86	DO_1
0x4000084	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_86	DO_1
0x4000088	        0x413a48ff	                   cmp cl, byte [r8 - 1]	       488	git-compat-util.h	FUNCTION_86	DO_1
0x400008c	     0xf858e000000	                           jne 0x4000120	       488	git-compat-util.h	FUNCTION_86	DO_1
0x4000092	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_86	DO_1	IF_1
0x4000095	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_86	DO_1	IF_1
0x4000097	            0x75e7	                           jne 0x4000080	       484	git-compat-util.h	FUNCTION_86	DO_1	IF_1
0x4000099	      0xbf00000000	                              mov edi, 0	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x400009e	      0xb905000000	                              mov ecx, 5	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40000a3	          0x4c89c6	                             mov rsi, r8	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40000a6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40000a8	           0xf97c3	                                 seta bl	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40000ab	           0xf92c0	                                 setb al	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40000ae	            0x29c3	                            sub ebx, eax	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40000b0	           0xfbedb	                           movsx ebx, bl	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40000b3	            0x85db	                           test ebx, ebx	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40000b5	            0x7459	                            je 0x4000110	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40000b7	      0xbf00000000	                              mov edi, 0	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000bc	      0xb910000000	                           mov ecx, 0x10	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000c1	          0x4c89c6	                             mov rsi, r8	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000c4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000c6	           0xf97c3	                                 seta bl	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000c9	           0xf92c0	                                 setb al	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000cc	            0x29c3	                            sub ebx, eax	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000ce	           0xfbedb	                           movsx ebx, bl	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000d1	            0x85db	                           test ebx, ebx	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000d3	     0xf84d2000000	                            je 0x40001ab	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000d9	      0xbf00000000	                              mov edi, 0	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000de	      0xb90d000000	                            mov ecx, 0xd	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000e3	          0x4c89c6	                             mov rsi, r8	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000e6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000e8	           0xf97c3	                                 seta bl	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000eb	           0xf92c0	                                 setb al	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000ee	            0x29c3	                            sub ebx, eax	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000f0	           0xfbedb	                           movsx ebx, bl	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000f3	            0x85db	                           test ebx, ebx	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000f5	     0xf85d6000000	                           jne 0x40001d1	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000fb	          0x4d85d2	                           test r10, r10	       423	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	IF_6
0x40000fe	     0xf84e0000000	                            je 0x40001e4	       423	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	IF_6
0x4000104	          0x4c89d7	                            mov rdi, r10	       425	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_9
0x4000107	      0xe800000000	                          call 0x400010c	       425	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_9
0x400010c	        0x48894508	                mov qword [rbp + 8], rax	       425	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_9
0x4000110	        0x4883c408	                              add rsp, 8	       436	setup.c	FUNCTION_17
0x4000114	            0x89d8	                            mov eax, ebx	       436	setup.c	FUNCTION_17
0x4000116	              0x5b	                                 pop rbx	       436	setup.c	FUNCTION_17
0x4000117	              0x5d	                                 pop rbp	       436	setup.c	FUNCTION_17
0x4000118	              0xc3	                                     ret	       436	setup.c	FUNCTION_17
0x4000119	     0xf1f80000000	                         nop dword [rax]	       436	setup.c	FUNCTION_17
0x4000120	      0xbf00000000	                              mov edi, 0	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x4000125	      0xb90a000000	                            mov ecx, 0xa	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x400012a	          0x4c89ce	                             mov rsi, r9	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x400012d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x400012f	           0xf97c3	                                 seta bl	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x4000132	           0xf92c0	                                 setb al	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x4000135	            0x29c3	                            sub ebx, eax	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x4000137	           0xfbedb	                           movsx ebx, bl	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x400013a	            0x85db	                           test ebx, ebx	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x400013c	     0xf847c000000	                            je 0x40001be	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x4000142	      0xbf00000000	                              mov edi, 0	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000147	      0xb90e000000	                            mov ecx, 0xe	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x400014c	          0x4c89ce	                             mov rsi, r9	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x400014f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000151	           0xf97c3	                                 seta bl	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000154	           0xf92c0	                                 setb al	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000157	            0x29c3	                            sub ebx, eax	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000159	           0xfbedb	                           movsx ebx, bl	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x400015c	            0x85db	                           test ebx, ebx	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x400015e	            0x7540	                           jne 0x40001a0	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000160	          0x4d85d2	                           test r10, r10	       431	setup.c	FUNCTION_17	ELSE_6	IF_8	IF_9
0x4000163	            0x747f	                            je 0x40001e4	       431	setup.c	FUNCTION_17	ELSE_6	IF_8	IF_9
0x4000165	          0x4c89d7	                            mov rdi, r10	       433	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_15
0x4000168	      0xe800000000	                          call 0x400016d	       433	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_15
0x400016d	        0x48894518	            mov qword [rbp + 0x18], rax 	       433	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_15
0x4000171	        0x4883c408	                              add rsp, 8	       436	setup.c	FUNCTION_17
0x4000175	            0x89d8	                            mov eax, ebx	       436	setup.c	FUNCTION_17
0x4000177	              0x5b	                                 pop rbx	       436	setup.c	FUNCTION_17
0x4000178	              0x5d	                                 pop rbp	       436	setup.c	FUNCTION_17
0x4000179	              0xc3	                                     ret	       436	setup.c	FUNCTION_17
0x400017a	    0x660f1f440000	                    nop word [rax + rax]	       436	setup.c	FUNCTION_17
0x4000180	          0x4c89d6	                            mov rsi, r10	       411	setup.c	FUNCTION_17	CALL_2
0x4000183	          0x4c89cf	                             mov rdi, r9	       411	setup.c	FUNCTION_17	CALL_2
0x4000186	      0xe800000000	                          call 0x400018b	       411	setup.c	FUNCTION_17	CALL_2
0x400018b	          0x894500	                    mov dword [rbp], eax	       411	setup.c	FUNCTION_17	CALL_2
0x400018e	        0x4883c408	                              add rsp, 8	       436	setup.c	FUNCTION_17
0x4000192	            0x89d8	                            mov eax, ebx	       436	setup.c	FUNCTION_17
0x4000194	              0x5b	                                 pop rbx	       436	setup.c	FUNCTION_17
0x4000195	              0x5d	                                 pop rbp	       436	setup.c	FUNCTION_17
0x4000196	              0xc3	                                     ret	       436	setup.c	FUNCTION_17
0x4000197	    0x660f1f840000	                    nop word [rax + rax]	       436	setup.c	FUNCTION_17
0x40001a0	            0x31db	                            xor ebx, ebx	       435	setup.c	FUNCTION_17
0x40001a2	        0x4883c408	                              add rsp, 8	       436	setup.c	FUNCTION_17
0x40001a6	            0x89d8	                            mov eax, ebx	       436	setup.c	FUNCTION_17
0x40001a8	              0x5b	                                 pop rbx	       436	setup.c	FUNCTION_17
0x40001a9	              0x5d	                                 pop rbp	       436	setup.c	FUNCTION_17
0x40001aa	              0xc3	                                     ret	       436	setup.c	FUNCTION_17
0x40001ab	          0x4c89d6	                            mov rsi, r10	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x40001ae	          0x4c89cf	                             mov rdi, r9	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x40001b1	      0xe800000000	                          call 0x40001b6	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x40001b6	          0x894504	                mov dword [rbp + 4], eax	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x40001b9	      0xe952ffffff	                           jmp 0x4000110	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x40001be	          0x4c89d6	                            mov rsi, r10	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x40001c1	          0x4c89cf	                             mov rdi, r9	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x40001c4	      0xe800000000	                          call 0x40001c9	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x40001c9	          0x894510	            mov dword [rbp + 0x10], eax 	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x40001cc	      0xe93fffffff	                           jmp 0x4000110	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x40001d1	        0x488d7d20	                   lea rdi, [rbp + 0x20]	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x40001d5	          0x4c89c6	                             mov rsi, r8	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x40001d8	            0x31db	                            xor ebx, ebx	       435	setup.c	FUNCTION_17
0x40001da	      0xe800000000	                          call 0x40001df	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x40001df	      0xe92cffffff	                           jmp 0x4000110	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x40001e4	          0x4c89cf	                             mov rdi, r9	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
0x40001e7	      0xbbffffffff	                     mov ebx, 0xffffffff	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
0x40001ec	      0xe800000000	                          call 0x40001f1	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
0x40001f1	      0xe91affffff	                           jmp 0x4000110	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
verify_non_filename	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,5:IF,3:functions,0:DO,0	29
0x4000bc0	              0x55	                                push rbp	       246	setup.c	FUNCTION_9
0x4000bc1	              0x53	                                push rbx	       246	setup.c	FUNCTION_9
0x4000bc2	          0x4889fd	                            mov rbp, rdi	       246	setup.c	FUNCTION_9
0x4000bc5	          0x4889f3	                            mov rbx, rsi	       246	setup.c	FUNCTION_9
0x4000bc8	        0x4883ec08	                              sub rsp, 8	       246	setup.c	FUNCTION_9
0x4000bcc	      0xe800000000	                          call 0x4000bd1	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000bd1	            0x85c0	                           test eax, eax	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000bd3	            0x750b	                           jne 0x4000be0	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000bd5	        0x4883c408	                              add rsp, 8	       256	setup.c	FUNCTION_9
0x4000bd9	              0x5b	                                 pop rbx	       256	setup.c	FUNCTION_9
0x4000bda	              0x5d	                                 pop rbp	       256	setup.c	FUNCTION_9
0x4000bdb	              0xc3	                                     ret	       256	setup.c	FUNCTION_9
0x4000bdc	         0xf1f4000	                         nop dword [rax]	       256	setup.c	FUNCTION_9
0x4000be0	      0xe800000000	                          call 0x4000be5	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000be5	            0x85c0	                           test eax, eax	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000be7	            0x75ec	                           jne 0x4000bd5	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000be9	          0x803b2d	                    cmp byte [rbx], 0x2d	       249	setup.c	FUNCTION_9	IF_2
0x4000bec	            0x74e7	                            je 0x4000bd5	       249	setup.c	FUNCTION_9	IF_2
0x4000bee	          0x4889de	                            mov rsi, rbx	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000bf1	          0x4889ef	                            mov rdi, rbp	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000bf4	      0xe800000000	                          call 0x4000bf9	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000bf9	            0x85c0	                           test eax, eax	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000bfb	            0x74d8	                            je 0x4000bd5	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000bfd	      0xbf00000000	                              mov edi, 0	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000c02	      0xe869f6ffff	                       call sym._.part.4	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000c07	          0x4889de	                            mov rsi, rbx	       253	setup.c	FUNCTION_9	CALL_5
0x4000c0a	          0x4889c7	                            mov rdi, rax	       253	setup.c	FUNCTION_9	CALL_5
0x4000c0d	            0x31c0	                            xor eax, eax	       253	setup.c	FUNCTION_9	CALL_5
0x4000c0f	      0xe800000000	                          call 0x4000c14	       253	setup.c	FUNCTION_9	CALL_5
is_nonbare_repository_dir	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,6:IF,2:functions,0:DO,0	87
0x40012d0	              0x55	                                push rbp	       350	setup.c	FUNCTION_13
0x40012d1	              0x53	                                push rbx	       350	setup.c	FUNCTION_13
0x40012d2	        0x4883ec18	                           sub rsp, 0x18	       350	setup.c	FUNCTION_13
0x40012d6	        0x488b6f08	                mov rbp, qword [rdi + 8]	       353	setup.c	FUNCTION_13
0x40012da	    0x64488b042528	                mov rax, qword fs:[0x28]	       350	setup.c	FUNCTION_13
0x40012e3	      0x4889442408	                mov qword [rsp + 8], rax	       350	setup.c	FUNCTION_13
0x40012e8	            0x31c0	                            xor eax, eax	       350	setup.c	FUNCTION_13
0x40012ea	          0x4885ed	                           test rbp, rbp	       354	setup.c	FUNCTION_13	CALL_1
0x40012ed	     0xf8412010000	                            je 0x4001405	       354	setup.c	FUNCTION_13	CALL_1
0x40012f3	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       595	strbuf.h	FUNCTION_47	IF_1
0x40012f7	          0x4889fb	                            mov rbx, rdi	       595	strbuf.h	FUNCTION_47	IF_1
0x40012fa	      0x807c28ff2f	         cmp byte [rax + rbp - 1], 0x2f 	       595	strbuf.h	FUNCTION_47	IF_1
0x40012ff	            0x7436	                            je 0x4001337	       595	strbuf.h	FUNCTION_47	IF_1
0x4001301	          0x488b17	                    mov rdx, qword [rdi]	       595	strbuf.h	FUNCTION_47	IF_1
0x4001304	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_39
0x4001307	     0xf84c3000000	                            je 0x40013d0	       141	strbuf.h	FUNCTION_39
0x400130d	          0x4889e9	                            mov rcx, rbp	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4001310	          0x48f7d1	                                 not rcx	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4001313	          0x4801d1	                            add rcx, rdx	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4001316	     0xf84b4000000	                            je 0x40013d0	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x400131c	          0x4889ea	                            mov rdx, rbp	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x400131f	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_41
0x4001323	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_41
0x4001327	        0xc604102f	              mov byte [rax + rdx], 0x2f	       229	strbuf.h	FUNCTION_41
0x400132b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_41
0x400132f	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_41
0x4001333	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_41
0x4001337	      0xba04000000	                              mov edx, 4	       279	strbuf.h	FUNCTION_42	CALL_2
0x400133c	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_42	CALL_2
0x4001341	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_42	CALL_2
0x4001344	      0xe800000000	                          call 0x4001349	       279	strbuf.h	FUNCTION_42	CALL_2
0x4001349	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x400134d	      0x488d742404	                      lea rsi, [rsp + 4]	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x4001352	      0xe800000000	                          call 0x4001357	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x4001357	          0x4885c0	                           test rax, rax	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x400135a	      0xb901000000	                              mov ecx, 1	       358	setup.c	FUNCTION_13	IF_1
0x400135f	     0xf848b000000	                            je 0x40013f0	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x4001365	        0x8b442404	                mov eax, dword [rsp + 4]	       359	setup.c	FUNCTION_13	IF_2
0x4001369	          0x488b13	                    mov rdx, qword [rbx]	       162	strbuf.h	FUNCTION_40	IF_1
0x400136c	          0x83e803	                              sub eax, 3	       359	setup.c	FUNCTION_13	IF_2
0x400136f	          0x83f801	                              cmp eax, 1	       361	setup.c	FUNCTION_13	IF_2
0x4001372	      0xb801000000	                              mov eax, 1	       361	setup.c	FUNCTION_13	IF_2
0x4001377	           0xf46c8	                         cmovbe ecx, eax	       361	setup.c	FUNCTION_13	IF_2
0x400137a	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_40	IF_1
0x400137e	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_40	IF_1
0x4001382	          0x4839d5	                            cmp rbp, rdx	       162	strbuf.h	FUNCTION_40	IF_1
0x4001385	     0xf8798000000	                            ja 0x4001423	       162	strbuf.h	FUNCTION_40	IF_1
0x400138b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       165	strbuf.h	FUNCTION_40	IF_2
0x400138f	        0x48896b08	                mov qword [rbx + 8], rbp	       164	strbuf.h	FUNCTION_40
0x4001393	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x4001399	            0x7425	                            je 0x40013c0	       165	strbuf.h	FUNCTION_40	IF_2
0x400139b	        0xc6042800	                 mov byte [rax + rbp], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x400139f	      0x488b742408	                mov rsi, qword [rsp + 8]	       364	setup.c	FUNCTION_13
0x40013a4	    0x644833342528	                xor rsi, qword fs:[0x28]	       364	setup.c	FUNCTION_13
0x40013ad	            0x89c8	                            mov eax, ecx	       364	setup.c	FUNCTION_13
0x40013af	            0x756d	                           jne 0x400141e	       364	setup.c	FUNCTION_13
0x40013b1	        0x4883c418	                           add rsp, 0x18	       364	setup.c	FUNCTION_13
0x40013b5	              0x5b	                                 pop rbx	       364	setup.c	FUNCTION_13
0x40013b6	              0x5d	                                 pop rbp	       364	setup.c	FUNCTION_13
0x40013b7	              0xc3	                                     ret	       364	setup.c	FUNCTION_13
0x40013b8	     0xf1f84000000	                   nop dword [rax + rax]	       364	setup.c	FUNCTION_13
0x40013c0	    0x803d00000000	                cmp byte [0x040013c7], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x40013c7	            0x74d6	                            je 0x400139f	       168	strbuf.h	FUNCTION_40	CALL_2
0x40013c9	      0xe800000000	                          call 0x40013ce	       168	strbuf.h	FUNCTION_40	CALL_2
0x40013ce	            0x6690	                                     nop	       168	strbuf.h	FUNCTION_40	CALL_2
0x40013d0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_41	CALL_2
0x40013d5	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_41	CALL_2
0x40013d8	      0xe800000000	                          call 0x40013dd	       228	strbuf.h	FUNCTION_41	CALL_2
0x40013dd	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       228	strbuf.h	FUNCTION_41	CALL_2
0x40013e1	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_41	CALL_2
0x40013e5	      0xe935ffffff	                           jmp 0x400131f	       228	strbuf.h	FUNCTION_41	CALL_2
0x40013ea	    0x660f1f440000	                    nop word [rax + rax]	       228	strbuf.h	FUNCTION_41	CALL_2
0x40013f0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x40013f4	      0xe800000000	                          call 0x40013f9	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x40013f9	            0x31c9	                            xor ecx, ecx	       351	setup.c	FUNCTION_13
0x40013fb	            0x85c0	                           test eax, eax	       351	setup.c	FUNCTION_13
0x40013fd	           0xf95c1	                                setne cl	       351	setup.c	FUNCTION_13
0x4001400	      0xe960ffffff	                           jmp 0x4001365	       351	setup.c	FUNCTION_13
0x4001405	      0xb900000000	                              mov ecx, 0	       354	setup.c	FUNCTION_13	CALL_1
0x400140a	      0xba62010000	                          mov edx, 0x162	       354	setup.c	FUNCTION_13	CALL_1
0x400140f	      0xbe00000000	                              mov esi, 0	       354	setup.c	FUNCTION_13	CALL_1
0x4001414	      0xbf00000000	                              mov edi, 0	       354	setup.c	FUNCTION_13	CALL_1
0x4001419	      0xe800000000	                          call 0x400141e	       354	setup.c	FUNCTION_13	CALL_1
0x400141e	      0xe800000000	                          call 0x4001423	       364	setup.c	FUNCTION_13
0x4001423	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_40	CALL_1
0x4001428	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_40	CALL_1
0x400142a	      0xe800000000	                          call 0x400142f	       163	strbuf.h	FUNCTION_40	CALL_1
path_inside_repo	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,3:IF,1:functions,0:DO,0	25
0x4000480	              0x55	                                push rbp	       128	setup.c	FUNCTION_4
0x4000481	              0x53	                                push rbx	       128	setup.c	FUNCTION_4
0x4000482	          0x4889f5	                            mov rbp, rsi	       128	setup.c	FUNCTION_4
0x4000485	          0x4889fb	                            mov rbx, rdi	       128	setup.c	FUNCTION_4
0x4000488	        0x4883ec08	                              sub rsp, 8	       128	setup.c	FUNCTION_4
0x400048c	          0x4885ff	                           test rdi, rdi	       129	setup.c	FUNCTION_4	CALL_1
0x400048f	            0x742f	                            je 0x40004c0	       129	setup.c	FUNCTION_4	CALL_1
0x4000491	      0xe800000000	                          call 0x4000496	       129	setup.c	FUNCTION_4	CALL_1
0x4000496	            0x89c6	                            mov esi, eax	       129	setup.c	FUNCTION_4	CALL_1
0x4000498	            0x31d2	                            xor edx, edx	       130	setup.c	FUNCTION_4	CALL_2
0x400049a	          0x4889df	                            mov rdi, rbx	       130	setup.c	FUNCTION_4	CALL_2
0x400049d	          0x4889e9	                            mov rcx, rbp	       130	setup.c	FUNCTION_4	CALL_2
0x40004a0	      0xe800000000	                          call 0x40004a5	       130	setup.c	FUNCTION_4	CALL_2
0x40004a5	          0x4889c7	                            mov rdi, rax	       130	setup.c	FUNCTION_4	CALL_2
0x40004a8	            0x31c0	                            xor eax, eax	       135	setup.c	FUNCTION_4
0x40004aa	          0x4885ff	                           test rdi, rdi	       131	setup.c	FUNCTION_4	IF_1
0x40004ad	            0x740a	                            je 0x40004b9	       131	setup.c	FUNCTION_4	IF_1
0x40004af	      0xe800000000	                          call 0x40004b4	       132	setup.c	FUNCTION_4	IF_1	CALL_3
0x40004b4	      0xb801000000	                              mov eax, 1	       133	setup.c	FUNCTION_4	IF_1
0x40004b9	        0x4883c408	                              add rsp, 8	       136	setup.c	FUNCTION_4
0x40004bd	              0x5b	                                 pop rbx	       136	setup.c	FUNCTION_4
0x40004be	              0x5d	                                 pop rbp	       136	setup.c	FUNCTION_4
0x40004bf	              0xc3	                                     ret	       136	setup.c	FUNCTION_4
0x40004c0	            0x31f6	                            xor esi, esi	       129	setup.c	FUNCTION_4	CALL_1
0x40004c2	            0xebd4	                           jmp 0x4000498	       129	setup.c	FUNCTION_4	CALL_1
resolve_gitdir_gently	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,2:IF,1:functions,0:DO,0	20
0x4002640	              0x55	                                push rbp	      1198	setup.c	FUNCTION_35
0x4002641	              0x53	                                push rbx	      1198	setup.c	FUNCTION_35
0x4002642	          0x4889f5	                            mov rbp, rsi	      1198	setup.c	FUNCTION_35
0x4002645	          0x4889fb	                            mov rbx, rdi	      1198	setup.c	FUNCTION_35
0x4002648	        0x4883ec08	                              sub rsp, 8	      1198	setup.c	FUNCTION_35
0x400264c	      0xe800000000	                          call 0x4002651	      1199	setup.c	FUNCTION_35	IF_1	CALL_1
0x4002651	            0x85c0	                           test eax, eax	      1199	setup.c	FUNCTION_35	IF_1	CALL_1
0x4002653	            0x740b	                            je 0x4002660	      1199	setup.c	FUNCTION_35	IF_1	CALL_1
0x4002655	        0x4883c408	                              add rsp, 8	      1202	setup.c	FUNCTION_35
0x4002659	          0x4889d8	                            mov rax, rbx	      1202	setup.c	FUNCTION_35
0x400265c	              0x5b	                                 pop rbx	      1202	setup.c	FUNCTION_35
0x400265d	              0x5d	                                 pop rbp	      1202	setup.c	FUNCTION_35
0x400265e	              0xc3	                                     ret	      1202	setup.c	FUNCTION_35
0x400265f	              0x90	                                     nop	      1202	setup.c	FUNCTION_35
0x4002660	        0x4883c408	                              add rsp, 8	      1202	setup.c	FUNCTION_35
0x4002664	          0x4889ee	                            mov rsi, rbp	      1201	setup.c	FUNCTION_35	CALL_2
0x4002667	          0x4889df	                            mov rdi, rbx	      1201	setup.c	FUNCTION_35	CALL_2
0x400266a	              0x5b	                                 pop rbx	      1202	setup.c	FUNCTION_35
0x400266b	              0x5d	                                 pop rbp	      1202	setup.c	FUNCTION_35
0x400266c	      0xe90feaffff	             jmp sym.read_gitfile_gently	      1201	setup.c	FUNCTION_35	CALL_2
is_inside_work_tree	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,2:IF,1:functions,0:DO,0	12
0x4000b90	    0x8b0500000000	            mov eax, dword [0x04000b96] 	       375	setup.c	FUNCTION_15	IF_1
0x4000b96	            0x85c0	                           test eax, eax	       375	setup.c	FUNCTION_15	IF_1
0x4000b98	            0x7806	                            js 0x4000ba0	       375	setup.c	FUNCTION_15	IF_1
0x4000b9a	              0xc3	                                     ret	       378	setup.c	FUNCTION_15
0x4000b9b	       0xf1f440000	                   nop dword [rax + rax]	       378	setup.c	FUNCTION_15
0x4000ba0	        0x4883ec08	                              sub rsp, 8	       374	setup.c	FUNCTION_15
0x4000ba4	      0xe800000000	                          call 0x4000ba9	       376	setup.c	FUNCTION_15	CALL_2
0x4000ba9	          0x4889c7	                            mov rdi, rax	       376	setup.c	FUNCTION_15	CALL_2
0x4000bac	      0xe800000000	                          call 0x4000bb1	       376	setup.c	FUNCTION_15	CALL_2
0x4000bb1	    0x890500000000	            mov dword [0x04000bb7], eax 	       376	setup.c	FUNCTION_15	CALL_2
0x4000bb7	        0x4883c408	                              add rsp, 8	       378	setup.c	FUNCTION_15
0x4000bbb	              0xc3	                                     ret	       378	setup.c	FUNCTION_15
setup_git_directory_gently	ELSE,1:WHILE,0:FOR,0:SWITCH,1:CALL,27:IF,10:functions,0:DO,0	342
0x4001e60	            0x4156	                                push r14	      1030	setup.c	FUNCTION_31
0x4001e62	            0x4155	                                push r13	      1030	setup.c	FUNCTION_31
0x4001e64	            0x4154	                                push r12	      1030	setup.c	FUNCTION_31
0x4001e66	              0x55	                                push rbp	      1030	setup.c	FUNCTION_31
0x4001e67	              0x53	                                push rbx	      1030	setup.c	FUNCTION_31
0x4001e68	          0x4889fb	                            mov rbx, rdi	      1030	setup.c	FUNCTION_31
0x4001e6b	    0x4881ec900000	                           sub rsp, 0x90	      1030	setup.c	FUNCTION_31
0x4001e72	    0x64488b042528	                mov rax, qword fs:[0x28]	      1030	setup.c	FUNCTION_31
0x4001e7b	    0x488984248800	             mov qword [rsp + 0x88], rax	      1030	setup.c	FUNCTION_31
0x4001e83	            0x31c0	                            xor eax, eax	      1030	setup.c	FUNCTION_31
0x4001e85	    0x48c704240000	                      mov qword [rsp], 0	      1032	setup.c	FUNCTION_31
0x4001e8d	    0x48c744240800	                  mov qword [rsp + 8], 0	      1032	setup.c	FUNCTION_31
0x4001e96	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1032	setup.c	FUNCTION_31
0x4001e9f	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1032	setup.c	FUNCTION_31
0x4001ea8	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1032	setup.c	FUNCTION_31
0x4001eb1	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1032	setup.c	FUNCTION_31
0x4001eba	      0xe800000000	                          call 0x4001ebf	      1043	setup.c	FUNCTION_31	CALL_1
0x4001ebf	          0x4885db	                           test rbx, rbx	      1050	setup.c	FUNCTION_31	IF_1
0x4001ec2	            0x7406	                            je 0x4001eca	      1050	setup.c	FUNCTION_31	IF_1
0x4001ec4	    0xc70300000000	                      mov dword [rbx], 0	      1051	setup.c	FUNCTION_31	IF_1
0x4001eca	      0xbf00000000	                              mov edi, 0	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x4001ecf	      0xe800000000	                          call 0x4001ed4	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x4001ed4	            0x85c0	                           test eax, eax	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x4001ed6	     0xf856b040000	                           jne 0x4002347	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x4001edc	      0xbe00000000	                              mov esi, 0	      1055	setup.c	FUNCTION_31	CALL_5
0x4001ee1	          0x4889e7	                            mov rdi, rsp	      1055	setup.c	FUNCTION_31	CALL_5
0x4001ee4	      0xe800000000	                          call 0x4001ee9	      1055	setup.c	FUNCTION_31	CALL_5
0x4001ee9	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4001eee	      0xba01000000	                              mov edx, 1	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4001ef3	          0x4889e7	                            mov rdi, rsp	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4001ef6	      0xe835f5ffff	   call sym.setup_git_directory_gently_1	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4001efb	          0x83c002	                              add eax, 2	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4001efe	          0x83f805	                              cmp eax, 5	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4001f01	     0xf8729030000	                            ja 0x4002230	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4001f07	    0xff24c5000000	                       jmp qword [rax*8]	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4001f0e	            0x6690	                                     nop	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4001f10	      0x488b442408	                mov rax, qword [rsp + 8]	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4001f15	    0x483b05000000	            cmp rax, qword [0x04001f1c] 	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4001f1c	            0x7317	                           jae 0x4001f35	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4001f1e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4001f23	      0xe800000000	                          call 0x4001f28	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4001f28	            0x85c0	                           test eax, eax	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4001f2a	     0xf853f050000	                           jne 0x400246f	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4001f30	      0x488b442408	                mov rax, qword [rsp + 8]	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4001f35	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      1067	setup.c	FUNCTION_31	SWITCH_1	CALL_11
0x4001f3a	      0x4c8d642440	                   lea r12, [rsp + 0x40]	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4001f3f	          0x4889da	                            mov rdx, rbx	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4001f42	            0x89c5	                            mov ebp, eax	      1067	setup.c	FUNCTION_31	SWITCH_1	CALL_11
0x4001f44	          0x4c89e6	                            mov rsi, r12	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4001f47	          0x4c89ef	                            mov rdi, r13	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4001f4a	      0xe8c1eeffff	 call sym.check_repository_format_gently	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4001f4f	            0x85c0	                           test eax, eax	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4001f51	     0xf852c020000	                           jne 0x4002183	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4001f57	      0xbf00000000	                              mov edi, 0	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x4001f5c	      0xe800000000	                          call 0x4001f61	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x4001f61	          0x4885c0	                           test rax, rax	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x4001f64	     0xf84d6020000	                            je 0x4002240	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x4001f6a	          0x4863c5	                         movsxd rax, ebp	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x4001f6d	          0x4531f6	                          xor r14d, r14d	       737	setup.c	FUNCTION_24	IF_2
0x4001f70	    0x483b05000000	            cmp rax, qword [0x04001f77] 	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x4001f77	            0x741a	                            je 0x4001f93	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x4001f79	      0x41807d002f	                    cmp byte [r13], 0x2f	      1154	cache.h	FUNCTION_69
0x4001f7e	            0x7413	                            je 0x4001f93	      1154	cache.h	FUNCTION_69
0x4001f80	          0x4c89ef	                            mov rdi, r13	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x4001f83	      0xbe01000000	                              mov esi, 1	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x4001f88	      0xe800000000	                          call 0x4001f8d	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x4001f8d	          0x4989c5	                            mov r13, rax	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x4001f90	          0x4989c6	                            mov r14, rax	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x4001f93	    0x488b3d000000	            mov rdi, qword [0x04001f9a] 	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x4001f9a	      0xe800000000	                          call 0x4001f9f	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x4001f9f	            0x85c0	                           test eax, eax	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x4001fa1	     0xf85e5020000	                           jne 0x400228c	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x4001fa7	          0x4c89ef	                            mov rdi, r13	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x4001faa	          0x4889da	                            mov rdx, rbx	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x4001fad	          0x4c89e6	                            mov rsi, r12	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x4001fb0	      0xe8cbf8ffff	call sym.setup_explicit_git_dir.constprop.13	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x4001fb5	          0x4c89f7	                            mov rdi, r14	       745	setup.c	FUNCTION_24	IF_2	CALL_9
0x4001fb8	          0x4889c5	                            mov rbp, rax	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x4001fbb	      0xe800000000	                          call 0x4001fc0	       745	setup.c	FUNCTION_24	IF_2	CALL_9
0x4001fc0	          0x4885ed	                           test rbp, rbp	      1092	setup.c	FUNCTION_31	IF_6
0x4001fc3	     0xf84ba010000	                            je 0x4002183	      1092	setup.c	FUNCTION_31	IF_6
0x4001fc9	      0xba01000000	                              mov edx, 1	      1093	setup.c	FUNCTION_31	IF_6
0x4001fce	          0x4889ee	                            mov rsi, rbp	      1093	setup.c	FUNCTION_31	IF_6
0x4001fd1	      0xbf00000000	                              mov edi, 0	      1093	setup.c	FUNCTION_31	IF_6
0x4001fd6	      0xe800000000	                          call 0x4001fdb	      1093	setup.c	FUNCTION_31	IF_6
0x4001fdb	          0x4885db	                           test rbx, rbx	      1097	setup.c	FUNCTION_31
0x4001fde	    0x488b05000000	            mov rax, qword [0x04001fe5] 	      1097	setup.c	FUNCTION_31
0x4001fe5	     0xf84c5010000	                            je 0x40021b0	      1097	setup.c	FUNCTION_31
0x4001feb	            0x8b13	                    mov edx, dword [rbx]	      1097	setup.c	FUNCTION_31
0x4001fed	            0x85d2	                           test edx, edx	      1097	setup.c	FUNCTION_31
0x4001fef	     0xf84bb010000	                            je 0x40021b0	      1097	setup.c	FUNCTION_31
0x4001ff5	    0xc70000000000	                      mov dword [rax], 0	      1097	setup.c	FUNCTION_31
0x4001ffb	        0x48896808	                mov qword [rax + 8], rbp	      1098	setup.c	FUNCTION_31
0x4001fff	      0xbf00000000	                              mov edi, 0	      1111	setup.c	FUNCTION_31	IF_7	CALL_22
0x4002004	      0xe800000000	                          call 0x4002009	      1111	setup.c	FUNCTION_31	IF_7	CALL_22
0x4002009	          0x4885c0	                           test rax, rax	      1111	setup.c	FUNCTION_31	IF_7	CALL_22
0x400200c	            0x7422	                            je 0x4002030	      1111	setup.c	FUNCTION_31	IF_7	CALL_22
0x400200e	    0x488b05000000	            mov rax, qword [0x04002015] 	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x4002015	        0x48833800	                      cmp qword [rax], 0	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x4002019	     0xf84a8010000	                            je 0x40021c7	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x400201f	    0x488b05000000	            mov rax, qword [0x04002026] 	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x4002026	            0x8b00	                    mov eax, dword [rax]	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x4002028	            0x85c0	                           test eax, eax	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x400202a	     0xf85da010000	                           jne 0x400220a	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x4002030	          0x4889e7	                            mov rdi, rsp	      1122	setup.c	FUNCTION_31	CALL_26
0x4002033	      0xe800000000	                          call 0x4002038	      1122	setup.c	FUNCTION_31	CALL_26
0x4002038	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1123	setup.c	FUNCTION_31	CALL_27
0x400203d	      0xe800000000	                          call 0x4002042	      1123	setup.c	FUNCTION_31	CALL_27
0x4002042	          0x4889e8	                            mov rax, rbp	      1125	setup.c	FUNCTION_31
0x4002045	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1126	setup.c	FUNCTION_31
0x400204d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1126	setup.c	FUNCTION_31
0x4002056	     0xf85e6020000	                           jne 0x4002342	      1126	setup.c	FUNCTION_31
0x400205c	    0x4881c4900000	                           add rsp, 0x90	      1126	setup.c	FUNCTION_31
0x4002063	              0x5b	                                 pop rbx	      1126	setup.c	FUNCTION_31
0x4002064	              0x5d	                                 pop rbp	      1126	setup.c	FUNCTION_31
0x4002065	            0x415c	                                 pop r12	      1126	setup.c	FUNCTION_31
0x4002067	            0x415d	                                 pop r13	      1126	setup.c	FUNCTION_31
0x4002069	            0x415e	                                 pop r14	      1126	setup.c	FUNCTION_31
0x400206b	              0xc3	                                     ret	      1126	setup.c	FUNCTION_31
0x400206c	         0xf1f4000	                         nop dword [rax]	      1126	setup.c	FUNCTION_31
0x4002070	      0x488b742408	                mov rsi, qword [rsp + 8]	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x4002075	    0x483b35000000	            cmp rsi, qword [0x0400207c] 	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x400207c	            0x7317	                           jae 0x4002095	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x400207e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x4002083	      0xe800000000	                          call 0x4002088	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x4002088	            0x85c0	                           test eax, eax	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x400208a	     0xf85df030000	                           jne 0x400246f	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x4002090	      0x488b742408	                mov rsi, qword [rsp + 8]	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x4002095	      0x4c8d642440	                   lea r12, [rsp + 0x40]	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x400209a	          0x4863ee	                         movsxd rbp, esi	      1073	setup.c	FUNCTION_31	SWITCH_1	CALL_15
0x400209d	          0x4889da	                            mov rdx, rbx	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40020a0	      0xbf00000000	                              mov edi, 0	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40020a5	          0x4c89e6	                            mov rsi, r12	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40020a8	      0xe863edffff	 call sym.check_repository_format_gently	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40020ad	            0x85c0	                           test eax, eax	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40020af	     0xf85ce000000	                           jne 0x4002183	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40020b5	      0xba01000000	                              mov edx, 1	       784	setup.c	FUNCTION_25
0x40020ba	      0xbe00000000	                              mov esi, 0	       784	setup.c	FUNCTION_25
0x40020bf	      0xbf00000000	                              mov edi, 0	       784	setup.c	FUNCTION_25
0x40020c4	      0xe800000000	                          call 0x40020c9	       784	setup.c	FUNCTION_25
0x40020c9	      0xbf00000000	                              mov edi, 0	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x40020ce	      0xe800000000	                          call 0x40020d3	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x40020d3	          0x4885c0	                           test rax, rax	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x40020d6	     0xf84c4010000	                            je 0x40022a0	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x40020dc	          0x4863f5	                         movsxd rsi, ebp	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40020df	    0x483b35000000	            cmp rsi, qword [0x040020e6] 	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40020e6	      0xbd00000000	                              mov ebp, 0	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40020eb	            0x740f	                            je 0x40020fc	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40020ed	    0x488b3d000000	            mov rdi, qword [0x040020f4] 	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40020f4	      0xe800000000	                          call 0x40020f9	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40020f9	          0x4889c5	                            mov rbp, rax	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40020fc	    0x488b3d000000	            mov rdi, qword [0x04002103] 	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x4002103	    0x48892d000000	            mov qword [0x0400210a], rbp 	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x400210a	      0xe800000000	                          call 0x400210f	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x400210f	            0x85c0	                           test eax, eax	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x4002111	     0xf8575010000	                           jne 0x400228c	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x4002117	          0x4889ef	                            mov rdi, rbp	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x400211a	          0x4889da	                            mov rdx, rbx	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x400211d	          0x4c89e6	                            mov rsi, r12	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x4002120	      0xe85bf7ffff	call sym.setup_explicit_git_dir.constprop.13	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x4002125	          0x4889c5	                            mov rbp, rax	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x4002128	      0xe993feffff	                           jmp 0x4001fc0	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x400212d	           0xf1f00	                         nop dword [rax]	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x4002130	          0x4885db	                           test rbx, rbx	      1079	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x4002133	     0xf8404030000	                            je 0x400243d	      1079	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x4002139	      0xbf00000000	                              mov edi, 0	      1081	setup.c	FUNCTION_31	SWITCH_1	IF_5	CALL_17
0x400213e	    0xc70301000000	                      mov dword [rbx], 1	      1080	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x4002144	      0xe800000000	                          call 0x4002149	      1081	setup.c	FUNCTION_31	SWITCH_1	IF_5	CALL_17
0x4002149	          0x4889e7	                            mov rdi, rsp	      1082	setup.c	FUNCTION_31	SWITCH_1	IF_5	CALL_18
0x400214c	      0xe800000000	                          call 0x4002151	      1082	setup.c	FUNCTION_31	SWITCH_1	IF_5	CALL_18
0x4002151	            0x31c0	                            xor eax, eax	      1083	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x4002153	      0xe9edfeffff	                           jmp 0x4002045	      1083	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x4002158	     0xf1f84000000	                   nop dword [rax + rax]	      1083	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x4002160	          0x4885db	                           test rbx, rbx	       812	setup.c	FUNCTION_26	IF_1
0x4002163	    0x488b3d000000	            mov rdi, qword [0x0400216a] 	      1076	setup.c	FUNCTION_31	SWITCH_1	CALL_16
0x400216a	     0xf84b4020000	                            je 0x4002424	       812	setup.c	FUNCTION_26	IF_1
0x4002170	      0xe800000000	                          call 0x4002175	       814	setup.c	FUNCTION_26	IF_2	CALL_3
0x4002175	            0x85c0	                           test eax, eax	       814	setup.c	FUNCTION_26	IF_2	CALL_3
0x4002177	     0xf850f010000	                           jne 0x400228c	       814	setup.c	FUNCTION_26	IF_2	CALL_3
0x400217d	    0xc70301000000	                      mov dword [rbx], 1	       816	setup.c	FUNCTION_26
0x4002183	      0xba01000000	                              mov edx, 1	      1095	setup.c	FUNCTION_31	ELSE_1
0x4002188	      0xbe00000000	                              mov esi, 0	      1095	setup.c	FUNCTION_31	ELSE_1
0x400218d	      0xbf00000000	                              mov edi, 0	      1095	setup.c	FUNCTION_31	ELSE_1
0x4002192	      0xe800000000	                          call 0x4002197	      1095	setup.c	FUNCTION_31	ELSE_1
0x4002197	            0x31ed	                            xor ebp, ebp	      1095	setup.c	FUNCTION_31	ELSE_1
0x4002199	          0x4885db	                           test rbx, rbx	      1097	setup.c	FUNCTION_31
0x400219c	    0x488b05000000	            mov rax, qword [0x040021a3] 	      1097	setup.c	FUNCTION_31
0x40021a3	     0xf8542feffff	                           jne 0x4001feb	      1097	setup.c	FUNCTION_31
0x40021a9	     0xf1f80000000	                         nop dword [rax]	      1097	setup.c	FUNCTION_31
0x40021b0	    0x488b3d000000	            mov rdi, qword [0x040021b7] 	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x40021b7	    0xc70001000000	                      mov dword [rax], 1	      1097	setup.c	FUNCTION_31
0x40021bd	        0x48896808	                mov qword [rax + 8], rbp	      1098	setup.c	FUNCTION_31
0x40021c1	        0x48833f00	                      cmp qword [rdi], 0	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x40021c5	            0x7551	                           jne 0x4002218	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x40021c7	      0xbf00000000	                              mov edi, 0	      1113	setup.c	FUNCTION_31	IF_7	IF_8	CALL_23
0x40021cc	      0xe800000000	                          call 0x40021d1	      1113	setup.c	FUNCTION_31	IF_7	IF_8	CALL_23
0x40021d1	      0xba00000000	                              mov edx, 0	      1115	setup.c	FUNCTION_31	IF_7	IF_8	IF_9
0x40021d6	          0x4885c0	                           test rax, rax	      1115	setup.c	FUNCTION_31	IF_7	IF_8	IF_9
0x40021d9	        0x480f44c2	                          cmove rax, rdx	      1115	setup.c	FUNCTION_31	IF_7	IF_8	IF_9
0x40021dd	          0x4889c7	                            mov rdi, rax	      1116	setup.c	FUNCTION_31	IF_7	IF_8	CALL_24
0x40021e0	      0xe800000000	                          call 0x40021e5	      1116	setup.c	FUNCTION_31	IF_7	IF_8	CALL_24
0x40021e5	      0xe935feffff	                           jmp 0x400201f	      1116	setup.c	FUNCTION_31	IF_7	IF_8	CALL_24
0x40021ea	    0x660f1f440000	                    nop word [rax + rax]	      1116	setup.c	FUNCTION_31	IF_7	IF_8	CALL_24
0x40021f0	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x40021f5	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x40021fa	          0x4889da	                            mov rdx, rbx	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x40021fd	      0xe87ef6ffff	call sym.setup_explicit_git_dir.constprop.13	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x4002202	          0x4889c5	                            mov rbp, rax	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x4002205	      0xe9b6fdffff	                           jmp 0x4001fc0	      1063	setup.c	FUNCTION_31	SWITCH_1
0x400220a	    0x488b3d000000	            mov rdi, qword [0x04002211] 	      1063	setup.c	FUNCTION_31	SWITCH_1
0x4002211	     0xf1f80000000	                         nop dword [rax]	      1063	setup.c	FUNCTION_31	SWITCH_1
0x4002218	        0x8b742454	            mov esi, dword [rsp + 0x54] 	      1119	setup.c	FUNCTION_31	IF_7	CALL_25
0x400221c	      0xe800000000	                          call 0x4002221	      1119	setup.c	FUNCTION_31	IF_7	CALL_25
0x4002221	      0xe90afeffff	                           jmp 0x4002030	      1119	setup.c	FUNCTION_31	IF_7	CALL_25
0x4002226	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1119	setup.c	FUNCTION_31	IF_7	CALL_25
0x4002230	      0xbf00000000	                              mov edi, 0	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x4002235	            0x31c0	                            xor eax, eax	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x4002237	      0xe800000000	                          call 0x400223c	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x400223c	         0xf1f4000	                         nop dword [rax]	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x4002240	    0x48833d000000	               cmp qword [0x04002248], 0	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x4002248	     0xf851cfdffff	                           jne 0x4001f6a	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x400224e	    0x8b0d00000000	            mov ecx, dword [0x04002254] 	       750	setup.c	FUNCTION_24	IF_5
0x4002254	            0x85c9	                           test ecx, ecx	       750	setup.c	FUNCTION_24	IF_5
0x4002256	     0xf8eff000000	                           jle 0x400235b	       750	setup.c	FUNCTION_24	IF_5
0x400225c	          0x4863c5	                         movsxd rax, ebp	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x400225f	    0x483b05000000	            cmp rax, qword [0x04002266] 	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x4002266	          0x4c89ef	                            mov rdi, r13	      1067	setup.c	FUNCTION_31	SWITCH_1	CALL_11
0x4002269	            0x7408	                            je 0x4002273	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x400226b	      0xe800000000	                          call 0x4002270	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x4002270	          0x4889c7	                            mov rdi, rax	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x4002273	      0xe800000000	                          call 0x4002278	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x4002278	    0x488b3d000000	            mov rdi, qword [0x0400227f] 	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x400227f	      0xe800000000	                          call 0x4002284	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x4002284	            0x85c0	                           test eax, eax	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x4002286	     0xf84f7feffff	                            je 0x4002183	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x400228c	      0xbf00000000	                              mov edi, 0	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x4002291	      0xe8dadfffff	                       call sym._.part.4	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x4002296	          0x4889c7	                            mov rdi, rax	       815	setup.c	FUNCTION_26	CALL_5
0x4002299	            0x31c0	                            xor eax, eax	       815	setup.c	FUNCTION_26	CALL_5
0x400229b	      0xe800000000	                          call 0x40022a0	       815	setup.c	FUNCTION_26	CALL_5
0x40022a0	    0x48833d000000	               cmp qword [0x040022a8], 0	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x40022a8	     0xf852efeffff	                           jne 0x40020dc	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x40022ae	          0x4863c5	                         movsxd rax, ebp	       798	setup.c	FUNCTION_25	IF_4
0x40022b1	    0x483b05000000	            cmp rax, qword [0x040022b8] 	       798	setup.c	FUNCTION_25	IF_4
0x40022b8	    0xc70500000000	               mov dword [0x040022c2], 1	       796	setup.c	FUNCTION_25
0x40022c2	    0xc70500000000	               mov dword [0x040022cc], 0	       797	setup.c	FUNCTION_25
0x40022cc	     0xf8487010000	                            je 0x4002459	       798	setup.c	FUNCTION_25	IF_4
0x40022d2	    0x488b3d000000	            mov rdi, qword [0x040022d9] 	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40022d9	      0xe800000000	                          call 0x40022de	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40022de	            0x85c0	                           test eax, eax	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40022e0	            0x75aa	                           jne 0x400228c	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40022e2	    0x488b3d000000	            mov rdi, qword [0x040022e9] 	       801	setup.c	FUNCTION_25	IF_4
0x40022e9	            0x31c0	                            xor eax, eax	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x40022eb	    0x488b15000000	            mov rdx, qword [0x040022f2] 	       162	strbuf.h	FUNCTION_40	IF_1
0x40022f2	          0x803f2f	                    cmp byte [rdi], 0x2f	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x40022f5	           0xf94c0	                                 sete al	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x40022f8	            0x39e8	                            cmp eax, ebp	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x40022fa	        0x480f4cc5	                          cmovl rax, rbp	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x40022fe	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_40	IF_1
0x4002302	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_40	IF_1
0x4002306	          0x4839d0	                            cmp rax, rdx	       162	strbuf.h	FUNCTION_40	IF_1
0x4002309	     0xf8754010000	                            ja 0x4002463	       162	strbuf.h	FUNCTION_40	IF_1
0x400230f	    0x4881ff000000	                              cmp rdi, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x4002316	    0x488905000000	            mov qword [0x0400231d], rax 	       164	strbuf.h	FUNCTION_40
0x400231d	            0x7415	                            je 0x4002334	       165	strbuf.h	FUNCTION_40	IF_2
0x400231f	        0xc6040700	                 mov byte [rdi + rax], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x4002323	    0x488b3d000000	            mov rdi, qword [0x0400232a] 	       166	strbuf.h	FUNCTION_40	IF_2
0x400232a	      0xe800000000	                          call 0x400232f	       806	setup.c	FUNCTION_25	CALL_13
0x400232f	      0xe94ffeffff	                           jmp 0x4002183	       806	setup.c	FUNCTION_25	CALL_13
0x4002334	    0x803d00000000	                cmp byte [0x0400233b], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x400233b	            0x74ed	                            je 0x400232a	       168	strbuf.h	FUNCTION_40	CALL_2
0x400233d	      0xe800000000	                          call 0x4002342	       168	strbuf.h	FUNCTION_40	CALL_2
0x4002342	      0xe800000000	                          call 0x4002347	      1126	setup.c	FUNCTION_31
0x4002347	      0xbf00000000	                              mov edi, 0	      1126	setup.c	FUNCTION_31
0x400234c	      0xe81fdfffff	                       call sym._.part.4	      1126	setup.c	FUNCTION_31
0x4002351	          0x4889c7	                            mov rdi, rax	      1054	setup.c	FUNCTION_31	CALL_4
0x4002354	            0x31c0	                            xor eax, eax	      1054	setup.c	FUNCTION_31	CALL_4
0x4002356	      0xe800000000	                          call 0x400235b	      1054	setup.c	FUNCTION_31	CALL_4
0x400235b	      0xbf00000000	                              mov edi, 0	       758	setup.c	FUNCTION_24	CALL_15
0x4002360	      0xe800000000	                          call 0x4002365	       758	setup.c	FUNCTION_24	CALL_15
0x4002365	      0xbe00000000	                              mov esi, 0	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x400236a	          0x4c89ef	                            mov rdi, r13	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x400236d	      0xe800000000	                          call 0x4002372	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x4002372	            0x85c0	                           test eax, eax	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x4002374	            0x7408	                            je 0x400237e	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x4002376	          0x4c89ef	                            mov rdi, r13	       760	setup.c	FUNCTION_24	CALL_17
0x4002379	      0xe800000000	                          call 0x400237e	       760	setup.c	FUNCTION_24	CALL_17
0x400237e	    0x488b05000000	            mov rax, qword [0x04002385] 	       763	setup.c	FUNCTION_24	IF_8
0x4002385	          0x4863d5	                         movsxd rdx, ebp	       763	setup.c	FUNCTION_24	IF_8
0x4002388	    0xc70500000000	               mov dword [0x04002392], 0	       761	setup.c	FUNCTION_24
0x4002392	    0xc70500000000	               mov dword [0x0400239c], 1	       762	setup.c	FUNCTION_24
0x400239c	          0x4839c2	                            cmp rdx, rax	       763	setup.c	FUNCTION_24	IF_8
0x400239f	     0xf84defdffff	                            je 0x4002183	       763	setup.c	FUNCTION_24	IF_8
0x40023a5	    0x488b3d000000	            mov rdi, qword [0x040023ac] 	       763	setup.c	FUNCTION_24	IF_8
0x40023ac	          0x4531e4	                          xor r12d, r12d	       364	git-compat-util.h	FUNCTION_82
0x40023af	          0x8d5501	                      lea edx, [rbp + 1]	       768	setup.c	FUNCTION_24	IF_9
0x40023b2	          0x803f2f	                    cmp byte [rdi], 0x2f	       364	git-compat-util.h	FUNCTION_82
0x40023b5	        0x410f94c4	                               sete r12b	       364	git-compat-util.h	FUNCTION_82
0x40023b9	          0x4439e5	                           cmp ebp, r12d	       768	setup.c	FUNCTION_24	IF_9
0x40023bc	        0x440f45e2	                        cmovne r12d, edx	       768	setup.c	FUNCTION_24	IF_9
0x40023c0	    0x488b15000000	            mov rdx, qword [0x040023c7] 	       768	setup.c	FUNCTION_24	IF_9
0x40023c7	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_39
0x40023ca	            0x754d	                           jne 0x4002419	       141	strbuf.h	FUNCTION_39
0x40023cc	      0xbf00000000	                              mov edi, 0	       228	strbuf.h	FUNCTION_41	CALL_2
0x40023d1	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_41	CALL_2
0x40023d6	      0xe800000000	                          call 0x40023db	       228	strbuf.h	FUNCTION_41	CALL_2
0x40023db	    0x488b3d000000	            mov rdi, qword [0x040023e2] 	       228	strbuf.h	FUNCTION_41	CALL_2
0x40023e2	    0x488b05000000	            mov rax, qword [0x040023e9] 	       228	strbuf.h	FUNCTION_41	CALL_2
0x40023e9	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_41
0x40023ed	          0x4963ec	                        movsxd rbp, r12d	       771	setup.c	FUNCTION_24
0x40023f0	    0x488915000000	            mov qword [0x040023f7], rdx 	       229	strbuf.h	FUNCTION_41
0x40023f7	        0xc604072f	              mov byte [rdi + rax], 0x2f	       229	strbuf.h	FUNCTION_41
0x40023fb	    0x488b05000000	            mov rax, qword [0x04002402] 	       230	strbuf.h	FUNCTION_41
0x4002402	    0x488b15000000	            mov rdx, qword [0x04002409] 	       230	strbuf.h	FUNCTION_41
0x4002409	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_41
0x400240d	    0x48032d000000	             add rbp, qword [0x04002414]	       771	setup.c	FUNCTION_24
0x4002414	      0xe9a7fbffff	                           jmp 0x4001fc0	       771	setup.c	FUNCTION_24
0x4002419	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x400241d	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4002420	            0x75c7	                           jne 0x40023e9	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4002422	            0xeba8	                           jmp 0x40023cc	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4002424	      0xbf00000000	                              mov edi, 0	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x4002429	      0xe842deffff	                       call sym._.part.4	       227	strbuf.h	FUNCTION_41	IF_1	CALL_1
0x400242e	      0xbe00000000	                              mov esi, 0	       813	setup.c	FUNCTION_26	CALL_2
0x4002433	          0x4889c7	                            mov rdi, rax	       813	setup.c	FUNCTION_26	CALL_2
0x4002436	            0x31c0	                            xor eax, eax	       813	setup.c	FUNCTION_26	CALL_2
0x4002438	      0xe800000000	                          call 0x400243d	       813	setup.c	FUNCTION_26	CALL_2
0x400243d	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4002442	      0xbf00000000	                              mov edi, 0	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4002447	      0xe824deffff	                       call sym._.part.4	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x400244c	          0x4889de	                            mov rsi, rbx	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x400244f	          0x4889c7	                            mov rdi, rax	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4002452	            0x31c0	                            xor eax, eax	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4002454	      0xe800000000	                          call 0x4002459	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4002459	      0xbf00000000	                              mov edi, 0	       806	setup.c	FUNCTION_25	CALL_13
0x400245e	      0xe9c7feffff	                           jmp 0x400232a	       806	setup.c	FUNCTION_25	CALL_13
0x4002463	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_40	CALL_1
0x4002468	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_40	CALL_1
0x400246a	      0xe800000000	                          call 0x400246f	       163	strbuf.h	FUNCTION_40	CALL_1
0x400246f	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
0x4002474	      0xbf00000000	                              mov edi, 0	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
0x4002479	            0xebcc	                           jmp 0x4002447	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
verify_filename	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,5:IF,2:functions,0:DO,0	47
0x4000630	            0x4154	                                push r12	       232	setup.c	FUNCTION_8
0x4000632	              0x55	                                push rbp	       232	setup.c	FUNCTION_8
0x4000633	              0x53	                                push rbx	       232	setup.c	FUNCTION_8
0x4000634	          0x803e2d	                    cmp byte [rsi], 0x2d	       233	setup.c	FUNCTION_8	IF_1
0x4000637	          0x4889f3	                            mov rbx, rsi	       232	setup.c	FUNCTION_8
0x400063a	            0x7475	                            je 0x40006b1	       233	setup.c	FUNCTION_8	IF_1
0x400063c	          0x4889fd	                            mov rbp, rdi	       233	setup.c	FUNCTION_8	IF_1
0x400063f	          0x4889f7	                            mov rdi, rsi	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x4000642	          0x4189d4	                           mov r12d, edx	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x4000645	      0xe800000000	                          call 0x400064a	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x400064a	            0x85c0	                           test eax, eax	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x400064c	            0x750a	                           jne 0x4000658	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x400064e	              0x5b	                                 pop rbx	       238	setup.c	FUNCTION_8
0x400064f	              0x5d	                                 pop rbp	       238	setup.c	FUNCTION_8
0x4000650	            0x415c	                                 pop r12	       238	setup.c	FUNCTION_8
0x4000652	              0xc3	                                     ret	       238	setup.c	FUNCTION_8
0x4000653	       0xf1f440000	                   nop dword [rax + rax]	       238	setup.c	FUNCTION_8
0x4000658	      0xbe00000000	                              mov esi, 0	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x400065d	          0x4889df	                            mov rdi, rbx	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x4000660	      0xe800000000	                          call 0x4000665	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x4000665	            0x85c0	                           test eax, eax	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x4000667	            0x75e5	                           jne 0x400064e	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x4000669	          0x4889de	                            mov rsi, rbx	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x400066c	          0x4889ef	                            mov rdi, rbp	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x400066f	      0xe800000000	                          call 0x4000674	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x4000674	            0x85c0	                           test eax, eax	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x4000676	            0x75d6	                           jne 0x400064e	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x4000678	          0x4585e4	                         test r12d, r12d	       171	setup.c	FUNCTION_6	IF_1
0x400067b	            0x743b	                            je 0x40006b8	       171	setup.c	FUNCTION_6	IF_1
0x400067d	          0x803b3a	                    cmp byte [rbx], 0x3a	       181	setup.c	FUNCTION_6	IF_2
0x4000680	            0x750d	                           jne 0x400068f	       181	setup.c	FUNCTION_6	IF_2
0x4000682	         0xfb64301	               movzx eax, byte [rbx + 1]	       181	setup.c	FUNCTION_6	IF_2
0x4000686	    0xf68000000000	                      test byte [rax], 6	       181	setup.c	FUNCTION_6	IF_2
0x400068d	            0x740b	                            je 0x400069a	       181	setup.c	FUNCTION_6	IF_2
0x400068f	          0x4889ee	                            mov rsi, rbp	       182	setup.c	FUNCTION_6	CALL_3
0x4000692	          0x4889df	                            mov rdi, rbx	       182	setup.c	FUNCTION_6	CALL_3
0x4000695	      0xe800000000	                          call 0x400069a	       182	setup.c	FUNCTION_6	CALL_3
0x400069a	      0xbf00000000	                              mov edi, 0	       182	setup.c	FUNCTION_6	CALL_3
0x400069f	      0xe8ccfbffff	                       call sym._.part.4	       182	setup.c	FUNCTION_6	CALL_3
0x40006a4	          0x4889de	                            mov rsi, rbx	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40006a7	          0x4889c7	                            mov rdi, rax	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40006aa	            0x31c0	                            xor eax, eax	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40006ac	      0xe800000000	                          call 0x40006b1	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40006b1	      0xbf00000000	                              mov edi, 0	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40006b6	            0xebe7	                           jmp 0x400069f	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40006b8	      0xbf00000000	                              mov edi, 0	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40006bd	            0xebe0	                           jmp 0x400069f	       172	setup.c	FUNCTION_6	IF_1	CALL_2
get_common_dir	ELSE,1:WHILE,0:FOR,0:SWITCH,0:CALL,3:IF,1:functions,0:DO,0	28
0x40008b0	            0x4154	                                push r12	       259	setup.c	FUNCTION_10
0x40008b2	              0x55	                                push rbp	       259	setup.c	FUNCTION_10
0x40008b3	          0x4889fd	                            mov rbp, rdi	       259	setup.c	FUNCTION_10
0x40008b6	              0x53	                                push rbx	       259	setup.c	FUNCTION_10
0x40008b7	      0xbf00000000	                              mov edi, 0	       260	setup.c	FUNCTION_10	CALL_1
0x40008bc	          0x4989f4	                            mov r12, rsi	       259	setup.c	FUNCTION_10
0x40008bf	      0xe800000000	                          call 0x40008c4	       260	setup.c	FUNCTION_10	CALL_1
0x40008c4	          0x4885c0	                           test rax, rax	       261	setup.c	FUNCTION_10	IF_1
0x40008c7	            0x7427	                            je 0x40008f0	       261	setup.c	FUNCTION_10	IF_1
0x40008c9	          0x4889c3	                            mov rbx, rax	       261	setup.c	FUNCTION_10	IF_1
0x40008cc	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_42	CALL_2
0x40008cf	      0xe800000000	                          call 0x40008d4	       279	strbuf.h	FUNCTION_42	CALL_2
0x40008d4	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_42	CALL_2
0x40008d7	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_42	CALL_2
0x40008da	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_42	CALL_2
0x40008dd	      0xe800000000	                          call 0x40008e2	       279	strbuf.h	FUNCTION_42	CALL_2
0x40008e2	              0x5b	                                 pop rbx	       267	setup.c	FUNCTION_10
0x40008e3	      0xb801000000	                              mov eax, 1	       267	setup.c	FUNCTION_10
0x40008e8	              0x5d	                                 pop rbp	       267	setup.c	FUNCTION_10
0x40008e9	            0x415c	                                 pop r12	       267	setup.c	FUNCTION_10
0x40008eb	              0xc3	                                     ret	       267	setup.c	FUNCTION_10
0x40008ec	         0xf1f4000	                         nop dword [rax]	       267	setup.c	FUNCTION_10
0x40008f0	              0x5b	                                 pop rbx	       267	setup.c	FUNCTION_10
0x40008f1	          0x4c89e6	                            mov rsi, r12	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x40008f4	          0x4889ef	                            mov rdi, rbp	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x40008f7	              0x5d	                                 pop rbp	       267	setup.c	FUNCTION_10
0x40008f8	            0x415c	                                 pop r12	       267	setup.c	FUNCTION_10
0x40008fa	      0xe9c1fdffff	            jmp sym.get_common_dir_noenv	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
prefix_path	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,3:IF,1:functions,0:DO,0	15
0x4000450	              0x53	                                push rbx	       120	setup.c	FUNCTION_3
0x4000451	          0x4889d1	                            mov rcx, rdx	       121	setup.c	FUNCTION_3	CALL_1
0x4000454	          0x4889d3	                            mov rbx, rdx	       120	setup.c	FUNCTION_3
0x4000457	            0x31d2	                            xor edx, edx	       121	setup.c	FUNCTION_3	CALL_1
0x4000459	      0xe800000000	                          call 0x400045e	       121	setup.c	FUNCTION_3	CALL_1
0x400045e	          0x4885c0	                           test rax, rax	       122	setup.c	FUNCTION_3	IF_1
0x4000461	            0x7402	                            je 0x4000465	       122	setup.c	FUNCTION_3	IF_1
0x4000463	              0x5b	                                 pop rbx	       125	setup.c	FUNCTION_3
0x4000464	              0xc3	                                     ret	       125	setup.c	FUNCTION_3
0x4000465	      0xbf00000000	                              mov edi, 0	       125	setup.c	FUNCTION_3
0x400046a	      0xe801feffff	                       call sym._.part.4	       125	setup.c	FUNCTION_3
0x400046f	          0x4889de	                            mov rsi, rbx	       123	setup.c	FUNCTION_3	CALL_3
0x4000472	          0x4889c7	                            mov rdi, rax	       123	setup.c	FUNCTION_3	CALL_3
0x4000475	            0x31c0	                            xor eax, eax	       123	setup.c	FUNCTION_3	CALL_3
0x4000477	      0xe800000000	                          call 0x400047c	       123	setup.c	FUNCTION_3	CALL_3
canonicalize_ceiling_entry	ELSE,3:WHILE,0:FOR,0:SWITCH,0:CALL,3:IF,4:functions,0:DO,0	43
0x4000200	            0x4154	                                push r12	       841	setup.c	FUNCTION_28
0x4000202	              0x55	                                push rbp	       841	setup.c	FUNCTION_28
0x4000203	              0x53	                                push rbx	       841	setup.c	FUNCTION_28
0x4000204	          0x488b17	                    mov rdx, qword [rdi]	       843	setup.c	FUNCTION_28
0x4000207	           0xfb602	                   movzx eax, byte [rdx]	       845	setup.c	FUNCTION_28	IF_1
0x400020a	            0x84c0	                             test al, al	       845	setup.c	FUNCTION_28	IF_1
0x400020c	            0x744a	                            je 0x4000258	       845	setup.c	FUNCTION_28	IF_1
0x400020e	            0x3c2f	                            cmp al, 0x2f	      1154	cache.h	FUNCTION_69
0x4000210	            0x740e	                            je 0x4000220	      1154	cache.h	FUNCTION_69
0x4000212	            0x31ed	                            xor ebp, ebp	       849	setup.c	FUNCTION_28	ELSE_1	IF_2
0x4000214	            0x89e8	                            mov eax, ebp	       862	setup.c	FUNCTION_28
0x4000216	              0x5b	                                 pop rbx	       862	setup.c	FUNCTION_28
0x4000217	              0x5d	                                 pop rbp	       862	setup.c	FUNCTION_28
0x4000218	            0x415c	                                 pop r12	       862	setup.c	FUNCTION_28
0x400021a	              0xc3	                                     ret	       862	setup.c	FUNCTION_28
0x400021b	       0xf1f440000	                   nop dword [rax + rax]	       862	setup.c	FUNCTION_28
0x4000220	            0x8b06	                    mov eax, dword [rsi]	       850	setup.c	FUNCTION_28	ELSE_2	IF_3
0x4000222	      0xbd01000000	                              mov ebp, 1	       852	setup.c	FUNCTION_28	ELSE_2	IF_3
0x4000227	            0x85c0	                           test eax, eax	       850	setup.c	FUNCTION_28	ELSE_2	IF_3
0x4000229	            0x75e9	                           jne 0x4000214	       850	setup.c	FUNCTION_28	ELSE_2	IF_3
0x400022b	            0x31f6	                            xor esi, esi	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x400022d	          0x4889fb	                            mov rbx, rdi	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x4000230	          0x4889d7	                            mov rdi, rdx	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x4000233	      0xe800000000	                          call 0x4000238	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x4000238	          0x4885c0	                           test rax, rax	       855	setup.c	FUNCTION_28	ELSE_3	IF_4
0x400023b	          0x4989c4	                            mov r12, rax	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x400023e	            0x74d2	                            je 0x4000212	       855	setup.c	FUNCTION_28	ELSE_3	IF_4
0x4000240	          0x488b3b	                    mov rdi, qword [rbx]	       858	setup.c	FUNCTION_28	ELSE_3	CALL_3
0x4000243	      0xe800000000	                          call 0x4000248	       858	setup.c	FUNCTION_28	ELSE_3	CALL_3
0x4000248	          0x4c8923	                    mov qword [rbx], r12	       859	setup.c	FUNCTION_28	ELSE_3
0x400024b	            0x89e8	                            mov eax, ebp	       862	setup.c	FUNCTION_28
0x400024d	              0x5b	                                 pop rbx	       862	setup.c	FUNCTION_28
0x400024e	              0x5d	                                 pop rbp	       862	setup.c	FUNCTION_28
0x400024f	            0x415c	                                 pop r12	       862	setup.c	FUNCTION_28
0x4000251	              0xc3	                                     ret	       862	setup.c	FUNCTION_28
0x4000252	    0x660f1f440000	                    nop word [rax + rax]	       862	setup.c	FUNCTION_28
0x4000258	            0x31ed	                            xor ebp, ebp	       847	setup.c	FUNCTION_28	IF_1
0x400025a	    0xc70601000000	                      mov dword [rsi], 1	       846	setup.c	FUNCTION_28	IF_1
0x4000260	            0x89e8	                            mov eax, ebp	       862	setup.c	FUNCTION_28
0x4000262	              0x5b	                                 pop rbx	       862	setup.c	FUNCTION_28
0x4000263	              0x5d	                                 pop rbp	       862	setup.c	FUNCTION_28
0x4000264	            0x415c	                                 pop r12	       862	setup.c	FUNCTION_28
0x4000266	              0xc3	                                     ret	       862	setup.c	FUNCTION_28
is_inside_git_dir	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,2:IF,1:functions,0:DO,0	12
0x4000b60	    0x8b0500000000	            mov eax, dword [0x04000b66] 	       368	setup.c	FUNCTION_14	IF_1
0x4000b66	            0x85c0	                           test eax, eax	       368	setup.c	FUNCTION_14	IF_1
0x4000b68	            0x7806	                            js 0x4000b70	       368	setup.c	FUNCTION_14	IF_1
0x4000b6a	              0xc3	                                     ret	       371	setup.c	FUNCTION_14
0x4000b6b	       0xf1f440000	                   nop dword [rax + rax]	       371	setup.c	FUNCTION_14
0x4000b70	        0x4883ec08	                              sub rsp, 8	       367	setup.c	FUNCTION_14
0x4000b74	      0xe800000000	                          call 0x4000b79	       369	setup.c	FUNCTION_14	CALL_2
0x4000b79	          0x4889c7	                            mov rdi, rax	       369	setup.c	FUNCTION_14	CALL_2
0x4000b7c	      0xe800000000	                          call 0x4000b81	       369	setup.c	FUNCTION_14	CALL_2
0x4000b81	    0x890500000000	            mov dword [0x04000b87], eax 	       369	setup.c	FUNCTION_14	CALL_2
0x4000b87	        0x4883c408	                              add rsp, 8	       371	setup.c	FUNCTION_14
0x4000b8b	              0xc3	                                     ret	       371	setup.c	FUNCTION_14
check_repository_format_gently	ELSE,1:WHILE,0:FOR,0:SWITCH,0:CALL,11:IF,7:functions,0:DO,0	90
0x4000e10	            0x4154	                                push r12	       439	setup.c	FUNCTION_18
0x4000e12	              0x55	                                push rbp	       439	setup.c	FUNCTION_18
0x4000e13	          0x4889d5	                            mov rbp, rdx	       439	setup.c	FUNCTION_18
0x4000e16	              0x53	                                push rbx	       439	setup.c	FUNCTION_18
0x4000e17	          0x4889f3	                            mov rbx, rsi	       439	setup.c	FUNCTION_18
0x4000e1a	          0x4889fe	                            mov rsi, rdi	       444	setup.c	FUNCTION_18	CALL_1
0x4000e1d	        0x4883ec40	                           sub rsp, 0x40	       439	setup.c	FUNCTION_18
0x4000e21	          0x4889e7	                            mov rdi, rsp	       444	setup.c	FUNCTION_18	CALL_1
0x4000e24	    0x48c704240000	                      mov qword [rsp], 0	       440	setup.c	FUNCTION_18
0x4000e2c	    0x48c744240800	                  mov qword [rsp + 8], 0	       440	setup.c	FUNCTION_18
0x4000e35	    0x64488b042528	                mov rax, qword fs:[0x28]	       439	setup.c	FUNCTION_18
0x4000e3e	      0x4889442438	             mov qword [rsp + 0x38], rax	       439	setup.c	FUNCTION_18
0x4000e43	            0x31c0	                            xor eax, eax	       439	setup.c	FUNCTION_18
0x4000e45	    0x48c744241000	               mov qword [rsp + 0x10], 0	       440	setup.c	FUNCTION_18
0x4000e4e	    0x48c744242000	               mov qword [rsp + 0x20], 0	       441	setup.c	FUNCTION_18
0x4000e57	    0x48c744242800	               mov qword [rsp + 0x28], 0	       441	setup.c	FUNCTION_18
0x4000e60	    0x48c744243000	               mov qword [rsp + 0x30], 0	       441	setup.c	FUNCTION_18
0x4000e69	      0xe800000000	                          call 0x4000e6e	       444	setup.c	FUNCTION_18	CALL_1
0x4000e6e	      0xba07000000	                              mov edx, 7	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000e73	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000e78	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000e7b	          0x4189c4	                           mov r12d, eax	       444	setup.c	FUNCTION_18	CALL_1
0x4000e7e	      0xe800000000	                          call 0x4000e83	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000e83	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       446	setup.c	FUNCTION_18	CALL_3
0x4000e88	          0x4889df	                            mov rdi, rbx	       446	setup.c	FUNCTION_18	CALL_3
0x4000e8b	      0xe800000000	                          call 0x4000e90	       446	setup.c	FUNCTION_18	CALL_3
0x4000e90	          0x4889e7	                            mov rdi, rsp	       447	setup.c	FUNCTION_18	CALL_4
0x4000e93	      0xe800000000	                          call 0x4000e98	       447	setup.c	FUNCTION_18	CALL_4
0x4000e98	            0x8b03	                    mov eax, dword [rbx]	       454	setup.c	FUNCTION_18	IF_1
0x4000e9a	            0x85c0	                           test eax, eax	       454	setup.c	FUNCTION_18	IF_1
0x4000e9c	     0xf888e000000	                            js 0x4000f30	       454	setup.c	FUNCTION_18	IF_1
0x4000ea2	      0x488d742420	                   lea rsi, [rsp + 0x20]	       457	setup.c	FUNCTION_18	IF_2	CALL_5
0x4000ea7	          0x4889df	                            mov rdi, rbx	       457	setup.c	FUNCTION_18	IF_2	CALL_5
0x4000eaa	      0xe800000000	                          call 0x4000eaf	       457	setup.c	FUNCTION_18	IF_2	CALL_5
0x4000eaf	            0x85c0	                           test eax, eax	       457	setup.c	FUNCTION_18	IF_2	CALL_5
0x4000eb1	     0xf8899000000	                            js 0x4000f50	       457	setup.c	FUNCTION_18	IF_2	CALL_5
0x4000eb7	          0x8b4304	                mov eax, dword [rbx + 4]	       467	setup.c	FUNCTION_18
0x4000eba	        0x488d7b20	                   lea rdi, [rbx + 0x20]	       469	setup.c	FUNCTION_18	CALL_9
0x4000ebe	            0x31f6	                            xor esi, esi	       469	setup.c	FUNCTION_18	CALL_9
0x4000ec0	    0x890500000000	            mov dword [0x04000ec6], eax 	       467	setup.c	FUNCTION_18
0x4000ec6	        0x488b4308	                mov rax, qword [rbx + 8]	       468	setup.c	FUNCTION_18
0x4000eca	    0x488905000000	            mov qword [0x04000ed1], rax 	       468	setup.c	FUNCTION_18
0x4000ed1	      0xe800000000	                          call 0x4000ed6	       469	setup.c	FUNCTION_18	CALL_9
0x4000ed6	          0x4585e4	                         test r12d, r12d	       470	setup.c	FUNCTION_18	IF_4
0x4000ed9	            0x7545	                           jne 0x4000f20	       470	setup.c	FUNCTION_18	IF_4
0x4000edb	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       471	setup.c	FUNCTION_18	IF_4	IF_5
0x4000ede	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       471	setup.c	FUNCTION_18	IF_4	IF_5
0x4000ee1	            0x740f	                            je 0x4000ef2	       471	setup.c	FUNCTION_18	IF_4	IF_5
0x4000ee3	          0x83f801	                              cmp eax, 1	       473	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x4000ee6	    0x890500000000	            mov dword [0x04000eec], eax 	       472	setup.c	FUNCTION_18	IF_4	IF_5
0x4000eec	     0xf848e000000	                            je 0x4000f80	       473	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x4000ef2	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       476	setup.c	FUNCTION_18	IF_4	IF_7
0x4000ef7	            0x7437	                            je 0x4000f30	       476	setup.c	FUNCTION_18	IF_4	IF_7
0x4000ef9	    0x488b3d000000	            mov rdi, qword [0x04000f00] 	       477	setup.c	FUNCTION_18	IF_4	IF_7	CALL_10
0x4000f00	      0xe800000000	                          call 0x4000f05	       477	setup.c	FUNCTION_18	IF_4	IF_7	CALL_10
0x4000f05	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       478	setup.c	FUNCTION_18	IF_4	IF_7
0x4000f09	    0xc70500000000	     mov dword [0x04000f13], 0xffffffff 	       479	setup.c	FUNCTION_18	IF_4	IF_7
0x4000f13	    0x488905000000	            mov qword [0x04000f1a], rax 	       478	setup.c	FUNCTION_18	IF_4	IF_7
0x4000f1a	            0x31c0	                            xor eax, eax	       485	setup.c	FUNCTION_18
0x4000f1c	            0xeb14	                           jmp 0x4000f32	       485	setup.c	FUNCTION_18
0x4000f1e	            0x6690	                                     nop	       485	setup.c	FUNCTION_18
0x4000f20	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       482	setup.c	FUNCTION_18	ELSE_1	CALL_11
0x4000f24	      0xe800000000	                          call 0x4000f29	       482	setup.c	FUNCTION_18	ELSE_1	CALL_11
0x4000f29	     0xf1f80000000	                         nop dword [rax]	       482	setup.c	FUNCTION_18	ELSE_1	CALL_11
0x4000f30	            0x31c0	                            xor eax, eax	       485	setup.c	FUNCTION_18
0x4000f32	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       486	setup.c	FUNCTION_18
0x4000f37	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       486	setup.c	FUNCTION_18
0x4000f40	            0x754d	                           jne 0x4000f8f	       486	setup.c	FUNCTION_18
0x4000f42	        0x4883c440	                           add rsp, 0x40	       486	setup.c	FUNCTION_18
0x4000f46	              0x5b	                                 pop rbx	       486	setup.c	FUNCTION_18
0x4000f47	              0x5d	                                 pop rbp	       486	setup.c	FUNCTION_18
0x4000f48	            0x415c	                                 pop r12	       486	setup.c	FUNCTION_18
0x4000f4a	              0xc3	                                     ret	       486	setup.c	FUNCTION_18
0x4000f4b	       0xf1f440000	                   nop dword [rax + rax]	       486	setup.c	FUNCTION_18
0x4000f50	            0x31c0	                            xor eax, eax	       459	setup.c	FUNCTION_18	IF_2	IF_3	CALL_6
0x4000f52	          0x4885ed	                           test rbp, rbp	       458	setup.c	FUNCTION_18	IF_2	IF_3
0x4000f55	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       459	setup.c	FUNCTION_18	IF_2	IF_3	CALL_6
0x4000f5a	      0xbf00000000	                              mov edi, 0	       459	setup.c	FUNCTION_18	IF_2	IF_3	CALL_6
0x4000f5f	            0x7433	                            je 0x4000f94	       458	setup.c	FUNCTION_18	IF_2	IF_3
0x4000f61	      0xe800000000	                          call 0x4000f66	       459	setup.c	FUNCTION_18	IF_2	IF_3	CALL_6
0x4000f66	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       460	setup.c	FUNCTION_18	IF_2	IF_3	CALL_7
0x4000f6b	      0xe800000000	                          call 0x4000f70	       460	setup.c	FUNCTION_18	IF_2	IF_3	CALL_7
0x4000f70	    0xc74500ffffff	            mov dword [rbp], 0xffffffff 	       461	setup.c	FUNCTION_18	IF_2	IF_3
0x4000f77	      0xb8ffffffff	                     mov eax, 0xffffffff	       462	setup.c	FUNCTION_18	IF_2	IF_3
0x4000f7c	            0xebb4	                           jmp 0x4000f32	       462	setup.c	FUNCTION_18	IF_2	IF_3
0x4000f7e	            0x6690	                                     nop	       462	setup.c	FUNCTION_18	IF_2	IF_3
0x4000f80	    0xc70500000000	     mov dword [0x04000f8a], 0xffffffff 	       474	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x4000f8a	      0xe963ffffff	                           jmp 0x4000ef2	       474	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x4000f8f	      0xe800000000	                          call 0x4000f94	       486	setup.c	FUNCTION_18
0x4000f94	      0xe800000000	                          call 0x4000f99	       464	setup.c	FUNCTION_18	IF_2	CALL_8
git_config_perm	ELSE,0:WHILE,0:FOR,0:SWITCH,1:CALL,9:IF,6:functions,0:DO,0	94
0x4002480	            0x4155	                                push r13	      1129	setup.c	FUNCTION_32
0x4002482	            0x4154	                                push r12	      1129	setup.c	FUNCTION_32
0x4002484	              0x55	                                push rbp	      1129	setup.c	FUNCTION_32
0x4002485	              0x53	                                push rbx	      1129	setup.c	FUNCTION_32
0x4002486	        0x4883ec18	                           sub rsp, 0x18	      1129	setup.c	FUNCTION_32
0x400248a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1129	setup.c	FUNCTION_32
0x4002493	      0x4889442408	                mov qword [rsp + 8], rax	      1129	setup.c	FUNCTION_32
0x4002498	            0x31c0	                            xor eax, eax	      1129	setup.c	FUNCTION_32
0x400249a	          0x4885f6	                           test rsi, rsi	      1133	setup.c	FUNCTION_32	IF_1
0x400249d	            0x7425	                            je 0x40024c4	      1133	setup.c	FUNCTION_32	IF_1
0x400249f	          0x4989fc	                            mov r12, rdi	      1133	setup.c	FUNCTION_32	IF_1
0x40024a2	      0xb906000000	                              mov ecx, 6	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x40024a7	      0xbf00000000	                              mov edi, 0	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x40024ac	          0x4889f3	                            mov rbx, rsi	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x40024af	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x40024b1	            0x744d	                            je 0x4002500	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x40024b3	      0xbf00000000	                              mov edi, 0	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40024b8	      0xb906000000	                              mov ecx, 6	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40024bd	          0x4889de	                            mov rsi, rbx	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40024c0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40024c2	            0x7544	                           jne 0x4002508	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40024c4	      0xbdb0010000	                          mov ebp, 0x1b0	      1160	setup.c	FUNCTION_32	SWITCH_1
0x40024c9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1177	setup.c	FUNCTION_32
0x40024ce	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1177	setup.c	FUNCTION_32
0x40024d7	            0x89e8	                            mov eax, ebp	      1177	setup.c	FUNCTION_32
0x40024d9	     0xf85f9000000	                           jne 0x40025d8	      1177	setup.c	FUNCTION_32
0x40024df	        0x4883c418	                           add rsp, 0x18	      1177	setup.c	FUNCTION_32
0x40024e3	              0x5b	                                 pop rbx	      1177	setup.c	FUNCTION_32
0x40024e4	              0x5d	                                 pop rbp	      1177	setup.c	FUNCTION_32
0x40024e5	            0x415c	                                 pop r12	      1177	setup.c	FUNCTION_32
0x40024e7	            0x415d	                                 pop r13	      1177	setup.c	FUNCTION_32
0x40024e9	              0xc3	                                     ret	      1177	setup.c	FUNCTION_32
0x40024ea	          0x4889de	                            mov rsi, rbx	      1150	setup.c	FUNCTION_32	CALL_7
0x40024ed	          0x4c89e7	                            mov rdi, r12	      1150	setup.c	FUNCTION_32	CALL_7
0x40024f0	      0xe800000000	                          call 0x40024f5	      1150	setup.c	FUNCTION_32	CALL_7
0x40024f5	            0x85c0	                           test eax, eax	      1150	setup.c	FUNCTION_32	CALL_7
0x40024f7	            0x75cb	                           jne 0x40024c4	      1150	setup.c	FUNCTION_32	CALL_7
0x40024f9	     0xf1f80000000	                         nop dword [rax]	      1150	setup.c	FUNCTION_32	CALL_7
0x4002500	            0x31ed	                            xor ebp, ebp	      1158	setup.c	FUNCTION_32	SWITCH_1
0x4002502	            0xebc5	                           jmp 0x40024c9	      1158	setup.c	FUNCTION_32	SWITCH_1
0x4002504	         0xf1f4000	                         nop dword [rax]	      1158	setup.c	FUNCTION_32	SWITCH_1
0x4002508	          0x803b61	                    cmp byte [rbx], 0x61	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x400250b	     0xf849f000000	                            je 0x40025b0	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002511	      0xbf00000000	                              mov edi, 0	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002516	      0xb906000000	                              mov ecx, 6	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x400251b	          0x4889de	                            mov rsi, rbx	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x400251e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002520	      0xbdb4010000	                          mov ebp, 0x1b4	      1143	setup.c	FUNCTION_32	IF_4
0x4002525	           0xf97c2	                                 seta dl	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002528	           0xf92c0	                                 setb al	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x400252b	            0x38c2	                              cmp dl, al	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x400252d	            0x749a	                            je 0x40024c9	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x400252f	      0xbf00000000	                              mov edi, 0	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x4002534	      0xb90a000000	                            mov ecx, 0xa	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x4002539	          0x4889de	                            mov rsi, rbx	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x400253c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x400253e	            0x7489	                            je 0x40024c9	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002540	      0xba08000000	                              mov edx, 8	      1146	setup.c	FUNCTION_32	CALL_6
0x4002545	          0x4889e6	                            mov rsi, rsp	      1146	setup.c	FUNCTION_32	CALL_6
0x4002548	          0x4889df	                            mov rdi, rbx	      1146	setup.c	FUNCTION_32	CALL_6
0x400254b	      0xe800000000	                          call 0x4002550	      1146	setup.c	FUNCTION_32	CALL_6
0x4002550	          0x4989c5	                            mov r13, rax	      1146	setup.c	FUNCTION_32	CALL_6
0x4002553	        0x488b0424	                    mov rax, qword [rsp]	      1149	setup.c	FUNCTION_32	IF_5
0x4002557	          0x803800	                       cmp byte [rax], 0	      1149	setup.c	FUNCTION_32	IF_5
0x400255a	            0x758e	                           jne 0x40024ea	      1149	setup.c	FUNCTION_32	IF_5
0x400255c	        0x4183fd01	                             cmp r13d, 1	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002560	     0xf845effffff	                            je 0x40024c4	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002566	        0x4183fd02	                             cmp r13d, 2	      1156	setup.c	FUNCTION_32	SWITCH_1
0x400256a	     0xf8459ffffff	                            je 0x40024c9	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002570	          0x4585ed	                         test r13d, r13d	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002573	            0x748b	                            je 0x4002500	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002575	          0x4489e8	                           mov eax, r13d	      1167	setup.c	FUNCTION_32	IF_6
0x4002578	          0x4489ed	                           mov ebp, r13d	      1176	setup.c	FUNCTION_32
0x400257b	    0x81e5b6010000	                          and ebp, 0x1b6	      1176	setup.c	FUNCTION_32
0x4002581	      0x2580010000	                          and eax, 0x180	      1167	setup.c	FUNCTION_32	IF_6
0x4002586	            0xf7dd	                                 neg ebp	      1176	setup.c	FUNCTION_32
0x4002588	      0x3d80010000	                          cmp eax, 0x180	      1167	setup.c	FUNCTION_32	IF_6
0x400258d	     0xf8436ffffff	                            je 0x40024c9	      1167	setup.c	FUNCTION_32	IF_6
0x4002593	      0xbf00000000	                              mov edi, 0	      1167	setup.c	FUNCTION_32	IF_6
0x4002598	      0xe8d3dcffff	                       call sym._.part.4	      1167	setup.c	FUNCTION_32	IF_6
0x400259d	          0x4489ee	                           mov esi, r13d	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x40025a0	          0x4889c7	                            mov rdi, rax	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x40025a3	            0x31c0	                            xor eax, eax	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x40025a5	      0xe800000000	                          call 0x40025aa	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x40025aa	    0x660f1f440000	                    nop word [rax + rax]	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x40025b0	        0x807b016c	                cmp byte [rbx + 1], 0x6c	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40025b4	     0xf8557ffffff	                           jne 0x4002511	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40025ba	        0x807b026c	                cmp byte [rbx + 2], 0x6c	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40025be	     0xf854dffffff	                           jne 0x4002511	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40025c4	        0x807b0300	                   cmp byte [rbx + 3], 0	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40025c8	     0xf8543ffffff	                           jne 0x4002511	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40025ce	      0xbdb4010000	                          mov ebp, 0x1b4	      1143	setup.c	FUNCTION_32	IF_4
0x40025d3	      0xe9f1feffff	                           jmp 0x40024c9	      1143	setup.c	FUNCTION_32	IF_4
0x40025d8	      0xe800000000	                          call 0x40025dd	      1177	setup.c	FUNCTION_32
setup_work_tree	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,7:IF,4:functions,0:DO,0	35
0x4000c20	    0x8b1500000000	            mov edx, dword [0x04000c26] 	       385	setup.c	FUNCTION_16	IF_1
0x4000c26	            0x85d2	                           test edx, edx	       385	setup.c	FUNCTION_16	IF_1
0x4000c28	            0x7555	                           jne 0x4000c7f	       385	setup.c	FUNCTION_16	IF_1
0x4000c2a	        0x4883ec08	                              sub rsp, 8	       381	setup.c	FUNCTION_16
0x4000c2e	    0x8b0500000000	            mov eax, dword [0x04000c34] 	       388	setup.c	FUNCTION_16	IF_2
0x4000c34	            0x85c0	                           test eax, eax	       388	setup.c	FUNCTION_16	IF_2
0x4000c36	            0x755d	                           jne 0x4000c95	       388	setup.c	FUNCTION_16	IF_2
0x4000c38	      0xe800000000	                          call 0x4000c3d	       391	setup.c	FUNCTION_16	CALL_3
0x4000c3d	          0x4885c0	                           test rax, rax	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000c40	            0x743f	                            je 0x4000c81	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000c42	          0x4889c7	                            mov rdi, rax	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000c45	      0xe800000000	                          call 0x4000c4a	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000c4a	            0x85c0	                           test eax, eax	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000c4c	            0x7533	                           jne 0x4000c81	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000c4e	      0xbf00000000	                              mov edi, 0	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x4000c53	      0xe800000000	                          call 0x4000c58	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x4000c58	          0x4885c0	                           test rax, rax	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x4000c5b	            0x7414	                            je 0x4000c71	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x4000c5d	      0xba01000000	                              mov edx, 1	       400	setup.c	FUNCTION_16	IF_4
0x4000c62	      0xbe00000000	                              mov esi, 0	       400	setup.c	FUNCTION_16	IF_4
0x4000c67	      0xbf00000000	                              mov edi, 0	       400	setup.c	FUNCTION_16	IF_4
0x4000c6c	      0xe800000000	                          call 0x4000c71	       400	setup.c	FUNCTION_16	IF_4
0x4000c71	    0xc70500000000	               mov dword [0x04000c7b], 1	       402	setup.c	FUNCTION_16
0x4000c7b	        0x4883c408	                              add rsp, 8	       403	setup.c	FUNCTION_16
0x4000c7f	            0xf3c3	                                     ret	       403	setup.c	FUNCTION_16
0x4000c81	      0xbf00000000	                              mov edi, 0	       403	setup.c	FUNCTION_16
0x4000c86	      0xe8e5f5ffff	                       call sym._.part.4	       403	setup.c	FUNCTION_16
0x4000c8b	          0x4889c7	                            mov rdi, rax	       393	setup.c	FUNCTION_16	CALL_6
0x4000c8e	            0x31c0	                            xor eax, eax	       393	setup.c	FUNCTION_16	CALL_6
0x4000c90	      0xe800000000	                          call 0x4000c95	       393	setup.c	FUNCTION_16	CALL_6
0x4000c95	      0xbf00000000	                              mov edi, 0	       393	setup.c	FUNCTION_16	CALL_6
0x4000c9a	      0xe8d1f5ffff	                       call sym._.part.4	       393	setup.c	FUNCTION_16	CALL_6
0x4000c9f	          0x4889c7	                            mov rdi, rax	       389	setup.c	FUNCTION_16	CALL_2
0x4000ca2	            0x31c0	                            xor eax, eax	       389	setup.c	FUNCTION_16	CALL_2
0x4000ca4	      0xe800000000	                          call 0x4000ca9	       389	setup.c	FUNCTION_16	CALL_2
daemonize	ELSE,0:WHILE,0:FOR,0:SWITCH,1:CALL,11:IF,1:functions,0:DO,0	35
0x40026f0	        0x4883ec08	                              sub rsp, 8	      1217	setup.c	FUNCTION_37
0x40026f4	      0xe800000000	                          call 0x40026f9	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40026f9	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40026fc	            0x7442	                            je 0x4002740	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40026fe	            0x85c0	                           test eax, eax	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x4002700	            0x7536	                           jne 0x4002738	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x4002702	      0xe800000000	                          call 0x4002707	      1230	setup.c	FUNCTION_37	IF_1	CALL_5
0x4002707	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1230	setup.c	FUNCTION_37	IF_1	CALL_5
0x400270a	            0x744f	                            je 0x400275b	      1230	setup.c	FUNCTION_37	IF_1	CALL_5
0x400270c	            0x31ff	                            xor edi, edi	      1232	setup.c	FUNCTION_37	CALL_8
0x400270e	      0xe800000000	                          call 0x4002713	      1232	setup.c	FUNCTION_37	CALL_8
0x4002713	      0xbf01000000	                              mov edi, 1	      1233	setup.c	FUNCTION_37	CALL_9
0x4002718	      0xe800000000	                          call 0x400271d	      1233	setup.c	FUNCTION_37	CALL_9
0x400271d	      0xbf02000000	                              mov edi, 2	      1234	setup.c	FUNCTION_37	CALL_10
0x4002722	      0xe800000000	                          call 0x4002727	      1234	setup.c	FUNCTION_37	CALL_10
0x4002727	      0xe800000000	                          call 0x400272c	      1235	setup.c	FUNCTION_37	CALL_11
0x400272c	            0x31c0	                            xor eax, eax	      1238	setup.c	FUNCTION_37
0x400272e	        0x4883c408	                              add rsp, 8	      1238	setup.c	FUNCTION_37
0x4002732	              0xc3	                                     ret	      1238	setup.c	FUNCTION_37
0x4002733	       0xf1f440000	                   nop dword [rax + rax]	      1238	setup.c	FUNCTION_37
0x4002738	            0x31ff	                            xor edi, edi	      1228	setup.c	FUNCTION_37	SWITCH_1	CALL_4
0x400273a	      0xe800000000	                          call 0x400273f	      1228	setup.c	FUNCTION_37	SWITCH_1	CALL_4
0x400273f	              0x90	                                     nop	      1228	setup.c	FUNCTION_37	SWITCH_1	CALL_4
0x4002740	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_78
0x4002742	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_78
0x4002747	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_78
0x400274c	      0xe800000000	                          call 0x4002751	        54	gettext.h	FUNCTION_78
0x4002751	          0x4889c7	                            mov rdi, rax	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x4002754	            0x31c0	                            xor eax, eax	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x4002756	      0xe800000000	                          call 0x400275b	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x400275b	      0xbf00000000	                              mov edi, 0	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x4002760	      0xe80bdbffff	                       call sym._.part.4	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x4002765	          0x4889c7	                            mov rdi, rax	      1231	setup.c	FUNCTION_37	CALL_7
0x4002768	            0x31c0	                            xor eax, eax	      1231	setup.c	FUNCTION_37	CALL_7
0x400276a	      0xe800000000	                  call section_end..text	      1231	setup.c	FUNCTION_37	CALL_7
setup_git_directory	ELSE,0:WHILE,0:FOR,0:SWITCH,0:CALL,1:IF,0:functions,0:DO,0	2
0x4002630	            0x31ff	                            xor edi, edi	      1194	setup.c	FUNCTION_34	CALL_1
0x4002632	      0xe929f8ffff	      jmp sym.setup_git_directory_gently	      1194	setup.c	FUNCTION_34	CALL_1
get_common_dir_noenv	ELSE,1:WHILE,1:FOR,0:SWITCH,0:CALL,12:IF,3:functions,0:DO,0	113
0x40006c0	            0x4154	                                push r12	       270	setup.c	FUNCTION_11
0x40006c2	              0x55	                                push rbp	       270	setup.c	FUNCTION_11
0x40006c3	          0x4989fc	                            mov r12, rdi	       270	setup.c	FUNCTION_11
0x40006c6	              0x53	                                push rbx	       270	setup.c	FUNCTION_11
0x40006c7	          0x4889f2	                            mov rdx, rsi	       275	setup.c	FUNCTION_11	CALL_1
0x40006ca	          0x4889f3	                            mov rbx, rsi	       270	setup.c	FUNCTION_11
0x40006cd	      0xbe00000000	                              mov esi, 0	       275	setup.c	FUNCTION_11	CALL_1
0x40006d2	        0x4883ec40	                           sub rsp, 0x40	       270	setup.c	FUNCTION_11
0x40006d6	    0x64488b042528	                mov rax, qword fs:[0x28]	       270	setup.c	FUNCTION_11
0x40006df	      0x4889442438	             mov qword [rsp + 0x38], rax	       270	setup.c	FUNCTION_11
0x40006e4	            0x31c0	                            xor eax, eax	       270	setup.c	FUNCTION_11
0x40006e6	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       275	setup.c	FUNCTION_11	CALL_1
0x40006eb	    0x48c704240000	                      mov qword [rsp], 0	       271	setup.c	FUNCTION_11
0x40006f3	    0x48c744240800	                  mov qword [rsp + 8], 0	       271	setup.c	FUNCTION_11
0x40006fc	    0x48c744241000	               mov qword [rsp + 0x10], 0	       271	setup.c	FUNCTION_11
0x4000705	    0x48c744242000	               mov qword [rsp + 0x20], 0	       272	setup.c	FUNCTION_11
0x400070e	    0x48c744242800	               mov qword [rsp + 0x28], 0	       272	setup.c	FUNCTION_11
0x4000717	    0x48c744243000	               mov qword [rsp + 0x30], 0	       272	setup.c	FUNCTION_11
0x4000720	      0xe800000000	                          call 0x4000725	       275	setup.c	FUNCTION_11	CALL_1
0x4000725	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x400072a	      0xe800000000	                          call 0x400072f	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x400072f	            0x85c0	                           test eax, eax	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x4000731	     0xf84d9000000	                            je 0x4000810	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x4000737	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x400073c	            0x31d2	                            xor edx, edx	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x400073e	          0x4889e7	                            mov rdi, rsp	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4000741	          0x4889e5	                            mov rbp, rsp	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4000744	      0xe800000000	                          call 0x4000749	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4000749	          0x4885c0	                           test rax, rax	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x400074c	     0xf8e3b010000	                           jle 0x400088d	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4000752	      0x488b542408	                mov rdx, qword [rsp + 8]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000757	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400075c	          0x4885d2	                           test rdx, rdx	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400075f	            0x7445	                            je 0x40007a6	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000761	       0xfb64c16ff	         movzx ecx, byte [rsi + rdx - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000766	        0x488d42ff	                      lea rax, [rdx - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400076a	          0x80f90a	                             cmp cl, 0xa	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400076d	            0x742b	                            je 0x400079a	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400076f	          0x80f90d	                             cmp cl, 0xd	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000772	            0x7426	                            je 0x400079a	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000774	            0xeb30	                           jmp 0x40007a6	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000776	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000780	       0xfb65406ff	         movzx edx, byte [rsi + rax - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000785	        0x488d48ff	                      lea rcx, [rax - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000789	          0x80fa0a	                             cmp dl, 0xa	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400078c	            0x7409	                            je 0x4000797	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400078e	          0x80fa0d	                             cmp dl, 0xd	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000791	     0xf85c9000000	                           jne 0x4000860	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000797	          0x4889c8	                            mov rax, rcx	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400079a	          0x4885c0	                           test rax, rax	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400079d	      0x4889442408	                mov qword [rsp + 8], rax	       281	setup.c	FUNCTION_11	IF_1	WHILE_1
0x40007a2	            0x75dc	                           jne 0x4000780	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x40007a4	            0x31d2	                            xor edx, edx	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x40007a6	        0xc6041600	                 mov byte [rsi + rdx], 0	       282	setup.c	FUNCTION_11	IF_1
0x40007aa	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       165	strbuf.h	FUNCTION_40	IF_2
0x40007af	    0x48c744242800	               mov qword [rsp + 0x28], 0	       164	strbuf.h	FUNCTION_40
0x40007b8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x40007be	     0xf84ac000000	                            je 0x4000870	       165	strbuf.h	FUNCTION_40	IF_2
0x40007c4	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x40007c7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       166	strbuf.h	FUNCTION_40	IF_2
0x40007cc	          0x80382f	                    cmp byte [rax], 0x2f	      1154	cache.h	FUNCTION_69
0x40007cf	            0x7414	                            je 0x40007e5	      1154	cache.h	FUNCTION_69
0x40007d1	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40007d6	          0x4889da	                            mov rdx, rbx	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40007d9	      0xbe00000000	                              mov esi, 0	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40007de	            0x31c0	                            xor eax, eax	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40007e0	      0xe800000000	                          call 0x40007e5	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40007e5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       286	setup.c	FUNCTION_11	IF_1	CALL_8
0x40007ea	          0x4889ee	                            mov rsi, rbp	       286	setup.c	FUNCTION_11	IF_1	CALL_8
0x40007ed	      0xbb01000000	                              mov ebx, 1	       288	setup.c	FUNCTION_11	IF_1
0x40007f2	      0xe800000000	                          call 0x40007f7	       286	setup.c	FUNCTION_11	IF_1	CALL_8
0x40007f7	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x40007fc	          0x4c89e7	                            mov rdi, r12	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x40007ff	      0xe800000000	                          call 0x4000804	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x4000804	            0xeb25	                           jmp 0x400082b	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x4000806	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x4000810	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000813	          0x4889e5	                            mov rbp, rsp	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000816	      0xe800000000	                          call 0x400081b	       279	strbuf.h	FUNCTION_42	CALL_2
0x400081b	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_42	CALL_2
0x400081e	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000821	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000824	            0x31db	                            xor ebx, ebx	       273	setup.c	FUNCTION_11
0x4000826	      0xe800000000	                          call 0x400082b	       279	strbuf.h	FUNCTION_42	CALL_2
0x400082b	          0x4889ef	                            mov rdi, rbp	       293	setup.c	FUNCTION_11	CALL_11
0x400082e	      0xe800000000	                          call 0x4000833	       293	setup.c	FUNCTION_11	CALL_11
0x4000833	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       294	setup.c	FUNCTION_11	CALL_12
0x4000838	      0xe800000000	                          call 0x400083d	       294	setup.c	FUNCTION_11	CALL_12
0x400083d	            0x89d8	                            mov eax, ebx	       296	setup.c	FUNCTION_11
0x400083f	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       296	setup.c	FUNCTION_11
0x4000844	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       296	setup.c	FUNCTION_11
0x400084d	            0x7539	                           jne 0x4000888	       296	setup.c	FUNCTION_11
0x400084f	        0x4883c440	                           add rsp, 0x40	       296	setup.c	FUNCTION_11
0x4000853	              0x5b	                                 pop rbx	       296	setup.c	FUNCTION_11
0x4000854	              0x5d	                                 pop rbp	       296	setup.c	FUNCTION_11
0x4000855	            0x415c	                                 pop r12	       296	setup.c	FUNCTION_11
0x4000857	              0xc3	                                     ret	       296	setup.c	FUNCTION_11
0x4000858	     0xf1f84000000	                   nop dword [rax + rax]	       296	setup.c	FUNCTION_11
0x4000860	          0x4889c2	                            mov rdx, rax	       296	setup.c	FUNCTION_11
0x4000863	      0xe93effffff	                           jmp 0x40007a6	       296	setup.c	FUNCTION_11
0x4000868	     0xf1f84000000	                   nop dword [rax + rax]	       296	setup.c	FUNCTION_11
0x4000870	    0x803d00000000	                cmp byte [0x04000877], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000877	     0xf844affffff	                            je 0x40007c7	       168	strbuf.h	FUNCTION_40	CALL_2
0x400087d	      0xe800000000	                          call 0x4000882	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000882	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000888	      0xe800000000	                          call 0x400088d	       296	setup.c	FUNCTION_11
0x400088d	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000892	      0xbf00000000	                              mov edi, 0	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000897	      0xe8d4f9ffff	                       call sym._.part.4	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x400089c	          0x4889c7	                            mov rdi, rax	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x400089f	            0x31c0	                            xor eax, eax	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x40008a1	          0x4889de	                            mov rsi, rbx	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x40008a4	      0xe800000000	                          call 0x40008a9	       278	setup.c	FUNCTION_11	IF_1	CALL_5
