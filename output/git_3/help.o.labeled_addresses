parse_help_format	WHILE,0:FOR,0:SWITCH,0:ELSE,0:DO,0:CALL,6:IF,3:functions,0	58
0x4000140	        0x440fb607	                   movzx r8d, byte [rdi]	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000144	          0x4889fa	                            mov rdx, rdi	        60	help.c	FUNCTION_1
0x4000147	        0x4183f86d	                           cmp r8d, 0x6d	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x400014b	            0x7423	                            je 0x4000170	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x400014d	      0xb905000000	                              mov ecx, 5	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000152	          0x4889d6	                            mov rsi, rdx	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000155	      0xbf00000000	                              mov edi, 0	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400015a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400015c	      0xb802000000	                              mov eax, 2	        64	help.c	FUNCTION_1	IF_2
0x4000161	        0x400f97c6	                                seta sil	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000165	           0xf92c1	                                 setb cl	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000168	          0x4038ce	                             cmp sil, cl	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400016b	            0x7563	                           jne 0x40001d0	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400016d	            0xf3c3	                                     ret	        68	help.c	FUNCTION_1
0x400016f	              0x90	                                     nop	        68	help.c	FUNCTION_1
0x4000170	        0x807f0161	                cmp byte [rdi + 1], 0x61	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000174	            0x751a	                           jne 0x4000190	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000176	        0x807f026e	                cmp byte [rdi + 2], 0x6e	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x400017a	            0x7514	                           jne 0x4000190	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x400017c	        0x807f0300	                   cmp byte [rdi + 3], 0	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000180	            0x750e	                           jne 0x4000190	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000182	      0xb801000000	                              mov eax, 1	        62	help.c	FUNCTION_1	IF_1
0x4000187	              0xc3	                                     ret	        62	help.c	FUNCTION_1	IF_1
0x4000188	     0xf1f84000000	                   nop dword [rax + rax]	        62	help.c	FUNCTION_1	IF_1
0x4000190	      0xb905000000	                              mov ecx, 5	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000195	          0x4889d6	                            mov rsi, rdx	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000198	      0xbf00000000	                              mov edi, 0	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400019d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400019f	      0xb802000000	                              mov eax, 2	        64	help.c	FUNCTION_1	IF_2
0x40001a4	        0x400f97c6	                                seta sil	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x40001a8	           0xf92c1	                                 setb cl	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x40001ab	          0x4038ce	                             cmp sil, cl	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x40001ae	            0x74bd	                            je 0x400016d	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x40001b0	      0xbf00000000	                              mov edi, 0	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001b5	      0xb905000000	                              mov ecx, 5	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001ba	          0x4889d6	                            mov rsi, rdx	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001bd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001bf	            0x7529	                           jne 0x40001ea	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001c1	      0xb803000000	                              mov eax, 3	        66	help.c	FUNCTION_1	IF_3
0x40001c6	              0xc3	                                     ret	        66	help.c	FUNCTION_1	IF_3
0x40001c7	    0x660f1f840000	                    nop word [rax + rax]	        66	help.c	FUNCTION_1	IF_3
0x40001d0	        0x4183f877	                           cmp r8d, 0x77	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001d4	            0x75da	                           jne 0x40001b0	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001d6	        0x807a0165	                cmp byte [rdx + 1], 0x65	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001da	            0x75d4	                           jne 0x40001b0	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001dc	        0x807a0262	                cmp byte [rdx + 2], 0x62	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001e0	            0x75ce	                           jne 0x40001b0	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001e2	        0x807a0300	                   cmp byte [rdx + 3], 0	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001e6	            0x74d9	                            je 0x40001c1	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001e8	            0xebc6	                           jmp 0x40001b0	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001ea	              0x53	                                push rbx	        60	help.c	FUNCTION_1
0x40001eb	      0xbf00000000	                              mov edi, 0	        60	help.c	FUNCTION_1
0x40001f0	          0x4889d3	                            mov rbx, rdx	        60	help.c	FUNCTION_1
0x40001f3	      0xe838ffffff	                       call sym._.part.3	        60	help.c	FUNCTION_1
0x40001f8	          0x4889de	                            mov rsi, rbx	        67	help.c	FUNCTION_1	CALL_6
0x40001fb	          0x4889c7	                            mov rdi, rax	        67	help.c	FUNCTION_1	CALL_6
0x40001fe	            0x31c0	                            xor eax, eax	        67	help.c	FUNCTION_1	CALL_6
0x4000200	      0xe800000000	                          call 0x4000205	        67	help.c	FUNCTION_1	CALL_6
