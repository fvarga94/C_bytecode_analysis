pp_user_info	SWITCH,1:DO,0:functions,0:CALL,31:WHILE,0:IF,8:FOR,0:ELSE,3	378
0x4000f50	            0x4157	                                push r15	       428	pretty.c	WHILE_3	FUNCTION_19
0x4000f52	            0x4156	                                push r14	       428	pretty.c	WHILE_3	FUNCTION_19
0x4000f54	            0x4155	                                push r13	       428	pretty.c	WHILE_3	FUNCTION_19
0x4000f56	            0x4154	                                push r12	       428	pretty.c	WHILE_3	FUNCTION_19
0x4000f58	              0x55	                                push rbp	       428	pretty.c	WHILE_3	FUNCTION_19
0x4000f59	              0x53	                                push rbx	       428	pretty.c	WHILE_3	FUNCTION_19
0x4000f5a	    0x4881eca80000	                           sub rsp, 0xa8	       428	pretty.c	WHILE_3	FUNCTION_19
0x4000f61	    0x64488b042528	                mov rax, qword fs:[0x28]	       428	pretty.c	WHILE_3	FUNCTION_19
0x4000f6a	    0x488984249800	             mov qword [rsp + 0x98], rax	       428	pretty.c	WHILE_3	FUNCTION_19
0x4000f72	            0x31c0	                            xor eax, eax	       428	pretty.c	WHILE_3	FUNCTION_19
0x4000f74	          0x833f05	                      cmp dword [rdi], 5	       435	pretty.c	WHILE_3	FUNCTION_19	IF_1
0x4000f77	            0x7435	                            je 0x4000fae	       435	pretty.c	WHILE_3	FUNCTION_19	IF_1
0x4000f79	          0x4889cd	                            mov rbp, rcx	       435	pretty.c	WHILE_3	FUNCTION_19	IF_1
0x4000f7c	          0x4889fb	                            mov rbx, rdi	       435	pretty.c	WHILE_3	FUNCTION_19	IF_1
0x4000f7f	          0x4989f5	                            mov r13, rsi	       435	pretty.c	WHILE_3	FUNCTION_19	IF_1
0x4000f82	          0x4889cf	                            mov rdi, rcx	       438	pretty.c	WHILE_3	FUNCTION_19
0x4000f85	      0xbe0a000000	                            mov esi, 0xa	       438	pretty.c	WHILE_3	FUNCTION_19
0x4000f8a	          0x4989d4	                            mov r12, rdx	       438	pretty.c	WHILE_3	FUNCTION_19
0x4000f8d	          0x4d89c6	                             mov r14, r8	       438	pretty.c	WHILE_3	FUNCTION_19
0x4000f90	      0xe800000000	                          call 0x4000f95	       438	pretty.c	WHILE_3	FUNCTION_19
0x4000f95	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       439	pretty.c	WHILE_3	FUNCTION_19	IF_2	CALL_1
0x4000f9a	          0x4829e8	                            sub rax, rbp	       439	pretty.c	WHILE_3	FUNCTION_19	IF_2	CALL_1
0x4000f9d	          0x4889ee	                            mov rsi, rbp	       439	pretty.c	WHILE_3	FUNCTION_19	IF_2	CALL_1
0x4000fa0	          0x4889c2	                            mov rdx, rax	       439	pretty.c	WHILE_3	FUNCTION_19	IF_2	CALL_1
0x4000fa3	      0xe800000000	                          call 0x4000fa8	       439	pretty.c	WHILE_3	FUNCTION_19	IF_2	CALL_1
0x4000fa8	            0x85c0	                           test eax, eax	       439	pretty.c	WHILE_3	FUNCTION_19	IF_2	CALL_1
0x4000faa	            0x89c5	                            mov ebp, eax	       439	pretty.c	WHILE_3	FUNCTION_19	IF_2	CALL_1
0x4000fac	            0x7432	                            je 0x4000fe0	       439	pretty.c	WHILE_3	FUNCTION_19	IF_2	CALL_1
0x4000fae	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fb6	    0x644833042528	                xor rax, qword fs:[0x28]	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fbf	     0xf85d9050000	                           jne 0x400159e	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fc5	    0x4881c4a80000	                           add rsp, 0xa8	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fcc	              0x5b	                                 pop rbx	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fcd	              0x5d	                                 pop rbp	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fce	            0x415c	                                 pop r12	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fd0	            0x415d	                                 pop r13	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fd2	            0x415e	                                 pop r14	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fd4	            0x415f	                                 pop r15	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fd6	              0xc3	                                     ret	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fd7	    0x660f1f840000	                    nop word [rax + rax]	       512	pretty.c	WHILE_3	FUNCTION_19
0x4000fe0	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       442	pretty.c	WHILE_3	FUNCTION_19
0x4000fe5	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       443	pretty.c	WHILE_3	FUNCTION_19
0x4000fea	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       447	pretty.c	WHILE_3	FUNCTION_19	IF_3
0x4000fee	          0x4829c6	                            sub rsi, rax	       443	pretty.c	WHILE_3	FUNCTION_19
0x4000ff1	      0x4889442410	             mov qword [rsp + 0x10], rax	       442	pretty.c	WHILE_3	FUNCTION_19
0x4000ff6	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       444	pretty.c	WHILE_3	FUNCTION_19
0x4000ffb	      0x4889742428	             mov qword [rsp + 0x28], rsi	       443	pretty.c	WHILE_3	FUNCTION_19
0x4001000	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	       445	pretty.c	WHILE_3	FUNCTION_19
0x4001005	      0x4889442418	             mov qword [rsp + 0x18], rax	       444	pretty.c	WHILE_3	FUNCTION_19
0x400100a	          0x4829c6	                            sub rsi, rax	       445	pretty.c	WHILE_3	FUNCTION_19
0x400100d	          0x4885ff	                           test rdi, rdi	       447	pretty.c	WHILE_3	FUNCTION_19	IF_3
0x4001010	      0x4889742420	             mov qword [rsp + 0x20], rsi	       445	pretty.c	WHILE_3	FUNCTION_19
0x4001015	            0x7419	                            je 0x4001030	       447	pretty.c	WHILE_3	FUNCTION_19	IF_3
0x4001017	      0x4c8d442420	                    lea r8, [rsp + 0x20]	       448	pretty.c	WHILE_3	FUNCTION_19	CALL_2
0x400101c	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	       448	pretty.c	WHILE_3	FUNCTION_19	CALL_2
0x4001021	      0x488d542428	                   lea rdx, [rsp + 0x28]	       448	pretty.c	WHILE_3	FUNCTION_19	CALL_2
0x4001026	      0x488d742410	                   lea rsi, [rsp + 0x10]	       448	pretty.c	WHILE_3	FUNCTION_19	CALL_2
0x400102b	      0xe800000000	                          call 0x4001030	       448	pretty.c	WHILE_3	FUNCTION_19	CALL_2
0x4001030	            0x8b03	                    mov eax, dword [rbx]	       450	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_3
0x4001032	          0x8d50fa	                      lea edx, [rax - 6]	       450	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_3
0x4001035	          0x83fa01	                              cmp edx, 1	       450	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_3
0x4001038	     0xf8682000000	                           jbe 0x40010c0	       450	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_3
0x400103e	          0x83f804	                              cmp eax, 4	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x4001041	      0xb804000000	                              mov eax, 4	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x4001046	    0x41b800000000	                              mov r8d, 0	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x400104c	           0xf44e8	                          cmove ebp, eax	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x400104f	        0x4883ec08	                              sub rsp, 8	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x4001053	          0x4c89ea	                            mov rdx, r13	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x4001056	        0xff742418	                 push qword [rsp + 0x18]	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x400105a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x400105f	            0x89e9	                            mov ecx, ebp	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x4001061	      0xbe00000000	                              mov esi, 0	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x4001066	          0x4c89e7	                            mov rdi, r12	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x4001069	              0x50	                                push rax	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x400106a	        0xff742430	                 push qword [rsp + 0x30]	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x400106e	            0x31c0	                            xor eax, eax	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x4001070	      0x448b4c2440	            mov r9d, dword [rsp + 0x40] 	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x4001075	      0xe800000000	                          call 0x400107a	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x400107a	        0x4883c420	                           add rsp, 0x20	       489	pretty.c	WHILE_3	FUNCTION_19	ELSE_3	CALL_25
0x400107e	            0x8b03	                    mov eax, dword [rbx]	       494	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x4001080	          0x83f804	                              cmp eax, 4	       494	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x4001083	     0xf84cf020000	                            je 0x4001358	       494	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x4001089	     0xf8789020000	                            ja 0x4001318	       494	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x400108f	          0x83f801	                              cmp eax, 1	       494	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x4001092	     0xf8516ffffff	                           jne 0x4000fae	       494	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x4001098	        0x488d7318	                   lea rsi, [rbx + 0x18]	       497	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_27
0x400109c	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       496	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_26
0x40010a1	      0xe800000000	                          call 0x40010a6	       496	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_26
0x40010a6	      0xbe00000000	                              mov esi, 0	       496	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_26
0x40010ab	          0x4889c2	                            mov rdx, rax	       496	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_26
0x40010ae	          0x4c89e7	                            mov rdi, r12	       496	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_26
0x40010b1	            0x31c0	                            xor eax, eax	       496	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_26
0x40010b3	      0xe800000000	                          call 0x40010b8	       496	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_26
0x40010b8	      0xe9f1feffff	                           jmp 0x4000fae	       498	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x40010bd	           0xf1f00	                         nop dword [rax]	       498	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x40010c0	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	       451	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_4
0x40010c4	          0x4885ff	                           test rdi, rdi	       451	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_4
0x40010c7	     0xf84d6000000	                            je 0x40011a3	       451	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_4
0x40010cd	      0x488d742450	                   lea rsi, [rsp + 0x50]	       451	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_4
0x40010d2	      0xe800000000	                          call 0x40010d7	       451	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_4
0x40010d7	            0x85c0	                           test eax, eax	       451	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_4
0x40010d9	     0xf84c4000000	                            je 0x40011a3	       451	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_4
0x40010df	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       279	strbuf.h	FUNCTION_58	CALL_2
0x40010e4	      0xba06000000	                              mov edx, 6	       279	strbuf.h	FUNCTION_58	CALL_2
0x40010e9	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_58	CALL_2
0x40010ee	    0x48c744243000	               mov qword [rsp + 0x30], 0	       452	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x40010f7	    0x48c744243800	               mov qword [rsp + 0x38], 0	       452	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x4001100	    0x48c744244000	               mov qword [rsp + 0x40], 0	       452	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x4001109	      0xe800000000	                          call 0x400110e	       279	strbuf.h	FUNCTION_58	CALL_2
0x400110e	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       455	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_6
0x4001113	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       455	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_6
0x4001118	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       455	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_6
0x400111d	      0xe800000000	                          call 0x4001122	       455	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_6
0x4001122	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001127	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_58	CALL_2
0x400112c	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001131	      0xe800000000	                          call 0x4001136	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001136	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       457	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_8
0x400113b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       457	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_8
0x4001140	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       457	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_8
0x4001145	      0xe800000000	                          call 0x400114a	       457	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_8
0x400114a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       279	strbuf.h	FUNCTION_58	CALL_2
0x400114f	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001154	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001159	      0xe800000000	                          call 0x400115e	       279	strbuf.h	FUNCTION_58	CALL_2
0x400115e	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       460	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_11
0x4001163	            0x31f6	                            xor esi, esi	       460	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_11
0x4001165	      0xe800000000	                          call 0x400116a	       460	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_11
0x400116a	        0x488d7b78	                   lea rdi, [rbx + 0x78]	       459	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_10
0x400116e	          0x4889c6	                            mov rsi, rax	       459	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_10
0x4001171	      0xe800000000	                          call 0x4001176	       459	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5	CALL_10
0x4001176	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       462	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x400117a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       462	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x400117e	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       463	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x4001182	      0x4889542410	             mov qword [rsp + 0x10], rdx	       462	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x4001187	          0x4829d1	                            sub rcx, rdx	       463	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x400118a	          0x488b10	                    mov rdx, qword [rax]	       464	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x400118d	        0x488b4008	                mov rax, qword [rax + 8]	       465	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x4001191	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       463	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x4001196	      0x4889542418	             mov qword [rsp + 0x18], rdx	       464	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x400119b	          0x4829d0	                            sub rax, rdx	       465	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x400119e	      0x4889442420	             mov qword [rsp + 0x20], rax	       465	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_5
0x40011a3	      0xba06000000	                              mov edx, 6	       279	strbuf.h	FUNCTION_58	CALL_2
0x40011a8	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_58	CALL_2
0x40011ad	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x40011b0	      0xe800000000	                          call 0x40011b5	       279	strbuf.h	FUNCTION_58	CALL_2
0x40011b5	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       469	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_13
0x40011ba	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       469	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_13
0x40011bf	          0x4489fe	                           mov esi, r15d	       469	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_13
0x40011c2	          0x4889ef	                            mov rdi, rbp	       469	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_13
0x40011c5	      0x44897c240c	             mov dword [rsp + 0xc], r15d	       469	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_13
0x40011ca	      0xe891f5ffff	  call sym.needs_rfc2047_encoding.isra.2	       469	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_13
0x40011cf	            0x85c0	                           test eax, eax	       469	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_13
0x40011d1	     0xf85a9010000	                           jne 0x4001380	       469	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_13
0x40011d7	            0x31c0	                            xor eax, eax	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x40011d9	          0x4585ff	                         test r15d, r15d	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x40011dc	      0xbf01000000	                              mov edi, 1	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x40011e1	    0x48bec1140057	           movabs rsi, 0xe000000570014c1	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x40011eb	            0x7f19	                            jg 0x4001206	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x40011ed	      0xe96e020000	                           jmp 0x4001460	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x40011f2	    0x660f1f440000	                    nop word [rax + rax]	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x40011f8	        0x4883c001	                              add rax, 1	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x40011fc	        0x3944240c	              cmp dword [rsp + 0xc], eax	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x4001200	     0xf8e5a020000	                           jle 0x4001460	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x4001206	       0xfb64c0500	             movzx ecx, byte [rbp + rax]	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x400120b	          0x83e922	                           sub ecx, 0x22	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x400120e	          0x80f93b	                            cmp cl, 0x3b	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x4001211	            0x77e5	                            ja 0x40011f8	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x4001213	          0x4889fa	                            mov rdx, rdi	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x4001216	          0x48d3e2	                             shl rdx, cl	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x4001219	          0x4885f2	                           test rdx, rsi	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x400121c	            0x74da	                            je 0x40011f8	       247	pretty.c	WHILE_3	FUNCTION_12	FOR_1
0x400121e	        0x418d7702	                      lea esi, [r15 + 2]	       269	pretty.c	WHILE_3	FUNCTION_14	CALL_1
0x4001222	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       269	pretty.c	WHILE_3	FUNCTION_14	CALL_1
0x4001227	    0x48c744243000	               mov qword [rsp + 0x30], 0	       474	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7
0x4001230	    0x48c744243800	               mov qword [rsp + 0x38], 0	       474	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7
0x4001239	    0x48c744244000	               mov qword [rsp + 0x40], 0	       474	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7
0x4001242	          0x4863f6	                         movsxd rsi, esi	       269	pretty.c	WHILE_3	FUNCTION_14	CALL_1
0x4001245	      0xe800000000	                          call 0x400124a	       269	pretty.c	WHILE_3	FUNCTION_14	CALL_1
0x400124a	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       269	pretty.c	WHILE_3	FUNCTION_14	CALL_1
0x400124f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4001252	     0xf8500030000	                           jne 0x4001558	       141	strbuf.h	FUNCTION_55
0x4001258	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       228	strbuf.h	FUNCTION_57	CALL_2
0x400125d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001262	      0xe800000000	                          call 0x4001267	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001267	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       228	strbuf.h	FUNCTION_57	CALL_2
0x400126c	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x4001270	      0x4889442438	             mov qword [rsp + 0x38], rax	       229	strbuf.h	FUNCTION_57
0x4001275	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       229	strbuf.h	FUNCTION_57
0x400127a	        0xc6041022	              mov byte [rax + rdx], 0x22	       229	strbuf.h	FUNCTION_57
0x400127e	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       230	strbuf.h	FUNCTION_57
0x4001283	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       230	strbuf.h	FUNCTION_57
0x4001288	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x400128c	        0x418d47ff	                      lea eax, [r15 - 1]	       230	strbuf.h	FUNCTION_57
0x4001290	      0x4c8d7c0501	                lea r15, [rbp + rax + 1]	       230	strbuf.h	FUNCTION_57
0x4001295	            0xeb4a	                           jmp 0x40012e1	       230	strbuf.h	FUNCTION_57
0x4001297	    0x660f1f840000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_57
0x40012a0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       228	strbuf.h	FUNCTION_57	CALL_2
0x40012a5	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x40012aa	      0xe800000000	                          call 0x40012af	       228	strbuf.h	FUNCTION_57	CALL_2
0x40012af	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       228	strbuf.h	FUNCTION_57	CALL_2
0x40012b4	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x40012b8	        0x4883c501	                              add rbp, 1	       229	strbuf.h	FUNCTION_57
0x40012bc	          0x4c39fd	                            cmp rbp, r15	       272	pretty.c	WHILE_3	FUNCTION_14	FOR_1
0x40012bf	      0x4889442438	             mov qword [rsp + 0x38], rax	       229	strbuf.h	FUNCTION_57
0x40012c4	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       229	strbuf.h	FUNCTION_57
0x40012c9	        0x44883410	              mov byte [rax + rdx], r14b	       229	strbuf.h	FUNCTION_57
0x40012cd	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       230	strbuf.h	FUNCTION_57
0x40012d2	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       230	strbuf.h	FUNCTION_57
0x40012d7	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x40012db	     0xf84af010000	                            je 0x4001490	       272	pretty.c	WHILE_3	FUNCTION_14	FOR_1
0x40012e1	      0x440fb67500	                  movzx r14d, byte [rbp]	       273	pretty.c	WHILE_3	FUNCTION_14	FOR_1	SWITCH_1
0x40012e6	        0x4180fe22	                          cmp r14b, 0x22	       273	pretty.c	WHILE_3	FUNCTION_14	FOR_1	SWITCH_1
0x40012ea	     0xf8418010000	                            je 0x4001408	       273	pretty.c	WHILE_3	FUNCTION_14	FOR_1	SWITCH_1
0x40012f0	        0x4180fe5c	                          cmp r14b, 0x5c	       273	pretty.c	WHILE_3	FUNCTION_14	FOR_1	SWITCH_1
0x40012f4	     0xf840e010000	                            je 0x4001408	       273	pretty.c	WHILE_3	FUNCTION_14	FOR_1	SWITCH_1
0x40012fa	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       273	pretty.c	WHILE_3	FUNCTION_14	FOR_1	SWITCH_1
0x40012ff	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4001302	            0x749c	                            je 0x40012a0	       141	strbuf.h	FUNCTION_55
0x4001304	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       141	strbuf.h	FUNCTION_55
0x4001309	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400130d	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001310	            0x75a2	                           jne 0x40012b4	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001312	            0xeb8c	                           jmp 0x40012a0	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001314	         0xf1f4000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001318	          0x83e806	                              sub eax, 6	       494	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x400131b	          0x83f801	                              cmp eax, 1	       494	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x400131e	     0xf878afcffff	                            ja 0x4000fae	       494	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x4001324	      0xbf05000000	                              mov edi, 5	       502	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_29
0x4001329	      0xe800000000	                          call 0x400132e	       502	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_29
0x400132e	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       501	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_28
0x4001333	          0x4889c6	                            mov rsi, rax	       501	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_28
0x4001336	      0xe800000000	                          call 0x400133b	       501	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_28
0x400133b	      0xbe00000000	                              mov esi, 0	       501	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_28
0x4001340	          0x4889c2	                            mov rdx, rax	       501	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_28
0x4001343	          0x4c89e7	                            mov rdi, r12	       501	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_28
0x4001346	            0x31c0	                            xor eax, eax	       501	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_28
0x4001348	      0xe800000000	                          call 0x400134d	       501	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_28
0x400134d	      0xe95cfcffff	                           jmp 0x4000fae	       503	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x4001352	    0x660f1f440000	                    nop word [rax + rax]	       503	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x4001358	        0x488d7318	                   lea rsi, [rbx + 0x18]	       506	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_31
0x400135c	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       505	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_30
0x4001361	      0xe800000000	                          call 0x4001366	       505	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_30
0x4001366	          0x4c89ea	                            mov rdx, r13	       505	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_30
0x4001369	          0x4889c1	                            mov rcx, rax	       505	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_30
0x400136c	      0xbe00000000	                              mov esi, 0	       505	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_30
0x4001371	          0x4c89e7	                            mov rdi, r12	       505	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_30
0x4001374	            0x31c0	                            xor eax, eax	       505	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_30
0x4001376	      0xe800000000	                          call 0x400137b	       505	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1	CALL_30
0x400137b	      0xe92efcffff	                           jmp 0x4000fae	       507	pretty.c	WHILE_3	FUNCTION_19	SWITCH_1
0x4001380	    0x41b801000000	                              mov r8d, 1	       470	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_14
0x4001386	          0x4c89f1	                            mov rcx, r14	       470	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_14
0x4001389	          0x4c89fa	                            mov rdx, r15	       470	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_14
0x400138c	          0x4889ee	                            mov rsi, rbp	       470	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_14
0x400138f	          0x4c89e7	                            mov rdi, r12	       470	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_14
0x4001392	      0xe8d9efffff	                    call sym.add_rfc2047	       470	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_14
0x4001397	    0x41b84c000000	                           mov r8d, 0x4c	       470	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_14
0x400139d	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       470	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_6	CALL_14
0x40013a2	          0x8d77ff	                      lea esi, [rdi - 1]	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40013a5	            0x85f6	                           test esi, esi	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40013a7	            0x89f1	                            mov ecx, esi	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40013a9	            0x7826	                            js 0x40013d1	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40013ab	          0x4863c6	                         movsxd rax, esi	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40013ae	      0x4903442410	             add rax, qword [r12 + 0x10]	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40013b3	          0x80380a	                     cmp byte [rax], 0xa	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40013b6	            0x7511	                           jne 0x40013c9	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40013b8	            0xeb17	                           jmp 0x40013d1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40013ba	    0x660f1f440000	                    nop word [rax + rax]	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40013c0	        0x4883e801	                              sub rax, 1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40013c4	          0x80380a	                     cmp byte [rax], 0xa	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40013c7	            0x7408	                            je 0x40013d1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40013c9	          0x83e901	                              sub ecx, 1	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40013cc	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40013cf	            0x75ef	                           jne 0x40013c0	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40013d1	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       485	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_8	CALL_22
0x40013d6	            0x29ce	                            sub esi, ecx	       484	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_8
0x40013d8	          0x4863f6	                         movsxd rsi, esi	       484	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_8
0x40013db	      0x488d443203	                lea rax, [rdx + rsi + 3]	       484	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_8
0x40013e0	          0x4c39c0	                             cmp rax, r8	       484	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_8
0x40013e3	     0xf8727010000	                            ja 0x4001510	       484	pretty.c	WHILE_3	FUNCTION_19	IF_4	IF_8
0x40013e9	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       487	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_24
0x40013ee	      0xbe00000000	                              mov esi, 0	       487	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_24
0x40013f3	          0x4c89e7	                            mov rdi, r12	       487	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_24
0x40013f6	            0x31c0	                            xor eax, eax	       487	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_24
0x40013f8	      0xe800000000	                          call 0x40013fd	       487	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_24
0x40013fd	      0xe97cfcffff	                           jmp 0x400107e	       487	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_24
0x4001402	    0x660f1f440000	                    nop word [rax + rax]	       487	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_24
0x4001408	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       487	pretty.c	WHILE_3	FUNCTION_19	IF_4	CALL_24
0x400140d	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4001410	            0x753e	                           jne 0x4001450	       141	strbuf.h	FUNCTION_55
0x4001412	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001417	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x400141c	      0xe800000000	                          call 0x4001421	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001421	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001426	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x400142a	      0x4889442438	             mov qword [rsp + 0x38], rax	       229	strbuf.h	FUNCTION_57
0x400142f	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       229	strbuf.h	FUNCTION_57
0x4001434	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_57
0x4001438	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       230	strbuf.h	FUNCTION_57
0x400143d	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       230	strbuf.h	FUNCTION_57
0x4001442	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4001446	      0x440fb67500	                  movzx r14d, byte [rbp]	       230	strbuf.h	FUNCTION_57
0x400144b	      0xe9aafeffff	                           jmp 0x40012fa	       230	strbuf.h	FUNCTION_57
0x4001450	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       141	strbuf.h	FUNCTION_55
0x4001455	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001459	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400145c	            0x75c8	                           jne 0x4001426	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400145e	            0xebb2	                           jmp 0x4001412	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001460	    0x41b801000000	                              mov r8d, 1	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x4001466	    0x41b94e000000	                           mov r9d, 0x4e	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x400146c	      0xb9faffffff	                     mov ecx, 0xfffffffa	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x4001471	          0x4489fa	                           mov edx, r15d	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x4001474	          0x4889ee	                            mov rsi, rbp	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x4001477	          0x4c89e7	                            mov rdi, r12	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x400147a	      0xe800000000	                          call 0x400147f	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x400147f	    0x41b84e000000	                           mov r8d, 0x4e	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x4001485	      0xe913ffffff	                           jmp 0x400139d	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x400148a	    0x660f1f440000	                    nop word [rax + rax]	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x4001490	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       480	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_2	CALL_19
0x4001495	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4001498	     0xf85d2000000	                           jne 0x4001570	       141	strbuf.h	FUNCTION_55
0x400149e	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       228	strbuf.h	FUNCTION_57	CALL_2
0x40014a3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x40014a8	      0xe800000000	                          call 0x40014ad	       228	strbuf.h	FUNCTION_57	CALL_2
0x40014ad	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       228	strbuf.h	FUNCTION_57	CALL_2
0x40014b2	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x40014b6	    0x41b801000000	                              mov r8d, 1	       476	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_17
0x40014bc	    0x41b94e000000	                           mov r9d, 0x4e	       476	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_17
0x40014c2	      0xb9faffffff	                     mov ecx, 0xfffffffa	       476	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_17
0x40014c7	          0x4c89e7	                            mov rdi, r12	       476	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_17
0x40014ca	      0x4889442438	             mov qword [rsp + 0x38], rax	       229	strbuf.h	FUNCTION_57
0x40014cf	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       229	strbuf.h	FUNCTION_57
0x40014d4	        0xc6041022	              mov byte [rax + rdx], 0x22	       229	strbuf.h	FUNCTION_57
0x40014d8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       230	strbuf.h	FUNCTION_57
0x40014dd	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       230	strbuf.h	FUNCTION_57
0x40014e2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x40014e6	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       476	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_17
0x40014ea	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       476	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_17
0x40014ef	      0xe800000000	                          call 0x40014f4	       476	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_17
0x40014f4	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       478	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_18
0x40014f9	      0xe800000000	                          call 0x40014fe	       478	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_18
0x40014fe	    0x41b84e000000	                           mov r8d, 0x4e	       478	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_18
0x4001504	      0xe994feffff	                           jmp 0x400139d	       478	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_18
0x4001509	     0xf1f80000000	                         nop dword [rax]	       478	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_18
0x4001510	        0x498b0424	                    mov rax, qword [r12]	       478	pretty.c	WHILE_3	FUNCTION_19	IF_4	ELSE_1	IF_7	CALL_18
0x4001514	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4001517	            0x7577	                           jne 0x4001590	       141	strbuf.h	FUNCTION_55
0x4001519	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_57	CALL_2
0x400151c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001521	      0xe800000000	                          call 0x4001526	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001526	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x400152b	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4001530	        0x488d5701	                      lea rdx, [rdi + 1]	       229	strbuf.h	FUNCTION_57
0x4001534	      0x4989542408	                mov qword [r12 + 8], rdx	       229	strbuf.h	FUNCTION_57
0x4001539	        0xc604380a	               mov byte [rax + rdi], 0xa	       229	strbuf.h	FUNCTION_57
0x400153d	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4001542	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_57
0x4001547	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x400154b	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       230	strbuf.h	FUNCTION_57
0x4001550	      0xe994feffff	                           jmp 0x40013e9	       230	strbuf.h	FUNCTION_57
0x4001555	           0xf1f00	                         nop dword [rax]	       230	strbuf.h	FUNCTION_57
0x4001558	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       141	strbuf.h	FUNCTION_55
0x400155d	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001561	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001564	     0xf8502fdffff	                           jne 0x400126c	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400156a	      0xe9e9fcffff	                           jmp 0x4001258	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400156f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001570	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       141	strbuf.h	FUNCTION_55
0x4001575	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001579	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400157c	     0xf8530ffffff	                           jne 0x40014b2	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001582	      0xe917ffffff	                           jmp 0x400149e	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001587	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001590	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001594	          0x4839c7	                            cmp rdi, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001597	            0x7592	                           jne 0x400152b	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001599	      0xe97bffffff	                           jmp 0x4001519	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400159e	      0xe800000000	                          call 0x40015a3	       512	pretty.c	WHILE_3	FUNCTION_19
pp_remainder	SWITCH,0:DO,0:functions,0:CALL,9:WHILE,0:IF,7:FOR,1:ELSE,2	141
0x4003580	            0x4157	                                push r15	      1753	pretty.c	FUNCTION_51
0x4003582	            0x4156	                                push r14	      1753	pretty.c	FUNCTION_51
0x4003584	          0x4863c1	                         movsxd rax, ecx	      1753	pretty.c	FUNCTION_51
0x4003587	            0x4155	                                push r13	      1753	pretty.c	FUNCTION_51
0x4003589	            0x4154	                                push r12	      1753	pretty.c	FUNCTION_51
0x400358b	          0x4989fd	                            mov r13, rdi	      1753	pretty.c	FUNCTION_51
0x400358e	              0x55	                                push rbp	      1753	pretty.c	FUNCTION_51
0x400358f	              0x53	                                push rbx	      1753	pretty.c	FUNCTION_51
0x4003590	          0x4889f5	                            mov rbp, rsi	      1753	pretty.c	FUNCTION_51
0x4003593	          0x4989d7	                            mov r15, rdx	      1753	pretty.c	FUNCTION_51
0x4003596	          0x4989c4	                            mov r12, rax	      1753	pretty.c	FUNCTION_51
0x4003599	      0xb901000000	                              mov ecx, 1	      1754	pretty.c	FUNCTION_51
0x400359e	        0x4883ec18	                           sub rsp, 0x18	      1753	pretty.c	FUNCTION_51
0x40035a2	      0x4889442408	                mov qword [rsp + 8], rax	      1732	pretty.c	FUNCTION_49	CALL_1
0x40035a7	    0x660f1f840000	                    nop word [rax + rax]	      1732	pretty.c	FUNCTION_49	CALL_1
0x40035b0	        0x4c8b7500	                    mov r14, qword [rbp]	      1756	pretty.c	FUNCTION_51	FOR_1
0x40035b4	            0x31db	                            xor ebx, ebx	       191	pretty.c	WHILE_3	FUNCTION_8
0x40035b6	          0x4c89f0	                            mov rax, r14	      1756	pretty.c	FUNCTION_51	FOR_1
0x40035b9	            0xeb11	                           jmp 0x40035cc	      1756	pretty.c	FUNCTION_51	FOR_1
0x40035bb	       0xf1f440000	                   nop dword [rax + rax]	      1756	pretty.c	FUNCTION_51	FOR_1
0x40035c0	          0x83c301	                              add ebx, 1	       197	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40035c3	          0x80fa0a	                             cmp dl, 0xa	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x40035c6	     0xf84c4000000	                            je 0x4003690	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x40035cc	        0x4883c001	                              add rax, 1	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40035d0	         0xfb650ff	               movzx edx, byte [rax - 1]	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40035d4	            0x84d2	                             test dl, dl	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x40035d6	            0x75e8	                           jne 0x40035c0	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x40035d8	          0x4863c3	                         movsxd rax, ebx	      1758	pretty.c	FUNCTION_51	FOR_1
0x40035db	            0x85db	                           test ebx, ebx	      1760	pretty.c	FUNCTION_51	FOR_1	IF_1
0x40035dd	        0x498d1406	                    lea rdx, [r14 + rax]	      1758	pretty.c	FUNCTION_51	FOR_1
0x40035e1	        0x48895500	                    mov qword [rbp], rdx	      1758	pretty.c	FUNCTION_51	FOR_1
0x40035e5	     0xf84f5000000	                            je 0x40036e0	      1760	pretty.c	FUNCTION_51	FOR_1	IF_1
0x40035eb	      0x498d4406ff	                lea rax, [r14 + rax - 1]	      1760	pretty.c	FUNCTION_51	FOR_1	IF_1
0x40035f0	           0xfb610	                   movzx edx, byte [rax]	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x40035f3	    0xf68200000000	                      test byte [rdx], 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x40035fa	            0x7418	                            je 0x4003614	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x40035fc	        0x4883e801	                              sub rax, 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003600	          0x83eb01	                              sub ebx, 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003603	            0x75eb	                           jne 0x40035f0	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003605	            0x85c9	                           test ecx, ecx	      1764	pretty.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x4003607	            0x75a7	                           jne 0x40035b0	      1764	pretty.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x4003609	      0x41837d0002	                      cmp dword [r13], 2	      1766	pretty.c	FUNCTION_51	FOR_1	IF_2	IF_4
0x400360e	     0xf84cc000000	                            je 0x40036e0	      1766	pretty.c	FUNCTION_51	FOR_1	IF_2	IF_4
0x4003614	      0x428d742314	            lea esi, [rbx + r12 + 0x14] 	      1771	pretty.c	FUNCTION_51	FOR_1	CALL_3
0x4003619	          0x4c89ff	                            mov rdi, r15	      1771	pretty.c	FUNCTION_51	FOR_1	CALL_3
0x400361c	          0x4863f6	                         movsxd rsi, esi	      1771	pretty.c	FUNCTION_51	FOR_1	CALL_3
0x400361f	      0xe800000000	                          call 0x4003624	      1771	pretty.c	FUNCTION_51	FOR_1	CALL_3
0x4003624	          0x4585e4	                         test r12d, r12d	      1772	pretty.c	FUNCTION_51	FOR_1	IF_5
0x4003627	     0xf8583000000	                           jne 0x40036b0	      1772	pretty.c	FUNCTION_51	FOR_1	IF_5
0x400362d	        0x418b7538	            mov esi, dword [r13 + 0x38] 	      1774	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6
0x4003631	            0x85f6	                           test esi, esi	      1774	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6
0x4003633	     0xf8595000000	                           jne 0x40036ce	      1774	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6
0x4003639	      0x41837d0007	                      cmp dword [r13], 7	      1778	pretty.c	FUNCTION_51	FOR_1	ELSE_2	IF_7
0x400363e	     0xf84ab000000	                            je 0x40036ef	      1778	pretty.c	FUNCTION_51	FOR_1	ELSE_2	IF_7
0x4003644	          0x4863d3	                         movsxd rdx, ebx	      1782	pretty.c	FUNCTION_51	FOR_1	ELSE_2	CALL_8
0x4003647	          0x4c89f6	                            mov rsi, r14	      1782	pretty.c	FUNCTION_51	FOR_1	ELSE_2	CALL_8
0x400364a	          0x4c89ff	                            mov rdi, r15	      1782	pretty.c	FUNCTION_51	FOR_1	ELSE_2	CALL_8
0x400364d	      0xe800000000	                          call 0x4003652	      1782	pretty.c	FUNCTION_51	FOR_1	ELSE_2	CALL_8
0x4003652	          0x498b07	                    mov rax, qword [r15]	      1782	pretty.c	FUNCTION_51	FOR_1	ELSE_2	CALL_8
0x4003655	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4003658	            0x7546	                           jne 0x40036a0	       141	strbuf.h	FUNCTION_55
0x400365a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x400365f	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003662	      0xe800000000	                          call 0x4003667	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003667	        0x498b5708	                mov rdx, qword [r15 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x400366b	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x400366f	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x4003673	        0x49894f08	                mov qword [r15 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4003677	            0x31c9	                            xor ecx, ecx	      1769	pretty.c	FUNCTION_51	FOR_1
0x4003679	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_57
0x400367d	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4003681	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_57
0x4003685	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4003689	      0xe922ffffff	                           jmp 0x40035b0	       230	strbuf.h	FUNCTION_57
0x400368e	            0x6690	                                     nop	       230	strbuf.h	FUNCTION_57
0x4003690	          0x4863c3	                         movsxd rax, ebx	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003693	        0x498d1406	                    lea rdx, [r14 + rax]	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003697	        0x48895500	                    mov qword [rbp], rdx	      1758	pretty.c	FUNCTION_51	FOR_1
0x400369b	      0xe94bffffff	                           jmp 0x40035eb	      1758	pretty.c	FUNCTION_51	FOR_1
0x40036a0	        0x498b5708	                mov rdx, qword [r15 + 8]	       141	strbuf.h	FUNCTION_55
0x40036a4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40036a8	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40036ab	            0x75be	                           jne 0x400366b	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40036ad	            0xebab	                           jmp 0x400365a	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40036af	              0x90	                                     nop	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40036b0	      0x488b542408	                mov rdx, qword [rsp + 8]	      1732	pretty.c	FUNCTION_49	CALL_1
0x40036b5	      0xbe20000000	                           mov esi, 0x20	      1732	pretty.c	FUNCTION_49	CALL_1
0x40036ba	          0x4c89ff	                            mov rdi, r15	      1732	pretty.c	FUNCTION_49	CALL_1
0x40036bd	      0xe800000000	                          call 0x40036c2	      1732	pretty.c	FUNCTION_49	CALL_1
0x40036c2	        0x418b7538	            mov esi, dword [r13 + 0x38] 	      1733	pretty.c	FUNCTION_49	IF_1
0x40036c6	            0x85f6	                           test esi, esi	      1733	pretty.c	FUNCTION_49	IF_1
0x40036c8	     0xf8476ffffff	                            je 0x4003644	      1733	pretty.c	FUNCTION_49	IF_1
0x40036ce	            0x89d9	                            mov ecx, ebx	      1775	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6	CALL_5
0x40036d0	          0x4c89f2	                            mov rdx, r14	      1775	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6	CALL_5
0x40036d3	          0x4c89ff	                            mov rdi, r15	      1775	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6	CALL_5
0x40036d6	      0xe885ceffff	           call sym.strbuf_add_tabexpand	      1775	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6	CALL_5
0x40036db	      0xe972ffffff	                           jmp 0x4003652	      1775	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6	CALL_5
0x40036e0	        0x4883c418	                           add rsp, 0x18	      1786	pretty.c	FUNCTION_51
0x40036e4	              0x5b	                                 pop rbx	      1786	pretty.c	FUNCTION_51
0x40036e5	              0x5d	                                 pop rbp	      1786	pretty.c	FUNCTION_51
0x40036e6	            0x415c	                                 pop r12	      1786	pretty.c	FUNCTION_51
0x40036e8	            0x415d	                                 pop r13	      1786	pretty.c	FUNCTION_51
0x40036ea	            0x415e	                                 pop r14	      1786	pretty.c	FUNCTION_51
0x40036ec	            0x415f	                                 pop r15	      1786	pretty.c	FUNCTION_51
0x40036ee	              0xc3	                                     ret	      1786	pretty.c	FUNCTION_51
0x40036ef	          0x83fb04	                              cmp ebx, 4	      1746	pretty.c	FUNCTION_50	CALL_1
0x40036f2	     0xf8e4cffffff	                           jle 0x4003644	      1746	pretty.c	FUNCTION_50	CALL_1
0x40036f8	        0x41803e3e	                    cmp byte [r14], 0x3e	      1027	string2.h	FUNCTION_74	WHILE_1
0x40036fc	            0x7572	                           jne 0x4003770	      1027	string2.h	FUNCTION_74	WHILE_1
0x40036fe	        0x498d4601	                      lea rax, [r14 + 1]	      1027	string2.h	FUNCTION_74	WHILE_1
0x4003702	    0x660f1f440000	                    nop word [rax + rax]	      1027	string2.h	FUNCTION_74	WHILE_1
0x4003708	          0x4889c7	                            mov rdi, rax	      1027	string2.h	FUNCTION_74	WHILE_1
0x400370b	        0x4883c001	                              add rax, 1	      1027	string2.h	FUNCTION_74	WHILE_1
0x400370f	        0x8078ff3e	                cmp byte [rax - 1], 0x3e	      1027	string2.h	FUNCTION_74	WHILE_1
0x4003713	            0x74f3	                            je 0x4003708	      1027	string2.h	FUNCTION_74	WHILE_1
0x4003715	      0xbe00000000	                              mov esi, 0	      1746	pretty.c	FUNCTION_50	CALL_1
0x400371a	      0xe800000000	                          call 0x400371f	      1746	pretty.c	FUNCTION_50	CALL_1
0x400371f	            0x85c0	                           test eax, eax	      1746	pretty.c	FUNCTION_50	CALL_1
0x4003721	     0xf841dffffff	                            je 0x4003644	      1746	pretty.c	FUNCTION_50	CALL_1
0x4003727	          0x498b07	                    mov rax, qword [r15]	      1746	pretty.c	FUNCTION_50	CALL_1
0x400372a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x400372d	            0x742e	                            je 0x400375d	       141	strbuf.h	FUNCTION_55
0x400372f	        0x498b5708	                mov rdx, qword [r15 + 8]	       141	strbuf.h	FUNCTION_55
0x4003733	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003737	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400373a	            0x7421	                            je 0x400375d	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400373c	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4003740	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x4003744	        0x49894f08	                mov qword [r15 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4003748	        0xc604103e	              mov byte [rax + rdx], 0x3e	       229	strbuf.h	FUNCTION_57
0x400374c	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4003750	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_57
0x4003754	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4003758	      0xe9e7feffff	                           jmp 0x4003644	       230	strbuf.h	FUNCTION_57
0x400375d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003762	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003765	      0xe800000000	                          call 0x400376a	       228	strbuf.h	FUNCTION_57	CALL_2
0x400376a	        0x498b5708	                mov rdx, qword [r15 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x400376e	            0xebcc	                           jmp 0x400373c	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003770	          0x4c89f7	                            mov rdi, r14	      1027	string2.h	FUNCTION_74	WHILE_1
0x4003773	            0xeba0	                           jmp 0x4003715	      1027	string2.h	FUNCTION_74	WHILE_1
skip_blank_lines	SWITCH,0:DO,0:functions,0:CALL,2:WHILE,0:IF,2:FOR,1:ELSE,0	33
0x40015b0	          0x4889f8	                            mov rax, rdi	       524	pretty.c	WHILE_3	FUNCTION_21
0x40015b3	       0xf1f440000	                   nop dword [rax + rax]	       524	pretty.c	WHILE_3	FUNCTION_21
0x40015b8	          0x4889c2	                            mov rdx, rax	       524	pretty.c	WHILE_3	FUNCTION_21
0x40015bb	            0x31f6	                            xor esi, esi	       191	pretty.c	WHILE_3	FUNCTION_8
0x40015bd	            0xeb09	                           jmp 0x40015c8	       191	pretty.c	WHILE_3	FUNCTION_8
0x40015bf	              0x90	                                     nop	       191	pretty.c	WHILE_3	FUNCTION_8
0x40015c0	          0x83c601	                              add esi, 1	       197	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40015c3	          0x80f90a	                             cmp cl, 0xa	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x40015c6	            0x7410	                            je 0x40015d8	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x40015c8	        0x4883c201	                              add rdx, 1	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40015cc	         0xfb64aff	               movzx ecx, byte [rdx - 1]	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40015d0	            0x84c9	                             test cl, cl	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x40015d2	            0x75ec	                           jne 0x40015c0	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x40015d4	            0x85f6	                           test esi, esi	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x40015d6	            0x743a	                            je 0x4001612	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x40015d8	          0x4863fe	                         movsxd rdi, esi	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x40015db	          0x83ee01	                              sub esi, 1	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x40015de	        0x488d4ffe	                      lea rcx, [rdi - 2]	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x40015e2	      0x488d5438ff	                lea rdx, [rax + rdi - 1]	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x40015e7	          0x4829f1	                            sub rcx, rsi	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x40015ea	          0x4889ce	                            mov rsi, rcx	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x40015ed	          0x4801c6	                            add rsi, rax	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x40015f0	           0xfb60a	                   movzx ecx, byte [rdx]	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x40015f3	    0xf68100000000	                      test byte [rcx], 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x40015fa	            0x7414	                            je 0x4001610	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x40015fc	        0x4883ea01	                              sub rdx, 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4001600	          0x4839d6	                            cmp rsi, rdx	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4001603	            0x75eb	                           jne 0x40015f0	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4001605	          0x4801f8	                            add rax, rdi	       532	pretty.c	WHILE_3	FUNCTION_21	FOR_1
0x4001608	            0xebae	                           jmp 0x40015b8	       533	pretty.c	WHILE_3	FUNCTION_21	FOR_1
0x400160a	    0x660f1f440000	                    nop word [rax + rax]	       533	pretty.c	WHILE_3	FUNCTION_21	FOR_1
0x4001610	            0xf3c3	                                     ret	       533	pretty.c	WHILE_3	FUNCTION_21	FOR_1
0x4001612	            0xf3c3	                                     ret	       535	pretty.c	WHILE_3	FUNCTION_21
format_commit_item	SWITCH,1:DO,0:functions,0:CALL,5:WHILE,1:IF,7:FOR,0:ELSE,3	300
0x4002ad0	            0x4157	                                push r15	      1432	pretty.c	FUNCTION_41
0x4002ad2	            0x4156	                                push r14	      1432	pretty.c	FUNCTION_41
0x4002ad4	          0x4989f7	                            mov r15, rsi	      1432	pretty.c	FUNCTION_41
0x4002ad7	            0x4155	                                push r13	      1432	pretty.c	FUNCTION_41
0x4002ad9	            0x4154	                                push r12	      1432	pretty.c	FUNCTION_41
0x4002adb	          0x4989fd	                            mov r13, rdi	      1432	pretty.c	FUNCTION_41
0x4002ade	              0x55	                                push rbp	      1432	pretty.c	FUNCTION_41
0x4002adf	              0x53	                                push rbx	      1432	pretty.c	FUNCTION_41
0x4002ae0	          0x4989d4	                            mov r12, rdx	      1432	pretty.c	FUNCTION_41
0x4002ae3	        0x4883ec48	                           sub rsp, 0x48	      1432	pretty.c	FUNCTION_41
0x4002ae7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1432	pretty.c	FUNCTION_41
0x4002af0	      0x4889442438	             mov qword [rsp + 0x38], rax	      1432	pretty.c	FUNCTION_41
0x4002af5	            0x31c0	                            xor eax, eax	      1432	pretty.c	FUNCTION_41
0x4002af7	           0xfb606	                   movzx eax, byte [rsi]	      1432	pretty.c	FUNCTION_41
0x4002afa	    0xc70424000000	                      mov dword [rsp], 0	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002b01	          0x83e820	                           sub eax, 0x20	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002b04	            0x3c0d	                             cmp al, 0xd	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002b06	            0x7714	                            ja 0x4002b1c	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002b08	           0xfb6c0	                           movzx eax, al	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002b0b	    0x8b0485000000	                  mov eax, dword [rax*4]	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002b12	          0x83f801	                              cmp eax, 1	      1456	pretty.c	FUNCTION_41	IF_1
0x4002b15	          0x890424	                    mov dword [rsp], eax	      1456	pretty.c	FUNCTION_41	IF_1
0x4002b18	        0x4983dfff	             sbb r15, 0xffffffffffffffff	      1456	pretty.c	FUNCTION_41	IF_1
0x4002b1c	      0x418b542448	            mov edx, dword [r12 + 0x48] 	      1459	pretty.c	FUNCTION_41	IF_2
0x4002b21	        0x498b4508	                mov rax, qword [r13 + 8]	      1458	pretty.c	FUNCTION_41
0x4002b25	            0x85d2	                           test edx, edx	      1459	pretty.c	FUNCTION_41	IF_2
0x4002b27	      0x4889442410	             mov qword [rsp + 0x10], rax	      1458	pretty.c	FUNCTION_41
0x4002b2c	     0xf84de000000	                            je 0x4002c10	      1459	pretty.c	FUNCTION_41	IF_2
0x4002b32	      0x458b74247c	           mov r14d, dword [r12 + 0x7c] 	      1332	pretty.c	WHILE_3	FUNCTION_40
0x4002b37	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1331	pretty.c	WHILE_3	FUNCTION_40
0x4002b40	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1331	pretty.c	WHILE_3	FUNCTION_40
0x4002b49	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1331	pretty.c	WHILE_3	FUNCTION_40
0x4002b52	          0x4585f6	                         test r14d, r14d	      1333	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4002b55	     0xf88bd020000	                            js 0x4002e18	      1333	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4002b5b	            0x31db	                            xor ebx, ebx	      1336	pretty.c	WHILE_3	FUNCTION_40	IF_1	IF_2
0x4002b5d	            0xeb13	                           jmp 0x4002b72	      1336	pretty.c	WHILE_3	FUNCTION_40	IF_1	IF_2
0x4002b5f	              0x90	                                     nop	      1336	pretty.c	WHILE_3	FUNCTION_40	IF_1	IF_2
0x4002b60	            0x4898	                                    cdqe	      1350	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002b62	        0x498d3407	                    lea rsi, [r15 + rax]	      1350	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002b66	          0x803e25	                    cmp byte [rsi], 0x25	      1351	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	IF_4
0x4002b69	            0x7523	                           jne 0x4002b8e	      1351	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	IF_4
0x4002b6b	        0x4c8d7e01	                      lea r15, [rsi + 1]	      1353	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002b6f	          0x83c301	                              add ebx, 1	      1354	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002b72	        0x410fb62f	                   movzx ebp, byte [r15]	      1343	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002b76	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1344	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	CALL_3
0x4002b7b	          0x4c89e2	                            mov rdx, r12	      1344	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	CALL_3
0x4002b7e	          0x4c89fe	                            mov rsi, r15	      1344	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	CALL_3
0x4002b81	      0xe81aeeffff	              call sym.format_commit_one	      1344	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	CALL_3
0x4002b86	             0x1c3	                            add ebx, eax	      1345	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002b88	        0x4080fd43	                           cmp bpl, 0x43	      1347	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	IF_3
0x4002b8c	            0x74d2	                            je 0x4002b60	      1347	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	IF_3
0x4002b8e	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1356	pretty.c	WHILE_3	FUNCTION_40	CALL_4
0x4002b93	      0xba01000000	                              mov edx, 1	      1356	pretty.c	WHILE_3	FUNCTION_40	CALL_4
0x4002b98	      0xbeffffffff	                     mov esi, 0xffffffff	      1356	pretty.c	WHILE_3	FUNCTION_40	CALL_4
0x4002b9d	      0xe800000000	                          call 0x4002ba2	      1356	pretty.c	WHILE_3	FUNCTION_40	CALL_4
0x4002ba2	        0x89442404	                mov dword [rsp + 4], eax	      1356	pretty.c	WHILE_3	FUNCTION_40	CALL_4
0x4002ba6	      0x418b442448	            mov eax, dword [r12 + 0x48] 	      1358	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002bab	          0x83f803	                              cmp eax, 3	      1358	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002bae	     0xf849c010000	                            je 0x4002d50	      1358	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002bb4	      0x4439742404	               cmp dword [rsp + 4], r14d	      1387	pretty.c	FUNCTION_40	IF_9
0x4002bb9	     0xf8fc1000000	                            jg 0x4002c80	      1387	pretty.c	FUNCTION_40	IF_9
0x4002bbf	          0x83f802	                              cmp eax, 2	      1411	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002bc2	        0x458b7d08	               mov r15d, dword [r13 + 8]	      1410	pretty.c	FUNCTION_40	ELSE_1
0x4002bc6	     0xf843a030000	                            je 0x4002f06	      1411	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002bcc	      0x442b742404	               sub r14d, dword [rsp + 4]	      1414	pretty.c	FUNCTION_40	ELSE_1	ELSE_2	IF_11
0x4002bd1	            0x31ed	                            xor ebp, ebp	      1413	pretty.c	FUNCTION_40	ELSE_1	ELSE_2	IF_11
0x4002bd3	          0x83f804	                              cmp eax, 4	      1413	pretty.c	FUNCTION_40	ELSE_1	ELSE_2	IF_11
0x4002bd6	     0xf8471030000	                            je 0x4002f4d	      1413	pretty.c	FUNCTION_40	ELSE_1	ELSE_2	IF_11
0x4002bdc	      0x4403742428	            add r14d, dword [rsp + 0x28]	      1420	pretty.c	FUNCTION_40	ELSE_1	CALL_12
0x4002be1	          0x4c89ef	                            mov rdi, r13	      1420	pretty.c	FUNCTION_40	ELSE_1	CALL_12
0x4002be4	      0xbe20000000	                           mov esi, 0x20	      1420	pretty.c	FUNCTION_40	ELSE_1	CALL_12
0x4002be9	          0x4963d6	                        movsxd rdx, r14d	      1420	pretty.c	FUNCTION_40	ELSE_1	CALL_12
0x4002bec	      0xe800000000	                          call 0x4002bf1	      1420	pretty.c	FUNCTION_40	ELSE_1	CALL_12
0x4002bf1	          0x4963ff	                        movsxd rdi, r15d	        53	string3.h	FUNCTION_83	CALL_3
0x4002bf4	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_83	CALL_3
0x4002bf9	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_83	CALL_3
0x4002bfe	          0x4801ef	                            add rdi, rbp	        53	string3.h	FUNCTION_83	CALL_3
0x4002c01	        0x49037d10	             add rdi, qword [r13 + 0x10]	        53	string3.h	FUNCTION_83	CALL_3
0x4002c05	      0xe800000000	                          call 0x4002c0a	        53	string3.h	FUNCTION_83	CALL_3
0x4002c0a	      0xe9b6000000	                           jmp 0x4002cc5	        53	string3.h	FUNCTION_83	CALL_3
0x4002c0f	              0x90	                                     nop	        53	string3.h	FUNCTION_83	CALL_3
0x4002c10	          0x4c89e2	                            mov rdx, r12	      1462	pretty.c	FUNCTION_41	CALL_2
0x4002c13	          0x4c89fe	                            mov rsi, r15	      1462	pretty.c	FUNCTION_41	CALL_2
0x4002c16	          0x4c89ef	                            mov rdi, r13	      1462	pretty.c	FUNCTION_41	CALL_2
0x4002c19	      0xe882edffff	              call sym.format_commit_one	      1462	pretty.c	FUNCTION_41	CALL_2
0x4002c1e	            0x89c3	                            mov ebx, eax	      1462	pretty.c	FUNCTION_41	CALL_2
0x4002c20	          0x8b0424	                    mov eax, dword [rsp]	      1463	pretty.c	FUNCTION_41	IF_3
0x4002c23	            0x85c0	                           test eax, eax	      1463	pretty.c	FUNCTION_41	IF_3
0x4002c25	     0xf84b8000000	                            je 0x4002ce3	      1463	pretty.c	FUNCTION_41	IF_3
0x4002c2b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1466	pretty.c	FUNCTION_41	IF_4
0x4002c30	        0x493b4508	                cmp rax, qword [r13 + 8]	      1466	pretty.c	FUNCTION_41	IF_4
0x4002c34	     0xf84b6000000	                            je 0x4002cf0	      1466	pretty.c	FUNCTION_41	IF_4
0x4002c3a	        0x833c2401	                      cmp dword [rsp], 1	      1470	pretty.c	FUNCTION_41	ELSE_2	IF_5	IF_6
0x4002c3e	     0xf84ed020000	                            je 0x4002f31	      1470	pretty.c	FUNCTION_41	ELSE_2	IF_5	IF_6
0x4002c44	        0x833c2403	                      cmp dword [rsp], 3	      1472	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002c48	     0xf840c030000	                            je 0x4002f5a	      1472	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002c4e	        0x448d4b01	                      lea r9d, [rbx + 1]	      1475	pretty.c	FUNCTION_41
0x4002c52	          0x4963c1	                         movsxd rax, r9d	      1475	pretty.c	FUNCTION_41
0x4002c55	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1476	pretty.c	FUNCTION_41
0x4002c5a	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1476	pretty.c	FUNCTION_41
0x4002c63	     0xf854c030000	                           jne 0x4002fb5	      1476	pretty.c	FUNCTION_41
0x4002c69	        0x4883c448	                           add rsp, 0x48	      1476	pretty.c	FUNCTION_41
0x4002c6d	              0x5b	                                 pop rbx	      1476	pretty.c	FUNCTION_41
0x4002c6e	              0x5d	                                 pop rbp	      1476	pretty.c	FUNCTION_41
0x4002c6f	            0x415c	                                 pop r12	      1476	pretty.c	FUNCTION_41
0x4002c71	            0x415d	                                 pop r13	      1476	pretty.c	FUNCTION_41
0x4002c73	            0x415e	                                 pop r14	      1476	pretty.c	FUNCTION_41
0x4002c75	            0x415f	                                 pop r15	      1476	pretty.c	FUNCTION_41
0x4002c77	              0xc3	                                     ret	      1476	pretty.c	FUNCTION_41
0x4002c78	     0xf1f84000000	                   nop dword [rax + rax]	      1476	pretty.c	FUNCTION_41
0x4002c80	      0x418b44244c	            mov eax, dword [r12 + 0x4c] 	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002c85	          0x83f802	                              cmp eax, 2	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002c88	     0xf84ca010000	                            je 0x4002e58	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002c8e	          0x83f803	                              cmp eax, 3	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002c91	     0xf847c020000	                            je 0x4002f13	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002c97	          0x83f801	                              cmp eax, 1	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002c9a	            0x751c	                           jne 0x4002cb8	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002c9c	        0x8b542404	                mov edx, dword [rsp + 4]	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002ca0	        0x4183ee02	                             sub r14d, 2	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002ca4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002ca9	      0xb900000000	                              mov ecx, 0	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002cae	            0x31f6	                            xor esi, esi	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002cb0	          0x4429f2	                           sub edx, r14d	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002cb3	      0xe800000000	                          call 0x4002cb8	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002cb8	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1408	pretty.c	FUNCTION_40	IF_9	CALL_11
0x4002cbd	          0x4c89ef	                            mov rdi, r13	      1408	pretty.c	FUNCTION_40	IF_9	CALL_11
0x4002cc0	      0xe800000000	                          call 0x4002cc5	      1408	pretty.c	FUNCTION_40	IF_9	CALL_11
0x4002cc5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1424	pretty.c	FUNCTION_40	CALL_14
0x4002cca	      0xe800000000	                          call 0x4002ccf	      1424	pretty.c	FUNCTION_40	CALL_14
0x4002ccf	          0x8b0424	                    mov eax, dword [rsp]	      1463	pretty.c	FUNCTION_41	IF_3
0x4002cd2	    0x41c744244800	               mov dword [r12 + 0x48], 0	      1425	pretty.c	FUNCTION_40
0x4002cdb	            0x85c0	                           test eax, eax	      1463	pretty.c	FUNCTION_41	IF_3
0x4002cdd	     0xf8548ffffff	                           jne 0x4002c2b	      1463	pretty.c	FUNCTION_41	IF_3
0x4002ce3	          0x4863c3	                         movsxd rax, ebx	      1464	pretty.c	FUNCTION_41	IF_3
0x4002ce6	      0xe96affffff	                           jmp 0x4002c55	      1464	pretty.c	FUNCTION_41	IF_3
0x4002ceb	       0xf1f440000	                   nop dword [rax + rax]	      1464	pretty.c	FUNCTION_41	IF_3
0x4002cf0	        0x833c2402	                      cmp dword [rsp], 2	      1466	pretty.c	FUNCTION_41	IF_4
0x4002cf4	     0xf8554ffffff	                           jne 0x4002c4e	      1466	pretty.c	FUNCTION_41	IF_4
0x4002cfa	          0x4885c0	                           test rax, rax	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002cfd	     0xf844bffffff	                            je 0x4002c4e	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002d03	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002d07	        0x4883e801	                              sub rax, 1	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002d0b	        0x488d3401	                    lea rsi, [rcx + rax]	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002d0f	          0x803e0a	                     cmp byte [rsi], 0xa	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002d12	     0xf8536ffffff	                           jne 0x4002c4e	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002d18	        0x498b5500	                    mov rdx, qword [r13]	       162	strbuf.h	FUNCTION_56	IF_1
0x4002d1c	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_56	IF_1
0x4002d20	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_56	IF_1
0x4002d24	          0x4839d0	                            cmp rax, rdx	       162	strbuf.h	FUNCTION_56	IF_1
0x4002d27	     0xf877c020000	                            ja 0x4002fa9	       162	strbuf.h	FUNCTION_56	IF_1
0x4002d2d	    0x4881f9000000	                              cmp rcx, 0	       165	strbuf.h	FUNCTION_56	IF_2
0x4002d34	        0x49894508	                mov qword [r13 + 8], rax	       164	strbuf.h	FUNCTION_56
0x4002d38	     0xf8457010000	                            je 0x4002e95	       165	strbuf.h	FUNCTION_56	IF_2
0x4002d3e	          0xc60600	                       mov byte [rsi], 0	       166	strbuf.h	FUNCTION_56	IF_2
0x4002d41	        0x498b4508	                mov rax, qword [r13 + 8]	       166	strbuf.h	FUNCTION_56	IF_2
0x4002d45	          0x4885c0	                           test rax, rax	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002d48	            0x75b9	                           jne 0x4002d03	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002d4a	      0xe9fffeffff	                           jmp 0x4002c4e	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002d4f	              0x90	                                     nop	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002d50	      0x4439742404	               cmp dword [rsp + 4], r14d	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002d55	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1359	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002d59	        0x498b5508	                mov rdx, qword [r13 + 8]	      1359	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002d5d	          0x4889c1	                            mov rcx, rax	      1359	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002d60	      0x4c8d7c10ff	                lea r15, [rax + rdx - 1]	      1359	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002d65	     0xf8e0b020000	                           jle 0x4002f76	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002d6b	       0xf1f440000	                   nop dword [rax + rax]	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002d70	          0x4c39f8	                            cmp rax, r15	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002d73	     0xf83fd010000	                           jae 0x4002f76	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002d79	        0x410fb607	                   movzx eax, byte [r15]	      1362	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4002d7d	            0x3c20	                            cmp al, 0x20	      1362	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4002d7f	     0xf8403010000	                            je 0x4002e88	      1362	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4002d85	            0x3c6d	                            cmp al, 0x6d	      1368	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_7
0x4002d87	     0xf8523010000	                           jne 0x4002eb0	      1368	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_7
0x4002d8d	      0x41807fff1b	                cmp byte [r15 - 1], 0x1b	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002d92	        0x498d6fff	                      lea rbp, [r15 - 1]	      1370	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002d96	            0x750e	                           jne 0x4002da6	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002d98	            0xeb26	                           jmp 0x4002dc0	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002d9a	    0x660f1f440000	                    nop word [rax + rax]	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002da0	        0x807d001b	                    cmp byte [rbp], 0x1b	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002da4	            0x741a	                            je 0x4002dc0	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002da6	        0x4883ed01	                              sub rbp, 1	      1372	pretty.c	FUNCTION_40	IF_5	WHILE_2
0x4002daa	          0x4c89f8	                            mov rax, r15	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002dad	          0x4829e8	                            sub rax, rbp	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002db0	        0x4883f809	                              cmp rax, 9	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002db4	            0x7eea	                           jle 0x4002da0	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002db6	        0x807d001b	                    cmp byte [rbp], 0x1b	      1373	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8
0x4002dba	     0xf85f0000000	                           jne 0x4002eb0	      1373	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8
0x4002dc0	        0x498d4701	                      lea rax, [r15 + 1]	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002dc4	          0x4889ef	                            mov rdi, rbp	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002dc7	          0x4889c1	                            mov rcx, rax	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002dca	      0x4889442418	             mov qword [rsp + 0x18], rax	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002dcf	          0x4829e9	                            sub rcx, rbp	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002dd2	      0x48894c2408	                mov qword [rsp + 8], rcx	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002dd7	      0xe800000000	                          call 0x4002ddc	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002ddc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1373	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8
0x4002de1	          0x4839c1	                            cmp rcx, rax	      1373	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8
0x4002de4	     0xf85b6010000	                           jne 0x4002fa0	      1373	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8
0x4002dea	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1380	pretty.c	FUNCTION_40	IF_5	WHILE_2	CALL_6
0x4002def	          0x4889ea	                            mov rdx, rbp	      1380	pretty.c	FUNCTION_40	IF_5	WHILE_2	CALL_6
0x4002df2	            0x31f6	                            xor esi, esi	      1380	pretty.c	FUNCTION_40	IF_5	WHILE_2	CALL_6
0x4002df4	        0x4c8d7dff	                      lea r15, [rbp - 1]	      1381	pretty.c	FUNCTION_40	IF_5	WHILE_2
0x4002df8	      0xe800000000	                          call 0x4002dfd	      1380	pretty.c	FUNCTION_40	IF_5	WHILE_2	CALL_6
0x4002dfd	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      1380	pretty.c	FUNCTION_40	IF_5	WHILE_2	CALL_6
0x4002e01	      0x4439742404	               cmp dword [rsp + 4], r14d	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002e06	     0xf8ea4000000	                           jle 0x4002eb0	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002e0c	          0x4889c8	                            mov rax, rcx	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002e0f	      0xe95cffffff	                           jmp 0x4002d70	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002e14	         0xf1f4000	                         nop dword [rax]	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002e18	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      1334	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_1
0x4002e1c	      0xbe0a000000	                            mov esi, 0xa	      1334	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_1
0x4002e21	          0x4889df	                            mov rdi, rbx	      1334	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_1
0x4002e24	      0xe800000000	                          call 0x4002e29	      1334	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_1
0x4002e29	          0x4885c0	                           test rax, rax	      1336	pretty.c	WHILE_3	FUNCTION_40	IF_1	IF_2
0x4002e2c	      0xba01000000	                              mov edx, 1	      1338	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_2
0x4002e31	      0xbeffffffff	                     mov esi, 0xffffffff	      1338	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_2
0x4002e36	        0x480f44c3	                          cmove rax, rbx	      1336	pretty.c	WHILE_3	FUNCTION_40	IF_1	IF_2
0x4002e3a	          0x41f7de	                                neg r14d	      1340	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4002e3d	          0x4889c7	                            mov rdi, rax	      1338	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_2
0x4002e40	      0xe800000000	                          call 0x4002e45	      1338	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_2
0x4002e45	      0x498b542408	                mov rdx, qword [r12 + 8]	      1339	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4002e4a	     0x38298000000	             add eax, dword [rdx + 0x98]	      1340	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4002e50	          0x4129c6	                           sub r14d, eax	      1340	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4002e53	      0xe903fdffff	                           jmp 0x4002b5b	      1340	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4002e58	          0x4489f6	                           mov esi, r14d	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e5b	        0x8b542404	                mov edx, dword [rsp + 4]	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e5f	        0x418d46fe	                      lea eax, [r14 - 2]	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e63	          0xc1ee1f	                           shr esi, 0x1f	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e66	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e6b	      0xb900000000	                              mov ecx, 0	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e70	          0x4401f6	                           add esi, r14d	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e73	            0xd1fe	                              sar esi, 1	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e75	            0x29c2	                            sub edx, eax	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e77	          0x83ee01	                              sub esi, 1	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e7a	      0xe800000000	                          call 0x4002e7f	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e7f	      0xe934feffff	                           jmp 0x4002cb8	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e84	         0xf1f4000	                         nop dword [rax]	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4002e88	        0x4983ef01	                              sub r15, 1	      1363	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4002e8c	        0x4183c601	                             add r14d, 1	      1364	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4002e90	      0xe96cffffff	                           jmp 0x4002e01	      1364	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4002e95	    0x803d00000000	                cmp byte [0x04002e9c], 0	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002e9c	     0xf8458feffff	                            je 0x4002cfa	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002ea2	      0xe9ea000000	                           jmp 0x4002f91	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002ea7	    0x660f1f840000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002eb0	        0x498d4701	                      lea rax, [r15 + 1]	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002eb4	      0x4889442418	             mov qword [rsp + 0x18], rax	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002eb9	          0x4889c8	                            mov rax, rcx	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002ebc	        0x498b4d00	                    mov rcx, qword [r13]	       162	strbuf.h	FUNCTION_56	IF_1
0x4002ec0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1383	pretty.c	FUNCTION_40	IF_5	CALL_7
0x4002ec5	          0x4829c2	                            sub rdx, rax	      1383	pretty.c	FUNCTION_40	IF_5	CALL_7
0x4002ec8	        0x4883f901	                              cmp rcx, 1	       162	strbuf.h	FUNCTION_56	IF_1
0x4002ecc	        0x4883d1ff	             adc rcx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_56	IF_1
0x4002ed0	          0x4839ca	                            cmp rdx, rcx	       162	strbuf.h	FUNCTION_56	IF_1
0x4002ed3	     0xf87d0000000	                            ja 0x4002fa9	       162	strbuf.h	FUNCTION_56	IF_1
0x4002ed9	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_56	IF_2
0x4002edf	        0x49895508	                mov qword [r13 + 8], rdx	       164	strbuf.h	FUNCTION_56
0x4002ee3	     0xf849b000000	                            je 0x4002f84	       165	strbuf.h	FUNCTION_56	IF_2
0x4002ee9	      0x41c6470100	                   mov byte [r15 + 1], 0	       166	strbuf.h	FUNCTION_56	IF_2
0x4002eee	      0x4439742404	               cmp dword [rsp + 4], r14d	      1387	pretty.c	FUNCTION_40	IF_9
0x4002ef3	    0x41c744244802	               mov dword [r12 + 0x48], 2	      1384	pretty.c	FUNCTION_40	IF_5
0x4002efc	     0xf8f7efdffff	                            jg 0x4002c80	      1387	pretty.c	FUNCTION_40	IF_9
0x4002f02	        0x458b7d08	               mov r15d, dword [r13 + 8]	      1410	pretty.c	FUNCTION_40	ELSE_1
0x4002f06	      0x442b742404	               sub r14d, dword [rsp + 4]	      1412	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002f0b	          0x4963ee	                        movsxd rbp, r14d	      1412	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002f0e	      0xe9c9fcffff	                           jmp 0x4002bdc	      1412	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002f13	        0x8b542404	                mov edx, dword [rsp + 4]	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x4002f17	        0x418d76fe	                      lea esi, [r14 - 2]	      1402	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002f1b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x4002f20	      0xb900000000	                              mov ecx, 0	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x4002f25	            0x29f2	                            sub edx, esi	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x4002f27	      0xe800000000	                          call 0x4002f2c	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x4002f2c	      0xe987fdffff	                           jmp 0x4002cb8	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x4002f31	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4002f36	      0xb901000000	                              mov ecx, 1	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4002f3b	      0xba00000000	                              mov edx, 0	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4002f40	          0x4c89ef	                            mov rdi, r13	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4002f43	      0xe800000000	                          call 0x4002f48	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4002f48	      0xe901fdffff	                           jmp 0x4002c4e	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4002f4d	          0x4489f5	                           mov ebp, r14d	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4002f50	            0xd1fd	                              sar ebp, 1	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4002f52	          0x4863ed	                         movsxd rbp, ebp	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4002f55	      0xe982fcffff	                           jmp 0x4002bdc	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4002f5a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002f5f	      0xb901000000	                              mov ecx, 1	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002f64	      0xba00000000	                              mov edx, 0	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002f69	          0x4c89ef	                            mov rdi, r13	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002f6c	      0xe800000000	                          call 0x4002f71	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002f71	      0xe9d8fcffff	                           jmp 0x4002c4e	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002f76	        0x498d7f01	                      lea rdi, [r15 + 1]	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002f7a	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002f7f	      0xe938ffffff	                           jmp 0x4002ebc	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002f84	    0x803d00000000	                cmp byte [0x04002f8b], 0	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002f8b	     0xf845dffffff	                            je 0x4002eee	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002f91	      0xe800000000	                          call 0x4002f96	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002f96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002fa0	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002fa4	      0xe913ffffff	                           jmp 0x4002ebc	       168	strbuf.h	FUNCTION_56	CALL_2
0x4002fa9	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_56	CALL_1
0x4002fae	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_56	CALL_1
0x4002fb0	      0xe800000000	                          call 0x4002fb5	       163	strbuf.h	FUNCTION_56	CALL_1
0x4002fb5	      0xe800000000	                          call 0x4002fba	      1476	pretty.c	FUNCTION_41
pp_title_line	SWITCH,0:DO,0:functions,0:CALL,20:WHILE,0:IF,9:FOR,2:ELSE,2	227
0x4003220	            0x4157	                                push r15	      1613	pretty.c	FUNCTION_46
0x4003222	            0x4156	                                push r14	      1613	pretty.c	FUNCTION_46
0x4003224	          0x4989f6	                            mov r14, rsi	      1613	pretty.c	FUNCTION_46
0x4003227	            0x4155	                                push r13	      1613	pretty.c	FUNCTION_46
0x4003229	            0x4154	                                push r12	      1613	pretty.c	FUNCTION_46
0x400322b	      0xbe50000000	                           mov esi, 0x50	      1617	pretty.c	FUNCTION_46	CALL_1
0x4003230	              0x55	                                push rbp	      1613	pretty.c	FUNCTION_46
0x4003231	              0x53	                                push rbx	      1613	pretty.c	FUNCTION_46
0x4003232	          0x4889fb	                            mov rbx, rdi	      1613	pretty.c	FUNCTION_46
0x4003235	          0x4889cd	                            mov rbp, rcx	      1613	pretty.c	FUNCTION_46
0x4003238	          0x4989d4	                            mov r12, rdx	      1613	pretty.c	FUNCTION_46
0x400323b	          0x4589c5	                           mov r13d, r8d	      1613	pretty.c	FUNCTION_46
0x400323e	        0x4883ec28	                           sub rsp, 0x28	      1613	pretty.c	FUNCTION_46
0x4003242	          0x4889e7	                            mov rdi, rsp	      1617	pretty.c	FUNCTION_46	CALL_1
0x4003245	    0x64488b042528	                mov rax, qword fs:[0x28]	      1613	pretty.c	FUNCTION_46
0x400324e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1613	pretty.c	FUNCTION_46
0x4003253	            0x31c0	                            xor eax, eax	      1613	pretty.c	FUNCTION_46
0x4003255	      0xe800000000	                          call 0x400325a	      1617	pretty.c	FUNCTION_46	CALL_1
0x400325a	          0x8b5310	            mov edx, dword [rbx + 0x10] 	      1618	pretty.c	FUNCTION_46	CALL_2
0x400325d	          0x498b36	                    mov rsi, qword [r14]	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003260	      0xb800000000	                              mov eax, 0	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003265	          0x4889e7	                            mov rdi, rsp	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003268	            0x85d2	                           test edx, edx	      1618	pretty.c	FUNCTION_46	CALL_2
0x400326a	      0xba00000000	                              mov edx, 0	      1618	pretty.c	FUNCTION_46	CALL_2
0x400326f	        0x480f44d0	                          cmove rdx, rax	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003273	      0xe800000000	                          call 0x4003278	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003278	          0x498906	                    mov qword [r14], rax	      1618	pretty.c	FUNCTION_46	CALL_2
0x400327b	      0x488b442408	                mov rax, qword [rsp + 8]	      1621	pretty.c	FUNCTION_46	CALL_3
0x4003280	          0x4c89e7	                            mov rdi, r12	      1621	pretty.c	FUNCTION_46	CALL_3
0x4003283	    0x488db0000400	                  lea rsi, [rax + 0x400]	      1621	pretty.c	FUNCTION_46	CALL_3
0x400328a	      0xe800000000	                          call 0x400328f	      1621	pretty.c	FUNCTION_46	CALL_3
0x400328f	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1622	pretty.c	FUNCTION_46	IF_1
0x4003292	            0x85c9	                           test ecx, ecx	      1622	pretty.c	FUNCTION_46	IF_1
0x4003294	     0xf8468020000	                            je 0x4003502	      1622	pretty.c	FUNCTION_46	IF_1
0x400329a	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1623	pretty.c	FUNCTION_46	IF_1	IF_2
0x400329e	          0x4885f6	                           test rsi, rsi	      1623	pretty.c	FUNCTION_46	IF_1	IF_2
0x40032a1	            0x7408	                            je 0x40032ab	      1623	pretty.c	FUNCTION_46	IF_1	IF_2
0x40032a3	          0x4c89e7	                            mov rdi, r12	      1624	pretty.c	FUNCTION_46	IF_1	CALL_4
0x40032a6	      0xe800000000	                          call 0x40032ab	      1624	pretty.c	FUNCTION_46	IF_1	CALL_4
0x40032ab	      0x4c8b742408	                mov r14, qword [rsp + 8]	      1625	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x40032b0	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1625	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x40032b5	          0x4489f6	                           mov esi, r14d	      1625	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x40032b8	          0x4c89ff	                            mov rdi, r15	      1625	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x40032bb	      0xe8a0d4ffff	  call sym.needs_rfc2047_encoding.isra.2	      1625	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x40032c0	            0x85c0	                           test eax, eax	      1625	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x40032c2	     0xf854a020000	                           jne 0x4003512	      1625	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x40032c8	      0x418b442408	                mov eax, dword [r12 + 8]	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40032cd	          0x8d50ff	                      lea edx, [rax - 1]	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40032d0	            0x85d2	                           test edx, edx	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40032d2	            0x89d1	                            mov ecx, edx	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40032d4	            0x7823	                            js 0x40032f9	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40032d6	          0x4863c2	                         movsxd rax, edx	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40032d9	      0x4903442410	             add rax, qword [r12 + 0x10]	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40032de	          0x80380a	                     cmp byte [rax], 0xa	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40032e1	            0x750e	                           jne 0x40032f1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40032e3	            0xeb14	                           jmp 0x40032f9	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40032e5	           0xf1f00	                         nop dword [rax]	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40032e8	        0x4883e801	                              sub rax, 1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40032ec	          0x80380a	                     cmp byte [rax], 0xa	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40032ef	            0x7408	                            je 0x40032f9	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40032f1	          0x83e901	                              sub ecx, 1	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40032f4	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40032f7	            0x75ef	                           jne 0x40032e8	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40032f9	            0x29d1	                            sub ecx, edx	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x40032fb	    0x41b94e000000	                           mov r9d, 0x4e	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x4003301	    0x41b801000000	                              mov r8d, 1	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x4003307	          0x4489f2	                           mov edx, r14d	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x400330a	          0x4c89fe	                            mov rsi, r15	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x400330d	          0x4c89e7	                            mov rdi, r12	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x4003310	      0xe800000000	                          call 0x4003315	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x4003315	        0x498b0424	                    mov rax, qword [r12]	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x4003319	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x400331c	     0xf8596010000	                           jne 0x40034b8	       141	strbuf.h	FUNCTION_55
0x4003322	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003327	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_57	CALL_2
0x400332a	      0xe800000000	                          call 0x400332f	       228	strbuf.h	FUNCTION_57	CALL_2
0x400332f	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003334	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4003339	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x400333d	        0x4183fd00	                             cmp r13d, 0	      1636	pretty.c	FUNCTION_46	IF_4
0x4003341	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4003346	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_57
0x400334a	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x400334f	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_57
0x4003354	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4003358	     0xf854f010000	                           jne 0x40034ad	      1636	pretty.c	FUNCTION_46	IF_4
0x400335e	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003364	            0x85c0	                           test eax, eax	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003366	            0x7455	                            je 0x40033bd	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003368	          0x8d78ff	                      lea edi, [rax - 1]	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x400336b	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x400336f	        0x4883c701	                              add rdi, 1	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003373	        0x48c1e704	                              shl rdi, 4	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003377	          0x4801f7	                            add rdi, rsi	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x400337a	    0x660f1f440000	                    nop word [rax + rax]	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003380	          0x488b06	                    mov rax, qword [rsi]	      1639	pretty.c	FUNCTION_46	IF_4	FOR_1	IF_5	CALL_11
0x4003383	          0x4885c0	                           test rax, rax	       213	pretty.c	WHILE_3	FUNCTION_10	IF_1
0x4003386	     0xf8464010000	                            je 0x40034f0	       213	pretty.c	WHILE_3	FUNCTION_10	IF_1
0x400338c	         0xf1f4000	                         nop dword [rax]	       213	pretty.c	WHILE_3	FUNCTION_10	IF_1
0x4003390	        0x4883c001	                              add rax, 1	       215	pretty.c	WHILE_3	FUNCTION_10	WHILE_1
0x4003394	         0xfbe48ff	               movsx ecx, byte [rax - 1]	       215	pretty.c	WHILE_3	FUNCTION_10	WHILE_1
0x4003398	            0x85c9	                           test ecx, ecx	       215	pretty.c	WHILE_3	FUNCTION_10	WHILE_1
0x400339a	            0x89ca	                            mov edx, ecx	       215	pretty.c	WHILE_3	FUNCTION_10	WHILE_1
0x400339c	     0xf844e010000	                            je 0x40034f0	       215	pretty.c	WHILE_3	FUNCTION_10	WHILE_1
0x40033a2	            0x84d2	                             test dl, dl	       207	pretty.c	WHILE_3	FUNCTION_9
0x40033a4	            0x7805	                            js 0x40033ab	       207	pretty.c	WHILE_3	FUNCTION_9
0x40033a6	          0x83f91b	                           cmp ecx, 0x1b	       207	pretty.c	WHILE_3	FUNCTION_9
0x40033a9	            0x75e5	                           jne 0x4003390	       207	pretty.c	WHILE_3	FUNCTION_9
0x40033ab	          0x4889ea	                            mov rdx, rbp	      1651	pretty.c	FUNCTION_46	IF_6	CALL_12
0x40033ae	      0xbe00000000	                              mov esi, 0	      1651	pretty.c	FUNCTION_46	IF_6	CALL_12
0x40033b3	          0x4c89e7	                            mov rdi, r12	      1651	pretty.c	FUNCTION_46	IF_6	CALL_12
0x40033b6	            0x31c0	                            xor eax, eax	      1651	pretty.c	FUNCTION_46	IF_6	CALL_12
0x40033b8	      0xe800000000	                          call 0x40033bd	      1651	pretty.c	FUNCTION_46	IF_6	CALL_12
0x40033bd	        0x488b6b08	                mov rbp, qword [rbx + 8]	      1653	pretty.c	FUNCTION_46	IF_7
0x40033c1	          0x4885ed	                           test rbp, rbp	      1653	pretty.c	FUNCTION_46	IF_7
0x40033c4	            0x7416	                            je 0x40033dc	      1653	pretty.c	FUNCTION_46	IF_7
0x40033c6	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_58	CALL_2
0x40033c9	      0xe800000000	                          call 0x40033ce	       279	strbuf.h	FUNCTION_58	CALL_2
0x40033ce	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_58	CALL_2
0x40033d1	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x40033d4	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x40033d7	      0xe800000000	                          call 0x40033dc	       279	strbuf.h	FUNCTION_58	CALL_2
0x40033dc	            0x8b03	                    mov eax, dword [rbx]	      1656	pretty.c	FUNCTION_46	IF_8	CALL_14
0x40033de	          0x83e806	                              sub eax, 6	      1656	pretty.c	FUNCTION_46	IF_8	CALL_14
0x40033e1	          0x83f801	                              cmp eax, 1	      1656	pretty.c	FUNCTION_46	IF_8	CALL_14
0x40033e4	     0xf8641010000	                           jbe 0x400352b	      1656	pretty.c	FUNCTION_46	IF_8	CALL_14
0x40033ea	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1660	pretty.c	FUNCTION_46	IF_9
0x40033f0	            0x85c0	                           test eax, eax	      1660	pretty.c	FUNCTION_46	IF_9
0x40033f2	     0xf848a000000	                            je 0x4003482	      1660	pretty.c	FUNCTION_46	IF_9
0x40033f8	            0x31ed	                            xor ebp, ebp	      1618	pretty.c	FUNCTION_46	CALL_2
0x40033fa	          0x4531ed	                          xor r13d, r13d	      1618	pretty.c	FUNCTION_46	CALL_2
0x40033fd	           0xf1f00	                         nop dword [rax]	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003400	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1663	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_16
0x4003404	        0x4183c501	                             add r13d, 1	      1662	pretty.c	FUNCTION_46	IF_9	FOR_2
0x4003408	        0x4c8b3428	              mov r14, qword [rax + rbp]	      1663	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_16
0x400340c	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_58	CALL_2
0x400340f	      0xe800000000	                          call 0x4003414	       279	strbuf.h	FUNCTION_58	CALL_2
0x4003414	          0x4c89f6	                            mov rsi, r14	       279	strbuf.h	FUNCTION_58	CALL_2
0x4003417	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x400341a	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x400341d	      0xe800000000	                          call 0x4003422	       279	strbuf.h	FUNCTION_58	CALL_2
0x4003422	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1664	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_17
0x4003426	        0x488b3c28	              mov rdi, qword [rax + rbp]	      1664	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_17
0x400342a	        0x4883c510	                           add rbp, 0x10	      1664	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_17
0x400342e	      0xe800000000	                          call 0x4003433	      1664	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_17
0x4003433	    0x4439ab800000	           cmp dword [rbx + 0x80], r13d 	      1662	pretty.c	FUNCTION_46	IF_9	FOR_2
0x400343a	            0x77c4	                            ja 0x4003400	      1662	pretty.c	FUNCTION_46	IF_9	FOR_2
0x400343c	        0x488d7b78	                   lea rdi, [rbx + 0x78]	      1666	pretty.c	FUNCTION_46	IF_9	CALL_18
0x4003440	            0x31f6	                            xor esi, esi	      1666	pretty.c	FUNCTION_46	IF_9	CALL_18
0x4003442	      0xe800000000	                          call 0x4003447	      1666	pretty.c	FUNCTION_46	IF_9	CALL_18
0x4003447	        0x498b0424	                    mov rax, qword [r12]	      1666	pretty.c	FUNCTION_46	IF_9	CALL_18
0x400344b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x400344e	     0xf847c000000	                            je 0x40034d0	       141	strbuf.h	FUNCTION_55
0x4003454	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_55
0x4003459	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400345d	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003460	            0x746e	                            je 0x40034d0	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003462	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4003467	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x400346b	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4003470	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_57
0x4003474	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4003479	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_57
0x400347e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4003482	          0x4889e7	                            mov rdi, rsp	      1670	pretty.c	FUNCTION_46	CALL_20
0x4003485	      0xe800000000	                          call 0x400348a	      1670	pretty.c	FUNCTION_46	CALL_20
0x400348a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1671	pretty.c	FUNCTION_46
0x400348f	    0x644833042528	                xor rax, qword fs:[0x28]	      1671	pretty.c	FUNCTION_46
0x4003498	     0xf85dd000000	                           jne 0x400357b	      1671	pretty.c	FUNCTION_46
0x400349e	        0x4883c428	                           add rsp, 0x28	      1671	pretty.c	FUNCTION_46
0x40034a2	              0x5b	                                 pop rbx	      1671	pretty.c	FUNCTION_46
0x40034a3	              0x5d	                                 pop rbp	      1671	pretty.c	FUNCTION_46
0x40034a4	            0x415c	                                 pop r12	      1671	pretty.c	FUNCTION_46
0x40034a6	            0x415d	                                 pop r13	      1671	pretty.c	FUNCTION_46
0x40034a8	            0x415e	                                 pop r14	      1671	pretty.c	FUNCTION_46
0x40034aa	            0x415f	                                 pop r15	      1671	pretty.c	FUNCTION_46
0x40034ac	              0xc3	                                     ret	      1671	pretty.c	FUNCTION_46
0x40034ad	     0xf8ff8feffff	                            jg 0x40033ab	      1646	pretty.c	FUNCTION_46	IF_6
0x40034b3	      0xe905ffffff	                           jmp 0x40033bd	      1646	pretty.c	FUNCTION_46	IF_6
0x40034b8	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_55
0x40034bd	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40034c1	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40034c4	     0xf856afeffff	                           jne 0x4003334	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40034ca	      0xe953feffff	                           jmp 0x4003322	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40034cf	              0x90	                                     nop	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40034d0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x40034d5	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_57	CALL_2
0x40034d8	      0xe800000000	                          call 0x40034dd	       228	strbuf.h	FUNCTION_57	CALL_2
0x40034dd	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x40034e2	      0xe97bffffff	                           jmp 0x4003462	       228	strbuf.h	FUNCTION_57	CALL_2
0x40034e7	    0x660f1f840000	                    nop word [rax + rax]	       228	strbuf.h	FUNCTION_57	CALL_2
0x40034f0	        0x4883c610	                           add rsi, 0x10	       228	strbuf.h	FUNCTION_57	CALL_2
0x40034f4	          0x4839f7	                            cmp rdi, rsi	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x40034f7	     0xf8583feffff	                           jne 0x4003380	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x40034fd	      0xe9bbfeffff	                           jmp 0x40033bd	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003502	          0x4889e6	                            mov rsi, rsp	      1632	pretty.c	FUNCTION_46	ELSE_2	CALL_9
0x4003505	          0x4c89e7	                            mov rdi, r12	      1632	pretty.c	FUNCTION_46	ELSE_2	CALL_9
0x4003508	      0xe800000000	                          call 0x400350d	      1632	pretty.c	FUNCTION_46	ELSE_2	CALL_9
0x400350d	      0xe903feffff	                           jmp 0x4003315	      1632	pretty.c	FUNCTION_46	ELSE_2	CALL_9
0x4003512	          0x4531c0	                            xor r8d, r8d	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4003515	          0x4889e9	                            mov rcx, rbp	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4003518	          0x4c89f2	                            mov rdx, r14	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x400351b	          0x4c89fe	                            mov rsi, r15	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x400351e	          0x4c89e7	                            mov rdi, r12	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4003521	      0xe84aceffff	                    call sym.add_rfc2047	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4003526	      0xe9eafdffff	                           jmp 0x4003315	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x400352b	        0x498b1424	                    mov rdx, qword [r12]	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x400352f	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_55
0x4003532	            0x7537	                           jne 0x400356b	       141	strbuf.h	FUNCTION_55
0x4003534	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003539	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_57	CALL_2
0x400353c	      0xe800000000	                          call 0x4003541	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003541	      0x498b442408	                mov rax, qword [r12 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003546	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x400354b	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_57
0x400354f	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4003554	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_57
0x4003558	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x400355d	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_57
0x4003562	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4003566	      0xe97ffeffff	                           jmp 0x40033ea	       230	strbuf.h	FUNCTION_57
0x400356b	      0x498b442408	                mov rax, qword [r12 + 8]	       141	strbuf.h	FUNCTION_55
0x4003570	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003574	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003577	            0x75cd	                           jne 0x4003546	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003579	            0xebb9	                           jmp 0x4003534	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400357b	      0xe800000000	                   call sym.pp_remainder	      1671	pretty.c	FUNCTION_46
format_subject	SWITCH,0:DO,0:functions,0:CALL,5:WHILE,0:IF,3:FOR,1:ELSE,0	71
0x40018b0	            0x4157	                                push r15	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018b2	            0x4156	                                push r14	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018b4	    0x41bf01000000	                             mov r15d, 1	       853	pretty.c	WHILE_3	FUNCTION_31
0x40018ba	            0x4155	                                push r13	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018bc	            0x4154	                                push r12	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018be	          0x4989f6	                            mov r14, rsi	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018c1	              0x55	                                push rbp	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018c2	              0x53	                                push rbx	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018c3	          0x4889d5	                            mov rbp, rdx	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018c6	          0x4889fb	                            mov rbx, rdi	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018c9	        0x4883ec08	                              sub rsp, 8	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018cd	           0xf1f00	                         nop dword [rax]	       852	pretty.c	WHILE_3	FUNCTION_31
0x40018d0	          0x4c89f2	                            mov rdx, r14	       853	pretty.c	WHILE_3	FUNCTION_31
0x40018d3	            0x31c0	                            xor eax, eax	       191	pretty.c	WHILE_3	FUNCTION_8
0x40018d5	            0xeb15	                           jmp 0x40018ec	       191	pretty.c	WHILE_3	FUNCTION_8
0x40018d7	    0x660f1f840000	                    nop word [rax + rax]	       191	pretty.c	WHILE_3	FUNCTION_8
0x40018e0	          0x83c001	                              add eax, 1	       197	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40018e3	          0x80f90a	                             cmp cl, 0xa	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x40018e6	     0xf8484000000	                            je 0x4001970	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x40018ec	        0x4883c201	                              add rdx, 1	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40018f0	         0xfb64aff	               movzx ecx, byte [rdx - 1]	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40018f4	            0x84c9	                             test cl, cl	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x40018f6	            0x75e8	                           jne 0x40018e0	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x40018f8	          0x4c63e8	                         movsxd r13, eax	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x40018fb	            0x85c0	                           test eax, eax	       860	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40018fd	        0x4f8d242e	                    lea r12, [r14 + r13]	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x4001901	            0x741d	                            je 0x4001920	       860	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4001903	       0xf1f440000	                   nop dword [rax + rax]	       860	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4001908	    0x430fb6542eff	         movzx edx, byte [r14 + r13 - 1]	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x400190e	    0xf68200000000	                      test byte [rdx], 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4001915	            0x7421	                            je 0x4001938	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4001917	        0x4983ed01	                              sub r13, 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x400191b	          0x83e801	                              sub eax, 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x400191e	            0x75e8	                           jne 0x4001908	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4001920	        0x4883c408	                              add rsp, 8	       872	pretty.c	WHILE_3	FUNCTION_31
0x4001924	          0x4c89e0	                            mov rax, r12	       872	pretty.c	WHILE_3	FUNCTION_31
0x4001927	              0x5b	                                 pop rbx	       872	pretty.c	WHILE_3	FUNCTION_31
0x4001928	              0x5d	                                 pop rbp	       872	pretty.c	WHILE_3	FUNCTION_31
0x4001929	            0x415c	                                 pop r12	       872	pretty.c	WHILE_3	FUNCTION_31
0x400192b	            0x415d	                                 pop r13	       872	pretty.c	WHILE_3	FUNCTION_31
0x400192d	            0x415e	                                 pop r14	       872	pretty.c	WHILE_3	FUNCTION_31
0x400192f	            0x415f	                                 pop r15	       872	pretty.c	WHILE_3	FUNCTION_31
0x4001931	              0xc3	                                     ret	       872	pretty.c	WHILE_3	FUNCTION_31
0x4001932	    0x660f1f440000	                    nop word [rax + rax]	       872	pretty.c	WHILE_3	FUNCTION_31
0x4001938	          0x4885db	                           test rbx, rbx	       863	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_2
0x400193b	            0x7424	                            je 0x4001961	       863	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_2
0x400193d	          0x83c002	                              add eax, 2	       865	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_3
0x4001940	          0x4889df	                            mov rdi, rbx	       865	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_3
0x4001943	          0x4863f0	                         movsxd rsi, eax	       865	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_3
0x4001946	      0xe800000000	                          call 0x400194b	       865	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_3
0x400194b	          0x4585ff	                         test r15d, r15d	       866	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_3
0x400194e	            0x7430	                            je 0x4001980	       866	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_3
0x4001950	          0x4c89ea	                            mov rdx, r13	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x4001953	          0x4c89f6	                            mov rsi, r14	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x4001956	          0x4889df	                            mov rdi, rbx	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x4001959	          0x4531ff	                          xor r15d, r15d	       869	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x400195c	      0xe800000000	                          call 0x4001961	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x4001961	          0x4d89e6	                            mov r14, r12	       869	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x4001964	      0xe967ffffff	                           jmp 0x40018d0	       869	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x4001969	     0xf1f80000000	                         nop dword [rax]	       869	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x4001970	          0x4c63e8	                         movsxd r13, eax	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x4001973	        0x4f8d242e	                    lea r12, [r14 + r13]	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x4001977	            0xeb8f	                           jmp 0x4001908	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x4001979	     0xf1f80000000	                         nop dword [rax]	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x4001980	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001983	      0xe800000000	                          call 0x4001988	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001988	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_58	CALL_2
0x400198b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x400198e	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001991	      0xe800000000	                          call 0x4001996	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001996	            0xebb8	                           jmp 0x4001950	       279	strbuf.h	FUNCTION_58	CALL_2
add_rfc2047	SWITCH,0:DO,0:functions,0:CALL,11:WHILE,1:IF,1:FOR,1:ELSE,0	129
0x4000370	            0x4157	                                push r15	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000372	            0x4156	                                push r14	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000374	          0x4989ce	                            mov r14, rcx	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000377	            0x4155	                                push r13	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000379	            0x4154	                                push r12	       360	pretty.c	WHILE_3	FUNCTION_17
0x400037b	              0x55	                                push rbp	       360	pretty.c	WHILE_3	FUNCTION_17
0x400037c	              0x53	                                push rbx	       360	pretty.c	WHILE_3	FUNCTION_17
0x400037d	          0x4889fd	                            mov rbp, rdi	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000380	        0x4883ec28	                           sub rsp, 0x28	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000384	        0x4c8b6708	                mov r12, qword [rdi + 8]	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x4000388	      0x4889742418	             mov qword [rsp + 0x18], rsi	       360	pretty.c	WHILE_3	FUNCTION_17
0x400038d	      0x4889542410	             mov qword [rsp + 0x10], rdx	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000392	      0x448944240c	              mov dword [rsp + 0xc], r8d	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000397	          0x4489e3	                           mov ebx, r12d	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x400039a	          0x83eb01	                              sub ebx, 1	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x400039d	            0x7822	                            js 0x40003c1	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x400039f	          0x4863c3	                         movsxd rax, ebx	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003a2	        0x48034710	             add rax, qword [rdi + 0x10]	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003a6	          0x80380a	                     cmp byte [rax], 0xa	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003a9	            0x750e	                           jne 0x40003b9	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003ab	            0xeb14	                           jmp 0x40003c1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003ad	           0xf1f00	                         nop dword [rax]	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003b0	        0x4883e801	                              sub rax, 1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003b4	          0x80380a	                     cmp byte [rax], 0xa	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003b7	            0x7408	                            je 0x40003c1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003b9	          0x83eb01	                              sub ebx, 1	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40003bc	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40003bf	            0x75ef	                           jne 0x40003b0	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40003c1	          0x4c89f7	                            mov rdi, r14	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003c4	      0xe800000000	                          call 0x40003c9	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003c9	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003ce	          0x4889ef	                            mov rdi, rbp	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003d1	      0x488d745264	          lea rsi, [rdx + rdx*2 + 0x64] 	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003d6	          0x4801c6	                            add rsi, rax	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003d9	      0xe800000000	                          call 0x40003de	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003de	          0x4c89f2	                            mov rdx, r14	       366	pretty.c	WHILE_3	FUNCTION_17	CALL_4
0x40003e1	      0xbe00000000	                              mov esi, 0	       366	pretty.c	WHILE_3	FUNCTION_17	CALL_4
0x40003e6	          0x4889ef	                            mov rdi, rbp	       366	pretty.c	WHILE_3	FUNCTION_17	CALL_4
0x40003e9	            0x31c0	                            xor eax, eax	       366	pretty.c	WHILE_3	FUNCTION_17	CALL_4
0x40003eb	      0xe800000000	                          call 0x40003f0	       366	pretty.c	WHILE_3	FUNCTION_17	CALL_4
0x40003f0	          0x4c89f7	                            mov rdi, r14	       367	pretty.c	WHILE_3	FUNCTION_17	CALL_5
0x40003f3	      0xe800000000	                          call 0x40003f8	       367	pretty.c	WHILE_3	FUNCTION_17	CALL_5
0x40003f8	      0x458d6c0404	               lea r13d, [r12 + rax + 4]	       367	pretty.c	WHILE_3	FUNCTION_17	CALL_5
0x40003fd	          0x4129dd	                           sub r13d, ebx	       367	pretty.c	WHILE_3	FUNCTION_17	CALL_5
0x4000400	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       369	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000406	            0x747a	                            je 0x4000482	       369	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000408	     0xf1f84000000	                   nop dword [rax + rax]	       369	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000410	      0x488d742410	                   lea rsi, [rsp + 0x10]	       378	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_6
0x4000415	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       378	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_6
0x400041a	          0x4c89f2	                            mov rdx, r14	       378	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_6
0x400041d	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       377	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000422	      0xe800000000	                          call 0x4000427	       378	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_6
0x4000427	          0x83f801	                              cmp eax, 1	       379	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_7
0x400042a	          0x4189c0	                            mov r8d, eax	       378	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_6
0x400042d	     0xf8ead000000	                           jle 0x40004e0	       379	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_7
0x4000433	        0x478d3c40	                   lea r15d, [r8 + r8*2]	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000437	    0x41bc00000000	                             mov r12d, 0	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x400043d	          0x4501fd	                          add r13d, r15d	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000440	        0x4183fd4a	                          cmp r13d, 0x4a	       393	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1
0x4000444	            0x7f62	                            jg 0x40004a8	       393	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1
0x4000446	          0x4585c0	                           test r8d, r8d	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x4000449	            0x7eb5	                           jle 0x4000400	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x400044b	        0x418d40ff	                       lea eax, [r8 - 1]	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x400044f	          0x4989df	                            mov r15, rbx	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x4000452	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x4000457	    0x660f1f840000	                    nop word [rax + rax]	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x4000460	        0x410fb617	                   movzx edx, byte [r15]	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x4000464	            0x31c0	                            xor eax, eax	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x4000466	          0x4c89e6	                            mov rsi, r12	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x4000469	          0x4889ef	                            mov rdi, rbp	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x400046c	        0x4983c701	                              add r15, 1	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x4000470	      0xe800000000	                          call 0x4000475	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x4000475	          0x4c39fb	                            cmp rbx, r15	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x4000478	            0x75e6	                           jne 0x4000460	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x400047a	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       369	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000480	            0x758e	                           jne 0x4000410	       369	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000482	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000485	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_58	CALL_2
0x400048a	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_58	CALL_2
0x400048f	      0xe800000000	                          call 0x4000494	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000494	        0x4883c428	                           add rsp, 0x28	       404	pretty.c	WHILE_3	FUNCTION_17
0x4000498	              0x5b	                                 pop rbx	       404	pretty.c	WHILE_3	FUNCTION_17
0x4000499	              0x5d	                                 pop rbp	       404	pretty.c	WHILE_3	FUNCTION_17
0x400049a	            0x415c	                                 pop r12	       404	pretty.c	WHILE_3	FUNCTION_17
0x400049c	            0x415d	                                 pop r13	       404	pretty.c	WHILE_3	FUNCTION_17
0x400049e	            0x415e	                                 pop r14	       404	pretty.c	WHILE_3	FUNCTION_17
0x40004a0	            0x415f	                                 pop r15	       404	pretty.c	WHILE_3	FUNCTION_17
0x40004a2	              0xc3	                                     ret	       404	pretty.c	WHILE_3	FUNCTION_17
0x40004a3	       0xf1f440000	                   nop dword [rax + rax]	       404	pretty.c	WHILE_3	FUNCTION_17
0x40004a8	          0x4c89f2	                            mov rdx, r14	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004ab	      0xbe00000000	                              mov esi, 0	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004b0	          0x4889ef	                            mov rdi, rbp	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004b3	            0x31c0	                            xor eax, eax	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004b5	      0x4489442408	                mov dword [rsp + 8], r8d	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004ba	      0xe800000000	                          call 0x40004bf	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004bf	          0x4c89f7	                            mov rdi, r14	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004c2	      0xe800000000	                          call 0x40004c7	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004c7	      0x448b442408	                mov r8d, dword [rsp + 8]	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004cc	      0x458d6c0706	               lea r13d, [r15 + rax + 6]	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004d1	      0xe970ffffff	                           jmp 0x4000446	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004e0	           0xfb603	                   movzx eax, byte [rbx]	       379	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_7
0x40004e3	          0x8d50e0	                   lea edx, [rax - 0x20]	       207	pretty.c	WHILE_3	FUNCTION_9
0x40004e6	          0x80fa5e	                            cmp dl, 0x5e	       207	pretty.c	WHILE_3	FUNCTION_9
0x40004e9	     0xf8744ffffff	                            ja 0x4000433	       207	pretty.c	WHILE_3	FUNCTION_9
0x40004ef	           0xfb6d0	                           movzx edx, al	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x40004f2	     0xfb692000000	                   movzx edx, byte [rdx]	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x40004f9	          0xf6c201	                              test dl, 1	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x40004fc	     0xf8531ffffff	                           jne 0x4000433	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x4000502	            0x89c1	                            mov ecx, eax	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x4000504	          0x83e1fd	                     and ecx, 0xfffffffd	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x4000507	          0x80f93d	                            cmp cl, 0x3d	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x400050a	     0xf8423ffffff	                            je 0x4000433	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x4000510	            0x3c5f	                            cmp al, 0x5f	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x4000512	     0xf841bffffff	                            je 0x4000433	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x4000518	      0x837c240c01	                cmp dword [rsp + 0xc], 1	       335	pretty.c	WHILE_3	FUNCTION_15	IF_3
0x400051d	    0x41bc00000000	                             mov r12d, 0	       335	pretty.c	WHILE_3	FUNCTION_15	IF_3
0x4000523	    0x41bf01000000	                             mov r15d, 1	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000529	     0xf850effffff	                           jne 0x400043d	       335	pretty.c	WHILE_3	FUNCTION_15	IF_3
0x400052f	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000533	          0x83e206	                              and edx, 6	       339	pretty.c	WHILE_3	FUNCTION_15
0x4000536	          0x4189cf	                           mov r15d, ecx	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000539	     0xf85fefeffff	                           jne 0x400043d	       339	pretty.c	WHILE_3	FUNCTION_15
0x400053f	            0x3c2f	                            cmp al, 0x2f	       339	pretty.c	WHILE_3	FUNCTION_15
0x4000541	     0xf87ecfeffff	                            ja 0x4000433	       339	pretty.c	WHILE_3	FUNCTION_15
0x4000547	    0x48be00000000	              movabs rsi, 0xac0200000000	       339	pretty.c	WHILE_3	FUNCTION_15
0x4000551	        0x480fa3c6	                             bt rsi, rax	       339	pretty.c	WHILE_3	FUNCTION_15
0x4000555	     0xf82e2feffff	                            jb 0x400043d	       339	pretty.c	WHILE_3	FUNCTION_15
0x400055b	      0xe9d3feffff	                           jmp 0x4000433	       339	pretty.c	WHILE_3	FUNCTION_15
pretty_print_commit	SWITCH,0:DO,0:functions,0:CALL,17:WHILE,0:IF,11:FOR,1:ELSE,1	389
0x4003780	            0x4157	                                push r15	      1791	pretty.c	FUNCTION_52
0x4003782	            0x4156	                                push r14	      1791	pretty.c	FUNCTION_52
0x4003784	          0x4989d7	                            mov r15, rdx	      1791	pretty.c	FUNCTION_52
0x4003787	            0x4155	                                push r13	      1791	pretty.c	FUNCTION_52
0x4003789	            0x4154	                                push r12	      1791	pretty.c	FUNCTION_52
0x400378b	              0x55	                                push rbp	      1791	pretty.c	FUNCTION_52
0x400378c	              0x53	                                push rbx	      1791	pretty.c	FUNCTION_52
0x400378d	          0x4889fb	                            mov rbx, rdi	      1791	pretty.c	FUNCTION_52
0x4003790	        0x4883ec48	                           sub rsp, 0x48	      1791	pretty.c	FUNCTION_52
0x4003794	    0x64488b042528	                mov rax, qword fs:[0x28]	      1791	pretty.c	FUNCTION_52
0x400379d	      0x4889442438	             mov qword [rsp + 0x38], rax	      1791	pretty.c	FUNCTION_52
0x40037a2	            0x31c0	                            xor eax, eax	      1791	pretty.c	FUNCTION_52
0x40037a4	          0x833f08	                      cmp dword [rdi], 8	      1799	pretty.c	FUNCTION_52	IF_1
0x40037a7	      0x4889742408	                mov qword [rsp + 8], rsi	      1791	pretty.c	FUNCTION_52
0x40037ac	     0xf845e040000	                            je 0x4003c10	      1799	pretty.c	FUNCTION_52	IF_1
0x40037b2	          0x8b473c	            mov eax, dword [rdi + 0x3c] 	      1797	pretty.c	FUNCTION_52
0x40037b5	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1797	pretty.c	FUNCTION_52
0x40037b9	      0xe800000000	                          call 0x40037be	      1804	pretty.c	FUNCTION_52	CALL_2
0x40037be	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1805	pretty.c	FUNCTION_52	CALL_3
0x40037c3	            0x31f6	                            xor esi, esi	      1805	pretty.c	FUNCTION_52	CALL_3
0x40037c5	          0x4889c2	                            mov rdx, rax	      1805	pretty.c	FUNCTION_52	CALL_3
0x40037c8	      0x4889442420	             mov qword [rsp + 0x20], rax	      1804	pretty.c	FUNCTION_52	CALL_2
0x40037cd	      0xe800000000	                          call 0x40037d2	      1805	pretty.c	FUNCTION_52	CALL_3
0x40037d2	          0x448b2b	                   mov r13d, dword [rbx]	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x40037d5	      0x4889442410	             mov qword [rsp + 0x10], rax	      1805	pretty.c	FUNCTION_52	CALL_3
0x40037da	      0x4889442430	             mov qword [rsp + 0x30], rax	      1805	pretty.c	FUNCTION_52	CALL_3
0x40037df	        0x4183fd05	                             cmp r13d, 5	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x40037e3	     0xf84e7030000	                            je 0x4003bd0	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x40037e9	        0x418d45fa	                      lea eax, [r13 - 6]	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x40037ed	    0xc74424280400	               mov dword [rsp + 0x28], 4	      1793	pretty.c	FUNCTION_52
0x40037f5	          0x83f801	                              cmp eax, 1	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x40037f8	     0xf866c040000	                           jbe 0x4003c6a	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x40037fe	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x4003803	           0xfb610	                   movzx edx, byte [rax]	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x4003806	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      1805	pretty.c	FUNCTION_52	CALL_3
0x400380b	            0x31ed	                            xor ebp, ebp	      1558	pretty.c	FUNCTION_45
0x400380d	           0xf1f00	                         nop dword [rax]	      1558	pretty.c	FUNCTION_45
0x4003810	          0x4c89f0	                            mov rax, r14	      1558	pretty.c	FUNCTION_45
0x4003813	          0x4531e4	                          xor r12d, r12d	       191	pretty.c	WHILE_3	FUNCTION_8
0x4003816	            0xeb14	                           jmp 0x400382c	       191	pretty.c	WHILE_3	FUNCTION_8
0x4003818	     0xf1f84000000	                   nop dword [rax + rax]	       191	pretty.c	WHILE_3	FUNCTION_8
0x4003820	        0x4183c401	                             add r12d, 1	       197	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003824	          0x80fa0a	                             cmp dl, 0xa	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x4003827	            0x7414	                            je 0x400383d	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x4003829	           0xfb610	                   movzx edx, byte [rax]	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x400382c	        0x4883c001	                              add rax, 1	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003830	            0x84d2	                             test dl, dl	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x4003832	            0x75ec	                           jne 0x4003820	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x4003834	          0x4585e4	                         test r12d, r12d	      1564	pretty.c	FUNCTION_45	FOR_1	IF_1
0x4003837	     0xf84f3010000	                            je 0x4003a30	      1564	pretty.c	FUNCTION_45	FOR_1	IF_1
0x400383d	          0x4963d4	                        movsxd rdx, r12d	      1566	pretty.c	FUNCTION_45	FOR_1
0x4003840	        0x4183fc01	                             cmp r12d, 1	      1568	pretty.c	FUNCTION_45	FOR_1	IF_2
0x4003844	        0x498d0416	                    lea rax, [r14 + rdx]	      1566	pretty.c	FUNCTION_45	FOR_1
0x4003848	      0x4889442430	             mov qword [rsp + 0x30], rax	      1566	pretty.c	FUNCTION_45	FOR_1
0x400384d	     0xf84dd010000	                            je 0x4003a30	      1568	pretty.c	FUNCTION_45	FOR_1	IF_2
0x4003853	          0x4585ed	                         test r13d, r13d	      1572	pretty.c	FUNCTION_45	FOR_1	IF_3
0x4003856	            0x7520	                           jne 0x4003878	      1572	pretty.c	FUNCTION_45	FOR_1	IF_3
0x4003858	          0x4c89f6	                            mov rsi, r14	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x400385b	          0x4c89ff	                            mov rdi, r15	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x400385e	      0xe800000000	                          call 0x4003863	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003863	          0x448b2b	                   mov r13d, dword [rbx]	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003866	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x400386b	        0x410fb612	                   movzx edx, byte [r10]	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x400386f	          0x4d89d6	                            mov r14, r10	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003872	            0xeb9c	                           jmp 0x4003810	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003874	         0xf1f4000	                         nop dword [rax]	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003878	      0xbe00000000	                              mov esi, 0	      1577	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_3
0x400387d	          0x4c89f7	                            mov rdi, r14	      1577	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_3
0x4003880	      0xe800000000	                          call 0x4003885	      1577	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_3
0x4003885	            0x85c0	                           test eax, eax	      1577	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_3
0x4003887	            0x7417	                            je 0x40038a0	      1577	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_3
0x4003889	        0x4183fc30	                          cmp r12d, 0x30	      1578	pretty.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x400388d	     0xf85e3040000	                           jne 0x4003d76	      1578	pretty.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4003893	          0x448b2b	                   mov r13d, dword [rbx]	      1578	pretty.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4003896	            0xebce	                           jmp 0x4003866	      1578	pretty.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4003898	     0xf1f84000000	                   nop dword [rax + rax]	      1578	pretty.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x40038a0	            0x85ed	                           test ebp, ebp	      1583	pretty.c	FUNCTION_45	FOR_1	IF_6
0x40038a2	     0xf84b9000000	                            je 0x4003961	      1583	pretty.c	FUNCTION_45	FOR_1	IF_6
0x40038a8	          0x4c89f1	                            mov rcx, r14	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x40038ab	      0xb800000000	                              mov eax, 0	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x40038b0	            0xeb13	                           jmp 0x40038c5	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x40038b2	    0x660f1f440000	                    nop word [rax + rax]	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x40038b8	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40038bc	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40038c0	          0x3a51ff	                  cmp dl, byte [rcx - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40038c3	            0x7536	                           jne 0x40038fb	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40038c5	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40038c8	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40038ca	            0x75ec	                           jne 0x40038b8	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40038cc	      0x418d742450	                   lea esi, [r12 + 0x50]	      1597	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_9
0x40038d1	          0x4c89ff	                            mov rdi, r15	      1597	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_9
0x40038d4	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1597	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_9
0x40038d9	          0x4863f6	                         movsxd rsi, esi	      1597	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_9
0x40038dc	      0xe800000000	                          call 0x40038e1	      1597	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_9
0x40038e1	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x40038e6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x40038eb	          0x4c89fa	                            mov rdx, r15	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x40038ee	      0xbe00000000	                              mov esi, 0	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x40038f3	          0x4889df	                            mov rdi, rbx	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x40038f6	      0xe800000000	                          call 0x40038fb	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x40038fb	      0xb800000000	                              mov eax, 0	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003900	            0xeb18	                           jmp 0x400391a	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003902	    0x660f1f440000	                    nop word [rax + rax]	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003908	        0x4983c601	                              add r14, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400390c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4003910	        0x413a56ff	                  cmp dl, byte [r14 - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4003914	     0xf8579ffffff	                           jne 0x4003893	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400391a	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x400391d	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x400391f	            0x75e7	                           jne 0x4003908	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4003921	          0x448b2b	                   mov r13d, dword [rbx]	      1601	pretty.c	FUNCTION_45	FOR_1	IF_8
0x4003924	        0x418d45fd	                      lea eax, [r13 - 3]	      1600	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_11
0x4003928	          0x83f801	                              cmp eax, 1	      1600	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_11
0x400392b	     0xf8735ffffff	                            ja 0x4003866	      1600	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_11
0x4003931	      0x418d742450	                   lea esi, [r12 + 0x50]	      1602	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4003936	          0x4c89ff	                            mov rdi, r15	      1602	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4003939	          0x4863f6	                         movsxd rsi, esi	      1602	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x400393c	      0xe800000000	                          call 0x4003941	      1602	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4003941	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003946	          0x4c89f1	                            mov rcx, r14	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003949	          0x4c89fa	                            mov rdx, r15	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x400394c	      0xbe00000000	                              mov esi, 0	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003951	          0x4889df	                            mov rdi, rbx	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003954	      0xe800000000	                          call 0x4003959	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003959	          0x448b2b	                   mov r13d, dword [rbx]	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x400395c	      0xe905ffffff	                           jmp 0x4003866	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003961	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      1584	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_5
0x4003966	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      1584	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_5
0x400396a	      0xe800000000	                          call 0x400396f	      1584	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_5
0x400396f	          0x6bf032	                     imul esi, eax, 0x32	      1586	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_6
0x4003972	          0x4c89ff	                            mov rdi, r15	      1586	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_6
0x4003975	          0x83c614	                           add esi, 0x14	      1586	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_6
0x4003978	      0xe800000000	                          call 0x400397d	      1586	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_6
0x400397d	            0x8b03	                    mov eax, dword [rbx]	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x400397f	          0x83e805	                              sub eax, 5	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x4003982	          0x83f802	                              cmp eax, 2	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x4003985	     0xf867b030000	                           jbe 0x4003d06	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x400398b	        0x4c8b6d30	            mov r13, qword [rbp + 0x30] 	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x400398f	      0xbd01000000	                              mov ebp, 1	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003994	          0x4d85ed	                           test r13, r13	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x4003997	     0xf840bffffff	                            je 0x40038a8	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x400399d	      0x49837d0800	                  cmp qword [r13 + 8], 0	       543	pretty.c	WHILE_3	FUNCTION_22	IF_1
0x40039a2	     0xf8400ffffff	                            je 0x40038a8	       543	pretty.c	WHILE_3	FUNCTION_22	IF_1
0x40039a8	      0xba06000000	                              mov edx, 6	       279	strbuf.h	FUNCTION_58	CALL_2
0x40039ad	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_58	CALL_2
0x40039b2	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_58	CALL_2
0x40039b5	      0xe800000000	                          call 0x40039ba	       279	strbuf.h	FUNCTION_58	CALL_2
0x40039ba	            0xeb54	                           jmp 0x4003a10	       279	strbuf.h	FUNCTION_58	CALL_2
0x40039bc	         0xf1f4000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_58	CALL_2
0x40039c0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x40039c5	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_57	CALL_2
0x40039c8	      0xe800000000	                          call 0x40039cd	       228	strbuf.h	FUNCTION_57	CALL_2
0x40039cd	        0x498b5708	                mov rdx, qword [r15 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x40039d1	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x40039d5	        0x488d7201	                      lea rsi, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x40039d9	        0x49897708	                mov qword [r15 + 8], rsi	       229	strbuf.h	FUNCTION_57
0x40039dd	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_57
0x40039e1	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x40039e5	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_57
0x40039e9	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x40039ed	          0x8b5304	                mov edx, dword [rbx + 4]	       551	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	IF_2
0x40039f0	            0x85d2	                           test edx, edx	       551	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	IF_2
0x40039f2	     0xf8418010000	                            je 0x4003b10	       551	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	IF_2
0x40039f8	          0x4889ee	                            mov rsi, rbp	       552	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_4
0x40039fb	          0x4c89ff	                            mov rdi, r15	       552	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_4
0x40039fe	      0xe800000000	                          call 0x4003a03	       552	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_4
0x4003a03	        0x4d8b6d08	                mov r13, qword [r13 + 8]	       555	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003a07	          0x4d85ed	                           test r13, r13	       548	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003a0a	     0xf842e010000	                            je 0x4003b3e	       548	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003a10	        0x498b4500	                    mov rax, qword [r13]	       549	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003a14	        0x488d6804	                      lea rbp, [rax + 4]	       549	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003a18	          0x498b07	                    mov rax, qword [r15]	       549	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003a1b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4003a1e	            0x74a0	                            je 0x40039c0	       141	strbuf.h	FUNCTION_55
0x4003a20	        0x498b5708	                mov rdx, qword [r15 + 8]	       141	strbuf.h	FUNCTION_55
0x4003a24	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003a28	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003a2b	            0x75a4	                           jne 0x40039d1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003a2d	            0xeb91	                           jmp 0x40039c0	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003a2f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003a30	        0x4183fd05	                             cmp r13d, 5	      1834	pretty.c	FUNCTION_52	IF_7
0x4003a34	     0xf8447010000	                            je 0x4003b81	      1834	pretty.c	FUNCTION_52	IF_7
0x4003a3a	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      1834	pretty.c	FUNCTION_52	IF_7
0x4003a3d	            0x85c0	                           test eax, eax	      1834	pretty.c	FUNCTION_52	IF_7
0x4003a3f	     0xf84e4010000	                            je 0x4003c29	      1834	pretty.c	FUNCTION_52	IF_7
0x4003a45	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1839	pretty.c	FUNCTION_52	CALL_9
0x4003a4a	      0xe800000000	                          call 0x4003a4f	      1839	pretty.c	FUNCTION_52	CALL_9
0x4003a4f	        0x458d45fb	                      lea r8d, [r13 - 5]	      1842	pretty.c	FUNCTION_52	IF_8	CALL_10
0x4003a53	      0x4889442430	             mov qword [rsp + 0x30], rax	      1839	pretty.c	FUNCTION_52	CALL_9
0x4003a58	        0x4183f802	                              cmp r8d, 2	      1842	pretty.c	FUNCTION_52	IF_8	CALL_10
0x4003a5c	     0xf862e010000	                           jbe 0x4003b90	      1842	pretty.c	FUNCTION_52	IF_8	CALL_10
0x4003a62	        0x498b6f08	                mov rbp, qword [r15 + 8]	      1845	pretty.c	FUNCTION_52
0x4003a66	      0x488d442430	                   lea rax, [rsp + 0x30]	      1845	pretty.c	FUNCTION_52
0x4003a6b	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      1847	pretty.c	FUNCTION_52	CALL_12
0x4003a6f	          0x4c89fa	                            mov rdx, r15	      1847	pretty.c	FUNCTION_52	CALL_12
0x4003a72	          0x4889c6	                            mov rsi, rax	      1847	pretty.c	FUNCTION_52	CALL_12
0x4003a75	          0x4889df	                            mov rdi, rbx	      1847	pretty.c	FUNCTION_52	CALL_12
0x4003a78	      0xe800000000	                          call 0x4003a7d	      1847	pretty.c	FUNCTION_52	CALL_12
0x4003a7d	          0x4c89ff	                            mov rdi, r15	      1848	pretty.c	FUNCTION_52	CALL_13
0x4003a80	      0xe800000000	                          call 0x4003a85	      1848	pretty.c	FUNCTION_52	CALL_13
0x4003a85	          0x833b05	                      cmp dword [rbx], 5	      1851	pretty.c	FUNCTION_52	IF_10
0x4003a88	            0x7450	                            je 0x4003ada	      1851	pretty.c	FUNCTION_52	IF_10
0x4003a8a	          0x498b17	                    mov rdx, qword [r15]	      1851	pretty.c	FUNCTION_52	IF_10
0x4003a8d	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_55
0x4003a90	     0xf8562010000	                           jne 0x4003bf8	       141	strbuf.h	FUNCTION_55
0x4003a96	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003a9b	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003a9e	      0xe800000000	                          call 0x4003aa3	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003aa3	        0x498b4708	                mov rax, qword [r15 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003aa7	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4003aab	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_57
0x4003aaf	        0x49894f08	                mov qword [r15 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4003ab3	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_57
0x4003ab7	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_57
0x4003abb	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4003abf	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4003ac3	            0x8b03	                    mov eax, dword [rbx]	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4003ac5	          0x83e806	                              sub eax, 6	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4003ac8	          0x83f801	                              cmp eax, 1	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4003acb	            0x770d	                            ja 0x4003ada	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4003acd	        0x498b4708	                mov rax, qword [r15 + 8]	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4003ad1	          0x4839e8	                            cmp rax, rbp	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4003ad4	     0xf86e3010000	                           jbe 0x4003cbd	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4003ada	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1862	pretty.c	FUNCTION_52	CALL_17
0x4003adf	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1862	pretty.c	FUNCTION_52	CALL_17
0x4003ae4	      0xe800000000	                          call 0x4003ae9	      1862	pretty.c	FUNCTION_52	CALL_17
0x4003ae9	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1863	pretty.c	FUNCTION_52
0x4003aee	    0x644833042528	                xor rax, qword fs:[0x28]	      1863	pretty.c	FUNCTION_52
0x4003af7	     0xf8585020000	                           jne 0x4003d82	      1863	pretty.c	FUNCTION_52
0x4003afd	        0x4883c448	                           add rsp, 0x48	      1863	pretty.c	FUNCTION_52
0x4003b01	              0x5b	                                 pop rbx	      1863	pretty.c	FUNCTION_52
0x4003b02	              0x5d	                                 pop rbp	      1863	pretty.c	FUNCTION_52
0x4003b03	            0x415c	                                 pop r12	      1863	pretty.c	FUNCTION_52
0x4003b05	            0x415d	                                 pop r13	      1863	pretty.c	FUNCTION_52
0x4003b07	            0x415e	                                 pop r14	      1863	pretty.c	FUNCTION_52
0x4003b09	            0x415f	                                 pop r15	      1863	pretty.c	FUNCTION_52
0x4003b0b	              0xc3	                                     ret	      1863	pretty.c	FUNCTION_52
0x4003b0c	         0xf1f4000	                         nop dword [rax]	      1863	pretty.c	FUNCTION_52
0x4003b10	          0x4889ef	                            mov rdi, rbp	       554	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_6
0x4003b13	      0xe800000000	                          call 0x4003b18	       554	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_6
0x4003b18	          0x4889c5	                            mov rbp, rax	       554	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_6
0x4003b1b	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4003b1e	      0xe800000000	                          call 0x4003b23	       279	strbuf.h	FUNCTION_58	CALL_2
0x4003b23	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_58	CALL_2
0x4003b26	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4003b29	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_58	CALL_2
0x4003b2c	      0xe800000000	                          call 0x4003b31	       279	strbuf.h	FUNCTION_58	CALL_2
0x4003b31	        0x4d8b6d08	                mov r13, qword [r13 + 8]	       555	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003b35	          0x4d85ed	                           test r13, r13	       548	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003b38	     0xf85d2feffff	                           jne 0x4003a10	       548	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003b3e	          0x498b17	                    mov rdx, qword [r15]	       548	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003b41	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_55
0x4003b44	     0xf8593000000	                           jne 0x4003bdd	       141	strbuf.h	FUNCTION_55
0x4003b4a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003b4f	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003b52	      0xe800000000	                          call 0x4003b57	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003b57	        0x498b4708	                mov rax, qword [r15 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003b5b	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4003b5f	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_57
0x4003b63	      0xbd01000000	                              mov ebp, 1	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003b68	        0x49894f08	                mov qword [r15 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4003b6c	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_57
0x4003b70	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4003b74	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_57
0x4003b78	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4003b7c	      0xe927fdffff	                           jmp 0x40038a8	       230	strbuf.h	FUNCTION_57
0x4003b81	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1839	pretty.c	FUNCTION_52	CALL_9
0x4003b86	      0xe800000000	                          call 0x4003b8b	      1839	pretty.c	FUNCTION_52	CALL_9
0x4003b8b	      0x4889442430	             mov qword [rsp + 0x30], rax	      1839	pretty.c	FUNCTION_52	CALL_9
0x4003b90	      0x488d442430	                   lea rax, [rsp + 0x30]	      1843	pretty.c	FUNCTION_52	CALL_11
0x4003b95	      0x448b44242c	            mov r8d, dword [rsp + 0x2c] 	      1843	pretty.c	FUNCTION_52	CALL_11
0x4003b9a	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1843	pretty.c	FUNCTION_52	CALL_11
0x4003b9f	          0x4c89fa	                            mov rdx, r15	      1843	pretty.c	FUNCTION_52	CALL_11
0x4003ba2	          0x4889df	                            mov rdi, rbx	      1843	pretty.c	FUNCTION_52	CALL_11
0x4003ba5	          0x4889c6	                            mov rsi, rax	      1843	pretty.c	FUNCTION_52	CALL_11
0x4003ba8	      0x4889442418	             mov qword [rsp + 0x18], rax	      1843	pretty.c	FUNCTION_52	CALL_11
0x4003bad	      0xe800000000	                          call 0x4003bb2	      1843	pretty.c	FUNCTION_52	CALL_11
0x4003bb2	          0x833b05	                      cmp dword [rbx], 5	      1846	pretty.c	FUNCTION_52	IF_9
0x4003bb5	        0x498b6f08	                mov rbp, qword [r15 + 8]	      1845	pretty.c	FUNCTION_52
0x4003bb9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1846	pretty.c	FUNCTION_52	IF_9
0x4003bbe	     0xf84b9feffff	                            je 0x4003a7d	      1846	pretty.c	FUNCTION_52	IF_9
0x4003bc4	      0xe9a2feffff	                           jmp 0x4003a6b	      1846	pretty.c	FUNCTION_52	IF_9
0x4003bc9	     0xf1f80000000	                         nop dword [rax]	      1846	pretty.c	FUNCTION_52	IF_9
0x4003bd0	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1808	pretty.c	FUNCTION_52	IF_2
0x4003bd8	      0xe921fcffff	                           jmp 0x40037fe	      1808	pretty.c	FUNCTION_52	IF_2
0x4003bdd	        0x498b4708	                mov rax, qword [r15 + 8]	       141	strbuf.h	FUNCTION_55
0x4003be1	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003be5	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003be8	     0xf856dffffff	                           jne 0x4003b5b	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003bee	      0xe957ffffff	                           jmp 0x4003b4a	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003bf3	       0xf1f440000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003bf8	        0x498b4708	                mov rax, qword [r15 + 8]	       141	strbuf.h	FUNCTION_55
0x4003bfc	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003c00	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003c03	     0xf859efeffff	                           jne 0x4003aa7	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003c09	      0xe988feffff	                           jmp 0x4003a96	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003c0e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003c10	          0x4889f9	                            mov rcx, rdi	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x4003c13	    0x488b35000000	            mov rsi, qword [0x04003c1a] 	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x4003c1a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x4003c1f	      0xe800000000	                          call 0x4003c24	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x4003c24	      0xe9c0feffff	                           jmp 0x4003ae9	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x4003c29	          0x498b17	                    mov rdx, qword [r15]	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x4003c2c	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_55
0x4003c2f	     0xf85db000000	                           jne 0x4003d10	       141	strbuf.h	FUNCTION_55
0x4003c35	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003c3a	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003c3d	      0xe800000000	                          call 0x4003c42	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003c42	        0x498b4708	                mov rax, qword [r15 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003c46	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4003c4a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_57
0x4003c4e	        0x49894f08	                mov qword [r15 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4003c52	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_57
0x4003c56	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4003c5a	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_57
0x4003c5e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4003c62	          0x448b2b	                   mov r13d, dword [rbx]	       230	strbuf.h	FUNCTION_57
0x4003c65	      0xe9dbfdffff	                           jmp 0x4003a45	       230	strbuf.h	FUNCTION_57
0x4003c6a	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      1814	pretty.c	FUNCTION_52	IF_3	CALL_5
0x4003c6e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c73	            0x85d2	                           test edx, edx	      1814	pretty.c	FUNCTION_52	IF_3	CALL_5
0x4003c75	     0xf85eb000000	                           jne 0x4003d66	      1814	pretty.c	FUNCTION_52	IF_3	CALL_5
0x4003c7b	           0xfbe08	                   movsx ecx, byte [rax]	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c7e	            0x85c9	                           test ecx, ecx	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c80	            0x89ca	                            mov edx, ecx	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c82	     0xf84bd000000	                            je 0x4003d45	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c88	        0x4883c001	                              add rax, 1	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c8c	            0x89ce	                            mov esi, ecx	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c8e	            0x31ff	                            xor edi, edi	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c90	            0xeb16	                           jmp 0x4003ca8	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c92	          0x83f90a	                            cmp ecx, 0xa	      1823	pretty.c	FUNCTION_52	IF_3	FOR_1	IF_4	IF_5
0x4003c95	            0x7464	                            je 0x4003cfb	      1823	pretty.c	FUNCTION_52	IF_3	FOR_1	IF_4	IF_5
0x4003c97	           0xfbe08	                   movsx ecx, byte [rax]	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c9a	        0x4883c001	                              add rax, 1	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003c9e	            0x85c9	                           test ecx, ecx	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003ca0	            0x89ce	                            mov esi, ecx	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003ca2	     0xf849d000000	                            je 0x4003d45	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4003ca8	            0x85ff	                           test edi, edi	      1818	pretty.c	FUNCTION_52	IF_3	FOR_1	IF_4
0x4003caa	            0x74e6	                            je 0x4003c92	      1818	pretty.c	FUNCTION_52	IF_3	FOR_1	IF_4
0x4003cac	          0x83f91b	                           cmp ecx, 0x1b	       207	pretty.c	WHILE_3	FUNCTION_9
0x4003caf	            0x747f	                            je 0x4003d30	       207	pretty.c	WHILE_3	FUNCTION_9
0x4003cb1	          0x4084f6	                           test sil, sil	       207	pretty.c	WHILE_3	FUNCTION_9
0x4003cb4	            0x787a	                            js 0x4003d30	       207	pretty.c	WHILE_3	FUNCTION_9
0x4003cb6	      0xbf01000000	                              mov edi, 1	       207	pretty.c	WHILE_3	FUNCTION_9
0x4003cbb	            0xebda	                           jmp 0x4003c97	       207	pretty.c	WHILE_3	FUNCTION_9
0x4003cbd	          0x498b17	                    mov rdx, qword [r15]	       207	pretty.c	WHILE_3	FUNCTION_9
0x4003cc0	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_55
0x4003cc3	     0xf8589000000	                           jne 0x4003d52	       141	strbuf.h	FUNCTION_55
0x4003cc9	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003cce	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003cd1	      0xe800000000	                          call 0x4003cd6	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003cd6	        0x498b4708	                mov rax, qword [r15 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4003cda	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4003cde	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_57
0x4003ce2	        0x49894f08	                mov qword [r15 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4003ce6	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_57
0x4003cea	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4003cee	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_57
0x4003cf2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4003cf6	      0xe9dffdffff	                           jmp 0x4003ada	       230	strbuf.h	FUNCTION_57
0x4003cfb	            0x31ff	                            xor edi, edi	       230	strbuf.h	FUNCTION_57
0x4003cfd	          0x80380a	                     cmp byte [rax], 0xa	       230	strbuf.h	FUNCTION_57
0x4003d00	        0x400f94c7	                                sete dil	       230	strbuf.h	FUNCTION_57
0x4003d04	            0xeb91	                           jmp 0x4003c97	       230	strbuf.h	FUNCTION_57
0x4003d06	      0xbd01000000	                              mov ebp, 1	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003d0b	      0xe998fbffff	                           jmp 0x40038a8	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003d10	        0x498b4708	                mov rax, qword [r15 + 8]	       141	strbuf.h	FUNCTION_55
0x4003d14	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d18	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d1b	     0xf8525ffffff	                           jne 0x4003c46	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d21	      0xe90fffffff	                           jmp 0x4003c35	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d30	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1808	pretty.c	FUNCTION_52	IF_2
0x4003d38	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      1827	pretty.c	FUNCTION_52	IF_3	FOR_1	ELSE_1	IF_6
0x4003d40	      0xe9c1faffff	                           jmp 0x4003806	      1827	pretty.c	FUNCTION_52	IF_3	FOR_1	ELSE_1	IF_6
0x4003d45	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1808	pretty.c	FUNCTION_52	IF_2
0x4003d4d	      0xe9b4faffff	                           jmp 0x4003806	      1808	pretty.c	FUNCTION_52	IF_2
0x4003d52	          0x4889c1	                            mov rcx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d55	          0x48f7d1	                                 not rcx	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d58	          0x4801d1	                            add rcx, rdx	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d5b	     0xf8579ffffff	                           jne 0x4003cda	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d61	      0xe963ffffff	                           jmp 0x4003cc9	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d66	           0xfb610	                   movzx edx, byte [rax]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4003d69	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1808	pretty.c	FUNCTION_52	IF_2
0x4003d71	      0xe990faffff	                           jmp 0x4003806	      1808	pretty.c	FUNCTION_52	IF_2
0x4003d76	      0xbf00000000	                              mov edi, 0	      1579	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_4
0x4003d7b	            0x31c0	                            xor eax, eax	      1579	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_4
0x4003d7d	      0xe800000000	                          call 0x4003d82	      1579	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_4
0x4003d82	      0xe800000000	                          call 0x4003d87	      1863	pretty.c	FUNCTION_52
logmsg_reencode	SWITCH,0:DO,0:functions,0:CALL,10:WHILE,0:IF,9:FOR,0:ELSE,2	168
0x4001620	            0x4157	                                push r15	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001622	            0x4156	                                push r14	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001624	          0x4989ff	                            mov r15, rdi	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001627	            0x4155	                                push r13	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001629	            0x4154	                                push r12	       601	pretty.c	WHILE_3	FUNCTION_25
0x400162b	          0x4989f4	                            mov r12, rsi	       601	pretty.c	WHILE_3	FUNCTION_25
0x400162e	              0x55	                                push rbp	       601	pretty.c	WHILE_3	FUNCTION_25
0x400162f	              0x53	                                push rbx	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001630	          0x4889d5	                            mov rbp, rdx	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001633	            0x31f6	                            xor esi, esi	       605	pretty.c	WHILE_3	FUNCTION_25	CALL_1
0x4001635	        0x4883ec38	                           sub rsp, 0x38	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001639	    0x64488b042528	                mov rax, qword fs:[0x28]	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001642	      0x4889442428	             mov qword [rsp + 0x28], rax	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001647	            0x31c0	                            xor eax, eax	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001649	      0xe800000000	                          call 0x400164e	       605	pretty.c	WHILE_3	FUNCTION_25	CALL_1
0x400164e	          0x4885ed	                           test rbp, rbp	       608	pretty.c	WHILE_3	FUNCTION_25	IF_1
0x4001651	          0x4889c3	                            mov rbx, rax	       605	pretty.c	WHILE_3	FUNCTION_25	CALL_1
0x4001654	            0x7406	                            je 0x400165c	       608	pretty.c	WHILE_3	FUNCTION_25	IF_1
0x4001656	        0x807d0000	                       cmp byte [rbp], 0	       608	pretty.c	WHILE_3	FUNCTION_25	IF_1
0x400165a	            0x753c	                           jne 0x4001698	       608	pretty.c	WHILE_3	FUNCTION_25	IF_1
0x400165c	          0x4d85e4	                           test r12, r12	       609	pretty.c	WHILE_3	FUNCTION_25	IF_1	IF_2
0x400165f	            0x740c	                            je 0x400166d	       609	pretty.c	WHILE_3	FUNCTION_25	IF_1	IF_2
0x4001661	          0x4889df	                            mov rdi, rbx	       610	pretty.c	WHILE_3	FUNCTION_25	IF_1	CALL_2
0x4001664	      0xe867f1ffff	         call sym.get_header.constprop.8	       610	pretty.c	WHILE_3	FUNCTION_25	IF_1	CALL_2
0x4001669	        0x49890424	                    mov qword [r12], rax	       610	pretty.c	WHILE_3	FUNCTION_25	IF_1	CALL_2
0x400166d	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       664	pretty.c	WHILE_3	FUNCTION_25
0x4001672	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       664	pretty.c	WHILE_3	FUNCTION_25
0x400167b	          0x4889d8	                            mov rax, rbx	       664	pretty.c	WHILE_3	FUNCTION_25
0x400167e	     0xf8522020000	                           jne 0x40018a6	       664	pretty.c	WHILE_3	FUNCTION_25
0x4001684	        0x4883c438	                           add rsp, 0x38	       664	pretty.c	WHILE_3	FUNCTION_25
0x4001688	              0x5b	                                 pop rbx	       664	pretty.c	WHILE_3	FUNCTION_25
0x4001689	              0x5d	                                 pop rbp	       664	pretty.c	WHILE_3	FUNCTION_25
0x400168a	            0x415c	                                 pop r12	       664	pretty.c	WHILE_3	FUNCTION_25
0x400168c	            0x415d	                                 pop r13	       664	pretty.c	WHILE_3	FUNCTION_25
0x400168e	            0x415e	                                 pop r14	       664	pretty.c	WHILE_3	FUNCTION_25
0x4001690	            0x415f	                                 pop r15	       664	pretty.c	WHILE_3	FUNCTION_25
0x4001692	              0xc3	                                     ret	       664	pretty.c	WHILE_3	FUNCTION_25
0x4001693	       0xf1f440000	                   nop dword [rax + rax]	       664	pretty.c	WHILE_3	FUNCTION_25
0x4001698	          0x4889c7	                            mov rdi, rax	       613	pretty.c	WHILE_3	FUNCTION_25	CALL_3
0x400169b	      0xe830f1ffff	         call sym.get_header.constprop.8	       613	pretty.c	WHILE_3	FUNCTION_25	CALL_3
0x40016a0	          0x4d85e4	                           test r12, r12	       614	pretty.c	WHILE_3	FUNCTION_25	IF_3
0x40016a3	          0x4989c6	                            mov r14, rax	       613	pretty.c	WHILE_3	FUNCTION_25	CALL_3
0x40016a6	            0x7404	                            je 0x40016ac	       614	pretty.c	WHILE_3	FUNCTION_25	IF_3
0x40016a8	        0x49890424	                    mov qword [r12], rax	       615	pretty.c	WHILE_3	FUNCTION_25	IF_3
0x40016ac	          0x4d85f6	                           test r14, r14	       616	pretty.c	WHILE_3	FUNCTION_25
0x40016af	     0xf842b010000	                            je 0x40017e0	       616	pretty.c	WHILE_3	FUNCTION_25
0x40016b5	          0x4889ee	                            mov rsi, rbp	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40016b8	          0x4c89f7	                            mov rdi, r14	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40016bb	          0x4d89f5	                            mov r13, r14	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40016be	      0xe800000000	                          call 0x40016c3	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40016c3	            0x85c0	                           test eax, eax	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40016c5	     0xf8435010000	                            je 0x4001800	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40016cb	            0x31f6	                            xor esi, esi	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x40016cd	          0x4c89ff	                            mov rdi, r15	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x40016d0	          0x4989dd	                            mov r13, rbx	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x40016d3	      0xe800000000	                          call 0x40016d8	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x40016d8	          0x4839c3	                            cmp rbx, rax	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x40016db	     0xf84b5010000	                            je 0x4001896	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x40016e1	          0x4d85ed	                           test r13, r13	       654	pretty.c	WHILE_3	FUNCTION_25	IF_8
0x40016e4	     0xf845e010000	                            je 0x4001848	       654	pretty.c	WHILE_3	FUNCTION_25	IF_8
0x40016ea	    0x48c744241000	               mov qword [rsp + 0x10], 0	       569	pretty.c	WHILE_3	FUNCTION_24
0x40016f3	    0x48c744241800	               mov qword [rsp + 0x18], 0	       569	pretty.c	WHILE_3	FUNCTION_24
0x40016fc	          0x4d89ef	                            mov r15, r13	       569	pretty.c	WHILE_3	FUNCTION_24
0x40016ff	    0x48c744242000	               mov qword [rsp + 0x20], 0	       569	pretty.c	WHILE_3	FUNCTION_24
0x4001708	            0xeb2a	                           jmp 0x4001734	       569	pretty.c	WHILE_3	FUNCTION_24
0x400170a	    0x660f1f440000	                    nop word [rax + rax]	       569	pretty.c	WHILE_3	FUNCTION_24
0x4001710	      0xbe0a000000	                            mov esi, 0xa	       575	pretty.c	WHILE_3	FUNCTION_24	WHILE_1
0x4001715	          0x4c89ff	                            mov rdi, r15	       575	pretty.c	WHILE_3	FUNCTION_24	WHILE_1
0x4001718	      0xe800000000	                          call 0x400171d	       575	pretty.c	WHILE_3	FUNCTION_24	WHILE_1
0x400171d	          0x4885c0	                           test rax, rax	       576	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	IF_1
0x4001720	     0xf8412010000	                            je 0x4001838	       576	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	IF_1
0x4001726	        0x8078010a	                 cmp byte [rax + 1], 0xa	       576	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	IF_1
0x400172a	        0x4c8d7801	                      lea r15, [rax + 1]	       576	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	IF_1
0x400172e	     0xf8404010000	                            je 0x4001838	       576	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	IF_1
0x4001734	      0xbe00000000	                              mov esi, 0	       574	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	CALL_1
0x4001739	          0x4c89ff	                            mov rdi, r15	       574	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	CALL_1
0x400173c	      0xe800000000	                          call 0x4001741	       574	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	CALL_1
0x4001741	            0x85c0	                           test eax, eax	       574	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	CALL_1
0x4001743	            0x74cb	                            je 0x4001710	       574	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	CALL_1
0x4001745	          0x4c89f8	                            mov rax, r15	       579	pretty.c	WHILE_3	FUNCTION_24
0x4001748	      0xbe0a000000	                            mov esi, 0xa	       580	pretty.c	WHILE_3	FUNCTION_24
0x400174d	          0x4c89ff	                            mov rdi, r15	       580	pretty.c	WHILE_3	FUNCTION_24
0x4001750	          0x4c29e8	                            sub rax, r13	       579	pretty.c	WHILE_3	FUNCTION_24
0x4001753	        0x48890424	                    mov qword [rsp], rax	       579	pretty.c	WHILE_3	FUNCTION_24
0x4001757	      0xe800000000	                          call 0x400175c	       580	pretty.c	WHILE_3	FUNCTION_24
0x400175c	          0x4885c0	                           test rax, rax	       581	pretty.c	WHILE_3	FUNCTION_24	IF_2
0x400175f	     0xf84d3000000	                            je 0x4001838	       581	pretty.c	WHILE_3	FUNCTION_24	IF_2
0x4001765	        0x4c8b3c24	                    mov r15, qword [rsp]	       583	pretty.c	WHILE_3	FUNCTION_24
0x4001769	          0x4c29e8	                            sub rax, r13	       583	pretty.c	WHILE_3	FUNCTION_24
0x400176c	          0x4c89ef	                            mov rdi, r13	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x400176f	          0x4c29f8	                            sub rax, r15	       583	pretty.c	WHILE_3	FUNCTION_24
0x4001772	        0x4883c001	                              add rax, 1	       583	pretty.c	WHILE_3	FUNCTION_24
0x4001776	      0x4889442408	                mov qword [rsp + 8], rax	       583	pretty.c	WHILE_3	FUNCTION_24
0x400177b	      0xe800000000	                          call 0x4001780	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x4001780	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x4001785	        0x488d4801	                      lea rcx, [rax + 1]	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x4001789	          0x4889c2	                            mov rdx, rax	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x400178c	          0x4c89ee	                            mov rsi, r13	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x400178f	      0xe800000000	                          call 0x4001794	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x4001794	          0x4889ef	                            mov rdi, rbp	       586	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_5
0x4001797	      0xe800000000	                          call 0x400179c	       586	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_5
0x400179c	            0x85c0	                           test eax, eax	       586	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_5
0x400179e	     0xf84c4000000	                            je 0x4001868	       586	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_5
0x40017a4	      0x488b542408	                mov rdx, qword [rsp + 8]	       588	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_6
0x40017a9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       588	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_6
0x40017ae	          0x4c89fe	                            mov rsi, r15	       588	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_6
0x40017b1	      0xe800000000	                          call 0x40017b6	       588	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_6
0x40017b6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       595	pretty.c	WHILE_3	FUNCTION_24	CALL_11
0x40017bb	            0x31f6	                            xor esi, esi	       595	pretty.c	WHILE_3	FUNCTION_24	CALL_11
0x40017bd	      0xe800000000	                          call 0x40017c2	       595	pretty.c	WHILE_3	FUNCTION_24	CALL_11
0x40017c2	          0x4d85e4	                           test r12, r12	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x40017c5	          0x4989c5	                            mov r13, rax	       595	pretty.c	WHILE_3	FUNCTION_24	CALL_11
0x40017c8	     0xf8486000000	                            je 0x4001854	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x40017ce	          0x4d85ed	                           test r13, r13	       663	pretty.c	WHILE_3	FUNCTION_25
0x40017d1	            0x756a	                           jne 0x400183d	       663	pretty.c	WHILE_3	FUNCTION_25
0x40017d3	      0xe995feffff	                           jmp 0x400166d	       663	pretty.c	WHILE_3	FUNCTION_25
0x40017d8	     0xf1f84000000	                   nop dword [rax + rax]	       663	pretty.c	WHILE_3	FUNCTION_25
0x40017e0	          0x4889ee	                            mov rsi, rbp	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40017e3	      0xbf00000000	                              mov edi, 0	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40017e8	      0xe800000000	                          call 0x40017ed	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40017ed	            0x85c0	                           test eax, eax	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40017ef	     0xf8578feffff	                           jne 0x400166d	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x40017f5	    0x41bd00000000	                             mov r13d, 0	       616	pretty.c	WHILE_3	FUNCTION_25
0x40017fb	       0xf1f440000	                   nop dword [rax + rax]	       616	pretty.c	WHILE_3	FUNCTION_25
0x4001800	          0x4889df	                            mov rdi, rbx	        43	utf8.h	FUNCTION_96	CALL_2
0x4001803	      0xe800000000	                          call 0x4001808	        43	utf8.h	FUNCTION_96	CALL_2
0x4001808	          0x4531c0	                            xor r8d, r8d	        43	utf8.h	FUNCTION_96	CALL_2
0x400180b	          0x4c89e9	                            mov rcx, r13	        43	utf8.h	FUNCTION_96	CALL_2
0x400180e	          0x4889ea	                            mov rdx, rbp	        43	utf8.h	FUNCTION_96	CALL_2
0x4001811	            0x89c6	                            mov esi, eax	        43	utf8.h	FUNCTION_96	CALL_2
0x4001813	          0x4889df	                            mov rdi, rbx	        43	utf8.h	FUNCTION_96	CALL_2
0x4001816	      0xe800000000	                          call 0x400181b	        43	utf8.h	FUNCTION_96	CALL_2
0x400181b	          0x4885c0	                           test rax, rax	       646	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	IF_7
0x400181e	          0x4989c5	                            mov r13, rax	        43	utf8.h	FUNCTION_96	CALL_2
0x4001821	            0x7425	                            je 0x4001848	       646	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	IF_7
0x4001823	          0x4889de	                            mov rsi, rbx	       647	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	CALL_8
0x4001826	          0x4c89ff	                            mov rdi, r15	       647	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	CALL_8
0x4001829	      0xe800000000	                          call 0x400182e	       647	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	CALL_8
0x400182e	      0xe9b7feffff	                           jmp 0x40016ea	       647	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	CALL_8
0x4001833	       0xf1f440000	                   nop dword [rax + rax]	       647	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	CALL_8
0x4001838	          0x4d85e4	                           test r12, r12	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x400183b	            0x7417	                            je 0x4001854	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x400183d	          0x4c89eb	                            mov rbx, r13	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x4001840	      0xe928feffff	                           jmp 0x400166d	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x4001845	           0xf1f00	                         nop dword [rax]	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x4001848	          0x4d85e4	                           test r12, r12	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x400184b	     0xf851cfeffff	                           jne 0x400166d	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x4001851	          0x4531ed	                          xor r13d, r13d	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x4001854	          0x4c89f7	                            mov rdi, r14	       658	pretty.c	WHILE_3	FUNCTION_25	CALL_10
0x4001857	      0xe800000000	                          call 0x400185c	       658	pretty.c	WHILE_3	FUNCTION_25	CALL_10
0x400185c	      0xe96dffffff	                           jmp 0x40017ce	       658	pretty.c	WHILE_3	FUNCTION_25	CALL_10
0x4001861	     0xf1f80000000	                         nop dword [rax]	       658	pretty.c	WHILE_3	FUNCTION_25	CALL_10
0x4001868	          0x4889ef	                            mov rdi, rbp	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x400186b	      0xe800000000	                          call 0x4001870	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x4001870	      0x488b542408	                mov rdx, qword [rsp + 8]	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x4001875	        0x488b3424	                    mov rsi, qword [rsp]	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x4001879	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x400187e	          0x4989c0	                             mov r8, rax	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x4001881	          0x4889e9	                            mov rcx, rbp	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x4001884	        0x4883ea0a	                            sub rdx, 0xa	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x4001888	        0x4883c609	                              add rsi, 9	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x400188c	      0xe800000000	                          call 0x4001891	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x4001891	      0xe920ffffff	                           jmp 0x40017b6	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x4001896	          0x4889df	                            mov rdi, rbx	       634	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_6
0x4001899	      0xe800000000	                          call 0x400189e	       634	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_6
0x400189e	          0x4989c5	                            mov r13, rax	       634	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_6
0x40018a1	      0xe93bfeffff	                           jmp 0x40016e1	       634	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_6
0x40018a6	      0xe800000000	                          call 0x40018ab	       664	pretty.c	WHILE_3	FUNCTION_25
userformat_want_item	SWITCH,1:DO,0:functions,0:CALL,0:WHILE,0:IF,1:FOR,0:ELSE,0	14
0x4000040	           0xfb606	                   movzx eax, byte [rsi]	      1483	pretty.c	FUNCTION_42	IF_1
0x4000043	          0x8d48d5	                   lea ecx, [rax - 0x2b]	      1483	pretty.c	FUNCTION_42	IF_1
0x4000046	    0x81e1fd000000	                           and ecx, 0xfd	      1483	pretty.c	FUNCTION_42	IF_1
0x400004c	            0x7412	                            je 0x4000060	      1483	pretty.c	FUNCTION_42	IF_1
0x400004e	            0x3c20	                            cmp al, 0x20	      1483	pretty.c	FUNCTION_42	IF_1
0x4000050	            0x740e	                            je 0x4000060	      1483	pretty.c	FUNCTION_42	IF_1
0x4000052	            0x3c4e	                            cmp al, 0x4e	      1486	pretty.c	FUNCTION_42	SWITCH_1
0x4000054	            0x7503	                           jne 0x4000059	      1486	pretty.c	FUNCTION_42	SWITCH_1
0x4000056	          0x800a01	                        or byte [rdx], 1	      1488	pretty.c	FUNCTION_42	SWITCH_1
0x4000059	            0x31c0	                            xor eax, eax	      1492	pretty.c	FUNCTION_42
0x400005b	              0xc3	                                     ret	      1492	pretty.c	FUNCTION_42
0x400005c	         0xf1f4000	                         nop dword [rax]	      1492	pretty.c	FUNCTION_42
0x4000060	         0xfb64601	               movzx eax, byte [rsi + 1]	      1492	pretty.c	FUNCTION_42
0x4000064	            0xebec	                           jmp 0x4000052	      1492	pretty.c	FUNCTION_42
userformat_find_requirements	SWITCH,0:DO,0:functions,0:CALL,2:WHILE,0:IF,2:FOR,0:ELSE,0	27
0x4002fc0	        0x4883ec28	                           sub rsp, 0x28	      1495	pretty.c	FUNCTION_43
0x4002fc4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1495	pretty.c	FUNCTION_43
0x4002fcd	      0x4889442418	             mov qword [rsp + 0x18], rax	      1495	pretty.c	FUNCTION_43
0x4002fd2	            0x31c0	                            xor eax, eax	      1495	pretty.c	FUNCTION_43
0x4002fd4	          0x4885ff	                           test rdi, rdi	      1498	pretty.c	FUNCTION_43	IF_1
0x4002fd7	    0x48c704240000	                      mov qword [rsp], 0	      1496	pretty.c	FUNCTION_43
0x4002fdf	    0x48c744240800	                  mov qword [rsp + 8], 0	      1496	pretty.c	FUNCTION_43
0x4002fe8	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1496	pretty.c	FUNCTION_43
0x4002ff1	            0x7435	                            je 0x4003028	      1498	pretty.c	FUNCTION_43	IF_1
0x4002ff3	          0x4889f1	                            mov rcx, rsi	      1503	pretty.c	FUNCTION_43	CALL_1
0x4002ff6	      0xba00000000	                              mov edx, 0	      1503	pretty.c	FUNCTION_43	CALL_1
0x4002ffb	          0x4889fe	                            mov rsi, rdi	      1503	pretty.c	FUNCTION_43	CALL_1
0x4002ffe	          0x4889e7	                            mov rdi, rsp	      1503	pretty.c	FUNCTION_43	CALL_1
0x4003001	      0xe800000000	                          call 0x4003006	      1503	pretty.c	FUNCTION_43	CALL_1
0x4003006	          0x4889e7	                            mov rdi, rsp	      1504	pretty.c	FUNCTION_43	CALL_2
0x4003009	      0xe800000000	                          call 0x400300e	      1504	pretty.c	FUNCTION_43	CALL_2
0x400300e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1505	pretty.c	FUNCTION_43
0x4003013	    0x644833042528	                xor rax, qword fs:[0x28]	      1505	pretty.c	FUNCTION_43
0x400301c	            0x7518	                           jne 0x4003036	      1505	pretty.c	FUNCTION_43
0x400301e	        0x4883c428	                           add rsp, 0x28	      1505	pretty.c	FUNCTION_43
0x4003022	              0xc3	                                     ret	      1505	pretty.c	FUNCTION_43
0x4003023	       0xf1f440000	                   nop dword [rax + rax]	      1505	pretty.c	FUNCTION_43
0x4003028	    0x488b3d000000	            mov rdi, qword [0x0400302f] 	      1499	pretty.c	FUNCTION_43	IF_1	IF_2
0x400302f	          0x4885ff	                           test rdi, rdi	      1499	pretty.c	FUNCTION_43	IF_1	IF_2
0x4003032	            0x75bf	                           jne 0x4002ff3	      1499	pretty.c	FUNCTION_43	IF_1	IF_2
0x4003034	            0xebd8	                           jmp 0x400300e	      1499	pretty.c	FUNCTION_43	IF_1	IF_2
0x4003036	      0xe800000000	                          call 0x400303b	      1505	pretty.c	FUNCTION_43
commit_format_is_empty	SWITCH,0:DO,0:functions,0:CALL,0:WHILE,0:IF,0:FOR,0:ELSE,0	10
0x4000830	            0x31c0	                            xor eax, eax	        32	pretty.c	WHILE_3	FUNCTION_1
0x4000832	          0x83ff08	                              cmp edi, 8	        32	pretty.c	WHILE_3	FUNCTION_1
0x4000835	            0x7409	                            je 0x4000840	        32	pretty.c	WHILE_3	FUNCTION_1
0x4000837	            0xf3c3	                                     ret	        33	pretty.c	WHILE_3	FUNCTION_1
0x4000839	     0xf1f80000000	                         nop dword [rax]	        33	pretty.c	WHILE_3	FUNCTION_1
0x4000840	    0x488b05000000	            mov rax, qword [0x04000847] 	        32	pretty.c	WHILE_3	FUNCTION_1
0x4000847	          0x803800	                       cmp byte [rax], 0	        32	pretty.c	WHILE_3	FUNCTION_1
0x400084a	           0xf94c0	                                 sete al	        32	pretty.c	WHILE_3	FUNCTION_1
0x400084d	           0xfb6c0	                           movzx eax, al	        32	pretty.c	WHILE_3	FUNCTION_1
0x4000850	              0xc3	                                     ret	        33	pretty.c	WHILE_3	FUNCTION_1
get_commit_format	SWITCH,0:DO,0:functions,0:CALL,7:WHILE,0:IF,5:FOR,0:ELSE,0	207
0x4000860	            0x4157	                                push r15	       155	pretty.c	WHILE_3	FUNCTION_7
0x4000862	            0x4156	                                push r14	       155	pretty.c	WHILE_3	FUNCTION_7
0x4000864	          0x4989fe	                            mov r14, rdi	       155	pretty.c	WHILE_3	FUNCTION_7
0x4000867	            0x4155	                                push r13	       155	pretty.c	WHILE_3	FUNCTION_7
0x4000869	            0x4154	                                push r12	       155	pretty.c	WHILE_3	FUNCTION_7
0x400086b	          0x4989f5	                            mov r13, rsi	       155	pretty.c	WHILE_3	FUNCTION_7
0x400086e	              0x55	                                push rbp	       155	pretty.c	WHILE_3	FUNCTION_7
0x400086f	              0x53	                                push rbx	       155	pretty.c	WHILE_3	FUNCTION_7
0x4000870	          0x4889fb	                            mov rbx, rdi	       155	pretty.c	WHILE_3	FUNCTION_7
0x4000873	    0x4881ec280100	                          sub rsp, 0x128	       155	pretty.c	WHILE_3	FUNCTION_7
0x400087a	    0x64488b042528	                mov rax, qword fs:[0x28]	       155	pretty.c	WHILE_3	FUNCTION_7
0x4000883	    0x488984241801	            mov qword [rsp + 0x118], rax	       155	pretty.c	WHILE_3	FUNCTION_7
0x400088b	            0x31c0	                            xor eax, eax	       155	pretty.c	WHILE_3	FUNCTION_7
0x400088d	        0x80667bf7	             and byte [rsi + 0x7b], 0xf7	       158	pretty.c	WHILE_3	FUNCTION_7
0x4000891	          0x4885ff	                           test rdi, rdi	       159	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x4000894	      0xb800000000	                              mov eax, 0	       159	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x4000899	            0x7512	                           jne 0x40008ad	       159	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x400089b	      0xe96f010000	                           jmp 0x4000a0f	       159	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x40008a0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40008a4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40008a8	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40008ab	            0x7533	                           jne 0x40008e0	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40008ad	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40008b0	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40008b2	            0x75ec	                           jne 0x40008a0	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40008b4	    0x488b3d000000	            mov rdi, qword [0x040008bb] 	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x40008bb	      0xe800000000	                          call 0x40008c0	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x40008c0	          0x4889df	                            mov rdi, rbx	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x40008c3	      0xe800000000	                          call 0x40008c8	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x40008c8	    0x488905000000	            mov qword [0x040008cf], rax 	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x40008cf	    0x41c785a40000	               mov dword [r13 + 0xa4], 8	        41	pretty.c	WHILE_3	FUNCTION_2
0x40008da	            0xeb56	                           jmp 0x4000932	        41	pretty.c	WHILE_3	FUNCTION_2
0x40008dc	         0xf1f4000	                         nop dword [rax]	        41	pretty.c	WHILE_3	FUNCTION_2
0x40008e0	        0x41803e00	                       cmp byte [r14], 0	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x40008e4	            0x7421	                            je 0x4000907	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x40008e6	          0x4c89f2	                            mov rdx, r14	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x40008e9	      0xb800000000	                              mov eax, 0	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x40008ee	            0xeb0d	                           jmp 0x40008fd	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x40008f0	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40008f4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40008f8	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40008fb	            0x7563	                           jne 0x4000960	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40008fd	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4000900	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4000902	            0x75ec	                           jne 0x40008f0	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4000904	          0x4989d6	                            mov r14, rdx	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4000907	    0x488b3d000000	            mov rdi, qword [0x0400090e] 	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x400090e	      0xe800000000	                          call 0x4000913	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x4000913	          0x4c89f7	                            mov rdi, r14	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000916	      0xe800000000	                          call 0x400091b	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x400091b	    0x488905000000	            mov qword [0x04000922], rax 	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000922	      0x41804d7b08	                 or byte [r13 + 0x7b], 8	        40	pretty.c	WHILE_3	FUNCTION_2	IF_1
0x4000927	    0x41c785a40000	               mov dword [r13 + 0xa4], 8	        41	pretty.c	WHILE_3	FUNCTION_2
0x4000932	    0x488b84241801	           mov rax, qword [rsp + 0x118] 	       184	pretty.c	WHILE_3	FUNCTION_7
0x400093a	    0x644833042528	                xor rax, qword fs:[0x28]	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000943	     0xf85d7020000	                           jne 0x4000c20	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000949	    0x4881c4280100	                          add rsp, 0x128	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000950	              0x5b	                                 pop rbx	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000951	              0x5d	                                 pop rbp	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000952	            0x415c	                                 pop r12	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000954	            0x415d	                                 pop r13	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000956	            0x415e	                                 pop r14	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000958	            0x415f	                                 pop r15	       184	pretty.c	WHILE_3	FUNCTION_7
0x400095a	              0xc3	                                     ret	       184	pretty.c	WHILE_3	FUNCTION_7
0x400095b	       0xf1f440000	                   nop dword [rax + rax]	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000960	      0xbe25000000	                           mov esi, 0x25	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x4000965	          0x4c89f7	                            mov rdi, r14	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x4000968	      0xe800000000	                          call 0x400096d	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x400096d	          0x4885c0	                           test rax, rax	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x4000970	            0x7595	                           jne 0x4000907	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x4000972	    0x488b05000000	            mov rax, qword [0x04000979] 	       148	pretty.c	WHILE_3	FUNCTION_6	IF_1
0x4000979	          0x4885c0	                           test rax, rax	       148	pretty.c	WHILE_3	FUNCTION_6	IF_1
0x400097c	     0xf8441010000	                            je 0x4000ac3	       148	pretty.c	WHILE_3	FUNCTION_6	IF_1
0x4000982	    0x48833d000000	               cmp qword [0x0400098a], 0	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x400098a	     0xf8495020000	                            je 0x4000c25	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000990	          0x4d89f4	                            mov r12, r14	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000993	    0x48c744240801	                  mov qword [rsp + 8], 1	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x400099c	         0xf1f4000	                         nop dword [rax]	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009a0	      0xbb01000000	                              mov ebx, 1	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009a5	    0x48c704240000	                      mov qword [rsp], 0	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009ad	            0x31ed	                            xor ebp, ebp	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009af	            0x31c0	                            xor eax, eax	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009b1	            0xeb21	                           jmp 0x40009d4	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009b3	       0xf1f440000	                   nop dword [rax + rax]	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009b8	        0x48390424	                    cmp qword [rsp], rax	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x40009bc	            0x7748	                            ja 0x4000a06	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x40009be	    0x488b15000000	            mov rdx, qword [0x040009c5] 	       124	pretty.c	WHILE_3	FUNCTION_5	FOR_1
0x40009c5	        0x488d4b01	                      lea rcx, [rbx + 1]	       124	pretty.c	WHILE_3	FUNCTION_5	FOR_1
0x40009c9	          0x4889d8	                            mov rax, rbx	       124	pretty.c	WHILE_3	FUNCTION_5	FOR_1
0x40009cc	          0x4839d3	                            cmp rbx, rdx	       124	pretty.c	WHILE_3	FUNCTION_5	FOR_1
0x40009cf	            0x734f	                           jae 0x4000a20	       124	pretty.c	WHILE_3	FUNCTION_5	FOR_1
0x40009d1	          0x4889cb	                            mov rbx, rcx	       124	pretty.c	WHILE_3	FUNCTION_5	FOR_1
0x40009d4	        0x48c1e005	                              shl rax, 5	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x40009d8	          0x4c89e6	                            mov rsi, r12	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x40009db	          0x4989c7	                            mov r15, rax	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x40009de	    0x488b05000000	            mov rax, qword [0x040009e5] 	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x40009e5	        0x4a8b3c38	              mov rdi, qword [rax + r15]	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x40009e9	      0xe800000000	                          call 0x40009ee	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x40009ee	            0x85c0	                           test eax, eax	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x40009f0	            0x74cc	                            je 0x40009be	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x40009f2	    0x4c033d000000	             add r15, qword [0x040009f9]	       130	pretty.c	WHILE_3	FUNCTION_5	FOR_1	CALL_3
0x40009f9	          0x498b3f	                    mov rdi, qword [r15]	       130	pretty.c	WHILE_3	FUNCTION_5	FOR_1	CALL_3
0x40009fc	      0xe800000000	                          call 0x4000a01	       130	pretty.c	WHILE_3	FUNCTION_5	FOR_1	CALL_3
0x4000a01	          0x4885ed	                           test rbp, rbp	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x4000a04	            0x75b2	                           jne 0x40009b8	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x4000a06	        0x48890424	                    mov qword [rsp], rax	       130	pretty.c	WHILE_3	FUNCTION_5	FOR_1	CALL_3
0x4000a0a	          0x4c89fd	                            mov rbp, r15	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x4000a0d	            0xebaf	                           jmp 0x40009be	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x4000a0f	    0xc786a4000000	               mov dword [rsi + 0xa4], 1	       160	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x4000a19	      0xe914ffffff	                           jmp 0x4000932	       161	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x4000a1e	            0x6690	                                     nop	       161	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x4000a20	          0x4885ed	                           test rbp, rbp	       137	pretty.c	WHILE_3	FUNCTION_5	IF_4
0x4000a23	     0xf848b000000	                            je 0x4000ab4	       137	pretty.c	WHILE_3	FUNCTION_5	IF_4
0x4000a29	          0x8b4514	            mov eax, dword [rbp + 0x14] 	       137	pretty.c	WHILE_3	FUNCTION_5	IF_4
0x4000a2c	            0x85c0	                           test eax, eax	       137	pretty.c	WHILE_3	FUNCTION_5	IF_4
0x4000a2e	            0x741a	                            je 0x4000a4a	       137	pretty.c	WHILE_3	FUNCTION_5	IF_4
0x4000a30	      0x4839542408	                cmp qword [rsp + 8], rdx	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a35	        0x4c8b6518	            mov r12, qword [rbp + 0x18] 	       138	pretty.c	WHILE_3	FUNCTION_5	IF_4	CALL_4
0x4000a39	     0xf83e6010000	                           jae 0x4000c25	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a3f	    0x488344240801	                  add qword [rsp + 8], 1	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a45	      0xe956ffffff	                           jmp 0x40009a0	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a4a	          0x8b4508	                mov eax, dword [rbp + 8]	       177	pretty.c	WHILE_3	FUNCTION_7
0x4000a4d	      0x410fb6557b	           movzx edx, byte [r13 + 0x7b] 	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000a52	    0x418985a40000	             mov dword [r13 + 0xa4], eax	       177	pretty.c	WHILE_3	FUNCTION_7
0x4000a59	         0xfb6450c	            movzx eax, byte [rbp + 0xc] 	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000a5d	          0x83e2f7	                     and edx, 0xfffffff7	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000a60	          0x83e001	                              and eax, 1	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000a63	          0xc1e003	                              shl eax, 3	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000a66	             0x9d0	                             or eax, edx	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000a68	        0x4188457b	               mov byte [r13 + 0x7b], al	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000a6c	        0x837d0808	                  cmp dword [rbp + 8], 8	       180	pretty.c	WHILE_3	FUNCTION_7	IF_5
0x4000a70	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       179	pretty.c	WHILE_3	FUNCTION_7
0x4000a73	    0x4189859c0000	             mov dword [r13 + 0x9c], eax	       179	pretty.c	WHILE_3	FUNCTION_7
0x4000a7a	     0xf85b2feffff	                           jne 0x4000932	       180	pretty.c	WHILE_3	FUNCTION_7	IF_5
0x4000a80	          0x8b5d0c	              mov ebx, dword [rbp + 0xc]	       181	pretty.c	WHILE_3	FUNCTION_7	IF_5	CALL_7
0x4000a83	    0x488b3d000000	            mov rdi, qword [0x04000a8a] 	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x4000a8a	        0x488b6d18	            mov rbp, qword [rbp + 0x18] 	       181	pretty.c	WHILE_3	FUNCTION_7	IF_5	CALL_7
0x4000a8e	      0xe800000000	                          call 0x4000a93	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x4000a93	          0x4889ef	                            mov rdi, rbp	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000a96	      0xe800000000	                          call 0x4000a9b	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000a9b	            0x85db	                           test ebx, ebx	        39	pretty.c	WHILE_3	FUNCTION_2	IF_1
0x4000a9d	    0x488905000000	            mov qword [0x04000aa4], rax 	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000aa4	     0xf8425feffff	                            je 0x40008cf	        39	pretty.c	WHILE_3	FUNCTION_2	IF_1
0x4000aaa	      0x41804d7b08	                 or byte [r13 + 0x7b], 8	        40	pretty.c	WHILE_3	FUNCTION_2	IF_1
0x4000aaf	      0xe91bfeffff	                           jmp 0x40008cf	        40	pretty.c	WHILE_3	FUNCTION_2	IF_1
0x4000ab4	          0x4c89f6	                            mov rsi, r14	       175	pretty.c	WHILE_3	FUNCTION_7	CALL_6
0x4000ab7	      0xbf00000000	                              mov edi, 0	       175	pretty.c	WHILE_3	FUNCTION_7	CALL_6
0x4000abc	            0x31c0	                            xor eax, eax	       175	pretty.c	WHILE_3	FUNCTION_7	CALL_6
0x4000abe	      0xe800000000	                          call 0x4000ac3	       175	pretty.c	WHILE_3	FUNCTION_7	CALL_6
0x4000ac3	    0x488b15000000	            mov rdx, qword [0x04000aca] 	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000aca	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000acf	      0xb920000000	                           mov ecx, 0x20	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000ad4	    0x48c705000000	               mov qword [0x04000adf], 8	       102	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000adf	    0x48c705000000	               mov qword [0x04000aea], 8	       103	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000aea	          0x4889df	                            mov rdi, rbx	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000aed	        0x4883fa07	                              cmp rdx, 7	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000af1	          0xf348ab	              rep stosq qword [rdi], rax	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000af4	    0x48c744241000	               mov qword [rsp + 0x10], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000afd	    0x48c744243000	               mov qword [rsp + 0x30], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b06	    0xc74424380100	               mov dword [rsp + 0x38], 1	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b0e	    0xc74424400800	               mov dword [rsp + 0x40], 8	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b16	    0x48c744245000	               mov qword [rsp + 0x50], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b1f	    0xc74424580200	               mov dword [rsp + 0x58], 2	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b27	    0x48c744247000	               mov qword [rsp + 0x70], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b30	    0xc74424780600	               mov dword [rsp + 0x78], 6	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b38	    0x48c784249000	               mov qword [rsp + 0x90], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b44	    0xc78424980000	               mov dword [rsp + 0x98], 7	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b4f	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b5b	    0xc78424b80000	               mov dword [rsp + 0xb8], 4	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b66	    0xc78424c00000	               mov dword [rsp + 0xc0], 8	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b71	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b7d	    0xc78424d80000	               mov dword [rsp + 0xd8], 3	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b88	    0xc78424e00000	               mov dword [rsp + 0xe0], 8	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b93	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b9f	    0xc78424f80000	               mov dword [rsp + 0xf8], 5	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000baa	    0xc78424fc0000	               mov dword [rsp + 0xfc], 1	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bb5	            0x7724	                            ja 0x4000bdb	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bb7	      0x488d445230	          lea rax, [rdx + rdx*2 + 0x30] 	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bbc	            0x31ff	                            xor edi, edi	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bbe	          0x48d1e8	                              shr rax, 1	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bc1	    0x488905000000	            mov qword [0x04000bc8], rax 	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bc8	        0x48c1e005	                              shl rax, 5	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bcc	          0x4889c6	                            mov rsi, rax	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bcf	      0xe800000000	                          call 0x4000bd4	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bd4	    0x488905000000	            mov qword [0x04000bdb], rax 	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bdb	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_83	CALL_3
0x4000be0	        0x488d7808	                      lea rdi, [rax + 8]	        53	string3.h	FUNCTION_83	CALL_3
0x4000be4	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_83	CALL_3
0x4000be7	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_83	CALL_3
0x4000beb	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_83	CALL_3
0x4000bee	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	        53	string3.h	FUNCTION_83	CALL_3
0x4000bf5	    0x488990f80000	             mov qword [rax + 0xf8], rdx	        53	string3.h	FUNCTION_83	CALL_3
0x4000bfc	          0x4829f8	                            sub rax, rdi	        53	string3.h	FUNCTION_83	CALL_3
0x4000bff	          0x4829c6	                            sub rsi, rax	        53	string3.h	FUNCTION_83	CALL_3
0x4000c02	       0x500010000	                          add eax, 0x100	        53	string3.h	FUNCTION_83	CALL_3
0x4000c07	          0xc1e803	                              shr eax, 3	        53	string3.h	FUNCTION_83	CALL_3
0x4000c0a	            0x89c1	                            mov ecx, eax	        53	string3.h	FUNCTION_83	CALL_3
0x4000c0c	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_83	CALL_3
0x4000c0f	            0x31f6	                            xor esi, esi	       108	pretty.c	WHILE_3	ELSE_2	FUNCTION_4	CALL_2
0x4000c11	      0xbf00000000	                              mov edi, 0	       108	pretty.c	WHILE_3	ELSE_2	FUNCTION_4	CALL_2
0x4000c16	      0xe800000000	                          call 0x4000c1b	       108	pretty.c	WHILE_3	ELSE_2	FUNCTION_4	CALL_2
0x4000c1b	      0xe962fdffff	                           jmp 0x4000982	       108	pretty.c	WHILE_3	ELSE_2	FUNCTION_4	CALL_2
0x4000c20	      0xe800000000	                          call 0x4000c25	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000c25	          0x4c89f6	                            mov rsi, r14	       120	pretty.c	WHILE_3	FUNCTION_5	IF_1	CALL_1
0x4000c28	      0xbf00000000	                              mov edi, 0	       120	pretty.c	WHILE_3	FUNCTION_5	IF_1	CALL_1
0x4000c2d	            0x31c0	                            xor eax, eax	       120	pretty.c	WHILE_3	FUNCTION_5	IF_1	CALL_1
0x4000c2f	      0xe800000000	                          call 0x4000c34	       120	pretty.c	WHILE_3	FUNCTION_5	IF_1	CALL_1
strbuf_add_tabexpand	SWITCH,0:DO,0:functions,0:CALL,5:WHILE,1:IF,1:FOR,0:ELSE,0	80
0x4000560	            0x4157	                                push r15	      1689	pretty.c	FUNCTION_48
0x4000562	            0x4156	                                push r14	      1689	pretty.c	FUNCTION_48
0x4000564	          0x4189f7	                           mov r15d, esi	      1689	pretty.c	FUNCTION_48
0x4000567	            0x4155	                                push r13	      1689	pretty.c	FUNCTION_48
0x4000569	            0x4154	                                push r12	      1689	pretty.c	FUNCTION_48
0x400056b	          0x4189ce	                           mov r14d, ecx	      1689	pretty.c	FUNCTION_48
0x400056e	              0x55	                                push rbp	      1689	pretty.c	FUNCTION_48
0x400056f	              0x53	                                push rbx	      1689	pretty.c	FUNCTION_48
0x4000570	          0x4889d5	                            mov rbp, rdx	      1689	pretty.c	FUNCTION_48
0x4000573	        0x4883ec48	                           sub rsp, 0x48	      1689	pretty.c	FUNCTION_48
0x4000577	    0x64488b042528	                mov rax, qword fs:[0x28]	      1689	pretty.c	FUNCTION_48
0x4000580	      0x4889442438	             mov qword [rsp + 0x38], rax	      1689	pretty.c	FUNCTION_48
0x4000585	            0x31c0	                            xor eax, eax	      1689	pretty.c	FUNCTION_48
0x4000587	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1689	pretty.c	FUNCTION_48
0x400058c	         0xf1f4000	                         nop dword [rax]	      1689	pretty.c	FUNCTION_48
0x4000590	          0x4963c6	                        movsxd rax, r14d	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4000593	      0xbe09000000	                              mov esi, 9	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4000598	          0x4889ef	                            mov rdi, rbp	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x400059b	          0x4889c2	                            mov rdx, rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x400059e	      0x4889442410	             mov qword [rsp + 0x10], rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x40005a3	      0xe800000000	                          call 0x40005a8	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x40005a8	          0x4885c0	                           test rax, rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x40005ab	          0x4989c4	                            mov r12, rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x40005ae	            0x7445	                            je 0x40005f5	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x40005b0	          0x4d89e5	                            mov r13, r12	      1676	pretty.c	FUNCTION_47
0x40005b3	            0x31db	                            xor ebx, ebx	      1678	pretty.c	FUNCTION_47	WHILE_1
0x40005b5	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      1678	pretty.c	FUNCTION_47	WHILE_1
0x40005ba	          0x4929ed	                            sub r13, rbp	      1676	pretty.c	FUNCTION_47
0x40005bd	      0x48896c2408	                mov qword [rsp + 8], rbp	      1676	pretty.c	FUNCTION_47
0x40005c2	          0x4d85ed	                           test r13, r13	      1678	pretty.c	FUNCTION_47	WHILE_1
0x40005c5	      0x4c896c2430	             mov qword [rsp + 0x30], r13	      1676	pretty.c	FUNCTION_47
0x40005ca	            0x7516	                           jne 0x40005e2	      1678	pretty.c	FUNCTION_47	WHILE_1
0x40005cc	            0xeb62	                           jmp 0x4000630	      1678	pretty.c	FUNCTION_47	WHILE_1
0x40005ce	            0x6690	                                     nop	      1678	pretty.c	FUNCTION_47	WHILE_1
0x40005d0	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x40005d6	            0x741d	                            je 0x40005f5	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x40005d8	             0x1c3	                            add ebx, eax	      1682	pretty.c	FUNCTION_47	WHILE_1
0x40005da	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      1678	pretty.c	FUNCTION_47	WHILE_1
0x40005e0	            0x744e	                            je 0x4000630	      1678	pretty.c	FUNCTION_47	WHILE_1
0x40005e2	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1679	pretty.c	FUNCTION_47	WHILE_1	CALL_1
0x40005e7	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	      1679	pretty.c	FUNCTION_47	WHILE_1	CALL_1
0x40005ec	      0xe800000000	                          call 0x40005f1	      1679	pretty.c	FUNCTION_47	WHILE_1	CALL_1
0x40005f1	            0x85c0	                           test eax, eax	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x40005f3	            0x79db	                           jns 0x40005d0	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x40005f5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1720	pretty.c	FUNCTION_48	CALL_5
0x40005fa	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1720	pretty.c	FUNCTION_48	CALL_5
0x40005ff	          0x4889ee	                            mov rsi, rbp	      1720	pretty.c	FUNCTION_48	CALL_5
0x4000602	      0xe800000000	                          call 0x4000607	      1720	pretty.c	FUNCTION_48	CALL_5
0x4000607	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1721	pretty.c	FUNCTION_48
0x400060c	    0x644833042528	                xor rax, qword fs:[0x28]	      1721	pretty.c	FUNCTION_48
0x4000615	            0x755c	                           jne 0x4000673	      1721	pretty.c	FUNCTION_48
0x4000617	        0x4883c448	                           add rsp, 0x48	      1721	pretty.c	FUNCTION_48
0x400061b	              0x5b	                                 pop rbx	      1721	pretty.c	FUNCTION_48
0x400061c	              0x5d	                                 pop rbp	      1721	pretty.c	FUNCTION_48
0x400061d	            0x415c	                                 pop r12	      1721	pretty.c	FUNCTION_48
0x400061f	            0x415d	                                 pop r13	      1721	pretty.c	FUNCTION_48
0x4000621	            0x415e	                                 pop r14	      1721	pretty.c	FUNCTION_48
0x4000623	            0x415f	                                 pop r15	      1721	pretty.c	FUNCTION_48
0x4000625	              0xc3	                                     ret	      1721	pretty.c	FUNCTION_48
0x4000626	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1721	pretty.c	FUNCTION_48
0x4000630	          0x4889ee	                            mov rsi, rbp	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4000633	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4000638	          0x4c89ea	                            mov rdx, r13	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x400063b	          0x4889ef	                            mov rdi, rbp	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x400063e	      0xe800000000	                          call 0x4000643	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4000643	            0x89d8	                            mov eax, ebx	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4000645	          0x4889ef	                            mov rdi, rbp	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4000648	      0x498d6c2401	                      lea rbp, [r12 + 1]	      1711	pretty.c	FUNCTION_48	WHILE_1
0x400064d	              0x99	                                     cdq	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x400064e	      0xbe20000000	                           mov esi, 0x20	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4000653	          0x41f7ff	                               idiv r15d	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4000656	          0x4489f8	                           mov eax, r15d	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4000659	            0x29d0	                            sub eax, edx	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x400065b	          0x4863d0	                         movsxd rdx, eax	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x400065e	      0xe800000000	                          call 0x4000663	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4000663	          0x4889e8	                            mov rax, rbp	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4000666	      0x482b442408	                sub rax, qword [rsp + 8]	      1711	pretty.c	FUNCTION_48	WHILE_1
0x400066b	          0x4129c6	                           sub r14d, eax	      1711	pretty.c	FUNCTION_48	WHILE_1
0x400066e	      0xe91dffffff	                           jmp 0x4000590	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4000673	      0xe800000000	                          call 0x4000678	      1721	pretty.c	FUNCTION_48
format_commit_message	SWITCH,0:DO,0:functions,0:CALL,9:WHILE,0:IF,5:FOR,0:ELSE,1	107
0x4003040	            0x4156	                                push r14	      1510	pretty.c	FUNCTION_44
0x4003042	            0x4155	                                push r13	      1510	pretty.c	FUNCTION_44
0x4003044	          0x4989f6	                            mov r14, rsi	      1510	pretty.c	FUNCTION_44
0x4003047	            0x4154	                                push r12	      1510	pretty.c	FUNCTION_44
0x4003049	              0x55	                                push rbp	      1510	pretty.c	FUNCTION_44
0x400304a	          0x4989fc	                            mov r12, rdi	      1510	pretty.c	FUNCTION_44
0x400304d	              0x53	                                push rbx	      1510	pretty.c	FUNCTION_44
0x400304e	          0x4889d3	                            mov rbx, rdx	      1510	pretty.c	FUNCTION_44
0x4003051	          0x4889ca	                            mov rdx, rcx	      1510	pretty.c	FUNCTION_44
0x4003054	    0x4881ece00000	                           sub rsp, 0xe0	      1510	pretty.c	FUNCTION_44
0x400305b	        0x4c8b6958	            mov r13, qword [rcx + 0x58] 	      1512	pretty.c	FUNCTION_44
0x400305f	      0xb918000000	                           mov ecx, 0x18	        90	string3.h	FUNCTION_86	CALL_5
0x4003064	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	        90	string3.h	FUNCTION_86	CALL_5
0x4003069	      0x488d742468	                   lea rsi, [rsp + 0x68]	      1523	pretty.c	FUNCTION_44	CALL_1
0x400306e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1510	pretty.c	FUNCTION_44
0x4003077	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      1510	pretty.c	FUNCTION_44
0x400307f	            0x31c0	                            xor eax, eax	      1510	pretty.c	FUNCTION_44
0x4003081	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_86	CALL_5
0x4003084	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_86	CALL_5
0x4003087	        0x488b4308	                mov rax, qword [rbx + 8]	      1518	pretty.c	FUNCTION_44
0x400308b	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1517	pretty.c	FUNCTION_44
0x4003090	          0x4c89e7	                            mov rdi, r12	      1523	pretty.c	FUNCTION_44	CALL_1
0x4003093	      0xba00000000	                              mov edx, 0	      1523	pretty.c	FUNCTION_44	CALL_1
0x4003098	      0x4c89642410	             mov qword [rsp + 0x10], r12	      1516	pretty.c	FUNCTION_44
0x400309d	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      1518	pretty.c	FUNCTION_44
0x40030a5	      0xe800000000	                          call 0x40030aa	      1523	pretty.c	FUNCTION_44	CALL_1
0x40030aa	      0xba00000000	                              mov edx, 0	      1527	pretty.c	FUNCTION_44	CALL_2
0x40030af	          0x4889e9	                            mov rcx, rbp	      1527	pretty.c	FUNCTION_44	CALL_2
0x40030b2	          0x4c89f6	                            mov rsi, r14	      1527	pretty.c	FUNCTION_44	CALL_2
0x40030b5	          0x4889df	                            mov rdi, rbx	      1527	pretty.c	FUNCTION_44	CALL_2
0x40030b8	      0x4889442460	             mov qword [rsp + 0x60], rax	      1523	pretty.c	FUNCTION_44	CALL_1
0x40030bd	      0xe800000000	                          call 0x40030c2	      1527	pretty.c	FUNCTION_44	CALL_2
0x40030c2	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40030c7	          0x4885d2	                           test rdx, rdx	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40030ca	     0xf8420010000	                            je 0x40031f0	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40030d0	    0x488bb424c800	            mov rsi, qword [rsp + 0xc8] 	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x40030d8	        0x488b4308	                mov rax, qword [rbx + 8]	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x40030dc	          0x4839c6	                            cmp rsi, rax	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x40030df	     0xf82e3000000	                            jb 0x40031c8	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x40030e5	    0x48898424c800	             mov qword [rsp + 0xc8], rax	       912	pretty.c	WHILE_3	FUNCTION_34
0x40030ed	    0x48c744247000	               mov qword [rsp + 0x70], 0	       913	pretty.c	WHILE_3	FUNCTION_34
0x40030f6	    0x48c744247800	               mov qword [rsp + 0x78], 0	       914	pretty.c	WHILE_3	FUNCTION_34
0x40030ff	    0x48c784248000	               mov qword [rsp + 0x80], 0	       915	pretty.c	WHILE_3	FUNCTION_34
0x400310b	          0x4d85ed	                           test r13, r13	      1531	pretty.c	FUNCTION_44	IF_1
0x400310e	            0x7450	                            je 0x4003160	      1531	pretty.c	FUNCTION_44	IF_1
0x4003110	          0x4c89ee	                            mov rsi, r13	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x4003113	      0xbf00000000	                              mov edi, 0	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x4003118	      0xe800000000	                          call 0x400311d	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x400311d	            0x85c0	                           test eax, eax	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x400311f	            0x7465	                            je 0x4003186	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x4003121	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x4003126	      0xe800000000	                          call 0x400312b	      1548	pretty.c	FUNCTION_44	CALL_8
0x400312b	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      1549	pretty.c	FUNCTION_44	CALL_9
0x4003130	          0x4c89e7	                            mov rdi, r12	      1549	pretty.c	FUNCTION_44	CALL_9
0x4003133	      0xe800000000	                          call 0x4003138	      1549	pretty.c	FUNCTION_44	CALL_9
0x4003138	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	      1550	pretty.c	FUNCTION_44
0x4003140	    0x644833042528	                xor rax, qword fs:[0x28]	      1550	pretty.c	FUNCTION_44
0x4003149	     0xf85c1000000	                           jne 0x4003210	      1550	pretty.c	FUNCTION_44
0x400314f	    0x4881c4e00000	                           add rsp, 0xe0	      1550	pretty.c	FUNCTION_44
0x4003156	              0x5b	                                 pop rbx	      1550	pretty.c	FUNCTION_44
0x4003157	              0x5d	                                 pop rbp	      1550	pretty.c	FUNCTION_44
0x4003158	            0x415c	                                 pop r12	      1550	pretty.c	FUNCTION_44
0x400315a	            0x415d	                                 pop r13	      1550	pretty.c	FUNCTION_44
0x400315c	            0x415e	                                 pop r14	      1550	pretty.c	FUNCTION_44
0x400315e	              0xc3	                                     ret	      1550	pretty.c	FUNCTION_44
0x400315f	              0x90	                                     nop	      1550	pretty.c	FUNCTION_44
0x4003160	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1535	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x4003165	          0x4885ff	                           test rdi, rdi	      1535	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x4003168	            0x74bc	                            je 0x4003126	      1535	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x400316a	      0xbe00000000	                              mov esi, 0	      1536	pretty.c	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x400316f	      0xe800000000	                          call 0x4003174	      1536	pretty.c	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4003174	            0x85c0	                           test eax, eax	      1535	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x4003176	            0x75a9	                           jne 0x4003121	      1535	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x4003178	      0x4c8b6c2468	            mov r13, qword [rsp + 0x68] 	      1537	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x400317d	          0x4d85ed	                           test r13, r13	      1540	pretty.c	FUNCTION_44	IF_4
0x4003180	     0xf848f000000	                            je 0x4003215	      1540	pretty.c	FUNCTION_44	IF_4
0x4003186	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x400318a	          0x8b7308	                mov esi, dword [rbx + 8]	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x400318d	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x4003192	      0xb900000000	                              mov ecx, 0	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x4003197	          0x4c89ea	                            mov rdx, r13	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x400319a	      0xe800000000	                          call 0x400319f	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x400319f	          0x4885c0	                           test rax, rax	      1544	pretty.c	FUNCTION_44	IF_4	IF_5
0x40031a2	     0xf8479ffffff	                            je 0x4003121	      1544	pretty.c	FUNCTION_44	IF_4	IF_5
0x40031a8	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x40031ad	          0x4889c6	                            mov rsi, rax	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x40031b0	          0x4889df	                            mov rdi, rbx	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x40031b3	          0x8d4a01	                      lea ecx, [rdx + 1]	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x40031b6	          0x4863c9	                         movsxd rcx, ecx	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x40031b9	      0xe800000000	                          call 0x40031be	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x40031be	      0xe95effffff	                           jmp 0x4003121	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x40031c3	       0xf1f440000	                   nop dword [rax + rax]	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x40031c8	    0x4c8b84248000	              mov r8, qword [rsp + 0x80]	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x40031d0	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x40031d5	          0x4889df	                            mov rdi, rbx	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x40031d8	      0xe8a3d4ffff	                    call sym.strbuf_wrap	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x40031dd	        0x488b4308	                mov rax, qword [rbx + 8]	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x40031e1	      0xe9fffeffff	                           jmp 0x40030e5	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x40031e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x40031f0	    0x48837c247800	               cmp qword [rsp + 0x78], 0	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40031f6	     0xf85d4feffff	                           jne 0x40030d0	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40031fc	    0x4883bc248000	               cmp qword [rsp + 0x80], 0	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4003205	     0xf85c5feffff	                           jne 0x40030d0	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x400320b	      0xe9fbfeffff	                           jmp 0x400310b	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4003210	      0xe800000000	                          call 0x4003215	      1550	pretty.c	FUNCTION_44
0x4003215	            0x31ff	                            xor edi, edi	      1550	pretty.c	FUNCTION_44
0x4003217	      0xe90affffff	                           jmp 0x4003126	      1550	pretty.c	FUNCTION_44
git_pretty_formats_config	SWITCH,0:DO,0:functions,0:CALL,5:WHILE,0:IF,7:FOR,2:ELSE,2	162
0x4000070	            0x4157	                                push r15	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000072	            0x4156	                                push r14	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000074	          0x4989ff	                            mov r15, rdi	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000077	            0x4155	                                push r13	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000079	            0x4154	                                push r12	        45	pretty.c	WHILE_3	FUNCTION_3
0x400007b	          0x4989fe	                            mov r14, rdi	        45	pretty.c	WHILE_3	FUNCTION_3
0x400007e	              0x55	                                push rbp	        45	pretty.c	WHILE_3	FUNCTION_3
0x400007f	              0x53	                                push rbx	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000080	        0x4883ec28	                           sub rsp, 0x28	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000084	    0x64488b042528	                mov rax, qword fs:[0x28]	        45	pretty.c	WHILE_3	FUNCTION_3
0x400008d	      0x4889442418	             mov qword [rsp + 0x18], rax	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000092	            0x31c0	                            xor eax, eax	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000094	      0x4889742408	                mov qword [rsp + 8], rsi	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000099	      0xb800000000	                              mov eax, 0	        45	pretty.c	WHILE_3	FUNCTION_3
0x400009e	            0xeb0e	                           jmp 0x40000ae	        45	pretty.c	WHILE_3	FUNCTION_3
0x40000a0	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40000a4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40000a8	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40000ac	            0x7572	                           jne 0x4000120	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40000ae	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40000b1	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40000b3	            0x75eb	                           jne 0x40000a0	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40000b5	    0x488b1d000000	            mov rbx, qword [0x040000bc] 	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000bc	          0x4531e4	                          xor r12d, r12d	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000bf	    0x488b2d000000	            mov rbp, qword [0x040000c6] 	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000c6	          0x4885db	                           test rbx, rbx	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000c9	            0x7512	                           jne 0x40000dd	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000cb	            0x31ed	                            xor ebp, ebp	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000cd	            0xeb5f	                           jmp 0x400012e	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000cf	              0x90	                                     nop	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000d0	        0x4983c401	                              add r12, 1	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000d4	        0x4883c520	                           add rbp, 0x20	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000d8	          0x4939dc	                            cmp r12, rbx	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000db	            0x744b	                            je 0x4000128	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000dd	        0x488b7d00	                    mov rdi, qword [rbp]	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000e1	          0x4c89fe	                            mov rsi, r15	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000e4	      0xe800000000	                          call 0x40000e9	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000e9	            0x85c0	                           test eax, eax	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000eb	          0x4189c5	                           mov r13d, eax	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000ee	            0x75e0	                           jne 0x40000d0	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000f0	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40000f5	    0x644833342528	                xor rsi, qword fs:[0x28]	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40000fe	          0x4489e8	                           mov eax, r13d	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000101	     0xf85fe010000	                           jne 0x4000305	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000107	        0x4883c428	                           add rsp, 0x28	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x400010b	              0x5b	                                 pop rbx	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x400010c	              0x5d	                                 pop rbp	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x400010d	            0x415c	                                 pop r12	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x400010f	            0x415d	                                 pop r13	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000111	            0x415e	                                 pop r14	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000113	            0x415f	                                 pop r15	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000115	              0xc3	                                     ret	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000116	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000120	          0x4531ed	                          xor r13d, r13d	        52	pretty.c	WHILE_3	FUNCTION_3	IF_1
0x4000123	            0xebcb	                           jmp 0x40000f0	        52	pretty.c	WHILE_3	FUNCTION_3	IF_1
0x4000125	           0xf1f00	                         nop dword [rax]	        52	pretty.c	WHILE_3	FUNCTION_3	IF_1
0x4000128	          0x4863eb	                         movsxd rbp, ebx	        52	pretty.c	WHILE_3	FUNCTION_3	IF_1
0x400012b	          0x4863db	                         movsxd rbx, ebx	        52	pretty.c	WHILE_3	FUNCTION_3	IF_1
0x400012e	    0x4c8b25000000	            mov r12, qword [0x04000135] 	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000135	          0x4c39e3	                            cmp rbx, r12	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000138	     0xf83a2000000	                           jae 0x40001e0	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x400013e	    0x4c8b2d000000	            mov r13, qword [0x04000145] 	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000145	            0xeb19	                           jmp 0x4000160	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000147	    0x660f1f840000	                    nop word [rax + rax]	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000150	        0x488d5d01	                      lea rbx, [rbp + 1]	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000154	          0x4c39e3	                            cmp rbx, r12	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000157	          0x4889dd	                            mov rbp, rbx	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x400015a	     0xf8380000000	                           jae 0x40001e0	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000160	        0x48c1e305	                              shl rbx, 5	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x4000164	          0x4c89fe	                            mov rsi, r15	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x4000167	          0x4c01eb	                            add rbx, r13	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x400016a	          0x488b3b	                    mov rdi, qword [rbx]	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x400016d	      0xe800000000	                          call 0x4000172	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x4000172	            0x85c0	                           test eax, eax	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x4000174	            0x75da	                           jne 0x4000150	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x4000176	          0x4c89ff	                            mov rdi, r15	        74	pretty.c	WHILE_3	FUNCTION_3	CALL_2
0x4000179	      0xe800000000	                          call 0x400017e	        74	pretty.c	WHILE_3	FUNCTION_3	CALL_2
0x400017e	      0x488b542408	                mov rdx, qword [rsp + 8]	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x4000183	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x4000188	          0x488903	                    mov qword [rbx], rax	        74	pretty.c	WHILE_3	FUNCTION_3	CALL_2
0x400018b	    0xc74308080000	                  mov dword [rbx + 8], 8	        75	pretty.c	WHILE_3	FUNCTION_3
0x4000192	          0x4c89f6	                            mov rsi, r14	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x4000195	      0xe800000000	                          call 0x400019a	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x400019a	            0x85c0	                           test eax, eax	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x400019c	          0x4189c5	                           mov r13d, eax	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x400019f	     0xf8544010000	                           jne 0x40002e9	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x40001a5	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x40001aa	      0xb800000000	                              mov eax, 0	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x40001af	          0x4889ea	                            mov rdx, rbp	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x40001b2	            0xeb15	                           jmp 0x40001c9	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x40001b4	         0xf1f4000	                         nop dword [rax]	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x40001b8	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40001bc	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40001c0	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40001c3	     0xf85b7000000	                           jne 0x4000280	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40001c9	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40001cc	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40001ce	            0x75e8	                           jne 0x40001b8	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40001d0	    0xc7430c000000	                mov dword [rbx + 0xc], 0	        80	pretty.c	WHILE_3	FUNCTION_3	IF_6
0x40001d7	        0x48895318	             mov qword [rbx + 0x18], rdx	        85	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40001db	      0xe910ffffff	                           jmp 0x40000f0	        87	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40001e0	    0x488b05000000	            mov rax, qword [0x040001e7] 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001e7	      0x498d542401	                      lea rdx, [r12 + 1]	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001ec	          0x4839c2	                            cmp rdx, rax	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001ef	     0xf86e8000000	                           jbe 0x40002dd	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001f5	      0x488d444030	          lea rax, [rax + rax*2 + 0x30] 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001fa	          0x48d1e8	                              shr rax, 1	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001fd	          0x4839c2	                            cmp rdx, rax	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000200	     0xf87cb000000	                            ja 0x40002d1	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000206	    0x488905000000	            mov qword [0x0400020d], rax 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x400020d	          0x4889c2	                            mov rdx, rax	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000210	    0x48b8ffffffff	          movabs rax, 0x7ffffffffffffff 	       795	git-compat-util.h	FUNCTION_111	IF_1
0x400021a	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_111	IF_1
0x400021d	     0xf87d1000000	                            ja 0x40002f4	       795	git-compat-util.h	FUNCTION_111	IF_1
0x4000223	    0x488b3d000000	            mov rdi, qword [0x0400022a] 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x400022a	          0x4889d6	                            mov rsi, rdx	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x400022d	        0x48c1e605	                              shl rsi, 5	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000231	      0xe800000000	                          call 0x4000236	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000236	    0x4c8b25000000	            mov r12, qword [0x0400023d] 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x400023d	    0x488905000000	            mov qword [0x04000244], rax 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000244	      0x498d542401	                      lea rdx, [r12 + 1]	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000249	        0x49c1e405	                              shl r12, 5	        69	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x400024d	    0x488915000000	            mov qword [0x04000254], rdx 	        71	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000254	        0x4a8d1c20	                    lea rbx, [rax + r12]	        69	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000258	    0x48c703000000	                      mov qword [rbx], 0	        90	string3.h	FUNCTION_86	CALL_5
0x400025f	    0x48c743080000	                  mov qword [rbx + 8], 0	        90	string3.h	FUNCTION_86	CALL_5
0x4000267	    0x48c743100000	               mov qword [rbx + 0x10], 0	        90	string3.h	FUNCTION_86	CALL_5
0x400026f	    0x48c743180000	               mov qword [rbx + 0x18], 0	        90	string3.h	FUNCTION_86	CALL_5
0x4000277	      0xe9fafeffff	                           jmp 0x4000176	        90	string3.h	FUNCTION_86	CALL_5
0x400027c	         0xf1f4000	                         nop dword [rax]	        90	string3.h	FUNCTION_86	CALL_5
0x4000280	          0x4889ea	                            mov rdx, rbp	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x4000283	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4000288	            0xeb13	                           jmp 0x400029d	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400028a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4000290	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4000294	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4000298	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400029b	            0x7513	                           jne 0x40002b0	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400029d	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40002a0	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40002a2	            0x75ec	                           jne 0x4000290	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40002a4	    0xc7430c010000	                mov dword [rbx + 0xc], 1	        82	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7
0x40002ab	      0xe927ffffff	                           jmp 0x40001d7	        82	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7
0x40002b0	      0xbe25000000	                           mov esi, 0x25	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002b5	          0x4889ef	                            mov rdi, rbp	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002b8	      0xe800000000	                          call 0x40002bd	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002bd	          0x4885c0	                           test rax, rax	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002c0	          0x4889ea	                            mov rdx, rbp	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002c3	            0x75df	                           jne 0x40002a4	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002c5	    0xc74314010000	               mov dword [rbx + 0x14], 1	        84	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40002cc	      0xe906ffffff	                           jmp 0x40001d7	        84	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40002d1	    0x488915000000	            mov qword [0x040002d8], rdx 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40002d8	      0xe933ffffff	                           jmp 0x4000210	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40002dd	    0x488b05000000	            mov rax, qword [0x040002e4] 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40002e4	      0xe960ffffff	                           jmp 0x4000249	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40002e9	    0x41bdffffffff	                    mov r13d, 0xffffffff	        77	pretty.c	WHILE_3	FUNCTION_3	IF_5
0x40002ef	      0xe9fcfdffff	                           jmp 0x40000f0	        77	pretty.c	WHILE_3	FUNCTION_3	IF_5
0x40002f4	      0xbe20000000	                           mov esi, 0x20	       796	git-compat-util.h	FUNCTION_111	IF_1	CALL_1
0x40002f9	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_111	IF_1	CALL_1
0x40002fe	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_111	IF_1	CALL_1
0x4000300	      0xe800000000	                          call 0x4000305	       796	git-compat-util.h	FUNCTION_111	IF_1	CALL_1
0x4000305	      0xe800000000	                          call 0x400030a	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
format_person_part	SWITCH,1:DO,0:functions,0:CALL,15:WHILE,0:IF,7:FOR,0:ELSE,0	141
0x4000d10	            0x4155	                                push r13	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d12	            0x4154	                                push r12	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d14	          0x4d89c4	                             mov r12, r8	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d17	              0x55	                                push rbp	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d18	              0x53	                                push rbx	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d19	          0x4889fd	                            mov rbp, rdi	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d1c	            0x89f3	                            mov ebx, esi	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d1e	          0x4889d6	                            mov rsi, rdx	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d21	            0x89ca	                            mov edx, ecx	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d23	        0x4883ec78	                           sub rsp, 0x78	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d27	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       687	pretty.c	WHILE_3	FUNCTION_27	IF_1	CALL_1
0x4000d2c	    0x64488b042528	                mov rax, qword fs:[0x28]	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d35	      0x4889442468	             mov qword [rsp + 0x68], rax	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d3a	            0x31c0	                            xor eax, eax	       680	pretty.c	WHILE_3	FUNCTION_27
0x4000d3c	      0xe800000000	                          call 0x4000d41	       687	pretty.c	WHILE_3	FUNCTION_27	IF_1	CALL_1
0x4000d41	            0x85c0	                           test eax, eax	       687	pretty.c	WHILE_3	FUNCTION_27	IF_1	CALL_1
0x4000d43	     0xf88b7000000	                            js 0x4000e00	       687	pretty.c	WHILE_3	FUNCTION_27	IF_1	CALL_1
0x4000d49	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       690	pretty.c	WHILE_3	FUNCTION_27
0x4000d4e	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       691	pretty.c	WHILE_3	FUNCTION_27
0x4000d53	          0x4189dd	                           mov r13d, ebx	       695	pretty.c	WHILE_3	FUNCTION_27	IF_2
0x4000d56	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       693	pretty.c	WHILE_3	FUNCTION_27
0x4000d5b	        0x4183e5df	                    and r13d, 0xffffffdf	       695	pretty.c	WHILE_3	FUNCTION_27	IF_2
0x4000d5f	          0x4829c1	                            sub rcx, rax	       691	pretty.c	WHILE_3	FUNCTION_27
0x4000d62	        0x48890424	                    mov qword [rsp], rax	       690	pretty.c	WHILE_3	FUNCTION_27
0x4000d66	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       692	pretty.c	WHILE_3	FUNCTION_27
0x4000d6b	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       691	pretty.c	WHILE_3	FUNCTION_27
0x4000d70	          0x4829c7	                            sub rdi, rax	       693	pretty.c	WHILE_3	FUNCTION_27
0x4000d73	          0x80fb4e	                            cmp bl, 0x4e	       695	pretty.c	WHILE_3	FUNCTION_27	IF_2
0x4000d76	      0x4889442408	                mov qword [rsp + 8], rax	       692	pretty.c	WHILE_3	FUNCTION_27
0x4000d7b	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       693	pretty.c	WHILE_3	FUNCTION_27
0x4000d80	     0xf84aa000000	                            je 0x4000e30	       695	pretty.c	WHILE_3	FUNCTION_27	IF_2
0x4000d86	          0x80fb45	                            cmp bl, 0x45	       695	pretty.c	WHILE_3	FUNCTION_27	IF_2
0x4000d89	     0xf84a1000000	                            je 0x4000e30	       695	pretty.c	WHILE_3	FUNCTION_27	IF_2
0x4000d8f	        0x4180fd4e	                          cmp r13b, 0x4e	       697	pretty.c	WHILE_3	FUNCTION_27	IF_3
0x4000d93	            0x7433	                            je 0x4000dc8	       697	pretty.c	WHILE_3	FUNCTION_27	IF_3
0x4000d95	        0x4180fd45	                          cmp r13b, 0x45	       701	pretty.c	WHILE_3	FUNCTION_27	IF_4
0x4000d99	     0xf84d1000000	                            je 0x4000e70	       701	pretty.c	WHILE_3	FUNCTION_27	IF_4
0x4000d9f	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       706	pretty.c	WHILE_3	FUNCTION_27	IF_5
0x4000da4	          0x4885f6	                           test rsi, rsi	       706	pretty.c	WHILE_3	FUNCTION_27	IF_5
0x4000da7	            0x7457	                            je 0x4000e00	       706	pretty.c	WHILE_3	FUNCTION_27	IF_5
0x4000da9	          0x80fb74	                            cmp bl, 0x74	       709	pretty.c	WHILE_3	FUNCTION_27	IF_6
0x4000dac	     0xf847e010000	                            je 0x4000f30	       709	pretty.c	WHILE_3	FUNCTION_27	IF_6
0x4000db2	          0x8d43bc	                   lea eax, [rbx - 0x44]	       714	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1
0x4000db5	            0x3c2e	                            cmp al, 0x2e	       714	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1
0x4000db7	            0x7747	                            ja 0x4000e00	       714	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1
0x4000db9	           0xfb6c0	                           movzx eax, al	       714	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1
0x4000dbc	    0xff24c5000000	                       jmp qword [rax*8]	       714	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1
0x4000dc3	       0xf1f440000	                   nop dword [rax + rax]	       714	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1
0x4000dc8	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       698	pretty.c	WHILE_3	FUNCTION_27	IF_3	CALL_3
0x4000dcd	        0x488b3424	                    mov rsi, qword [rsp]	       698	pretty.c	WHILE_3	FUNCTION_27	IF_3	CALL_3
0x4000dd1	          0x4889ef	                            mov rdi, rbp	       698	pretty.c	WHILE_3	FUNCTION_27	IF_3	CALL_3
0x4000dd4	      0xe800000000	                          call 0x4000dd9	       698	pretty.c	WHILE_3	FUNCTION_27	IF_3	CALL_3
0x4000dd9	      0xb802000000	                              mov eax, 2	       699	pretty.c	WHILE_3	FUNCTION_27	IF_3
0x4000dde	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       743	pretty.c	WHILE_3	FUNCTION_27
0x4000de3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       743	pretty.c	WHILE_3	FUNCTION_27
0x4000dec	     0xf8558010000	                           jne 0x4000f4a	       743	pretty.c	WHILE_3	FUNCTION_27
0x4000df2	        0x4883c478	                           add rsp, 0x78	       743	pretty.c	WHILE_3	FUNCTION_27
0x4000df6	              0x5b	                                 pop rbx	       743	pretty.c	WHILE_3	FUNCTION_27
0x4000df7	              0x5d	                                 pop rbp	       743	pretty.c	WHILE_3	FUNCTION_27
0x4000df8	            0x415c	                                 pop r12	       743	pretty.c	WHILE_3	FUNCTION_27
0x4000dfa	            0x415d	                                 pop r13	       743	pretty.c	WHILE_3	FUNCTION_27
0x4000dfc	              0xc3	                                     ret	       743	pretty.c	WHILE_3	FUNCTION_27
0x4000dfd	           0xf1f00	                         nop dword [rax]	       743	pretty.c	WHILE_3	FUNCTION_27
0x4000e00	          0x8d4bbc	                   lea ecx, [rbx - 0x44]	       739	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e03	            0x31c0	                            xor eax, eax	       742	pretty.c	WHILE_3	FUNCTION_27
0x4000e05	          0x80f930	                            cmp cl, 0x30	       739	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e08	            0x77d4	                            ja 0x4000dde	       739	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e0a	    0x48b801000000	            movabs rax, 0x1442300000001 	       739	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e14	          0x48d3e8	                             shr rax, cl	       739	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e17	          0x83e001	                              and eax, 1	       739	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e1a	        0x4883f001	                              xor rax, 1	       739	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e1e	          0x83e001	                              and eax, 1	       739	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e21	            0x3c01	                               cmp al, 1	       740	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e23	          0x4819c0	                            sbb rax, rax	       740	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e26	          0x83e002	                              and eax, 2	       740	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e29	            0xebb3	                           jmp 0x4000dde	       740	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e2b	       0xf1f440000	                   nop dword [rax + rax]	       740	pretty.c	WHILE_3	FUNCTION_27	IF_7
0x4000e30	    0x488b3d000000	            mov rdi, qword [0x04000e37] 	       670	pretty.c	WHILE_3	FUNCTION_26	IF_1
0x4000e37	          0x4885ff	                           test rdi, rdi	       670	pretty.c	WHILE_3	FUNCTION_26	IF_1
0x4000e3a	     0xf84c0000000	                            je 0x4000f00	       670	pretty.c	WHILE_3	FUNCTION_26	IF_1
0x4000e40	          0x8b4708	                mov eax, dword [rdi + 8]	       674	pretty.c	WHILE_3	FUNCTION_26	CALL_3
0x4000e43	            0x85c0	                           test eax, eax	       674	pretty.c	WHILE_3	FUNCTION_26	CALL_3
0x4000e45	     0xf8444ffffff	                            je 0x4000d8f	       674	pretty.c	WHILE_3	FUNCTION_26	CALL_3
0x4000e4b	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       674	pretty.c	WHILE_3	FUNCTION_26	CALL_3
0x4000e50	      0x488d542410	                   lea rdx, [rsp + 0x10]	       674	pretty.c	WHILE_3	FUNCTION_26	CALL_3
0x4000e55	      0x488d742408	                      lea rsi, [rsp + 8]	       674	pretty.c	WHILE_3	FUNCTION_26	CALL_3
0x4000e5a	          0x4889e1	                            mov rcx, rsp	       674	pretty.c	WHILE_3	FUNCTION_26	CALL_3
0x4000e5d	      0xe800000000	                          call 0x4000e62	       674	pretty.c	WHILE_3	FUNCTION_26	CALL_3
0x4000e62	      0xe928ffffff	                           jmp 0x4000d8f	       674	pretty.c	WHILE_3	FUNCTION_26	CALL_3
0x4000e67	    0x660f1f840000	                    nop word [rax + rax]	       674	pretty.c	WHILE_3	FUNCTION_26	CALL_3
0x4000e70	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       702	pretty.c	WHILE_3	FUNCTION_27	IF_4	CALL_4
0x4000e75	      0x488b742408	                mov rsi, qword [rsp + 8]	       702	pretty.c	WHILE_3	FUNCTION_27	IF_4	CALL_4
0x4000e7a	          0x4889ef	                            mov rdi, rbp	       702	pretty.c	WHILE_3	FUNCTION_27	IF_4	CALL_4
0x4000e7d	      0xe800000000	                          call 0x4000e82	       702	pretty.c	WHILE_3	FUNCTION_27	IF_4	CALL_4
0x4000e82	      0xb802000000	                              mov eax, 2	       703	pretty.c	WHILE_3	FUNCTION_27	IF_4
0x4000e87	      0xe952ffffff	                           jmp 0x4000dde	       703	pretty.c	WHILE_3	FUNCTION_27	IF_4
0x4000e8c	         0xf1f4000	                         nop dword [rax]	       703	pretty.c	WHILE_3	FUNCTION_27	IF_4
0x4000e90	      0xbf01000000	                              mov edi, 1	       722	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_11
0x4000e95	      0xe800000000	                          call 0x4000e9a	       719	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_9
0x4000e9a	          0x4889c6	                            mov rsi, rax	       719	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_9
0x4000e9d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       719	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_9
0x4000ea2	      0xe800000000	                          call 0x4000ea7	       719	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_9
0x4000ea7	          0x4889c3	                            mov rbx, rax	       719	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_9
0x4000eaa	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000ead	      0xe800000000	                          call 0x4000eb2	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000eb2	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000eb5	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000eb8	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000ebb	      0xe800000000	                          call 0x4000ec0	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000ec0	      0xb802000000	                              mov eax, 2	       720	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1
0x4000ec5	      0xe914ffffff	                           jmp 0x4000dde	       720	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1
0x4000eca	    0x660f1f440000	                    nop word [rax + rax]	       720	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1
0x4000ed0	      0xbf03000000	                              mov edi, 3	       725	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_13
0x4000ed5	            0xebbe	                           jmp 0x4000e95	       725	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_13
0x4000ed7	    0x660f1f840000	                    nop word [rax + rax]	       725	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_13
0x4000ee0	          0x4c89e6	                            mov rsi, r12	       716	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_7
0x4000ee3	            0xebb8	                           jmp 0x4000e9d	       716	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_7
0x4000ee5	           0xf1f00	                         nop dword [rax]	       716	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_7
0x4000ee8	      0xbf04000000	                              mov edi, 4	       728	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_15
0x4000eed	            0xeba6	                           jmp 0x4000e95	       728	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_15
0x4000eef	              0x90	                                     nop	       728	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_15
0x4000ef0	      0xbf05000000	                              mov edi, 5	       719	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_9
0x4000ef5	            0xeb9e	                           jmp 0x4000e95	       719	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_9
0x4000ef7	    0x660f1f840000	                    nop word [rax + rax]	       719	pretty.c	WHILE_3	FUNCTION_27	SWITCH_1	CALL_9
0x4000f00	      0xbe20000000	                           mov esi, 0x20	       671	pretty.c	WHILE_3	FUNCTION_26	IF_1	CALL_1
0x4000f05	      0xbf01000000	                              mov edi, 1	       671	pretty.c	WHILE_3	FUNCTION_26	IF_1	CALL_1
0x4000f0a	      0xe800000000	                          call 0x4000f0f	       671	pretty.c	WHILE_3	FUNCTION_26	IF_1	CALL_1
0x4000f0f	            0x31f6	                            xor esi, esi	       672	pretty.c	WHILE_3	FUNCTION_26	IF_1	CALL_2
0x4000f11	          0x4889c7	                            mov rdi, rax	       672	pretty.c	WHILE_3	FUNCTION_26	IF_1	CALL_2
0x4000f14	    0x488905000000	            mov qword [0x04000f1b], rax 	       671	pretty.c	WHILE_3	FUNCTION_26	IF_1	CALL_1
0x4000f1b	      0xe800000000	                          call 0x4000f20	       672	pretty.c	WHILE_3	FUNCTION_26	IF_1	CALL_2
0x4000f20	    0x488b3d000000	            mov rdi, qword [0x04000f27] 	       672	pretty.c	WHILE_3	FUNCTION_26	IF_1	CALL_2
0x4000f27	      0xe914ffffff	                           jmp 0x4000e40	       672	pretty.c	WHILE_3	FUNCTION_26	IF_1	CALL_2
0x4000f2c	         0xf1f4000	                         nop dword [rax]	       672	pretty.c	WHILE_3	FUNCTION_26	IF_1	CALL_2
0x4000f30	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       710	pretty.c	WHILE_3	FUNCTION_27	IF_6	CALL_5
0x4000f35	          0x4889ef	                            mov rdi, rbp	       710	pretty.c	WHILE_3	FUNCTION_27	IF_6	CALL_5
0x4000f38	          0x4829f2	                            sub rdx, rsi	       710	pretty.c	WHILE_3	FUNCTION_27	IF_6	CALL_5
0x4000f3b	      0xe800000000	                          call 0x4000f40	       710	pretty.c	WHILE_3	FUNCTION_27	IF_6	CALL_5
0x4000f40	      0xb802000000	                              mov eax, 2	       711	pretty.c	WHILE_3	FUNCTION_27	IF_6
0x4000f45	      0xe994feffff	                           jmp 0x4000dde	       711	pretty.c	WHILE_3	FUNCTION_27	IF_6
0x4000f4a	      0xe800000000	                          call 0x4000f4f	       743	pretty.c	WHILE_3	FUNCTION_27
format_commit_one	SWITCH,7:DO,0:functions,0:CALL,62:WHILE,0:IF,29:FOR,3:ELSE,4	1095
0x40019a0	            0x4157	                                push r15	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019a2	            0x4156	                                push r14	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019a4	            0x4155	                                push r13	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019a6	            0x4154	                                push r12	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019a8	          0x4989f5	                            mov r13, rsi	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019ab	              0x55	                                push rbp	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019ac	              0x53	                                push rbx	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019ad	          0x4889d5	                            mov rbp, rdx	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019b0	          0x4989fc	                            mov r12, rdi	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019b3	    0x4881ec980000	                           sub rsp, 0x98	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019ba	           0xfb616	                   movzx edx, byte [rsi]	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x40019bd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019c6	    0x488984248800	             mov qword [rsp + 0x88], rax	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019ce	            0x31c0	                            xor eax, eax	      1080	pretty.c	WHILE_3	FUNCTION_39
0x40019d0	          0x8d42c4	                   lea eax, [rdx - 0x3c]	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x40019d3	            0x3c3c	                            cmp al, 0x3c	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x40019d5	     0xf87ad010000	                            ja 0x4001b88	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x40019db	           0xfb6c0	                           movzx eax, al	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x40019de	    0xff24c5000000	                       jmp qword [rax*8]	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x40019e5	           0xf1f00	                         nop dword [rax]	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x40019e8	         0xfb64601	               movzx eax, byte [rsi + 1]	      1273	cache.h	FUNCTION_147
0x40019ec	     0xfbe98000000	                   movsx ebx, byte [rax]	      1273	cache.h	FUNCTION_147
0x40019f3	    0xf7c3f0ffffff	                    test ebx, 0xfffffff0	      1283	cache.h	FUNCTION_148	CALL_2
0x40019f9	            0x7510	                           jne 0x4001a0b	      1283	cache.h	FUNCTION_148	CALL_2
0x40019fb	         0xfb64602	               movzx eax, byte [rsi + 2]	      1273	cache.h	FUNCTION_147
0x40019ff	          0xc1e304	                              shl ebx, 4	      1283	cache.h	FUNCTION_148	CALL_2
0x4001a02	     0xfbe80000000	                   movsx eax, byte [rax]	      1283	cache.h	FUNCTION_148	CALL_2
0x4001a09	             0x9c3	                             or ebx, eax	      1283	cache.h	FUNCTION_148	CALL_2
0x4001a0b	            0x85db	                           test ebx, ebx	      1113	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_4
0x4001a0d	     0xf8817010000	                            js 0x4001b2a	      1113	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_4
0x4001a13	        0x498b0424	                    mov rax, qword [r12]	      1113	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_4
0x4001a17	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4001a1a	     0xf8590020000	                           jne 0x4001cb0	       141	strbuf.h	FUNCTION_55
0x4001a20	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001a25	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001a28	      0xe800000000	                          call 0x4001a2d	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001a2d	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001a32	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4001a37	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x4001a3b	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4001a40	          0x881c10	                mov byte [rax + rdx], bl	       229	strbuf.h	FUNCTION_57
0x4001a43	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4001a48	      0xbb03000000	                              mov ebx, 3	      1116	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001a4d	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_57
0x4001a52	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4001a56	      0xe995000000	                           jmp 0x4001af0	       230	strbuf.h	FUNCTION_57
0x4001a5b	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_57
0x4001a60	          0x80fa3c	                            cmp dl, 0x3c	       995	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001a63	        0x488d4601	                      lea rax, [rsi + 1]	       995	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001a67	     0xf8463020000	                            je 0x4001cd0	       995	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001a6d	          0x80fa3e	                            cmp dl, 0x3e	       995	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001a70	     0xf85b4000000	                           jne 0x4001b2a	       995	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001a76	         0xfb65601	               movzx edx, byte [rsi + 1]	      1000	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001a7a	          0x80fa3c	                            cmp dl, 0x3c	      1000	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001a7d	     0xf846d030000	                            je 0x4001df0	      1000	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001a83	          0x80fa3e	                            cmp dl, 0x3e	      1003	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001a86	    0x41be02000000	                             mov r14d, 2	      1007	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_2
0x4001a8c	     0xf8548020000	                           jne 0x4001cda	      1003	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001a92	        0x488d4602	                      lea rax, [rsi + 2]	      1005	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001a96	         0xfb65602	               movzx edx, byte [rsi + 2]	      1005	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001a9a	    0x41be03000000	                             mov r14d, 3	      1004	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001aa0	      0xe935020000	                           jmp 0x4001cda	      1004	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001aa5	           0xf1f00	                         nop dword [rax]	      1004	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001aa8	          0x488b07	                    mov rax, qword [rdi]	      1004	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001aab	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4001aae	     0xf856c010000	                           jne 0x4001c20	       141	strbuf.h	FUNCTION_55
0x4001ab4	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001ab9	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001abc	      0xe800000000	                          call 0x4001ac1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001ac1	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001ac6	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4001acb	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x4001acf	      0xbb01000000	                              mov ebx, 1	      1109	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001ad4	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4001ad9	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_57
0x4001add	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4001ae2	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_57
0x4001ae7	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4001aeb	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_57
0x4001af0	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001af8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b01	          0x4889d8	                            mov rax, rbx	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b04	     0xf857e0e0000	                           jne 0x4002988	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b0a	    0x4881c4980000	                           add rsp, 0x98	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b11	              0x5b	                                 pop rbx	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b12	              0x5d	                                 pop rbp	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b13	            0x415c	                                 pop r12	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b15	            0x415d	                                 pop r13	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b17	            0x415e	                                 pop r14	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b19	            0x415f	                                 pop r15	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b1b	              0xc3	                                     ret	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b1c	         0xf1f4000	                         nop dword [rax]	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b20	        0x807e0128	                cmp byte [rsi + 1], 0x28	      1118	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001b24	     0xf8486000000	                            je 0x4001bb0	      1118	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001b2a	            0x31db	                            xor ebx, ebx	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001b2c	            0xebc2	                           jmp 0x4001af0	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001b2e	            0x6690	                                     nop	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001b30	        0x4c8d7601	                      lea r14, [rsi + 1]	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001b34	      0xbe00000000	                              mov esi, 0	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001b39	          0x4c89f7	                            mov rdi, r14	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001b3c	      0xe800000000	                          call 0x4001b41	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001b41	            0x85c0	                           test eax, eax	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001b43	     0xf84f7000000	                            je 0x4001c40	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001b49	        0x488b4508	                mov rax, qword [rbp + 8]	      1092	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_2
0x4001b4d	      0xbf01000000	                              mov edi, 1	      1092	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_2
0x4001b52	      0xbb07000000	                              mov ebx, 7	      1095	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1
0x4001b57	          0x8b7068	            mov esi, dword [rax + 0x68] 	      1092	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_2
0x4001b5a	      0xe800000000	                          call 0x4001b5f	      1092	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_2
0x4001b5f	            0x85c0	                           test eax, eax	      1093	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	IF_2
0x4001b61	          0x894578	            mov dword [rbp + 0x78], eax 	      1092	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_2
0x4001b64	            0x748a	                            je 0x4001af0	      1093	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	IF_2
0x4001b66	    0x49837c240800	                  cmp qword [r12 + 8], 0	      1093	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	IF_2
0x4001b6c	            0x7482	                            je 0x4001af0	      1093	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	IF_2
0x4001b6e	      0xba03000000	                              mov edx, 3	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001b73	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001b78	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001b7b	      0xe800000000	                          call 0x4001b80	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001b80	      0xe96bffffff	                           jmp 0x4001af0	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001b85	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001b88	        0x488b5d00	                    mov rbx, qword [rbp]	      1082	pretty.c	WHILE_3	FUNCTION_39
0x4001b8c	        0x4c8b7550	            mov r14, qword [rbp + 0x50] 	      1083	pretty.c	WHILE_3	FUNCTION_39
0x4001b90	          0xf60301	                      test byte [rbx], 1	      1148	pretty.c	WHILE_3	FUNCTION_39	IF_11
0x4001b93	     0xf8427060000	                            je 0x40021c0	      1148	pretty.c	WHILE_3	FUNCTION_39	IF_11
0x4001b99	          0x8d42bc	                   lea eax, [rdx - 0x44]	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001b9c	            0x3c30	                            cmp al, 0x30	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001b9e	     0xf8774050000	                            ja 0x4002118	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001ba4	           0xfb6c0	                           movzx eax, al	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001ba7	    0xff24c5000000	                       jmp qword [rax*8]	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001bae	            0x6690	                                     nop	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001bb0	        0x4c8d7602	                      lea r14, [rsi + 2]	      1121	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001bb4	      0xbe29000000	                           mov esi, 0x29	      1122	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001bb9	          0x4c89f7	                            mov rdi, r14	      1122	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001bbc	      0xe800000000	                          call 0x4001bc1	      1122	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001bc1	          0x4885c0	                           test rax, rax	      1123	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_6
0x4001bc4	          0x4889c3	                            mov rbx, rax	      1122	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001bc7	     0xf845dffffff	                            je 0x4001b2a	      1123	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_6
0x4001bcd	          0x4939c6	                            cmp r14, rax	      1125	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7
0x4001bd0	     0xf82da010000	                            jb 0x4001db0	      1125	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7
0x4001bd6	          0x4531c9	                            xor r9d, r9d	      1119	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001bd9	          0x4531ff	                          xor r15d, r15d	      1119	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001bdc	          0x4531f6	                          xor r14d, r14d	      1119	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001bdf	        0x488b5560	            mov rdx, qword [rbp + 0x60] 	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4001be3	          0x4939d6	                            cmp r14, rdx	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4001be6	     0xf84a4070000	                            je 0x4002390	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4001bec	    0x488bb5b80000	            mov rsi, qword [rbp + 0xb8] 	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4001bf3	      0x498b442408	                mov rax, qword [r12 + 8]	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4001bf8	          0x4839c6	                            cmp rsi, rax	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4001bfb	     0xf8267070000	                            jb 0x4002368	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4001c01	    0x488985b80000	            mov qword [rbp + 0xb8], rax 	       912	pretty.c	WHILE_3	FUNCTION_34
0x4001c08	        0x4c897560	            mov qword [rbp + 0x60], r14 	       913	pretty.c	WHILE_3	FUNCTION_34
0x4001c0c	        0x4c897d68	            mov qword [rbp + 0x68], r15 	       914	pretty.c	WHILE_3	FUNCTION_34
0x4001c10	        0x4c894d70	              mov qword [rbp + 0x70], r9	       915	pretty.c	WHILE_3	FUNCTION_34
0x4001c14	      0xe987010000	                           jmp 0x4001da0	       915	pretty.c	WHILE_3	FUNCTION_34
0x4001c19	     0xf1f80000000	                         nop dword [rax]	       915	pretty.c	WHILE_3	FUNCTION_34
0x4001c20	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_55
0x4001c24	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001c28	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001c2b	     0xf8595feffff	                           jne 0x4001ac6	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001c31	      0xe97efeffff	                           jmp 0x4001ab4	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001c36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001c40	      0x41807d0128	                cmp byte [r13 + 1], 0x28	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001c45	          0x4c89f3	                            mov rbx, r14	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001c48	      0xb800000000	                              mov eax, 0	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001c4d	            0x751a	                           jne 0x4001c69	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001c4f	      0xe9d4050000	                           jmp 0x4002228	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001c54	         0xf1f4000	                         nop dword [rax]	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001c58	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4001c5c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4001c60	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4001c63	     0xf8587050000	                           jne 0x40021f0	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4001c69	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4001c6c	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4001c6e	            0x75e8	                           jne 0x4001c58	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4001c70	    0x41be00000000	                             mov r14d, 0	       973	pretty.c	WHILE_3	FUNCTION_36	IF_8
0x4001c76	        0x488b4508	                mov rax, qword [rbp + 8]	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001c7a	      0xbf01000000	                              mov edi, 1	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001c7f	          0x8b7068	            mov esi, dword [rax + 0x68] 	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001c82	      0xe800000000	                          call 0x4001c87	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001c87	            0x85c0	                           test eax, eax	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001c89	     0xf85b9060000	                           jne 0x4002348	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001c8f	          0x4c29eb	                            sub rbx, r13	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001c92	            0x89d8	                            mov eax, ebx	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001c94	          0x4863db	                         movsxd rbx, ebx	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001c97	            0x85c0	                           test eax, eax	      1098	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	ELSE_1	IF_3
0x4001c99	     0xf8451feffff	                            je 0x4001af0	      1098	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	ELSE_1	IF_3
0x4001c9f	    0xc74578000000	               mov dword [rbp + 0x78], 0	      1099	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	ELSE_1	IF_3
0x4001ca6	      0xe945feffff	                           jmp 0x4001af0	      1105	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	ELSE_1
0x4001cab	       0xf1f440000	                   nop dword [rax + rax]	      1105	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	ELSE_1
0x4001cb0	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_55
0x4001cb5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001cb9	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001cbc	     0xf8570fdffff	                           jne 0x4001a32	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001cc2	      0xe959fdffff	                           jmp 0x4001a20	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001cc7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001cd0	         0xfb65601	               movzx edx, byte [rsi + 1]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4001cd4	    0x41be01000000	                             mov r14d, 1	       997	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001cda	          0x4531e4	                          xor r12d, r12d	       993	pretty.c	WHILE_3	FUNCTION_37
0x4001cdd	          0x80fa7c	                            cmp dl, 0x7c	      1014	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x4001ce0	     0xf84f2040000	                            je 0x40021d8	      1014	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x4001ce6	          0x80fa28	                            cmp dl, 0x28	      1019	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001ce9	     0xf853bfeffff	                           jne 0x4001b2a	      1019	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001cef	         0xfb65001	               movzx edx, byte [rax + 1]	       961	string2.h	FUNCTION_72	WHILE_1
0x4001cf3	        0x4c8d7801	                      lea r15, [rax + 1]	      1020	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001cf7	          0x80fa2c	                            cmp dl, 0x2c	       961	string2.h	FUNCTION_72	WHILE_1
0x4001cfa	            0x7714	                            ja 0x4001d10	       961	string2.h	FUNCTION_72	WHILE_1
0x4001cfc	    0x48b901000000	              movabs rcx, 0x120000000001	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d06	        0x480fa3d1	                             bt rcx, rdx	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d0a	     0xf821afeffff	                            jb 0x4001b2a	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d10	        0x4883c002	                              add rax, 2	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d14	    0x48b901000000	              movabs rcx, 0x120000000001	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d1e	            0x6690	                                     nop	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d20	           0xfb610	                   movzx edx, byte [rax]	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d23	          0x4889c3	                            mov rbx, rax	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d26	          0x80fa2c	                            cmp dl, 0x2c	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d29	            0x760f	                           jbe 0x4001d3a	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d2b	        0x4883c001	                              add rax, 1	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d2f	           0xfb610	                   movzx edx, byte [rax]	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d32	          0x4889c3	                            mov rbx, rax	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d35	          0x80fa2c	                            cmp dl, 0x2c	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d38	            0x77f1	                            ja 0x4001d2b	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d3a	        0x480fa3d1	                             bt rcx, rdx	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d3e	        0x488d4001	                      lea rax, [rax + 1]	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d42	            0x73dc	                           jae 0x4001d20	       961	string2.h	FUNCTION_72	WHILE_1
0x4001d44	          0x4939df	                            cmp r15, rbx	      1024	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_5
0x4001d47	     0xf84ddfdffff	                            je 0x4001b2a	      1024	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_5
0x4001d4d	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1026	pretty.c	WHILE_3	FUNCTION_37	IF_4	CALL_1
0x4001d52	      0xba0a000000	                            mov edx, 0xa	      1026	pretty.c	WHILE_3	FUNCTION_37	IF_4	CALL_1
0x4001d57	          0x4c89ff	                            mov rdi, r15	      1026	pretty.c	WHILE_3	FUNCTION_37	IF_4	CALL_1
0x4001d5a	      0xe800000000	                          call 0x4001d5f	      1026	pretty.c	WHILE_3	FUNCTION_37	IF_4	CALL_1
0x4001d5f	      0x4c397c2410	            cmp qword [rsp + 0x10], r15 	      1027	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_6
0x4001d64	          0x4889c2	                            mov rdx, rax	      1026	pretty.c	WHILE_3	FUNCTION_37	IF_4	CALL_1
0x4001d67	     0xf84bdfdffff	                            je 0x4001b2a	      1027	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_6
0x4001d6d	            0x85c0	                           test eax, eax	      1027	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_6
0x4001d6f	     0xf84b5fdffff	                            je 0x4001b2a	      1027	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_6
0x4001d75	            0x85c0	                           test eax, eax	      1029	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7
0x4001d77	     0xf88c1080000	                            js 0x400263e	      1029	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7
0x4001d7d	          0x4585e4	                         test r12d, r12d	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001d80	     0xf85d8080000	                           jne 0x400265e	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001d86	          0x89557c	            mov dword [rbp + 0x7c], edx 	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001d89	        0x44897548	           mov dword [rbp + 0x48], r14d 	      1036	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001d8d	          0x803b2c	                    cmp byte [rbx], 0x2c	      1038	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x4001d90	     0xf84fa090000	                            je 0x4002790	      1038	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x4001d96	    0xc7454c000000	               mov dword [rbp + 0x4c], 0	      1052	pretty.c	WHILE_3	FUNCTION_37	IF_4	ELSE_5	ELSE_6
0x4001d9d	           0xf1f00	                         nop dword [rax]	      1052	pretty.c	WHILE_3	FUNCTION_37	IF_4	ELSE_5	ELSE_6
0x4001da0	          0x4c29eb	                            sub rbx, r13	      1320	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4001da3	        0x4883c301	                              add rbx, 1	      1320	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4001da7	      0xe944fdffff	                           jmp 0x4001af0	      1320	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4001dac	         0xf1f4000	                         nop dword [rax]	      1320	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4001db0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1126	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	CALL_8
0x4001db5	      0xba0a000000	                            mov edx, 0xa	      1126	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	CALL_8
0x4001dba	          0x4c89f7	                            mov rdi, r14	      1126	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	CALL_8
0x4001dbd	          0x4531ff	                          xor r15d, r15d	      1119	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001dc0	      0xe800000000	                          call 0x4001dc5	      1126	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	CALL_8
0x4001dc5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1127	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8
0x4001dca	          0x4989c6	                            mov r14, rax	      1126	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	CALL_8
0x4001dcd	          0x4531c9	                            xor r9d, r9d	      1119	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001dd0	           0xfb602	                   movzx eax, byte [rdx]	      1127	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8
0x4001dd3	            0x3c2c	                            cmp al, 0x2c	      1127	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8
0x4001dd5	     0xf8471060000	                            je 0x400244c	      1127	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8
0x4001ddb	            0x3c29	                            cmp al, 0x29	      1134	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_10
0x4001ddd	     0xf84fcfdffff	                            je 0x4001bdf	      1134	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_10
0x4001de3	            0x31db	                            xor ebx, ebx	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001de5	      0xe906fdffff	                           jmp 0x4001af0	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001dea	    0x660f1f440000	                    nop word [rax + rax]	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001df0	        0x488d4602	                      lea rax, [rsi + 2]	      1002	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001df4	         0xfb65602	               movzx edx, byte [rsi + 2]	      1002	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001df8	    0x41be04000000	                             mov r14d, 4	      1001	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001dfe	      0xe9d7feffff	                           jmp 0x4001cda	      1001	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001e03	       0xf1f440000	                   nop dword [rax + rax]	      1001	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001e08	        0x488b4508	                mov rax, qword [rbp + 8]	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e0c	          0x4889df	                            mov rdi, rbx	      1168	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_29
0x4001e0f	      0xbb01000000	                              mov ebx, 1	      1170	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001e14	          0x8b6804	                mov ebp, dword [rax + 4]	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e17	      0xe800000000	                          call 0x4001e1c	      1168	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_29
0x4001e1c	          0x4c89e7	                            mov rdi, r12	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e1f	          0x4889c6	                            mov rsi, rax	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e22	            0x89ea	                            mov edx, ebp	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e24	      0xe800000000	                          call 0x4001e29	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e29	      0xe9c2fcffff	                           jmp 0x4001af0	      1170	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001e2e	            0x6690	                                     nop	      1170	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001e30	          0x8b7d78	            mov edi, dword [rbp + 0x78] 	      1153	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_15
0x4001e33	      0xbe06000000	                              mov esi, 6	      1153	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_15
0x4001e38	      0xe800000000	                          call 0x4001e3d	      1153	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_15
0x4001e3d	          0x4989c5	                            mov r13, rax	      1153	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_15
0x4001e40	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e43	      0xe800000000	                          call 0x4001e48	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e48	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e4b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e4e	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e51	      0xe800000000	                          call 0x4001e56	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e56	        0x488d7b04	                      lea rdi, [rbx + 4]	      1154	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_17
0x4001e5a	      0xe800000000	                          call 0x4001e5f	      1154	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_17
0x4001e5f	          0x4889c3	                            mov rbx, rax	      1154	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_17
0x4001e62	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e65	      0xe800000000	                          call 0x4001e6a	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e6a	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e6d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e70	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e73	      0xe800000000	                          call 0x4001e78	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e78	          0x8b7d78	            mov edi, dword [rbp + 0x78] 	      1161	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_24
0x4001e7b	            0x31f6	                            xor esi, esi	      1161	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_24
0x4001e7d	      0xe800000000	                          call 0x4001e82	      1161	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_24
0x4001e82	          0x4889c3	                            mov rbx, rax	      1161	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_24
0x4001e85	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e88	      0xe800000000	                          call 0x4001e8d	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e8d	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e90	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e93	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e96	      0xe800000000	                          call 0x4001e9b	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001e9b	      0xbb01000000	                              mov ebx, 1	      1162	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001ea0	      0xe94bfcffff	                           jmp 0x4001af0	      1162	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001ea5	           0xf1f00	                         nop dword [rax]	      1162	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001ea8	            0x31ff	                            xor edi, edi	      1194	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_39
0x4001eaa	      0xbe01000000	                              mov esi, 1	      1194	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_39
0x4001eaf	      0xe800000000	                          call 0x4001eb4	      1194	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_39
0x4001eb4	          0x8b5578	            mov edx, dword [rbp + 0x78] 	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001eb7	    0x41b900000000	                              mov r9d, 0	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001ebd	    0x41b800000000	                              mov r8d, 0	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001ec3	          0x4c89c9	                             mov rcx, r9	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001ec6	          0x4889de	                            mov rsi, rbx	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001ec9	          0x4c89e7	                            mov rdi, r12	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001ecc	      0xe800000000	                          call 0x4001ed1	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001ed1	            0xebc8	                           jmp 0x4001e9b	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001ed3	       0xf1f440000	                   nop dword [rax + rax]	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001ed8	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001edc	          0x4d85ed	                           test r13, r13	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001edf	            0x74ba	                            je 0x4001e9b	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001ee1	     0xf1f80000000	                         nop dword [rax]	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001ee8	        0x488b4508	                mov rax, qword [rbp + 8]	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001eec	          0x4c89e7	                            mov rdi, r12	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001eef	          0x8b5004	                mov edx, dword [rax + 4]	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001ef2	        0x498b4500	                    mov rax, qword [r13]	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001ef6	        0x488d7004	                      lea rsi, [rax + 4]	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001efa	      0xe800000000	                          call 0x4001eff	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001eff	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001f03	          0x4d85ed	                           test r13, r13	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001f06	            0x7493	                            je 0x4001e9b	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001f08	        0x4c396b30	            cmp qword [rbx + 0x30], r13 	      1180	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	IF_13
0x4001f0c	            0x74da	                            je 0x4001ee8	      1180	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	IF_13
0x4001f0e	        0x498b0424	                    mov rax, qword [r12]	      1180	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	IF_13
0x4001f12	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4001f15	     0xf8585020000	                           jne 0x40021a0	       141	strbuf.h	FUNCTION_55
0x4001f1b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001f20	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001f23	      0xe800000000	                          call 0x4001f28	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001f28	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4001f2d	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4001f32	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x4001f36	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4001f3b	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_57
0x4001f3f	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x4001f44	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_57
0x4001f49	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4001f4d	            0xeb99	                           jmp 0x4001ee8	       230	strbuf.h	FUNCTION_57
0x4001f4f	              0x90	                                     nop	       230	strbuf.h	FUNCTION_57
0x4001f50	          0x4889de	                            mov rsi, rbx	      1187	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_36
0x4001f53	            0x31ff	                            xor edi, edi	      1187	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_36
0x4001f55	      0xe800000000	                          call 0x4001f5a	      1187	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_36
0x4001f5a	      0xe923ffffff	                           jmp 0x4001e82	      1187	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_36
0x4001f5f	              0x90	                                     nop	      1187	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_36
0x4001f60	      0xbe01000000	                              mov esi, 1	      1190	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_37
0x4001f65	            0x31ff	                            xor edi, edi	      1190	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_37
0x4001f67	      0xe800000000	                          call 0x4001f6c	      1190	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_37
0x4001f6c	          0x8b5578	            mov edx, dword [rbp + 0x78] 	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001f6f	          0x4889de	                            mov rsi, rbx	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001f72	    0x41b900000000	                              mov r9d, 0	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001f78	    0x41b800000000	                              mov r8d, 0	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001f7e	      0xb900000000	                              mov ecx, 0	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001f83	          0x4c89e7	                            mov rdi, r12	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001f86	      0xbb01000000	                              mov ebx, 1	      1192	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001f8b	      0xe800000000	                          call 0x4001f90	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001f90	      0xe95bfbffff	                           jmp 0x4001af0	      1192	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001f95	           0xf1f00	                         nop dword [rax]	      1192	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001f98	          0x4889df	                            mov rdi, rbx	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x4001f9b	      0xe800000000	                          call 0x4001fa0	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x4001fa0	          0x4889c7	                            mov rdi, rax	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x4001fa3	      0xe800000000	                          call 0x4001fa8	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x4001fa8	      0xe9d5feffff	                           jmp 0x4001e82	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x4001fad	           0xf1f00	                         nop dword [rax]	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x4001fb0	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4001fb4	          0x4885ed	                           test rbp, rbp	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4001fb7	     0xf84defeffff	                            je 0x4001e9b	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4001fbd	           0xf1f00	                         nop dword [rax]	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4001fc0	        0x488b4500	                    mov rax, qword [rbp]	      1175	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	CALL_32
0x4001fc4	        0x488d7804	                      lea rdi, [rax + 4]	      1175	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	CALL_32
0x4001fc8	      0xe800000000	                          call 0x4001fcd	      1175	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	CALL_32
0x4001fcd	          0x4989c5	                            mov r13, rax	      1175	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	CALL_32
0x4001fd0	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001fd3	      0xe800000000	                          call 0x4001fd8	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001fd8	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001fdb	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001fde	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001fe1	      0xe800000000	                          call 0x4001fe6	       279	strbuf.h	FUNCTION_58	CALL_2
0x4001fe6	        0x488b6d08	                mov rbp, qword [rbp + 8]	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4001fea	          0x4885ed	                           test rbp, rbp	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4001fed	     0xf84a8feffff	                            je 0x4001e9b	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4001ff3	        0x48396b30	            cmp qword [rbx + 0x30], rbp 	      1173	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	IF_12
0x4001ff7	            0x74c7	                            je 0x4001fc0	      1173	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	IF_12
0x4001ff9	        0x498b0424	                    mov rax, qword [r12]	      1173	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	IF_12
0x4001ffd	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x4002000	     0xf857a010000	                           jne 0x4002180	       141	strbuf.h	FUNCTION_55
0x4002006	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x400200b	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_57	CALL_2
0x400200e	      0xe800000000	                          call 0x4002013	       228	strbuf.h	FUNCTION_57	CALL_2
0x4002013	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4002018	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_57
0x400201d	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_57
0x4002021	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_57
0x4002026	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_57
0x400202a	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_57
0x400202f	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_57
0x4002034	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_57
0x4002038	            0xeb86	                           jmp 0x4001fc0	       230	strbuf.h	FUNCTION_57
0x400203a	    0x660f1f440000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_57
0x4002040	        0x488b4508	                mov rax, qword [rbp + 8]	      1223	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	IF_16
0x4002044	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      1223	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	IF_16
0x4002048	          0x4885db	                           test rbx, rbx	      1223	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	IF_16
0x400204b	     0xf8534feffff	                           jne 0x4001e85	      1223	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	IF_16
0x4002051	            0x31db	                            xor ebx, ebx	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4002053	      0xe998faffff	                           jmp 0x4001af0	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4002058	     0xf1f84000000	                   nop dword [rax + rax]	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4002060	          0x8b7d78	            mov edi, dword [rbp + 0x78] 	      1158	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_21
0x4002063	      0xbe06000000	                              mov esi, 6	      1158	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_21
0x4002068	      0xe800000000	                          call 0x400206d	      1158	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_21
0x400206d	          0x4989c5	                            mov r13, rax	      1158	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_21
0x4002070	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002073	      0xe800000000	                          call 0x4002078	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002078	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_58	CALL_2
0x400207b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x400207e	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002081	      0xe800000000	                          call 0x4002086	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002086	        0x488b4508	                mov rax, qword [rbp + 8]	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x400208a	        0x488d7304	                      lea rsi, [rbx + 4]	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x400208e	          0x4c89e7	                            mov rdi, r12	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x4002091	          0x8b5004	                mov edx, dword [rax + 4]	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x4002094	      0xe800000000	                          call 0x4002099	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x4002099	      0xe9dafdffff	                           jmp 0x4001e78	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x400209e	            0x6690	                                     nop	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x40020a0	      0x410fb65d01	               movzx ebx, byte [r13 + 1]	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020a5	          0x8d4bbc	                   lea ecx, [rbx - 0x44]	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020a8	          0x80f92f	                            cmp cl, 0x2f	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020ab	     0xf8779faffff	                            ja 0x4001b2a	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020b1	      0xb801000000	                              mov eax, 1	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020b6	    0x48ba02040000	               movabs rdx, 0x40200000402	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020c0	          0x48d3e0	                             shl rax, cl	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020c3	          0x4885d0	                           test rax, rdx	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020c6	     0xf8576060000	                           jne 0x4002742	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020cc	    0x48ba01000000	                 movabs rdx, 0x100000001	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020d6	          0x4885d0	                           test rax, rdx	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020d9	     0xf8524040000	                           jne 0x4002503	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020df	    0x48ba00000000	              movabs rdx, 0x800000000000	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020e9	          0x4885d0	                           test rax, rdx	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020ec	     0xf8438faffff	                            je 0x4001b2a	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40020f2	        0x488b4508	                mov rax, qword [rbp + 8]	      1209	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_15
0x40020f6	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      1209	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_15
0x40020fa	          0x4885f6	                           test rsi, rsi	      1209	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_15
0x40020fd	     0xf843f030000	                            je 0x4002442	      1209	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_15
0x4002103	          0x4c89e7	                            mov rdi, r12	      1210	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_42
0x4002106	      0xbb02000000	                              mov ebx, 2	      1211	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x400210b	      0xe800000000	                          call 0x4002110	      1210	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_42
0x4002110	      0xe9dbf9ffff	                           jmp 0x4001af0	      1210	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_42
0x4002115	           0xf1f00	                         nop dword [rax]	      1210	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_42
0x4002118	          0x80fa47	                            cmp dl, 0x47	      1230	pretty.c	WHILE_3	FUNCTION_39	IF_17
0x400211b	     0xf847e030000	                            je 0x400249f	      1230	pretty.c	WHILE_3	FUNCTION_39	IF_17
0x4002121	        0xf6451001	               test byte [rbp + 0x10], 1	      1267	pretty.c	WHILE_3	FUNCTION_39	IF_22
0x4002125	     0xf842a040000	                            je 0x4002555	      1267	pretty.c	WHILE_3	FUNCTION_39	IF_22
0x400212b	          0x80fa61	                            cmp dl, 0x61	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x400212e	     0xf8433050000	                            je 0x4002667	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x4002134	     0xf8e01040000	                           jle 0x400253b	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x400213a	          0x80fa63	                            cmp dl, 0x63	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x400213d	     0xf84e5050000	                            je 0x4002728	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x4002143	          0x80fa65	                            cmp dl, 0x65	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x4002146	     0xf8549050000	                           jne 0x4002695	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x400214c	        0x488b6d58	            mov rbp, qword [rbp + 0x58] 	      1280	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	IF_23
0x4002150	      0xbb01000000	                              mov ebx, 1	      1282	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x4002155	          0x4885ed	                           test rbp, rbp	      1280	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	IF_23
0x4002158	     0xf8492f9ffff	                            je 0x4001af0	      1280	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	IF_23
0x400215e	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002161	      0xe800000000	                          call 0x4002166	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002166	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002169	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x400216c	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x400216f	      0xe800000000	                          call 0x4002174	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002174	      0xe977f9ffff	                           jmp 0x4001af0	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002179	     0xf1f80000000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002180	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_55
0x4002185	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4002189	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400218c	     0xf8586feffff	                           jne 0x4002018	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4002192	      0xe96ffeffff	                           jmp 0x4002006	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4002197	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40021a0	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_55
0x40021a5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40021a9	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40021ac	     0xf857bfdffff	                           jne 0x4001f2d	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40021b2	      0xe964fdffff	                           jmp 0x4001f1b	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40021b7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40021c0	        0x488d7b04	                      lea rdi, [rbx + 4]	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x40021c4	      0xe800000000	                          call 0x40021c9	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x40021c9	      0x410fb65500	                   movzx edx, byte [r13]	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x40021ce	      0xe9c6f9ffff	                           jmp 0x4001b99	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x40021d3	       0xf1f440000	                   nop dword [rax + rax]	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x40021d8	         0xfb65001	               movzx edx, byte [rax + 1]	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x40021dc	    0x41bc01000000	                             mov r12d, 1	      1015	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x40021e2	        0x4883c001	                              add rax, 1	      1016	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x40021e6	      0xe9fbfaffff	                           jmp 0x4001ce6	      1016	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x40021eb	       0xf1f440000	                   nop dword [rax + rax]	      1016	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x40021f0	          0x4c89f3	                            mov rbx, r14	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40021f3	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40021f8	            0xeb17	                           jmp 0x4002211	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40021fa	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002200	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002204	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002208	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400220b	     0xf85ff000000	                           jne 0x4002310	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002211	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002214	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002216	            0x75e8	                           jne 0x4002200	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002218	    0x41be00000000	                             mov r14d, 0	       975	pretty.c	WHILE_3	FUNCTION_36	ELSE_3	IF_9
0x400221e	      0xe953faffff	                           jmp 0x4001c76	       975	pretty.c	WHILE_3	FUNCTION_36	ELSE_3	IF_9
0x4002223	       0xf1f440000	                   nop dword [rax + rax]	       975	pretty.c	WHILE_3	FUNCTION_36	ELSE_3	IF_9
0x4002228	        0x4d8d7d02	                      lea r15, [r13 + 2]	       943	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x400222c	      0xbe29000000	                           mov esi, 0x29	       944	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4002231	          0x4c89ff	                            mov rdi, r15	       944	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4002234	      0xe800000000	                          call 0x4002239	       944	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4002239	          0x4885c0	                           test rax, rax	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x400223c	          0x4889c3	                            mov rbx, rax	       944	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x400223f	     0xf84e5f8ffff	                            je 0x4001b2a	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x4002245	          0x4d89fe	                            mov r14, r15	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x4002248	      0xb800000000	                              mov eax, 0	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x400224d	            0xeb13	                           jmp 0x4002262	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x400224f	              0x90	                                     nop	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x4002250	        0x4983c601	                              add r14, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002254	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002258	        0x413a56ff	                  cmp dl, byte [r14 - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400225c	     0xf854e010000	                           jne 0x40023b0	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002262	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002265	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002267	            0x75e7	                           jne 0x4002250	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002269	        0x488b4508	                mov rax, qword [rbp + 8]	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x400226d	      0xbf01000000	                              mov edi, 1	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x4002272	          0x8b7068	            mov esi, dword [rax + 0x68] 	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x4002275	      0xe800000000	                          call 0x400227a	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x400227a	            0x85c0	                           test eax, eax	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x400227c	            0x7529	                           jne 0x40022a7	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x400227e	          0x4c29eb	                            sub rbx, r13	       964	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4002281	        0x4883c301	                              add rbx, 1	       964	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4002285	            0x89d8	                            mov eax, ebx	       964	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4002287	          0x4863db	                         movsxd rbx, ebx	       964	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x400228a	      0xe908faffff	                           jmp 0x4001c97	       964	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x400228f	        0x488b4508	                mov rax, qword [rbp + 8]	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x4002293	      0xbf01000000	                              mov edi, 1	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x4002298	          0x4d89fe	                            mov r14, r15	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x400229b	          0x8b7068	            mov esi, dword [rax + 0x68] 	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x400229e	      0xe800000000	                          call 0x40022a3	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x40022a3	            0x85c0	                           test eax, eax	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x40022a5	            0x74d7	                            je 0x400227e	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x40022a7	      0x4c8d7c2430	                   lea r15, [rsp + 0x30]	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x40022ac	          0x4889de	                            mov rsi, rbx	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x40022af	          0x4c89f7	                            mov rdi, r14	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x40022b2	          0x4c29f6	                            sub rsi, r14	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x40022b5	          0x4c89fa	                            mov rdx, r15	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x40022b8	      0xe800000000	                          call 0x40022bd	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x40022bd	            0x85c0	                           test eax, eax	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x40022bf	     0xf88b6070000	                            js 0x4002a7b	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x40022c5	          0x4c89fa	                            mov rdx, r15	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022c8	            0x8b0a	                    mov ecx, dword [rdx]	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022ca	        0x4883c204	                              add rdx, 4	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022ce	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022d4	            0xf7d1	                                 not ecx	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022d6	            0x21c8	                            and eax, ecx	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022d8	      0x2580808080	                     and eax, 0x80808080	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022dd	            0x74e9	                            je 0x40022c8	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022df	            0x89c1	                            mov ecx, eax	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022e1	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022e4	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022e7	          0xc1e910	                           shr ecx, 0x10	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022ea	      0xa980800000	                        test eax, 0x8080	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022ef	           0xf44c1	                          cmove eax, ecx	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022f2	        0x488d4a02	                      lea rcx, [rdx + 2]	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022f6	        0x480f44d1	                          cmove rdx, rcx	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022fa	            0x89c1	                            mov ecx, eax	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022fc	              0xc1	                              add cl, al	       279	strbuf.h	FUNCTION_58	CALL_2
0x40022fe	        0x4883da03	                              sbb rdx, 3	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002302	          0x4c29fa	                            sub rdx, r15	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002305	      0xe800000000	                          call 0x400230a	       279	strbuf.h	FUNCTION_58	CALL_2
0x400230a	      0xe96fffffff	                           jmp 0x400227e	       279	strbuf.h	FUNCTION_58	CALL_2
0x400230f	              0x90	                                     nop	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002310	          0x4c89f3	                            mov rbx, r14	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002313	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002318	            0xeb17	                           jmp 0x4002331	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400231a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002320	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002324	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002328	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400232b	     0xf85ad000000	                           jne 0x40023de	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002331	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002334	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002336	            0x75e8	                           jne 0x4002320	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002338	    0x41be00000000	                             mov r14d, 0	       977	pretty.c	WHILE_3	FUNCTION_36	ELSE_4	IF_10
0x400233e	      0xe933f9ffff	                           jmp 0x4001c76	       977	pretty.c	WHILE_3	FUNCTION_36	ELSE_4	IF_10
0x4002343	       0xf1f440000	                   nop dword [rax + rax]	       977	pretty.c	WHILE_3	FUNCTION_36	ELSE_4	IF_10
0x4002348	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_58	CALL_2
0x400234b	      0xe800000000	                          call 0x4002350	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002350	          0x4c89f6	                            mov rsi, r14	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002353	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002356	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002359	      0xe800000000	                          call 0x400235e	       279	strbuf.h	FUNCTION_58	CALL_2
0x400235e	      0xe92cf9ffff	                           jmp 0x4001c8f	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002363	       0xf1f440000	                   nop dword [rax + rax]	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002368	        0x488b4d68	            mov rcx, qword [rbp + 0x68] 	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x400236c	        0x4c8b4570	              mov r8, qword [rbp + 0x70]	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x4002370	          0x4c89e7	                            mov rdi, r12	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x4002373	      0x4c894c2408	                 mov qword [rsp + 8], r9	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x4002378	      0xe803e3ffff	                    call sym.strbuf_wrap	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x400237d	      0x498b442408	                mov rax, qword [r12 + 8]	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x4002382	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x4002387	      0xe975f8ffff	                           jmp 0x4001c01	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x400238c	         0xf1f4000	                         nop dword [rax]	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x4002390	        0x4c3b7d68	            cmp r15, qword [rbp + 0x68] 	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4002394	     0xf8552f8ffff	                           jne 0x4001bec	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x400239a	        0x4c3b4d70	              cmp r9, qword [rbp + 0x70]	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x400239e	     0xf8548f8ffff	                           jne 0x4001bec	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40023a4	      0xe9f7f9ffff	                           jmp 0x4001da0	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40023a9	     0xf1f80000000	                         nop dword [rax]	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40023b0	          0x4d89fe	                            mov r14, r15	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023b3	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023b8	            0xeb18	                           jmp 0x40023d2	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023ba	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023c0	        0x4983c601	                              add r14, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023c4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023c8	        0x413a56ff	                  cmp dl, byte [r14 - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023cc	     0xf85bdfeffff	                           jne 0x400228f	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023d2	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40023d5	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40023d7	            0x75e7	                           jne 0x40023c0	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40023d9	      0xe9c9feffff	                           jmp 0x40022a7	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40023de	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023e3	          0x4c89f3	                            mov rbx, r14	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023e6	            0xeb19	                           jmp 0x4002401	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023e8	     0xf1f84000000	                   nop dword [rax + rax]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023f0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023f4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023f8	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40023fb	     0xf8529f7ffff	                           jne 0x4001b2a	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002401	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002404	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002406	            0x75e8	                           jne 0x40023f0	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002408	    0x41be00000000	                             mov r14d, 0	       979	pretty.c	WHILE_3	FUNCTION_36	ELSE_5	IF_11
0x400240e	      0xe963f8ffff	                           jmp 0x4001c76	       979	pretty.c	WHILE_3	FUNCTION_36	ELSE_5	IF_11
0x4002413	            0x3c3f	                            cmp al, 0x3f	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4002415	     0xf850ff7ffff	                           jne 0x4001b2a	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x400241b	         0xfb64530	           movzx eax, byte [rbp + 0x30] 	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x400241f	          0x8d48be	                   lea ecx, [rax - 0x42]	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x4002422	          0x80f917	                            cmp cl, 0x17	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x4002425	            0x771b	                            ja 0x4002442	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x4002427	      0xba01000000	                              mov edx, 1	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x400242c	          0x48d3e2	                             shl rdx, cl	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x400242f	    0xf7c22910c900	                      test edx, 0xc91029	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x4002435	            0x740b	                            je 0x4002442	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x4002437	           0xfbef0	                           movsx esi, al	      1248	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5	CALL_47
0x400243a	          0x4c89e7	                            mov rdi, r12	      1248	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5	CALL_47
0x400243d	      0xe8cedeffff	                   call sym.strbuf_addch	      1248	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5	CALL_47
0x4002442	      0xbb02000000	                              mov ebx, 2	      1262	pretty.c	WHILE_3	FUNCTION_39	IF_17
0x4002447	      0xe9a4f6ffff	                           jmp 0x4001af0	      1262	pretty.c	WHILE_3	FUNCTION_39	IF_17
0x400244c	        0x488d7a01	                      lea rdi, [rdx + 1]	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x4002450	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x4002455	      0xba0a000000	                            mov edx, 0xa	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x400245a	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x400245f	      0xe800000000	                          call 0x4002464	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x4002464	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1129	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9
0x4002469	          0x4989c7	                            mov r15, rax	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x400246c	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1129	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9
0x4002471	           0xfb602	                   movzx eax, byte [rdx]	      1129	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9
0x4002474	            0x3c2c	                            cmp al, 0x2c	      1129	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9
0x4002476	     0xf855ff9ffff	                           jne 0x4001ddb	      1129	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9
0x400247c	        0x488d7a01	                      lea rdi, [rdx + 1]	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x4002480	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x4002485	      0xba0a000000	                            mov edx, 0xa	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x400248a	      0xe800000000	                          call 0x400248f	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x400248f	          0x4989c1	                             mov r9, rax	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x4002492	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x4002497	           0xfb600	                   movzx eax, byte [rax]	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x400249a	      0xe93cf9ffff	                           jmp 0x4001ddb	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x400249f	        0x807d3000	                cmp byte [rbp + 0x30], 0	      1231	pretty.c	WHILE_3	FUNCTION_39	IF_17	IF_18
0x40024a3	     0xf842e030000	                            je 0x40027d7	      1231	pretty.c	WHILE_3	FUNCTION_39	IF_17	IF_18
0x40024a9	      0x410fb64501	               movzx eax, byte [r13 + 1]	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40024ae	            0x3c47	                            cmp al, 0x47	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40024b0	     0xf8433030000	                            je 0x40027e9	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40024b6	     0xf8e57ffffff	                           jle 0x4002413	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40024bc	            0x3c4b	                            cmp al, 0x4b	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40024be	     0xf8437030000	                            je 0x40027fb	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40024c4	            0x3c53	                            cmp al, 0x53	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40024c6	     0xf855ef6ffff	                           jne 0x4001b2a	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40024cc	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      1252	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_20
0x40024d0	          0x4885f6	                           test rsi, rsi	      1252	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_20
0x40024d3	     0xf8469ffffff	                            je 0x4002442	      1252	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_20
0x40024d9	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_58	CALL_2
0x40024dc	            0x31c0	                            xor eax, eax	       279	strbuf.h	FUNCTION_58	CALL_2
0x40024de	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_58	CALL_2
0x40024e5	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_58	CALL_2
0x40024e7	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x40024ea	      0xbb02000000	                              mov ebx, 2	      1262	pretty.c	WHILE_3	FUNCTION_39	IF_17
0x40024ef	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_58	CALL_2
0x40024f2	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x40024f5	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_58	CALL_2
0x40024f9	      0xe800000000	                          call 0x40024fe	       279	strbuf.h	FUNCTION_58	CALL_2
0x40024fe	      0xe9edf5ffff	                           jmp 0x4001af0	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002503	        0x488b4508	                mov rax, qword [rbp + 8]	      1201	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14
0x4002507	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      1201	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14
0x400250b	          0x4885f6	                           test rsi, rsi	      1201	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14
0x400250e	     0xf842effffff	                            je 0x4002442	      1201	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14
0x4002514	         0xfb64830	           movzx ecx, byte [rax + 0x30] 	      1205	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14
0x4002518	          0x4531c0	                            xor r8d, r8d	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x400251b	        0x488d5018	                   lea rdx, [rax + 0x18]	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x400251f	          0x80fb64	                            cmp bl, 0x64	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x4002522	          0x4c89e7	                            mov rdi, r12	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x4002525	      0xbb02000000	                              mov ebx, 2	      1207	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x400252a	        0x410f94c0	                                sete r8b	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x400252e	          0x83e101	                              and ecx, 1	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x4002531	      0xe800000000	                          call 0x4002536	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x4002536	      0xe9b5f5ffff	                           jmp 0x4001af0	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x400253b	          0x80fa42	                            cmp dl, 0x42	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x400253e	     0xf8551010000	                           jne 0x4002695	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x4002544	    0x488b85a00000	            mov rax, qword [rbp + 0xa0] 	      1285	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_54
0x400254b	      0x498d5c0601	                lea rbx, [r14 + rax + 1]	      1285	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_54
0x4002550	      0xe930f9ffff	                           jmp 0x4001e85	      1285	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_54
0x4002555	        0x4c8b4d50	              mov r9, qword [rbp + 0x50]	       792	pretty.c	WHILE_3	FUNCTION_28
0x4002559	          0x4531db	                          xor r11d, r11d	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x400255c	          0x4531d2	                          xor r10d, r10d	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x400255f	        0x410fb601	                    movzx eax, byte [r9]	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x4002563	          0x4d89c8	                              mov r8, r9	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x4002566	            0x84c0	                             test al, al	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x4002568	     0xf8482000000	                            je 0x40025f0	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x400256e	            0x6690	                                     nop	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x4002570	            0x3c0a	                             cmp al, 0xa	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x4002572	            0x747c	                            je 0x40025f0	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x4002574	          0x4963c2	                        movsxd rax, r10d	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x4002577	          0x4489d7	                           mov edi, r10d	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x400257a	      0x498d4c0101	                 lea rcx, [r9 + rax + 1]	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x400257f	            0xeb10	                           jmp 0x4002591	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x4002581	     0xf1f80000000	                         nop dword [rax]	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x4002588	            0x3c0a	                             cmp al, 0xa	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x400258a	            0x7413	                            je 0x400259f	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x400258c	          0x4889f1	                            mov rcx, rsi	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x400258f	            0x89d7	                            mov edi, edx	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x4002591	           0xfb601	                   movzx eax, byte [rcx]	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x4002594	          0x8d5701	                      lea edx, [rdi + 1]	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x4002597	        0x488d7101	                      lea rsi, [rcx + 1]	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x400259b	            0x84c0	                             test al, al	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x400259d	            0x75e9	                           jne 0x4002588	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x400259f	          0x4139d2	                           cmp r10d, edx	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x40025a2	            0x744c	                            je 0x40025f0	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x40025a4	          0x4c89c0	                             mov rax, r8	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x40025a7	      0xba00000000	                              mov edx, 0	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x40025ac	            0xeb10	                           jmp 0x40025be	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x40025ae	            0x6690	                                     nop	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x40025b0	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40025b4	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40025b8	        0x403a70ff	                 cmp sil, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40025bc	            0x754a	                           jne 0x4002608	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40025be	           0xfb632	                   movzx esi, byte [rdx]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40025c1	          0x4084f6	                           test sil, sil	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40025c4	            0x75ea	                           jne 0x40025b0	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40025c6	          0x4889c2	                            mov rdx, rax	       804	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_1	IF_2
0x40025c9	          0x4829c1	                            sub rcx, rax	       805	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_1	IF_2
0x40025cc	          0x4c29ca	                             sub rdx, r9	       804	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_1	IF_2
0x40025cf	    0x48898d880000	            mov qword [rbp + 0x88], rcx 	       805	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_1	IF_2
0x40025d6	    0x488995800000	            mov qword [rbp + 0x80], rdx 	       804	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_1	IF_2
0x40025dd	        0x448d5702	                     lea r10d, [rdi + 2]	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40025e1	          0x4d63da	                        movsxd r11, r10d	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40025e4	        0x4f8d0419	                      lea r8, [r9 + r11]	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40025e8	        0x410fb600	                    movzx eax, byte [r8]	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40025ec	            0x84c0	                             test al, al	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40025ee	            0x7580	                           jne 0x4002570	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40025f0	        0x804d1001	                 or byte [rbp + 0x10], 1	       813	pretty.c	WHILE_3	FUNCTION_28
0x40025f4	    0x4c899da00000	            mov qword [rbp + 0xa0], r11 	       812	pretty.c	WHILE_3	FUNCTION_28
0x40025fb	      0x410fb65500	                   movzx edx, byte [r13]	       812	pretty.c	WHILE_3	FUNCTION_28
0x4002600	      0xe926fbffff	                           jmp 0x400212b	       812	pretty.c	WHILE_3	FUNCTION_28
0x4002605	           0xf1f00	                         nop dword [rax]	       812	pretty.c	WHILE_3	FUNCTION_28
0x4002608	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400260d	            0xeb0f	                           jmp 0x400261e	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400260f	              0x90	                                     nop	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002610	        0x4983c001	                               add r8, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002614	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x4002618	        0x413a50ff	                   cmp dl, byte [r8 - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400261c	            0x75bf	                           jne 0x40025dd	       488	git-compat-util.h	FUNCTION_103	DO_1
0x400261e	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002621	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002623	            0x75eb	                           jne 0x4002610	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002625	          0x4c89c0	                             mov rax, r8	       807	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x4002628	          0x4c29c1	                             sub rcx, r8	       808	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x400262b	          0x4c29c8	                             sub rax, r9	       807	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x400262e	    0x48898d980000	            mov qword [rbp + 0x98], rcx 	       808	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x4002635	    0x488985900000	            mov qword [rbp + 0x90], rax 	       807	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x400263c	            0xeb9f	                           jmp 0x40025dd	       807	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x400263e	          0x4585e4	                         test r12d, r12d	      1030	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_8
0x4002641	     0xf84e3f4ffff	                            je 0x4001b2a	      1030	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_8
0x4002647	      0x4889442408	                mov qword [rsp + 8], rax	      1030	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_8
0x400264c	      0xe800000000	                          call 0x4002651	      1031	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	CALL_2
0x4002651	      0x488b542408	                mov rdx, qword [rsp + 8]	      1032	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_9
0x4002656	             0x1d0	                            add eax, edx	      1032	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_9
0x4002658	     0xf88ccf4ffff	                            js 0x4001b2a	      1032	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_9
0x400265e	            0xf7d8	                                 neg eax	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4002660	            0x89c2	                            mov edx, eax	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4002662	      0xe91ff7ffff	                           jmp 0x4001d86	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4002667	          0x4c89f2	                            mov rdx, r14	      1272	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_51
0x400266a	    0x480395800000	             add rdx, qword [rbp + 0x80]	      1272	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_51
0x4002671	        0x488b4508	                mov rax, qword [rbp + 8]	      1272	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_51
0x4002675	    0x488b8d880000	            mov rcx, qword [rbp + 0x88] 	      1272	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_51
0x400267c	      0x410fbe7501	               movsx esi, byte [r13 + 1]	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002681	        0x4c8d4018	                    lea r8, [rax + 0x18]	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002685	          0x4c89e7	                            mov rdi, r12	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002688	      0xe883e6ffff	             call sym.format_person_part	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x400268d	          0x4889c3	                            mov rbx, rax	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002690	      0xe95bf4ffff	                           jmp 0x4001af0	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002695	        0xf6451002	               test byte [rbp + 0x10], 2	      1290	pretty.c	WHILE_3	FUNCTION_39	IF_24
0x4002699	     0xf846e010000	                            je 0x400280d	      1290	pretty.c	WHILE_3	FUNCTION_39	IF_24
0x400269f	          0x80fa66	                            cmp dl, 0x66	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40026a2	     0xf84b1010000	                            je 0x4002859	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40026a8	          0x80fa73	                            cmp dl, 0x73	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40026ab	     0xf84b6020000	                            je 0x4002967	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40026b1	          0x80fa62	                            cmp dl, 0x62	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40026b4	          0x4d89ef	                            mov r15, r13	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40026b7	      0xb800000000	                              mov eax, 0	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40026bc	            0x751c	                           jne 0x40026da	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40026be	      0xe973020000	                           jmp 0x4002936	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40026c3	       0xf1f440000	                   nop dword [rax + rax]	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40026c8	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40026cc	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40026d0	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40026d4	     0xf8550f4ffff	                           jne 0x4001b2a	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40026da	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40026dd	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40026df	            0x75e7	                           jne 0x40026c8	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40026e1	            0x31c0	                            xor eax, eax	      1306	pretty.c	WHILE_3	FUNCTION_39	IF_25
0x40026e3	        0x41803f3a	                    cmp byte [r15], 0x3a	      1307	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x40026e7	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1306	pretty.c	WHILE_3	FUNCTION_39	IF_25
0x40026ec	      0xb905000000	                              mov ecx, 5	      1306	pretty.c	WHILE_3	FUNCTION_39	IF_25
0x40026f1	          0x4889d7	                            mov rdi, rdx	      1306	pretty.c	WHILE_3	FUNCTION_39	IF_25
0x40026f4	            0xf3ab	              rep stosd dword [rdi], eax	      1306	pretty.c	WHILE_3	FUNCTION_39	IF_25
0x40026f6	     0xf84a3020000	                            je 0x400299f	      1307	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x40026fc	            0x31db	                            xor ebx, ebx	      1324	pretty.c	WHILE_3	FUNCTION_39
0x40026fe	        0x41803f29	                    cmp byte [r15], 0x29	      1318	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4002702	     0xf85e8f3ffff	                           jne 0x4001af0	      1318	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4002708	          0x4c89f6	                            mov rsi, r14	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x400270b	    0x4803b5a80000	             add rsi, qword [rbp + 0xa8]	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x4002712	          0x4c89e7	                            mov rdi, r12	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x4002715	          0x4c89fb	                            mov rbx, r15	      1320	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4002718	      0xe800000000	                          call 0x400271d	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x400271d	      0xe97ef6ffff	                           jmp 0x4001da0	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x4002722	    0x660f1f440000	                    nop word [rax + rax]	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x4002728	          0x4c89f2	                            mov rdx, r14	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x400272b	        0x488b4508	                mov rax, qword [rbp + 8]	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x400272f	    0x488b8d980000	            mov rcx, qword [rbp + 0x98] 	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002736	    0x480395900000	             add rdx, qword [rbp + 0x90]	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x400273d	      0xe93affffff	                           jmp 0x400267c	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002742	        0x488b6d08	                mov rbp, qword [rbp + 8]	      1219	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002746	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	      1216	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_43
0x400274a	          0x4885ff	                           test rdi, rdi	       925	pretty.c	WHILE_3	FUNCTION_35	IF_1
0x400274d	     0xf84effcffff	                            je 0x4002442	       925	pretty.c	WHILE_3	FUNCTION_35	IF_1
0x4002753	      0xe800000000	                          call 0x4002758	       928	pretty.c	WHILE_3	FUNCTION_35	CALL_1
0x4002758	          0x4885c0	                           test rax, rax	       929	pretty.c	WHILE_3	FUNCTION_35	IF_2
0x400275b	          0x4889c2	                            mov rdx, rax	       928	pretty.c	WHILE_3	FUNCTION_35	CALL_1
0x400275e	     0xf84defcffff	                            je 0x4002442	       929	pretty.c	WHILE_3	FUNCTION_35	IF_2
0x4002764	          0x4889d7	                            mov rdi, rdx	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x4002767	            0x31c0	                            xor eax, eax	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x4002769	        0x4883c9ff	              or rcx, 0xffffffffffffffff	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x400276d	            0xf2ae	              repne scasb al, byte [rdi]	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x400276f	        0x4c8d4518	                    lea r8, [rbp + 0x18]	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x4002773	           0xfbef3	                           movsx esi, bl	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x4002776	          0x4c89e7	                            mov rdi, r12	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x4002779	          0x4889c8	                            mov rax, rcx	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x400277c	          0x48f7d0	                                 not rax	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x400277f	        0x488d48ff	                      lea rcx, [rax - 1]	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x4002783	      0xe888e5ffff	             call sym.format_person_part	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x4002788	          0x4863d8	                         movsxd rbx, eax	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x400278b	      0xe960f3ffff	                           jmp 0x4001af0	      1216	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_43
0x4002790	        0x4c8d6301	                      lea r12, [rbx + 1]	      1039	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x4002794	      0xbe29000000	                           mov esi, 0x29	      1040	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x4002799	          0x4c89e7	                            mov rdi, r12	      1040	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x400279c	      0xe800000000	                          call 0x40027a1	      1040	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x40027a1	          0x4885c0	                           test rax, rax	      1041	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_11
0x40027a4	          0x4889c3	                            mov rbx, rax	      1040	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x40027a7	     0xf847df3ffff	                            je 0x4001b2a	      1041	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_11
0x40027ad	          0x4939c4	                            cmp r12, rax	      1041	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_11
0x40027b0	     0xf8474f3ffff	                            je 0x4001b2a	      1041	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_11
0x40027b6	      0xbe00000000	                              mov esi, 0	      1043	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12	CALL_3
0x40027bb	          0x4c89e7	                            mov rdi, r12	      1043	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12	CALL_3
0x40027be	      0xe800000000	                          call 0x40027c3	      1043	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12	CALL_3
0x40027c3	            0x85c0	                           test eax, eax	      1043	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12	CALL_3
0x40027c5	     0xf8493020000	                            je 0x4002a5e	      1043	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12	CALL_3
0x40027cb	    0xc7454c030000	               mov dword [rbp + 0x4c], 3	      1044	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12
0x40027d2	      0xe9c9f5ffff	                           jmp 0x4001da0	      1044	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12
0x40027d7	        0x488b7d00	                    mov rdi, qword [rbp]	      1232	pretty.c	WHILE_3	FUNCTION_39	IF_17	CALL_45
0x40027db	        0x488d7518	                   lea rsi, [rbp + 0x18]	      1232	pretty.c	WHILE_3	FUNCTION_39	IF_17	CALL_45
0x40027df	      0xe800000000	                          call 0x40027e4	      1232	pretty.c	WHILE_3	FUNCTION_39	IF_17	CALL_45
0x40027e4	      0xe9c0fcffff	                           jmp 0x40024a9	      1232	pretty.c	WHILE_3	FUNCTION_39	IF_17	CALL_45
0x40027e9	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	      1235	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_19
0x40027ed	          0x4885f6	                           test rsi, rsi	      1235	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_19
0x40027f0	     0xf85e3fcffff	                           jne 0x40024d9	      1235	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_19
0x40027f6	      0xe947fcffff	                           jmp 0x4002442	      1235	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_19
0x40027fb	        0x488b7540	            mov rsi, qword [rbp + 0x40] 	      1256	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_21
0x40027ff	          0x4885f6	                           test rsi, rsi	      1256	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_21
0x4002802	     0xf85d1fcffff	                           jne 0x40024d9	      1256	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_21
0x4002808	      0xe935fcffff	                           jmp 0x4002442	      1256	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_21
0x400280d	        0x488b5d50	            mov rbx, qword [rbp + 0x50] 	       876	pretty.c	WHILE_3	FUNCTION_32
0x4002811	          0x4889df	                            mov rdi, rbx	       876	pretty.c	WHILE_3	FUNCTION_32
0x4002814	    0x4803bda00000	             add rdi, qword [rbp + 0xa0]	       876	pretty.c	WHILE_3	FUNCTION_32
0x400281b	      0xe800000000	                          call 0x4002820	       879	pretty.c	WHILE_3	FUNCTION_32	CALL_1
0x4002820	          0x4889c2	                            mov rdx, rax	       880	pretty.c	WHILE_3	FUNCTION_32
0x4002823	          0x4889c6	                            mov rsi, rax	       882	pretty.c	WHILE_3	FUNCTION_32	CALL_2
0x4002826	            0x31ff	                            xor edi, edi	       882	pretty.c	WHILE_3	FUNCTION_32	CALL_2
0x4002828	          0x4829da	                            sub rdx, rbx	       880	pretty.c	WHILE_3	FUNCTION_32
0x400282b	    0x488995a80000	            mov qword [rbp + 0xa8], rdx 	       880	pretty.c	WHILE_3	FUNCTION_32
0x4002832	            0x31d2	                            xor edx, edx	       882	pretty.c	WHILE_3	FUNCTION_32	CALL_2
0x4002834	      0xe800000000	                          call 0x4002839	       882	pretty.c	WHILE_3	FUNCTION_32	CALL_2
0x4002839	          0x4889c7	                            mov rdi, rax	       883	pretty.c	WHILE_3	FUNCTION_32	CALL_3
0x400283c	      0xe800000000	                          call 0x4002841	       883	pretty.c	WHILE_3	FUNCTION_32	CALL_3
0x4002841	        0x804d1002	                 or byte [rbp + 0x10], 2	       886	pretty.c	WHILE_3	FUNCTION_32
0x4002845	          0x4829d8	                            sub rax, rbx	       884	pretty.c	WHILE_3	FUNCTION_32
0x4002848	    0x488985b00000	            mov qword [rbp + 0xb0], rax 	       884	pretty.c	WHILE_3	FUNCTION_32
0x400284f	      0x410fb65500	                   movzx edx, byte [r13]	       884	pretty.c	WHILE_3	FUNCTION_32
0x4002854	      0xe946feffff	                           jmp 0x400269f	       884	pretty.c	WHILE_3	FUNCTION_32
0x4002859	    0x4c03b5a80000	             add r14, qword [rbp + 0xa8]	      1298	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_57
0x4002860	      0x498b6c2408	                mov rbp, qword [r12 + 8]	       825	pretty.c	WHILE_3	FUNCTION_30
0x4002865	        0x410fb606	                   movzx eax, byte [r14]	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002869	            0x84c0	                             test al, al	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x400286b	     0xf8446020000	                            je 0x4002ab7	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002871	            0x3c0a	                             cmp al, 0xa	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002873	     0xf843e020000	                            je 0x4002ab7	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002879	      0xb902000000	                              mov ecx, 2	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x400287e	    0x48bbfd0f0000	            movabs rbx, 0x2000000000ffd 	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002888	            0xeb36	                           jmp 0x40028c0	       819	pretty.c	WHILE_3	FUNCTION_29
0x400288a	        0x480fa3c3	                             bt rbx, rax	       819	pretty.c	WHILE_3	FUNCTION_29
0x400288e	            0x7344	                           jae 0x40028d4	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002890	          0x83f901	                              cmp ecx, 1	       830	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_2
0x4002893	     0xf84f4000000	                            je 0x400298d	       830	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_2
0x4002899	        0x410fbe36	                   movsx esi, byte [r14]	       833	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_3
0x400289d	          0x4c89e7	                            mov rdi, r12	       833	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_3
0x40028a0	      0xe86bdaffff	                   call sym.strbuf_addch	       833	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_3
0x40028a5	            0x31c9	                            xor ecx, ecx	       832	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1
0x40028a7	        0x41803e2e	                    cmp byte [r14], 0x2e	       834	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3
0x40028ab	          0x4c89f0	                            mov rax, r14	       834	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3
0x40028ae	            0x742c	                            je 0x40028dc	       834	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3
0x40028b0	        0x4c8d7001	                      lea r14, [rax + 1]	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x40028b4	         0xfb64001	               movzx eax, byte [rax + 1]	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x40028b8	            0x84c0	                             test al, al	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x40028ba	            0x7435	                            je 0x40028f1	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x40028bc	            0x3c0a	                             cmp al, 0xa	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x40028be	            0x7431	                            je 0x40028f1	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x40028c0	            0x89c2	                            mov edx, eax	       819	pretty.c	WHILE_3	FUNCTION_29
0x40028c2	          0x83e2df	                     and edx, 0xffffffdf	       819	pretty.c	WHILE_3	FUNCTION_29
0x40028c5	          0x83ea41	                           sub edx, 0x41	       819	pretty.c	WHILE_3	FUNCTION_29
0x40028c8	          0x80fa19	                            cmp dl, 0x19	       819	pretty.c	WHILE_3	FUNCTION_29
0x40028cb	            0x76c3	                           jbe 0x4002890	       819	pretty.c	WHILE_3	FUNCTION_29
0x40028cd	          0x83e82e	                           sub eax, 0x2e	       819	pretty.c	WHILE_3	FUNCTION_29
0x40028d0	            0x3c31	                            cmp al, 0x31	       819	pretty.c	WHILE_3	FUNCTION_29
0x40028d2	            0x76b6	                           jbe 0x400288a	       819	pretty.c	WHILE_3	FUNCTION_29
0x40028d4	          0x83c901	                               or ecx, 1	       838	pretty.c	WHILE_3	FUNCTION_30	FOR_1	ELSE_1
0x40028d7	          0x4c89f0	                            mov rax, r14	       838	pretty.c	WHILE_3	FUNCTION_30	FOR_1	ELSE_1
0x40028da	            0xebd4	                           jmp 0x40028b0	       838	pretty.c	WHILE_3	FUNCTION_30	FOR_1	ELSE_1
0x40028dc	      0x41807e012e	                cmp byte [r14 + 1], 0x2e	       835	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3	WHILE_1
0x40028e1	            0x75cd	                           jne 0x40028b0	       835	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3	WHILE_1
0x40028e3	        0x4883c001	                              add rax, 1	       836	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3	WHILE_1
0x40028e7	        0x8078012e	                cmp byte [rax + 1], 0x2e	       835	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3	WHILE_1
0x40028eb	            0x74f6	                            je 0x40028e3	       835	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3	WHILE_1
0x40028ed	            0x31c9	                            xor ecx, ecx	       832	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1
0x40028ef	            0xebbf	                           jmp 0x40028b0	       832	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1
0x40028f1	      0x498b742408	                mov rsi, qword [r12 + 8]	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x40028f6	            0x31d2	                            xor edx, edx	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x40028f8	          0x4839f5	                            cmp rbp, rsi	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x40028fb	            0x7327	                           jae 0x4002924	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x40028fd	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       844	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002902	            0xeb10	                           jmp 0x4002914	       844	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002904	         0xf1f4000	                         nop dword [rax]	       844	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002908	        0x4883c201	                              add rdx, 1	       846	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x400290c	          0x4839cd	                            cmp rbp, rcx	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x400290f	          0x4889ce	                            mov rsi, rcx	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002912	            0x7410	                            je 0x4002924	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002914	       0xfb64437ff	         movzx eax, byte [rdi + rsi - 1]	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002919	        0x488d4eff	                      lea rcx, [rsi - 1]	       844	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x400291d	          0x83e82d	                           sub eax, 0x2d	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002920	            0x3c01	                               cmp al, 1	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002922	            0x76e4	                           jbe 0x4002908	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002924	          0x4c89e7	                            mov rdi, r12	       847	pretty.c	WHILE_3	FUNCTION_30	CALL_4
0x4002927	      0xbb01000000	                              mov ebx, 1	      1299	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x400292c	      0xe800000000	                          call 0x4002931	       847	pretty.c	WHILE_3	FUNCTION_30	CALL_4
0x4002931	      0xe9baf1ffff	                           jmp 0x4001af0	       847	pretty.c	WHILE_3	FUNCTION_30	CALL_4
0x4002936	          0x4c89f6	                            mov rsi, r14	      1301	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_58
0x4002939	    0x4803b5b00000	             add rsi, qword [rbp + 0xb0]	      1301	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_58
0x4002940	            0x31c0	                            xor eax, eax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002942	        0x4883c9ff	              or rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002946	      0xbb01000000	                              mov ebx, 1	      1302	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x400294b	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_58	CALL_2
0x400294e	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002950	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002953	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002956	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002959	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_58	CALL_2
0x400295d	      0xe800000000	                          call 0x4002962	       279	strbuf.h	FUNCTION_58	CALL_2
0x4002962	      0xe989f1ffff	                           jmp 0x4001af0	      1302	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x4002967	          0x4c89f6	                            mov rsi, r14	      1295	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_56
0x400296a	    0x4803b5a80000	             add rsi, qword [rbp + 0xa8]	      1295	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_56
0x4002971	      0xba00000000	                              mov edx, 0	      1295	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_56
0x4002976	          0x4c89e7	                            mov rdi, r12	      1295	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_56
0x4002979	      0xbb01000000	                              mov ebx, 1	      1296	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x400297e	      0xe800000000	                          call 0x4002983	      1295	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_56
0x4002983	      0xe968f1ffff	                           jmp 0x4001af0	      1296	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x4002988	      0xe800000000	                          call 0x400298d	      1325	pretty.c	WHILE_3	FUNCTION_39
0x400298d	      0xbe2d000000	                           mov esi, 0x2d	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4002992	          0x4c89e7	                            mov rdi, r12	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4002995	      0xe876d9ffff	                   call sym.strbuf_addch	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x400299a	      0xe9fafeffff	                           jmp 0x4002899	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x400299f	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x40029a4	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x40029a8	        0x4983c701	                              add r15, 1	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x40029ac	          0x4531c0	                            xor r8d, r8d	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x40029af	          0x4531d2	                          xor r10d, r10d	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x40029b2	          0x4c89f8	                            mov rax, r15	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x40029b5	      0xb900000000	                              mov ecx, 0	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x40029ba	            0xeb12	                           jmp 0x40029ce	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x40029bc	         0xf1f4000	                         nop dword [rax]	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x40029c0	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40029c4	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40029c8	        0x403a70ff	                 cmp sil, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40029cc	            0x7515	                           jne 0x40029e3	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40029ce	           0xfb631	                   movzx esi, byte [rcx]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40029d1	          0x4084f6	                           test sil, sil	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40029d4	            0x75ea	                           jne 0x40029c0	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x40029d6	           0xfb608	                   movzx ecx, byte [rax]	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x40029d9	          0x80f92c	                            cmp cl, 0x2c	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x40029dc	            0x7460	                            je 0x4002a3e	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x40029de	          0x80f929	                            cmp cl, 0x29	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x40029e1	            0x7476	                            je 0x4002a59	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x40029e3	          0x4c89f8	                            mov rax, r15	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x40029e6	      0xb900000000	                              mov ecx, 0	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x40029eb	            0xeb11	                           jmp 0x40029fe	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x40029ed	           0xf1f00	                         nop dword [rax]	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x40029f0	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40029f4	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40029f8	        0x403a70ff	                 cmp sil, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40029fc	            0x7525	                           jne 0x4002a23	       488	git-compat-util.h	FUNCTION_103	DO_1
0x40029fe	           0xfb631	                   movzx esi, byte [rcx]	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002a01	          0x4084f6	                           test sil, sil	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002a04	            0x75ea	                           jne 0x40029f0	       484	git-compat-util.h	FUNCTION_103	DO_1	IF_1
0x4002a06	           0xfb608	                   movzx ecx, byte [rax]	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002a09	          0x80f92c	                            cmp cl, 0x2c	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002a0c	            0x7445	                            je 0x4002a53	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002a0e	          0x80f929	                            cmp cl, 0x29	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002a11	            0x7510	                           jne 0x4002a23	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002a13	          0x4989c7	                            mov r15, rax	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002a16	    0x41b801000000	                              mov r8d, 1	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x4002a1c	      0xbf01000000	                              mov edi, 1	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002a21	            0xeb8f	                           jmp 0x40029b2	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002a23	          0x4584d2	                         test r10b, r10b	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002a26	     0xf8595000000	                           jne 0x4002ac1	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002a2c	          0x4584c0	                           test r8b, r8b	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002a2f	     0xf84c7fcffff	                            je 0x40026fc	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002a35	        0x897c2420	             mov dword [rsp + 0x20], edi	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002a39	      0xe9befcffff	                           jmp 0x40026fc	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002a3e	        0x4c8d7801	                      lea r15, [rax + 1]	      1067	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002a42	    0x41ba01000000	                             mov r10d, 1	      1067	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002a48	    0x41b901000000	                              mov r9d, 1	      1311	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	IF_27
0x4002a4e	      0xe95fffffff	                           jmp 0x40029b2	      1311	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	IF_27
0x4002a53	        0x4c8d7801	                      lea r15, [rax + 1]	      1067	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002a57	            0xebbd	                           jmp 0x4002a16	      1067	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002a59	          0x4989c7	                            mov r15, rax	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002a5c	            0xebe4	                           jmp 0x4002a42	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002a5e	      0xbe00000000	                              mov esi, 0	      1045	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13	CALL_4
0x4002a63	          0x4c89e7	                            mov rdi, r12	      1045	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13	CALL_4
0x4002a66	      0xe800000000	                          call 0x4002a6b	      1045	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13	CALL_4
0x4002a6b	            0x85c0	                           test eax, eax	      1045	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13	CALL_4
0x4002a6d	            0x7427	                            je 0x4002a96	      1045	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13	CALL_4
0x4002a6f	    0xc7454c010000	               mov dword [rbp + 0x4c], 1	      1046	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13
0x4002a76	      0xe925f3ffff	                           jmp 0x4001da0	      1046	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13
0x4002a7b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_153
0x4002a7d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_153
0x4002a82	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_153
0x4002a87	      0xe800000000	                          call 0x4002a8c	        54	gettext.h	FUNCTION_153
0x4002a8c	          0x4889c7	                            mov rdi, rax	       962	pretty.c	WHILE_3	FUNCTION_36	IF_1	CALL_7
0x4002a8f	            0x31c0	                            xor eax, eax	       962	pretty.c	WHILE_3	FUNCTION_36	IF_1	CALL_7
0x4002a91	      0xe800000000	                          call 0x4002a96	       962	pretty.c	WHILE_3	FUNCTION_36	IF_1	CALL_7
0x4002a96	      0xbe00000000	                              mov esi, 0	      1047	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14	CALL_5
0x4002a9b	          0x4c89e7	                            mov rdi, r12	      1047	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14	CALL_5
0x4002a9e	      0xe800000000	                          call 0x4002aa3	      1047	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14	CALL_5
0x4002aa3	            0x85c0	                           test eax, eax	      1047	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14	CALL_5
0x4002aa5	     0xf847ff0ffff	                            je 0x4001b2a	      1047	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14	CALL_5
0x4002aab	    0xc7454c020000	               mov dword [rbp + 0x4c], 2	      1048	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14
0x4002ab2	      0xe9e9f2ffff	                           jmp 0x4001da0	      1048	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14
0x4002ab7	          0x4889ee	                            mov rsi, rbp	       825	pretty.c	WHILE_3	FUNCTION_30
0x4002aba	            0x31d2	                            xor edx, edx	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002abc	      0xe963feffff	                           jmp 0x4002924	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002ac1	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002ac6	      0xe961ffffff	                           jmp 0x4002a2c	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
strbuf_wrap	SWITCH,0:DO,0:functions,0:CALL,4:WHILE,0:IF,1:FOR,0:ELSE,0	58
0x4000680	            0x4156	                                push r14	       891	pretty.c	WHILE_3	FUNCTION_33
0x4000682	            0x4155	                                push r13	       891	pretty.c	WHILE_3	FUNCTION_33
0x4000684	          0x4989d6	                            mov r14, rdx	       891	pretty.c	WHILE_3	FUNCTION_33
0x4000687	            0x4154	                                push r12	       891	pretty.c	WHILE_3	FUNCTION_33
0x4000689	              0x55	                                push rbp	       891	pretty.c	WHILE_3	FUNCTION_33
0x400068a	          0x4989cc	                            mov r12, rcx	       891	pretty.c	WHILE_3	FUNCTION_33
0x400068d	              0x53	                                push rbx	       891	pretty.c	WHILE_3	FUNCTION_33
0x400068e	          0x4889f5	                            mov rbp, rsi	       891	pretty.c	WHILE_3	FUNCTION_33
0x4000691	          0x4889fb	                            mov rbx, rdi	       891	pretty.c	WHILE_3	FUNCTION_33
0x4000694	          0x4d89c5	                             mov r13, r8	       891	pretty.c	WHILE_3	FUNCTION_33
0x4000697	        0x4883ec40	                           sub rsp, 0x40	       891	pretty.c	WHILE_3	FUNCTION_33
0x400069b	    0x64488b042528	                mov rax, qword fs:[0x28]	       891	pretty.c	WHILE_3	FUNCTION_33
0x40006a4	      0x4889442438	             mov qword [rsp + 0x38], rax	       891	pretty.c	WHILE_3	FUNCTION_33
0x40006a9	            0x31c0	                            xor eax, eax	       891	pretty.c	WHILE_3	FUNCTION_33
0x40006ab	          0x4885f6	                           test rsi, rsi	       894	pretty.c	WHILE_3	FUNCTION_33	IF_1
0x40006ae	    0x48c704240000	                      mov qword [rsp], 0	       892	pretty.c	WHILE_3	FUNCTION_33
0x40006b6	    0x48c744240800	                  mov qword [rsp + 8], 0	       892	pretty.c	WHILE_3	FUNCTION_33
0x40006bf	    0x48c744241000	               mov qword [rsp + 0x10], 0	       892	pretty.c	WHILE_3	FUNCTION_33
0x40006c8	            0x740f	                            je 0x40006d9	       894	pretty.c	WHILE_3	FUNCTION_33	IF_1
0x40006ca	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x40006ce	          0x4889ea	                            mov rdx, rbp	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x40006d1	          0x4889e7	                            mov rdi, rsp	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x40006d4	      0xe800000000	                          call 0x40006d9	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x40006d9	          0x4889ee	                            mov rsi, rbp	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x40006dc	        0x48037310	             add rsi, qword [rbx + 0x10]	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x40006e0	          0x4589f0	                           mov r8d, r14d	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x40006e3	          0x4489e9	                           mov ecx, r13d	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x40006e6	          0x4489e2	                           mov edx, r12d	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x40006e9	          0x4889e7	                            mov rdi, rsp	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x40006ec	      0xe800000000	                          call 0x40006f1	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x40006f1	          0x488b33	                    mov rsi, qword [rbx]	        53	string3.h	FUNCTION_83	CALL_3
0x40006f4	        0x488b0c24	                    mov rcx, qword [rsp]	        53	string3.h	FUNCTION_83	CALL_3
0x40006f8	          0x4889e7	                            mov rdi, rsp	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40006fb	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_83	CALL_3
0x4000700	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_83	CALL_3
0x4000705	        0x48893424	                    mov qword [rsp], rsi	        53	string3.h	FUNCTION_83	CALL_3
0x4000709	        0x488b7308	                mov rsi, qword [rbx + 8]	        53	string3.h	FUNCTION_83	CALL_3
0x400070d	          0x48890b	                    mov qword [rbx], rcx	        53	string3.h	FUNCTION_83	CALL_3
0x4000710	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_83	CALL_3
0x4000714	      0x4889442430	             mov qword [rsp + 0x30], rax	        53	string3.h	FUNCTION_83	CALL_3
0x4000719	      0x48894c2420	             mov qword [rsp + 0x20], rcx	        53	string3.h	FUNCTION_83	CALL_3
0x400071e	      0x4889742408	                mov qword [rsp + 8], rsi	        53	string3.h	FUNCTION_83	CALL_3
0x4000723	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_83	CALL_3
0x4000727	        0x48894310	             mov qword [rbx + 0x10], rax	        53	string3.h	FUNCTION_83	CALL_3
0x400072b	      0x4889542428	             mov qword [rsp + 0x28], rdx	        53	string3.h	FUNCTION_83	CALL_3
0x4000730	      0x4889742410	             mov qword [rsp + 0x10], rsi	        53	string3.h	FUNCTION_83	CALL_3
0x4000735	      0xe800000000	                          call 0x400073a	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x400073a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       900	pretty.c	WHILE_3	FUNCTION_33
0x400073f	    0x644833042528	                xor rax, qword fs:[0x28]	       900	pretty.c	WHILE_3	FUNCTION_33
0x4000748	            0x750d	                           jne 0x4000757	       900	pretty.c	WHILE_3	FUNCTION_33
0x400074a	        0x4883c440	                           add rsp, 0x40	       900	pretty.c	WHILE_3	FUNCTION_33
0x400074e	              0x5b	                                 pop rbx	       900	pretty.c	WHILE_3	FUNCTION_33
0x400074f	              0x5d	                                 pop rbp	       900	pretty.c	WHILE_3	FUNCTION_33
0x4000750	            0x415c	                                 pop r12	       900	pretty.c	WHILE_3	FUNCTION_33
0x4000752	            0x415d	                                 pop r13	       900	pretty.c	WHILE_3	FUNCTION_33
0x4000754	            0x415e	                                 pop r14	       900	pretty.c	WHILE_3	FUNCTION_33
0x4000756	              0xc3	                                     ret	       900	pretty.c	WHILE_3	FUNCTION_33
0x4000757	      0xe800000000	                          call 0x400075c	       900	pretty.c	WHILE_3	FUNCTION_33
pp_commit_easy	SWITCH,0:DO,0:functions,0:CALL,1:WHILE,0:IF,0:FOR,0:ELSE,0	17
0x4003d90	    0x4881ecb80000	                           sub rsp, 0xb8	      1867	pretty.c	FUNCTION_53
0x4003d97	          0x4189f8	                            mov r8d, edi	      1867	pretty.c	FUNCTION_53
0x4003d9a	      0xb914000000	                           mov ecx, 0x14	      1868	pretty.c	FUNCTION_53
0x4003d9f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1867	pretty.c	FUNCTION_53
0x4003da8	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      1867	pretty.c	FUNCTION_53
0x4003db0	            0x31c0	                            xor eax, eax	      1867	pretty.c	FUNCTION_53
0x4003db2	          0x4889e7	                            mov rdi, rsp	      1868	pretty.c	FUNCTION_53
0x4003db5	          0xf348ab	              rep stosq qword [rdi], rax	      1868	pretty.c	FUNCTION_53
0x4003db8	          0x4889e7	                            mov rdi, rsp	      1870	pretty.c	FUNCTION_53	CALL_1
0x4003dbb	        0x44890424	                    mov dword [rsp], r8d	      1869	pretty.c	FUNCTION_53
0x4003dbf	      0xe800000000	                          call 0x4003dc4	      1870	pretty.c	FUNCTION_53	CALL_1
0x4003dc4	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      1871	pretty.c	FUNCTION_53
0x4003dcc	    0x644833042528	                xor rax, qword fs:[0x28]	      1871	pretty.c	FUNCTION_53
0x4003dd5	            0x7508	                           jne 0x4003ddf	      1871	pretty.c	FUNCTION_53
0x4003dd7	    0x4881c4b80000	                           add rsp, 0xb8	      1871	pretty.c	FUNCTION_53
0x4003dde	              0xc3	                                     ret	      1871	pretty.c	FUNCTION_53
0x4003ddf	      0xe800000000	                  call section_end..data	      1871	pretty.c	FUNCTION_53
