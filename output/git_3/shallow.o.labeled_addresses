show_commit	functions,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:DO,0:IF,0:FOR,0	1
0x4000080	      0xe900000000	                           jmp 0x4000085	       144	shallow.c	FUNCTION_5	CALL_1
is_repository_shallow	functions,0:WHILE,1:CALL,9:ELSE,0:SWITCH,0:DO,0:IF,4:FOR,0	64
0x4000640	              0x53	                                push rbx	        44	shallow.c	FUNCTION_3
0x4000641	    0x4881ec300400	                          sub rsp, 0x430	        44	shallow.c	FUNCTION_3
0x4000648	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	shallow.c	FUNCTION_3
0x4000651	    0x488984242804	            mov qword [rsp + 0x428], rax	        44	shallow.c	FUNCTION_3
0x4000659	            0x31c0	                            xor eax, eax	        44	shallow.c	FUNCTION_3
0x400065b	    0x8b0500000000	            mov eax, dword [0x04000661] 	        49	shallow.c	FUNCTION_3	IF_1
0x4000661	            0x85c0	                           test eax, eax	        49	shallow.c	FUNCTION_3	IF_1
0x4000663	            0x7823	                            js 0x4000688	        49	shallow.c	FUNCTION_3	IF_1
0x4000665	    0x488b8c242804	           mov rcx, qword [rsp + 0x428] 	        75	shallow.c	FUNCTION_3
0x400066d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        75	shallow.c	FUNCTION_3
0x4000676	     0xf85d5000000	                           jne 0x4000751	        75	shallow.c	FUNCTION_3
0x400067c	    0x4881c4300400	                          add rsp, 0x430	        75	shallow.c	FUNCTION_3
0x4000683	              0x5b	                                 pop rbx	        75	shallow.c	FUNCTION_3
0x4000684	              0xc3	                                     ret	        75	shallow.c	FUNCTION_3
0x4000685	           0xf1f00	                         nop dword [rax]	        75	shallow.c	FUNCTION_3
0x4000688	    0x488b3d000000	            mov rdi, qword [0x0400068f] 	        47	shallow.c	FUNCTION_3
0x400068f	          0x4885ff	                           test rdi, rdi	        52	shallow.c	FUNCTION_3	IF_2
0x4000692	     0xf849b000000	                            je 0x4000733	        52	shallow.c	FUNCTION_3	IF_2
0x4000698	          0x803f00	                       cmp byte [rdi], 0	        59	shallow.c	FUNCTION_3	IF_3
0x400069b	            0x747b	                            je 0x4000718	        59	shallow.c	FUNCTION_3	IF_3
0x400069d	      0xbe00000000	                              mov esi, 0	        59	shallow.c	FUNCTION_3	IF_3
0x40006a2	      0xe800000000	                          call 0x40006a7	        59	shallow.c	FUNCTION_3	IF_3
0x40006a7	          0x4885c0	                           test rax, rax	        59	shallow.c	FUNCTION_3	IF_3
0x40006aa	          0x4889c3	                            mov rbx, rax	        59	shallow.c	FUNCTION_3	IF_3
0x40006ad	            0x7469	                            je 0x4000718	        59	shallow.c	FUNCTION_3	IF_3
0x40006af	          0x4889c7	                            mov rdi, rax	        64	shallow.c	FUNCTION_3	CALL_4
0x40006b2	      0xe800000000	                          call 0x40006b7	        64	shallow.c	FUNCTION_3	CALL_4
0x40006b7	      0xbf00000000	                              mov edi, 0	        64	shallow.c	FUNCTION_3	CALL_4
0x40006bc	            0x89c6	                            mov esi, eax	        64	shallow.c	FUNCTION_3	CALL_4
0x40006be	      0xe800000000	                          call 0x40006c3	        64	shallow.c	FUNCTION_3	CALL_4
0x40006c3	    0xc70500000000	               mov dword [0x040006cd], 1	        65	shallow.c	FUNCTION_3
0x40006cd	            0xeb1a	                           jmp 0x40006e9	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40006cf	              0x90	                                     nop	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40006d0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x40006d5	          0x4889e6	                            mov rsi, rsp	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x40006d8	      0xe800000000	                          call 0x40006dd	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x40006dd	            0x85c0	                           test eax, eax	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x40006df	            0x755f	                           jne 0x4000740	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x40006e1	          0x4889e7	                            mov rdi, rsp	        71	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x40006e4	      0xe800000000	                          call 0x40006e9	        71	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x40006e9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       263	stdio2.h	FUNCTION_40	CALL_8
0x40006ee	          0x4889da	                            mov rdx, rbx	       263	stdio2.h	FUNCTION_40	CALL_8
0x40006f1	      0xbe00040000	                          mov esi, 0x400	       263	stdio2.h	FUNCTION_40	CALL_8
0x40006f6	      0xe800000000	                          call 0x40006fb	       263	stdio2.h	FUNCTION_40	CALL_8
0x40006fb	          0x4885c0	                           test rax, rax	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40006fe	            0x75d0	                           jne 0x40006d0	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x4000700	          0x4889df	                            mov rdi, rbx	        73	shallow.c	FUNCTION_3	CALL_9
0x4000703	      0xe800000000	                          call 0x4000708	        73	shallow.c	FUNCTION_3	CALL_9
0x4000708	    0x8b0500000000	            mov eax, dword [0x0400070e] 	        74	shallow.c	FUNCTION_3
0x400070e	      0xe952ffffff	                           jmp 0x4000665	        74	shallow.c	FUNCTION_3
0x4000713	       0xf1f440000	                   nop dword [rax + rax]	        74	shallow.c	FUNCTION_3
0x4000718	      0xbf00000000	                              mov edi, 0	        60	shallow.c	FUNCTION_3	IF_3	CALL_2
0x400071d	      0xe800000000	                          call 0x4000722	        60	shallow.c	FUNCTION_3	IF_3	CALL_2
0x4000722	    0xc70500000000	               mov dword [0x0400072c], 0	        61	shallow.c	FUNCTION_3	IF_3
0x400072c	            0x31c0	                            xor eax, eax	        62	shallow.c	FUNCTION_3	IF_3
0x400072e	      0xe932ffffff	                           jmp 0x4000665	        62	shallow.c	FUNCTION_3	IF_3
0x4000733	      0xe800000000	                          call 0x4000738	        53	shallow.c	FUNCTION_3	CALL_1
0x4000738	          0x4889c7	                            mov rdi, rax	        53	shallow.c	FUNCTION_3	CALL_1
0x400073b	      0xe958ffffff	                           jmp 0x4000698	        53	shallow.c	FUNCTION_3	CALL_1
0x4000740	      0x488d742420	                   lea rsi, [rsp + 0x20]	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x4000745	      0xbf00000000	                              mov edi, 0	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x400074a	            0x31c0	                            xor eax, eax	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x400074c	      0xe800000000	                          call 0x4000751	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x4000751	      0xe800000000	                          call 0x4000756	        75	shallow.c	FUNCTION_3
check_shallow_file_for_update	functions,0:WHILE,0:CALL,4:ELSE,0:SWITCH,0:DO,0:IF,2:FOR,0	16
0x4000090	        0x4883ec08	                              sub rsp, 8	       219	shallow.c	FUNCTION_7
0x4000094	    0x833d00000000	cmp dword [0x0400009b], 0xffffffffffffffff	       220	shallow.c	FUNCTION_7	IF_1
0x400009b	            0x741b	                            je 0x40000b8	       220	shallow.c	FUNCTION_7	IF_1
0x400009d	      0xe800000000	                          call 0x40000a2	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x40000a2	      0xbf00000000	                              mov edi, 0	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x40000a7	          0x4889c6	                            mov rsi, rax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x40000aa	      0xe800000000	                          call 0x40000af	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x40000af	            0x85c0	                           test eax, eax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x40000b1	            0x7411	                            je 0x40000c4	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x40000b3	        0x4883c408	                              add rsp, 8	       225	shallow.c	FUNCTION_7
0x40000b7	              0xc3	                                     ret	       225	shallow.c	FUNCTION_7
0x40000b8	      0xbf00000000	                              mov edi, 0	       221	shallow.c	FUNCTION_7	CALL_1
0x40000bd	            0x31c0	                            xor eax, eax	       221	shallow.c	FUNCTION_7	CALL_1
0x40000bf	      0xe800000000	                          call 0x40000c4	       221	shallow.c	FUNCTION_7	CALL_1
0x40000c4	      0xbf00000000	                              mov edi, 0	       224	shallow.c	FUNCTION_7	CALL_4
0x40000c9	      0xe800000000	                          call 0x40000ce	       224	shallow.c	FUNCTION_7	CALL_4
setup_temporary_shallow	functions,0:WHILE,0:CALL,9:ELSE,0:SWITCH,0:DO,0:IF,2:FOR,0	53
0x4000c00	              0x53	                                push rbx	       290	shallow.c	FUNCTION_11
0x4000c01	          0x4889fa	                            mov rdx, rdi	       290	shallow.c	FUNCTION_11
0x4000c04	            0x31c9	                            xor ecx, ecx	       286	shallow.c	FUNCTION_10	CALL_1
0x4000c06	            0x31f6	                            xor esi, esi	       286	shallow.c	FUNCTION_10	CALL_1
0x4000c08	        0x4883ec20	                           sub rsp, 0x20	       290	shallow.c	FUNCTION_11
0x4000c0c	          0x4889e7	                            mov rdi, rsp	       286	shallow.c	FUNCTION_10	CALL_1
0x4000c0f	    0x48c704240000	                      mov qword [rsp], 0	       292	shallow.c	FUNCTION_11
0x4000c17	    0x48c744240800	                  mov qword [rsp + 8], 0	       292	shallow.c	FUNCTION_11
0x4000c20	    0x64488b042528	                mov rax, qword fs:[0x28]	       290	shallow.c	FUNCTION_11
0x4000c29	      0x4889442418	             mov qword [rsp + 0x18], rax	       290	shallow.c	FUNCTION_11
0x4000c2e	            0x31c0	                            xor eax, eax	       290	shallow.c	FUNCTION_11
0x4000c30	    0x48c744241000	               mov qword [rsp + 0x10], 0	       292	shallow.c	FUNCTION_11
0x4000c39	      0xe832f8ffff	        call sym.write_shallow_commits_1	       286	shallow.c	FUNCTION_10	CALL_1
0x4000c3e	            0x85c0	                           test eax, eax	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000c40	      0xba00000000	                              mov edx, 0	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000c45	            0x7519	                           jne 0x4000c60	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000c47	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       309	shallow.c	FUNCTION_11
0x4000c4c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       309	shallow.c	FUNCTION_11
0x4000c55	          0x4889d0	                            mov rax, rdx	       309	shallow.c	FUNCTION_11
0x4000c58	            0x7571	                           jne 0x4000ccb	       309	shallow.c	FUNCTION_11
0x4000c5a	        0x4883c420	                           add rsp, 0x20	       309	shallow.c	FUNCTION_11
0x4000c5e	              0x5b	                                 pop rbx	       309	shallow.c	FUNCTION_11
0x4000c5f	              0xc3	                                     ret	       309	shallow.c	FUNCTION_11
0x4000c60	      0xbf00000000	                              mov edi, 0	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000c65	            0x31c0	                            xor eax, eax	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000c67	      0xe800000000	                          call 0x4000c6c	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000c6c	      0xbe80010000	                          mov esi, 0x180	       189	tempfile.h	FUNCTION_50	CALL_1
0x4000c71	          0x4889c7	                            mov rdi, rax	       189	tempfile.h	FUNCTION_50	CALL_1
0x4000c74	      0xe800000000	                          call 0x4000c79	       189	tempfile.h	FUNCTION_50	CALL_1
0x4000c79	      0x488b542408	                mov rdx, qword [rsp + 8]	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000c7e	          0x8b7814	            mov edi, dword [rax + 0x14] 	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000c81	          0x4889c3	                            mov rbx, rax	       189	tempfile.h	FUNCTION_50	CALL_1
0x4000c84	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000c89	      0xe800000000	                          call 0x4000c8e	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000c8e	          0x4885c0	                           test rax, rax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000c91	            0x7821	                            js 0x4000cb4	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000c93	          0x4889df	                            mov rdi, rbx	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0x4000c96	      0xe800000000	                          call 0x4000c9b	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0x4000c9b	            0x85c0	                           test eax, eax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000c9d	            0x7815	                            js 0x4000cb4	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000c9f	          0x4889e7	                            mov rdi, rsp	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0x4000ca2	      0xe800000000	                          call 0x4000ca7	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0x4000ca7	          0x4889df	                            mov rdi, rbx	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000caa	      0xe800000000	                          call 0x4000caf	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000caf	          0x4889c2	                            mov rdx, rax	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000cb2	            0xeb93	                           jmp 0x4000c47	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000cb4	          0x4889df	                            mov rdi, rbx	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000cb7	      0xe800000000	                          call 0x4000cbc	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000cbc	      0xbf00000000	                              mov edi, 0	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000cc1	          0x4889c6	                            mov rsi, rax	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000cc4	            0x31c0	                            xor eax, eax	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000cc6	      0xe800000000	                          call 0x4000ccb	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000ccb	      0xe800000000	        call sym.setup_alternate_shallow	       309	shallow.c	FUNCTION_11
advertise_shallow_grafts	functions,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0:IF,1:FOR,0	10
0x4000db0	        0x4883ec18	                           sub rsp, 0x18	       344	shallow.c	FUNCTION_14
0x4000db4	        0x897c240c	              mov dword [rsp + 0xc], edi	       344	shallow.c	FUNCTION_14
0x4000db8	      0xe800000000	                          call 0x4000dbd	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x4000dbd	            0x85c0	                           test eax, eax	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x4000dbf	            0x740f	                            je 0x4000dd0	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x4000dc1	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       347	shallow.c	FUNCTION_14	CALL_2
0x4000dc6	      0xbf00000000	                              mov edi, 0	       347	shallow.c	FUNCTION_14	CALL_2
0x4000dcb	      0xe800000000	                          call 0x4000dd0	       347	shallow.c	FUNCTION_14	CALL_2
0x4000dd0	        0x4883c418	                           add rsp, 0x18	       348	shallow.c	FUNCTION_14
0x4000dd4	              0xc3	                                     ret	       348	shallow.c	FUNCTION_14
prune_shallow	functions,0:WHILE,0:CALL,14:ELSE,1:SWITCH,0:DO,0:IF,3:FOR,0	66
0x4000de0	              0x53	                                push rbx	       355	shallow.c	FUNCTION_15
0x4000de1	        0x4883ec40	                           sub rsp, 0x40	       355	shallow.c	FUNCTION_15
0x4000de5	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	shallow.c	FUNCTION_15
0x4000dee	      0x4889442438	             mov qword [rsp + 0x38], rax	       355	shallow.c	FUNCTION_15
0x4000df3	            0x31c0	                            xor eax, eax	       355	shallow.c	FUNCTION_15
0x4000df5	            0x85ff	                           test edi, edi	       360	shallow.c	FUNCTION_15	IF_1
0x4000df7	    0x48c704240000	                      mov qword [rsp], 0	       357	shallow.c	FUNCTION_15
0x4000dff	    0x48c744240800	                  mov qword [rsp + 8], 0	       357	shallow.c	FUNCTION_15
0x4000e08	    0x48c744241000	               mov qword [rsp + 0x10], 0	       357	shallow.c	FUNCTION_15
0x4000e11	     0xf85b1000000	                           jne 0x4000ec8	       360	shallow.c	FUNCTION_15	IF_1
0x4000e17	      0xe800000000	                          call 0x4000e1c	       365	shallow.c	FUNCTION_15	CALL_4
0x4000e1c	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000e1e	      0xba01000000	                              mov edx, 1	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000e23	          0x4889c6	                            mov rsi, rax	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000e26	      0xbf00000000	                              mov edi, 0	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000e2b	      0xe800000000	                          call 0x4000e30	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000e30	            0x89c3	                            mov ebx, eax	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000e32	      0xe859f2ffff	  call sym.check_shallow_file_for_update	       367	shallow.c	FUNCTION_15	CALL_5
0x4000e37	      0x488d742420	                   lea rsi, [rsp + 0x20]	       272	shallow.c	FUNCTION_9	CALL_1
0x4000e3c	      0xbf00000000	                              mov edi, 0	       272	shallow.c	FUNCTION_9	CALL_1
0x4000e41	      0x4889642420	             mov qword [rsp + 0x20], rsp	       268	shallow.c	FUNCTION_9
0x4000e46	    0xc74424280000	               mov dword [rsp + 0x28], 0	       269	shallow.c	FUNCTION_9
0x4000e4e	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       270	shallow.c	FUNCTION_9
0x4000e56	    0xc74424300100	               mov dword [rsp + 0x30], 1	       271	shallow.c	FUNCTION_9
0x4000e5e	      0xe800000000	                          call 0x4000e63	       272	shallow.c	FUNCTION_9	CALL_1
0x4000e63	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x4000e67	            0x85c0	                           test eax, eax	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x4000e69	            0x7535	                           jne 0x4000ea0	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x4000e6b	      0xe800000000	                          call 0x4000e70	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x4000e70	          0x4889c7	                            mov rdi, rax	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x4000e73	      0xe800000000	                          call 0x4000e78	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x4000e78	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_101	CALL_1
0x4000e7d	      0xe800000000	                          call 0x4000e82	       304	lockfile.h	FUNCTION_101	CALL_1
0x4000e82	          0x4889e7	                            mov rdi, rsp	       377	shallow.c	FUNCTION_15	CALL_14
0x4000e85	      0xe800000000	                          call 0x4000e8a	       377	shallow.c	FUNCTION_15	CALL_14
0x4000e8a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       378	shallow.c	FUNCTION_15
0x4000e8f	    0x644833042528	                xor rax, qword fs:[0x28]	       378	shallow.c	FUNCTION_15
0x4000e98	            0x7549	                           jne 0x4000ee3	       378	shallow.c	FUNCTION_15
0x4000e9a	        0x4883c440	                           add rsp, 0x40	       378	shallow.c	FUNCTION_15
0x4000e9e	              0x5b	                                 pop rbx	       378	shallow.c	FUNCTION_15
0x4000e9f	              0xc3	                                     ret	       378	shallow.c	FUNCTION_15
0x4000ea0	      0x488b542408	                mov rdx, qword [rsp + 8]	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000ea5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000eaa	            0x89df	                            mov edi, ebx	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000eac	      0xe800000000	                          call 0x4000eb1	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000eb1	          0x4885c0	                           test rax, rax	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000eb4	            0x7832	                            js 0x4000ee8	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000eb6	      0xbf00000000	                              mov edi, 0	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000ebb	      0xe800000000	                          call 0x4000ec0	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000ec0	            0xebc0	                           jmp 0x4000e82	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000ec2	    0x660f1f440000	                    nop word [rax + rax]	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000ec8	          0x4889e7	                            mov rdi, rsp	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x4000ecb	      0xb903000000	                              mov ecx, 3	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x4000ed0	            0x31d2	                            xor edx, edx	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x4000ed2	            0x31f6	                            xor esi, esi	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x4000ed4	      0xe897f5ffff	        call sym.write_shallow_commits_1	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x4000ed9	          0x4889e7	                            mov rdi, rsp	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x4000edc	      0xe800000000	                          call 0x4000ee1	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x4000ee1	            0xeba7	                           jmp 0x4000e8a	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x4000ee3	      0xe800000000	                          call 0x4000ee8	       378	shallow.c	FUNCTION_15
0x4000ee8	    0x488b3d000000	            mov rdi, qword [0x04000eef] 	       220	lockfile.h	FUNCTION_95	CALL_1
0x4000eef	      0xe800000000	                          call 0x4000ef4	       220	lockfile.h	FUNCTION_95	CALL_1
0x4000ef4	      0xbf00000000	                              mov edi, 0	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000ef9	          0x4889c6	                            mov rsi, rax	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000efc	            0x31c0	                            xor eax, eax	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000efe	      0xe800000000	                          call 0x4000f03	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
delayed_reachability_test	functions,0:WHILE,0:CALL,5:ELSE,0:SWITCH,0:DO,0:IF,2:FOR,0	59
0x4001a40	            0x4155	                                push r13	       725	shallow.c	FUNCTION_26
0x4001a42	            0x4154	                                push r12	       725	shallow.c	FUNCTION_26
0x4001a44	          0x4989fc	                            mov r12, rdi	       725	shallow.c	FUNCTION_26
0x4001a47	              0x55	                                push rbp	       725	shallow.c	FUNCTION_26
0x4001a48	              0x53	                                push rbx	       725	shallow.c	FUNCTION_26
0x4001a49	          0x4863de	                         movsxd rbx, esi	       726	shallow.c	FUNCTION_26	IF_1
0x4001a4c	        0x4883ec28	                           sub rsp, 0x28	       725	shallow.c	FUNCTION_26
0x4001a50	    0x64488b042528	                mov rax, qword fs:[0x28]	       725	shallow.c	FUNCTION_26
0x4001a59	      0x4889442418	             mov qword [rsp + 0x18], rax	       725	shallow.c	FUNCTION_26
0x4001a5e	            0x31c0	                            xor eax, eax	       725	shallow.c	FUNCTION_26
0x4001a60	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       726	shallow.c	FUNCTION_26	IF_1
0x4001a64	          0x8b0498	            mov eax, dword [rax + rbx*4]	       726	shallow.c	FUNCTION_26	IF_1
0x4001a67	            0x85c0	                           test eax, eax	       726	shallow.c	FUNCTION_26	IF_1
0x4001a69	            0x752d	                           jne 0x4001a98	       726	shallow.c	FUNCTION_26	IF_1
0x4001a6b	      0x498b442440	            mov rax, qword [r12 + 0x40] 	       744	shallow.c	FUNCTION_26
0x4001a70	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       745	shallow.c	FUNCTION_26
0x4001a75	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       745	shallow.c	FUNCTION_26
0x4001a7e	          0x8b0498	            mov eax, dword [rax + rbx*4]	       744	shallow.c	FUNCTION_26
0x4001a81	     0xf85a0000000	                           jne 0x4001b27	       745	shallow.c	FUNCTION_26
0x4001a87	        0x4883c428	                           add rsp, 0x28	       745	shallow.c	FUNCTION_26
0x4001a8b	              0x5b	                                 pop rbx	       745	shallow.c	FUNCTION_26
0x4001a8c	              0x5d	                                 pop rbp	       745	shallow.c	FUNCTION_26
0x4001a8d	            0x415c	                                 pop r12	       745	shallow.c	FUNCTION_26
0x4001a8f	            0x415d	                                 pop r13	       745	shallow.c	FUNCTION_26
0x4001a91	              0xc3	                                     ret	       745	shallow.c	FUNCTION_26
0x4001a92	    0x660f1f440000	                    nop word [rax + rax]	       745	shallow.c	FUNCTION_26
0x4001a98	          0x488b07	                    mov rax, qword [rdi]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4001a9b	    0x488d2c9d0000	                        lea rbp, [rbx*4]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4001aa3	      0x488d541d00	                    lea rdx, [rbp + rbx]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4001aa8	          0x488b00	                    mov rax, qword [rax]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4001aab	        0x488d3c90	                  lea rdi, [rax + rdx*4]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4001aaf	      0xe800000000	                          call 0x4001ab4	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4001ab4	      0x498b542450	            mov rdx, qword [r12 + 0x50] 	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001ab9	          0x4989c5	                            mov r13, rax	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4001abc	          0x4885d2	                           test rdx, rdx	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001abf	            0x7427	                            je 0x4001ae8	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001ac1	      0x418b742458	            mov esi, dword [r12 + 0x58] 	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001ac6	      0x49036c2440	             add rbp, qword [r12 + 0x40]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4001acb	          0x4c89ef	                            mov rdi, r13	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4001ace	      0xe800000000	                          call 0x4001ad3	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4001ad3	          0x894500	                    mov dword [rbp], eax	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4001ad6	      0x498b442438	            mov rax, qword [r12 + 0x38] 	       742	shallow.c	FUNCTION_26	IF_1
0x4001adb	    0xc70498000000	              mov dword [rax + rbx*4], 0	       742	shallow.c	FUNCTION_26	IF_1
0x4001ae2	            0xeb87	                           jmp 0x4001a6b	       742	shallow.c	FUNCTION_26	IF_1
0x4001ae4	         0xf1f4000	                         nop dword [rax]	       742	shallow.c	FUNCTION_26	IF_1
0x4001ae8	          0x4889e6	                            mov rsi, rsp	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4001aeb	      0xbf00000000	                              mov edi, 0	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4001af0	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_82	CALL_6
0x4001af8	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_82	CALL_6
0x4001b01	      0xe800000000	                          call 0x4001b06	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4001b06	          0x4889e6	                            mov rsi, rsp	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x4001b09	      0xbf00000000	                              mov edi, 0	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x4001b0e	      0xe800000000	                          call 0x4001b13	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x4001b13	        0x488b1424	                    mov rdx, qword [rsp]	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001b17	        0x8b742408	                mov esi, dword [rsp + 8]	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001b1b	      0x4989542450	             mov qword [r12 + 0x50], rdx	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001b20	      0x4189742458	             mov dword [r12 + 0x58], esi	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001b25	            0xeb9f	                           jmp 0x4001ac6	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001b27	      0xe800000000	                  call section_end..text	       745	shallow.c	FUNCTION_26
register_shallow	functions,0:WHILE,0:CALL,4:ELSE,0:SWITCH,0:DO,0:IF,1:FOR,0	27
0x40005e0	              0x55	                                push rbp	        31	shallow.c	FUNCTION_2
0x40005e1	              0x53	                                push rbx	        31	shallow.c	FUNCTION_2
0x40005e2	          0x4889fd	                            mov rbp, rdi	        31	shallow.c	FUNCTION_2
0x40005e5	      0xbf18000000	                           mov edi, 0x18	        32	shallow.c	FUNCTION_2
0x40005ea	        0x4883ec08	                              sub rsp, 8	        31	shallow.c	FUNCTION_2
0x40005ee	      0xe800000000	                          call 0x40005f3	        32	shallow.c	FUNCTION_2
0x40005f3	          0x4889ef	                            mov rdi, rbp	        34	shallow.c	FUNCTION_2	CALL_2
0x40005f6	          0x4889c3	                            mov rbx, rax	        32	shallow.c	FUNCTION_2
0x40005f9	      0xe800000000	                          call 0x40005fe	        34	shallow.c	FUNCTION_2	CALL_2
0x40005fe	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_79	CALL_3
0x4000602	          0x4885c0	                           test rax, rax	        38	shallow.c	FUNCTION_2	IF_1
0x4000605	          0x488913	                    mov qword [rbx], rdx	        53	string3.h	FUNCTION_79	CALL_3
0x4000608	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_79	CALL_3
0x400060c	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_79	CALL_3
0x4000610	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_79	CALL_3
0x4000613	    0xc74314ffffff	     mov dword [rbx + 0x14], 0xffffffff 	        37	shallow.c	FUNCTION_2
0x400061a	          0x895310	             mov dword [rbx + 0x10], edx	        53	string3.h	FUNCTION_79	CALL_3
0x400061d	            0x740d	                            je 0x400062c	        38	shallow.c	FUNCTION_2	IF_1
0x400061f	          0xf60001	                      test byte [rax], 1	        38	shallow.c	FUNCTION_2	IF_1
0x4000622	            0x7408	                            je 0x400062c	        38	shallow.c	FUNCTION_2	IF_1
0x4000624	    0x48c740300000	               mov qword [rax + 0x30], 0	        39	shallow.c	FUNCTION_2	IF_1
0x400062c	        0x4883c408	                              add rsp, 8	        41	shallow.c	FUNCTION_2
0x4000630	          0x4889df	                            mov rdi, rbx	        40	shallow.c	FUNCTION_2	CALL_4
0x4000633	            0x31f6	                            xor esi, esi	        40	shallow.c	FUNCTION_2	CALL_4
0x4000635	              0x5b	                                 pop rbx	        41	shallow.c	FUNCTION_2
0x4000636	              0x5d	                                 pop rbp	        41	shallow.c	FUNCTION_2
0x4000637	      0xe900000000	                           jmp 0x400063c	        40	shallow.c	FUNCTION_2	CALL_4
remove_nonexistent_theirs_shallow	functions,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0:IF,2:FOR,1	53
0x4001090	            0x4156	                                push r14	       417	shallow.c	FUNCTION_18
0x4001092	            0x4155	                                push r13	       417	shallow.c	FUNCTION_18
0x4001094	    0x48ba00000000	                 movabs rdx, 0x100000000	       420	shallow.c	FUNCTION_18	CALL_1
0x400109e	            0x4154	                                push r12	       417	shallow.c	FUNCTION_18
0x40010a0	              0x55	                                push rbp	       417	shallow.c	FUNCTION_18
0x40010a1	          0x4989fe	                            mov r14, rdi	       417	shallow.c	FUNCTION_18
0x40010a4	              0x53	                                push rbx	       417	shallow.c	FUNCTION_18
0x40010a5	          0x488b07	                    mov rax, qword [rdi]	       418	shallow.c	FUNCTION_18
0x40010a8	          0x4c8b28	                    mov r13, qword [rax]	       418	shallow.c	FUNCTION_18
0x40010ab	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       420	shallow.c	FUNCTION_18	CALL_1
0x40010b5	    0x482305000000	             and rax, qword [0x040010bc]	       420	shallow.c	FUNCTION_18	CALL_1
0x40010bc	          0x4839d0	                            cmp rax, rdx	       420	shallow.c	FUNCTION_18	CALL_1
0x40010bf	            0x741b	                            je 0x40010dc	       420	shallow.c	FUNCTION_18	CALL_1
0x40010c1	      0xb900000000	                              mov ecx, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x40010c6	      0xba00000000	                              mov edx, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x40010cb	      0xbea4010000	                          mov esi, 0x1a4	       420	shallow.c	FUNCTION_18	CALL_1
0x40010d0	      0xbf00000000	                              mov edi, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x40010d5	            0x31c0	                            xor eax, eax	       420	shallow.c	FUNCTION_18	CALL_1
0x40010d7	      0xe800000000	                          call 0x40010dc	       420	shallow.c	FUNCTION_18	CALL_1
0x40010dc	        0x418b4620	            mov eax, dword [r14 + 0x20] 	       421	shallow.c	FUNCTION_18	FOR_1
0x40010e0	            0x85c0	                           test eax, eax	       421	shallow.c	FUNCTION_18	FOR_1
0x40010e2	            0x7e59	                           jle 0x400113d	       421	shallow.c	FUNCTION_18	FOR_1
0x40010e4	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       421	shallow.c	FUNCTION_18	FOR_1
0x40010e8	            0x31db	                            xor ebx, ebx	       421	shallow.c	FUNCTION_18	FOR_1
0x40010ea	            0x31ed	                            xor ebp, ebp	       421	shallow.c	FUNCTION_18	FOR_1
0x40010ec	            0xeb19	                           jmp 0x4001107	       421	shallow.c	FUNCTION_18	FOR_1
0x40010ee	            0x6690	                                     nop	       421	shallow.c	FUNCTION_18	FOR_1
0x40010f0	            0x39c5	                            cmp ebp, eax	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40010f2	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40010f6	            0x740b	                            je 0x4001103	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40010f8	      0x428b4c2004	         mov ecx, dword [rax + r12 + 4] 	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40010fd	          0x4863d5	                         movsxd rdx, ebp	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001100	          0x890c90	            mov dword [rax + rdx*4], ecx	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001103	        0x4883c301	                              add rbx, 1	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001107	        0x48630498	         movsxd rax, dword [rax + rbx*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x400110b	    0x4c8d249d0000	                        lea r12, [rbx*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001113	        0x488d0480	                  lea rax, [rax + rax*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001117	      0x498d7c8500	                  lea rdi, [r13 + rax*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x400111c	      0xe800000000	                          call 0x4001121	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001121	          0x83f801	                              cmp eax, 1	       425	shallow.c	FUNCTION_18	FOR_1	IF_2
0x4001124	          0x8d4301	                      lea eax, [rbx + 1]	       425	shallow.c	FUNCTION_18	FOR_1	IF_2
0x4001127	          0x83ddff	             sbb ebp, 0xffffffffffffffff	       425	shallow.c	FUNCTION_18	FOR_1	IF_2
0x400112a	        0x41394620	            cmp dword [r14 + 0x20], eax 	       421	shallow.c	FUNCTION_18	FOR_1
0x400112e	            0x7fc0	                            jg 0x40010f0	       421	shallow.c	FUNCTION_18	FOR_1
0x4001130	              0x5b	                                 pop rbx	       428	shallow.c	FUNCTION_18
0x4001131	        0x41896e20	             mov dword [r14 + 0x20], ebp	       427	shallow.c	FUNCTION_18
0x4001135	              0x5d	                                 pop rbp	       428	shallow.c	FUNCTION_18
0x4001136	            0x415c	                                 pop r12	       428	shallow.c	FUNCTION_18
0x4001138	            0x415d	                                 pop r13	       428	shallow.c	FUNCTION_18
0x400113a	            0x415e	                                 pop r14	       428	shallow.c	FUNCTION_18
0x400113c	              0xc3	                                     ret	       428	shallow.c	FUNCTION_18
0x400113d	            0x31ed	                            xor ebp, ebp	       421	shallow.c	FUNCTION_18	FOR_1
0x400113f	            0xebef	                           jmp 0x4001130	       421	shallow.c	FUNCTION_18	FOR_1
assign_shallow_commits_to_refs	functions,0:WHILE,0:CALL,18:ELSE,1:SWITCH,0:DO,0:IF,3:FOR,7	572
0x4001150	            0x4157	                                push r15	       563	shallow.c	FUNCTION_22
0x4001152	            0x4156	                                push r14	       563	shallow.c	FUNCTION_22
0x4001154	            0x4155	                                push r13	       563	shallow.c	FUNCTION_22
0x4001156	            0x4154	                                push r12	       563	shallow.c	FUNCTION_22
0x4001158	              0x55	                                push rbp	       563	shallow.c	FUNCTION_22
0x4001159	              0x53	                                push rbx	       563	shallow.c	FUNCTION_22
0x400115a	    0x4881eca80000	                           sub rsp, 0xa8	       563	shallow.c	FUNCTION_22
0x4001161	          0x488b07	                    mov rax, qword [rdi]	       564	shallow.c	FUNCTION_22
0x4001164	      0x4889542430	             mov qword [rsp + 0x30], rdx	       563	shallow.c	FUNCTION_22
0x4001169	    0x48ba00000000	                 movabs rdx, 0x100000000	       570	shallow.c	FUNCTION_22	CALL_1
0x4001173	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       563	shallow.c	FUNCTION_22
0x4001178	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       563	shallow.c	FUNCTION_22
0x4001181	    0x48898c249800	             mov qword [rsp + 0x98], rcx	       563	shallow.c	FUNCTION_22
0x4001189	            0x31c9	                            xor ecx, ecx	       563	shallow.c	FUNCTION_22
0x400118b	          0x488b00	                    mov rax, qword [rax]	       564	shallow.c	FUNCTION_22
0x400118e	      0x4889742418	             mov qword [rsp + 0x18], rsi	       563	shallow.c	FUNCTION_22
0x4001193	      0x4889442438	             mov qword [rsp + 0x38], rax	       564	shallow.c	FUNCTION_22
0x4001198	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       565	shallow.c	FUNCTION_22
0x400119c	      0x4889442408	                mov qword [rsp + 8], rax	       565	shallow.c	FUNCTION_22
0x40011a1	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       570	shallow.c	FUNCTION_22	CALL_1
0x40011ab	    0x482305000000	             and rax, qword [0x040011b2]	       570	shallow.c	FUNCTION_22	CALL_1
0x40011b2	          0x4839d0	                            cmp rax, rdx	       570	shallow.c	FUNCTION_22	CALL_1
0x40011b5	            0x741b	                            je 0x40011d2	       570	shallow.c	FUNCTION_22	CALL_1
0x40011b7	      0xb900000000	                              mov ecx, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x40011bc	      0xba00000000	                              mov edx, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x40011c1	      0xbe3a020000	                          mov esi, 0x23a	       570	shallow.c	FUNCTION_22	CALL_1
0x40011c6	      0xbf00000000	                              mov edi, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x40011cb	            0x31c0	                            xor eax, eax	       570	shallow.c	FUNCTION_22	CALL_1
0x40011cd	      0xe800000000	                          call 0x40011d2	       570	shallow.c	FUNCTION_22	CALL_1
0x40011d2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       571	shallow.c	FUNCTION_22
0x40011d7	          0x8b5020	            mov edx, dword [rax + 0x20] 	       571	shallow.c	FUNCTION_22
0x40011da	           0x35010	             add edx, dword [rax + 0x10]	       571	shallow.c	FUNCTION_22
0x40011dd	    0x48b8ffffffff	         movabs rax, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_66	IF_1
0x40011e7	          0x4863d2	                         movsxd rdx, edx	       571	shallow.c	FUNCTION_22
0x40011ea	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_66	IF_1
0x40011ed	     0xf8716080000	                            ja 0x4001a09	       795	git-compat-util.h	FUNCTION_66	IF_1
0x40011f3	    0x488d3c950000	                        lea rdi, [rdx*4]	       571	shallow.c	FUNCTION_22
0x40011fb	      0xe800000000	                          call 0x4001200	       571	shallow.c	FUNCTION_22
0x4001200	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       572	shallow.c	FUNCTION_22	FOR_1
0x4001205	          0x4889c7	                            mov rdi, rax	       571	shallow.c	FUNCTION_22
0x4001208	      0x4889442428	             mov qword [rsp + 0x28], rax	       571	shallow.c	FUNCTION_22
0x400120d	        0x458b7010	            mov r14d, dword [r8 + 0x10] 	       572	shallow.c	FUNCTION_22	FOR_1
0x4001211	          0x4585f6	                         test r14d, r14d	       572	shallow.c	FUNCTION_22	FOR_1
0x4001214	     0xf84bc070000	                            je 0x40019d6	       572	shallow.c	FUNCTION_22	FOR_1
0x400121a	        0x498b4808	                 mov rcx, qword [r8 + 8]	       572	shallow.c	FUNCTION_22	FOR_1
0x400121e	            0x31c0	                            xor eax, eax	       572	shallow.c	FUNCTION_22	FOR_1
0x4001220	            0x31d2	                            xor edx, edx	       572	shallow.c	FUNCTION_22	FOR_1
0x4001222	    0x660f1f440000	                    nop word [rax + rax]	       572	shallow.c	FUNCTION_22	FOR_1
0x4001228	          0x8b3401	              mov esi, dword [rcx + rax]	       573	shallow.c	FUNCTION_22	FOR_1
0x400122b	          0x83c201	                              add edx, 1	       573	shallow.c	FUNCTION_22	FOR_1
0x400122e	          0x893407	              mov dword [rdi + rax], esi	       573	shallow.c	FUNCTION_22	FOR_1
0x4001231	        0x4883c004	                              add rax, 4	       573	shallow.c	FUNCTION_22	FOR_1
0x4001235	        0x41395010	              cmp dword [r8 + 0x10], edx	       572	shallow.c	FUNCTION_22	FOR_1
0x4001239	            0x77ed	                            ja 0x4001228	       572	shallow.c	FUNCTION_22	FOR_1
0x400123b	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       574	shallow.c	FUNCTION_22	FOR_2
0x4001240	        0x89542424	             mov dword [rsp + 0x24], edx	       574	shallow.c	FUNCTION_22	FOR_2
0x4001244	        0x458b6820	            mov r13d, dword [r8 + 0x20] 	       574	shallow.c	FUNCTION_22	FOR_2
0x4001248	          0x4585ed	                         test r13d, r13d	       574	shallow.c	FUNCTION_22	FOR_2
0x400124b	     0xf849f070000	                            je 0x40019f0	       574	shallow.c	FUNCTION_22	FOR_2
0x4001251	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	       574	shallow.c	FUNCTION_22	FOR_2
0x4001255	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       574	shallow.c	FUNCTION_22	FOR_2
0x400125a	        0x498b7018	              mov rsi, qword [r8 + 0x18]	       574	shallow.c	FUNCTION_22	FOR_2
0x400125e	          0x4863c1	                         movsxd rax, ecx	       574	shallow.c	FUNCTION_22	FOR_2
0x4001261	        0x488d1483	                  lea rdx, [rbx + rax*4]	       574	shallow.c	FUNCTION_22	FOR_2
0x4001265	            0x31c0	                            xor eax, eax	       574	shallow.c	FUNCTION_22	FOR_2
0x4001267	    0x660f1f840000	                    nop word [rax + rax]	       574	shallow.c	FUNCTION_22	FOR_2
0x4001270	            0x89c7	                            mov edi, eax	       575	shallow.c	FUNCTION_22	FOR_2
0x4001272	          0x83c101	                              add ecx, 1	       575	shallow.c	FUNCTION_22	FOR_2
0x4001275	          0x83c001	                              add eax, 1	       574	shallow.c	FUNCTION_22	FOR_2
0x4001278	          0x8b3cbe	            mov edi, dword [rsi + rdi*4]	       575	shallow.c	FUNCTION_22	FOR_2
0x400127b	        0x4883c204	                              add rdx, 4	       575	shallow.c	FUNCTION_22	FOR_2
0x400127f	          0x897afc	                mov dword [rdx - 4], edi	       575	shallow.c	FUNCTION_22	FOR_2
0x4001282	        0x41394020	              cmp dword [r8 + 0x20], eax	       574	shallow.c	FUNCTION_22	FOR_2
0x4001286	            0x77e8	                            ja 0x4001270	       574	shallow.c	FUNCTION_22	FOR_2
0x4001288	        0x894c2424	             mov dword [rsp + 0x24], ecx	       574	shallow.c	FUNCTION_22	FOR_2
0x400128c	      0xe800000000	                          call 0x4001291	       581	shallow.c	FUNCTION_22	CALL_2
0x4001291	            0x85c0	                           test eax, eax	       582	shallow.c	FUNCTION_22	FOR_3
0x4001293	            0x89c3	                            mov ebx, eax	       581	shallow.c	FUNCTION_22	CALL_2
0x4001295	     0xf84f0060000	                            je 0x400198b	       582	shallow.c	FUNCTION_22	FOR_3
0x400129b	            0x31ed	                            xor ebp, ebp	       574	shallow.c	FUNCTION_22	FOR_2
0x400129d	            0xeb08	                           jmp 0x40012a7	       574	shallow.c	FUNCTION_22	FOR_2
0x400129f	              0x90	                                     nop	       574	shallow.c	FUNCTION_22	FOR_2
0x40012a0	          0x83c501	                              add ebp, 1	       582	shallow.c	FUNCTION_22	FOR_3
0x40012a3	            0x39dd	                            cmp ebp, ebx	       582	shallow.c	FUNCTION_22	FOR_3
0x40012a5	            0x7424	                            je 0x40012cb	       582	shallow.c	FUNCTION_22	FOR_3
0x40012a7	            0x89ef	                            mov edi, ebp	       583	shallow.c	FUNCTION_22	FOR_3	CALL_3
0x40012a9	      0xe800000000	                          call 0x40012ae	       583	shallow.c	FUNCTION_22	FOR_3	CALL_3
0x40012ae	          0x4885c0	                           test rax, rax	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40012b1	            0x74ed	                            je 0x40012a0	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40012b3	           0xfb610	                   movzx edx, byte [rax]	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40012b6	          0x83e20e	                            and edx, 0xe	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40012b9	          0x80fa02	                               cmp dl, 2	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40012bc	            0x75e2	                           jne 0x40012a0	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40012be	          0x83c501	                              add ebp, 1	       582	shallow.c	FUNCTION_22	FOR_3
0x40012c1	    0x8120cfbfffff	             and dword [rax], 0xffffbfcf	       587	shallow.c	FUNCTION_22	FOR_3
0x40012c7	            0x39dd	                            cmp ebp, ebx	       582	shallow.c	FUNCTION_22	FOR_3
0x40012c9	            0x75dc	                           jne 0x40012a7	       582	shallow.c	FUNCTION_22	FOR_3
0x40012cb	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	        90	string3.h	FUNCTION_82	CALL_6
0x40012d0	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_82	CALL_6
0x40012d2	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_82	CALL_6
0x40012d7	            0x31f6	                            xor esi, esi	       599	shallow.c	FUNCTION_22	CALL_6
0x40012d9	          0x4889df	                            mov rdi, rbx	        90	string3.h	FUNCTION_82	CALL_6
0x40012dc	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_82	CALL_6
0x40012df	      0x488b442408	                mov rax, qword [rsp + 8]	       592	shallow.c	FUNCTION_22
0x40012e4	      0xbf00000000	                              mov edi, 0	       599	shallow.c	FUNCTION_22	CALL_6
0x40012e9	    0xc74424540100	               mov dword [rsp + 0x54], 1	       430	shallow.c	CALL_2
0x40012f1	    0xc7442450fcff	         mov dword [rsp + 0x50], 0xfffc 	       430	shallow.c	CALL_2
0x40012f9	          0x8b4008	                mov eax, dword [rax + 8]	       592	shallow.c	FUNCTION_22
0x40012fc	        0x89442468	             mov dword [rsp + 0x68], eax	       592	shallow.c	FUNCTION_22
0x4001300	      0xe800000000	                          call 0x4001305	       599	shallow.c	FUNCTION_22	CALL_6
0x4001305	            0x31f6	                            xor esi, esi	       600	shallow.c	FUNCTION_22	CALL_7
0x4001307	      0xbf00000000	                              mov edi, 0	       600	shallow.c	FUNCTION_22	CALL_7
0x400130c	      0xe800000000	                          call 0x4001311	       600	shallow.c	FUNCTION_22	CALL_7
0x4001311	      0x448b642424	           mov r12d, dword [rsp + 0x24] 	       603	shallow.c	FUNCTION_22	FOR_4
0x4001316	          0x4585e4	                         test r12d, r12d	       603	shallow.c	FUNCTION_22	FOR_4
0x4001319	            0x743e	                            je 0x4001359	       603	shallow.c	FUNCTION_22	FOR_4
0x400131b	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       603	shallow.c	FUNCTION_22	FOR_4
0x400131f	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       603	shallow.c	FUNCTION_22	FOR_4
0x4001324	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	       603	shallow.c	FUNCTION_22	FOR_4
0x4001329	          0x83e801	                              sub eax, 1	       603	shallow.c	FUNCTION_22	FOR_4
0x400132c	          0x4989cc	                            mov r12, rcx	       603	shallow.c	FUNCTION_22	FOR_4
0x400132f	      0x488d6c8104	              lea rbp, [rcx + rax*4 + 4]	       603	shallow.c	FUNCTION_22	FOR_4
0x4001334	         0xf1f4000	                         nop dword [rax]	       603	shallow.c	FUNCTION_22	FOR_4
0x4001338	        0x49630424	                 movsxd rax, dword [r12]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x400133c	        0x4983c404	                              add r12, 4	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x4001340	        0x488d0480	                  lea rax, [rax + rax*4]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x4001344	      0x498d7c8500	                  lea rdi, [r13 + rax*4]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x4001349	      0xe800000000	                          call 0x400134e	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x400134e	    0x810800400000	                  or dword [rax], 0x4000	       605	shallow.c	FUNCTION_22	FOR_4
0x4001354	          0x4939ec	                            cmp r12, rbp	       603	shallow.c	FUNCTION_22	FOR_4
0x4001357	            0x75df	                           jne 0x4001338	       603	shallow.c	FUNCTION_22	FOR_4
0x4001359	      0x488b442408	                mov rax, qword [rsp + 8]	       608	shallow.c	FUNCTION_22	FOR_5
0x400135e	    0xc74424200000	               mov dword [rsp + 0x20], 0	       608	shallow.c	FUNCTION_22	FOR_5
0x4001366	          0x8b6808	                mov ebp, dword [rax + 8]	       608	shallow.c	FUNCTION_22	FOR_5
0x4001369	            0x85ed	                           test ebp, ebp	       608	shallow.c	FUNCTION_22	FOR_5
0x400136b	     0xf84de010000	                            je 0x400154f	       608	shallow.c	FUNCTION_22	FOR_5
0x4001371	     0xf1f80000000	                         nop dword [rax]	       608	shallow.c	FUNCTION_22	FOR_5
0x4001378	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       609	shallow.c	FUNCTION_22	CALL_9
0x400137c	      0x488b742408	                mov rsi, qword [rsp + 8]	       609	shallow.c	FUNCTION_22	CALL_9
0x4001381	        0x8b6c2468	            mov ebp, dword [rsp + 0x68] 	       472	shallow.c	FUNCTION_20
0x4001385	        0x488d1480	                  lea rdx, [rax + rax*4]	       609	shallow.c	FUNCTION_22	CALL_9
0x4001389	          0x488b06	                    mov rax, qword [rsi]	       609	shallow.c	FUNCTION_22	CALL_9
0x400138c	      0xbe01000000	                              mov esi, 1	       474	shallow.c	FUNCTION_20	CALL_2
0x4001391	    0x48c744244000	               mov qword [rsp + 0x40], 0	       471	shallow.c	FUNCTION_20
0x400139a	        0x488d3c90	                  lea rdi, [rax + rdx*4]	       609	shallow.c	FUNCTION_22	CALL_9
0x400139e	      0xe800000000	                          call 0x40013a3	       474	shallow.c	FUNCTION_20	CALL_2
0x40013a3	          0x4885c0	                           test rax, rax	       478	shallow.c	FUNCTION_20	IF_1
0x40013a6	          0x4989c6	                            mov r14, rax	       474	shallow.c	FUNCTION_20	CALL_2
0x40013a9	     0xf8489010000	                            je 0x4001538	       478	shallow.c	FUNCTION_20	IF_1
0x40013af	          0x83c51f	                           add ebp, 0x1f	       472	shallow.c	FUNCTION_20
0x40013b2	          0xc1ed05	                              shr ebp, 5	       472	shallow.c	FUNCTION_20
0x40013b5	          0x4189ec	                           mov r12d, ebp	       798	git-compat-util.h	FUNCTION_66
0x40013b8	    0x4a8d34a50000	                        lea rsi, [r12*4]	       798	git-compat-util.h	FUNCTION_66
0x40013c0	          0x4889f7	                            mov rdi, rsi	       481	shallow.c	FUNCTION_20	CALL_3
0x40013c3	          0x4989f4	                            mov r12, rsi	       798	git-compat-util.h	FUNCTION_66
0x40013c6	        0x48893424	                    mov qword [rsp], rsi	       798	git-compat-util.h	FUNCTION_66
0x40013ca	      0xe800000000	                          call 0x40013cf	       481	shallow.c	FUNCTION_20	CALL_3
0x40013cf	          0x4889df	                            mov rdi, rbx	       482	shallow.c	FUNCTION_20	CALL_4
0x40013d2	          0x4989c7	                            mov r15, rax	       481	shallow.c	FUNCTION_20	CALL_3
0x40013d5	      0xe856edffff	                    call sym.paint_alloc	       482	shallow.c	FUNCTION_20	CALL_4
0x40013da	          0x4c89e2	                            mov rdx, r12	        90	string3.h	FUNCTION_82	CALL_6
0x40013dd	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_82	CALL_6
0x40013df	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_82	CALL_6
0x40013e2	          0x4989c5	                            mov r13, rax	       482	shallow.c	FUNCTION_20	CALL_4
0x40013e5	      0xe800000000	                          call 0x40013ea	        90	string3.h	FUNCTION_82	CALL_6
0x40013ea	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       484	shallow.c	FUNCTION_20
0x40013ee	      0xba01000000	                              mov edx, 1	       484	shallow.c	FUNCTION_20
0x40013f3	      0x488d742440	                   lea rsi, [rsp + 0x40]	       485	shallow.c	FUNCTION_20	CALL_6
0x40013f8	          0x4c89f7	                            mov rdi, r14	       485	shallow.c	FUNCTION_20	CALL_6
0x40013fb	            0x89c8	                            mov eax, ecx	       484	shallow.c	FUNCTION_20
0x40013fd	            0xd3e2	                             shl edx, cl	       484	shallow.c	FUNCTION_20
0x40013ff	          0xc1e805	                              shr eax, 5	       484	shallow.c	FUNCTION_20
0x4001402	      0x4109548500	             or dword [r13 + rax*4], edx	       484	shallow.c	FUNCTION_20
0x4001407	      0xe800000000	                          call 0x400140c	       485	shallow.c	FUNCTION_20	CALL_6
0x400140c	         0xf1f4000	                         nop dword [rax]	       485	shallow.c	FUNCTION_20	CALL_6
0x4001410	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       486	shallow.c	FUNCTION_20	WHILE_1
0x4001416	     0xf848c020000	                            je 0x40016a8	       486	shallow.c	FUNCTION_20	WHILE_1
0x400141c	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x4001421	      0xe800000000	                          call 0x4001426	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x4001426	          0x8b7020	            mov esi, dword [rax + 0x20] 	       430	shallow.c	CALL_2
0x4001429	          0x4989c6	                            mov r14, rax	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x400142c	          0x4889df	                            mov rdi, rbx	       430	shallow.c	CALL_2
0x400142f	      0xe84ceeffff	call sym.ref_bitmap_at_peek.isra.2.constprop.3	       430	shallow.c	CALL_2
0x4001434	          0x418b0e	                    mov ecx, dword [r14]	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001437	          0x4989c4	                            mov r12, rax	       430	shallow.c	CALL_2
0x400143a	            0x89c8	                            mov eax, ecx	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x400143c	          0xc1e804	                              shr eax, 4	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x400143f	      0x25ffffff07	                      and eax, 0x7ffffff	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001444	            0xa803	                              test al, 3	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001446	            0x75c8	                           jne 0x4001410	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001448	          0x83c801	                               or eax, 1	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x400144b	          0xc1e004	                              shl eax, 4	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x400144e	            0x89c2	                            mov edx, eax	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001450	            0x89c8	                            mov eax, ecx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001452	      0x250f000080	                     and eax, 0x8000000f	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001457	             0x9d0	                             or eax, edx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001459	          0x418906	                    mov dword [r14], eax	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x400145c	        0x498b3424	                    mov rsi, qword [r12]	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001460	          0x4885f6	                           test rsi, rsi	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001463	     0xf8497000000	                            je 0x4001500	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001469	        0x488b1424	                    mov rdx, qword [rsp]	        53	string3.h	FUNCTION_79	CALL_3
0x400146d	          0x4c89ff	                            mov rdi, r15	        53	string3.h	FUNCTION_79	CALL_3
0x4001470	      0xe800000000	                          call 0x4001475	        53	string3.h	FUNCTION_79	CALL_3
0x4001475	            0x31c0	                            xor eax, eax	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001477	            0x85ed	                           test ebp, ebp	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001479	            0x7416	                            je 0x4001491	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400147b	       0xf1f440000	                   nop dword [rax + rax]	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001480	      0x418b548500	            mov edx, dword [r13 + rax*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001485	        0x41091487	             or dword [r15 + rax*4], edx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001489	        0x4883c001	                              add rax, 1	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400148d	            0x39c5	                            cmp ebp, eax	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400148f	            0x77ef	                            ja 0x4001480	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001491	        0x488b1424	                    mov rdx, qword [rsp]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001495	        0x498b3424	                    mov rsi, qword [r12]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001499	          0x4c89ff	                            mov rdi, r15	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x400149c	      0xe800000000	                          call 0x40014a1	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40014a1	            0x85c0	                           test eax, eax	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40014a3	            0x756b	                           jne 0x4001510	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40014a5	    0x41f706004000	                test dword [r14], 0x4000	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x40014ac	     0xf855effffff	                           jne 0x4001410	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x40014b2	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_91	CALL_1
0x40014b4	          0x4c89f7	                            mov rdi, r14	        75	commit.h	FUNCTION_91	CALL_1
0x40014b7	      0xe800000000	                          call 0x40014bc	        75	commit.h	FUNCTION_91	CALL_1
0x40014bc	            0x85c0	                           test eax, eax	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x40014be	     0xf8556050000	                           jne 0x4001a1a	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x40014c4	        0x4d8b6630	            mov r12, qword [r14 + 0x30] 	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40014c8	          0x4d85e4	                           test r12, r12	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40014cb	            0x7519	                           jne 0x40014e6	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40014cd	      0xe93effffff	                           jmp 0x4001410	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40014d2	    0x660f1f440000	                    nop word [rax + rax]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40014d8	      0x4d8b642408	                mov r12, qword [r12 + 8]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40014dd	          0x4d85e4	                           test r12, r12	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40014e0	     0xf842affffff	                            je 0x4001410	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40014e6	        0x498b3c24	                    mov rdi, qword [r12]	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x40014ea	          0xf60710	                   test byte [rdi], 0x10	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x40014ed	            0x75e9	                           jne 0x40014d8	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x40014ef	      0x488d742440	                   lea rsi, [rsp + 0x40]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x40014f4	      0xe800000000	                          call 0x40014f9	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x40014f9	            0xebdd	                           jmp 0x40014d8	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x40014fb	       0xf1f440000	                   nop dword [rax + rax]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001500	        0x4d892c24	                    mov qword [r12], r13	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001504	            0xeb9f	                           jmp 0x40014a5	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001510	          0x4889df	                            mov rdi, rbx	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x4001513	      0xe818ecffff	                    call sym.paint_alloc	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x4001518	        0x488b1424	                    mov rdx, qword [rsp]	        53	string3.h	FUNCTION_79	CALL_3
0x400151c	        0x49890424	                    mov qword [r12], rax	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x4001520	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_79	CALL_3
0x4001523	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_79	CALL_3
0x4001526	      0xe800000000	                          call 0x400152b	        53	string3.h	FUNCTION_79	CALL_3
0x400152b	      0xe975ffffff	                           jmp 0x40014a5	        53	string3.h	FUNCTION_79	CALL_3
0x4001530	          0x4c89ff	                            mov rdi, r15	       530	shallow.c	FUNCTION_20	CALL_19
0x4001533	      0xe800000000	                          call 0x4001538	       530	shallow.c	FUNCTION_20	CALL_19
0x4001538	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       608	shallow.c	FUNCTION_22	FOR_5
0x400153d	      0x8344242001	               add dword [rsp + 0x20], 1	       608	shallow.c	FUNCTION_22	FOR_5
0x4001542	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       608	shallow.c	FUNCTION_22	FOR_5
0x4001546	          0x394108	                cmp dword [rcx + 8], eax	       608	shallow.c	FUNCTION_22	FOR_5
0x4001549	     0xf8729feffff	                            ja 0x4001378	       608	shallow.c	FUNCTION_22	FOR_5
0x400154f	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       611	shallow.c	FUNCTION_22	IF_2
0x4001555	     0xf848d010000	                            je 0x40016e8	       611	shallow.c	FUNCTION_22	IF_2
0x400155b	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       612	shallow.c	FUNCTION_22	IF_2
0x400155f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        90	string3.h	FUNCTION_82	CALL_6
0x4001564	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_82	CALL_6
0x4001566	          0x8d681f	                   lea ebp, [rax + 0x1f]	       612	shallow.c	FUNCTION_22	IF_2
0x4001569	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       613	shallow.c	FUNCTION_22	IF_2	CALL_10
0x400156e	          0xc1ed05	                              shr ebp, 5	       612	shallow.c	FUNCTION_22	IF_2
0x4001571	          0x488b00	                    mov rax, qword [rax]	       613	shallow.c	FUNCTION_22	IF_2	CALL_10
0x4001574	          0xc1e502	                              shl ebp, 2	       612	shallow.c	FUNCTION_22	IF_2
0x4001577	        0x48635008	            movsxd rdx, dword [rax + 8] 	        90	string3.h	FUNCTION_82	CALL_6
0x400157b	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_82	CALL_6
0x400157f	      0xe800000000	                          call 0x4001584	        90	string3.h	FUNCTION_82	CALL_6
0x4001584	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001588	            0x85c0	                           test eax, eax	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400158a	            0x7461	                            je 0x40015ed	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400158c	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001591	          0x83e801	                              sub eax, 1	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001594	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001599	      0x4c8d648104	              lea r12, [rcx + rax*4 + 4]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x400159e	          0x4989cd	                            mov r13, rcx	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x40015a1	     0xf1f80000000	                         nop dword [rax]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x40015a8	        0x49634500	                 movsxd rax, dword [r13]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x40015ac	        0x488d0480	                  lea rax, [rax + rax*4]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x40015b0	        0x498d3c86	                  lea rdi, [r14 + rax*4]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x40015b4	      0xe800000000	                          call 0x40015b9	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x40015b9	          0x8b7020	            mov esi, dword [rax + 0x20] 	       430	shallow.c	CALL_2
0x40015bc	          0x4889df	                            mov rdi, rbx	       430	shallow.c	CALL_2
0x40015bf	      0xe8bcecffff	call sym.ref_bitmap_at_peek.isra.2.constprop.3	       430	shallow.c	CALL_2
0x40015c4	          0x488b38	                    mov rdi, qword [rax]	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x40015c7	          0x4885ff	                           test rdi, rdi	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x40015ca	            0x7418	                            je 0x40015e4	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x40015cc	        0x49634500	                 movsxd rax, dword [r13]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x40015d0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x40015d5	          0x4889ee	                            mov rsi, rbp	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x40015d8	        0x4c8d3cc1	                  lea r15, [rcx + rax*8]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x40015dc	      0xe800000000	                          call 0x40015e1	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x40015e1	          0x498907	                    mov qword [r15], rax	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x40015e4	        0x4983c504	                              add r13, 4	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x40015e8	          0x4d39e5	                            cmp r13, r12	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x40015eb	            0x75bb	                           jne 0x40015a8	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x40015ed	        0x8b542458	            mov edx, dword [rsp + 0x58] 	       430	shallow.c	CALL_2
0x40015f1	            0x31db	                            xor ebx, ebx	       430	shallow.c	CALL_2
0x40015f3	            0x85d2	                           test edx, edx	       430	shallow.c	CALL_2
0x40015f5	            0x7422	                            je 0x4001619	       430	shallow.c	CALL_2
0x40015f7	    0x660f1f840000	                    nop word [rax + rax]	       430	shallow.c	CALL_2
0x4001600	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       430	shallow.c	CALL_2
0x4001605	            0x89da	                            mov edx, ebx	       430	shallow.c	CALL_2
0x4001607	          0x83c301	                              add ebx, 1	       430	shallow.c	CALL_2
0x400160a	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	       430	shallow.c	CALL_2
0x400160e	      0xe800000000	                          call 0x4001613	       430	shallow.c	CALL_2
0x4001613	        0x3b5c2458	            cmp ebx, dword [rsp + 0x58] 	       430	shallow.c	CALL_2
0x4001617	            0x72e7	                            jb 0x4001600	       430	shallow.c	CALL_2
0x4001619	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       430	shallow.c	CALL_2
0x400161e	    0xc74424580000	               mov dword [rsp + 0x58], 0	       430	shallow.c	CALL_2
0x4001626	            0x31db	                            xor ebx, ebx	       630	shallow.c	FUNCTION_22	FOR_7
0x4001628	      0xe800000000	                          call 0x400162d	       430	shallow.c	CALL_2
0x400162d	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	       630	shallow.c	FUNCTION_22	FOR_7
0x4001634	    0x48c744246000	               mov qword [rsp + 0x60], 0	       430	shallow.c	CALL_2
0x400163d	            0x85c0	                           test eax, eax	       630	shallow.c	FUNCTION_22	FOR_7
0x400163f	            0x7423	                            je 0x4001664	       630	shallow.c	FUNCTION_22	FOR_7
0x4001641	     0xf1f80000000	                         nop dword [rax]	       630	shallow.c	FUNCTION_22	FOR_7
0x4001648	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       631	shallow.c	FUNCTION_22	CALL_16
0x400164d	            0x89da	                            mov edx, ebx	       631	shallow.c	FUNCTION_22	CALL_16
0x400164f	          0x83c301	                              add ebx, 1	       630	shallow.c	FUNCTION_22	FOR_7
0x4001652	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	       631	shallow.c	FUNCTION_22	CALL_16
0x4001656	      0xe800000000	                          call 0x400165b	       631	shallow.c	FUNCTION_22	CALL_16
0x400165b	    0x399c24880000	            cmp dword [rsp + 0x88], ebx 	       630	shallow.c	FUNCTION_22	FOR_7
0x4001662	            0x77e4	                            ja 0x4001648	       630	shallow.c	FUNCTION_22	FOR_7
0x4001664	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       632	shallow.c	FUNCTION_22	CALL_17
0x4001669	      0xe800000000	                          call 0x400166e	       632	shallow.c	FUNCTION_22	CALL_17
0x400166e	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       633	shallow.c	FUNCTION_22	CALL_18
0x4001673	      0xe800000000	                          call 0x4001678	       633	shallow.c	FUNCTION_22	CALL_18
0x4001678	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       634	shallow.c	FUNCTION_22
0x4001680	    0x644833042528	                xor rax, qword fs:[0x28]	       634	shallow.c	FUNCTION_22
0x4001689	     0xf8575030000	                           jne 0x4001a04	       634	shallow.c	FUNCTION_22
0x400168f	    0x4881c4a80000	                           add rsp, 0xa8	       634	shallow.c	FUNCTION_22
0x4001696	              0x5b	                                 pop rbx	       634	shallow.c	FUNCTION_22
0x4001697	              0x5d	                                 pop rbp	       634	shallow.c	FUNCTION_22
0x4001698	            0x415c	                                 pop r12	       634	shallow.c	FUNCTION_22
0x400169a	            0x415d	                                 pop r13	       634	shallow.c	FUNCTION_22
0x400169c	            0x415e	                                 pop r14	       634	shallow.c	FUNCTION_22
0x400169e	            0x415f	                                 pop r15	       634	shallow.c	FUNCTION_22
0x40016a0	              0xc3	                                     ret	       634	shallow.c	FUNCTION_22
0x40016a1	     0xf1f80000000	                         nop dword [rax]	       634	shallow.c	FUNCTION_22
0x40016a8	      0xe800000000	                          call 0x40016ad	       523	shallow.c	FUNCTION_20	CALL_17
0x40016ad	            0x31ed	                            xor ebp, ebp	       524	shallow.c	FUNCTION_20	FOR_3
0x40016af	            0x85c0	                           test eax, eax	       524	shallow.c	FUNCTION_20	FOR_3
0x40016b1	          0x4189c4	                           mov r12d, eax	       523	shallow.c	FUNCTION_20	CALL_17
0x40016b4	            0x7516	                           jne 0x40016cc	       524	shallow.c	FUNCTION_20	FOR_3
0x40016b6	      0xe975feffff	                           jmp 0x4001530	       524	shallow.c	FUNCTION_20	FOR_3
0x40016bb	       0xf1f440000	                   nop dword [rax + rax]	       524	shallow.c	FUNCTION_20	FOR_3
0x40016c0	          0x83c501	                              add ebp, 1	       524	shallow.c	FUNCTION_20	FOR_3
0x40016c3	          0x4139ec	                           cmp r12d, ebp	       524	shallow.c	FUNCTION_20	FOR_3
0x40016c6	     0xf8464feffff	                            je 0x4001530	       524	shallow.c	FUNCTION_20	FOR_3
0x40016cc	            0x89ef	                            mov edi, ebp	       525	shallow.c	FUNCTION_20	FOR_3	CALL_18
0x40016ce	      0xe800000000	                          call 0x40016d3	       525	shallow.c	FUNCTION_20	FOR_3	CALL_18
0x40016d3	          0x4885c0	                           test rax, rax	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40016d6	            0x74e8	                            je 0x40016c0	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40016d8	           0xfb610	                   movzx edx, byte [rax]	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40016db	          0x83e20e	                            and edx, 0xe	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40016de	          0x80fa02	                               cmp dl, 2	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40016e1	            0x75dd	                           jne 0x40016c0	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40016e3	          0x8320ef	             and dword [rax], 0xffffffef	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40016e6	            0xebd8	                           jmp 0x40016c0	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40016e8	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       669	shallow.c	FUNCTION_25
0x40016ed	    0x48ba00000000	                 movabs rdx, 0x100000000	       676	shallow.c	FUNCTION_25	CALL_1
0x40016f7	          0x488b01	                    mov rax, qword [rcx]	       669	shallow.c	FUNCTION_25
0x40016fa	          0x488b00	                    mov rax, qword [rax]	       669	shallow.c	FUNCTION_25
0x40016fd	      0x4889442408	                mov qword [rsp + 8], rax	       669	shallow.c	FUNCTION_25
0x4001702	        0x488b4128	            mov rax, qword [rcx + 0x28] 	       673	shallow.c	FUNCTION_25
0x4001706	          0x8b4008	                mov eax, dword [rax + 8]	       673	shallow.c	FUNCTION_25
0x4001709	        0x448d603e	                  lea r12d, [rax + 0x3e]	       673	shallow.c	FUNCTION_25
0x400170d	          0x83c01f	                           add eax, 0x1f	       673	shallow.c	FUNCTION_25
0x4001710	        0x410f48c4	                         cmovs eax, r12d	       673	shallow.c	FUNCTION_25
0x4001714	          0xc1f805	                              sar eax, 5	       673	shallow.c	FUNCTION_25
0x4001717	        0x89442420	             mov dword [rsp + 0x20], eax	       673	shallow.c	FUNCTION_25
0x400171b	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       676	shallow.c	FUNCTION_25	CALL_1
0x4001725	    0x482305000000	             and rax, qword [0x0400172c]	       676	shallow.c	FUNCTION_25	CALL_1
0x400172c	          0x4839d0	                            cmp rax, rdx	       676	shallow.c	FUNCTION_25	CALL_1
0x400172f	            0x741b	                            je 0x400174c	       676	shallow.c	FUNCTION_25	CALL_1
0x4001731	      0xb900000000	                              mov ecx, 0	       676	shallow.c	FUNCTION_25	CALL_1
0x4001736	      0xba00000000	                              mov edx, 0	       676	shallow.c	FUNCTION_25	CALL_1
0x400173b	      0xbea4020000	                          mov esi, 0x2a4	       676	shallow.c	FUNCTION_25	CALL_1
0x4001740	      0xbf00000000	                              mov edi, 0	       676	shallow.c	FUNCTION_25	CALL_1
0x4001745	            0x31c0	                            xor eax, eax	       676	shallow.c	FUNCTION_25	CALL_1
0x4001747	      0xe800000000	                          call 0x400174c	       676	shallow.c	FUNCTION_25	CALL_1
0x400174c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       677	shallow.c	FUNCTION_25	IF_1
0x4001751	          0x4885ff	                           test rdi, rdi	       677	shallow.c	FUNCTION_25	IF_1
0x4001754	            0x7418	                            je 0x400176e	       677	shallow.c	FUNCTION_25	IF_1
0x4001756	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       678	shallow.c	FUNCTION_25	CALL_2
0x400175b	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_82	CALL_6
0x400175d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       678	shallow.c	FUNCTION_25	CALL_2
0x4001761	        0x48635008	            movsxd rdx, dword [rax + 8] 	        90	string3.h	FUNCTION_82	CALL_6
0x4001765	        0x48c1e202	                              shl rdx, 2	        90	string3.h	FUNCTION_82	CALL_6
0x4001769	      0xe800000000	                          call 0x400176e	        90	string3.h	FUNCTION_82	CALL_6
0x400176e	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001773	      0x458b5c2420	           mov r11d, dword [r12 + 0x20] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001778	          0x4585db	                         test r11d, r11d	       681	shallow.c	FUNCTION_25	FOR_1
0x400177b	     0xf8eb1020000	                           jle 0x4001a32	       681	shallow.c	FUNCTION_25	FOR_1
0x4001781	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001785	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       681	shallow.c	FUNCTION_25	FOR_1
0x400178a	          0x4531ff	                          xor r15d, r15d	       681	shallow.c	FUNCTION_25	FOR_1
0x400178d	          0x4531f6	                          xor r14d, r14d	       681	shallow.c	FUNCTION_25	FOR_1
0x4001790	          0x4531ed	                          xor r13d, r13d	       681	shallow.c	FUNCTION_25	FOR_1
0x4001793	          0x8d51ff	                      lea edx, [rcx - 1]	       681	shallow.c	FUNCTION_25	FOR_1
0x4001796	    0x488d2c950400	                    lea rbp, [rdx*4 + 4]	       681	shallow.c	FUNCTION_25	FOR_1
0x400179e	        0x4a630438	           movsxd rax, dword [rax + r15]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x40017a2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x40017a7	        0x488d0480	                  lea rax, [rax + rax*4]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x40017ab	        0x488d3c81	                  lea rdi, [rcx + rax*4]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x40017af	      0xe800000000	                          call 0x40017b4	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x40017b4	          0x8b7020	            mov esi, dword [rax + 0x20] 	       430	shallow.c	CALL_2
0x40017b7	          0x4889df	                            mov rdi, rbx	       430	shallow.c	CALL_2
0x40017ba	      0xe8c1eaffff	call sym.ref_bitmap_at_peek.isra.2.constprop.3	       430	shallow.c	CALL_2
0x40017bf	          0x488b10	                    mov rdx, qword [rax]	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x40017c2	          0x4885d2	                           test rdx, rdx	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x40017c5	            0x7433	                            je 0x40017fa	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x40017c7	      0x448b542420	           mov r10d, dword [rsp + 0x20] 	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x40017cc	          0x4585d2	                         test r10d, r10d	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x40017cf	            0x7e29	                           jle 0x40017fa	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x40017d1	          0x448b0a	                    mov r9d, dword [rdx]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017d4	        0x488d4204	                      lea rax, [rdx + 4]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017d8	        0x488d0c2a	                    lea rcx, [rdx + rbp]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017dc	          0x4585c9	                           test r9d, r9d	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017df	            0x7414	                            je 0x40017f5	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017e1	            0xeb40	                           jmp 0x4001823	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017e3	       0xf1f440000	                   nop dword [rax + rax]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017e8	        0x4883c004	                              add rax, 4	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017ec	        0x448b40fc	                mov r8d, dword [rax - 4]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017f0	          0x4585c0	                           test r8d, r8d	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017f3	            0x752e	                           jne 0x4001823	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x40017f5	          0x4839c8	                            cmp rax, rcx	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x40017f8	            0x75ee	                           jne 0x40017e8	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x40017fa	        0x4183c501	                             add r13d, 1	       681	shallow.c	FUNCTION_25	FOR_1
0x40017fe	      0x453b6c2420	           cmp r13d, dword [r12 + 0x20] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001803	            0x7d3f	                           jge 0x4001844	       681	shallow.c	FUNCTION_25	FOR_1
0x4001805	          0x4539f5	                          cmp r13d, r14d	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001808	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x400180d	            0x740b	                            je 0x400181a	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x400180f	      0x428b4c3804	         mov ecx, dword [rax + r15 + 4] 	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001814	          0x4963d6	                        movsxd rdx, r14d	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001817	          0x890c90	            mov dword [rax + rdx*4], ecx	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x400181a	        0x4983c704	                              add r15, 4	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x400181e	      0xe97bffffff	                           jmp 0x400179e	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001823	      0x498b442428	            mov rax, qword [r12 + 0x28] 	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x4001828	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x400182d	        0x4183c601	                             add r14d, 1	       691	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001831	        0x4183c501	                             add r13d, 1	       681	shallow.c	FUNCTION_25	FOR_1
0x4001835	          0x8b7008	                mov esi, dword [rax + 8]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x4001838	      0xe803e8ffff	               call sym.update_refstatus	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x400183d	      0x453b6c2420	           cmp r13d, dword [r12 + 0x20] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001842	            0x7cc1	                            jl 0x4001805	       681	shallow.c	FUNCTION_25	FOR_1
0x4001844	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       695	shallow.c	FUNCTION_25
0x4001849	      0x488d742440	                   lea rsi, [rsp + 0x40]	       698	shallow.c	FUNCTION_25	CALL_7
0x400184e	      0xbf00000000	                              mov edi, 0	       698	shallow.c	FUNCTION_25	CALL_7
0x4001853	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_82	CALL_6
0x400185c	    0x48c744244800	               mov qword [rsp + 0x48], 0	        90	string3.h	FUNCTION_82	CALL_6
0x4001865	        0x45897720	            mov dword [r15 + 0x20], r14d	       695	shallow.c	FUNCTION_25
0x4001869	      0xe800000000	                          call 0x400186e	       698	shallow.c	FUNCTION_25	CALL_7
0x400186e	      0x488d742440	                   lea rsi, [rsp + 0x40]	       699	shallow.c	FUNCTION_25	CALL_8
0x4001873	      0xbf00000000	                              mov edi, 0	       699	shallow.c	FUNCTION_25	CALL_8
0x4001878	      0xe800000000	                          call 0x400187d	       699	shallow.c	FUNCTION_25	CALL_8
0x400187d	        0x418b7f10	            mov edi, dword [r15 + 0x10] 	       702	shallow.c	FUNCTION_25	FOR_3
0x4001881	            0x85ff	                           test edi, edi	       702	shallow.c	FUNCTION_25	FOR_3
0x4001883	     0xf8ee1000000	                           jle 0x400196a	       702	shallow.c	FUNCTION_25	FOR_3
0x4001889	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       702	shallow.c	FUNCTION_25	FOR_3
0x400188d	        0x498b4708	                mov rax, qword [r15 + 8]	       702	shallow.c	FUNCTION_25	FOR_3
0x4001891	          0x4531ed	                          xor r13d, r13d	       702	shallow.c	FUNCTION_25	FOR_3
0x4001894	          0x4531ff	                          xor r15d, r15d	       702	shallow.c	FUNCTION_25	FOR_3
0x4001897	    0xc70424000000	                      mov dword [rsp], 0	       702	shallow.c	FUNCTION_25	FOR_3
0x400189e	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       702	shallow.c	FUNCTION_25	FOR_3
0x40018a3	        0x448d41ff	                      lea r8d, [rcx - 1]	       702	shallow.c	FUNCTION_25	FOR_3
0x40018a7	    0x4e8d24850000	                         lea r12, [r8*4]	       702	shallow.c	FUNCTION_25	FOR_3
0x40018af	          0x4d89e6	                            mov r14, r12	       702	shallow.c	FUNCTION_25	FOR_3
0x40018b2	        0x4a630438	           movsxd rax, dword [rax + r15]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x40018b6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x40018bb	        0x488d0480	                  lea rax, [rax + rax*4]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x40018bf	        0x488d3c81	                  lea rdi, [rcx + rax*4]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x40018c3	      0xe800000000	                          call 0x40018c8	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x40018c8	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       430	shallow.c	CALL_2
0x40018cd	          0x8b7020	            mov esi, dword [rax + 0x20] 	       430	shallow.c	CALL_2
0x40018d0	          0x4889c5	                            mov rbp, rax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x40018d3	      0xe8a8e9ffff	call sym.ref_bitmap_at_peek.isra.2.constprop.3	       430	shallow.c	CALL_2
0x40018d8	          0x4989c4	                            mov r12, rax	       430	shallow.c	CALL_2
0x40018db	          0x488b00	                    mov rax, qword [rax]	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x40018de	          0x4885c0	                           test rax, rax	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x40018e1	            0x7454	                            je 0x4001937	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x40018e3	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40018e7	            0x85f6	                           test esi, esi	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40018e9	            0x7e4c	                           jle 0x4001937	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40018eb	            0x31db	                            xor ebx, ebx	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40018ed	            0xeb0e	                           jmp 0x40018fd	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40018ef	              0x90	                                     nop	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40018f0	          0x4c39f3	                            cmp rbx, r14	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40018f3	            0x7442	                            je 0x4001937	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40018f5	        0x498b0424	                    mov rax, qword [r12]	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40018f9	        0x4883c304	                              add rbx, 4	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40018fd	          0x8b0c18	              mov ecx, dword [rax + rbx]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001900	            0x85c9	                           test ecx, ecx	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001902	            0x74ec	                            je 0x40018f0	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001904	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x4001909	        0x8b742448	            mov esi, dword [rsp + 0x48] 	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x400190d	          0x4889ef	                            mov rdi, rbp	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x4001910	      0xe800000000	                          call 0x4001915	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x4001915	            0x85c0	                           test eax, eax	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001917	            0x75d7	                           jne 0x40018f0	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001919	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x400191e	        0x498b1424	                    mov rdx, qword [r12]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x4001922	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x4001927	        0x488b4028	            mov rax, qword [rax + 0x28] 	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x400192b	          0x8b7008	                mov esi, dword [rax + 8]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x400192e	      0xe80de7ffff	               call sym.update_refstatus	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x4001933	        0x83042401	                      add dword [rsp], 1	       714	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001937	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       702	shallow.c	FUNCTION_25	FOR_3
0x400193c	        0x4183c501	                             add r13d, 1	       702	shallow.c	FUNCTION_25	FOR_3
0x4001940	        0x443b6810	           cmp r13d, dword [rax + 0x10] 	       702	shallow.c	FUNCTION_25	FOR_3
0x4001944	            0x7d2b	                           jge 0x4001971	       702	shallow.c	FUNCTION_25	FOR_3
0x4001946	        0x443b2c24	                   cmp r13d, dword [rsp]	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x400194a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x400194f	        0x488b4008	                mov rax, qword [rax + 8]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001953	            0x740c	                            je 0x4001961	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001955	        0x48631424	                 movsxd rdx, dword [rsp]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001959	      0x428b4c3804	         mov ecx, dword [rax + r15 + 4] 	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x400195e	          0x890c90	            mov dword [rax + rdx*4], ecx	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001961	        0x4983c704	                              add r15, 4	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001965	      0xe948ffffff	                           jmp 0x40018b2	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x400196a	    0xc70424000000	                      mov dword [rsp], 0	       702	shallow.c	FUNCTION_25	FOR_3
0x4001971	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       718	shallow.c	FUNCTION_25
0x4001976	          0x8b0c24	                    mov ecx, dword [rsp]	       718	shallow.c	FUNCTION_25
0x4001979	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       720	shallow.c	FUNCTION_25	CALL_13
0x400197e	          0x894810	             mov dword [rax + 0x10], ecx	       718	shallow.c	FUNCTION_25
0x4001981	      0xe800000000	                          call 0x4001986	       720	shallow.c	FUNCTION_25	CALL_13
0x4001986	      0xe962fcffff	                           jmp 0x40015ed	       720	shallow.c	FUNCTION_25	CALL_13
0x400198b	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	        90	string3.h	FUNCTION_82	CALL_6
0x4001990	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_82	CALL_6
0x4001992	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_82	CALL_6
0x4001997	            0x31f6	                            xor esi, esi	       599	shallow.c	FUNCTION_22	CALL_6
0x4001999	          0x4889df	                            mov rdi, rbx	        90	string3.h	FUNCTION_82	CALL_6
0x400199c	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_82	CALL_6
0x400199f	      0x488b442408	                mov rax, qword [rsp + 8]	       592	shallow.c	FUNCTION_22
0x40019a4	      0xbf00000000	                              mov edi, 0	       599	shallow.c	FUNCTION_22	CALL_6
0x40019a9	    0xc74424540100	               mov dword [rsp + 0x54], 1	       430	shallow.c	CALL_2
0x40019b1	    0xc7442450fcff	         mov dword [rsp + 0x50], 0xfffc 	       430	shallow.c	CALL_2
0x40019b9	          0x8b4008	                mov eax, dword [rax + 8]	       592	shallow.c	FUNCTION_22
0x40019bc	        0x89442468	             mov dword [rsp + 0x68], eax	       592	shallow.c	FUNCTION_22
0x40019c0	      0xe800000000	                          call 0x40019c5	       599	shallow.c	FUNCTION_22	CALL_6
0x40019c5	            0x31f6	                            xor esi, esi	       600	shallow.c	FUNCTION_22	CALL_7
0x40019c7	      0xbf00000000	                              mov edi, 0	       600	shallow.c	FUNCTION_22	CALL_7
0x40019cc	      0xe800000000	                          call 0x40019d1	       600	shallow.c	FUNCTION_22	CALL_7
0x40019d1	      0xe945f9ffff	                           jmp 0x400131b	       600	shallow.c	FUNCTION_22	CALL_7
0x40019d6	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       574	shallow.c	FUNCTION_22	FOR_2
0x40019db	    0xc74424240000	               mov dword [rsp + 0x24], 0	       567	shallow.c	FUNCTION_22
0x40019e3	        0x458b6820	            mov r13d, dword [r8 + 0x20] 	       574	shallow.c	FUNCTION_22	FOR_2
0x40019e7	          0x4585ed	                         test r13d, r13d	       574	shallow.c	FUNCTION_22	FOR_2
0x40019ea	     0xf8561f8ffff	                           jne 0x4001251	       574	shallow.c	FUNCTION_22	FOR_2
0x40019f0	      0xe800000000	                          call 0x40019f5	       581	shallow.c	FUNCTION_22	CALL_2
0x40019f5	            0x85c0	                           test eax, eax	       582	shallow.c	FUNCTION_22	FOR_3
0x40019f7	            0x89c3	                            mov ebx, eax	       581	shallow.c	FUNCTION_22	CALL_2
0x40019f9	     0xf859cf8ffff	                           jne 0x400129b	       582	shallow.c	FUNCTION_22	FOR_3
0x40019ff	      0xe9c7f8ffff	                           jmp 0x40012cb	       582	shallow.c	FUNCTION_22	FOR_3
0x4001a04	      0xe800000000	                          call 0x4001a09	       634	shallow.c	FUNCTION_22
0x4001a09	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4001a0e	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4001a13	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4001a15	      0xe800000000	                          call 0x4001a1a	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4001a1a	        0x498d7e04	                      lea rdi, [r14 + 4]	       514	shallow.c	FUNCTION_20	WHILE_1	CALL_15
0x4001a1e	      0xe800000000	                          call 0x4001a23	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a23	      0xbf00000000	                              mov edi, 0	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a28	          0x4889c6	                            mov rsi, rax	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a2b	            0x31c0	                            xor eax, eax	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a2d	      0xe800000000	                          call 0x4001a32	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a32	          0x4531f6	                          xor r14d, r14d	       681	shallow.c	FUNCTION_25	FOR_1
0x4001a35	      0xe90afeffff	                           jmp 0x4001844	       681	shallow.c	FUNCTION_25	FOR_1
paint_alloc	functions,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0:IF,2:FOR,0	46
0x4000130	              0x55	                                push rbp	       443	shallow.c	FUNCTION_19
0x4000131	              0x53	                                push rbx	       443	shallow.c	FUNCTION_19
0x4000132	          0x4889fb	                            mov rbx, rdi	       443	shallow.c	FUNCTION_19
0x4000135	        0x4883ec08	                              sub rsp, 8	       443	shallow.c	FUNCTION_19
0x4000139	          0x8b4718	            mov eax, dword [rdi + 0x18] 	       445	shallow.c	FUNCTION_19
0x400013c	          0x8b7738	            mov esi, dword [rdi + 0x38] 	       447	shallow.c	FUNCTION_19	IF_1
0x400013f	          0x8d681f	                   lea ebp, [rax + 0x1f]	       445	shallow.c	FUNCTION_19
0x4000142	          0xc1ed05	                              shr ebp, 5	       445	shallow.c	FUNCTION_19
0x4000145	          0xc1e502	                              shl ebp, 2	       445	shallow.c	FUNCTION_19
0x4000148	            0x85f6	                           test esi, esi	       447	shallow.c	FUNCTION_19	IF_1
0x400014a	            0x7412	                            je 0x400015e	       447	shallow.c	FUNCTION_19	IF_1
0x400014c	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       447	shallow.c	FUNCTION_19	IF_1
0x4000150	        0x488b4f30	            mov rcx, qword [rdi + 0x30] 	       447	shallow.c	FUNCTION_19	IF_1
0x4000154	            0x89ea	                            mov edx, ebp	       447	shallow.c	FUNCTION_19	IF_1
0x4000156	          0x4829c1	                            sub rcx, rax	       447	shallow.c	FUNCTION_19	IF_1
0x4000159	          0x4839ca	                            cmp rdx, rcx	       447	shallow.c	FUNCTION_19	IF_1
0x400015c	            0x7e4c	                           jle 0x40001aa	       447	shallow.c	FUNCTION_19	IF_1
0x400015e	    0x81fd00000800	                        cmp ebp, 0x80000	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x4000164	            0x7752	                            ja 0x40001b8	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x4000166	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       452	shallow.c	FUNCTION_19	IF_1
0x400016a	          0x83c601	                              add esi, 1	       451	shallow.c	FUNCTION_19	IF_1
0x400016d	          0x897338	             mov dword [rbx + 0x38], esi	       451	shallow.c	FUNCTION_19	IF_1
0x4000170	        0x48c1e603	                              shl rsi, 3	       452	shallow.c	FUNCTION_19	IF_1
0x4000174	      0xe800000000	                          call 0x4000179	       452	shallow.c	FUNCTION_19	IF_1
0x4000179	      0xbf00000800	                        mov edi, 0x80000	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x400017e	        0x48894320	             mov qword [rbx + 0x20], rax	       452	shallow.c	FUNCTION_19	IF_1
0x4000182	      0xe800000000	                          call 0x4000187	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x4000187	          0x8b5338	            mov edx, dword [rbx + 0x38] 	       454	shallow.c	FUNCTION_19	IF_1
0x400018a	        0x48894328	             mov qword [rbx + 0x28], rax	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x400018e	          0x8d4aff	                      lea ecx, [rdx - 1]	       454	shallow.c	FUNCTION_19	IF_1
0x4000191	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       454	shallow.c	FUNCTION_19	IF_1
0x4000195	        0x488904ca	            mov qword [rdx + rcx*8], rax	       454	shallow.c	FUNCTION_19	IF_1
0x4000199	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       455	shallow.c	FUNCTION_19	IF_1
0x400019d	    0x488d90000008	                lea rdx, [rax + 0x80000]	       455	shallow.c	FUNCTION_19	IF_1
0x40001a4	        0x48895330	             mov qword [rbx + 0x30], rdx	       455	shallow.c	FUNCTION_19	IF_1
0x40001a8	            0x89ea	                            mov edx, ebp	       455	shallow.c	FUNCTION_19	IF_1
0x40001aa	          0x4801c2	                            add rdx, rax	       458	shallow.c	FUNCTION_19
0x40001ad	        0x48895328	             mov qword [rbx + 0x28], rdx	       458	shallow.c	FUNCTION_19
0x40001b1	        0x4883c408	                              add rsp, 8	       460	shallow.c	FUNCTION_19
0x40001b5	              0x5b	                                 pop rbx	       460	shallow.c	FUNCTION_19
0x40001b6	              0x5d	                                 pop rbp	       460	shallow.c	FUNCTION_19
0x40001b7	              0xc3	                                     ret	       460	shallow.c	FUNCTION_19
0x40001b8	            0x89ee	                            mov esi, ebp	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x40001ba	      0xbf00000000	                              mov edi, 0	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x40001bf	            0x31c0	                            xor eax, eax	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x40001c1	      0xe800000000	                          call 0x40001c6	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
advertise_shallow_grafts_cb	functions,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0:IF,1:FOR,0	16
0x40000d0	        0x837f14ff	cmp dword [rdi + 0x14], 0xffffffffffffffff	       338	shallow.c	FUNCTION_13	IF_1
0x40000d4	            0x740a	                            je 0x40000e0	       338	shallow.c	FUNCTION_13	IF_1
0x40000d6	            0x31c0	                            xor eax, eax	       341	shallow.c	FUNCTION_13
0x40000d8	              0xc3	                                     ret	       341	shallow.c	FUNCTION_13
0x40000d9	     0xf1f80000000	                         nop dword [rax]	       341	shallow.c	FUNCTION_13
0x40000e0	              0x53	                                push rbx	       336	shallow.c	FUNCTION_13
0x40000e1	            0x8b1e	                    mov ebx, dword [rsi]	       337	shallow.c	FUNCTION_13
0x40000e3	      0xe800000000	                          call 0x40000e8	       339	shallow.c	FUNCTION_13	CALL_2
0x40000e8	            0x89df	                            mov edi, ebx	       339	shallow.c	FUNCTION_13	CALL_2
0x40000ea	          0x4889c2	                            mov rdx, rax	       339	shallow.c	FUNCTION_13	CALL_2
0x40000ed	      0xbe00000000	                              mov esi, 0	       339	shallow.c	FUNCTION_13	CALL_2
0x40000f2	            0x31c0	                            xor eax, eax	       339	shallow.c	FUNCTION_13	CALL_2
0x40000f4	      0xe800000000	                          call 0x40000f9	       339	shallow.c	FUNCTION_13	CALL_2
0x40000f9	            0x31c0	                            xor eax, eax	       341	shallow.c	FUNCTION_13
0x40000fb	              0x5b	                                 pop rbx	       341	shallow.c	FUNCTION_13
0x40000fc	              0xc3	                                     ret	       341	shallow.c	FUNCTION_13
setup_alternate_shallow	functions,0:WHILE,0:CALL,9:ELSE,1:SWITCH,0:DO,0:IF,2:FOR,0	58
0x4000cd0	            0x4155	                                push r13	       314	shallow.c	FUNCTION_12
0x4000cd2	            0x4154	                                push r12	       314	shallow.c	FUNCTION_12
0x4000cd4	          0x4989f4	                            mov r12, rsi	       314	shallow.c	FUNCTION_12
0x4000cd7	              0x55	                                push rbp	       314	shallow.c	FUNCTION_12
0x4000cd8	              0x53	                                push rbx	       314	shallow.c	FUNCTION_12
0x4000cd9	          0x4889fb	                            mov rbx, rdi	       314	shallow.c	FUNCTION_12
0x4000cdc	          0x4889d5	                            mov rbp, rdx	       314	shallow.c	FUNCTION_12
0x4000cdf	        0x4883ec28	                           sub rsp, 0x28	       314	shallow.c	FUNCTION_12
0x4000ce3	    0x64488b042528	                mov rax, qword fs:[0x28]	       314	shallow.c	FUNCTION_12
0x4000cec	      0x4889442418	             mov qword [rsp + 0x18], rax	       314	shallow.c	FUNCTION_12
0x4000cf1	            0x31c0	                            xor eax, eax	       314	shallow.c	FUNCTION_12
0x4000cf3	    0x48c704240000	                      mov qword [rsp], 0	       315	shallow.c	FUNCTION_12
0x4000cfb	    0x48c744240800	                  mov qword [rsp + 8], 0	       315	shallow.c	FUNCTION_12
0x4000d04	    0x48c744241000	               mov qword [rsp + 0x10], 0	       315	shallow.c	FUNCTION_12
0x4000d0d	      0xe800000000	                          call 0x4000d12	       318	shallow.c	FUNCTION_12	CALL_2
0x4000d12	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000d14	      0xba01000000	                              mov edx, 1	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000d19	          0x4889c6	                            mov rsi, rax	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000d1c	          0x4889df	                            mov rdi, rbx	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000d1f	      0xe800000000	                          call 0x4000d24	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000d24	          0x4189c5	                           mov r13d, eax	       175	lockfile.h	FUNCTION_92	CALL_1
0x4000d27	      0xe864f3ffff	  call sym.check_shallow_file_for_update	       320	shallow.c	FUNCTION_12	CALL_3
0x4000d2c	            0x31c9	                            xor ecx, ecx	       286	shallow.c	FUNCTION_10	CALL_1
0x4000d2e	            0x31f6	                            xor esi, esi	       286	shallow.c	FUNCTION_10	CALL_1
0x4000d30	          0x4889ea	                            mov rdx, rbp	       286	shallow.c	FUNCTION_10	CALL_1
0x4000d33	          0x4889e7	                            mov rdi, rsp	       286	shallow.c	FUNCTION_10	CALL_1
0x4000d36	      0xe835f7ffff	        call sym.write_shallow_commits_1	       286	shallow.c	FUNCTION_10	CALL_1
0x4000d3b	            0x85c0	                           test eax, eax	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000d3d	            0x7531	                           jne 0x4000d70	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000d3f	    0x49c704240000	                      mov qword [r12], 0	       331	shallow.c	FUNCTION_12	ELSE_1
0x4000d47	          0x4889e7	                            mov rdi, rsp	       332	shallow.c	FUNCTION_12	CALL_9
0x4000d4a	      0xe800000000	                          call 0x4000d4f	       332	shallow.c	FUNCTION_12	CALL_9
0x4000d4f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       333	shallow.c	FUNCTION_12
0x4000d54	    0x644833042528	                xor rax, qword fs:[0x28]	       333	shallow.c	FUNCTION_12
0x4000d5d	            0x7536	                           jne 0x4000d95	       333	shallow.c	FUNCTION_12
0x4000d5f	        0x4883c428	                           add rsp, 0x28	       333	shallow.c	FUNCTION_12
0x4000d63	              0x5b	                                 pop rbx	       333	shallow.c	FUNCTION_12
0x4000d64	              0x5d	                                 pop rbp	       333	shallow.c	FUNCTION_12
0x4000d65	            0x415c	                                 pop r12	       333	shallow.c	FUNCTION_12
0x4000d67	            0x415d	                                 pop r13	       333	shallow.c	FUNCTION_12
0x4000d69	              0xc3	                                     ret	       333	shallow.c	FUNCTION_12
0x4000d6a	    0x660f1f440000	                    nop word [rax + rax]	       333	shallow.c	FUNCTION_12
0x4000d70	      0x488b542408	                mov rdx, qword [rsp + 8]	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000d75	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000d7a	          0x4489ef	                           mov edi, r13d	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000d7d	      0xe800000000	                          call 0x4000d82	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000d82	          0x4885c0	                           test rax, rax	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000d85	          0x488b3b	                    mov rdi, qword [rbx]	       220	lockfile.h	FUNCTION_95	CALL_1
0x4000d88	            0x7810	                            js 0x4000d9a	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000d8a	      0xe800000000	                          call 0x4000d8f	       220	lockfile.h	FUNCTION_95	CALL_1
0x4000d8f	        0x49890424	                    mov qword [r12], rax	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000d93	            0xebb2	                           jmp 0x4000d47	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000d95	      0xe800000000	                          call 0x4000d9a	       333	shallow.c	FUNCTION_12
0x4000d9a	      0xe800000000	                          call 0x4000d9f	       220	lockfile.h	FUNCTION_95	CALL_1
0x4000d9f	      0xbf00000000	                              mov edi, 0	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000da4	          0x4889c6	                            mov rsi, rax	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000da7	            0x31c0	                            xor eax, eax	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000da9	      0xe800000000	                          call 0x4000dae	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
set_alternate_shallow_file	functions,0:WHILE,0:CALL,3:ELSE,0:SWITCH,0:DO,0:IF,2:FOR,0	24
0x4000590	    0x833d00000000	cmp dword [0x04000597], 0xffffffffffffffff	        22	shallow.c	FUNCTION_1	IF_1
0x4000597	              0x53	                                push rbx	        21	shallow.c	FUNCTION_1
0x4000598	            0x7533	                           jne 0x40005cd	        22	shallow.c	FUNCTION_1	IF_1
0x400059a	          0x4889fb	                            mov rbx, rdi	        22	shallow.c	FUNCTION_1	IF_1
0x400059d	    0x488b3d000000	            mov rdi, qword [0x040005a4] 	        24	shallow.c	FUNCTION_1	IF_2
0x40005a4	          0x4885ff	                           test rdi, rdi	        24	shallow.c	FUNCTION_1	IF_2
0x40005a7	            0x7407	                            je 0x40005b0	        24	shallow.c	FUNCTION_1	IF_2
0x40005a9	            0x85f6	                           test esi, esi	        24	shallow.c	FUNCTION_1	IF_2
0x40005ab	            0x7503	                           jne 0x40005b0	        24	shallow.c	FUNCTION_1	IF_2
0x40005ad	              0x5b	                                 pop rbx	        28	shallow.c	FUNCTION_1
0x40005ae	              0xc3	                                     ret	        28	shallow.c	FUNCTION_1
0x40005af	              0x90	                                     nop	        28	shallow.c	FUNCTION_1
0x40005b0	      0xe800000000	                          call 0x40005b5	        26	shallow.c	FUNCTION_1	CALL_2
0x40005b5	            0x31c0	                            xor eax, eax	       924	git-compat-util.h	FUNCTION_70	CALL_1
0x40005b7	          0x4885db	                           test rbx, rbx	       924	git-compat-util.h	FUNCTION_70	CALL_1
0x40005ba	            0x7408	                            je 0x40005c4	       924	git-compat-util.h	FUNCTION_70	CALL_1
0x40005bc	          0x4889df	                            mov rdi, rbx	       924	git-compat-util.h	FUNCTION_70	CALL_1
0x40005bf	      0xe800000000	                          call 0x40005c4	       924	git-compat-util.h	FUNCTION_70	CALL_1
0x40005c4	    0x488905000000	            mov qword [0x040005cb], rax 	        27	shallow.c	FUNCTION_1	CALL_3
0x40005cb	              0x5b	                                 pop rbx	        28	shallow.c	FUNCTION_1
0x40005cc	              0xc3	                                     ret	        28	shallow.c	FUNCTION_1
0x40005cd	      0xbf00000000	                              mov edi, 0	        23	shallow.c	FUNCTION_1	CALL_1
0x40005d2	            0x31c0	                            xor eax, eax	        23	shallow.c	FUNCTION_1	CALL_1
0x40005d4	      0xe800000000	                          call 0x40005d9	        23	shallow.c	FUNCTION_1	CALL_1
get_shallow_commits_by_rev_list	functions,0:WHILE,0:CALL,12:ELSE,0:SWITCH,0:DO,0:IF,4:FOR,4	142
0x40009f0	            0x4156	                                push r14	       156	shallow.c	FUNCTION_6
0x40009f2	            0x4155	                                push r13	       156	shallow.c	FUNCTION_6
0x40009f4	          0x4189fd	                           mov r13d, edi	       156	shallow.c	FUNCTION_6
0x40009f7	            0x4154	                                push r12	       156	shallow.c	FUNCTION_6
0x40009f9	              0x55	                                push rbp	       156	shallow.c	FUNCTION_6
0x40009fa	          0x4989f6	                            mov r14, rsi	       156	shallow.c	FUNCTION_6
0x40009fd	              0x53	                                push rbx	       156	shallow.c	FUNCTION_6
0x40009fe	            0x89d3	                            mov ebx, edx	       160	shallow.c	FUNCTION_6
0x4000a00	            0x89d5	                            mov ebp, edx	       156	shallow.c	FUNCTION_6
0x4000a02	             0x9cb	                             or ebx, ecx	       160	shallow.c	FUNCTION_6
0x4000a04	          0x4189cc	                           mov r12d, ecx	       156	shallow.c	FUNCTION_6
0x4000a07	    0x4881ecd00800	                          sub rsp, 0x8d0	       156	shallow.c	FUNCTION_6
0x4000a0e	            0x89df	                            mov edi, ebx	       166	shallow.c	FUNCTION_6	CALL_1
0x4000a10	    0x64488b042528	                mov rax, qword fs:[0x28]	       156	shallow.c	FUNCTION_6
0x4000a19	    0x48898424c808	            mov qword [rsp + 0x8c8], rax	       156	shallow.c	FUNCTION_6
0x4000a21	            0x31c0	                            xor eax, eax	       156	shallow.c	FUNCTION_6
0x4000a23	    0x48c704240000	                      mov qword [rsp], 0	       157	shallow.c	FUNCTION_6
0x4000a2b	    0x48c744240800	                  mov qword [rsp + 8], 0	       158	shallow.c	FUNCTION_6
0x4000a34	      0xe800000000	                          call 0x4000a39	       166	shallow.c	FUNCTION_6	CALL_1
0x4000a39	      0xe800000000	                          call 0x4000a3e	       168	shallow.c	FUNCTION_6	CALL_2
0x4000a3e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       170	shallow.c	FUNCTION_6	CALL_3
0x4000a43	            0x31f6	                            xor esi, esi	       170	shallow.c	FUNCTION_6	CALL_3
0x4000a45	      0xe800000000	                          call 0x4000a4a	       170	shallow.c	FUNCTION_6	CALL_3
0x4000a4a	      0x488d542410	                   lea rdx, [rsp + 0x10]	       172	shallow.c	FUNCTION_6	CALL_4
0x4000a4f	            0x31c9	                            xor ecx, ecx	       172	shallow.c	FUNCTION_6	CALL_4
0x4000a51	          0x4c89f6	                            mov rsi, r14	       172	shallow.c	FUNCTION_6	CALL_4
0x4000a54	          0x4489ef	                           mov edi, r13d	       172	shallow.c	FUNCTION_6	CALL_4
0x4000a57	    0xc70500000000	               mov dword [0x04000a61], 0	       171	shallow.c	FUNCTION_6
0x4000a61	      0xe800000000	                          call 0x4000a66	       172	shallow.c	FUNCTION_6	CALL_4
0x4000a66	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x4000a6b	      0xe800000000	                          call 0x4000a70	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x4000a70	            0x85c0	                           test eax, eax	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x4000a72	     0xf8567010000	                           jne 0x4000bdf	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x4000a78	      0x488d4c2408	                      lea rcx, [rsp + 8]	       176	shallow.c	FUNCTION_6	CALL_7
0x4000a7d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       176	shallow.c	FUNCTION_6	CALL_7
0x4000a82	            0x31d2	                            xor edx, edx	       176	shallow.c	FUNCTION_6	CALL_7
0x4000a84	      0xbe00000000	                              mov esi, 0	       176	shallow.c	FUNCTION_6	CALL_7
0x4000a89	      0xe800000000	                          call 0x4000a8e	       176	shallow.c	FUNCTION_6	CALL_7
0x4000a8e	      0x4c8b742408	                mov r14, qword [rsp + 8]	       179	shallow.c	FUNCTION_6	FOR_1
0x4000a93	          0x4d85f6	                           test r14, r14	       179	shallow.c	FUNCTION_6	FOR_1
0x4000a96	     0xf8424010000	                            je 0x4000bc0	       179	shallow.c	FUNCTION_6	FOR_1
0x4000a9c	          0x4c89f1	                            mov rcx, r14	       179	shallow.c	FUNCTION_6	FOR_1
0x4000a9f	              0x90	                                     nop	       179	shallow.c	FUNCTION_6	FOR_1
0x4000aa0	          0x488b31	                    mov rsi, qword [rcx]	       180	shallow.c	FUNCTION_6	FOR_1
0x4000aa3	            0x8b06	                    mov eax, dword [rsi]	       180	shallow.c	FUNCTION_6	FOR_1
0x4000aa5	            0x89c2	                            mov edx, eax	       180	shallow.c	FUNCTION_6	FOR_1
0x4000aa7	      0x250f000080	                     and eax, 0x8000000f	       180	shallow.c	FUNCTION_6	FOR_1
0x4000aac	          0xc1ea04	                              shr edx, 4	       180	shallow.c	FUNCTION_6	FOR_1
0x4000aaf	          0x4409e2	                            or edx, r12d	       180	shallow.c	FUNCTION_6	FOR_1
0x4000ab2	    0x81e2ffffff07	                      and edx, 0x7ffffff	       180	shallow.c	FUNCTION_6	FOR_1
0x4000ab8	          0xc1e204	                              shl edx, 4	       180	shallow.c	FUNCTION_6	FOR_1
0x4000abb	             0x9d0	                             or eax, edx	       180	shallow.c	FUNCTION_6	FOR_1
0x4000abd	            0x8906	                    mov dword [rsi], eax	       180	shallow.c	FUNCTION_6	FOR_1
0x4000abf	        0x488b4908	                mov rcx, qword [rcx + 8]	       179	shallow.c	FUNCTION_6	FOR_1
0x4000ac3	          0x4885c9	                           test rcx, rcx	       179	shallow.c	FUNCTION_6	FOR_1
0x4000ac6	            0x75d8	                           jne 0x4000aa0	       179	shallow.c	FUNCTION_6	FOR_1
0x4000ac8	     0xf1f84000000	                   nop dword [rax + rax]	       179	shallow.c	FUNCTION_6	FOR_1
0x4000ad0	          0x4d8b2e	                    mov r13, qword [r14]	       190	shallow.c	FUNCTION_6	FOR_2
0x4000ad3	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_91	CALL_1
0x4000ad5	          0x4c89ef	                            mov rdi, r13	        75	commit.h	FUNCTION_91	CALL_1
0x4000ad8	      0xe800000000	                          call 0x4000add	        75	commit.h	FUNCTION_91	CALL_1
0x4000add	            0x85c0	                           test eax, eax	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x4000adf	     0xf85e2000000	                           jne 0x4000bc7	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x4000ae5	        0x498b5530	            mov rdx, qword [r13 + 0x30] 	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000ae9	          0x4885d2	                           test rdx, rdx	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000aec	            0x750b	                           jne 0x4000af9	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000aee	            0xeb45	                           jmp 0x4000b35	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000af0	        0x488b5208	                mov rdx, qword [rdx + 8]	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000af4	          0x4885d2	                           test rdx, rdx	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000af7	            0x743c	                            je 0x4000b35	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000af9	          0x488b02	                    mov rax, qword [rdx]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000afc	            0x8b00	                    mov eax, dword [rax]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000afe	          0xc1e804	                              shr eax, 4	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b01	      0x25ffffff07	                      and eax, 0x7ffffff	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b06	          0x4485e0	                          test eax, r12d	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b09	            0x75e5	                           jne 0x4000af0	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b0b	        0x418b4500	                    mov eax, dword [r13]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b0f	          0x4889e6	                            mov rsi, rsp	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000b12	          0x4c89ef	                            mov rdi, r13	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000b15	            0x89c2	                            mov edx, eax	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b17	      0x250f000080	                     and eax, 0x8000000f	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b1c	          0xc1ea04	                              shr edx, 4	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b1f	             0x9ea	                             or edx, ebp	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b21	    0x81e2ffffff07	                      and edx, 0x7ffffff	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b27	          0xc1e204	                              shl edx, 4	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b2a	             0x9d0	                             or eax, edx	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b2c	        0x41894500	                    mov dword [r13], eax	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000b30	      0xe800000000	                          call 0x4000b35	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000b35	        0x4d8b7608	                mov r14, qword [r14 + 8]	       189	shallow.c	FUNCTION_6	FOR_2
0x4000b39	          0x4d85f6	                           test r14, r14	       189	shallow.c	FUNCTION_6	FOR_2
0x4000b3c	            0x7592	                           jne 0x4000ad0	       189	shallow.c	FUNCTION_6	FOR_2
0x4000b3e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       189	shallow.c	FUNCTION_6	FOR_2
0x4000b43	      0xe800000000	                          call 0x4000b48	       204	shallow.c	FUNCTION_6	CALL_12
0x4000b48	        0x488b0424	                    mov rax, qword [rsp]	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b4c	          0x41f7d4	                                not r12d	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b4f	          0x4885c0	                           test rax, rax	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b52	          0x4889c1	                            mov rcx, rax	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b55	            0x7512	                           jne 0x4000b69	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b57	            0xeb44	                           jmp 0x4000b9d	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b59	     0xf1f80000000	                         nop dword [rax]	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b60	        0x488b4908	                mov rcx, qword [rcx + 8]	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b64	          0x4885c9	                           test rcx, rcx	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b67	            0x7434	                            je 0x4000b9d	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b69	          0x488b39	                    mov rdi, qword [rcx]	       211	shallow.c	FUNCTION_6	FOR_4
0x4000b6c	          0x4189d8	                            mov r8d, ebx	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b6f	            0x8b37	                    mov esi, dword [rdi]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b71	            0x89f2	                            mov edx, esi	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b73	          0xc1ea04	                              shr edx, 4	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b76	    0x81e2ffffff07	                      and edx, 0x7ffffff	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b7c	          0x4121d0	                            and r8d, edx	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b7f	          0x4439c3	                            cmp ebx, r8d	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b82	            0x75dc	                           jne 0x4000b60	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b84	          0x4421e2	                           and edx, r12d	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b87	    0x81e60f000080	                     and esi, 0x8000000f	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b8d	          0xc1e204	                              shl edx, 4	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b90	             0x9f2	                             or edx, esi	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b92	            0x8917	                    mov dword [rdi], edx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b94	        0x488b4908	                mov rcx, qword [rcx + 8]	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b98	          0x4885c9	                           test rcx, rcx	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b9b	            0x75cc	                           jne 0x4000b69	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b9d	    0x488b9c24c808	           mov rbx, qword [rsp + 0x8c8] 	       216	shallow.c	FUNCTION_6
0x4000ba5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       216	shallow.c	FUNCTION_6
0x4000bae	            0x753b	                           jne 0x4000beb	       216	shallow.c	FUNCTION_6
0x4000bb0	    0x4881c4d00800	                          add rsp, 0x8d0	       216	shallow.c	FUNCTION_6
0x4000bb7	              0x5b	                                 pop rbx	       216	shallow.c	FUNCTION_6
0x4000bb8	              0x5d	                                 pop rbp	       216	shallow.c	FUNCTION_6
0x4000bb9	            0x415c	                                 pop r12	       216	shallow.c	FUNCTION_6
0x4000bbb	            0x415d	                                 pop r13	       216	shallow.c	FUNCTION_6
0x4000bbd	            0x415e	                                 pop r14	       216	shallow.c	FUNCTION_6
0x4000bbf	              0xc3	                                     ret	       216	shallow.c	FUNCTION_6
0x4000bc0	            0x31ff	                            xor edi, edi	       179	shallow.c	FUNCTION_6	FOR_1
0x4000bc2	      0xe97cffffff	                           jmp 0x4000b43	       179	shallow.c	FUNCTION_6	FOR_1
0x4000bc7	        0x498d7d04	                      lea rdi, [r13 + 4]	       195	shallow.c	FUNCTION_6	FOR_2	CALL_10
0x4000bcb	      0xe800000000	                          call 0x4000bd0	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000bd0	      0xbf00000000	                              mov edi, 0	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000bd5	          0x4889c6	                            mov rsi, rax	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000bd8	            0x31c0	                            xor eax, eax	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000bda	      0xe800000000	                          call 0x4000bdf	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000bdf	      0xbf00000000	                              mov edi, 0	       175	shallow.c	FUNCTION_6	CALL_6
0x4000be4	            0x31c0	                            xor eax, eax	       175	shallow.c	FUNCTION_6	CALL_6
0x4000be6	      0xe800000000	                          call 0x4000beb	       175	shallow.c	FUNCTION_6	CALL_6
0x4000beb	      0xe800000000	          call sym.write_shallow_commits	       216	shallow.c	FUNCTION_6
add_ref	functions,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0:IF,1:FOR,0	53
0x40001d0	            0x4154	                                push r12	       643	shallow.c	FUNCTION_23
0x40001d2	              0x55	                                push rbp	       643	shallow.c	FUNCTION_23
0x40001d3	          0x4889f5	                            mov rbp, rsi	       643	shallow.c	FUNCTION_23
0x40001d6	              0x53	                                push rbx	       643	shallow.c	FUNCTION_23
0x40001d7	          0x4889cb	                            mov rbx, rcx	       643	shallow.c	FUNCTION_23
0x40001da	        0x48634908	            movsxd rcx, dword [rcx + 8] 	       645	shallow.c	FUNCTION_23	CALL_1
0x40001de	          0x8b430c	              mov eax, dword [rbx + 0xc]	       645	shallow.c	FUNCTION_23	CALL_1
0x40001e1	            0x39c1	                            cmp ecx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x40001e3	            0x7c7b	                            jl 0x4000260	       645	shallow.c	FUNCTION_23	CALL_1
0x40001e5	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       645	shallow.c	FUNCTION_23	CALL_1
0x40001e9	            0x89c2	                            mov edx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x40001eb	          0xc1ea1f	                           shr edx, 0x1f	       645	shallow.c	FUNCTION_23	CALL_1
0x40001ee	             0x1c2	                            add edx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x40001f0	            0xd1fa	                              sar edx, 1	       645	shallow.c	FUNCTION_23	CALL_1
0x40001f2	            0x39d1	                            cmp ecx, edx	       645	shallow.c	FUNCTION_23	CALL_1
0x40001f4	            0x7d62	                           jge 0x4000258	       645	shallow.c	FUNCTION_23	CALL_1
0x40001f6	          0x89530c	              mov dword [rbx + 0xc], edx	       645	shallow.c	FUNCTION_23	CALL_1
0x40001f9	          0x4863d2	                         movsxd rdx, edx	       645	shallow.c	FUNCTION_23	CALL_1
0x40001fc	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_66	IF_1
0x4000206	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_66	IF_1
0x4000209	            0x775a	                            ja 0x4000265	       795	git-compat-util.h	FUNCTION_66	IF_1
0x400020b	          0x488b3b	                    mov rdi, qword [rbx]	       645	shallow.c	FUNCTION_23	CALL_1
0x400020e	    0x488d34d50000	                        lea rsi, [rdx*8]	       645	shallow.c	FUNCTION_23	CALL_1
0x4000216	      0xe800000000	                          call 0x400021b	       645	shallow.c	FUNCTION_23	CALL_1
0x400021b	        0x48634b08	            movsxd rcx, dword [rbx + 8] 	       645	shallow.c	FUNCTION_23	CALL_1
0x400021f	          0x488903	                    mov qword [rbx], rax	       645	shallow.c	FUNCTION_23	CALL_1
0x4000222	        0x4c8d24c8	                  lea r12, [rax + rcx*8]	       646	shallow.c	FUNCTION_23	CALL_2
0x4000226	      0xbe01000000	                              mov esi, 1	       646	shallow.c	FUNCTION_23	CALL_2
0x400022b	          0x4889ef	                            mov rdi, rbp	       646	shallow.c	FUNCTION_23	CALL_2
0x400022e	      0xe800000000	                          call 0x4000233	       646	shallow.c	FUNCTION_23	CALL_2
0x4000233	        0x48634b08	            movsxd rcx, dword [rbx + 8] 	       647	shallow.c	FUNCTION_23	IF_1
0x4000237	        0x49890424	                    mov qword [r12], rax	       646	shallow.c	FUNCTION_23	CALL_2
0x400023b	          0x488b13	                    mov rdx, qword [rbx]	       647	shallow.c	FUNCTION_23	IF_1
0x400023e	      0x48833cca00	              cmp qword [rdx + rcx*8], 0	       647	shallow.c	FUNCTION_23	IF_1
0x4000243	          0x4889c8	                            mov rax, rcx	       647	shallow.c	FUNCTION_23	IF_1
0x4000246	            0x7406	                            je 0x400024e	       647	shallow.c	FUNCTION_23	IF_1
0x4000248	          0x83c001	                              add eax, 1	       648	shallow.c	FUNCTION_23	IF_1
0x400024b	          0x894308	                mov dword [rbx + 8], eax	       648	shallow.c	FUNCTION_23	IF_1
0x400024e	              0x5b	                                 pop rbx	       650	shallow.c	FUNCTION_23
0x400024f	            0x31c0	                            xor eax, eax	       650	shallow.c	FUNCTION_23
0x4000251	              0x5d	                                 pop rbp	       650	shallow.c	FUNCTION_23
0x4000252	            0x415c	                                 pop r12	       650	shallow.c	FUNCTION_23
0x4000254	              0xc3	                                     ret	       650	shallow.c	FUNCTION_23
0x4000255	           0xf1f00	                         nop dword [rax]	       650	shallow.c	FUNCTION_23
0x4000258	          0x8d5101	                      lea edx, [rcx + 1]	       645	shallow.c	FUNCTION_23	CALL_1
0x400025b	          0x89530c	              mov dword [rbx + 0xc], edx	       645	shallow.c	FUNCTION_23	CALL_1
0x400025e	            0xeb99	                           jmp 0x40001f9	       645	shallow.c	FUNCTION_23	CALL_1
0x4000260	          0x488b03	                    mov rax, qword [rbx]	       645	shallow.c	FUNCTION_23	CALL_1
0x4000263	            0xebbd	                           jmp 0x4000222	       645	shallow.c	FUNCTION_23	CALL_1
0x4000265	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x400026a	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x400026f	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4000271	      0xe800000000	                          call 0x4000276	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
clear_shallow_info	functions,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0:IF,0:FOR,0	7
0x4001070	              0x53	                                push rbx	       409	shallow.c	ELSE_1	FUNCTION_17
0x4001071	          0x4889fb	                            mov rbx, rdi	       409	shallow.c	ELSE_1	FUNCTION_17
0x4001074	        0x488b7f08	                mov rdi, qword [rdi + 8]	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x4001078	      0xe800000000	                          call 0x400107d	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x400107d	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x4001081	              0x5b	                                 pop rbx	       412	shallow.c	ELSE_1	FUNCTION_17
0x4001082	      0xe900000000	                           jmp 0x4001087	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
mark_uninteresting	functions,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0:IF,1:FOR,0	12
0x4000100	        0x4883ec08	                              sub rsp, 8	       535	shallow.c	FUNCTION_21
0x4000104	          0x4889f7	                            mov rdi, rsi	       535	shallow.c	FUNCTION_21
0x4000107	      0xbe01000000	                              mov esi, 1	       536	shallow.c	FUNCTION_21	CALL_1
0x400010c	      0xe800000000	                          call 0x4000111	       536	shallow.c	FUNCTION_21	CALL_1
0x4000111	          0x4885c0	                           test rax, rax	       537	shallow.c	FUNCTION_21	IF_1
0x4000114	            0x740b	                            je 0x4000121	       537	shallow.c	FUNCTION_21	IF_1
0x4000116	          0x830820	                    or dword [rax], 0x20	       539	shallow.c	FUNCTION_21
0x4000119	          0x4889c7	                            mov rdi, rax	       540	shallow.c	FUNCTION_21	CALL_2
0x400011c	      0xe800000000	                          call 0x4000121	       540	shallow.c	FUNCTION_21	CALL_2
0x4000121	            0x31c0	                            xor eax, eax	       542	shallow.c	FUNCTION_21
0x4000123	        0x4883c408	                              add rsp, 8	       542	shallow.c	FUNCTION_21
0x4000127	              0xc3	                                     ret	       542	shallow.c	FUNCTION_21
update_refstatus	functions,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:DO,0:IF,2:FOR,1	18
0x4000040	          0x4885ff	                           test rdi, rdi	       655	shallow.c	FUNCTION_24	IF_1
0x4000043	            0x7430	                            je 0x4000075	       655	shallow.c	FUNCTION_24	IF_1
0x4000045	            0x85f6	                           test esi, esi	       657	shallow.c	FUNCTION_24	FOR_1
0x4000047	            0x742c	                            je 0x4000075	       657	shallow.c	FUNCTION_24	FOR_1
0x4000049	            0x31c9	                            xor ecx, ecx	       657	shallow.c	FUNCTION_24	FOR_1
0x400004b	    0x41b901000000	                              mov r9d, 1	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000051	     0xf1f80000000	                         nop dword [rax]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000058	            0x89c8	                            mov eax, ecx	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400005a	          0x4589c8	                            mov r8d, r9d	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400005d	          0xc1e805	                              shr eax, 5	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000060	          0x41d3e0	                             shl r8d, cl	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000063	        0x44850482	          test dword [rdx + rax*4], r8d 	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000067	            0x7404	                            je 0x400006d	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000069	        0x83048f01	              add dword [rdi + rcx*4], 1	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400006d	        0x4883c101	                              add rcx, 1	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000071	            0x39ce	                            cmp esi, ecx	       657	shallow.c	FUNCTION_24	FOR_1
0x4000073	            0x77e3	                            ja 0x4000058	       657	shallow.c	FUNCTION_24	FOR_1
0x4000075	            0xf3c3	                                     ret	       657	shallow.c	FUNCTION_24	FOR_1
prepare_shallow_info	functions,0:WHILE,0:CALL,4:ELSE,1:SWITCH,0:DO,0:IF,3:FOR,1	94
0x4000f10	            0x4155	                                push r13	       387	shallow.c	FUNCTION_16
0x4000f12	            0x4154	                                push r12	       387	shallow.c	FUNCTION_16
0x4000f14	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f1e	              0x55	                                push rbp	       387	shallow.c	FUNCTION_16
0x4000f1f	              0x53	                                push rbx	       387	shallow.c	FUNCTION_16
0x4000f20	    0x48ba00000000	                 movabs rdx, 0x100000000	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f2a	          0x4889fd	                            mov rbp, rdi	       387	shallow.c	FUNCTION_16
0x4000f2d	          0x4989f5	                            mov r13, rsi	       387	shallow.c	FUNCTION_16
0x4000f30	        0x4883ec08	                              sub rsp, 8	       387	shallow.c	FUNCTION_16
0x4000f34	    0x482305000000	             and rax, qword [0x04000f3b]	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f3b	          0x4839d0	                            cmp rax, rdx	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f3e	            0x741b	                            je 0x4000f5b	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f40	      0xb900000000	                              mov ecx, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f45	      0xba00000000	                              mov edx, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f4a	      0xbe85010000	                          mov esi, 0x185	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f4f	      0xbf00000000	                              mov edi, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f54	            0x31c0	                            xor eax, eax	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f56	      0xe800000000	                          call 0x4000f5b	       389	shallow.c	FUNCTION_16	CALL_1
0x4000f5b	        0x488d7d08	                      lea rdi, [rbp + 8]	        90	string3.h	FUNCTION_82	CALL_6
0x4000f5f	          0x4889e9	                            mov rcx, rbp	        90	string3.h	FUNCTION_82	CALL_6
0x4000f62	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_82	CALL_6
0x4000f64	    0x48c745580000	               mov qword [rbp + 0x58], 0	        90	string3.h	FUNCTION_82	CALL_6
0x4000f6c	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_82	CALL_6
0x4000f70	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_82	CALL_6
0x4000f73	          0x83c160	                           add ecx, 0x60	        90	string3.h	FUNCTION_82	CALL_6
0x4000f76	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_82	CALL_6
0x4000f79	          0x4d85ed	                           test r13, r13	       392	shallow.c	FUNCTION_16	IF_1
0x4000f7c	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_82	CALL_6
0x4000f7f	        0x4c896d00	                    mov qword [rbp], r13	       391	shallow.c	FUNCTION_16
0x4000f83	     0xf84bb000000	                            je 0x4001044	       392	shallow.c	FUNCTION_16	IF_1
0x4000f89	        0x49635508	            movsxd rdx, dword [r13 + 8] 	       394	shallow.c	FUNCTION_16
0x4000f8d	    0x48bbffffffff	         movabs rbx, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_66	IF_1
0x4000f97	          0x4839da	                            cmp rdx, rbx	       795	git-compat-util.h	FUNCTION_66	IF_1
0x4000f9a	     0xf87af000000	                            ja 0x400104f	       795	git-compat-util.h	FUNCTION_66	IF_1
0x4000fa0	    0x488d3c950000	                        lea rdi, [rdx*4]	       394	shallow.c	FUNCTION_16
0x4000fa8	      0xe800000000	                          call 0x4000fad	       394	shallow.c	FUNCTION_16
0x4000fad	        0x49635508	            movsxd rdx, dword [r13 + 8] 	       395	shallow.c	FUNCTION_16
0x4000fb1	        0x48894508	                mov qword [rbp + 8], rax	       394	shallow.c	FUNCTION_16
0x4000fb5	          0x4839da	                            cmp rdx, rbx	       795	git-compat-util.h	FUNCTION_66	IF_1
0x4000fb8	     0xf87a0000000	                            ja 0x400105e	       795	git-compat-util.h	FUNCTION_66	IF_1
0x4000fbe	    0x488d3c950000	                        lea rdi, [rdx*4]	       395	shallow.c	FUNCTION_16
0x4000fc6	      0xe800000000	                          call 0x4000fcb	       395	shallow.c	FUNCTION_16
0x4000fcb	        0x418b5508	                mov edx, dword [r13 + 8]	       396	shallow.c	FUNCTION_16	FOR_1
0x4000fcf	        0x48894518	            mov qword [rbp + 0x18], rax 	       395	shallow.c	FUNCTION_16
0x4000fd3	            0x85d2	                           test edx, edx	       396	shallow.c	FUNCTION_16	FOR_1
0x4000fd5	            0x7e6d	                           jle 0x4001044	       396	shallow.c	FUNCTION_16	FOR_1
0x4000fd7	          0x4531e4	                          xor r12d, r12d	       396	shallow.c	FUNCTION_16	FOR_1
0x4000fda	            0x31db	                            xor ebx, ebx	       396	shallow.c	FUNCTION_16	FOR_1
0x4000fdc	            0xeb20	                           jmp 0x4000ffe	       396	shallow.c	FUNCTION_16	FOR_1
0x4000fde	            0x6690	                                     nop	       396	shallow.c	FUNCTION_16	FOR_1
0x4000fe0	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000fe4	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000fe8	          0x8d4801	                      lea ecx, [rax + 1]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000feb	          0x894d20	            mov dword [rbp + 0x20], ecx 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000fee	          0x891c82	            mov dword [rdx + rax*4], ebx	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000ff1	          0x83c301	                              add ebx, 1	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ff4	        0x4983c414	                           add r12, 0x14	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ff8	        0x41395d08	                cmp dword [r13 + 8], ebx	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ffc	            0x7e46	                           jle 0x4001044	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ffe	          0x4c89e7	                            mov rdi, r12	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4001001	        0x49037d00	                    add rdi, qword [r13]	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4001005	      0xe800000000	                          call 0x400100a	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x400100a	            0x85c0	                           test eax, eax	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x400100c	            0x74d2	                            je 0x4000fe0	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x400100e	          0x4c89e7	                            mov rdi, r12	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_4
0x4001011	        0x49037d00	                    add rdi, qword [r13]	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_4
0x4001015	      0xe800000000	                          call 0x400101a	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_4
0x400101a	          0x4885c0	                           test rax, rax	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x400101d	            0x7407	                            je 0x4001026	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x400101f	          0x8b4014	            mov eax, dword [rax + 0x14] 	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4001022	            0x85c0	                           test eax, eax	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4001024	            0x78cb	                            js 0x4000ff1	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4001026	        0x48634510	         movsxd rax, dword [rbp + 0x10] 	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x400102a	        0x488b5508	                mov rdx, qword [rbp + 8]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x400102e	        0x4983c414	                           add r12, 0x14	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4001032	          0x8d4801	                      lea ecx, [rax + 1]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4001035	          0x894d10	            mov dword [rbp + 0x10], ecx 	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4001038	          0x891c82	            mov dword [rdx + rax*4], ebx	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x400103b	          0x83c301	                              add ebx, 1	       396	shallow.c	FUNCTION_16	FOR_1
0x400103e	        0x41395d08	                cmp dword [r13 + 8], ebx	       396	shallow.c	FUNCTION_16	FOR_1
0x4001042	            0x7fba	                            jg 0x4000ffe	       396	shallow.c	FUNCTION_16	FOR_1
0x4001044	        0x4883c408	                              add rsp, 8	       406	shallow.c	FUNCTION_16	ELSE_1
0x4001048	              0x5b	                                 pop rbx	       406	shallow.c	FUNCTION_16	ELSE_1
0x4001049	              0x5d	                                 pop rbp	       406	shallow.c	FUNCTION_16	ELSE_1
0x400104a	            0x415c	                                 pop r12	       406	shallow.c	FUNCTION_16	ELSE_1
0x400104c	            0x415d	                                 pop r13	       406	shallow.c	FUNCTION_16	ELSE_1
0x400104e	              0xc3	                                     ret	       406	shallow.c	FUNCTION_16	ELSE_1
0x400104f	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4001054	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4001059	      0xe800000000	                          call 0x400105e	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x400105e	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4001063	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4001068	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x400106a	      0xe800000000	                          call 0x400106f	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
write_one_shallow	functions,0:WHILE,0:CALL,6:ELSE,1:SWITCH,0:DO,0:IF,5:FOR,0	81
0x4000350	            0x4154	                                push r12	       238	shallow.c	FUNCTION_8
0x4000352	              0x55	                                push rbp	       238	shallow.c	FUNCTION_8
0x4000353	          0x4889f5	                            mov rbp, rsi	       238	shallow.c	FUNCTION_8
0x4000356	              0x53	                                push rbx	       238	shallow.c	FUNCTION_8
0x4000357	          0x4889fb	                            mov rbx, rdi	       238	shallow.c	FUNCTION_8
0x400035a	      0xe800000000	                          call 0x400035f	       240	shallow.c	FUNCTION_8	CALL_1
0x400035f	        0x837b14ff	cmp dword [rbx + 0x14], 0xffffffffffffffff	       241	shallow.c	FUNCTION_8	IF_1
0x4000363	            0x740b	                            je 0x4000370	       241	shallow.c	FUNCTION_8	IF_1
0x4000365	              0x5b	                                 pop rbx	       260	shallow.c	FUNCTION_8
0x4000366	            0x31c0	                            xor eax, eax	       260	shallow.c	FUNCTION_8
0x4000368	              0x5d	                                 pop rbp	       260	shallow.c	FUNCTION_8
0x4000369	            0x415c	                                 pop r12	       260	shallow.c	FUNCTION_8
0x400036b	              0xc3	                                     ret	       260	shallow.c	FUNCTION_8
0x400036c	         0xf1f4000	                         nop dword [rax]	       260	shallow.c	FUNCTION_8
0x4000370	        0xf6451001	               test byte [rbp + 0x10], 1	       243	shallow.c	FUNCTION_8	IF_2
0x4000374	          0x4989c4	                            mov r12, rax	       243	shallow.c	FUNCTION_8	IF_2
0x4000377	     0xf858b000000	                           jne 0x4000408	       243	shallow.c	FUNCTION_8	IF_2
0x400037d	          0x8b4508	                mov eax, dword [rbp + 8]	       253	shallow.c	FUNCTION_8	IF_5
0x4000380	        0x83450c01	                add dword [rbp + 0xc], 1	       252	shallow.c	FUNCTION_8
0x4000384	            0x85c0	                           test eax, eax	       253	shallow.c	FUNCTION_8	IF_5
0x4000386	            0x7560	                           jne 0x40003e8	       253	shallow.c	FUNCTION_8	IF_5
0x4000388	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_106	CALL_2
0x400038b	      0xe800000000	                          call 0x4000390	       279	strbuf.h	FUNCTION_106	CALL_2
0x4000390	        0x488b7d00	                    mov rdi, qword [rbp]	       279	strbuf.h	FUNCTION_106	CALL_2
0x4000394	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_106	CALL_2
0x4000397	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_106	CALL_2
0x400039a	      0xe800000000	                          call 0x400039f	       279	strbuf.h	FUNCTION_106	CALL_2
0x400039f	        0x488b5d00	                    mov rbx, qword [rbp]	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x40003a3	          0x488b03	                    mov rax, qword [rbx]	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x40003a6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_103
0x40003a9	     0xf85a1000000	                           jne 0x4000450	       141	strbuf.h	FUNCTION_103
0x40003af	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_105	CALL_2
0x40003b4	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_105	CALL_2
0x40003b7	      0xe800000000	                          call 0x40003bc	       228	strbuf.h	FUNCTION_105	CALL_2
0x40003bc	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_105	CALL_2
0x40003c0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_105
0x40003c4	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_105
0x40003c8	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_105
0x40003cc	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_105
0x40003d0	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_105
0x40003d4	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_105
0x40003d8	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_105
0x40003dc	            0x31c0	                            xor eax, eax	       260	shallow.c	FUNCTION_8
0x40003de	              0x5b	                                 pop rbx	       260	shallow.c	FUNCTION_8
0x40003df	              0x5d	                                 pop rbp	       260	shallow.c	FUNCTION_8
0x40003e0	            0x415c	                                 pop r12	       260	shallow.c	FUNCTION_8
0x40003e2	              0xc3	                                     ret	       260	shallow.c	FUNCTION_8
0x40003e3	       0xf1f440000	                   nop dword [rax + rax]	       260	shallow.c	FUNCTION_8
0x40003e8	        0x488b7d00	                    mov rdi, qword [rbp]	       254	shallow.c	FUNCTION_8	CALL_4
0x40003ec	          0x4c89e2	                            mov rdx, r12	       254	shallow.c	FUNCTION_8	CALL_4
0x40003ef	            0x31c0	                            xor eax, eax	       254	shallow.c	FUNCTION_8	CALL_4
0x40003f1	      0xbe00000000	                              mov esi, 0	       254	shallow.c	FUNCTION_8	CALL_4
0x40003f6	      0xe800000000	                          call 0x40003fb	       254	shallow.c	FUNCTION_8	CALL_4
0x40003fb	              0x5b	                                 pop rbx	       260	shallow.c	FUNCTION_8
0x40003fc	            0x31c0	                            xor eax, eax	       260	shallow.c	FUNCTION_8
0x40003fe	              0x5d	                                 pop rbp	       260	shallow.c	FUNCTION_8
0x40003ff	            0x415c	                                 pop r12	       260	shallow.c	FUNCTION_8
0x4000401	              0xc3	                                     ret	       260	shallow.c	FUNCTION_8
0x4000402	    0x660f1f440000	                    nop word [rax + rax]	       260	shallow.c	FUNCTION_8
0x4000408	          0x4889df	                            mov rdi, rbx	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0x400040b	      0xe800000000	                          call 0x4000410	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0x4000410	          0x4885c0	                           test rax, rax	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000413	            0x7409	                            je 0x400041e	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000415	          0xf60010	                   test byte [rax], 0x10	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000418	     0xf855fffffff	                           jne 0x400037d	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x400041e	        0xf6451002	               test byte [rbp + 0x10], 2	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000422	     0xf843dffffff	                            je 0x4000365	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000428	        0x488d7804	                      lea rdi, [rax + 4]	       248	shallow.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400042c	      0xe800000000	                          call 0x4000431	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000431	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_15
0x4000436	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_15
0x4000439	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_15
0x400043e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_15
0x4000440	      0xe800000000	                          call 0x4000445	       104	stdio2.h	CALL_15
0x4000445	      0xe91bffffff	                           jmp 0x4000365	       104	stdio2.h	CALL_15
0x400044a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_15
0x4000450	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_103
0x4000454	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_105	IF_1	CALL_1
0x4000458	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_105	IF_1	CALL_1
0x400045b	     0xf855fffffff	                           jne 0x40003c0	       227	strbuf.h	FUNCTION_105	IF_1	CALL_1
0x4000461	      0xe949ffffff	                           jmp 0x40003af	       227	strbuf.h	FUNCTION_105	IF_1	CALL_1
get_shallow_commits	functions,0:WHILE,1:CALL,9:ELSE,3:SWITCH,0:DO,0:IF,8:FOR,1	171
0x4000760	            0x4157	                                push r15	        79	shallow.c	FUNCTION_4
0x4000762	            0x4156	                                push r14	        79	shallow.c	FUNCTION_4
0x4000764	          0x4531ff	                          xor r15d, r15d	        80	shallow.c	FUNCTION_4
0x4000767	            0x4155	                                push r13	        79	shallow.c	FUNCTION_4
0x4000769	            0x4154	                                push r12	        79	shallow.c	FUNCTION_4
0x400076b	          0x4189d5	                           mov r13d, edx	        79	shallow.c	FUNCTION_4
0x400076e	              0x55	                                push rbp	        79	shallow.c	FUNCTION_4
0x400076f	              0x53	                                push rbx	        79	shallow.c	FUNCTION_4
0x4000770	            0x89f5	                            mov ebp, esi	        79	shallow.c	FUNCTION_4
0x4000772	          0x4531f6	                          xor r14d, r14d	        83	shallow.c	FUNCTION_4
0x4000775	          0x4531e4	                          xor r12d, r12d	        80	shallow.c	FUNCTION_4
0x4000778	        0x4883ec48	                           sub rsp, 0x48	        79	shallow.c	FUNCTION_4
0x400077c	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	shallow.c	FUNCTION_4
0x4000785	      0x4889442438	             mov qword [rsp + 0x38], rax	        79	shallow.c	FUNCTION_4
0x400078a	            0x31c0	                            xor eax, eax	        79	shallow.c	FUNCTION_4
0x400078c	      0x48897c2408	                mov qword [rsp + 8], rdi	        79	shallow.c	FUNCTION_4
0x4000791	        0x894c2404	                mov dword [rsp + 4], ecx	        79	shallow.c	FUNCTION_4
0x4000795	    0x48c744241800	               mov qword [rsp + 0x18], 0	        81	shallow.c	FUNCTION_4
0x400079e	    0xc74424200000	               mov dword [rsp + 0x20], 0	        82	shallow.c	FUNCTION_4
0x40007a6	    0xc74424240000	               mov dword [rsp + 0x24], 0	        82	shallow.c	FUNCTION_4
0x40007ae	    0x48c744242800	               mov qword [rsp + 0x28], 0	        82	shallow.c	FUNCTION_4
0x40007b7	    0x660f1f840000	                    nop word [rax + rax]	        82	shallow.c	FUNCTION_4
0x40007c0	          0x4d85f6	                           test r14, r14	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007c3	            0x7444	                            je 0x4000809	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007c5	        0x4183c701	                             add r15d, 1	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007c9	          0x4c89f7	                            mov rdi, r14	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x40007cc	      0xe800000000	                          call 0x40007d1	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x40007d1	    0x81fdffffff7f	                     cmp ebp, 0x7fffffff	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40007d7	            0x7477	                            je 0x4000850	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40007d9	          0x4439fd	                           cmp ebp, r15d	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40007dc	            0x7f72	                            jg 0x4000850	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40007de	      0x488d742418	                   lea rsi, [rsp + 0x18]	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x40007e3	          0x4c89f7	                            mov rdi, r14	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x40007e6	      0xe800000000	                          call 0x40007eb	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x40007eb	          0x418b06	                    mov eax, dword [r14]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40007ee	            0x89c2	                            mov edx, eax	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40007f0	      0x250f000080	                     and eax, 0x8000000f	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40007f5	          0xc1ea04	                              shr edx, 4	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40007f8	          0x4409ea	                            or edx, r13d	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40007fb	    0x81e2ffffff07	                      and edx, 0x7ffffff	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000801	          0xc1e204	                              shl edx, 4	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000804	             0x9d0	                             or eax, edx	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000806	          0x418906	                    mov dword [r14], eax	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000809	      0x488b442408	                mov rax, qword [rsp + 8]	        86	shallow.c	FUNCTION_4	WHILE_1
0x400080e	          0x443920	                   cmp dword [rax], r12d	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000811	     0xf873f010000	                            ja 0x4000956	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000817	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        86	shallow.c	FUNCTION_4	WHILE_1
0x400081b	            0x85c0	                           test eax, eax	        86	shallow.c	FUNCTION_4	WHILE_1
0x400081d	     0xf8493010000	                            je 0x40009b6	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000823	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000828	      0xe800000000	                          call 0x400082d	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x400082d	          0x4989c6	                            mov r14, rax	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000830	        0x488b4018	            mov rax, qword [rax + 0x18] 	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000834	          0x4c89f7	                            mov rdi, r14	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x4000837	          0x448b00	                    mov r8d, dword [rax]	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x400083a	        0x458d7801	                      lea r15d, [r8 + 1]	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x400083e	      0xe800000000	                          call 0x4000843	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x4000843	    0x81fdffffff7f	                     cmp ebp, 0x7fffffff	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000849	            0x758e	                           jne 0x40007d9	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400084b	       0xf1f440000	                   nop dword [rax + rax]	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000850	      0xe800000000	                          call 0x4000855	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000855	            0x85c0	                           test eax, eax	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000857	        0x498b5e30	            mov rbx, qword [r14 + 0x30] 	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x400085b	     0xf84bf000000	                            je 0x4000920	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000861	          0x4885db	                           test rbx, rbx	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000864	     0xf848f000000	                            je 0x40008f9	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x400086a	          0x418b06	                    mov eax, dword [r14]	       117	shallow.c	FUNCTION_4	WHILE_1
0x400086d	            0x89c2	                            mov edx, eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x400086f	      0x250f000080	                     and eax, 0x8000000f	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000874	          0xc1ea04	                              shr edx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000877	         0xb542404	                 or edx, dword [rsp + 4]	       117	shallow.c	FUNCTION_4	WHILE_1
0x400087b	    0x81e2ffffff07	                      and edx, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000881	          0xc1e204	                              shl edx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000884	             0x9d0	                             or eax, edx	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000886	          0x418906	                    mov dword [r14], eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000889	            0xeb21	                           jmp 0x40008ac	       117	shallow.c	FUNCTION_4	WHILE_1
0x400088b	       0xf1f440000	                   nop dword [rax + rax]	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000890	      0x488d542420	                   lea rdx, [rsp + 0x20]	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x4000895	            0x31f6	                            xor esi, esi	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x4000897	          0x4c89f7	                            mov rdi, r14	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x400089a	      0xe800000000	                          call 0x400089f	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x400089f	        0x488b5b08	                mov rbx, qword [rbx + 8]	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x40008a3	          0x4885db	                           test rbx, rbx	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x40008a6	     0xf845dffffff	                            je 0x4000809	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x40008ac	          0x488b3b	                    mov rdi, qword [rbx]	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x40008af	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x40008b3	          0x4885d2	                           test rdx, rdx	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x40008b6	            0x7428	                            je 0x40008e0	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x40008b8	          0x44393a	                   cmp dword [rdx], r15d	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x40008bb	            0x7ee2	                           jle 0x400089f	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x40008bd	          0x44893a	                   mov dword [rdx], r15d	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x40008c0	          0x4989fe	                            mov r14, rdi	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x40008c3	      0x48837b0800	                  cmp qword [rbx + 8], 0	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x40008c8	            0x75c6	                           jne 0x4000890	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x40008ca	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40008ce	          0x448b38	                   mov r15d, dword [rax]	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40008d1	      0xe9eafeffff	                           jmp 0x40007c0	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40008d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40008e0	      0xbf04000000	                              mov edi, 4	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x40008e5	      0xe800000000	                          call 0x40008ea	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x40008ea	          0x488b3b	                    mov rdi, qword [rbx]	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x40008ed	        0x48894718	             mov qword [rdi + 0x18], rax	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x40008f1	          0x4989fe	                            mov r14, rdi	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x40008f4	          0x448938	                   mov dword [rax], r15d	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x40008f7	            0xebca	                           jmp 0x40008c3	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x40008f9	        0x498d7e04	                      lea rdi, [r14 + 4]	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x40008fd	      0xe800000000	                          call 0x4000902	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000902	          0x4885c0	                           test rax, rax	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000905	            0x740b	                            je 0x4000912	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000907	          0x8b5014	            mov edx, dword [rax + 0x14] 	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x400090a	            0x85d2	                           test edx, edx	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x400090c	     0xf88ccfeffff	                            js 0x40007de	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000912	        0x498b5e30	            mov rbx, qword [r14 + 0x30] 	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000916	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000920	          0x418b06	                    mov eax, dword [r14]	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000923	            0x89c2	                            mov edx, eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000925	      0x250f000080	                     and eax, 0x8000000f	       117	shallow.c	FUNCTION_4	WHILE_1
0x400092a	          0xc1ea04	                              shr edx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x400092d	         0xb542404	                 or edx, dword [rsp + 4]	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000931	    0x81e2ffffff07	                      and edx, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000937	          0xc1e204	                              shl edx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x400093a	             0x9d0	                             or eax, edx	       117	shallow.c	FUNCTION_4	WHILE_1
0x400093c	          0x4885db	                           test rbx, rbx	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x400093f	          0x418906	                    mov dword [r14], eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000942	     0xf8564ffffff	                           jne 0x40008ac	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000948	      0x488b442408	                mov rax, qword [rsp + 8]	        86	shallow.c	FUNCTION_4	WHILE_1
0x400094d	          0x443920	                   cmp dword [rax], r12d	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000950	     0xf86c1feffff	                           jbe 0x4000817	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000956	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x400095b	      0x418d5c2401	                      lea ebx, [r12 + 1]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000960	        0x49c1e405	                              shl r12, 5	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000964	          0x4c89e0	                            mov rax, r12	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000967	            0x31d2	                            xor edx, edx	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x4000969	            0x31f6	                            xor esi, esi	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x400096b	        0x48034108	                add rax, qword [rcx + 8]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x400096f	          0x488b38	                    mov rdi, qword [rax]	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x4000972	      0xe800000000	                          call 0x4000977	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x4000977	          0x4885c0	                           test rax, rax	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x400097a	          0x4989c6	                            mov r14, rax	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x400097d	            0x742f	                            je 0x40009ae	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x400097f	        0x410fb606	                   movzx eax, byte [r14]	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x4000983	          0x4c63e3	                         movsxd r12, ebx	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000986	          0x83e00e	                            and eax, 0xe	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x4000989	            0x3c02	                               cmp al, 2	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x400098b	     0xf8578feffff	                           jne 0x4000809	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x4000991	        0x498b4618	            mov rax, qword [r14 + 0x18] 	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x4000995	          0x4885c0	                           test rax, rax	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x4000998	            0x7440	                            je 0x40009da	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x400099a	    0xc70000000000	                      mov dword [rax], 0	        98	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40009a0	          0x4c63e3	                         movsxd r12, ebx	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40009a3	    0x41bf01000000	                             mov r15d, 1	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40009a9	      0xe91bfeffff	                           jmp 0x40007c9	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40009ae	          0x4c63e3	                         movsxd r12, ebx	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40009b1	      0xe953feffff	                           jmp 0x4000809	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40009b6	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       140	shallow.c	FUNCTION_4
0x40009bb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       140	shallow.c	FUNCTION_4
0x40009c4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       140	shallow.c	FUNCTION_4
0x40009c9	            0x751f	                           jne 0x40009ea	       140	shallow.c	FUNCTION_4
0x40009cb	        0x4883c448	                           add rsp, 0x48	       140	shallow.c	FUNCTION_4
0x40009cf	              0x5b	                                 pop rbx	       140	shallow.c	FUNCTION_4
0x40009d0	              0x5d	                                 pop rbp	       140	shallow.c	FUNCTION_4
0x40009d1	            0x415c	                                 pop r12	       140	shallow.c	FUNCTION_4
0x40009d3	            0x415d	                                 pop r13	       140	shallow.c	FUNCTION_4
0x40009d5	            0x415e	                                 pop r14	       140	shallow.c	FUNCTION_4
0x40009d7	            0x415f	                                 pop r15	       140	shallow.c	FUNCTION_4
0x40009d9	              0xc3	                                     ret	       140	shallow.c	FUNCTION_4
0x40009da	      0xbf04000000	                              mov edi, 4	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x40009df	      0xe800000000	                          call 0x40009e4	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x40009e4	        0x49894618	             mov qword [r14 + 0x18], rax	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x40009e8	            0xebb0	                           jmp 0x400099a	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x40009ea	      0xe800000000	                          call 0x40009ef	       140	shallow.c	FUNCTION_4
