cmd_write_tree	CALL,13:SWITCH,1:FOR,0:ELSE,0:WHILE,0:functions,0:DO,0:IF,0	89
0x4000040	            0x4154	                                push r12	        19	write-tree.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	        19	write-tree.c	FUNCTION_1
0x4000043	      0xb920000000	                           mov ecx, 0x20	        24	write-tree.c	FUNCTION_1
0x4000048	              0x53	                                push rbx	        19	write-tree.c	FUNCTION_1
0x4000049	            0x89fb	                            mov ebx, edi	        19	write-tree.c	FUNCTION_1
0x400004b	          0x4989d4	                            mov r12, rdx	        19	write-tree.c	FUNCTION_1
0x400004e	          0x4889f5	                            mov rbp, rsi	        19	write-tree.c	FUNCTION_1
0x4000051	            0x31f6	                            xor esi, esi	        37	write-tree.c	FUNCTION_1	CALL_7
0x4000053	    0x4881ec400100	                          sub rsp, 0x140	        19	write-tree.c	FUNCTION_1
0x400005a	    0x64488b042528	                mov rax, qword fs:[0x28]	        19	write-tree.c	FUNCTION_1
0x4000063	    0x488984243801	            mov qword [rsp + 0x138], rax	        19	write-tree.c	FUNCTION_1
0x400006b	            0x31c0	                            xor eax, eax	        19	write-tree.c	FUNCTION_1
0x400006d	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        24	write-tree.c	FUNCTION_1
0x4000072	      0x488d542408	                      lea rdx, [rsp + 8]	        24	write-tree.c	FUNCTION_1
0x4000077	    0xc74424040000	                  mov dword [rsp + 4], 0	        20	write-tree.c	FUNCTION_1
0x400007f	    0x48c744240800	                  mov qword [rsp + 8], 0	        21	write-tree.c	FUNCTION_1
0x4000088	          0xf348ab	              rep stosq qword [rdi], rax	        24	write-tree.c	FUNCTION_1
0x400008b	      0x488d442404	                      lea rax, [rsp + 4]	        24	write-tree.c	FUNCTION_1
0x4000090	      0xbf00000000	                              mov edi, 0	        37	write-tree.c	FUNCTION_1	CALL_7
0x4000095	    0x488994248000	             mov qword [rsp + 0x80], rdx	        24	write-tree.c	FUNCTION_1
0x400009d	    0xc74424300400	               mov dword [rsp + 0x30], 4	        24	write-tree.c	FUNCTION_1
0x40000a5	    0x48c744243800	               mov qword [rsp + 0x38], 0	        24	write-tree.c	FUNCTION_1
0x40000ae	      0x4889442440	             mov qword [rsp + 0x40], rax	        24	write-tree.c	FUNCTION_1
0x40000b3	    0x48898424c000	             mov qword [rsp + 0xc0], rax	        24	write-tree.c	FUNCTION_1
0x40000bb	    0x48c744245000	               mov qword [rsp + 0x50], 0	        24	write-tree.c	FUNCTION_1
0x40000c4	    0xc74424580200	               mov dword [rsp + 0x58], 2	        24	write-tree.c	FUNCTION_1
0x40000cc	    0x48c744246801	               mov qword [rsp + 0x68], 1	        24	write-tree.c	FUNCTION_1
0x40000d5	    0xc74424700900	               mov dword [rsp + 0x70], 9	        24	write-tree.c	FUNCTION_1
0x40000dd	    0x48c744247800	               mov qword [rsp + 0x78], 0	        24	write-tree.c	FUNCTION_1
0x40000e6	    0x48c784248800	               mov qword [rsp + 0x88], 0	        24	write-tree.c	FUNCTION_1
0x40000f2	    0x48c784249000	               mov qword [rsp + 0x90], 0	        24	write-tree.c	FUNCTION_1
0x40000fe	    0xc78424980000	           mov dword [rsp + 0x98], 0x40 	        24	write-tree.c	FUNCTION_1
0x4000109	    0xc78424b00000	               mov dword [rsp + 0xb0], 4	        24	write-tree.c	FUNCTION_1
0x4000114	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	        24	write-tree.c	FUNCTION_1
0x4000120	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	        24	write-tree.c	FUNCTION_1
0x400012c	    0xc78424d80000	             mov dword [rsp + 0xd8], 0xa	        24	write-tree.c	FUNCTION_1
0x4000137	    0x48c78424e800	               mov qword [rsp + 0xe8], 2	        24	write-tree.c	FUNCTION_1
0x4000143	      0xe800000000	                          call 0x4000148	        37	write-tree.c	FUNCTION_1	CALL_7
0x4000148	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	        38	write-tree.c	FUNCTION_1	CALL_8
0x400014d	          0x4531c9	                            xor r9d, r9d	        38	write-tree.c	FUNCTION_1	CALL_8
0x4000150	    0x41b800000000	                              mov r8d, 0	        38	write-tree.c	FUNCTION_1	CALL_8
0x4000156	          0x4c89e2	                            mov rdx, r12	        38	write-tree.c	FUNCTION_1	CALL_8
0x4000159	          0x4889ee	                            mov rsi, rbp	        38	write-tree.c	FUNCTION_1	CALL_8
0x400015c	            0x89df	                            mov edi, ebx	        38	write-tree.c	FUNCTION_1	CALL_8
0x400015e	      0xe800000000	                          call 0x4000163	        38	write-tree.c	FUNCTION_1	CALL_8
0x4000163	      0x488b542408	                mov rdx, qword [rsp + 8]	        41	write-tree.c	FUNCTION_1	CALL_9
0x4000168	        0x8b742404	                mov esi, dword [rsp + 4]	        41	write-tree.c	FUNCTION_1	CALL_9
0x400016c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        41	write-tree.c	FUNCTION_1	CALL_9
0x4000171	      0xe800000000	                          call 0x4000176	        41	write-tree.c	FUNCTION_1	CALL_9
0x4000176	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	        42	write-tree.c	FUNCTION_1	SWITCH_1
0x4000179	            0x747d	                            je 0x40001f8	        42	write-tree.c	FUNCTION_1	SWITCH_1
0x400017b	            0x89c3	                            mov ebx, eax	        42	write-tree.c	FUNCTION_1	SWITCH_1
0x400017d	            0x7e59	                           jle 0x40001d8	        42	write-tree.c	FUNCTION_1	SWITCH_1
0x400017f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        42	write-tree.c	FUNCTION_1	SWITCH_1
0x4000182	            0x743c	                            je 0x40001c0	        42	write-tree.c	FUNCTION_1	SWITCH_1
0x4000184	            0x85c0	                           test eax, eax	        42	write-tree.c	FUNCTION_1	SWITCH_1
0x4000186	            0x7512	                           jne 0x400019a	        42	write-tree.c	FUNCTION_1	SWITCH_1
0x4000188	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        44	write-tree.c	FUNCTION_1	SWITCH_1	CALL_10
0x400018d	      0xe800000000	                          call 0x4000192	        44	write-tree.c	FUNCTION_1	SWITCH_1	CALL_10
0x4000192	          0x4889c7	                            mov rdi, rax	       104	stdio2.h	CALL_13
0x4000195	      0xe800000000	                          call 0x400019a	       104	stdio2.h	CALL_13
0x400019a	    0x488bb4243801	           mov rsi, qword [rsp + 0x138] 	        57	write-tree.c	FUNCTION_1
0x40001a2	    0x644833342528	                xor rsi, qword fs:[0x28]	        57	write-tree.c	FUNCTION_1
0x40001ab	            0x89d8	                            mov eax, ebx	        57	write-tree.c	FUNCTION_1
0x40001ad	            0x755a	                           jne 0x4000209	        57	write-tree.c	FUNCTION_1
0x40001af	    0x4881c4400100	                          add rsp, 0x140	        57	write-tree.c	FUNCTION_1
0x40001b6	              0x5b	                                 pop rbx	        57	write-tree.c	FUNCTION_1
0x40001b7	              0x5d	                                 pop rbp	        57	write-tree.c	FUNCTION_1
0x40001b8	            0x415c	                                 pop r12	        57	write-tree.c	FUNCTION_1
0x40001ba	              0xc3	                                     ret	        57	write-tree.c	FUNCTION_1
0x40001bb	       0xf1f440000	                   nop dword [rax + rax]	        57	write-tree.c	FUNCTION_1
0x40001c0	      0xbe00000000	                              mov esi, 0	        47	write-tree.c	FUNCTION_1	SWITCH_1	CALL_11
0x40001c5	      0xbf00000000	                              mov edi, 0	        47	write-tree.c	FUNCTION_1	SWITCH_1	CALL_11
0x40001ca	            0x31c0	                            xor eax, eax	        47	write-tree.c	FUNCTION_1	SWITCH_1	CALL_11
0x40001cc	      0xe800000000	                          call 0x40001d1	        47	write-tree.c	FUNCTION_1	SWITCH_1	CALL_11
0x40001d1	     0xf1f80000000	                         nop dword [rax]	        47	write-tree.c	FUNCTION_1	SWITCH_1	CALL_11
0x40001d8	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	        42	write-tree.c	FUNCTION_1	SWITCH_1
0x40001db	            0x75bd	                           jne 0x400019a	        42	write-tree.c	FUNCTION_1	SWITCH_1
0x40001dd	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	write-tree.c	FUNCTION_1	SWITCH_1	CALL_13
0x40001e2	      0xbe00000000	                              mov esi, 0	        53	write-tree.c	FUNCTION_1	SWITCH_1	CALL_13
0x40001e7	      0xbf00000000	                              mov edi, 0	        53	write-tree.c	FUNCTION_1	SWITCH_1	CALL_13
0x40001ec	            0x31c0	                            xor eax, eax	        53	write-tree.c	FUNCTION_1	SWITCH_1	CALL_13
0x40001ee	      0xe800000000	                          call 0x40001f3	        53	write-tree.c	FUNCTION_1	SWITCH_1	CALL_13
0x40001f3	       0xf1f440000	                   nop dword [rax + rax]	        53	write-tree.c	FUNCTION_1	SWITCH_1	CALL_13
0x40001f8	      0xbe00000000	                              mov esi, 0	        50	write-tree.c	FUNCTION_1	SWITCH_1	CALL_12
0x40001fd	      0xbf00000000	                              mov edi, 0	        50	write-tree.c	FUNCTION_1	SWITCH_1	CALL_12
0x4000202	            0x31c0	                            xor eax, eax	        50	write-tree.c	FUNCTION_1	SWITCH_1	CALL_12
0x4000204	      0xe800000000	                          call 0x4000209	        50	write-tree.c	FUNCTION_1	SWITCH_1	CALL_12
0x4000209	      0xe800000000	                     call str.missing_ok	        57	write-tree.c	FUNCTION_1
