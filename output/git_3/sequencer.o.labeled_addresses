git_sequencer_config	WHILE,0:IF,8:functions,0:SWITCH,0:ELSE,4:DO,0:FOR,0:CALL,7	107
0x4002100	            0x4155	                                push r13	       148	sequencer.c	FUNCTION_1
0x4002102	            0x4154	                                push r12	       148	sequencer.c	FUNCTION_1
0x4002104	          0x4989f5	                            mov r13, rsi	       148	sequencer.c	FUNCTION_1
0x4002107	              0x55	                                push rbp	       148	sequencer.c	FUNCTION_1
0x4002108	              0x53	                                push rbx	       148	sequencer.c	FUNCTION_1
0x4002109	          0x4889fd	                            mov rbp, rdi	       148	sequencer.c	FUNCTION_1
0x400210c	      0xb90f000000	                            mov ecx, 0xf	       152	sequencer.c	FUNCTION_1	IF_1
0x4002111	      0xbf00000000	                              mov edi, 0	       152	sequencer.c	FUNCTION_1	IF_1
0x4002116	          0x4889ee	                            mov rsi, rbp	       152	sequencer.c	FUNCTION_1	IF_1
0x4002119	        0x4883ec18	                           sub rsp, 0x18	       148	sequencer.c	FUNCTION_1
0x400211d	          0x4989d4	                            mov r12, rdx	       148	sequencer.c	FUNCTION_1
0x4002120	    0x64488b042528	                mov rax, qword fs:[0x28]	       148	sequencer.c	FUNCTION_1
0x4002129	      0x4889442408	                mov qword [rsp + 8], rax	       148	sequencer.c	FUNCTION_1
0x400212e	            0x31c0	                            xor eax, eax	       148	sequencer.c	FUNCTION_1
0x4002130	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       152	sequencer.c	FUNCTION_1	IF_1
0x4002132	     0xf8490000000	                            je 0x40021c8	       152	sequencer.c	FUNCTION_1	IF_1
0x4002138	      0xbf00000000	                              mov edi, 0	       174	sequencer.c	FUNCTION_1	IF_7
0x400213d	      0xb90f000000	                            mov ecx, 0xf	       174	sequencer.c	FUNCTION_1	IF_7
0x4002142	          0x4889ee	                            mov rsi, rbp	       174	sequencer.c	FUNCTION_1	IF_7
0x4002145	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       174	sequencer.c	FUNCTION_1	IF_7
0x4002147	           0xf97c3	                                 seta bl	       174	sequencer.c	FUNCTION_1	IF_7
0x400214a	           0xf92c0	                                 setb al	       174	sequencer.c	FUNCTION_1	IF_7
0x400214d	            0x29c3	                            sub ebx, eax	       174	sequencer.c	FUNCTION_1	IF_7
0x400214f	           0xfbedb	                           movsx ebx, bl	       174	sequencer.c	FUNCTION_1	IF_7
0x4002152	            0x85db	                           test ebx, ebx	       174	sequencer.c	FUNCTION_1	IF_7
0x4002154	            0x754a	                           jne 0x40021a0	       174	sequencer.c	FUNCTION_1	IF_7
0x4002156	          0x4c89ee	                            mov rsi, r13	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4002159	          0x4889ef	                            mov rdi, rbp	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x400215c	      0xe800000000	                          call 0x4002161	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4002161	            0x31d2	                            xor edx, edx	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4002163	            0x85c0	                           test eax, eax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4002165	            0x740d	                            je 0x4002174	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4002167	      0xbf00000000	                              mov edi, 0	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x400216c	      0xe800000000	                          call 0x4002171	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4002171	          0x4889c2	                            mov rdx, rax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4002174	      0x4989542430	             mov qword [r12 + 0x30], rdx	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4002179	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       184	sequencer.c	FUNCTION_1
0x400217e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       184	sequencer.c	FUNCTION_1
0x4002187	            0x89d8	                            mov eax, ebx	       184	sequencer.c	FUNCTION_1
0x4002189	     0xf85e5000000	                           jne 0x4002274	       184	sequencer.c	FUNCTION_1
0x400218f	        0x4883c418	                           add rsp, 0x18	       184	sequencer.c	FUNCTION_1
0x4002193	              0x5b	                                 pop rbx	       184	sequencer.c	FUNCTION_1
0x4002194	              0x5d	                                 pop rbp	       184	sequencer.c	FUNCTION_1
0x4002195	            0x415c	                                 pop r12	       184	sequencer.c	FUNCTION_1
0x4002197	            0x415d	                                 pop r13	       184	sequencer.c	FUNCTION_1
0x4002199	              0xc3	                                     ret	       184	sequencer.c	FUNCTION_1
0x400219a	    0x660f1f440000	                    nop word [rax + rax]	       184	sequencer.c	FUNCTION_1
0x40021a0	            0x31d2	                            xor edx, edx	       179	sequencer.c	FUNCTION_1	CALL_6
0x40021a2	          0x4c89ee	                            mov rsi, r13	       179	sequencer.c	FUNCTION_1	CALL_6
0x40021a5	          0x4889ef	                            mov rdi, rbp	       179	sequencer.c	FUNCTION_1	CALL_6
0x40021a8	      0xe800000000	                          call 0x40021ad	       179	sequencer.c	FUNCTION_1	CALL_6
0x40021ad	            0x85c0	                           test eax, eax	       180	sequencer.c	FUNCTION_1	IF_8
0x40021af	            0x89c3	                            mov ebx, eax	       179	sequencer.c	FUNCTION_1	CALL_6
0x40021b1	            0x75c6	                           jne 0x4002179	       180	sequencer.c	FUNCTION_1	IF_8
0x40021b3	            0x31d2	                            xor edx, edx	       183	sequencer.c	FUNCTION_1	CALL_7
0x40021b5	          0x4c89ee	                            mov rsi, r13	       183	sequencer.c	FUNCTION_1	CALL_7
0x40021b8	          0x4889ef	                            mov rdi, rbp	       183	sequencer.c	FUNCTION_1	CALL_7
0x40021bb	      0xe800000000	                          call 0x40021c0	       183	sequencer.c	FUNCTION_1	CALL_7
0x40021c0	            0x89c3	                            mov ebx, eax	       183	sequencer.c	FUNCTION_1	CALL_7
0x40021c2	            0xebb5	                           jmp 0x4002179	       183	sequencer.c	FUNCTION_1	CALL_7
0x40021c4	         0xf1f4000	                         nop dword [rax]	       183	sequencer.c	FUNCTION_1	CALL_7
0x40021c8	          0x4c89ea	                            mov rdx, r13	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x40021cb	          0x4889ee	                            mov rsi, rbp	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x40021ce	          0x4889e7	                            mov rdi, rsp	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x40021d1	      0xe800000000	                          call 0x40021d6	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x40021d6	            0x85c0	                           test eax, eax	       156	sequencer.c	FUNCTION_1	IF_1	IF_2
0x40021d8	            0x89c3	                            mov ebx, eax	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x40021da	            0x759d	                           jne 0x4002179	       156	sequencer.c	FUNCTION_1	IF_1	IF_2
0x40021dc	        0x488b2c24	                    mov rbp, qword [rsp]	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x40021e0	      0xbf00000000	                              mov edi, 0	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x40021e5	      0xb909000000	                              mov ecx, 9	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x40021ea	          0x4889ee	                            mov rsi, rbp	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x40021ed	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x40021ef	            0x750f	                           jne 0x4002200	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x40021f1	    0x41c744243801	               mov dword [r12 + 0x38], 1	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x40021fa	      0xe97affffff	                           jmp 0x4002179	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x40021ff	              0x90	                                     nop	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4002200	      0xbf00000000	                              mov edi, 0	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4002205	      0xb90b000000	                            mov ecx, 0xb	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x400220a	          0x4889ee	                            mov rsi, rbp	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x400220d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x400220f	            0x741f	                            je 0x4002230	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4002211	      0xbf00000000	                              mov edi, 0	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4002216	      0xb906000000	                              mov ecx, 6	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x400221b	          0x4889ee	                            mov rsi, rbp	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x400221e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4002220	            0x751e	                           jne 0x4002240	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4002222	    0x41c744243803	               mov dword [r12 + 0x38], 3	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x400222b	      0xe949ffffff	                           jmp 0x4002179	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4002230	    0x41c744243800	               mov dword [r12 + 0x38], 0	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4002239	      0xe93bffffff	                           jmp 0x4002179	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x400223e	            0x6690	                                     nop	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4002240	      0xbf00000000	                              mov edi, 0	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x4002245	      0xb909000000	                              mov ecx, 9	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x400224a	          0x4889ee	                            mov rsi, rbp	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x400224d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x400224f	            0x74df	                            je 0x4002230	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x4002251	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4002253	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4002258	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400225d	      0xe800000000	                          call 0x4002262	        54	gettext.h	FUNCTION_147
0x4002262	          0x4889ee	                            mov rsi, rbp	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x4002265	          0x4889c7	                            mov rdi, rax	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x4002268	            0x31c0	                            xor eax, eax	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x400226a	      0xe800000000	                          call 0x400226f	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x400226f	      0xe905ffffff	                           jmp 0x4002179	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x4002274	      0xe800000000	                          call 0x4002279	       184	sequencer.c	FUNCTION_1
is_original_commit_empty	WHILE,0:IF,3:functions,0:SWITCH,0:ELSE,1:DO,0:FOR,0:CALL,9	59
0x4001590	              0x55	                                push rbp	      1241	sequencer.c	FUNCTION_39
0x4001591	              0x53	                                push rbx	      1241	sequencer.c	FUNCTION_39
0x4001592	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_117	CALL_1
0x4001594	          0x4889fb	                            mov rbx, rdi	      1241	sequencer.c	FUNCTION_39
0x4001597	        0x4883ec08	                              sub rsp, 8	      1241	sequencer.c	FUNCTION_39
0x400159b	      0xe800000000	                          call 0x40015a0	        75	commit.h	FUNCTION_117	CALL_1
0x40015a0	            0x85c0	                           test eax, eax	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x40015a2	     0xf85a0000000	                           jne 0x4001648	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x40015a8	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1247	sequencer.c	FUNCTION_39	IF_2
0x40015ac	          0x4885c0	                           test rax, rax	      1247	sequencer.c	FUNCTION_39	IF_2
0x40015af	            0x7447	                            je 0x40015f8	      1247	sequencer.c	FUNCTION_39	IF_2
0x40015b1	          0x488b28	                    mov rbp, qword [rax]	      1248	sequencer.c	FUNCTION_39	IF_2
0x40015b4	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_117	CALL_1
0x40015b6	          0x4889ef	                            mov rdi, rbp	        75	commit.h	FUNCTION_117	CALL_1
0x40015b9	      0xe800000000	                          call 0x40015be	        75	commit.h	FUNCTION_117	CALL_1
0x40015be	            0x85c0	                           test eax, eax	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x40015c0	            0x754e	                           jne 0x4001610	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x40015c2	          0x4889ef	                            mov rdi, rbp	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x40015c5	      0xe800000000	                          call 0x40015ca	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x40015ca	          0x4889c5	                            mov rbp, rax	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x40015cd	          0x4889df	                            mov rdi, rbx	      1257	sequencer.c	FUNCTION_39	CALL_9
0x40015d0	      0xe800000000	                          call 0x40015d5	      1257	sequencer.c	FUNCTION_39	CALL_9
0x40015d5	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_125	CALL_1
0x40015da	          0x4889c6	                            mov rsi, rax	       975	cache.h	FUNCTION_125	CALL_1
0x40015dd	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_125	CALL_1
0x40015e0	      0xe800000000	                          call 0x40015e5	       975	cache.h	FUNCTION_125	CALL_1
0x40015e5	            0x85c0	                           test eax, eax	      1257	sequencer.c	FUNCTION_39	CALL_9
0x40015e7	           0xf94c0	                                 sete al	      1257	sequencer.c	FUNCTION_39	CALL_9
0x40015ea	           0xfb6c0	                           movzx eax, al	      1257	sequencer.c	FUNCTION_39	CALL_9
0x40015ed	        0x4883c408	                              add rsp, 8	      1258	sequencer.c	FUNCTION_39
0x40015f1	              0x5b	                                 pop rbx	      1258	sequencer.c	FUNCTION_39
0x40015f2	              0x5d	                                 pop rbp	      1258	sequencer.c	FUNCTION_39
0x40015f3	              0xc3	                                     ret	      1258	sequencer.c	FUNCTION_39
0x40015f4	         0xf1f4000	                         nop dword [rax]	      1258	sequencer.c	FUNCTION_39
0x40015f8	    0x488b05000000	            mov rax, qword [0x040015ff] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x40015ff	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4001603	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4001607	            0xebc4	                           jmp 0x40015cd	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4001609	     0xf1f80000000	                         nop dword [rax]	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4001610	        0x488d7d04	                      lea rdi, [rbp + 4]	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001614	      0xe800000000	                          call 0x4001619	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001619	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400161e	          0x4889c3	                            mov rbx, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001621	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4001626	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4001628	      0xe800000000	                          call 0x400162d	        54	gettext.h	FUNCTION_147
0x400162d	          0x4889de	                            mov rsi, rbx	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001630	          0x4889c7	                            mov rdi, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001633	            0x31c0	                            xor eax, eax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001635	      0xe800000000	                          call 0x400163a	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x400163a	      0xb8ffffffff	                     mov eax, 0xffffffff	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x400163f	            0xebac	                           jmp 0x40015ed	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001641	     0xf1f80000000	                         nop dword [rax]	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001648	        0x488d7b04	                      lea rdi, [rbx + 4]	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x400164c	      0xe800000000	                          call 0x4001651	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4001651	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4001656	          0x4889c3	                            mov rbx, rax	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4001659	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400165e	            0xebc6	                           jmp 0x4001626	        54	gettext.h	FUNCTION_147
sequencer_remove_state	WHILE,1:IF,4:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,1:CALL,15	127
0x40038a0	            0x4154	                                push r12	       256	sequencer.c	FUNCTION_8
0x40038a2	              0x55	                                push rbp	       256	sequencer.c	FUNCTION_8
0x40038a3	          0x4889fd	                            mov rbp, rdi	       256	sequencer.c	FUNCTION_8
0x40038a6	              0x53	                                push rbx	       256	sequencer.c	FUNCTION_8
0x40038a7	        0x4883ec20	                           sub rsp, 0x20	       256	sequencer.c	FUNCTION_8
0x40038ab	    0x64488b042528	                mov rax, qword fs:[0x28]	       256	sequencer.c	FUNCTION_8
0x40038b4	      0x4889442418	             mov qword [rsp + 0x18], rax	       256	sequencer.c	FUNCTION_8
0x40038b9	            0x31c0	                            xor eax, eax	       256	sequencer.c	FUNCTION_8
0x40038bb	          0x833f02	                      cmp dword [rdi], 2	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x40038be	    0x48c704240000	                      mov qword [rsp], 0	       257	sequencer.c	FUNCTION_8
0x40038c6	    0x48c744240800	                  mov qword [rsp + 8], 0	       257	sequencer.c	FUNCTION_8
0x40038cf	    0x48c744241000	               mov qword [rsp + 0x10], 0	       257	sequencer.c	FUNCTION_8
0x40038d8	     0xf84c2000000	                            je 0x40039a0	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x40038de	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	       275	sequencer.c	FUNCTION_8	CALL_7
0x40038e2	            0x31db	                            xor ebx, ebx	       277	sequencer.c	FUNCTION_8	FOR_1
0x40038e4	      0xe800000000	                          call 0x40038e9	       275	sequencer.c	FUNCTION_8	CALL_7
0x40038e9	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       276	sequencer.c	FUNCTION_8	CALL_8
0x40038ed	      0xe800000000	                          call 0x40038f2	       276	sequencer.c	FUNCTION_8	CALL_8
0x40038f2	      0x48837d5000	               cmp qword [rbp + 0x50], 0	       277	sequencer.c	FUNCTION_8	FOR_1
0x40038f7	            0x741e	                            je 0x4003917	       277	sequencer.c	FUNCTION_8	FOR_1
0x40038f9	     0xf1f80000000	                         nop dword [rax]	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003900	        0x488b4548	            mov rax, qword [rbp + 0x48] 	       278	sequencer.c	FUNCTION_8	CALL_9
0x4003904	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	       278	sequencer.c	FUNCTION_8	CALL_9
0x4003908	        0x4883c301	                              add rbx, 1	       278	sequencer.c	FUNCTION_8	CALL_9
0x400390c	      0xe800000000	                          call 0x4003911	       278	sequencer.c	FUNCTION_8	CALL_9
0x4003911	        0x48395d50	            cmp qword [rbp + 0x50], rbx 	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003915	            0x77e9	                            ja 0x4003900	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003917	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	       279	sequencer.c	FUNCTION_8	CALL_10
0x400391b	      0xe800000000	                          call 0x4003920	       279	sequencer.c	FUNCTION_8	CALL_10
0x4003920	        0x488d7d60	                   lea rdi, [rbp + 0x60]	       280	sequencer.c	FUNCTION_8	CALL_11
0x4003924	      0xe800000000	                          call 0x4003929	       280	sequencer.c	FUNCTION_8	CALL_11
0x4003929	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_108	IF_2
0x400392e	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_108
0x4003937	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x400393d	     0xf840d010000	                            je 0x4003a50	       165	strbuf.h	FUNCTION_108	IF_2
0x4003943	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x4003946	          0x4889ef	                            mov rdi, rbp	       283	sequencer.c	FUNCTION_8	CALL_13
0x4003949	      0xe882cdffff	                        call sym.get_dir	       283	sequencer.c	FUNCTION_8	CALL_13
0x400394e	          0x4889c3	                            mov rbx, rax	       283	sequencer.c	FUNCTION_8	CALL_13
0x4003951	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003954	      0xe800000000	                          call 0x4003959	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003959	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_110	CALL_2
0x400395c	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x400395f	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003962	      0xe800000000	                          call 0x4003967	       279	strbuf.h	FUNCTION_110	CALL_2
0x4003967	            0x31f6	                            xor esi, esi	       284	sequencer.c	FUNCTION_8	CALL_14
0x4003969	          0x4889e7	                            mov rdi, rsp	       284	sequencer.c	FUNCTION_8	CALL_14
0x400396c	      0xe800000000	                          call 0x4003971	       284	sequencer.c	FUNCTION_8	CALL_14
0x4003971	          0x4889e7	                            mov rdi, rsp	       285	sequencer.c	FUNCTION_8	CALL_15
0x4003974	      0xe800000000	                          call 0x4003979	       285	sequencer.c	FUNCTION_8	CALL_15
0x4003979	            0x31c0	                            xor eax, eax	       288	sequencer.c	FUNCTION_8
0x400397b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       288	sequencer.c	FUNCTION_8
0x4003980	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       288	sequencer.c	FUNCTION_8
0x4003989	     0xf8517010000	                           jne 0x4003aa6	       288	sequencer.c	FUNCTION_8
0x400398f	        0x4883c420	                           add rsp, 0x20	       288	sequencer.c	FUNCTION_8
0x4003993	              0x5b	                                 pop rbx	       288	sequencer.c	FUNCTION_8
0x4003994	              0x5d	                                 pop rbp	       288	sequencer.c	FUNCTION_8
0x4003995	            0x415c	                                 pop r12	       288	sequencer.c	FUNCTION_8
0x4003997	              0xc3	                                     ret	       288	sequencer.c	FUNCTION_8
0x4003998	     0xf1f84000000	                   nop dword [rax + rax]	       288	sequencer.c	FUNCTION_8
0x40039a0	    0x488b35000000	            mov rsi, qword [0x040039a7] 	       130	sequencer.c	CALL_21
0x40039a7	          0x4885f6	                           test rsi, rsi	       130	sequencer.c	CALL_21
0x40039aa	     0xf84db000000	                            je 0x4003a8b	       130	sequencer.c	CALL_21
0x40039b0	            0x31d2	                            xor edx, edx	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x40039b2	          0x4889e7	                            mov rdi, rsp	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x40039b5	      0xe800000000	                          call 0x40039ba	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x40039ba	          0x4885c0	                           test rax, rax	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x40039bd	     0xf8e1bffffff	                           jle 0x40038de	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x40039c3	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       262	sequencer.c	FUNCTION_8	IF_1
0x40039c8	      0x41803c2400	                       cmp byte [r12], 0	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x40039cd	            0x752f	                           jne 0x40039fe	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x40039cf	      0xe90affffff	                           jmp 0x40038de	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x40039d4	         0xf1f4000	                         nop dword [rax]	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x40039d8	            0x31c9	                            xor ecx, ecx	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40039da	            0x31d2	                            xor edx, edx	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40039dc	          0xc60000	                       mov byte [rax], 0	       266	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x40039df	          0x4c89e6	                            mov rsi, r12	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40039e2	      0xbf00000000	                              mov edi, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40039e7	      0xe800000000	                          call 0x40039ec	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40039ec	            0x85c0	                           test eax, eax	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40039ee	            0x7878	                            js 0x4003a68	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40039f0	        0x807b0100	                   cmp byte [rbx + 1], 0	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x40039f4	        0x4c8d6301	                      lea r12, [rbx + 1]	       271	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x40039f8	     0xf84e0feffff	                            je 0x40038de	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x40039fe	      0xbe0a000000	                            mov esi, 0xa	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a03	          0x4c89e7	                            mov rdi, r12	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a06	      0xe800000000	                          call 0x4003a0b	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a0b	          0x4885c0	                           test rax, rax	       265	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x4003a0e	          0x4889c3	                            mov rbx, rax	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a11	            0x75c5	                           jne 0x40039d8	       265	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x4003a13	            0x31c9	                            xor ecx, ecx	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a15	            0x31d2	                            xor edx, edx	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a17	          0x4c89e6	                            mov rsi, r12	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a1a	      0xbf00000000	                              mov edi, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a1f	      0xe800000000	                          call 0x4003a24	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a24	            0x85c0	                           test eax, eax	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a26	     0xf89b2feffff	                           jns 0x40038de	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a2c	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4003a2e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4003a33	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4003a38	      0xe800000000	                          call 0x4003a3d	        54	gettext.h	FUNCTION_147
0x4003a3d	          0x4c89e6	                            mov rsi, r12	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a40	          0x4889c7	                            mov rdi, rax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a43	            0x31c0	                            xor eax, eax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a45	      0xe800000000	                          call 0x4003a4a	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a4a	      0xe98ffeffff	                           jmp 0x40038de	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a4f	              0x90	                                     nop	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a50	    0x803d00000000	                cmp byte [0x04003a57], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x4003a57	     0xf84e9feffff	                            je 0x4003946	       168	strbuf.h	FUNCTION_108	CALL_2
0x4003a5d	      0xe800000000	                          call 0x4003a62	       168	strbuf.h	FUNCTION_108	CALL_2
0x4003a62	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x4003a68	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4003a6a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4003a6f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4003a74	      0xe800000000	                          call 0x4003a79	        54	gettext.h	FUNCTION_147
0x4003a79	          0x4c89e6	                            mov rsi, r12	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a7c	          0x4889c7	                            mov rdi, rax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a7f	            0x31c0	                            xor eax, eax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a81	      0xe800000000	                          call 0x4003a86	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a86	      0xe965ffffff	                           jmp 0x40039f0	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003a8b	      0xbf00000000	                              mov edi, 0	       130	sequencer.c	CALL_21
0x4003a90	            0x31c0	                            xor eax, eax	       130	sequencer.c	CALL_21
0x4003a92	      0xe800000000	                          call 0x4003a97	       130	sequencer.c	CALL_21
0x4003a97	          0x4889c6	                            mov rsi, rax	       130	sequencer.c	CALL_21
0x4003a9a	    0x488905000000	            mov qword [0x04003aa1], rax 	       130	sequencer.c	CALL_21
0x4003aa1	      0xe90affffff	                           jmp 0x40039b0	       130	sequencer.c	CALL_21
0x4003aa6	      0xe800000000	                          call 0x4003aab	       288	sequencer.c	FUNCTION_8
parse_head	WHILE,0:IF,4:functions,0:SWITCH,0:ELSE,1:DO,0:FOR,0:CALL,9	71
0x4002000	            0x4154	                                push r12	      1071	sequencer.c	FUNCTION_36
0x4002002	              0x55	                                push rbp	      1071	sequencer.c	FUNCTION_36
0x4002003	          0x4889fd	                            mov rbp, rdi	      1071	sequencer.c	FUNCTION_36
0x4002006	              0x53	                                push rbx	      1071	sequencer.c	FUNCTION_36
0x4002007	      0xbf00000000	                              mov edi, 0	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x400200c	            0x31db	                            xor ebx, ebx	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x400200e	        0x4883ec20	                           sub rsp, 0x20	      1071	sequencer.c	FUNCTION_36
0x4002012	          0x4889e6	                            mov rsi, rsp	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x4002015	    0x64488b042528	                mov rax, qword fs:[0x28]	      1071	sequencer.c	FUNCTION_36
0x400201e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1071	sequencer.c	FUNCTION_36
0x4002023	            0x31c0	                            xor eax, eax	      1071	sequencer.c	FUNCTION_36
0x4002025	      0xe800000000	                          call 0x400202a	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x400202a	            0x85c0	                           test eax, eax	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x400202c	            0x742a	                            je 0x4002058	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x400202e	        0x48895d00	                    mov qword [rbp], rbx	      1088	sequencer.c	FUNCTION_36
0x4002032	            0x31c0	                            xor eax, eax	      1090	sequencer.c	FUNCTION_36
0x4002034	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1091	sequencer.c	FUNCTION_36
0x4002039	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1091	sequencer.c	FUNCTION_36
0x4002042	     0xf85af000000	                           jne 0x40020f7	      1091	sequencer.c	FUNCTION_36
0x4002048	        0x4883c420	                           add rsp, 0x20	      1091	sequencer.c	FUNCTION_36
0x400204c	              0x5b	                                 pop rbx	      1091	sequencer.c	FUNCTION_36
0x400204d	              0x5d	                                 pop rbp	      1091	sequencer.c	FUNCTION_36
0x400204e	            0x415c	                                 pop r12	      1091	sequencer.c	FUNCTION_36
0x4002050	              0xc3	                                     ret	      1091	sequencer.c	FUNCTION_36
0x4002051	     0xf1f80000000	                         nop dword [rax]	      1091	sequencer.c	FUNCTION_36
0x4002058	          0x4889e7	                            mov rdi, rsp	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x400205b	      0xe800000000	                          call 0x4002060	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x4002060	          0x4885c0	                           test rax, rax	      1079	sequencer.c	FUNCTION_36	ELSE_1	IF_2
0x4002063	          0x4889c3	                            mov rbx, rax	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x4002066	            0x7473	                            je 0x40020db	      1079	sequencer.c	FUNCTION_36	ELSE_1	IF_2
0x4002068	        0x488d7004	                      lea rsi, [rax + 4]	       975	cache.h	FUNCTION_125	CALL_1
0x400206c	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_125	CALL_1
0x4002071	          0x4889e7	                            mov rdi, rsp	       975	cache.h	FUNCTION_125	CALL_1
0x4002074	      0xe800000000	                          call 0x4002079	       975	cache.h	FUNCTION_125	CALL_1
0x4002079	            0x85c0	                           test eax, eax	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x400207b	            0x7533	                           jne 0x40020b0	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x400207d	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_117	CALL_1
0x400207f	          0x4889df	                            mov rdi, rbx	        75	commit.h	FUNCTION_117	CALL_1
0x4002082	      0xe800000000	                          call 0x4002087	        75	commit.h	FUNCTION_117	CALL_1
0x4002087	            0x85c0	                           test eax, eax	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x4002089	            0x74a3	                            je 0x400202e	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x400208b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4002090	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4002095	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4002097	      0xe800000000	                          call 0x400209c	        54	gettext.h	FUNCTION_147
0x400209c	          0x4889c7	                            mov rdi, rax	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x400209f	            0x31c0	                            xor eax, eax	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40020a1	      0xe800000000	                          call 0x40020a6	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40020a6	      0xb8ffffffff	                     mov eax, 0xffffffff	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40020ab	            0xeb87	                           jmp 0x4002034	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40020ad	           0xf1f00	                         nop dword [rax]	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40020b0	          0x4889e7	                            mov rdi, rsp	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40020b3	      0xe800000000	                          call 0x40020b8	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40020b8	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40020ba	          0x4989c4	                            mov r12, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40020bd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40020c2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40020c7	      0xe800000000	                          call 0x40020cc	        54	gettext.h	FUNCTION_147
0x40020cc	          0x4c89e6	                            mov rsi, r12	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40020cf	          0x4889c7	                            mov rdi, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40020d2	            0x31c0	                            xor eax, eax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40020d4	      0xe800000000	                          call 0x40020d9	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40020d9	            0xeba2	                           jmp 0x400207d	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40020db	      0xbf00000000	                              mov edi, 0	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40020e0	      0xe86be3ffff	                       call sym._.part.6	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40020e5	          0x4889c7	                            mov rdi, rax	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x40020e8	            0x31c0	                            xor eax, eax	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x40020ea	      0xe800000000	                          call 0x40020ef	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x40020ef	          0x83c8ff	                      or eax, 0xffffffff	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x40020f2	      0xe93dffffff	                           jmp 0x4002034	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x40020f7	      0xe800000000	                          call 0x40020fc	      1091	sequencer.c	FUNCTION_36
fast_forward_to	WHILE,0:IF,2:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,15	108
0x40011b0	            0x4156	                                push r14	       458	sequencer.c	FUNCTION_19
0x40011b2	            0x4155	                                push r13	       458	sequencer.c	FUNCTION_19
0x40011b4	          0x4989fd	                            mov r13, rdi	       458	sequencer.c	FUNCTION_19
0x40011b7	            0x4154	                                push r12	       458	sequencer.c	FUNCTION_19
0x40011b9	              0x55	                                push rbp	       458	sequencer.c	FUNCTION_19
0x40011ba	      0xbf00000000	                              mov edi, 0	       463	sequencer.c	FUNCTION_19
0x40011bf	              0x53	                                push rbx	       458	sequencer.c	FUNCTION_19
0x40011c0	          0x4889f3	                            mov rbx, rsi	       458	sequencer.c	FUNCTION_19
0x40011c3	          0x4189d6	                           mov r14d, edx	       458	sequencer.c	FUNCTION_19
0x40011c6	          0x4889cd	                            mov rbp, rcx	       458	sequencer.c	FUNCTION_19
0x40011c9	    0x41bcffffffff	                    mov r12d, 0xffffffff	       465	sequencer.c	FUNCTION_19	IF_1
0x40011cf	        0x4883ec40	                           sub rsp, 0x40	       458	sequencer.c	FUNCTION_19
0x40011d3	    0x64488b042528	                mov rax, qword fs:[0x28]	       458	sequencer.c	FUNCTION_19
0x40011dc	      0x4889442438	             mov qword [rsp + 0x38], rax	       458	sequencer.c	FUNCTION_19
0x40011e1	            0x31c0	                            xor eax, eax	       458	sequencer.c	FUNCTION_19
0x40011e3	    0x48c704240000	                      mov qword [rsp], 0	       460	sequencer.c	FUNCTION_19
0x40011eb	    0x48c744240800	                  mov qword [rsp + 8], 0	       460	sequencer.c	FUNCTION_19
0x40011f4	    0x48c744241000	               mov qword [rsp + 0x10], 0	       460	sequencer.c	FUNCTION_19
0x40011fd	    0x48c744242000	               mov qword [rsp + 0x20], 0	       461	sequencer.c	FUNCTION_19
0x4001206	    0x48c744242800	               mov qword [rsp + 0x28], 0	       461	sequencer.c	FUNCTION_19
0x400120f	    0x48c744243000	               mov qword [rsp + 0x30], 0	       461	sequencer.c	FUNCTION_19
0x4001218	      0xe800000000	                          call 0x400121d	       463	sequencer.c	FUNCTION_19
0x400121d	      0xba01000000	                              mov edx, 1	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4001222	          0x4c89ee	                            mov rsi, r13	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4001225	          0x4889df	                            mov rdi, rbx	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4001228	      0xe800000000	                          call 0x400122d	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x400122d	            0x85c0	                           test eax, eax	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x400122f	     0xf85b4000000	                           jne 0x40012e9	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4001235	          0x8b7d00	                    mov edi, dword [rbp]	       467	sequencer.c	FUNCTION_19	CALL_5
0x4001238	      0xbd00000000	                              mov ebp, 0	        53	gettext.h	FUNCTION_147	IF_1
0x400123d	      0xe88ef6ffff	             call sym.action_name.isra.7	       467	sequencer.c	FUNCTION_19	CALL_5
0x4001242	          0x803800	                       cmp byte [rax], 0	        52	gettext.h	FUNCTION_147	IF_1
0x4001245	     0xf85c5000000	                           jne 0x4001310	        52	gettext.h	FUNCTION_147	IF_1
0x400124b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400124d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4001252	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4001257	      0xe800000000	                          call 0x400125c	        54	gettext.h	FUNCTION_147
0x400125c	          0x4889ea	                            mov rdx, rbp	       467	sequencer.c	FUNCTION_19	CALL_5
0x400125f	          0x4889c6	                            mov rsi, rax	       467	sequencer.c	FUNCTION_19	CALL_5
0x4001262	          0x4889e7	                            mov rdi, rsp	       467	sequencer.c	FUNCTION_19	CALL_5
0x4001265	            0x31c0	                            xor eax, eax	       467	sequencer.c	FUNCTION_19	CALL_5
0x4001267	      0xe800000000	                          call 0x400126c	       467	sequencer.c	FUNCTION_19	CALL_5
0x400126c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       469	sequencer.c	FUNCTION_19	CALL_6
0x4001271	      0xe800000000	                          call 0x4001276	       469	sequencer.c	FUNCTION_19	CALL_6
0x4001276	          0x4885c0	                           test rax, rax	       470	sequencer.c	FUNCTION_19	IF_2
0x4001279	          0x4889c5	                            mov rbp, rax	       469	sequencer.c	FUNCTION_19	CALL_6
0x400127c	     0xf84ae000000	                            je 0x4001330	       470	sequencer.c	FUNCTION_19	IF_2
0x4001282	          0x4585f6	                         test r14d, r14d	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4001285	      0xb900000000	                              mov ecx, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x400128a	          0x4c89ea	                            mov rdx, r13	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x400128d	        0x480f44cb	                          cmove rcx, rbx	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4001291	        0x4883ec08	                              sub rsp, 8	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4001295	          0x4531c0	                            xor r8d, r8d	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4001298	      0x488d442428	                   lea rax, [rsp + 0x28]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x400129d	      0xbe00000000	                              mov esi, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40012a2	          0x4889ef	                            mov rdi, rbp	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40012a5	              0x50	                                push rax	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40012a6	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40012ab	      0xe800000000	                          call 0x40012b0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40012b0	            0x85c0	                           test eax, eax	       470	sequencer.c	FUNCTION_19	IF_2
0x40012b2	              0x5a	                                 pop rdx	       470	sequencer.c	FUNCTION_19	IF_2
0x40012b3	              0x59	                                 pop rcx	       470	sequencer.c	FUNCTION_19	IF_2
0x40012b4	            0x757a	                           jne 0x4001330	       470	sequencer.c	FUNCTION_19	IF_2
0x40012b6	      0x488d742420	                   lea rsi, [rsp + 0x20]	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x40012bb	          0x4889ef	                            mov rdi, rbp	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x40012be	      0xe800000000	                          call 0x40012c3	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x40012c3	            0x85c0	                           test eax, eax	       473	sequencer.c	FUNCTION_19	IF_2
0x40012c5	          0x4189c4	                           mov r12d, eax	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x40012c8	            0x7566	                           jne 0x4001330	       473	sequencer.c	FUNCTION_19	IF_2
0x40012ca	          0x4889e7	                            mov rdi, rsp	       482	sequencer.c	FUNCTION_19	CALL_12
0x40012cd	      0xe800000000	                          call 0x40012d2	       482	sequencer.c	FUNCTION_19	CALL_12
0x40012d2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       483	sequencer.c	FUNCTION_19	CALL_13
0x40012d7	      0xe800000000	                          call 0x40012dc	       483	sequencer.c	FUNCTION_19	CALL_13
0x40012dc	          0x4889ef	                            mov rdi, rbp	       484	sequencer.c	FUNCTION_19	CALL_14
0x40012df	      0xe800000000	                          call 0x40012e4	       484	sequencer.c	FUNCTION_19	CALL_14
0x40012e4	      0xe847f4ffff	       call sym.update_abort_safety_file	       485	sequencer.c	FUNCTION_19	CALL_15
0x40012e9	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       487	sequencer.c	FUNCTION_19
0x40012ee	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       487	sequencer.c	FUNCTION_19
0x40012f7	          0x4489e0	                           mov eax, r12d	       487	sequencer.c	FUNCTION_19
0x40012fa	            0x7567	                           jne 0x4001363	       487	sequencer.c	FUNCTION_19
0x40012fc	        0x4883c440	                           add rsp, 0x40	       487	sequencer.c	FUNCTION_19
0x4001300	              0x5b	                                 pop rbx	       487	sequencer.c	FUNCTION_19
0x4001301	              0x5d	                                 pop rbp	       487	sequencer.c	FUNCTION_19
0x4001302	            0x415c	                                 pop r12	       487	sequencer.c	FUNCTION_19
0x4001304	            0x415d	                                 pop r13	       487	sequencer.c	FUNCTION_19
0x4001306	            0x415e	                                 pop r14	       487	sequencer.c	FUNCTION_19
0x4001308	              0xc3	                                     ret	       487	sequencer.c	FUNCTION_19
0x4001309	     0xf1f80000000	                         nop dword [rax]	       487	sequencer.c	FUNCTION_19
0x4001310	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4001315	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_147
0x4001318	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400131a	      0xe800000000	                          call 0x400131f	        54	gettext.h	FUNCTION_147
0x400131f	          0x4889c5	                            mov rbp, rax	        54	gettext.h	FUNCTION_147
0x4001322	      0xe924ffffff	                           jmp 0x400124b	        54	gettext.h	FUNCTION_147
0x4001327	    0x660f1f840000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_147
0x4001330	          0x4889ef	                            mov rdi, rbp	       475	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x4001333	    0x41bcffffffff	                    mov r12d, 0xffffffff	       479	sequencer.c	FUNCTION_19	IF_2
0x4001339	      0xe800000000	                          call 0x400133e	       475	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x400133e	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       476	sequencer.c	FUNCTION_19	IF_2
0x4001343	      0xbf00000000	                              mov edi, 0	       476	sequencer.c	FUNCTION_19	IF_2
0x4001348	            0x31c0	                            xor eax, eax	       476	sequencer.c	FUNCTION_19	IF_2
0x400134a	      0xe800000000	                          call 0x400134f	       476	sequencer.c	FUNCTION_19	IF_2
0x400134f	          0x4889e7	                            mov rdi, rsp	       477	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x4001352	      0xe800000000	                          call 0x4001357	       477	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x4001357	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       478	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x400135c	      0xe800000000	                          call 0x4001361	       478	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x4001361	            0xeb86	                           jmp 0x40012e9	       479	sequencer.c	FUNCTION_19	IF_2
0x4001363	      0xe800000000	                          call 0x4001368	       487	sequencer.c	FUNCTION_19
transform_todos	WHILE,0:IF,8:functions,0:SWITCH,0:ELSE,3:DO,0:FOR,1:CALL,20	207
0x400b520	            0x4157	                                push r15	      4008	sequencer.c	FUNCTION_99
0x400b522	            0x4156	                                push r14	      4008	sequencer.c	FUNCTION_99
0x400b524	            0x4155	                                push r13	      4008	sequencer.c	FUNCTION_99
0x400b526	            0x4154	                                push r12	      4008	sequencer.c	FUNCTION_99
0x400b528	          0x4189fc	                           mov r12d, edi	      4008	sequencer.c	FUNCTION_99
0x400b52b	              0x55	                                push rbp	      4008	sequencer.c	FUNCTION_99
0x400b52c	              0x53	                                push rbx	      4008	sequencer.c	FUNCTION_99
0x400b52d	    0x4881ec880000	                           sub rsp, 0x88	      4008	sequencer.c	FUNCTION_99
0x400b534	    0x4c8b35000000	            mov r14, qword [0x0400b53b] 	        52	sequencer.c	CALL_8
0x400b53b	    0x64488b042528	                mov rax, qword fs:[0x28]	      4008	sequencer.c	FUNCTION_99
0x400b544	      0x4889442478	             mov qword [rsp + 0x78], rax	      4008	sequencer.c	FUNCTION_99
0x400b549	            0x31c0	                            xor eax, eax	      4008	sequencer.c	FUNCTION_99
0x400b54b	          0x4d85f6	                           test r14, r14	        52	sequencer.c	CALL_8
0x400b54e	     0xf84ce020000	                            je 0x400b822	        52	sequencer.c	CALL_8
0x400b554	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4010	sequencer.c	FUNCTION_99
0x400b559	            0x31c0	                            xor eax, eax	      4010	sequencer.c	FUNCTION_99
0x400b55b	      0xb90b000000	                            mov ecx, 0xb	      4010	sequencer.c	FUNCTION_99
0x400b560	            0x31d2	                            xor edx, edx	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400b562	          0x4c89f6	                            mov rsi, r14	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400b565	    0x48c704240000	                      mov qword [rsp], 0	      4011	sequencer.c	FUNCTION_99
0x400b56d	          0xf348ab	              rep stosq qword [rdi], rax	      4010	sequencer.c	FUNCTION_99
0x400b570	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400b575	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4010	sequencer.c	FUNCTION_99
0x400b57e	    0x48c744240800	                  mov qword [rsp + 8], 0	      4011	sequencer.c	FUNCTION_99
0x400b587	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4011	sequencer.c	FUNCTION_99
0x400b590	      0xe800000000	                          call 0x400b595	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400b595	          0x4885c0	                           test rax, rax	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400b598	     0xf88f2020000	                            js 0x400b890	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400b59e	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400b5a3	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400b5a8	      0xe81356ffff	              call sym.parse_insn_buffer	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400b5ad	            0x85c0	                           test eax, eax	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400b5af	     0xf8586020000	                           jne 0x400b83b	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400b5b5	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b5b9	          0x4589e5	                          mov r13d, r12d	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400b5bc	            0x31ed	                            xor ebp, ebp	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b5be	        0x4183e504	                             and r13d, 4	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400b5c2	        0x4183e402	                             and r12d, 2	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400b5c6	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b5cb	            0x85c0	                           test eax, eax	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b5cd	     0xf8ff8000000	                            jg 0x400b6cb	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b5d3	      0xe950010000	                           jmp 0x400b728	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b5d8	     0xf1f84000000	                   nop dword [rax + rax]	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b5e0	    0x440fb6b80000	                  movzx r15d, byte [rax]	      1351	sequencer.c	FUNCTION_42	IF_1
0x400b5e8	     0xfb605000000	           movzx eax, byte [0x0400b5ef] 	      1353	sequencer.c	FUNCTION_42
0x400b5ef	        0x488b1424	                    mov rdx, qword [rsp]	      1353	sequencer.c	FUNCTION_42
0x400b5f3	          0x4584ff	                         test r15b, r15b	      1353	sequencer.c	FUNCTION_42
0x400b5f6	        0x440f44f8	                         cmove r15d, eax	      1353	sequencer.c	FUNCTION_42
0x400b5fa	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_107
0x400b5fd	     0xf85cd010000	                           jne 0x400b7d0	       141	strbuf.h	FUNCTION_107
0x400b603	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x400b608	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_109	CALL_2
0x400b60b	      0xe800000000	                          call 0x400b610	       228	strbuf.h	FUNCTION_109	CALL_2
0x400b610	      0x488b442408	                mov rax, qword [rsp + 8]	       228	strbuf.h	FUNCTION_109	CALL_2
0x400b615	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_109
0x400b619	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_109
0x400b61e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_109
0x400b623	        0x44883c02	              mov byte [rdx + rax], r15b	       229	strbuf.h	FUNCTION_109
0x400b627	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_109
0x400b62c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_109
0x400b631	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x400b635	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400b639	          0x4885ff	                           test rdi, rdi	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400b63c	            0x7436	                            je 0x400b674	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400b63e	        0x4883c704	                              add rdi, 4	       312	sequencer.c	FUNCTION_10	CALL_1
0x400b642	          0x4585e4	                         test r12d, r12d	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400b645	     0xf8435010000	                            je 0x400b780	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400b64b	    0x8b3500000000	            mov esi, dword [0x0400b651] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x400b651	      0xe800000000	                          call 0x400b656	       312	sequencer.c	FUNCTION_10	CALL_1
0x400b656	          0x833b09	                      cmp dword [rbx], 9	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400b659	          0x4989c7	                            mov r15, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x400b65c	     0xf842f010000	                            je 0x400b791	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400b662	          0x4c89fa	                            mov rdx, r15	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400b665	      0xbe00000000	                              mov esi, 0	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400b66a	          0x4889e7	                            mov rdi, rsp	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400b66d	            0x31c0	                            xor eax, eax	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400b66f	      0xe800000000	                          call 0x400b674	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400b674	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400b677	            0x85d2	                           test edx, edx	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400b679	     0xf8589000000	                           jne 0x400b708	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400b67f	        0x488b0424	                    mov rax, qword [rsp]	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400b683	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x400b686	     0xf8564010000	                           jne 0x400b7f0	       141	strbuf.h	FUNCTION_107
0x400b68c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x400b691	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_109	CALL_2
0x400b694	      0xe800000000	                          call 0x400b699	       228	strbuf.h	FUNCTION_109	CALL_2
0x400b699	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_109	CALL_2
0x400b69e	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x400b6a2	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_109
0x400b6a7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_109
0x400b6ac	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x400b6b0	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_109
0x400b6b5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_109
0x400b6ba	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x400b6be	          0x83c501	                              add ebp, 1	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b6c1	        0x4883c330	                           add rbx, 0x30	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b6c5	        0x396c2440	            cmp dword [rsp + 0x40], ebp 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b6c9	            0x7e5d	                           jle 0x400b728	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b6cb	            0x8b03	                    mov eax, dword [rbx]	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400b6cd	          0x83f80b	                            cmp eax, 0xb	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400b6d0	     0xf87da000000	                            ja 0x400b7b0	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400b6d6	        0x48c1e004	                              shl rax, 4	      1351	sequencer.c	FUNCTION_42	IF_1
0x400b6da	          0x4585ed	                         test r13d, r13d	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400b6dd	     0xf85fdfeffff	                           jne 0x400b5e0	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400b6e3	    0x4c8bb8000000	                    mov r15, qword [rax]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x400b6ea	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b6ed	      0xe800000000	                          call 0x400b6f2	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b6f2	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b6f5	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b6f8	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b6fb	      0xe800000000	                          call 0x400b700	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b700	      0xe930ffffff	                           jmp 0x400b635	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b705	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b708	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400b70c	            0x31c0	                            xor eax, eax	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400b70e	      0xbe00000000	                              mov esi, 0	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400b713	          0x4889e7	                            mov rdi, rsp	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400b716	          0x83c501	                              add ebp, 1	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b719	        0x4883c330	                           add rbx, 0x30	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b71d	      0xe800000000	                          call 0x400b722	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400b722	        0x396c2440	            cmp dword [rsp + 0x40], ebp 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b726	            0x7fa3	                            jg 0x400b6cb	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400b728	      0x488b742408	                mov rsi, qword [rsp + 8]	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400b72d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400b732	            0x31c9	                            xor ecx, ecx	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400b734	          0x4c89f2	                            mov rdx, r14	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400b737	      0xe8d46fffff	                  call sym.write_message	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400b73c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400b741	            0x89c3	                            mov ebx, eax	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400b743	      0xe800000000	                          call 0x400b748	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400b748	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1792	sequencer.c	FUNCTION_51
0x400b74d	      0xe800000000	                          call 0x400b752	      1792	sequencer.c	FUNCTION_51
0x400b752	            0x89d8	                            mov eax, ebx	      4061	sequencer.c	FUNCTION_99
0x400b754	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      4062	sequencer.c	FUNCTION_99
0x400b759	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4062	sequencer.c	FUNCTION_99
0x400b762	     0xf8534010000	                           jne 0x400b89c	      4062	sequencer.c	FUNCTION_99
0x400b768	    0x4881c4880000	                           add rsp, 0x88	      4062	sequencer.c	FUNCTION_99
0x400b76f	              0x5b	                                 pop rbx	      4062	sequencer.c	FUNCTION_99
0x400b770	              0x5d	                                 pop rbp	      4062	sequencer.c	FUNCTION_99
0x400b771	            0x415c	                                 pop r12	      4062	sequencer.c	FUNCTION_99
0x400b773	            0x415d	                                 pop r13	      4062	sequencer.c	FUNCTION_99
0x400b775	            0x415e	                                 pop r14	      4062	sequencer.c	FUNCTION_99
0x400b777	            0x415f	                                 pop r15	      4062	sequencer.c	FUNCTION_99
0x400b779	              0xc3	                                     ret	      4062	sequencer.c	FUNCTION_99
0x400b77a	    0x660f1f440000	                    nop word [rax + rax]	      4062	sequencer.c	FUNCTION_99
0x400b780	      0xe800000000	                          call 0x400b785	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400b785	          0x833b09	                      cmp dword [rbx], 9	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400b788	          0x4989c7	                            mov r15, rax	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400b78b	     0xf85d1feffff	                           jne 0x400b662	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400b791	        0xf6431001	               test byte [rbx + 0x10], 1	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400b795	      0xba03000000	                              mov edx, 3	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b79a	            0x7474	                            je 0x400b810	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400b79c	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b7a1	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b7a4	      0xe800000000	                          call 0x400b7a9	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b7a9	      0xe9b4feffff	                           jmp 0x400b662	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b7ae	            0x6690	                                     nop	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b7b0	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400b7b4	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400b7b7	      0xbe00000000	                              mov esi, 0	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400b7bc	          0x4889e7	                            mov rdi, rsp	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400b7bf	            0x31c0	                            xor eax, eax	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400b7c1	      0xe800000000	                          call 0x400b7c6	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400b7c6	      0xe9f3feffff	                           jmp 0x400b6be	      4027	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400b7cb	       0xf1f440000	                   nop dword [rax + rax]	      4027	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400b7d0	      0x488b442408	                mov rax, qword [rsp + 8]	       141	strbuf.h	FUNCTION_107
0x400b7d5	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400b7d9	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400b7dc	     0xf8533feffff	                           jne 0x400b615	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400b7e2	      0xe91cfeffff	                           jmp 0x400b603	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400b7e7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400b7f0	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_107
0x400b7f5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400b7f9	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400b7fc	     0xf859cfeffff	                           jne 0x400b69e	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400b802	      0xe985feffff	                           jmp 0x400b68c	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400b807	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400b810	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b815	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b818	      0xe800000000	                          call 0x400b81d	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b81d	      0xe940feffff	                           jmp 0x400b662	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b822	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400b827	      0xe800000000	                          call 0x400b82c	        52	sequencer.c	CALL_8
0x400b82c	          0x4989c6	                            mov r14, rax	        52	sequencer.c	CALL_8
0x400b82f	    0x488905000000	            mov qword [0x0400b836], rax 	        52	sequencer.c	CALL_8
0x400b836	      0xe919fdffff	                           jmp 0x400b554	        52	sequencer.c	CALL_8
0x400b83b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400b840	      0xe800000000	                          call 0x400b845	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400b845	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1792	sequencer.c	FUNCTION_51
0x400b84a	      0xe800000000	                          call 0x400b84f	      1792	sequencer.c	FUNCTION_51
0x400b84f	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1792	sequencer.c	FUNCTION_51
0x400b858	    0xc74424440000	               mov dword [rsp + 0x44], 0	      1793	sequencer.c	FUNCTION_51
0x400b860	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400b865	    0xc74424400000	               mov dword [rsp + 0x40], 0	      1793	sequencer.c	FUNCTION_51
0x400b86d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400b872	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400b874	      0xe800000000	                          call 0x400b879	        54	gettext.h	FUNCTION_147
0x400b879	          0x4c89f6	                            mov rsi, r14	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400b87c	          0x4889c7	                            mov rdi, rax	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400b87f	            0x31c0	                            xor eax, eax	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400b881	      0xe800000000	                          call 0x400b886	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400b886	      0xb8ffffffff	                     mov eax, 0xffffffff	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400b88b	      0xe9c4feffff	                           jmp 0x400b754	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400b890	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400b895	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400b89a	            0xebd6	                           jmp 0x400b872	        54	gettext.h	FUNCTION_147
0x400b89c	      0xe800000000	                          call 0x400b8a1	      4062	sequencer.c	FUNCTION_99
reset_for_rollback	WHILE,0:IF,0:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,2	18
0x40000a0	        0x4883ec38	                           sub rsp, 0x38	      2252	sequencer.c	FUNCTION_69
0x40000a4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2252	sequencer.c	FUNCTION_69
0x40000ad	      0x4889442428	             mov qword [rsp + 0x28], rax	      2252	sequencer.c	FUNCTION_69
0x40000b2	            0x31c0	                            xor eax, eax	      2252	sequencer.c	FUNCTION_69
0x40000b4	    0x48c704240000	                      mov qword [rsp], 0	      2255	sequencer.c	FUNCTION_69
0x40000bc	    0x48c744240800	                  mov qword [rsp + 8], 0	      2256	sequencer.c	FUNCTION_69
0x40000c5	      0xe800000000	                          call 0x40000ca	      2257	sequencer.c	FUNCTION_69	CALL_1
0x40000ca	      0xbe02000000	                              mov esi, 2	      2259	sequencer.c	FUNCTION_69	CALL_2
0x40000cf	          0x4889e7	                            mov rdi, rsp	      2259	sequencer.c	FUNCTION_69	CALL_2
0x40000d2	      0x4889442410	             mov qword [rsp + 0x10], rax	      2257	sequencer.c	FUNCTION_69	CALL_1
0x40000d7	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2258	sequencer.c	FUNCTION_69
0x40000e0	      0xe800000000	                          call 0x40000e5	      2259	sequencer.c	FUNCTION_69	CALL_2
0x40000e5	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2260	sequencer.c	FUNCTION_69
0x40000ea	    0x644833142528	                xor rdx, qword fs:[0x28]	      2260	sequencer.c	FUNCTION_69
0x40000f3	            0x7505	                           jne 0x40000fa	      2260	sequencer.c	FUNCTION_69
0x40000f5	        0x4883c438	                           add rsp, 0x38	      2260	sequencer.c	FUNCTION_69
0x40000f9	              0xc3	                                     ret	      2260	sequencer.c	FUNCTION_69
0x40000fa	      0xe800000000	                          call 0x40000ff	      2260	sequencer.c	FUNCTION_69
print_commit_summary	WHILE,0:IF,9:functions,0:SWITCH,0:ELSE,1:DO,0:FOR,0:CALL,37	272
0x4004360	            0x4156	                                push r14	       994	sequencer.c	FUNCTION_35
0x4004362	            0x4155	                                push r13	       994	sequencer.c	FUNCTION_35
0x4004364	      0xb914000000	                           mov ecx, 0x14	       999	sequencer.c	FUNCTION_35
0x4004369	            0x4154	                                push r12	       994	sequencer.c	FUNCTION_35
0x400436b	              0x55	                                push rbp	       994	sequencer.c	FUNCTION_35
0x400436c	          0x4989fd	                            mov r13, rdi	       994	sequencer.c	FUNCTION_35
0x400436f	              0x53	                                push rbx	       994	sequencer.c	FUNCTION_35
0x4004370	          0x4189d4	                           mov r12d, edx	       994	sequencer.c	FUNCTION_35
0x4004373	    0x4881ece00900	                          sub rsp, 0x9e0	       994	sequencer.c	FUNCTION_35
0x400437a	    0x488d9c248000	                   lea rbx, [rsp + 0x80]	       999	sequencer.c	FUNCTION_35
0x4004382	    0x48c704240000	                      mov qword [rsp], 0	       997	sequencer.c	FUNCTION_35
0x400438a	    0x48c744240800	                  mov qword [rsp + 8], 0	       997	sequencer.c	FUNCTION_35
0x4004393	    0x64488b042528	                mov rax, qword fs:[0x28]	       994	sequencer.c	FUNCTION_35
0x400439c	    0x48898424d809	            mov qword [rsp + 0x9d8], rax	       994	sequencer.c	FUNCTION_35
0x40043a4	            0x31c0	                            xor eax, eax	       994	sequencer.c	FUNCTION_35
0x40043a6	          0x4889df	                            mov rdi, rbx	       999	sequencer.c	FUNCTION_35
0x40043a9	    0x48c744241000	               mov qword [rsp + 0x10], 0	       997	sequencer.c	FUNCTION_35
0x40043b2	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1000	sequencer.c	FUNCTION_35
0x40043bb	          0xf348ab	              rep stosq qword [rdi], rax	       999	sequencer.c	FUNCTION_35
0x40043be	          0x4889f7	                            mov rdi, rsi	      1003	sequencer.c	FUNCTION_35	CALL_1
0x40043c1	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1000	sequencer.c	FUNCTION_35
0x40043ca	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1000	sequencer.c	FUNCTION_35
0x40043d3	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1001	sequencer.c	FUNCTION_35
0x40043dc	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1001	sequencer.c	FUNCTION_35
0x40043e5	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1001	sequencer.c	FUNCTION_35
0x40043ee	      0xe800000000	                          call 0x40043f3	      1003	sequencer.c	FUNCTION_35	CALL_1
0x40043f3	          0x4885c0	                           test rax, rax	      1004	sequencer.c	FUNCTION_35	IF_1
0x40043f6	     0xf8409040000	                            je 0x4004805	      1004	sequencer.c	FUNCTION_35	IF_1
0x40043fc	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_117	CALL_1
0x40043fe	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_117	CALL_1
0x4004401	          0x4889c5	                            mov rbp, rax	        75	commit.h	FUNCTION_117	CALL_1
0x4004404	      0xe800000000	                          call 0x4004409	        75	commit.h	FUNCTION_117	CALL_1
0x4004409	            0x85c0	                           test eax, eax	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x400440b	     0xf850d040000	                           jne 0x400481e	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x4004411	      0xba0d000000	                            mov edx, 0xd	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004416	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x400441b	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x400441e	      0xe800000000	                          call 0x4004423	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004423	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4004428	          0x4889d9	                            mov rcx, rbx	      1011	sequencer.c	FUNCTION_35	CALL_8
0x400442b	      0xbe00000000	                              mov esi, 0	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4004430	          0x4889ef	                            mov rdi, rbp	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4004433	      0xe800000000	                          call 0x4004438	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4004438	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1012	sequencer.c	FUNCTION_35	CALL_9
0x400443d	          0x4889d9	                            mov rcx, rbx	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4004440	      0xbe00000000	                              mov esi, 0	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4004445	          0x4889ef	                            mov rdi, rbp	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4004448	      0xe800000000	                          call 0x400444d	      1012	sequencer.c	FUNCTION_35	CALL_9
0x400444d	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4004452	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4004457	      0xe800000000	                          call 0x400445c	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x400445c	            0x85c0	                           test eax, eax	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x400445e	     0xf85fc020000	                           jne 0x4004760	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4004464	        0x41f6c402	                            test r12b, 2	      1017	sequencer.c	FUNCTION_35	IF_4
0x4004468	     0xf85b2010000	                           jne 0x4004620	      1017	sequencer.c	FUNCTION_35	IF_4
0x400446e	      0xe800000000	                          call 0x4004473	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4004473	            0x85c0	                           test eax, eax	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4004475	     0xf840b020000	                            je 0x4004686	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x400447b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1033	sequencer.c	FUNCTION_35	CALL_23
0x4004480	      0xe800000000	                          call 0x4004485	      1033	sequencer.c	FUNCTION_35	CALL_23
0x4004485	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1034	sequencer.c	FUNCTION_35	CALL_24
0x400448a	      0xe800000000	                          call 0x400448f	      1034	sequencer.c	FUNCTION_35	CALL_24
0x400448f	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      1036	sequencer.c	FUNCTION_35	CALL_25
0x4004497	          0x4c89ee	                            mov rsi, r13	      1036	sequencer.c	FUNCTION_35	CALL_25
0x400449a	      0xe800000000	                          call 0x400449f	      1036	sequencer.c	FUNCTION_35	CALL_25
0x400449f	    0x488d94242001	                  lea rdx, [rsp + 0x120]	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40044a7	            0x31c9	                            xor ecx, ecx	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40044a9	            0x31f6	                            xor esi, esi	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40044ab	            0x31ff	                            xor edi, edi	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40044ad	      0xe800000000	                          call 0x40044b2	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40044b2	     0xfb684249901	          movzx eax, byte [rsp + 0x199] 	      1044	sequencer.c	FUNCTION_35
0x40044ba	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1045	sequencer.c	FUNCTION_35	CALL_27
0x40044bf	    0x488db4242001	                  lea rsi, [rsp + 0x120]	      1045	sequencer.c	FUNCTION_35	CALL_27
0x40044c7	    0xc78424780600	          mov dword [rsp + 0x678], 0x28 	      1040	sequencer.c	FUNCTION_35
0x40044d2	          0x83c815	                            or eax, 0x15	      1044	sequencer.c	FUNCTION_35
0x40044d5	    0x888424990100	              mov byte [rsp + 0x199], al	      1044	sequencer.c	FUNCTION_35
0x40044dc	      0xe800000000	                          call 0x40044e1	      1045	sequencer.c	FUNCTION_35	CALL_27
0x40044e1	    0x488dbc241806	                  lea rdi, [rsp + 0x618]	      1049	sequencer.c	FUNCTION_35	CALL_28
0x40044e9	    0x80a4249a0100	            and byte [rsp + 0x19a], 0xfe	      1046	sequencer.c	FUNCTION_35
0x40044f1	    0xc78424680600	              mov dword [rsp + 0x668], 1	      1047	sequencer.c	FUNCTION_35
0x40044fc	    0xc78424640600	              mov dword [rsp + 0x664], 0	      1048	sequencer.c	FUNCTION_35
0x4004507	      0xe800000000	                          call 0x400450c	      1049	sequencer.c	FUNCTION_35	CALL_28
0x400450c	            0x31c9	                            xor ecx, ecx	      1051	sequencer.c	FUNCTION_35	CALL_29
0x400450e	            0x31d2	                            xor edx, edx	      1051	sequencer.c	FUNCTION_35	CALL_29
0x4004510	            0x31f6	                            xor esi, esi	      1051	sequencer.c	FUNCTION_35	CALL_29
0x4004512	      0xbf00000000	                              mov edi, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x4004517	      0xe800000000	                          call 0x400451c	      1051	sequencer.c	FUNCTION_35	CALL_29
0x400451c	          0x4885c0	                           test rax, rax	      1052	sequencer.c	FUNCTION_35	IF_7
0x400451f	     0xf84cc020000	                            je 0x40047f1	      1052	sequencer.c	FUNCTION_35	IF_7
0x4004525	      0xb905000000	                              mov ecx, 5	      1054	sequencer.c	FUNCTION_35	IF_8
0x400452a	          0x4889c6	                            mov rsi, rax	      1054	sequencer.c	FUNCTION_35	IF_8
0x400452d	      0xbf00000000	                              mov edi, 0	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004532	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004534	          0x4889c3	                            mov rbx, rax	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004537	      0xba00000000	                              mov edx, 0	      1054	sequencer.c	FUNCTION_35	IF_8
0x400453c	        0x400f97c6	                                seta sil	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004540	           0xf92c1	                                 setb cl	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004543	          0x4038ce	                             cmp sil, cl	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004546	            0x7519	                           jne 0x4004561	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004548	      0xe93b020000	                           jmp 0x4004788	      1054	sequencer.c	FUNCTION_35	IF_8
0x400454d	           0xf1f00	                         nop dword [rax]	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004550	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4004554	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4004558	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400455b	     0xf858f000000	                           jne 0x40045f0	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4004561	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4004564	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4004566	            0x75e8	                           jne 0x4004550	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4004568	        0x4183e401	                             and r12d, 1	      1058	sequencer.c	FUNCTION_35
0x400456c	      0xb900000000	                              mov ecx, 0	      1058	sequencer.c	FUNCTION_35
0x4004571	     0xf858b000000	                           jne 0x4004602	      1058	sequencer.c	FUNCTION_35
0x4004577	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_479
0x400457a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_479
0x400457f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_479
0x4004584	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_479
0x4004586	      0xe800000000	                          call 0x400458b	       104	stdio2.h	CALL_479
0x400458b	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x4004593	          0x4889ee	                            mov rsi, rbp	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x4004596	      0xe800000000	                          call 0x400459b	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x400459b	            0x85c0	                           test eax, eax	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x400459d	            0x7520	                           jne 0x40045bf	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x400459f	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_36
0x40045a7	          0x4889ee	                            mov rsi, rbp	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_36
0x40045aa	    0x808c249a0100	                or byte [rsp + 0x19a], 1	      1062	sequencer.c	FUNCTION_35	IF_9
0x40045b2	    0x808c249b0100	                or byte [rsp + 0x19b], 8	      1063	sequencer.c	FUNCTION_35	IF_9
0x40045ba	      0xe800000000	                          call 0x40045bf	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_36
0x40045bf	          0x4889e7	                            mov rdi, rsp	      1067	sequencer.c	FUNCTION_35	CALL_37
0x40045c2	      0xe800000000	                          call 0x40045c7	      1067	sequencer.c	FUNCTION_35	CALL_37
0x40045c7	    0x488b8424d809	           mov rax, qword [rsp + 0x9d8] 	      1068	sequencer.c	FUNCTION_35
0x40045cf	    0x644833042528	                xor rax, qword fs:[0x28]	      1068	sequencer.c	FUNCTION_35
0x40045d8	     0xf853b020000	                           jne 0x4004819	      1068	sequencer.c	FUNCTION_35
0x40045de	    0x4881c4e00900	                          add rsp, 0x9e0	      1068	sequencer.c	FUNCTION_35
0x40045e5	              0x5b	                                 pop rbx	      1068	sequencer.c	FUNCTION_35
0x40045e6	              0x5d	                                 pop rbp	      1068	sequencer.c	FUNCTION_35
0x40045e7	            0x415c	                                 pop r12	      1068	sequencer.c	FUNCTION_35
0x40045e9	            0x415d	                                 pop r13	      1068	sequencer.c	FUNCTION_35
0x40045eb	            0x415e	                                 pop r14	      1068	sequencer.c	FUNCTION_35
0x40045ed	              0xc3	                                     ret	      1068	sequencer.c	FUNCTION_35
0x40045ee	            0x6690	                                     nop	      1068	sequencer.c	FUNCTION_35
0x40045f0	        0x4183e401	                             and r12d, 1	      1058	sequencer.c	FUNCTION_35
0x40045f4	          0x4889c3	                            mov rbx, rax	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40045f7	      0xb900000000	                              mov ecx, 0	      1058	sequencer.c	FUNCTION_35
0x40045fc	     0xf8475ffffff	                            je 0x4004577	      1058	sequencer.c	FUNCTION_35
0x4004602	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4004607	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400460c	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400460e	      0xe800000000	                          call 0x4004613	        54	gettext.h	FUNCTION_147
0x4004613	          0x4889c1	                            mov rcx, rax	        54	gettext.h	FUNCTION_147
0x4004616	      0xe95cffffff	                           jmp 0x4004577	        54	gettext.h	FUNCTION_147
0x400461b	       0xf1f440000	                   nop dword [rax + rax]	        54	gettext.h	FUNCTION_147
0x4004620	      0x488d542460	                   lea rdx, [rsp + 0x60]	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4004625	          0x4889d9	                            mov rcx, rbx	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4004628	      0xbe00000000	                              mov esi, 0	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x400462d	          0x4889ef	                            mov rdi, rbp	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4004630	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x4004639	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x4004642	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x400464b	      0xe800000000	                          call 0x4004650	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4004650	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004655	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x400465a	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x400465d	      0xe800000000	                          call 0x4004662	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004662	      0x488d742460	                   lea rsi, [rsp + 0x60]	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x4004667	          0x4889e7	                            mov rdi, rsp	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x400466a	      0xe800000000	                          call 0x400466f	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x400466f	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x4004674	      0xe800000000	                          call 0x4004679	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x4004679	      0xe800000000	                          call 0x400467e	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x400467e	            0x85c0	                           test eax, eax	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4004680	     0xf85f5fdffff	                           jne 0x400447b	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4004686	      0xba0d000000	                            mov edx, 0xd	       279	strbuf.h	FUNCTION_110	CALL_2
0x400468b	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004690	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004693	      0xe800000000	                          call 0x4004698	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004698	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x400469d	          0x4889e7	                            mov rdi, rsp	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x40046a0	      0xe800000000	                          call 0x40046a5	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x40046a5	    0x8b0500000000	            mov eax, dword [0x040046ab] 	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x40046ab	            0x85c0	                           test eax, eax	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x40046ad	     0xf84c8fdffff	                            je 0x400447b	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x40046b3	        0x488b0424	                    mov rax, qword [rsp]	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x40046b7	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x40046ba	     0xf84e1000000	                            je 0x40047a1	       141	strbuf.h	FUNCTION_107
0x40046c0	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_107
0x40046c5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40046c9	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40046cc	     0xf84cf000000	                            je 0x40047a1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40046d2	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x40046d6	            0x31f6	                            xor esi, esi	       978	sequencer.c	FUNCTION_34	CALL_1
0x40046d8	      0xbf00000000	                              mov edi, 0	       978	sequencer.c	FUNCTION_34	CALL_1
0x40046dd	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_109
0x40046e2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_109
0x40046e7	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x40046eb	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_109
0x40046f0	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_109
0x40046f5	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x40046f9	      0xe800000000	                          call 0x40046fe	       978	sequencer.c	FUNCTION_34	CALL_1
0x40046fe	      0xbf00000000	                              mov edi, 0	       979	sequencer.c	FUNCTION_34	CALL_2
0x4004703	          0x4889c3	                            mov rbx, rax	       978	sequencer.c	FUNCTION_34	CALL_1
0x4004706	      0xe800000000	                          call 0x400470b	       979	sequencer.c	FUNCTION_34	CALL_2
0x400470b	          0x4889df	                            mov rdi, rbx	       980	sequencer.c	FUNCTION_34	CALL_4
0x400470e	          0x4989c6	                            mov r14, rax	       979	sequencer.c	FUNCTION_34	CALL_2
0x4004711	      0xe800000000	                          call 0x4004716	       980	sequencer.c	FUNCTION_34	CALL_4
0x4004716	            0x85c0	                           test eax, eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x4004718	     0xf849a000000	                            je 0x40047b8	       980	sequencer.c	FUNCTION_34	CALL_4
0x400471e	          0x4889df	                            mov rdi, rbx	       982	sequencer.c	FUNCTION_34	CALL_5
0x4004721	      0xe800000000	                          call 0x4004726	       982	sequencer.c	FUNCTION_34	CALL_5
0x4004726	          0x4c89f7	                            mov rdi, r14	       983	sequencer.c	FUNCTION_34	CALL_6
0x4004729	      0xe800000000	                          call 0x400472e	       983	sequencer.c	FUNCTION_34	CALL_6
0x400472e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4004733	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4004738	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400473a	      0xe800000000	                          call 0x400473f	        54	gettext.h	FUNCTION_147
0x400473f	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_147
0x4004742	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004745	      0xe800000000	                          call 0x400474a	       279	strbuf.h	FUNCTION_110	CALL_2
0x400474a	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_110	CALL_2
0x400474d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004750	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004753	      0xe800000000	                          call 0x4004758	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004758	      0xe91efdffff	                           jmp 0x400447b	       279	strbuf.h	FUNCTION_110	CALL_2
0x400475d	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004760	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004763	      0xba0a000000	                            mov edx, 0xa	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004768	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x400476d	      0xe800000000	                          call 0x4004772	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004772	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4004777	          0x4889e7	                            mov rdi, rsp	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x400477a	      0xe800000000	                          call 0x400477f	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x400477f	      0xe9e0fcffff	                           jmp 0x4004464	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4004784	         0xf1f4000	                         nop dword [rax]	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4004788	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400478d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4004792	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4004794	      0xe800000000	                          call 0x4004799	        54	gettext.h	FUNCTION_147
0x4004799	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_147
0x400479c	      0xe9c7fdffff	                           jmp 0x4004568	        54	gettext.h	FUNCTION_147
0x40047a1	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x40047a6	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_109	CALL_2
0x40047a9	      0xe800000000	                          call 0x40047ae	       228	strbuf.h	FUNCTION_109	CALL_2
0x40047ae	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_109	CALL_2
0x40047b3	      0xe91affffff	                           jmp 0x40046d2	       228	strbuf.h	FUNCTION_109	CALL_2
0x40047b8	          0x4c89f7	                            mov rdi, r14	       980	sequencer.c	FUNCTION_34	CALL_4
0x40047bb	      0xe800000000	                          call 0x40047c0	       980	sequencer.c	FUNCTION_34	CALL_4
0x40047c0	            0x85c0	                           test eax, eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x40047c2	     0xf8556ffffff	                           jne 0x400471e	       980	sequencer.c	FUNCTION_34	CALL_4
0x40047c8	          0x4889df	                            mov rdi, rbx	       982	sequencer.c	FUNCTION_34	CALL_5
0x40047cb	      0xe800000000	                          call 0x40047d0	       982	sequencer.c	FUNCTION_34	CALL_5
0x40047d0	          0x4c89f7	                            mov rdi, r14	       983	sequencer.c	FUNCTION_34	CALL_6
0x40047d3	      0xe800000000	                          call 0x40047d8	       983	sequencer.c	FUNCTION_34	CALL_6
0x40047d8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40047dd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40047e2	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40047e4	      0xe800000000	                          call 0x40047e9	        54	gettext.h	FUNCTION_147
0x40047e9	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_147
0x40047ec	      0xe951ffffff	                           jmp 0x4004742	        54	gettext.h	FUNCTION_147
0x40047f1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_147
0x40047f6	      0xe855bcffff	                       call sym._.part.6	        54	gettext.h	FUNCTION_147
0x40047fb	          0x4889c7	                            mov rdi, rax	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40047fe	            0x31c0	                            xor eax, eax	      1053	sequencer.c	FUNCTION_35	CALL_31
0x4004800	      0xe800000000	                          call 0x4004805	      1053	sequencer.c	FUNCTION_35	CALL_31
0x4004805	      0xbf00000000	                              mov edi, 0	      1053	sequencer.c	FUNCTION_35	CALL_31
0x400480a	      0xe841bcffff	                       call sym._.part.6	      1053	sequencer.c	FUNCTION_35	CALL_31
0x400480f	          0x4889c7	                            mov rdi, rax	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4004812	            0x31c0	                            xor eax, eax	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4004814	      0xe800000000	                          call 0x4004819	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4004819	      0xe800000000	                          call 0x400481e	      1068	sequencer.c	FUNCTION_35
0x400481e	      0xbf00000000	                              mov edi, 0	      1068	sequencer.c	FUNCTION_35
0x4004823	      0xe828bcffff	                       call sym._.part.6	      1068	sequencer.c	FUNCTION_35
0x4004828	          0x4889c7	                            mov rdi, rax	      1007	sequencer.c	FUNCTION_35	CALL_6
0x400482b	            0x31c0	                            xor eax, eax	      1007	sequencer.c	FUNCTION_35	CALL_6
0x400482d	      0xe800000000	                          call 0x4004832	      1007	sequencer.c	FUNCTION_35	CALL_6
do_recursive_merge	WHILE,0:IF,6:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,1:CALL,20	176
0x4003bf0	            0x4157	                                push r15	       510	sequencer.c	FUNCTION_21
0x4003bf2	            0x4156	                                push r14	       510	sequencer.c	FUNCTION_21
0x4003bf4	          0x4989cf	                            mov r15, rcx	       510	sequencer.c	FUNCTION_21
0x4003bf7	            0x4155	                                push r13	       510	sequencer.c	FUNCTION_21
0x4003bf9	            0x4154	                                push r12	       510	sequencer.c	FUNCTION_21
0x4003bfb	          0x4989f4	                            mov r12, rsi	       510	sequencer.c	FUNCTION_21
0x4003bfe	              0x55	                                push rbp	       510	sequencer.c	FUNCTION_21
0x4003bff	              0x53	                                push rbx	       510	sequencer.c	FUNCTION_21
0x4003c00	          0x4889fd	                            mov rbp, rdi	       510	sequencer.c	FUNCTION_21
0x4003c03	      0xbe04000000	                              mov esi, 4	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003c08	          0x4889d3	                            mov rbx, rdx	       510	sequencer.c	FUNCTION_21
0x4003c0b	          0x4d89c5	                             mov r13, r8	       510	sequencer.c	FUNCTION_21
0x4003c0e	    0x4881ecc80400	                          sub rsp, 0x4c8	       510	sequencer.c	FUNCTION_21
0x4003c15	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003c1a	      0x4c894c2408	                 mov qword [rsp + 8], r9	       510	sequencer.c	FUNCTION_21
0x4003c1f	    0x4c8bb4240005	           mov r14, qword [rsp + 0x500] 	       510	sequencer.c	FUNCTION_21
0x4003c27	    0x64488b042528	                mov rax, qword fs:[0x28]	       510	sequencer.c	FUNCTION_21
0x4003c30	    0x48898424b804	            mov qword [rsp + 0x4b8], rax	       510	sequencer.c	FUNCTION_21
0x4003c38	            0x31c0	                            xor eax, eax	       510	sequencer.c	FUNCTION_21
0x4003c3a	    0x48c744241000	               mov qword [rsp + 0x10], 0	       515	sequencer.c	FUNCTION_21
0x4003c43	      0xe800000000	                          call 0x4003c48	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003c48	            0x85c0	                           test eax, eax	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003c4a	     0xf881c020000	                            js 0x4003e6c	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003c50	      0xbf00000000	                              mov edi, 0	       520	sequencer.c	FUNCTION_21
0x4003c55	      0xe800000000	                          call 0x4003c5a	       520	sequencer.c	FUNCTION_21
0x4003c5a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       522	sequencer.c	FUNCTION_21	CALL_2
0x4003c5f	      0xe800000000	                          call 0x4003c64	       522	sequencer.c	FUNCTION_21	CALL_2
0x4003c64	          0x4885ed	                           test rbp, rbp	       523	sequencer.c	FUNCTION_21
0x4003c67	      0xb800000000	                              mov eax, 0	       523	sequencer.c	FUNCTION_21
0x4003c6c	    0x48c744242800	               mov qword [rsp + 0x28], 0	       524	sequencer.c	FUNCTION_21
0x4003c75	        0x480f44d8	                          cmove rbx, rax	       523	sequencer.c	FUNCTION_21
0x4003c79	          0x4d85e4	                           test r12, r12	       525	sequencer.c	FUNCTION_21
0x4003c7c	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       523	sequencer.c	FUNCTION_21
0x4003c81	     0xf8481010000	                            je 0x4003e08	       525	sequencer.c	FUNCTION_21
0x4003c87	        0x41833e02	                      cmp dword [r14], 2	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003c8b	      0x4c897c2430	             mov qword [rsp + 0x30], r15	       525	sequencer.c	FUNCTION_21
0x4003c90	     0xf840a010000	                            je 0x4003da0	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003c96	          0x4c89ef	                            mov rdi, r13	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003c99	    0xc74424700100	               mov dword [rsp + 0x70], 1	       528	sequencer.c	FUNCTION_21
0x4003ca1	      0xe800000000	                          call 0x4003ca6	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003ca6	          0x4c89e7	                            mov rdi, r12	       531	sequencer.c	FUNCTION_21	CALL_6
0x4003ca9	          0x4989c5	                            mov r13, rax	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003cac	      0xe800000000	                          call 0x4003cb1	       531	sequencer.c	FUNCTION_21	CALL_6
0x4003cb1	          0x4885ed	                           test rbp, rbp	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003cb4	          0x4989c4	                            mov r12, rax	       531	sequencer.c	FUNCTION_21	CALL_6
0x4003cb7	     0xf8493010000	                            je 0x4003e50	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003cbd	          0x4889ef	                            mov rdi, rbp	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003cc0	      0xe800000000	                          call 0x4003cc5	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003cc5	          0x4889c5	                            mov rbp, rax	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003cc8	        0x498b4650	            mov rax, qword [r14 + 0x50] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003ccc	        0x498b5e48	            mov rbx, qword [r14 + 0x48] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003cd0	        0x48c1e003	                              shl rax, 3	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003cd4	          0x4885c0	                           test rax, rax	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003cd7	            0x7429	                            je 0x4003d02	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003cd9	     0xf1f80000000	                         nop dword [rax]	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003ce0	          0x488b33	                    mov rsi, qword [rbx]	       535	sequencer.c	FUNCTION_21	CALL_9
0x4003ce3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       535	sequencer.c	FUNCTION_21	CALL_9
0x4003ce8	        0x4883c308	                              add rbx, 8	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003cec	      0xe800000000	                          call 0x4003cf1	       535	sequencer.c	FUNCTION_21	CALL_9
0x4003cf1	        0x498b5650	            mov rdx, qword [r14 + 0x50] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003cf5	        0x498b4648	            mov rax, qword [r14 + 0x48] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003cf9	        0x488d04d0	                  lea rax, [rax + rdx*8]	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003cfd	          0x4839c3	                            cmp rbx, rax	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003d00	            0x75de	                           jne 0x4003ce0	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003d02	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003d07	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003d0c	          0x4889e9	                            mov rcx, rbp	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003d0f	          0x4c89e2	                            mov rdx, r12	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003d12	          0x4c89ee	                            mov rsi, r13	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003d15	      0xe800000000	                          call 0x4003d1a	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003d1a	        0x41833e02	                      cmp dword [r14], 2	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003d1e	            0x89c3	                            mov ebx, eax	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003d20	     0xf848a000000	                            je 0x4003db0	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003d26	      0x488d7c2478	                   lea rdi, [rsp + 0x78]	       542	sequencer.c	FUNCTION_21	CALL_13
0x4003d2b	      0xe800000000	                          call 0x4003d30	       542	sequencer.c	FUNCTION_21	CALL_13
0x4003d30	        0x8b74246c	            mov esi, dword [rsp + 0x6c] 	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003d34	            0x31d2	                            xor edx, edx	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003d36	      0xbf00000000	                              mov edi, 0	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003d3b	      0xe800000000	                          call 0x4003d40	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003d40	            0x85db	                           test ebx, ebx	       544	sequencer.c	FUNCTION_21	IF_4
0x4003d42	     0xf88a8000000	                            js 0x4003df0	       544	sequencer.c	FUNCTION_21	IF_4
0x4003d48	      0x488d742410	                   lea rsi, [rsp + 0x10]	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003d4d	      0xba03000000	                              mov edx, 3	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003d52	      0xbf00000000	                              mov edi, 0	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003d57	      0xe800000000	                          call 0x4003d5c	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003d5c	            0x85c0	                           test eax, eax	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003d5e	     0xf852b010000	                           jne 0x4003e8f	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003d64	            0x85db	                           test ebx, ebx	       558	sequencer.c	FUNCTION_21	IF_6
0x4003d66	            0x7478	                            je 0x4003de0	       558	sequencer.c	FUNCTION_21	IF_6
0x4003d68	            0x31c0	                            xor eax, eax	       561	sequencer.c	FUNCTION_21
0x4003d6a	            0x85db	                           test ebx, ebx	       561	sequencer.c	FUNCTION_21
0x4003d6c	           0xf94c0	                                 sete al	       561	sequencer.c	FUNCTION_21
0x4003d6f	    0x488b8c24b804	           mov rcx, qword [rsp + 0x4b8] 	       562	sequencer.c	FUNCTION_21
0x4003d77	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       562	sequencer.c	FUNCTION_21
0x4003d80	     0xf8562010000	                           jne 0x4003ee8	       562	sequencer.c	FUNCTION_21
0x4003d86	    0x4881c4c80400	                          add rsp, 0x4c8	       562	sequencer.c	FUNCTION_21
0x4003d8d	              0x5b	                                 pop rbx	       562	sequencer.c	FUNCTION_21
0x4003d8e	              0x5d	                                 pop rbp	       562	sequencer.c	FUNCTION_21
0x4003d8f	            0x415c	                                 pop r12	       562	sequencer.c	FUNCTION_21
0x4003d91	            0x415d	                                 pop r13	       562	sequencer.c	FUNCTION_21
0x4003d93	            0x415e	                                 pop r14	       562	sequencer.c	FUNCTION_21
0x4003d95	            0x415f	                                 pop r15	       562	sequencer.c	FUNCTION_21
0x4003d97	              0xc3	                                     ret	       562	sequencer.c	FUNCTION_21
0x4003d98	     0xf1f84000000	                   nop dword [rax + rax]	       562	sequencer.c	FUNCTION_21
0x4003da0	    0xc74424480200	               mov dword [rsp + 0x48], 2	       527	sequencer.c	FUNCTION_21	IF_2
0x4003da8	      0xe9e9feffff	                           jmp 0x4003c96	       527	sequencer.c	FUNCTION_21	IF_2
0x4003dad	           0xf1f00	                         nop dword [rax]	       527	sequencer.c	FUNCTION_21	IF_2
0x4003db0	            0x85c0	                           test eax, eax	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003db2	     0xf8ebe000000	                           jle 0x4003e76	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003db8	      0x488d7c2478	                   lea rdi, [rsp + 0x78]	       542	sequencer.c	FUNCTION_21	CALL_13
0x4003dbd	      0xe800000000	                          call 0x4003dc2	       542	sequencer.c	FUNCTION_21	CALL_13
0x4003dc2	        0x8b74246c	            mov esi, dword [rsp + 0x6c] 	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003dc6	            0x31d2	                            xor edx, edx	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003dc8	      0xbf00000000	                              mov edi, 0	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003dcd	      0xe800000000	                          call 0x4003dd2	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003dd2	      0xe971ffffff	                           jmp 0x4003d48	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003dd7	    0x660f1f840000	                    nop word [rax + rax]	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003de0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       559	sequencer.c	FUNCTION_21	CALL_20
0x4003de5	      0xe800000000	                          call 0x4003dea	       559	sequencer.c	FUNCTION_21	CALL_20
0x4003dea	      0xe979ffffff	                           jmp 0x4003d68	       559	sequencer.c	FUNCTION_21	CALL_20
0x4003def	              0x90	                                     nop	       559	sequencer.c	FUNCTION_21	CALL_20
0x4003df0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       304	lockfile.h	FUNCTION_240	CALL_1
0x4003df5	      0xe800000000	                          call 0x4003dfa	       304	lockfile.h	FUNCTION_240	CALL_1
0x4003dfa	            0x89d8	                            mov eax, ebx	       546	sequencer.c	FUNCTION_21	IF_4
0x4003dfc	      0xe96effffff	                           jmp 0x4003d6f	       546	sequencer.c	FUNCTION_21	IF_4
0x4003e01	     0xf1f80000000	                         nop dword [rax]	       546	sequencer.c	FUNCTION_21	IF_4
0x4003e08	        0x41833e02	                      cmp dword [r14], 2	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003e0c	    0x48c744243000	               mov qword [rsp + 0x30], 0	       525	sequencer.c	FUNCTION_21
0x4003e15	     0xf84c0000000	                            je 0x4003edb	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003e1b	          0x4c89ef	                            mov rdi, r13	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003e1e	    0xc74424700100	               mov dword [rsp + 0x70], 1	       528	sequencer.c	FUNCTION_21
0x4003e26	      0xe800000000	                          call 0x4003e2b	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003e2b	          0x4989c5	                            mov r13, rax	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003e2e	    0x488b05000000	            mov rax, qword [0x04003e35] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e35	        0x488b4058	            mov rax, qword [rax + 0x58] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e39	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e3d	      0xe800000000	                          call 0x4003e42	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e42	          0x4885ed	                           test rbp, rbp	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003e45	          0x4989c4	                            mov r12, rax	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e48	     0xf856ffeffff	                           jne 0x4003cbd	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003e4e	            0x6690	                                     nop	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003e50	    0x488b05000000	            mov rax, qword [0x04003e57] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e57	        0x488b4058	            mov rax, qword [rax + 0x58] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e5b	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e5f	      0xe800000000	                          call 0x4003e64	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e64	          0x4889c5	                            mov rbp, rax	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e67	      0xe95cfeffff	                           jmp 0x4003cc8	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003e6c	      0xb8ffffffff	                     mov eax, 0xffffffff	       518	sequencer.c	FUNCTION_21	IF_1
0x4003e71	      0xe9f9feffff	                           jmp 0x4003d6f	       518	sequencer.c	FUNCTION_21	IF_1
0x4003e76	    0x488b35000000	            mov rsi, qword [0x04003e7d] 	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003e7d	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003e85	      0xe800000000	                          call 0x4003e8a	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003e8a	      0xe997feffff	                           jmp 0x4003d26	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003e8f	          0x418b3e	                    mov edi, dword [r14]	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003e92	      0xbb00000000	                              mov ebx, 0	        53	gettext.h	FUNCTION_147	IF_1
0x4003e97	      0xe834caffff	             call sym.action_name.isra.7	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003e9c	          0x803800	                       cmp byte [rax], 0	        52	gettext.h	FUNCTION_147	IF_1
0x4003e9f	            0x7412	                            je 0x4003eb3	        52	gettext.h	FUNCTION_147	IF_1
0x4003ea1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4003ea6	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_147
0x4003ea9	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4003eab	      0xe800000000	                          call 0x4003eb0	        54	gettext.h	FUNCTION_147
0x4003eb0	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_147
0x4003eb3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4003eb8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4003ebd	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4003ebf	      0xe800000000	                          call 0x4003ec4	        54	gettext.h	FUNCTION_147
0x4003ec4	          0x4889de	                            mov rsi, rbx	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003ec7	          0x4889c7	                            mov rdi, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003eca	            0x31c0	                            xor eax, eax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003ecc	      0xe800000000	                          call 0x4003ed1	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003ed1	      0xb8ffffffff	                     mov eax, 0xffffffff	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003ed6	      0xe994feffff	                           jmp 0x4003d6f	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003edb	    0xc74424480200	               mov dword [rsp + 0x48], 2	       527	sequencer.c	FUNCTION_21	IF_2
0x4003ee3	      0xe933ffffff	                           jmp 0x4003e1b	       527	sequencer.c	FUNCTION_21	IF_2
0x4003ee8	      0xe800000000	                          call 0x4003eed	       562	sequencer.c	FUNCTION_21
write_author_script	WHILE,3:IF,8:functions,0:SWITCH,0:ELSE,8:DO,0:FOR,1:CALL,18	226
0x4002860	            0x4155	                                push r13	       597	sequencer.c	FUNCTION_23
0x4002862	            0x4154	                                push r12	       597	sequencer.c	FUNCTION_23
0x4002864	              0x55	                                push rbp	       597	sequencer.c	FUNCTION_23
0x4002865	              0x53	                                push rbx	       597	sequencer.c	FUNCTION_23
0x4002866	          0x4889fd	                            mov rbp, rdi	       597	sequencer.c	FUNCTION_23
0x4002869	        0x4883ec28	                           sub rsp, 0x28	       597	sequencer.c	FUNCTION_23
0x400286d	    0x64488b042528	                mov rax, qword fs:[0x28]	       597	sequencer.c	FUNCTION_23
0x4002876	      0x4889442418	             mov qword [rsp + 0x18], rax	       597	sequencer.c	FUNCTION_23
0x400287b	            0x31c0	                            xor eax, eax	       597	sequencer.c	FUNCTION_23
0x400287d	          0x803f00	                       cmp byte [rdi], 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4002880	    0x48c704240000	                      mov qword [rsp], 0	       598	sequencer.c	FUNCTION_23
0x4002888	    0x48c744240800	                  mov qword [rsp + 8], 0	       598	sequencer.c	FUNCTION_23
0x4002891	    0x48c744241000	               mov qword [rsp + 0x10], 0	       598	sequencer.c	FUNCTION_23
0x400289a	     0xf8498010000	                            je 0x4002a38	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40028a0	      0xbe00000000	                              mov esi, 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40028a5	          0x4889ef	                            mov rdi, rbp	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40028a8	      0xe800000000	                          call 0x40028ad	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40028ad	            0x85c0	                           test eax, eax	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40028af	     0xf8583010000	                           jne 0x4002a38	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40028b5	          0x4889eb	                            mov rbx, rbp	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40028b8	      0xb800000000	                              mov eax, 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40028bd	            0xeb12	                           jmp 0x40028d1	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40028bf	              0x90	                                     nop	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40028c0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40028c4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40028c8	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40028cb	     0xf8547010000	                           jne 0x4002a18	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40028d1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x40028d4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x40028d6	            0x75e8	                           jne 0x40028c0	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x40028d8	      0xba11000000	                           mov edx, 0x11	       279	strbuf.h	FUNCTION_110	CALL_2
0x40028dd	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x40028e2	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x40028e5	        0x4883c301	                              add rbx, 1	       279	strbuf.h	FUNCTION_110	CALL_2
0x40028e9	    0x41bd01240000	                        mov r13d, 0x2401	       616	sequencer.c	FUNCTION_23	WHILE_1
0x40028ef	      0xe800000000	                          call 0x40028f4	       279	strbuf.h	FUNCTION_110	CALL_2
0x40028f4	      0x440fb663ff	              movzx r12d, byte [rbx - 1]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x40028f9	        0x488d6bff	                      lea rbp, [rbx - 1]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x40028fd	        0x4180fc0d	                           cmp r12b, 0xd	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4002901	            0x7706	                            ja 0x4002909	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4002903	        0x4d0fa3e5	                             bt r13, r12	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4002907	            0x721f	                            jb 0x4002928	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4002909	      0xb800000000	                              mov eax, 0	       616	sequencer.c	FUNCTION_23	WHILE_1
0x400290e	            0xeb11	                           jmp 0x4002921	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4002910	        0x4883c501	                              add rbp, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4002914	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4002918	          0x3a55ff	                  cmp dl, byte [rbp - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400291b	     0xf854f010000	                           jne 0x4002a70	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4002921	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4002924	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4002926	            0x75e8	                           jne 0x4002910	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4002928	      0xba14000000	                           mov edx, 0x14	       279	strbuf.h	FUNCTION_110	CALL_2
0x400292d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002932	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002935	        0x4883c501	                              add rbp, 1	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002939	    0x41bd01240000	                        mov r13d, 0x2401	       624	sequencer.c	FUNCTION_23	WHILE_2
0x400293f	      0xe800000000	                          call 0x4002944	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002944	         0xf1f4000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002948	      0x440fb665ff	              movzx r12d, byte [rbp - 1]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x400294d	        0x488d5dff	                      lea rbx, [rbp - 1]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002951	        0x4180fc0d	                           cmp r12b, 0xd	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002955	            0x7706	                            ja 0x400295d	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002957	        0x4d0fa3e5	                             bt r13, r12	       624	sequencer.c	FUNCTION_23	WHILE_2
0x400295b	            0x7223	                            jb 0x4002980	       624	sequencer.c	FUNCTION_23	WHILE_2
0x400295d	      0xb800000000	                              mov eax, 0	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002962	            0xeb15	                           jmp 0x4002979	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002964	         0xf1f4000	                         nop dword [rax]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002968	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400296c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4002970	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4002973	     0xf8577010000	                           jne 0x4002af0	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4002979	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400297c	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400297e	            0x75e8	                           jne 0x4002968	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4002980	      0xba14000000	                           mov edx, 0x14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002985	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x400298a	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x400298d	      0xe800000000	                          call 0x4002992	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002992	        0x4883c301	                              add rbx, 1	       279	strbuf.h	FUNCTION_110	CALL_2
0x4002996	    0x41bc01240000	                        mov r12d, 0x2401	       632	sequencer.c	FUNCTION_23	WHILE_3
0x400299c	            0xeb20	                           jmp 0x40029be	       632	sequencer.c	FUNCTION_23	WHILE_3
0x400299e	            0x6690	                                     nop	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40029a0	        0x4080fd27	                           cmp bpl, 0x27	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x40029a4	            0x752c	                           jne 0x40029d2	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x40029a6	      0xba27000000	                           mov edx, 0x27	       636	sequencer.c	FUNCTION_23	CALL_15
0x40029ab	      0xbe00000000	                              mov esi, 0	       636	sequencer.c	FUNCTION_23	CALL_15
0x40029b0	          0x4889e7	                            mov rdi, rsp	       636	sequencer.c	FUNCTION_23	CALL_15
0x40029b3	            0x31c0	                            xor eax, eax	       636	sequencer.c	FUNCTION_23	CALL_15
0x40029b5	      0xe800000000	                          call 0x40029ba	       636	sequencer.c	FUNCTION_23	CALL_15
0x40029ba	        0x4883c301	                              add rbx, 1	       636	sequencer.c	FUNCTION_23	CALL_15
0x40029be	         0xfb66bff	               movzx ebp, byte [rbx - 1]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40029c2	        0x4080fd0d	                            cmp bpl, 0xd	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40029c6	            0x77d8	                            ja 0x40029a0	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40029c8	        0x490fa3ec	                             bt r12, rbp	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40029cc	     0xf82b4010000	                            jb 0x4002b86	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40029d2	        0x488b0424	                    mov rax, qword [rsp]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40029d6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x40029d9	     0xf855b010000	                           jne 0x4002b3a	       141	strbuf.h	FUNCTION_107
0x40029df	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x40029e4	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_109	CALL_2
0x40029e7	      0xe800000000	                          call 0x40029ec	       228	strbuf.h	FUNCTION_109	CALL_2
0x40029ec	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_109	CALL_2
0x40029f1	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x40029f5	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_109
0x40029fa	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_109
0x40029ff	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_109
0x4002a03	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_109
0x4002a08	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_109
0x4002a0d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4002a11	            0xeba7	                           jmp 0x40029ba	       230	strbuf.h	FUNCTION_109
0x4002a13	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_109
0x4002a18	      0xbe0a000000	                            mov esi, 0xa	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4002a1d	          0x4889ef	                            mov rdi, rbp	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4002a20	      0xe800000000	                          call 0x4002a25	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4002a25	          0x4885c0	                           test rax, rax	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4002a28	            0x740e	                            je 0x4002a38	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4002a2a	        0x80780100	                   cmp byte [rax + 1], 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4002a2e	        0x488d6801	                      lea rbp, [rax + 1]	       611	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4002a32	     0xf8568feffff	                           jne 0x40028a0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4002a38	    0x488b3d000000	            mov rdi, qword [0x04002a3f] 	       101	sequencer.c	CALL_16
0x4002a3f	          0x4885ff	                           test rdi, rdi	       101	sequencer.c	CALL_16
0x4002a42	     0xf846f010000	                            je 0x4002bb7	       101	sequencer.c	CALL_16
0x4002a48	      0xe800000000	                          call 0x4002a4d	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x4002a4d	            0x31c0	                            xor eax, eax	       607	sequencer.c	FUNCTION_23	FOR_1	IF_1
0x4002a4f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       640	sequencer.c	FUNCTION_23
0x4002a54	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       640	sequencer.c	FUNCTION_23
0x4002a5d	     0xf8587010000	                           jne 0x4002bea	       640	sequencer.c	FUNCTION_23
0x4002a63	        0x4883c428	                           add rsp, 0x28	       640	sequencer.c	FUNCTION_23
0x4002a67	              0x5b	                                 pop rbx	       640	sequencer.c	FUNCTION_23
0x4002a68	              0x5d	                                 pop rbp	       640	sequencer.c	FUNCTION_23
0x4002a69	            0x415c	                                 pop r12	       640	sequencer.c	FUNCTION_23
0x4002a6b	            0x415d	                                 pop r13	       640	sequencer.c	FUNCTION_23
0x4002a6d	              0xc3	                                     ret	       640	sequencer.c	FUNCTION_23
0x4002a6e	            0x6690	                                     nop	       640	sequencer.c	FUNCTION_23
0x4002a70	        0x4180fc27	                          cmp r12b, 0x27	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4002a74	            0x745a	                            je 0x4002ad0	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4002a76	        0x488b0424	                    mov rax, qword [rsp]	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4002a7a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x4002a7d	            0x753b	                           jne 0x4002aba	       141	strbuf.h	FUNCTION_107
0x4002a7f	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002a84	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002a87	      0xe800000000	                          call 0x4002a8c	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002a8c	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002a91	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x4002a95	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_109
0x4002a9a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_109
0x4002a9f	        0x44882410	              mov byte [rax + rdx], r12b	       229	strbuf.h	FUNCTION_109
0x4002aa3	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_109
0x4002aa8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_109
0x4002aad	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4002ab1	        0x4883c301	                              add rbx, 1	       230	strbuf.h	FUNCTION_109
0x4002ab5	      0xe93afeffff	                           jmp 0x40028f4	       230	strbuf.h	FUNCTION_109
0x4002aba	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_107
0x4002abf	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002ac3	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002ac6	            0x75c9	                           jne 0x4002a91	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002ac8	            0xebb5	                           jmp 0x4002a7f	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002aca	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002ad0	      0xba27000000	                           mov edx, 0x27	       622	sequencer.c	FUNCTION_23	CALL_8
0x4002ad5	      0xbe00000000	                              mov esi, 0	       622	sequencer.c	FUNCTION_23	CALL_8
0x4002ada	          0x4889e7	                            mov rdi, rsp	       622	sequencer.c	FUNCTION_23	CALL_8
0x4002add	            0x31c0	                            xor eax, eax	       622	sequencer.c	FUNCTION_23	CALL_8
0x4002adf	      0xe800000000	                          call 0x4002ae4	       622	sequencer.c	FUNCTION_23	CALL_8
0x4002ae4	            0xebcb	                           jmp 0x4002ab1	       622	sequencer.c	FUNCTION_23	CALL_8
0x4002ae6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       622	sequencer.c	FUNCTION_23	CALL_8
0x4002af0	        0x4180fc27	                          cmp r12b, 0x27	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4002af4	            0x747a	                            je 0x4002b70	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4002af6	        0x488b0424	                    mov rax, qword [rsp]	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4002afa	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x4002afd	            0x7559	                           jne 0x4002b58	       141	strbuf.h	FUNCTION_107
0x4002aff	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002b04	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002b07	      0xe800000000	                          call 0x4002b0c	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002b0c	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_109	CALL_2
0x4002b11	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x4002b15	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_109
0x4002b1a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_109
0x4002b1f	        0x44882410	              mov byte [rax + rdx], r12b	       229	strbuf.h	FUNCTION_109
0x4002b23	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_109
0x4002b28	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_109
0x4002b2d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4002b31	        0x4883c501	                              add rbp, 1	       230	strbuf.h	FUNCTION_109
0x4002b35	      0xe90efeffff	                           jmp 0x4002948	       230	strbuf.h	FUNCTION_109
0x4002b3a	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_107
0x4002b3f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002b43	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002b46	     0xf85a5feffff	                           jne 0x40029f1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002b4c	      0xe98efeffff	                           jmp 0x40029df	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002b51	     0xf1f80000000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002b58	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_107
0x4002b5d	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002b61	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002b64	            0x75ab	                           jne 0x4002b11	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002b66	            0xeb97	                           jmp 0x4002aff	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002b68	     0xf1f84000000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4002b70	      0xba27000000	                           mov edx, 0x27	       630	sequencer.c	FUNCTION_23	CALL_12
0x4002b75	      0xbe00000000	                              mov esi, 0	       630	sequencer.c	FUNCTION_23	CALL_12
0x4002b7a	          0x4889e7	                            mov rdi, rsp	       630	sequencer.c	FUNCTION_23	CALL_12
0x4002b7d	            0x31c0	                            xor eax, eax	       630	sequencer.c	FUNCTION_23	CALL_12
0x4002b7f	      0xe800000000	                          call 0x4002b84	       630	sequencer.c	FUNCTION_23	CALL_12
0x4002b84	            0xebab	                           jmp 0x4002b31	       630	sequencer.c	FUNCTION_23	CALL_12
0x4002b86	    0x488b15000000	            mov rdx, qword [0x04002b8d] 	       101	sequencer.c	CALL_16
0x4002b8d	          0x4885d2	                           test rdx, rdx	       101	sequencer.c	CALL_16
0x4002b90	            0x7440	                            je 0x4002bd2	       101	sequencer.c	CALL_16
0x4002b92	      0x488b742408	                mov rsi, qword [rsp + 8]	       637	sequencer.c	FUNCTION_23	CALL_17
0x4002b97	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       637	sequencer.c	FUNCTION_23	CALL_17
0x4002b9c	      0xb901000000	                              mov ecx, 1	       637	sequencer.c	FUNCTION_23	CALL_17
0x4002ba1	      0xe86afbffff	                  call sym.write_message	       637	sequencer.c	FUNCTION_23	CALL_17
0x4002ba6	          0x4889e7	                            mov rdi, rsp	       638	sequencer.c	FUNCTION_23	CALL_18
0x4002ba9	            0x89c3	                            mov ebx, eax	       637	sequencer.c	FUNCTION_23	CALL_17
0x4002bab	      0xe800000000	                          call 0x4002bb0	       638	sequencer.c	FUNCTION_23	CALL_18
0x4002bb0	            0x89d8	                            mov eax, ebx	       639	sequencer.c	FUNCTION_23
0x4002bb2	      0xe998feffff	                           jmp 0x4002a4f	       639	sequencer.c	FUNCTION_23
0x4002bb7	      0xbf00000000	                              mov edi, 0	       101	sequencer.c	CALL_16
0x4002bbc	            0x31c0	                            xor eax, eax	       101	sequencer.c	CALL_16
0x4002bbe	      0xe800000000	                          call 0x4002bc3	       101	sequencer.c	CALL_16
0x4002bc3	          0x4889c7	                            mov rdi, rax	       101	sequencer.c	CALL_16
0x4002bc6	    0x488905000000	            mov qword [0x04002bcd], rax 	       101	sequencer.c	CALL_16
0x4002bcd	      0xe976feffff	                           jmp 0x4002a48	       101	sequencer.c	CALL_16
0x4002bd2	      0xbf00000000	                              mov edi, 0	       101	sequencer.c	CALL_16
0x4002bd7	            0x31c0	                            xor eax, eax	       101	sequencer.c	CALL_16
0x4002bd9	      0xe800000000	                          call 0x4002bde	       101	sequencer.c	CALL_16
0x4002bde	          0x4889c2	                            mov rdx, rax	       101	sequencer.c	CALL_16
0x4002be1	    0x488905000000	            mov qword [0x04002be8], rax 	       101	sequencer.c	CALL_16
0x4002be8	            0xeba8	                           jmp 0x4002b92	       101	sequencer.c	CALL_16
0x4002bea	      0xe800000000	                          call 0x4002bef	       640	sequencer.c	FUNCTION_23
save_todo	WHILE,0:IF,8:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,18	165
0x40031b0	            0x4155	                                push r13	      2326	sequencer.c	FUNCTION_72
0x40031b2	            0x4154	                                push r12	      2326	sequencer.c	FUNCTION_72
0x40031b4	          0x4989f4	                            mov r12, rsi	      2326	sequencer.c	FUNCTION_72
0x40031b7	              0x55	                                push rbp	      2326	sequencer.c	FUNCTION_72
0x40031b8	              0x53	                                push rbx	      2326	sequencer.c	FUNCTION_72
0x40031b9	          0x4889fb	                            mov rbx, rdi	      2326	sequencer.c	FUNCTION_72
0x40031bc	          0x4889f7	                            mov rdi, rsi	      2328	sequencer.c	FUNCTION_72	CALL_1
0x40031bf	            0x31ed	                            xor ebp, ebp	      2336	sequencer.c	FUNCTION_72	IF_1
0x40031c1	        0x4883ec18	                           sub rsp, 0x18	      2326	sequencer.c	FUNCTION_72
0x40031c5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2326	sequencer.c	FUNCTION_72
0x40031ce	      0x4889442408	                mov qword [rsp + 8], rax	      2326	sequencer.c	FUNCTION_72
0x40031d3	            0x31c0	                            xor eax, eax	      2326	sequencer.c	FUNCTION_72
0x40031d5	    0x48c704240000	                      mov qword [rsp], 0	      2327	sequencer.c	FUNCTION_72
0x40031dd	      0xe80ed2ffff	                  call sym.get_todo_path	      2328	sequencer.c	FUNCTION_72	CALL_1
0x40031e2	      0x41833c2402	                      cmp dword [r12], 2	      2336	sequencer.c	FUNCTION_72	IF_1
0x40031e7	          0x4889c6	                            mov rsi, rax	       175	lockfile.h	FUNCTION_231	CALL_1
0x40031ea	          0x4889e7	                            mov rdi, rsp	       175	lockfile.h	FUNCTION_231	CALL_1
0x40031ed	          0x4989c5	                            mov r13, rax	      2328	sequencer.c	FUNCTION_72	CALL_1
0x40031f0	        0x400f94c5	                                sete bpl	      2336	sequencer.c	FUNCTION_72	IF_1
0x40031f4	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_231	CALL_1
0x40031f6	            0x31d2	                            xor edx, edx	       175	lockfile.h	FUNCTION_231	CALL_1
0x40031f8	           0x36b28	             add ebp, dword [rbx + 0x28]	      2336	sequencer.c	FUNCTION_72	IF_1
0x40031fb	      0xe800000000	                          call 0x4003200	       175	lockfile.h	FUNCTION_231	CALL_1
0x4003200	            0x85c0	                           test eax, eax	      2339	sequencer.c	FUNCTION_72	IF_2
0x4003202	     0xf88d0010000	                            js 0x40033d8	      2339	sequencer.c	FUNCTION_72	IF_2
0x4003208	          0x3b6b20	            cmp ebp, dword [rbx + 0x20] 	      1937	sequencer.c	FUNCTION_56
0x400320b	     0xf8cd7000000	                            jl 0x40032e8	      1937	sequencer.c	FUNCTION_56
0x4003211	        0x488b5308	                mov rdx, qword [rbx + 8]	      1938	sequencer.c	FUNCTION_56
0x4003215	          0x4863f2	                         movsxd rsi, edx	      1937	sequencer.c	FUNCTION_56
0x4003218	          0x4829f2	                            sub rdx, rsi	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400321b	        0x48037310	             add rsi, qword [rbx + 0x10]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400321f	            0x89c7	                            mov edi, eax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4003221	      0xe800000000	                          call 0x4003226	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4003226	          0x4885c0	                           test rax, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4003229	     0xf8881010000	                            js 0x40033b0	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400322f	          0x4889e7	                            mov rdi, rsp	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x4003232	      0xe800000000	                          call 0x4003237	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x4003237	            0x85c0	                           test eax, eax	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x4003239	     0xf88a5010000	                            js 0x40033e4	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x400323f	      0x41833c2402	                      cmp dword [r12], 2	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x4003244	     0xf85be000000	                           jne 0x4003308	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x400324a	            0x85ed	                           test ebp, ebp	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x400324c	     0xf8eb6000000	                           jle 0x4003308	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x4003252	    0x4c8b25000000	            mov r12, qword [0x04003259] 	        58	sequencer.c	CALL_9
0x4003259	          0x4d85e4	                           test r12, r12	        58	sequencer.c	CALL_9
0x400325c	     0xf842e010000	                            je 0x4003390	        58	sequencer.c	CALL_9
0x4003262	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x4003264	      0xbab6010000	                          mov edx, 0x1b6	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x4003269	      0xbe41040000	                          mov esi, 0x441	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x400326e	          0x4c89e7	                            mov rdi, r12	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x4003271	      0xe800000000	                          call 0x4003276	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x4003276	            0x85c0	                           test eax, eax	      2353	sequencer.c	FUNCTION_72	IF_5	IF_6
0x4003278	          0x4189c5	                           mov r13d, eax	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x400327b	     0xf8887000000	                            js 0x4003308	      2353	sequencer.c	FUNCTION_72	IF_5	IF_6
0x4003281	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      1937	sequencer.c	FUNCTION_56
0x4003284	          0x8d45ff	                      lea eax, [rbp - 1]	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x4003287	            0x39cd	                            cmp ebp, ecx	      1937	sequencer.c	FUNCTION_56
0x4003289	     0xf8ca1000000	                            jl 0x4003330	      1937	sequencer.c	FUNCTION_56
0x400328f	            0x39c8	                            cmp eax, ecx	      1937	sequencer.c	FUNCTION_56
0x4003291	          0x8b5308	                mov edx, dword [rbx + 8]	      1937	sequencer.c	FUNCTION_56
0x4003294	     0xf8db1000000	                           jge 0x400334b	      1937	sequencer.c	FUNCTION_56
0x400329a	            0x4898	                                    cdqe	      1938	sequencer.c	FUNCTION_56
0x400329c	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1943	sequencer.c	FUNCTION_57	CALL_1
0x40032a0	        0x488d0440	                  lea rax, [rax + rax*2]	      1938	sequencer.c	FUNCTION_56
0x40032a4	        0x48c1e004	                              shl rax, 4	      1938	sequencer.c	FUNCTION_56
0x40032a8	        0x48034318	             add rax, qword [rbx + 0x18]	      1938	sequencer.c	FUNCTION_56
0x40032ac	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x40032b0	            0x29ca	                            sub edx, ecx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40032b2	          0x4863c1	                         movsxd rax, ecx	      1937	sequencer.c	FUNCTION_56
0x40032b5	          0x4863d2	                         movsxd rdx, edx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40032b8	          0x4801c6	                            add rsi, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40032bb	          0x4489ef	                           mov edi, r13d	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40032be	            0x31db	                            xor ebx, ebx	      2351	sequencer.c	FUNCTION_72	IF_5
0x40032c0	      0xe800000000	                          call 0x40032c5	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40032c5	          0x4885c0	                           test rax, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40032c8	     0xf8892000000	                            js 0x4003360	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40032ce	          0x4489ef	                           mov edi, r13d	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40032d1	      0xe800000000	                          call 0x40032d6	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40032d6	            0x85c0	                           test eax, eax	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40032d8	     0xf882e010000	                            js 0x400340c	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40032de	            0x89d8	                            mov eax, ebx	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40032e0	            0xeb28	                           jmp 0x400330a	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40032e2	    0x660f1f440000	                    nop word [rax + rax]	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40032e8	          0x4863d5	                         movsxd rdx, ebp	      1938	sequencer.c	FUNCTION_56
0x40032eb	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      1938	sequencer.c	FUNCTION_56
0x40032ef	        0x48c1e204	                              shl rdx, 4	      1938	sequencer.c	FUNCTION_56
0x40032f3	        0x48035318	             add rdx, qword [rbx + 0x18]	      1938	sequencer.c	FUNCTION_56
0x40032f7	        0x48637228	         movsxd rsi, dword [rdx + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x40032fb	        0x488b5308	                mov rdx, qword [rbx + 8]	      1937	sequencer.c	FUNCTION_56
0x40032ff	      0xe914ffffff	                           jmp 0x4003218	      1937	sequencer.c	FUNCTION_56
0x4003304	         0xf1f4000	                         nop dword [rax]	      1937	sequencer.c	FUNCTION_56
0x4003308	            0x31c0	                            xor eax, eax	      2363	sequencer.c	FUNCTION_72
0x400330a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2364	sequencer.c	FUNCTION_72
0x400330f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2364	sequencer.c	FUNCTION_72
0x4003318	     0xf850f010000	                           jne 0x400342d	      2364	sequencer.c	FUNCTION_72
0x400331e	        0x4883c418	                           add rsp, 0x18	      2364	sequencer.c	FUNCTION_72
0x4003322	              0x5b	                                 pop rbx	      2364	sequencer.c	FUNCTION_72
0x4003323	              0x5d	                                 pop rbp	      2364	sequencer.c	FUNCTION_72
0x4003324	            0x415c	                                 pop r12	      2364	sequencer.c	FUNCTION_72
0x4003326	            0x415d	                                 pop r13	      2364	sequencer.c	FUNCTION_72
0x4003328	              0xc3	                                     ret	      2364	sequencer.c	FUNCTION_72
0x4003329	     0xf1f80000000	                         nop dword [rax]	      2364	sequencer.c	FUNCTION_72
0x4003330	          0x4863ed	                         movsxd rbp, ebp	      1938	sequencer.c	FUNCTION_56
0x4003333	      0x488d546d00	                  lea rdx, [rbp + rbp*2]	      1938	sequencer.c	FUNCTION_56
0x4003338	        0x48c1e204	                              shl rdx, 4	      1938	sequencer.c	FUNCTION_56
0x400333c	        0x48035318	             add rdx, qword [rbx + 0x18]	      1938	sequencer.c	FUNCTION_56
0x4003340	            0x39c8	                            cmp eax, ecx	      1937	sequencer.c	FUNCTION_56
0x4003342	          0x8b5228	            mov edx, dword [rdx + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x4003345	     0xf8c4fffffff	                            jl 0x400329a	      1937	sequencer.c	FUNCTION_56
0x400334b	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1937	sequencer.c	FUNCTION_56
0x400334f	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4003353	            0x29ca	                            sub edx, ecx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4003355	          0x4863c1	                         movsxd rax, ecx	      1937	sequencer.c	FUNCTION_56
0x4003358	          0x4863d2	                         movsxd rdx, edx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400335b	      0xe958ffffff	                           jmp 0x40032b8	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4003360	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4003365	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400336a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400336c	      0xe800000000	                          call 0x4003371	        54	gettext.h	FUNCTION_147
0x4003371	          0x4c89e6	                            mov rsi, r12	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4003374	          0x4889c7	                            mov rdi, rax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4003377	            0x31c0	                            xor eax, eax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4003379	      0xe800000000	                          call 0x400337e	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x400337e	      0xbbffffffff	                     mov ebx, 0xffffffff	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4003383	      0xe946ffffff	                           jmp 0x40032ce	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4003388	     0xf1f84000000	                   nop dword [rax + rax]	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4003390	      0xbf00000000	                              mov edi, 0	        58	sequencer.c	CALL_9
0x4003395	            0x31c0	                            xor eax, eax	        58	sequencer.c	CALL_9
0x4003397	      0xe800000000	                          call 0x400339c	        58	sequencer.c	CALL_9
0x400339c	          0x4989c4	                            mov r12, rax	        58	sequencer.c	CALL_9
0x400339f	    0x488905000000	            mov qword [0x040033a6], rax 	        58	sequencer.c	CALL_9
0x40033a6	      0xe9b7feffff	                           jmp 0x4003262	        58	sequencer.c	CALL_9
0x40033ab	       0xf1f440000	                   nop dword [rax + rax]	        58	sequencer.c	CALL_9
0x40033b0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40033b5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40033ba	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40033bc	      0xe800000000	                          call 0x40033c1	        54	gettext.h	FUNCTION_147
0x40033c1	          0x4c89ee	                            mov rsi, r13	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40033c4	          0x4889c7	                            mov rdi, rax	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40033c7	            0x31c0	                            xor eax, eax	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40033c9	      0xe800000000	                          call 0x40033ce	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40033ce	      0xb8ffffffff	                     mov eax, 0xffffffff	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40033d3	      0xe932ffffff	                           jmp 0x400330a	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40033d8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40033dd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40033e2	            0xebd6	                           jmp 0x40033ba	        54	gettext.h	FUNCTION_147
0x40033e4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40033e9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40033ee	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40033f0	      0xe800000000	                          call 0x40033f5	        54	gettext.h	FUNCTION_147
0x40033f5	          0x4c89ee	                            mov rsi, r13	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40033f8	          0x4889c7	                            mov rdi, rax	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40033fb	            0x31c0	                            xor eax, eax	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40033fd	      0xe800000000	                          call 0x4003402	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4003402	      0xb8ffffffff	                     mov eax, 0xffffffff	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4003407	      0xe9fefeffff	                           jmp 0x400330a	      2346	sequencer.c	FUNCTION_72	CALL_9
0x400340c	      0xbf00000000	                              mov edi, 0	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4003411	      0xe83ad0ffff	                       call sym._.part.6	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4003416	          0x4c89e6	                            mov rsi, r12	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x4003419	          0x4889c7	                            mov rdi, rax	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x400341c	            0x31c0	                            xor eax, eax	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x400341e	      0xe800000000	                          call 0x4003423	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x4003423	      0xb8ffffffff	                     mov eax, 0xffffffff	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x4003428	      0xe9ddfeffff	                           jmp 0x400330a	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x400342d	      0xe800000000	                          call 0x4003432	      2364	sequencer.c	FUNCTION_72
make_patch	WHILE,0:IF,4:functions,0:SWITCH,0:ELSE,1:DO,0:FOR,0:CALL,21	163
0x4002cb0	            0x4156	                                push r14	      2406	sequencer.c	FUNCTION_74
0x4002cb2	            0x4155	                                push r13	      2406	sequencer.c	FUNCTION_74
0x4002cb4	        0x4c8d7704	                      lea r14, [rdi + 4]	       312	sequencer.c	FUNCTION_10	CALL_1
0x4002cb8	            0x4154	                                push r12	      2406	sequencer.c	FUNCTION_74
0x4002cba	              0x55	                                push rbp	      2406	sequencer.c	FUNCTION_74
0x4002cbb	          0x4989f5	                            mov r13, rsi	      2406	sequencer.c	FUNCTION_74
0x4002cbe	              0x53	                                push rbx	      2406	sequencer.c	FUNCTION_74
0x4002cbf	          0x4989fc	                            mov r12, rdi	      2406	sequencer.c	FUNCTION_74
0x4002cc2	          0x4c89f7	                            mov rdi, r14	       312	sequencer.c	FUNCTION_10	CALL_1
0x4002cc5	    0x4881ecf00800	                          sub rsp, 0x8f0	      2406	sequencer.c	FUNCTION_74
0x4002ccc	    0x8b3500000000	            mov esi, dword [0x04002cd2] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4002cd2	    0x64488b042528	                mov rax, qword fs:[0x28]	      2406	sequencer.c	FUNCTION_74
0x4002cdb	    0x48898424e808	            mov qword [rsp + 0x8e8], rax	      2406	sequencer.c	FUNCTION_74
0x4002ce3	            0x31c0	                            xor eax, eax	      2406	sequencer.c	FUNCTION_74
0x4002ce5	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2407	sequencer.c	FUNCTION_74
0x4002cee	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2407	sequencer.c	FUNCTION_74
0x4002cf7	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2407	sequencer.c	FUNCTION_74
0x4002d00	      0xe800000000	                          call 0x4002d05	       312	sequencer.c	FUNCTION_10	CALL_1
0x4002d05	    0x488b1d000000	            mov rbx, qword [0x04002d0c] 	       115	sequencer.c	CALL_18
0x4002d0c	          0x4889c5	                            mov rbp, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x4002d0f	          0x4885db	                           test rbx, rbx	       115	sequencer.c	CALL_18
0x4002d12	     0xf8440020000	                            je 0x4002f58	       115	sequencer.c	CALL_18
0x4002d18	          0x4889ef	                            mov rdi, rbp	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002d1b	      0xe800000000	                          call 0x4002d20	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002d20	      0xb901000000	                              mov ecx, 1	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002d25	          0x4889da	                            mov rdx, rbx	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002d28	          0x4889c6	                            mov rsi, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002d2b	          0x4889ef	                            mov rdi, rbp	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002d2e	      0xe8ddf9ffff	                  call sym.write_message	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002d33	            0x85c0	                           test eax, eax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002d35	     0xf883d020000	                            js 0x4002f78	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002d3b	          0x4531c9	                            xor r9d, r9d	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002d3e	            0x31c9	                            xor ecx, ecx	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002d40	    0x41b801000000	                              mov r8d, 1	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002d46	          0x4c89f2	                            mov rdx, r14	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002d49	      0xbe00000000	                              mov esi, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002d4e	      0xbf00000000	                              mov edi, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002d53	      0xe800000000	                          call 0x4002d58	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002d58	            0x31db	                            xor ebx, ebx	      2410	sequencer.c	FUNCTION_74
0x4002d5a	            0x85c0	                           test eax, eax	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002d5c	     0xf852e010000	                           jne 0x4002e90	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002d62	          0x4c89ef	                            mov rdi, r13	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4002d65	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	        90	string3.h	FUNCTION_222	CALL_5
0x4002d6a	      0xe861d9ffff	                        call sym.get_dir	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4002d6f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4002d74	          0x4889c2	                            mov rdx, rax	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4002d77	      0xbe00000000	                              mov esi, 0	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4002d7c	            0x31c0	                            xor eax, eax	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4002d7e	      0xe800000000	                          call 0x4002d83	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4002d83	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_222	CALL_5
0x4002d85	      0xb916010000	                          mov ecx, 0x116	        90	string3.h	FUNCTION_222	CALL_5
0x4002d8a	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_222	CALL_5
0x4002d8d	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_222	CALL_5
0x4002d90	            0x31f6	                            xor esi, esi	      2421	sequencer.c	FUNCTION_74	CALL_9
0x4002d92	          0x4889ef	                            mov rdi, rbp	      2421	sequencer.c	FUNCTION_74	CALL_9
0x4002d95	      0xe800000000	                          call 0x4002d9a	      2421	sequencer.c	FUNCTION_74	CALL_9
0x4002d9a	     0xfb68424a900	           movzx eax, byte [rsp + 0xa9] 	      2426	sequencer.c	FUNCTION_74
0x4002da2	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2427	sequencer.c	FUNCTION_74
0x4002da7	      0xbe00000000	                              mov esi, 0	      2427	sequencer.c	FUNCTION_74
0x4002dac	    0x808c24ab0000	              or byte [rsp + 0xab], 0x80	      2425	sequencer.c	FUNCTION_74
0x4002db4	    0xc78424d00000	               mov dword [rsp + 0xd0], 0	      2422	sequencer.c	FUNCTION_74
0x4002dbf	    0xc78424880500	          mov dword [rsp + 0x588], 0x10 	      2424	sequencer.c	FUNCTION_74
0x4002dca	          0x83c809	                               or eax, 9	      2426	sequencer.c	FUNCTION_74
0x4002dcd	    0x888424a90000	               mov byte [rsp + 0xa9], al	      2426	sequencer.c	FUNCTION_74
0x4002dd4	      0xe800000000	                          call 0x4002dd9	      2427	sequencer.c	FUNCTION_74
0x4002dd9	          0x4885c0	                           test rax, rax	      2429	sequencer.c	FUNCTION_74	IF_3
0x4002ddc	    0x488984242806	            mov qword [rsp + 0x628], rax	      2427	sequencer.c	FUNCTION_74
0x4002de4	    0xc78424680500	              mov dword [rsp + 0x568], 0	      2428	sequencer.c	FUNCTION_74
0x4002def	     0xf8433010000	                            je 0x4002f28	      2429	sequencer.c	FUNCTION_74	IF_3
0x4002df5	          0x4889ef	                            mov rdi, rbp	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x4002df8	          0x4c89e6	                            mov rsi, r12	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x4002dfb	      0xe800000000	                          call 0x4002e00	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x4002e00	    0x488bbc242806	           mov rdi, qword [rsp + 0x628] 	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x4002e08	             0x9c3	                             or ebx, eax	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x4002e0a	      0xe800000000	                          call 0x4002e0f	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x4002e0f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_108	IF_2
0x4002e14	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_108
0x4002e1d	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x4002e23	     0xf84e7000000	                            je 0x4002f10	       165	strbuf.h	FUNCTION_108	IF_2
0x4002e29	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x4002e2c	          0x4c89ef	                            mov rdi, r13	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4002e2f	      0xe89cd8ffff	                        call sym.get_dir	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4002e34	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4002e39	          0x4889c2	                            mov rdx, rax	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4002e3c	      0xbe00000000	                              mov esi, 0	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4002e41	            0x31c0	                            xor eax, eax	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4002e43	      0xe800000000	                          call 0x4002e48	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4002e48	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x4002e4d	      0xe800000000	                          call 0x4002e52	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x4002e52	            0x85c0	                           test eax, eax	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x4002e54	            0x746a	                            je 0x4002ec0	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x4002e56	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2444	sequencer.c	FUNCTION_74	CALL_21
0x4002e5b	      0xe800000000	                          call 0x4002e60	      2444	sequencer.c	FUNCTION_74	CALL_21
0x4002e60	            0x89d8	                            mov eax, ebx	      2446	sequencer.c	FUNCTION_74
0x4002e62	    0x488b8c24e808	           mov rcx, qword [rsp + 0x8e8] 	      2447	sequencer.c	FUNCTION_74
0x4002e6a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2447	sequencer.c	FUNCTION_74
0x4002e73	     0xf8509010000	                           jne 0x4002f82	      2447	sequencer.c	FUNCTION_74
0x4002e79	    0x4881c4f00800	                          add rsp, 0x8f0	      2447	sequencer.c	FUNCTION_74
0x4002e80	              0x5b	                                 pop rbx	      2447	sequencer.c	FUNCTION_74
0x4002e81	              0x5d	                                 pop rbp	      2447	sequencer.c	FUNCTION_74
0x4002e82	            0x415c	                                 pop r12	      2447	sequencer.c	FUNCTION_74
0x4002e84	            0x415d	                                 pop r13	      2447	sequencer.c	FUNCTION_74
0x4002e86	            0x415e	                                 pop r14	      2447	sequencer.c	FUNCTION_74
0x4002e88	              0xc3	                                     ret	      2447	sequencer.c	FUNCTION_74
0x4002e89	     0xf1f80000000	                         nop dword [rax]	      2447	sequencer.c	FUNCTION_74
0x4002e90	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4002e95	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4002e9a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4002e9c	      0xe800000000	                          call 0x4002ea1	        54	gettext.h	FUNCTION_147
0x4002ea1	      0xbe00000000	                              mov esi, 0	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4002ea6	          0x4889c7	                            mov rdi, rax	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4002ea9	            0x31c0	                            xor eax, eax	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4002eab	      0xe800000000	                          call 0x4002eb0	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4002eb0	      0xbbffffffff	                     mov ebx, 0xffffffff	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4002eb5	      0xe9a8feffff	                           jmp 0x4002d62	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4002eba	    0x660f1f440000	                    nop word [rax + rax]	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4002ec0	            0x31f6	                            xor esi, esi	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x4002ec2	          0x4c89e7	                            mov rdi, r12	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x4002ec5	      0xe800000000	                          call 0x4002eca	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x4002eca	      0x488d742408	                      lea rsi, [rsp + 8]	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x4002ecf	          0x4889c7	                            mov rdi, rax	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x4002ed2	          0x4889c5	                            mov rbp, rax	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x4002ed5	      0xe800000000	                          call 0x4002eda	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x4002eda	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002edf	          0x4c89ef	                            mov rdi, r13	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002ee2	      0xe800000000	                          call 0x4002ee7	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002ee7	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002eec	          0x4c89ef	                            mov rdi, r13	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002eef	      0xb901000000	                              mov ecx, 1	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002ef4	          0x4889c6	                            mov rsi, rax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002ef7	      0xe814f8ffff	                  call sym.write_message	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002efc	          0x4889ee	                            mov rsi, rbp	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4002eff	          0x4c89e7	                            mov rdi, r12	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4002f02	             0x9c3	                             or ebx, eax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002f04	      0xe800000000	                          call 0x4002f09	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4002f09	      0xe948ffffff	                           jmp 0x4002e56	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4002f0e	            0x6690	                                     nop	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4002f10	    0x803d00000000	                cmp byte [0x04002f17], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x4002f17	     0xf840fffffff	                            je 0x4002e2c	       168	strbuf.h	FUNCTION_108	CALL_2
0x4002f1d	      0xe800000000	                          call 0x4002f22	       168	strbuf.h	FUNCTION_108	CALL_2
0x4002f22	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x4002f28	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4002f2d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4002f32	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4002f37	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4002f39	      0xe800000000	                          call 0x4002f3e	        54	gettext.h	FUNCTION_147
0x4002f3e	          0x4889de	                            mov rsi, rbx	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4002f41	          0x4889c7	                            mov rdi, rax	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4002f44	            0x31c0	                            xor eax, eax	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4002f46	      0xe800000000	                          call 0x4002f4b	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4002f4b	      0xbbffffffff	                     mov ebx, 0xffffffff	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4002f50	      0xe9bafeffff	                           jmp 0x4002e0f	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4002f55	           0xf1f00	                         nop dword [rax]	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4002f58	      0xbf00000000	                              mov edi, 0	       115	sequencer.c	CALL_18
0x4002f5d	            0x31c0	                            xor eax, eax	       115	sequencer.c	CALL_18
0x4002f5f	      0xe800000000	                          call 0x4002f64	       115	sequencer.c	CALL_18
0x4002f64	          0x4889c3	                            mov rbx, rax	       115	sequencer.c	CALL_18
0x4002f67	    0x488905000000	            mov qword [0x04002f6e], rax 	       115	sequencer.c	CALL_18
0x4002f6e	      0xe9a5fdffff	                           jmp 0x4002d18	       115	sequencer.c	CALL_18
0x4002f73	       0xf1f440000	                   nop dword [rax + rax]	       115	sequencer.c	CALL_18
0x4002f78	      0xb8ffffffff	                     mov eax, 0xffffffff	      2414	sequencer.c	FUNCTION_74	IF_1
0x4002f7d	      0xe9e0feffff	                           jmp 0x4002e62	      2414	sequencer.c	FUNCTION_74	IF_1
0x4002f82	      0xe800000000	                          call 0x4002f87	      2447	sequencer.c	FUNCTION_74
template_untouched	WHILE,0:IF,3:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,5	61
0x4003f20	              0x55	                                push rbp	       827	sequencer.c	FUNCTION_29
0x4003f21	              0x53	                                push rbx	       827	sequencer.c	FUNCTION_29
0x4003f22	          0x4889fd	                            mov rbp, rdi	       827	sequencer.c	FUNCTION_29
0x4003f25	            0x89d3	                            mov ebx, edx	       827	sequencer.c	FUNCTION_29
0x4003f27	        0x4883ec28	                           sub rsp, 0x28	       827	sequencer.c	FUNCTION_29
0x4003f2b	    0x64488b042528	                mov rax, qword fs:[0x28]	       827	sequencer.c	FUNCTION_29
0x4003f34	      0x4889442418	             mov qword [rsp + 0x18], rax	       827	sequencer.c	FUNCTION_29
0x4003f39	            0x31c0	                            xor eax, eax	       827	sequencer.c	FUNCTION_29
0x4003f3b	          0x83fa01	                              cmp edx, 1	       831	sequencer.c	FUNCTION_29	IF_1
0x4003f3e	    0x48c704240000	                      mov qword [rsp], 0	       828	sequencer.c	FUNCTION_29
0x4003f46	    0x48c744240800	                  mov qword [rsp + 8], 0	       828	sequencer.c	FUNCTION_29
0x4003f4f	    0x48c744241000	               mov qword [rsp + 0x10], 0	       828	sequencer.c	FUNCTION_29
0x4003f58	            0x746e	                            je 0x4003fc8	       831	sequencer.c	FUNCTION_29	IF_1
0x4003f5a	          0x4885f6	                           test rsi, rsi	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003f5d	            0x7471	                            je 0x4003fd0	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003f5f	            0x31d2	                            xor edx, edx	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003f61	          0x4889e7	                            mov rdi, rsp	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003f64	      0xe800000000	                          call 0x4003f69	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003f69	          0x4885c0	                           test rax, rax	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003f6c	            0x7e62	                           jle 0x4003fd0	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003f6e	            0x31f6	                            xor esi, esi	       837	sequencer.c	FUNCTION_29	CALL_2
0x4003f70	          0x83fb03	                              cmp ebx, 3	       837	sequencer.c	FUNCTION_29	CALL_2
0x4003f73	          0x4889e7	                            mov rdi, rsp	       837	sequencer.c	FUNCTION_29	CALL_2
0x4003f76	        0x400f94c6	                                sete sil	       837	sequencer.c	FUNCTION_29	CALL_2
0x4003f7a	      0xe800000000	                          call 0x4003f7f	       837	sequencer.c	FUNCTION_29	CALL_2
0x4003f7f	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4003f83	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4003f88	          0x4889cb	                            mov rbx, rcx	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4003f8b	            0xeb10	                           jmp 0x4003f9d	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4003f8d	           0xf1f00	                         nop dword [rax]	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4003f90	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4003f94	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4003f98	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4003f9b	            0x7553	                           jne 0x4003ff0	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4003f9d	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4003fa0	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4003fa2	            0x75ec	                           jne 0x4003f90	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4003fa4	          0x4889e7	                            mov rdi, rsp	       840	sequencer.c	FUNCTION_29	CALL_4
0x4003fa7	      0xe800000000	                          call 0x4003fac	       840	sequencer.c	FUNCTION_29	CALL_4
0x4003fac	        0x482b5d10	             sub rbx, qword [rbp + 0x10]	       841	sequencer.c	FUNCTION_29	CALL_5
0x4003fb0	        0x488d7510	                   lea rsi, [rbp + 0x10]	       841	sequencer.c	FUNCTION_29	CALL_5
0x4003fb4	        0x488d7d08	                      lea rdi, [rbp + 8]	       841	sequencer.c	FUNCTION_29	CALL_5
0x4003fb8	          0x4889da	                            mov rdx, rbx	       841	sequencer.c	FUNCTION_29	CALL_5
0x4003fbb	      0xe8f0c4ffff	           call sym.rest_is_empty.isra.9	       841	sequencer.c	FUNCTION_29	CALL_5
0x4003fc0	            0xeb10	                           jmp 0x4003fd2	       841	sequencer.c	FUNCTION_29	CALL_5
0x4003fc2	    0x660f1f440000	                    nop word [rax + rax]	       841	sequencer.c	FUNCTION_29	CALL_5
0x4003fc8	      0x48837f0800	                  cmp qword [rdi + 8], 0	       831	sequencer.c	FUNCTION_29	IF_1
0x4003fcd	            0x748b	                            je 0x4003f5a	       831	sequencer.c	FUNCTION_29	IF_1
0x4003fcf	              0x90	                                     nop	       831	sequencer.c	FUNCTION_29	IF_1
0x4003fd0	            0x31c0	                            xor eax, eax	       832	sequencer.c	FUNCTION_29	IF_1
0x4003fd2	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       842	sequencer.c	FUNCTION_29
0x4003fd7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       842	sequencer.c	FUNCTION_29
0x4003fe0	            0x7513	                           jne 0x4003ff5	       842	sequencer.c	FUNCTION_29
0x4003fe2	        0x4883c428	                           add rsp, 0x28	       842	sequencer.c	FUNCTION_29
0x4003fe6	              0x5b	                                 pop rbx	       842	sequencer.c	FUNCTION_29
0x4003fe7	              0x5d	                                 pop rbp	       842	sequencer.c	FUNCTION_29
0x4003fe8	              0xc3	                                     ret	       842	sequencer.c	FUNCTION_29
0x4003fe9	     0xf1f80000000	                         nop dword [rax]	       842	sequencer.c	FUNCTION_29
0x4003ff0	          0x4889cb	                            mov rbx, rcx	       839	sequencer.c	FUNCTION_29	IF_3
0x4003ff3	            0xebaf	                           jmp 0x4003fa4	       839	sequencer.c	FUNCTION_29	IF_3
0x4003ff5	      0xe800000000	                          call 0x4003ffa	       842	sequencer.c	FUNCTION_29
populate_opts_cb	WHILE,0:IF,12:functions,0:SWITCH,0:ELSE,11:DO,0:FOR,0:CALL,12	196
0x4001cc0	            0x4154	                                push r12	      2043	sequencer.c	FUNCTION_62
0x4001cc2	              0x55	                                push rbp	      2043	sequencer.c	FUNCTION_62
0x4001cc3	          0x4889f5	                            mov rbp, rsi	      2043	sequencer.c	FUNCTION_62
0x4001cc6	              0x53	                                push rbx	      2043	sequencer.c	FUNCTION_62
0x4001cc7	          0x4889fb	                            mov rbx, rdi	      2043	sequencer.c	FUNCTION_62
0x4001cca	        0x4883ec10	                           sub rsp, 0x10	      2043	sequencer.c	FUNCTION_62
0x4001cce	    0x64488b042528	                mov rax, qword fs:[0x28]	      2043	sequencer.c	FUNCTION_62
0x4001cd7	      0x4889442408	                mov qword [rsp + 8], rax	      2043	sequencer.c	FUNCTION_62
0x4001cdc	            0x31c0	                            xor eax, eax	      2043	sequencer.c	FUNCTION_62
0x4001cde	          0x4885f6	                           test rsi, rsi	      2047	sequencer.c	FUNCTION_62	IF_1
0x4001ce1	    0xc74424040100	                  mov dword [rsp + 4], 1	      2045	sequencer.c	FUNCTION_62
0x4001ce9	     0xf84b1010000	                            je 0x4001ea0	      2047	sequencer.c	FUNCTION_62	IF_1
0x4001cef	      0xbf00000000	                              mov edi, 0	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001cf4	      0xb912000000	                           mov ecx, 0x12	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001cf9	          0x4889de	                            mov rsi, rbx	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001cfc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001cfe	          0x4989d4	                            mov r12, rdx	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001d01	     0xf8421010000	                            je 0x4001e28	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001d07	      0xbf00000000	                              mov edi, 0	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001d0c	      0xb90d000000	                            mov ecx, 0xd	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001d11	          0x4889de	                            mov rsi, rbx	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001d14	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001d16	     0xf844c010000	                            je 0x4001e68	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001d1c	      0xbf00000000	                              mov edi, 0	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001d21	      0xb910000000	                           mov ecx, 0x10	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001d26	          0x4889de	                            mov rsi, rbx	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001d29	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001d2b	     0xf84a7010000	                            je 0x4001ed8	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001d31	      0xbf00000000	                              mov edi, 0	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001d36	      0xb916000000	                           mov ecx, 0x16	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001d3b	          0x4889de	                            mov rsi, rbx	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001d3e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001d40	     0xf84b2010000	                            je 0x4001ef8	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001d46	      0xbf00000000	                              mov edi, 0	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001d4b	      0xb911000000	                           mov ecx, 0x11	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001d50	          0x4889de	                            mov rsi, rbx	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001d53	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001d55	     0xf8425010000	                            je 0x4001e80	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001d5b	      0xbf00000000	                              mov edi, 0	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001d60	      0xb911000000	                           mov ecx, 0x11	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001d65	          0x4889de	                            mov rsi, rbx	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001d68	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001d6a	     0xf84e8010000	                            je 0x4001f58	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001d70	      0xbf00000000	                              mov edi, 0	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x4001d75	      0xb911000000	                           mov ecx, 0x11	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x4001d7a	          0x4889de	                            mov rsi, rbx	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x4001d7d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x4001d7f	     0xf84eb010000	                            je 0x4001f70	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x4001d85	      0xbf00000000	                              mov edi, 0	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x4001d8a	      0xb911000000	                           mov ecx, 0x11	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x4001d8f	          0x4889de	                            mov rsi, rbx	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x4001d92	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x4001d94	     0xf84f6010000	                            je 0x4001f90	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x4001d9a	      0xbf00000000	                              mov edi, 0	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001d9f	      0xb918000000	                           mov ecx, 0x18	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001da4	          0x4889de	                            mov rsi, rbx	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001da7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001da9	     0xf8569010000	                           jne 0x4001f18	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001daf	        0x488b4a50	            mov rcx, qword [rdx + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001db3	      0x498b442458	            mov rax, qword [r12 + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001db8	        0x488d5101	                      lea rdx, [rcx + 1]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001dbc	          0x4839c2	                            cmp rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001dbf	     0xf86f3010000	                           jbe 0x4001fb8	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001dc5	      0x488d444030	          lea rax, [rax + rax*2 + 0x30] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001dca	          0x48d1e8	                              shr rax, 1	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001dcd	          0x4839c2	                            cmp rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001dd0	     0xf86d5010000	                           jbe 0x4001fab	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001dd6	      0x4989542458	             mov qword [r12 + 0x58], rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001ddb	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_180	IF_1
0x4001de5	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_180	IF_1
0x4001de8	     0xf87fa010000	                            ja 0x4001fe8	       795	git-compat-util.h	FUNCTION_180	IF_1
0x4001dee	      0x498b7c2448	            mov rdi, qword [r12 + 0x48] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001df3	    0x488d34d50000	                        lea rsi, [rdx*8]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001dfb	      0xe800000000	                          call 0x4001e00	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001e00	      0x498b4c2450	            mov rcx, qword [r12 + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001e05	      0x4989442448	             mov qword [r12 + 0x48], rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001e0a	        0x488d5101	                      lea rdx, [rcx + 1]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001e0e	      0x4989542450	             mov qword [r12 + 0x50], rdx	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001e13	        0x4c8d24c8	                  lea r12, [rax + rcx*8]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001e17	          0x4889ef	                            mov rdi, rbp	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001e1a	      0xe800000000	                          call 0x4001e1f	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001e1f	        0x49890424	                    mov qword [r12], rax	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001e23	            0xeb18	                           jmp 0x4001e3d	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001e25	           0xf1f00	                         nop dword [rax]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001e28	      0x488d542404	                      lea rdx, [rsp + 4]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001e2d	          0x4889ee	                            mov rsi, rbp	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001e30	          0x4889df	                            mov rdi, rbx	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001e33	      0xe800000000	                          call 0x4001e38	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001e38	      0x418944240c	              mov dword [r12 + 0xc], eax	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001e3d	        0x8b442404	                mov eax, dword [rsp + 4]	      2075	sequencer.c	FUNCTION_62	IF_12
0x4001e41	            0x85c0	                           test eax, eax	      2075	sequencer.c	FUNCTION_62	IF_12
0x4001e43	            0x7463	                            je 0x4001ea8	      2075	sequencer.c	FUNCTION_62	IF_12
0x4001e45	            0x31c0	                            xor eax, eax	      2078	sequencer.c	FUNCTION_62
0x4001e47	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2079	sequencer.c	FUNCTION_62
0x4001e4c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2079	sequencer.c	FUNCTION_62
0x4001e55	     0xf8588010000	                           jne 0x4001fe3	      2079	sequencer.c	FUNCTION_62
0x4001e5b	        0x4883c410	                           add rsp, 0x10	      2079	sequencer.c	FUNCTION_62
0x4001e5f	              0x5b	                                 pop rbx	      2079	sequencer.c	FUNCTION_62
0x4001e60	              0x5d	                                 pop rbp	      2079	sequencer.c	FUNCTION_62
0x4001e61	            0x415c	                                 pop r12	      2079	sequencer.c	FUNCTION_62
0x4001e63	              0xc3	                                     ret	      2079	sequencer.c	FUNCTION_62
0x4001e64	         0xf1f4000	                         nop dword [rax]	      2079	sequencer.c	FUNCTION_62
0x4001e68	      0x488d542404	                      lea rdx, [rsp + 4]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001e6d	          0x4889ee	                            mov rsi, rbp	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001e70	          0x4889df	                            mov rdi, rbx	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001e73	      0xe800000000	                          call 0x4001e78	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001e78	      0x4189442404	                mov dword [r12 + 4], eax	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001e7d	            0xebbe	                           jmp 0x4001e3d	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001e7f	              0x90	                                     nop	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001e80	      0x488d542404	                      lea rdx, [rsp + 4]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001e85	          0x4889ee	                            mov rsi, rbp	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001e88	          0x4889df	                            mov rdi, rbx	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001e8b	      0xe800000000	                          call 0x4001e90	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001e90	      0x4189442414	             mov dword [r12 + 0x14], eax	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001e95	            0xeba6	                           jmp 0x4001e3d	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001e97	    0x660f1f840000	                    nop word [rax + rax]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001ea0	    0xc74424040000	                  mov dword [rsp + 4], 0	      2048	sequencer.c	FUNCTION_62	IF_1
0x4001ea8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4001ead	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4001eb2	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4001eb4	      0xe800000000	                          call 0x4001eb9	        54	gettext.h	FUNCTION_147
0x4001eb9	          0x4889ea	                            mov rdx, rbp	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4001ebc	          0x4889c7	                            mov rdi, rax	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4001ebf	          0x4889de	                            mov rsi, rbx	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4001ec2	            0x31c0	                            xor eax, eax	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4001ec4	      0xe800000000	                          call 0x4001ec9	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4001ec9	      0xb8ffffffff	                     mov eax, 0xffffffff	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4001ece	      0xe974ffffff	                           jmp 0x4001e47	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4001ed3	       0xf1f440000	                   nop dword [rax + rax]	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4001ed8	      0x488d542404	                      lea rdx, [rsp + 4]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001edd	          0x4889ee	                            mov rsi, rbp	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001ee0	          0x4889df	                            mov rdi, rbx	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001ee3	      0xe800000000	                          call 0x4001ee8	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001ee8	      0x4189442410	             mov dword [r12 + 0x10], eax	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001eed	      0xe94bffffff	                           jmp 0x4001e3d	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001ef2	    0x660f1f440000	                    nop word [rax + rax]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001ef8	      0x488d542404	                      lea rdx, [rsp + 4]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001efd	          0x4889ee	                            mov rsi, rbp	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001f00	          0x4889df	                            mov rdi, rbx	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001f03	      0xe800000000	                          call 0x4001f08	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001f08	      0x4189442408	                mov dword [r12 + 8], eax	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001f0d	      0xe92bffffff	                           jmp 0x4001e3d	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001f12	    0x660f1f440000	                    nop word [rax + rax]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001f18	      0xbf00000000	                              mov edi, 0	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f1d	      0xb91a000000	                           mov ecx, 0x1a	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f22	          0x4889de	                            mov rsi, rbx	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f25	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f27	     0xf8595000000	                           jne 0x4001fc2	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f2d	      0x488d542404	                      lea rdx, [rsp + 4]	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x4001f32	          0x4889ee	                            mov rsi, rbp	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x4001f35	          0x4889df	                            mov rdi, rbx	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x4001f38	      0xe800000000	                          call 0x4001f3d	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x4001f3d	          0x83f801	                              cmp eax, 1	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f40	            0x19c0	                            sbb eax, eax	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f42	            0xf7d0	                                 not eax	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f44	          0x83c002	                              add eax, 2	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f47	      0x4189442418	             mov dword [r12 + 0x18], eax	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f4c	      0xe9ecfeffff	                           jmp 0x4001e3d	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f51	     0xf1f80000000	                         nop dword [rax]	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001f58	          0x4889ee	                            mov rsi, rbp	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001f5b	          0x4889df	                            mov rdi, rbx	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001f5e	      0xe800000000	                          call 0x4001f63	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001f63	      0x418944242c	             mov dword [r12 + 0x2c], eax	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001f68	      0xe9d0feffff	                           jmp 0x4001e3d	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001f6d	           0xf1f00	                         nop dword [rax]	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001f70	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      2037	sequencer.c	FUNCTION_61	CALL_2
0x4001f74	      0xe800000000	                          call 0x4001f79	      2037	sequencer.c	FUNCTION_61	CALL_2
0x4001f79	          0x4889ef	                            mov rdi, rbp	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4001f7c	      0xe800000000	                          call 0x4001f81	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4001f81	      0x4989442440	             mov qword [r12 + 0x40], rax	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4001f86	      0xe9b2feffff	                           jmp 0x4001e3d	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4001f8b	       0xf1f440000	                   nop dword [rax + rax]	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4001f90	        0x488b7a30	            mov rdi, qword [rdx + 0x30] 	      2037	sequencer.c	FUNCTION_61	CALL_2
0x4001f94	      0xe800000000	                          call 0x4001f99	      2037	sequencer.c	FUNCTION_61	CALL_2
0x4001f99	          0x4889ef	                            mov rdi, rbp	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4001f9c	      0xe800000000	                          call 0x4001fa1	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4001fa1	      0x4989442430	             mov qword [r12 + 0x30], rax	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4001fa6	      0xe992feffff	                           jmp 0x4001e3d	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4001fab	      0x4989442458	             mov qword [r12 + 0x58], rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001fb0	          0x4889c2	                            mov rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001fb3	      0xe923feffff	                           jmp 0x4001ddb	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001fb8	      0x498b442448	            mov rax, qword [r12 + 0x48] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001fbd	      0xe94cfeffff	                           jmp 0x4001e0e	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001fc2	      0xbf00000000	                              mov edi, 0	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001fc7	      0xe884e4ffff	                       call sym._.part.6	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001fcc	          0x4889de	                            mov rsi, rbx	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4001fcf	          0x4889c7	                            mov rdi, rax	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4001fd2	            0x31c0	                            xor eax, eax	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4001fd4	      0xe800000000	                          call 0x4001fd9	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4001fd9	      0xb8ffffffff	                     mov eax, 0xffffffff	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4001fde	      0xe964feffff	                           jmp 0x4001e47	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4001fe3	      0xe800000000	                          call 0x4001fe8	      2079	sequencer.c	FUNCTION_62
0x4001fe8	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x4001fed	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x4001ff2	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x4001ff4	      0xe800000000	                          call 0x4001ff9	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
append_new_todo	WHILE,0:IF,0:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,0	42
0x4000100	              0x53	                                push rbx	      1797	sequencer.c	FUNCTION_52
0x4000101	        0x48634f20	         movsxd rcx, dword [rdi + 0x20] 	      1798	sequencer.c	FUNCTION_52
0x4000105	          0x4889fb	                            mov rbx, rdi	      1797	sequencer.c	FUNCTION_52
0x4000108	          0x8b4724	            mov eax, dword [rdi + 0x24] 	      1798	sequencer.c	FUNCTION_52
0x400010b	            0x39c1	                            cmp ecx, eax	      1798	sequencer.c	FUNCTION_52
0x400010d	            0x7c61	                            jl 0x4000170	      1798	sequencer.c	FUNCTION_52
0x400010f	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1798	sequencer.c	FUNCTION_52
0x4000113	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52
0x4000115	          0xc1ea1f	                           shr edx, 0x1f	      1798	sequencer.c	FUNCTION_52
0x4000118	             0x1c2	                            add edx, eax	      1798	sequencer.c	FUNCTION_52
0x400011a	            0xd1fa	                              sar edx, 1	      1798	sequencer.c	FUNCTION_52
0x400011c	            0x39d1	                            cmp ecx, edx	      1798	sequencer.c	FUNCTION_52
0x400011e	            0x7d48	                           jge 0x4000168	      1798	sequencer.c	FUNCTION_52
0x4000120	          0x895724	             mov dword [rdi + 0x24], edx	      1798	sequencer.c	FUNCTION_52
0x4000123	          0x4863d2	                         movsxd rdx, edx	      1798	sequencer.c	FUNCTION_52
0x4000126	    0x48b855555555	           movabs rax, 0x555555555555555	       795	git-compat-util.h	FUNCTION_180	IF_1
0x4000130	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_180	IF_1
0x4000133	            0x7741	                            ja 0x4000176	       795	git-compat-util.h	FUNCTION_180	IF_1
0x4000135	        0x488d3452	                  lea rsi, [rdx + rdx*2]	      1798	sequencer.c	FUNCTION_52
0x4000139	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1798	sequencer.c	FUNCTION_52
0x400013d	        0x48c1e604	                              shl rsi, 4	      1798	sequencer.c	FUNCTION_52
0x4000141	      0xe800000000	                          call 0x4000146	      1798	sequencer.c	FUNCTION_52
0x4000146	        0x48634b20	         movsxd rcx, dword [rbx + 0x20] 	      1798	sequencer.c	FUNCTION_52
0x400014a	        0x48894318	             mov qword [rbx + 0x18], rax	      1798	sequencer.c	FUNCTION_52
0x400014e	          0x4889c6	                            mov rsi, rax	      1798	sequencer.c	FUNCTION_52
0x4000151	          0x8d4101	                      lea eax, [rcx + 1]	      1799	sequencer.c	FUNCTION_52
0x4000154	          0x894320	             mov dword [rbx + 0x20], eax	      1799	sequencer.c	FUNCTION_52
0x4000157	        0x488d0449	                  lea rax, [rcx + rcx*2]	      1799	sequencer.c	FUNCTION_52
0x400015b	              0x5b	                                 pop rbx	      1800	sequencer.c	FUNCTION_52
0x400015c	        0x48c1e004	                              shl rax, 4	      1799	sequencer.c	FUNCTION_52
0x4000160	        0x488d0406	                    lea rax, [rsi + rax]	      1799	sequencer.c	FUNCTION_52
0x4000164	              0xc3	                                     ret	      1800	sequencer.c	FUNCTION_52
0x4000165	           0xf1f00	                         nop dword [rax]	      1800	sequencer.c	FUNCTION_52
0x4000168	          0x8d5101	                      lea edx, [rcx + 1]	      1798	sequencer.c	FUNCTION_52
0x400016b	          0x895724	             mov dword [rdi + 0x24], edx	      1798	sequencer.c	FUNCTION_52
0x400016e	            0xebb3	                           jmp 0x4000123	      1798	sequencer.c	FUNCTION_52
0x4000170	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      1798	sequencer.c	FUNCTION_52
0x4000174	            0xebdb	                           jmp 0x4000151	      1798	sequencer.c	FUNCTION_52
0x4000176	      0xbe30000000	                           mov esi, 0x30	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x400017b	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x4000180	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x4000182	      0xe800000000	                          call 0x4000187	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
sequencer_continue	WHILE,0:IF,13:functions,0:SWITCH,0:ELSE,3:DO,0:FOR,0:CALL,27	854
0x4008e10	            0x4156	                                push r14	      3378	sequencer.c	FUNCTION_90
0x4008e12	            0x4155	                                push r13	      3378	sequencer.c	FUNCTION_90
0x4008e14	      0xb90b000000	                            mov ecx, 0xb	      3379	sequencer.c	FUNCTION_90
0x4008e19	            0x4154	                                push r12	      3378	sequencer.c	FUNCTION_90
0x4008e1b	              0x55	                                push rbp	      3378	sequencer.c	FUNCTION_90
0x4008e1c	              0x53	                                push rbx	      3378	sequencer.c	FUNCTION_90
0x4008e1d	          0x4889fb	                            mov rbx, rdi	      3378	sequencer.c	FUNCTION_90
0x4008e20	    0x4881ecf00000	                           sub rsp, 0xf0	      3378	sequencer.c	FUNCTION_90
0x4008e27	      0x488d6c2450	                   lea rbp, [rsp + 0x50]	      3379	sequencer.c	FUNCTION_90
0x4008e2c	    0x64488b042528	                mov rax, qword fs:[0x28]	      3378	sequencer.c	FUNCTION_90
0x4008e35	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      3378	sequencer.c	FUNCTION_90
0x4008e3d	            0x31c0	                            xor eax, eax	      3378	sequencer.c	FUNCTION_90
0x4008e3f	          0x4889ef	                            mov rdi, rbp	      3379	sequencer.c	FUNCTION_90
0x4008e42	          0xf348ab	              rep stosq qword [rdi], rax	      3379	sequencer.c	FUNCTION_90
0x4008e45	          0x4889df	                            mov rdi, rbx	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x4008e48	    0x48c744246000	               mov qword [rsp + 0x60], 0	      3379	sequencer.c	FUNCTION_90
0x4008e51	      0xe82aa2ffff	         call sym.read_and_refresh_cache	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x4008e56	            0x85c0	                           test eax, eax	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x4008e58	     0xf85e2040000	                           jne 0x4009340	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x4008e5e	          0x833b02	                      cmp dword [rbx], 2	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x4008e61	     0xf8421020000	                            je 0x4009088	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x4008e67	    0x488b3d000000	            mov rdi, qword [0x04008e6e] 	        41	sequencer.c	CALL_4
0x4008e6e	          0x4885ff	                           test rdi, rdi	        41	sequencer.c	CALL_4
0x4008e71	     0xf8441070000	                            je 0x40095b8	        41	sequencer.c	CALL_4
0x4008e77	      0xe800000000	                          call 0x4008e7c	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4008e7c	            0x85c0	                           test eax, eax	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4008e7e	            0x7425	                            je 0x4008ea5	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4008e80	    0x488b35000000	            mov rsi, qword [0x04008e87] 	        41	sequencer.c	CALL_4
0x4008e87	          0x4885f6	                           test rsi, rsi	        41	sequencer.c	CALL_4
0x4008e8a	     0xf8458070000	                            je 0x40095e8	        41	sequencer.c	CALL_4
0x4008e90	          0x4889da	                            mov rdx, rbx	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008e93	      0xbf00000000	                              mov edi, 0	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008e98	      0xe800000000	                          call 0x4008e9d	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008e9d	            0x85c0	                           test eax, eax	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008e9f	     0xf88ca060000	                            js 0x400956f	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008ea5	          0x833b02	                      cmp dword [rbx], 2	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x4008ea8	            0x7476	                            je 0x4008f20	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x4008eaa	          0x4889df	                            mov rdi, rbx	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x4008ead	      0xe83e75ffff	                  call sym.get_todo_path	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x4008eb2	          0x4889c7	                            mov rdi, rax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x4008eb5	      0xe800000000	                          call 0x4008eba	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x4008eba	            0x85c0	                           test eax, eax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x4008ebc	            0x7432	                            je 0x4008ef0	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x4008ebe	          0x4889de	                            mov rsi, rbx	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x4008ec1	          0x4889ef	                            mov rdi, rbp	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x4008ec4	      0xe8378affff	             call sym.read_populate_todo	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x4008ec9	            0x85c0	                           test eax, eax	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x4008ecb	          0x4189c4	                           mov r12d, eax	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x4008ece	     0xf8454010000	                            je 0x4009028	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x4008ed4	          0x4889ef	                            mov rdi, rbp	      1791	sequencer.c	FUNCTION_51	CALL_1
0x4008ed7	      0xe800000000	                          call 0x4008edc	      1791	sequencer.c	FUNCTION_51	CALL_1
0x4008edc	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1792	sequencer.c	FUNCTION_51
0x4008ee1	      0xe800000000	                          call 0x4008ee6	      1792	sequencer.c	FUNCTION_51
0x4008ee6	          0x4489e0	                           mov eax, r12d	      3423	sequencer.c	FUNCTION_90
0x4008ee9	            0xeb0a	                           jmp 0x4008ef5	      3423	sequencer.c	FUNCTION_90
0x4008eeb	       0xf1f440000	                   nop dword [rax + rax]	      3423	sequencer.c	FUNCTION_90
0x4008ef0	      0xe84b79ffff	           call sym.continue_single_pick	      3393	sequencer.c	FUNCTION_90	ELSE_1	IF_6
0x4008ef5	    0x488b8c24e800	            mov rcx, qword [rsp + 0xe8] 	      3424	sequencer.c	FUNCTION_90
0x4008efd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3424	sequencer.c	FUNCTION_90
0x4008f06	     0xf857f0c0000	                           jne 0x4009b8b	      3424	sequencer.c	FUNCTION_90
0x4008f0c	    0x4881c4f00000	                           add rsp, 0xf0	      3424	sequencer.c	FUNCTION_90
0x4008f13	              0x5b	                                 pop rbx	      3424	sequencer.c	FUNCTION_90
0x4008f14	              0x5d	                                 pop rbp	      3424	sequencer.c	FUNCTION_90
0x4008f15	            0x415c	                                 pop r12	      3424	sequencer.c	FUNCTION_90
0x4008f17	            0x415d	                                 pop r13	      3424	sequencer.c	FUNCTION_90
0x4008f19	            0x415e	                                 pop r14	      3424	sequencer.c	FUNCTION_90
0x4008f1b	              0xc3	                                     ret	      3424	sequencer.c	FUNCTION_90
0x4008f1c	         0xf1f4000	                         nop dword [rax]	      3424	sequencer.c	FUNCTION_90
0x4008f20	          0x4889de	                            mov rsi, rbx	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008f23	          0x4889ef	                            mov rdi, rbp	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008f26	      0xe8d589ffff	             call sym.read_populate_todo	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008f2b	            0x85c0	                           test eax, eax	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008f2d	          0x4189c4	                           mov r12d, eax	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008f30	            0x75a2	                           jne 0x4008ed4	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008f32	      0xbf01000000	                              mov edi, 1	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x4008f37	      0xe800000000	                          call 0x4008f3c	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x4008f3c	            0x85c0	                           test eax, eax	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x4008f3e	     0xf85560a0000	                           jne 0x400999a	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x4008f44	            0x31ff	                            xor edi, edi	      3260	sequencer.c	FUNCTION_89	CALL_3
0x4008f46	      0xe800000000	                          call 0x4008f4b	      3260	sequencer.c	FUNCTION_89	CALL_3
0x4008f4b	    0x488b3d000000	            mov rdi, qword [0x04008f52] 	       110	sequencer.c	CALL_17
0x4008f52	          0x4189c5	                           mov r13d, eax	      3260	sequencer.c	FUNCTION_89	CALL_3
0x4008f55	          0x4885ff	                           test rdi, rdi	       110	sequencer.c	CALL_17
0x4008f58	     0xf84eb090000	                            je 0x4009949	       110	sequencer.c	CALL_17
0x4008f5e	      0xe800000000	                          call 0x4008f63	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x4008f63	            0x85c0	                           test eax, eax	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x4008f65	     0xf85cd040000	                           jne 0x4009438	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x4008f6b	          0x4585ed	                         test r13d, r13d	      3348	sequencer.c	FUNCTION_89	IF_14
0x4008f6e	      0xba03000000	                              mov edx, 3	      3254	sequencer.c	FUNCTION_89
0x4008f73	     0xf849a060000	                            je 0x4009613	      3348	sequencer.c	FUNCTION_89	IF_14
0x4008f79	    0x488b05000000	            mov rax, qword [0x04008f80] 	        73	sequencer.c	CALL_12
0x4008f80	          0x4885c0	                           test rax, rax	        73	sequencer.c	CALL_12
0x4008f83	     0xf84310a0000	                            je 0x40099ba	        73	sequencer.c	CALL_12
0x4008f89	          0x4889c7	                            mov rdi, rax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4008f8c	          0x4531ed	                          xor r13d, r13d	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4008f8f	          0x4889de	                            mov rsi, rbx	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4008f92	      0xe8e992ffff	                 call sym.run_git_commit	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4008f97	            0x85c0	                           test eax, eax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4008f99	     0xf85a40a0000	                           jne 0x4009a43	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4008f9f	    0x488b3d000000	            mov rdi, qword [0x04008fa6] 	       110	sequencer.c	CALL_17
0x4008fa6	          0x4885ff	                           test rdi, rdi	       110	sequencer.c	CALL_17
0x4008fa9	     0xf84b5090000	                            je 0x4009964	       110	sequencer.c	CALL_17
0x4008faf	      0xe800000000	                          call 0x4008fb4	      3360	sequencer.c	FUNCTION_89	CALL_47
0x4008fb4	          0x4585ed	                         test r13d, r13d	      3361	sequencer.c	FUNCTION_89	IF_18
0x4008fb7	            0x742a	                            je 0x4008fe3	      3361	sequencer.c	FUNCTION_89	IF_18
0x4008fb9	    0x488b3d000000	            mov rdi, qword [0x04008fc0] 	        90	sequencer.c	CALL_14
0x4008fc0	          0x4885ff	                           test rdi, rdi	        90	sequencer.c	CALL_14
0x4008fc3	     0xf842a0a0000	                            je 0x40099f3	        90	sequencer.c	CALL_14
0x4008fc9	      0xe800000000	                          call 0x4008fce	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_49
0x4008fce	    0x488b3d000000	            mov rdi, qword [0x04008fd5] 	        82	sequencer.c	CALL_13
0x4008fd5	          0x4885ff	                           test rdi, rdi	        82	sequencer.c	CALL_13
0x4008fd8	     0xf84fa090000	                            je 0x40099d8	        82	sequencer.c	CALL_13
0x4008fde	      0xe800000000	                          call 0x4008fe3	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_51
0x4008fe3	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      3365	sequencer.c	FUNCTION_89	IF_19
0x4008fe6	            0x85c0	                           test eax, eax	      3365	sequencer.c	FUNCTION_89	IF_19
0x4008fe8	            0x7e3e	                           jle 0x4009028	      3365	sequencer.c	FUNCTION_89	IF_19
0x4008fea	    0x488b3d000000	            mov rdi, qword [0x04008ff1] 	        95	sequencer.c	CALL_15
0x4008ff1	          0x4885ff	                           test rdi, rdi	        95	sequencer.c	CALL_15
0x4008ff4	     0xf8485090000	                            je 0x400997f	        95	sequencer.c	CALL_15
0x4008ffa	      0xe800000000	                          call 0x4008fff	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_53
0x4008fff	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_108	IF_2
0x4009003	    0x48c743680000	               mov qword [rbx + 0x68], 0	       164	strbuf.h	FUNCTION_108
0x400900b	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x4009011	     0xf84cc080000	                            je 0x40098e3	       165	strbuf.h	FUNCTION_108	IF_2
0x4009017	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x400901a	    0xc74378000000	               mov dword [rbx + 0x78], 0	      3372	sequencer.c	FUNCTION_89	IF_19
0x4009021	     0xf1f80000000	                         nop dword [rax]	      3372	sequencer.c	FUNCTION_89	IF_19
0x4009028	          0x833b02	                      cmp dword [rbx], 2	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x400902b	     0xf84ef010000	                            je 0x4009220	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x4009031	      0xe800000000	                          call 0x4009036	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009036	          0x4889c7	                            mov rdi, rax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009039	      0xe800000000	                          call 0x400903e	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x400903e	            0x85c0	                           test eax, eax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009040	            0x7511	                           jne 0x4009053	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009042	      0xe800000000	                          call 0x4009047	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x4009047	          0x4889c7	                            mov rdi, rax	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x400904a	      0xe800000000	                          call 0x400904f	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x400904f	            0x85c0	                           test eax, eax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009051	            0x7410	                            je 0x4009063	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009053	      0xe8e877ffff	           call sym.continue_single_pick	      3401	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_15
0x4009058	            0x85c0	                           test eax, eax	      3402	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0x400905a	          0x4189c4	                           mov r12d, eax	      3401	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_15
0x400905d	     0xf8571feffff	                           jne 0x4008ed4	      3402	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0x4009063	            0x31d2	                            xor edx, edx	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009065	            0x31f6	                            xor esi, esi	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009067	      0xbf00000000	                              mov edi, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400906c	      0xe800000000	                          call 0x4009071	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009071	            0x85c0	                           test eax, eax	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009073	     0xf858a050000	                           jne 0x4009603	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009079	      0x8344247801	               add dword [rsp + 0x78], 1	      3409	sequencer.c	FUNCTION_90	IF_8
0x400907e	      0xe903020000	                           jmp 0x4009286	      3409	sequencer.c	FUNCTION_90	IF_8
0x4009083	       0xf1f440000	                   nop dword [rax + rax]	      3409	sequencer.c	FUNCTION_90	IF_8
0x4009088	    0x488b35000000	            mov rsi, qword [0x0400908f] 	       136	sequencer.c	CALL_22
0x400908f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x4009098	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x40090a1	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x40090aa	          0x4885f6	                           test rsi, rsi	       136	sequencer.c	CALL_22
0x40090ad	     0xf84c0050000	                            je 0x4009673	       136	sequencer.c	CALL_22
0x40090b3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40090b8	      0xba01000000	                              mov edx, 1	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40090bd	      0xe8ae82ffff	                  call sym.read_oneliner	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40090c2	            0x85c0	                           test eax, eax	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40090c4	     0xf85d6010000	                           jne 0x40092a0	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40090ca	    0x488b35000000	            mov rsi, qword [0x040090d1] 	       145	sequencer.c	CALL_31
0x40090d1	          0x4885f6	                           test rsi, rsi	       145	sequencer.c	CALL_31
0x40090d4	     0xf84e8050000	                            je 0x40096c2	       145	sequencer.c	CALL_31
0x40090da	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40090df	      0xba01000000	                              mov edx, 1	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40090e4	      0xe88782ffff	                  call sym.read_oneliner	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40090e9	            0x85c0	                           test eax, eax	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40090eb	            0x7439	                            je 0x4009126	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40090ed	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x40090f2	      0xbf00000000	                              mov edi, 0	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x40090f7	      0xb914000000	                           mov ecx, 0x14	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x40090fc	          0x4889c6	                            mov rsi, rax	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x40090ff	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4009101	     0xf85e9020000	                           jne 0x40093f0	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4009107	    0xc74318010000	               mov dword [rbx + 0x18], 1	      2118	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x400910e	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x4009114	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_108
0x400911d	     0xf84b0040000	                            je 0x40095d3	       165	strbuf.h	FUNCTION_108	IF_2
0x4009123	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x4009126	    0x488b3d000000	            mov rdi, qword [0x0400912d] 	       138	sequencer.c	CALL_24
0x400912d	          0x4885ff	                           test rdi, rdi	       138	sequencer.c	CALL_24
0x4009130	     0xf8456050000	                            je 0x400968c	       138	sequencer.c	CALL_24
0x4009136	      0xe800000000	                          call 0x400913b	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_10
0x400913b	            0x85c0	                           test eax, eax	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_10
0x400913d	     0xf85cd000000	                           jne 0x4009210	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_10
0x4009143	    0x488b3d000000	            mov rdi, qword [0x0400914a] 	       139	sequencer.c	CALL_25
0x400914a	          0x4885ff	                           test rdi, rdi	       139	sequencer.c	CALL_25
0x400914d	     0xf8454050000	                            je 0x40096a7	       139	sequencer.c	CALL_25
0x4009153	      0xe800000000	                          call 0x4009158	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_12
0x4009158	            0x85c0	                           test eax, eax	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_12
0x400915a	            0x740e	                            je 0x400916a	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_12
0x400915c	    0xc74314000000	               mov dword [rbx + 0x14], 0	      2128	sequencer.c	FUNCTION_64	IF_1	IF_8
0x4009163	    0xc74310010000	               mov dword [rbx + 0x10], 1	      2129	sequencer.c	FUNCTION_64	IF_1	IF_8
0x400916a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_108	IF_2
0x400916f	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_108
0x4009178	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x400917e	     0xf8474010000	                            je 0x40092f8	       165	strbuf.h	FUNCTION_108	IF_2
0x4009184	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x4009187	    0x488b35000000	            mov rsi, qword [0x0400918e] 	       143	sequencer.c	CALL_29
0x400918e	          0x4885f6	                           test rsi, rsi	       143	sequencer.c	CALL_29
0x4009191	     0xf84c1040000	                            je 0x4009658	       143	sequencer.c	CALL_29
0x4009197	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x400919c	            0x31d2	                            xor edx, edx	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x400919e	      0xe8cd81ffff	                  call sym.read_oneliner	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x40091a3	            0x85c0	                           test eax, eax	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x40091a5	     0xf85a5010000	                           jne 0x4009350	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x40091ab	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_14
0x40091b0	      0xe800000000	                          call 0x40091b5	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_14
0x40091b5	    0x488b35000000	            mov rsi, qword [0x040091bc] 	        95	sequencer.c	CALL_15
0x40091bc	          0x4885f6	                           test rsi, rsi	        95	sequencer.c	CALL_15
0x40091bf	     0xf8418050000	                            je 0x40096dd	        95	sequencer.c	CALL_15
0x40091c5	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x40091c9	      0xba01000000	                              mov edx, 1	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x40091ce	      0xe89d81ffff	                  call sym.read_oneliner	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x40091d3	            0x85c0	                           test eax, eax	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x40091d5	     0xf84cafcffff	                            je 0x4008ea5	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x40091db	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	      2137	sequencer.c	FUNCTION_64	IF_1	IF_9
0x40091df	    0xc74378010000	               mov dword [rbx + 0x78], 1	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x40091e6	            0xeb10	                           jmp 0x40091f8	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x40091e8	     0xf1f84000000	                   nop dword [rax + rax]	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x40091f0	        0x83437801	               add dword [rbx + 0x78], 1	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x40091f4	        0x488d7801	                      lea rdi, [rax + 1]	      2141	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x40091f8	      0xbe0a000000	                            mov esi, 0xa	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x40091fd	      0xe800000000	                          call 0x4009202	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009202	          0x4885c0	                           test rax, rax	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009205	            0x75e9	                           jne 0x40091f0	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009207	      0xe999fcffff	                           jmp 0x4008ea5	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x400920c	         0xf1f4000	                         nop dword [rax]	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009210	    0xc74328010000	               mov dword [rbx + 0x28], 1	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x4009217	      0xe927ffffff	                           jmp 0x4009143	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x400921c	         0xf1f4000	                         nop dword [rax]	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x4009220	    0x488b3d000000	            mov rdi, qword [0x04009227] 	       115	sequencer.c	CALL_18
0x4009227	          0x4885ff	                           test rdi, rdi	       115	sequencer.c	CALL_18
0x400922a	     0xf84c8060000	                            je 0x40098f8	       115	sequencer.c	CALL_18
0x4009230	      0xe800000000	                          call 0x4009235	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x4009235	            0x85c0	                           test eax, eax	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x4009237	            0x744d	                            je 0x4009286	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x4009239	    0x488b35000000	            mov rsi, qword [0x04009240] 	       115	sequencer.c	CALL_18
0x4009240	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x4009249	    0x48c744243800	               mov qword [rsp + 0x38], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x4009252	    0x48c744244000	               mov qword [rsp + 0x40], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x400925b	          0x4885f6	                           test rsi, rsi	       115	sequencer.c	CALL_18
0x400925e	     0xf84ca060000	                            je 0x400992e	       115	sequencer.c	CALL_18
0x4009264	      0x4c8d642430	                   lea r12, [rsp + 0x30]	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009269	      0xba01000000	                              mov edx, 1	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400926e	          0x4c89e7	                            mov rdi, r12	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009271	      0xe8fa80ffff	                  call sym.read_oneliner	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009276	            0x85c0	                           test eax, eax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009278	     0xf856d020000	                           jne 0x40094eb	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400927e	          0x4c89e7	                            mov rdi, r12	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0x4009281	      0xe800000000	                          call 0x4009286	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0x4009286	          0x4889de	                            mov rsi, rbx	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009289	          0x4889ef	                            mov rdi, rbp	      3420	sequencer.c	FUNCTION_90	CALL_26
0x400928c	      0xe88fdaffff	                   call sym.pick_commits	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009291	          0x4189c4	                           mov r12d, eax	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009294	      0xe93bfcffff	                           jmp 0x4008ed4	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009299	     0xf1f80000000	                         nop dword [rax]	      3420	sequencer.c	FUNCTION_90	CALL_26
0x40092a0	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x40092a5	      0xbe00000000	                              mov esi, 0	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x40092aa	      0xe800000000	                          call 0x40092af	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x40092af	            0x85c0	                           test eax, eax	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x40092b1	     0xf845a010000	                            je 0x4009411	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x40092b7	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_5
0x40092bb	      0xe800000000	                          call 0x40092c0	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_5
0x40092c0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40092c5	        0x488d7802	                      lea rdi, [rax + 2]	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40092c9	      0xe800000000	                          call 0x40092ce	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40092ce	        0x48894330	             mov qword [rbx + 0x30], rax	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40092d2	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40092d7	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x40092dd	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_108
0x40092e6	     0xf8422040000	                            je 0x400970e	       165	strbuf.h	FUNCTION_108	IF_2
0x40092ec	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x40092ef	      0xe9d6fdffff	                           jmp 0x40090ca	       166	strbuf.h	FUNCTION_108	IF_2
0x40092f4	         0xf1f4000	                         nop dword [rax]	       166	strbuf.h	FUNCTION_108	IF_2
0x40092f8	    0x803d00000000	                cmp byte [0x040092ff], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x40092ff	     0xf8482feffff	                            je 0x4009187	       168	strbuf.h	FUNCTION_108	CALL_2
0x4009305	      0xe9d6020000	                           jmp 0x40095e0	       168	strbuf.h	FUNCTION_108	CALL_2
0x400930a	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x4009310	    0x488b1d000000	            mov rbx, qword [0x04009317] 	       110	sequencer.c	CALL_17
0x4009317	          0x4885db	                           test rbx, rbx	       110	sequencer.c	CALL_17
0x400931a	     0xf84d2080000	                            je 0x4009bf2	       110	sequencer.c	CALL_17
0x4009320	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x4009325	      0xe82671ffff	                       call sym._.part.6	       110	sequencer.c	CALL_17
0x400932a	          0x4889de	                            mov rsi, rbx	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400932d	          0x4889c7	                            mov rdi, rax	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4009330	            0x31c0	                            xor eax, eax	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4009332	      0xe800000000	                          call 0x4009337	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4009337	    0x660f1f840000	                    nop word [rax + rax]	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4009340	      0xb8ffffffff	                     mov eax, 0xffffffff	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x4009345	      0xe9abfbffff	                           jmp 0x4008ef5	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x400934a	    0x660f1f440000	                    nop word [rax + rax]	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x4009350	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4009355	            0x31f6	                            xor esi, esi	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4009357	      0xe800000000	                          call 0x400935c	      2088	sequencer.c	FUNCTION_63	CALL_3
0x400935c	    0x488b35000000	            mov rsi, qword [0x04009363] 	       144	sequencer.c	CALL_30
0x4009363	        0x48894340	             mov qword [rbx + 0x40], rax	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4009367	          0x4885f6	                           test rsi, rsi	       144	sequencer.c	CALL_30
0x400936a	     0xf84a3050000	                            je 0x4009913	       144	sequencer.c	CALL_30
0x4009370	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4009375	            0x31d2	                            xor edx, edx	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4009377	      0xe8f47fffff	                  call sym.read_oneliner	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x400937c	            0x85c0	                           test eax, eax	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x400937e	     0xf8427feffff	                            je 0x40091ab	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4009384	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4009389	        0x488d7348	                   lea rsi, [rbx + 0x48]	      2092	sequencer.c	FUNCTION_63	CALL_6
0x400938d	      0xe800000000	                          call 0x4009392	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4009392	            0x4898	                                    cdqe	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4009394	          0x4885c0	                           test rax, rax	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4009397	        0x48894350	             mov qword [rbx + 0x50], rax	      2092	sequencer.c	FUNCTION_63	CALL_6
0x400939b	     0xf840afeffff	                            je 0x40091ab	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40093a1	          0x4531e4	                          xor r12d, r12d	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40093a4	         0xf1f4000	                         nop dword [rax]	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40093a8	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      2094	sequencer.c	FUNCTION_63	FOR_1
0x40093ac	        0x4e8d2ce0	                  lea r13, [rax + r12*8]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x40093b0	      0xb800000000	                              mov eax, 0	      2094	sequencer.c	FUNCTION_63	FOR_1
0x40093b5	        0x498b4d00	                    mov rcx, qword [r13]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x40093b9	          0x4889cf	                            mov rdi, rcx	      2094	sequencer.c	FUNCTION_63	FOR_1
0x40093bc	            0xeb13	                           jmp 0x40093d1	      2094	sequencer.c	FUNCTION_63	FOR_1
0x40093be	            0x6690	                                     nop	      2094	sequencer.c	FUNCTION_63	FOR_1
0x40093c0	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40093c4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40093c8	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40093cb	     0xf85df010000	                           jne 0x40095b0	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40093d1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x40093d4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x40093d6	            0x75e8	                           jne 0x40093c0	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x40093d8	      0xe800000000	                          call 0x40093dd	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40093dd	        0x4983c401	                              add r12, 1	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40093e1	        0x4c396350	            cmp qword [rbx + 0x50], r12 	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40093e5	        0x49894500	                    mov qword [r13], rax	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40093e9	            0x77bd	                            ja 0x40093a8	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40093eb	      0xe9bbfdffff	                           jmp 0x40091ab	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40093f0	      0xbf00000000	                              mov edi, 0	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x40093f5	      0xb917000000	                           mov ecx, 0x17	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x40093fa	          0x4889c6	                            mov rsi, rax	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x40093fd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x40093ff	     0xf8509fdffff	                           jne 0x400910e	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4009405	    0xc74318020000	               mov dword [rbx + 0x18], 2	      2120	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x400940c	      0xe9fdfcffff	                           jmp 0x400910e	      2120	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4009411	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_108	IF_2
0x4009416	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_108
0x400941f	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x4009425	     0xf84cd020000	                            je 0x40096f8	       165	strbuf.h	FUNCTION_108	IF_2
0x400942b	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x400942e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       166	strbuf.h	FUNCTION_108	IF_2
0x4009433	      0xe99ffeffff	                           jmp 0x40092d7	       166	strbuf.h	FUNCTION_108	IF_2
0x4009438	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4009440	      0xbf00000000	                              mov edi, 0	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4009445	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x400944e	    0x48c744243800	               mov qword [rsp + 0x38], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x4009457	    0x48c744244000	               mov qword [rsp + 0x40], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x4009460	      0xe800000000	                          call 0x4009465	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4009465	            0x85c0	                           test eax, eax	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4009467	     0xf8507060000	                           jne 0x4009a74	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x400946d	    0x488b35000000	            mov rsi, qword [0x04009474] 	       110	sequencer.c	CALL_17
0x4009474	          0x4885f6	                           test rsi, rsi	       110	sequencer.c	CALL_17
0x4009477	     0xf8491050000	                            je 0x4009a0e	       110	sequencer.c	CALL_17
0x400947d	      0x4c8d642430	                   lea r12, [rsp + 0x30]	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4009482	            0x31d2	                            xor edx, edx	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4009484	          0x4c89e7	                            mov rdi, r12	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4009487	      0xe8e47effff	                  call sym.read_oneliner	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400948c	            0x85c0	                           test eax, eax	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400948e	     0xf847cfeffff	                            je 0x4009310	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4009494	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x4009499	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x40094a1	      0xe800000000	                          call 0x40094a6	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x40094a6	            0x85c0	                           test eax, eax	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x40094a8	     0xf857b050000	                           jne 0x4009a29	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x40094ae	          0x4585ed	                         test r13d, r13d	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x40094b1	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_125	CALL_1
0x40094b6	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	       975	cache.h	FUNCTION_125	CALL_1
0x40094be	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       975	cache.h	FUNCTION_125	CALL_1
0x40094c6	     0xf8454020000	                            je 0x4009720	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x40094cc	      0xe800000000	                          call 0x40094d1	       975	cache.h	FUNCTION_125	CALL_1
0x40094d1	            0x85c0	                           test eax, eax	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x40094d3	     0xf85d2060000	                           jne 0x4009bab	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x40094d9	          0x4c89e7	                            mov rdi, r12	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x40094dc	      0xe800000000	                          call 0x40094e1	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x40094e1	      0xba07000000	                              mov edx, 7	      3345	sequencer.c	FUNCTION_89	IF_2
0x40094e6	      0xe98efaffff	                           jmp 0x4008f79	      3345	sequencer.c	FUNCTION_89	IF_2
0x40094eb	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x40094f0	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x40094f8	      0xe800000000	                          call 0x40094fd	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x40094fd	            0x85c0	                           test eax, eax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x40094ff	     0xf8579fdffff	                           jne 0x400927e	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009505	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009509	        0x8b542478	            mov edx, dword [rsp + 0x78] 	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400950d	      0xbeffffffff	                     mov esi, 0xffffffff	      2910	sequencer.c	FUNCTION_84
0x4009512	      0x4c8b442468	              mov r8, qword [rsp + 0x68]	      2910	sequencer.c	FUNCTION_84
0x4009517	            0x39d7	                            cmp edi, edx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009519	            0x7e42	                           jle 0x400955d	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400951b	          0x4863ca	                         movsxd rcx, edx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400951e	        0x488d0449	                  lea rax, [rcx + rcx*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009522	        0x48c1e004	                              shl rax, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009526	          0x4c01c0	                             add rax, r8	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009529	            0x8b30	                    mov esi, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400952b	          0x83fe09	                              cmp esi, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400952e	            0x762d	                           jbe 0x400955d	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009530	          0x8d77ff	                      lea esi, [rdi - 1]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009533	            0x29d6	                            sub esi, edx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009535	          0x4801f1	                            add rcx, rsi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009538	        0x488d1449	                  lea rdx, [rcx + rcx*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400953c	        0x48c1e204	                              shl rdx, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009540	          0x4c01c2	                             add rdx, r8	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009543	            0xeb0e	                           jmp 0x4009553	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009545	           0xf1f00	                         nop dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009548	        0x4883c030	                           add rax, 0x30	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400954c	            0x8b30	                    mov esi, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400954e	          0x83fe09	                              cmp esi, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009551	            0x760a	                           jbe 0x400955d	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009553	          0x4839c2	                            cmp rdx, rax	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009556	            0x75f0	                           jne 0x4009548	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009558	      0xbeffffffff	                     mov esi, 0xffffffff	      2910	sequencer.c	FUNCTION_84
0x400955d	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x4009565	      0xe8a66dffff	            call sym.record_in_rewritten	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400956a	      0xe90ffdffff	                           jmp 0x400927e	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400956f	    0x488b1d000000	            mov rbx, qword [0x04009576] 	        41	sequencer.c	CALL_4
0x4009576	          0x4885db	                           test rbx, rbx	        41	sequencer.c	CALL_4
0x4009579	     0xf84e1050000	                            je 0x4009b60	        41	sequencer.c	CALL_4
0x400957f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4009584	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4009589	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400958b	      0xe800000000	                          call 0x4009590	        54	gettext.h	FUNCTION_147
0x4009590	          0x4889de	                            mov rsi, rbx	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x4009593	          0x4889c7	                            mov rdi, rax	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x4009596	            0x31c0	                            xor eax, eax	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x4009598	      0xe800000000	                          call 0x400959d	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x400959d	      0xb8ffffffff	                     mov eax, 0xffffffff	      3386	sequencer.c	FUNCTION_90	IF_2
0x40095a2	      0xe94ef9ffff	                           jmp 0x4008ef5	      3386	sequencer.c	FUNCTION_90	IF_2
0x40095a7	    0x660f1f840000	                    nop word [rax + rax]	      3386	sequencer.c	FUNCTION_90	IF_2
0x40095b0	          0x4889cf	                            mov rdi, rcx	      2094	sequencer.c	FUNCTION_63	FOR_1
0x40095b3	      0xe920feffff	                           jmp 0x40093d8	      2094	sequencer.c	FUNCTION_63	FOR_1
0x40095b8	      0xbf00000000	                              mov edi, 0	        41	sequencer.c	CALL_4
0x40095bd	            0x31c0	                            xor eax, eax	        41	sequencer.c	CALL_4
0x40095bf	      0xe800000000	                          call 0x40095c4	        41	sequencer.c	CALL_4
0x40095c4	          0x4889c7	                            mov rdi, rax	        41	sequencer.c	CALL_4
0x40095c7	    0x488905000000	            mov qword [0x040095ce], rax 	        41	sequencer.c	CALL_4
0x40095ce	      0xe9a4f8ffff	                           jmp 0x4008e77	        41	sequencer.c	CALL_4
0x40095d3	    0x803d00000000	                cmp byte [0x040095da], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x40095da	     0xf8446fbffff	                            je 0x4009126	       168	strbuf.h	FUNCTION_108	CALL_2
0x40095e0	      0xe800000000	                          call 0x40095e5	       168	strbuf.h	FUNCTION_108	CALL_2
0x40095e5	           0xf1f00	                         nop dword [rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x40095e8	      0xbf00000000	                              mov edi, 0	        41	sequencer.c	CALL_4
0x40095ed	            0x31c0	                            xor eax, eax	        41	sequencer.c	CALL_4
0x40095ef	      0xe800000000	                          call 0x40095f4	        41	sequencer.c	CALL_4
0x40095f4	          0x4889c6	                            mov rsi, rax	        41	sequencer.c	CALL_4
0x40095f7	    0x488905000000	            mov qword [0x040095fe], rax 	        41	sequencer.c	CALL_4
0x40095fe	      0xe98df8ffff	                           jmp 0x4008e90	        41	sequencer.c	CALL_4
0x4009603	          0x4889df	                            mov rdi, rbx	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x4009606	      0xe88573ffff	              call sym.error_dirty_index	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x400960b	          0x4189c4	                           mov r12d, eax	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x400960e	      0xe9c1f8ffff	                           jmp 0x4008ed4	      3407	sequencer.c	FUNCTION_90	IF_8	IF_11
0x4009613	      0xe800000000	                          call 0x4009618	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x4009618	          0x4889c7	                            mov rdi, rax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400961b	          0x4989c4	                            mov r12, rax	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x400961e	      0xe800000000	                          call 0x4009623	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009623	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009625	     0xf84fdf9ffff	                            je 0x4009028	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400962b	          0x4c89e7	                            mov rdi, r12	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400962e	      0xe800000000	                          call 0x4009633	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009633	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009635	     0xf84edf9ffff	                            je 0x4009028	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400963b	      0xbf00000000	                              mov edi, 0	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009640	      0xe80b6effff	                       call sym._.part.6	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009645	          0x4889c7	                            mov rdi, rax	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x4009648	            0x31c0	                            xor eax, eax	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x400964a	      0xe800000000	                          call 0x400964f	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x400964f	      0xe9ecfcffff	                           jmp 0x4009340	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x4009654	         0xf1f4000	                         nop dword [rax]	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x4009658	      0xbf00000000	                              mov edi, 0	       143	sequencer.c	CALL_29
0x400965d	            0x31c0	                            xor eax, eax	       143	sequencer.c	CALL_29
0x400965f	      0xe800000000	                          call 0x4009664	       143	sequencer.c	CALL_29
0x4009664	          0x4889c6	                            mov rsi, rax	       143	sequencer.c	CALL_29
0x4009667	    0x488905000000	            mov qword [0x0400966e], rax 	       143	sequencer.c	CALL_29
0x400966e	      0xe924fbffff	                           jmp 0x4009197	       143	sequencer.c	CALL_29
0x4009673	      0xbf00000000	                              mov edi, 0	       136	sequencer.c	CALL_22
0x4009678	      0xe800000000	                          call 0x400967d	       136	sequencer.c	CALL_22
0x400967d	          0x4889c6	                            mov rsi, rax	       136	sequencer.c	CALL_22
0x4009680	    0x488905000000	            mov qword [0x04009687], rax 	       136	sequencer.c	CALL_22
0x4009687	      0xe927faffff	                           jmp 0x40090b3	       136	sequencer.c	CALL_22
0x400968c	      0xbf00000000	                              mov edi, 0	       138	sequencer.c	CALL_24
0x4009691	            0x31c0	                            xor eax, eax	       138	sequencer.c	CALL_24
0x4009693	      0xe800000000	                          call 0x4009698	       138	sequencer.c	CALL_24
0x4009698	          0x4889c7	                            mov rdi, rax	       138	sequencer.c	CALL_24
0x400969b	    0x488905000000	            mov qword [0x040096a2], rax 	       138	sequencer.c	CALL_24
0x40096a2	      0xe98ffaffff	                           jmp 0x4009136	       138	sequencer.c	CALL_24
0x40096a7	      0xbf00000000	                              mov edi, 0	       139	sequencer.c	CALL_25
0x40096ac	            0x31c0	                            xor eax, eax	       139	sequencer.c	CALL_25
0x40096ae	      0xe800000000	                          call 0x40096b3	       139	sequencer.c	CALL_25
0x40096b3	          0x4889c7	                            mov rdi, rax	       139	sequencer.c	CALL_25
0x40096b6	    0x488905000000	            mov qword [0x040096bd], rax 	       139	sequencer.c	CALL_25
0x40096bd	      0xe991faffff	                           jmp 0x4009153	       139	sequencer.c	CALL_25
0x40096c2	      0xbf00000000	                              mov edi, 0	       145	sequencer.c	CALL_31
0x40096c7	            0x31c0	                            xor eax, eax	       145	sequencer.c	CALL_31
0x40096c9	      0xe800000000	                          call 0x40096ce	       145	sequencer.c	CALL_31
0x40096ce	          0x4889c6	                            mov rsi, rax	       145	sequencer.c	CALL_31
0x40096d1	    0x488905000000	            mov qword [0x040096d8], rax 	       145	sequencer.c	CALL_31
0x40096d8	      0xe9fdf9ffff	                           jmp 0x40090da	       145	sequencer.c	CALL_31
0x40096dd	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x40096e2	            0x31c0	                            xor eax, eax	        95	sequencer.c	CALL_15
0x40096e4	      0xe800000000	                          call 0x40096e9	        95	sequencer.c	CALL_15
0x40096e9	          0x4889c6	                            mov rsi, rax	        95	sequencer.c	CALL_15
0x40096ec	    0x488905000000	            mov qword [0x040096f3], rax 	        95	sequencer.c	CALL_15
0x40096f3	      0xe9cdfaffff	                           jmp 0x40091c5	        95	sequencer.c	CALL_15
0x40096f8	    0x803d00000000	                cmp byte [0x040096ff], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x40096ff	     0xf85dbfeffff	                           jne 0x40095e0	       168	strbuf.h	FUNCTION_108	CALL_2
0x4009705	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_108
0x400970e	    0x803d00000000	                cmp byte [0x04009715], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x4009715	     0xf84aff9ffff	                            je 0x40090ca	       168	strbuf.h	FUNCTION_108	CALL_2
0x400971b	      0xe9c0feffff	                           jmp 0x40095e0	       168	strbuf.h	FUNCTION_108	CALL_2
0x4009720	      0xe800000000	                          call 0x4009725	       975	cache.h	FUNCTION_125	CALL_1
0x4009725	            0x85c0	                           test eax, eax	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x4009727	     0xf85ac010000	                           jne 0x40098d9	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400972d	          0x8b4b78	            mov ecx, dword [rbx + 0x78] 	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x4009730	            0x85c9	                           test ecx, ecx	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x4009732	     0xf8ea1010000	                           jle 0x40098d9	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x4009738	    0x488b05000000	            mov rax, qword [0x0400973f] 	       115	sequencer.c	CALL_18
0x400973f	          0x4885c0	                           test rax, rax	       115	sequencer.c	CALL_18
0x4009742	     0xf8402040000	                            je 0x4009b4a	       115	sequencer.c	CALL_18
0x4009748	          0x4889c7	                            mov rdi, rax	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_19
0x400974b	      0xe800000000	                          call 0x4009750	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_19
0x4009750	            0x85c0	                           test eax, eax	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0x4009752	     0xf8481010000	                            je 0x40098d9	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0x4009758	        0x488b4b68	            mov rcx, qword [rbx + 0x68] 	      3289	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400975c	        0x836b7801	               sub dword [rbx + 0x78], 1	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0x4009760	        0x4c8b6b70	            mov r13, qword [rbx + 0x70] 	      3288	sequencer.c	FUNCTION_89	IF_2	IF_7
0x4009764	            0x85c9	                           test ecx, ecx	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4009766	     0xf849f040000	                            je 0x4009c0b	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400976c	          0x4863c1	                         movsxd rax, ecx	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400976f	          0x83e901	                              sub ecx, 1	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4009772	        0x488d50ff	                      lea rdx, [rax - 1]	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4009776	          0x4829ca	                            sub rdx, rcx	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4009779	    0x41807c05ff0a	          cmp byte [r13 + rax - 1], 0xa 	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400977f	     0xf84d7020000	                            je 0x4009a5c	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4009785	        0x4883e801	                              sub rax, 1	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4009789	          0x4839c2	                            cmp rdx, rax	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400978c	            0x75eb	                           jne 0x4009779	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400978e	        0x4c8b7360	            mov r14, qword [rbx + 0x60] 	       162	strbuf.h	FUNCTION_108	IF_1
0x4009792	          0x4d85f6	                           test r14, r14	       162	strbuf.h	FUNCTION_108	IF_1
0x4009795	            0x7412	                            je 0x40097a9	       162	strbuf.h	FUNCTION_108	IF_1
0x4009797	            0x31c0	                            xor eax, eax	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x4009799	        0x498d56ff	                      lea rdx, [r14 - 1]	       162	strbuf.h	FUNCTION_108	IF_1
0x400979d	          0x4989c6	                            mov r14, rax	       162	strbuf.h	FUNCTION_108	IF_1
0x40097a0	          0x4939d6	                            cmp r14, rdx	       162	strbuf.h	FUNCTION_108	IF_1
0x40097a3	     0xf877b040000	                            ja 0x4009c24	       162	strbuf.h	FUNCTION_108	IF_1
0x40097a9	    0x4981fd000000	                              cmp r13, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x40097b0	        0x4c897368	             mov qword [rbx + 0x68], r14	       164	strbuf.h	FUNCTION_108
0x40097b4	     0xf84d3020000	                            je 0x4009a8d	       165	strbuf.h	FUNCTION_108	IF_2
0x40097ba	    0x43c644350000	                 mov byte [r13 + r14], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x40097c0	    0x488b05000000	            mov rax, qword [0x040097c7] 	        95	sequencer.c	CALL_15
0x40097c7	          0x4885c0	                           test rax, rax	        95	sequencer.c	CALL_15
0x40097ca	     0xf848e040000	                            je 0x4009c5e	        95	sequencer.c	CALL_15
0x40097d0	            0x31c9	                            xor ecx, ecx	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x40097d2	          0x4889c2	                            mov rdx, rax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x40097d5	          0x4c89f6	                            mov rsi, r14	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x40097d8	          0x4c89ef	                            mov rdi, r13	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x40097db	      0xe8308fffff	                  call sym.write_message	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x40097e0	            0x85c0	                           test eax, eax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x40097e2	     0xf8848040000	                            js 0x4009c30	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x40097e8	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40097eb	      0x4c8b4c2468	              mov r9, qword [rsp + 0x68]	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40097f0	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40097f4	        0x8b4c2478	            mov ecx, dword [rsp + 0x78] 	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40097f8	            0x85d2	                           test edx, edx	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40097fa	     0xf8e9f020000	                           jle 0x4009a9f	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4009800	            0x39cf	                            cmp edi, ecx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009802	            0x7e3e	                           jle 0x4009842	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009804	          0x4863f1	                         movsxd rsi, ecx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009807	        0x488d0476	                  lea rax, [rsi + rsi*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400980b	        0x48c1e004	                              shl rax, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400980f	          0x4c01c8	                             add rax, r9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009812	            0x8b10	                    mov edx, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009814	          0x83fa09	                              cmp edx, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009817	     0xf86c4030000	                           jbe 0x4009be1	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400981d	          0x8d57ff	                      lea edx, [rdi - 1]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009820	            0x29ca	                            sub edx, ecx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009822	          0x4801f2	                            add rdx, rsi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009825	        0x4c8d0452	                   lea r8, [rdx + rdx*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009829	        0x49c1e004	                               shl r8, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400982d	          0x4d01c8	                              add r8, r9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009830	            0xeb0b	                           jmp 0x400983d	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009832	        0x4883c030	                           add rax, 0x30	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009836	            0x8b10	                    mov edx, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009838	          0x83fa09	                              cmp edx, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400983b	            0x7671	                           jbe 0x40098ae	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400983d	          0x4939c0	                             cmp r8, rax	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009840	            0x75f0	                           jne 0x4009832	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009842	      0xbe00000000	                              mov esi, 0	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4009847	          0x4c89ef	                            mov rdi, r13	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400984a	      0xe800000000	                          call 0x400984f	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400984f	            0x85c0	                           test eax, eax	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4009851	     0xf8524030000	                           jne 0x4009b7b	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4009857	          0x4c89ef	                            mov rdi, r13	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x400985a	      0xbe00000000	                              mov esi, 0	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x400985f	    0x41bd01000000	                             mov r13d, 1	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4009865	      0xe800000000	                          call 0x400986a	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x400986a	        0x4883f801	                              cmp rax, 1	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400986e	            0x19d2	                            sbb edx, edx	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4009870	          0x83e206	                              and edx, 6	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4009873	          0x83c207	                              add edx, 7	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4009876	          0x4c89e7	                            mov rdi, r12	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x4009879	        0x8954240c	              mov dword [rsp + 0xc], edx	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x400987d	      0xe800000000	                          call 0x4009882	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x4009882	      0xe800000000	                          call 0x4009887	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x4009887	          0x4889c7	                            mov rdi, rax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400988a	          0x4989c4	                            mov r12, rax	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x400988d	      0xe800000000	                          call 0x4009892	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009892	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009894	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009898	     0xf8526030000	                           jne 0x4009bc4	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400989e	          0x4585ed	                         test r13d, r13d	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0x40098a1	     0xf8481f7ffff	                            je 0x4009028	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0x40098a7	            0x31ff	                            xor edi, edi	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x40098a9	      0xe9e1f6ffff	                           jmp 0x4008f8f	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x40098ae	          0x83ea04	                              sub edx, 4	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40098b1	          0x83fa01	                              cmp edx, 1	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40098b4	            0x778c	                            ja 0x4009842	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40098b6	        0x488d0476	                  lea rax, [rsi + rsi*2]	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40098ba	        0x48c1e004	                              shl rax, 4	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40098be	          0x4c01c8	                             add rax, r9	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40098c1	            0xeb0f	                           jmp 0x40098d2	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40098c3	        0x4883c030	                           add rax, 0x30	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40098c7	            0x8b10	                    mov edx, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40098c9	          0x83fa09	                              cmp edx, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40098cc	     0xf86e9010000	                           jbe 0x4009abb	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40098d2	          0x83c101	                              add ecx, 1	      2906	sequencer.c	FUNCTION_84	FOR_1
0x40098d5	            0x39f9	                            cmp ecx, edi	      2906	sequencer.c	FUNCTION_84	FOR_1
0x40098d7	            0x7cea	                            jl 0x40098c3	      2906	sequencer.c	FUNCTION_84	FOR_1
0x40098d9	      0xba07000000	                              mov edx, 7	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x40098de	          0x4531ed	                          xor r13d, r13d	      3255	sequencer.c	FUNCTION_89
0x40098e1	            0xeb93	                           jmp 0x4009876	      3255	sequencer.c	FUNCTION_89
0x40098e3	    0x803d00000000	                cmp byte [0x040098ea], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x40098ea	     0xf842af7ffff	                            je 0x400901a	       168	strbuf.h	FUNCTION_108	CALL_2
0x40098f0	      0xe9ebfcffff	                           jmp 0x40095e0	       168	strbuf.h	FUNCTION_108	CALL_2
0x40098f5	           0xf1f00	                         nop dword [rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x40098f8	      0xbf00000000	                              mov edi, 0	       115	sequencer.c	CALL_18
0x40098fd	            0x31c0	                            xor eax, eax	       115	sequencer.c	CALL_18
0x40098ff	      0xe800000000	                          call 0x4009904	       115	sequencer.c	CALL_18
0x4009904	          0x4889c7	                            mov rdi, rax	       115	sequencer.c	CALL_18
0x4009907	    0x488905000000	            mov qword [0x0400990e], rax 	       115	sequencer.c	CALL_18
0x400990e	      0xe91df9ffff	                           jmp 0x4009230	       115	sequencer.c	CALL_18
0x4009913	      0xbf00000000	                              mov edi, 0	       144	sequencer.c	CALL_30
0x4009918	            0x31c0	                            xor eax, eax	       144	sequencer.c	CALL_30
0x400991a	      0xe800000000	                          call 0x400991f	       144	sequencer.c	CALL_30
0x400991f	          0x4889c6	                            mov rsi, rax	       144	sequencer.c	CALL_30
0x4009922	    0x488905000000	            mov qword [0x04009929], rax 	       144	sequencer.c	CALL_30
0x4009929	      0xe942faffff	                           jmp 0x4009370	       144	sequencer.c	CALL_30
0x400992e	      0xbf00000000	                              mov edi, 0	       115	sequencer.c	CALL_18
0x4009933	            0x31c0	                            xor eax, eax	       115	sequencer.c	CALL_18
0x4009935	      0xe800000000	                          call 0x400993a	       115	sequencer.c	CALL_18
0x400993a	          0x4889c6	                            mov rsi, rax	       115	sequencer.c	CALL_18
0x400993d	    0x488905000000	            mov qword [0x04009944], rax 	       115	sequencer.c	CALL_18
0x4009944	      0xe91bf9ffff	                           jmp 0x4009264	       115	sequencer.c	CALL_18
0x4009949	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x400994e	            0x31c0	                            xor eax, eax	       110	sequencer.c	CALL_17
0x4009950	      0xe800000000	                          call 0x4009955	       110	sequencer.c	CALL_17
0x4009955	          0x4889c7	                            mov rdi, rax	       110	sequencer.c	CALL_17
0x4009958	    0x488905000000	            mov qword [0x0400995f], rax 	       110	sequencer.c	CALL_17
0x400995f	      0xe9faf5ffff	                           jmp 0x4008f5e	       110	sequencer.c	CALL_17
0x4009964	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x4009969	            0x31c0	                            xor eax, eax	       110	sequencer.c	CALL_17
0x400996b	      0xe800000000	                          call 0x4009970	       110	sequencer.c	CALL_17
0x4009970	          0x4889c7	                            mov rdi, rax	       110	sequencer.c	CALL_17
0x4009973	    0x488905000000	            mov qword [0x0400997a], rax 	       110	sequencer.c	CALL_17
0x400997a	      0xe930f6ffff	                           jmp 0x4008faf	       110	sequencer.c	CALL_17
0x400997f	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x4009984	            0x31c0	                            xor eax, eax	        95	sequencer.c	CALL_15
0x4009986	      0xe800000000	                          call 0x400998b	        95	sequencer.c	CALL_15
0x400998b	          0x4889c7	                            mov rdi, rax	        95	sequencer.c	CALL_15
0x400998e	    0x488905000000	            mov qword [0x04009995], rax 	        95	sequencer.c	CALL_15
0x4009995	      0xe960f6ffff	                           jmp 0x4008ffa	        95	sequencer.c	CALL_15
0x400999a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400999c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40099a1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40099a6	      0xe800000000	                          call 0x40099ab	        54	gettext.h	FUNCTION_147
0x40099ab	          0x4889c7	                            mov rdi, rax	      3258	sequencer.c	FUNCTION_89	CALL_2
0x40099ae	            0x31c0	                            xor eax, eax	      3258	sequencer.c	FUNCTION_89	CALL_2
0x40099b0	      0xe800000000	                          call 0x40099b5	      3258	sequencer.c	FUNCTION_89	CALL_2
0x40099b5	      0xe986f9ffff	                           jmp 0x4009340	      3258	sequencer.c	FUNCTION_89	CALL_2
0x40099ba	      0xbf00000000	                              mov edi, 0	        73	sequencer.c	CALL_12
0x40099bf	        0x8954240c	              mov dword [rsp + 0xc], edx	        73	sequencer.c	CALL_12
0x40099c3	      0xe800000000	                          call 0x40099c8	        73	sequencer.c	CALL_12
0x40099c8	        0x8b54240c	              mov edx, dword [rsp + 0xc]	        73	sequencer.c	CALL_12
0x40099cc	    0x488905000000	            mov qword [0x040099d3], rax 	        73	sequencer.c	CALL_12
0x40099d3	      0xe9b1f5ffff	                           jmp 0x4008f89	        73	sequencer.c	CALL_12
0x40099d8	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x40099dd	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x40099df	      0xe800000000	                          call 0x40099e4	        82	sequencer.c	CALL_13
0x40099e4	          0x4889c7	                            mov rdi, rax	        82	sequencer.c	CALL_13
0x40099e7	    0x488905000000	            mov qword [0x040099ee], rax 	        82	sequencer.c	CALL_13
0x40099ee	      0xe9ebf5ffff	                           jmp 0x4008fde	        82	sequencer.c	CALL_13
0x40099f3	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x40099f8	            0x31c0	                            xor eax, eax	        90	sequencer.c	CALL_14
0x40099fa	      0xe800000000	                          call 0x40099ff	        90	sequencer.c	CALL_14
0x40099ff	          0x4889c7	                            mov rdi, rax	        90	sequencer.c	CALL_14
0x4009a02	    0x488905000000	            mov qword [0x04009a09], rax 	        90	sequencer.c	CALL_14
0x4009a09	      0xe9bbf5ffff	                           jmp 0x4008fc9	        90	sequencer.c	CALL_14
0x4009a0e	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x4009a13	            0x31c0	                            xor eax, eax	       110	sequencer.c	CALL_17
0x4009a15	      0xe800000000	                          call 0x4009a1a	       110	sequencer.c	CALL_17
0x4009a1a	          0x4889c6	                            mov rsi, rax	       110	sequencer.c	CALL_17
0x4009a1d	    0x488905000000	            mov qword [0x04009a24], rax 	       110	sequencer.c	CALL_17
0x4009a24	      0xe954faffff	                           jmp 0x400947d	       110	sequencer.c	CALL_17
0x4009a29	    0x488b1d000000	            mov rbx, qword [0x04009a30] 	       110	sequencer.c	CALL_17
0x4009a30	          0x4885db	                           test rbx, rbx	       110	sequencer.c	CALL_17
0x4009a33	     0xf8457010000	                            je 0x4009b90	       110	sequencer.c	CALL_17
0x4009a39	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x4009a3e	      0xe9e2f8ffff	                           jmp 0x4009325	       110	sequencer.c	CALL_17
0x4009a43	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x4009a48	      0xe8036affff	                       call sym._.part.6	       110	sequencer.c	CALL_17
0x4009a4d	          0x4889c7	                            mov rdi, rax	      3359	sequencer.c	FUNCTION_89	CALL_45
0x4009a50	            0x31c0	                            xor eax, eax	      3359	sequencer.c	FUNCTION_89	CALL_45
0x4009a52	      0xe800000000	                          call 0x4009a57	      3359	sequencer.c	FUNCTION_89	CALL_45
0x4009a57	      0xe9e4f8ffff	                           jmp 0x4009340	      3359	sequencer.c	FUNCTION_89	CALL_45
0x4009a5c	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	       162	strbuf.h	FUNCTION_108	IF_1
0x4009a60	          0x4989c6	                            mov r14, rax	       162	strbuf.h	FUNCTION_108	IF_1
0x4009a63	          0x4885d2	                           test rdx, rdx	       162	strbuf.h	FUNCTION_108	IF_1
0x4009a66	     0xf8434fdffff	                            je 0x40097a0	       162	strbuf.h	FUNCTION_108	IF_1
0x4009a6c	          0x4989d6	                            mov r14, rdx	       162	strbuf.h	FUNCTION_108	IF_1
0x4009a6f	      0xe925fdffff	                           jmp 0x4009799	       162	strbuf.h	FUNCTION_108	IF_1
0x4009a74	      0xbf00000000	                              mov edi, 0	       162	strbuf.h	FUNCTION_108	IF_1
0x4009a79	      0xe8d269ffff	                       call sym._.part.6	       162	strbuf.h	FUNCTION_108	IF_1
0x4009a7e	          0x4889c7	                            mov rdi, rax	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x4009a81	            0x31c0	                            xor eax, eax	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x4009a83	      0xe800000000	                          call 0x4009a88	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x4009a88	      0xe9b3f8ffff	                           jmp 0x4009340	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x4009a8d	    0x803d00000000	                cmp byte [0x04009a94], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x4009a94	     0xf8426fdffff	                            je 0x40097c0	       168	strbuf.h	FUNCTION_108	CALL_2
0x4009a9a	      0xe941fbffff	                           jmp 0x40095e0	       168	strbuf.h	FUNCTION_108	CALL_2
0x4009a9f	            0x39cf	                            cmp edi, ecx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009aa1	     0xf8e32feffff	                           jle 0x40098d9	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009aa7	          0x4863f1	                         movsxd rsi, ecx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009aaa	        0x486bc630	                     imul rax, rsi, 0x30	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009aae	        0x418b1401	               mov edx, dword [r9 + rax]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009ab2	          0x83fa09	                              cmp edx, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009ab5	     0xf87fbfdffff	                            ja 0x40098b6	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009abb	          0x83ea04	                              sub edx, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009abe	          0x83fa01	                              cmp edx, 1	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_29
0x4009ac1	     0xf8712feffff	                            ja 0x40098d9	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_29
0x4009ac7	    0x48833d000000	               cmp qword [0x04009acf], 0	        82	sequencer.c	CALL_13
0x4009acf	     0xf84c8010000	                            je 0x4009c9d	        82	sequencer.c	CALL_13
0x4009ad5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4009ada	    0x4c8b35000000	            mov r14, qword [0x04009ae1] 	        82	sequencer.c	CALL_13
0x4009ae1	      0xe81a85ffff	                     call sym.parse_head	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4009ae6	            0x85c0	                           test eax, eax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4009ae8	     0xf8586010000	                           jne 0x4009c74	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4009aee	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4009af3	            0x31f6	                            xor esi, esi	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4009af5	      0xe800000000	                          call 0x4009afa	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4009afa	          0x4885c0	                           test rax, rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4009afd	          0x4989c5	                            mov r13, rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4009b00	     0xf846e010000	                            je 0x4009c74	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4009b06	            0x31c0	                            xor eax, eax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b08	        0x4883c9ff	              or rcx, 0xffffffffffffffff	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b0c	          0x4c89ef	                            mov rdi, r13	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b0f	            0xf2ae	              repne scasb al, byte [rdi]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b11	          0x4c89f2	                            mov rdx, r14	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b14	          0x4c89ef	                            mov rdi, r13	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b17	          0x4889c8	                            mov rax, rcx	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b1a	            0x31c9	                            xor ecx, ecx	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b1c	          0x48f7d0	                                 not rax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b1f	        0x488d70ff	                      lea rsi, [rax - 1]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b23	      0xe8e88bffff	                  call sym.write_message	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4009b28	            0x85c0	                           test eax, eax	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x4009b2a	     0xf8544010000	                           jne 0x4009c74	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x4009b30	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x4009b35	          0x4c89ee	                            mov rsi, r13	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x4009b38	          0x4531ed	                          xor r13d, r13d	      3255	sequencer.c	FUNCTION_89
0x4009b3b	      0xe800000000	                          call 0x4009b40	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x4009b40	      0xba07000000	                              mov edx, 7	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x4009b45	      0xe92cfdffff	                           jmp 0x4009876	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x4009b4a	      0xbf00000000	                              mov edi, 0	       115	sequencer.c	CALL_18
0x4009b4f	      0xe800000000	                          call 0x4009b54	       115	sequencer.c	CALL_18
0x4009b54	    0x488905000000	            mov qword [0x04009b5b], rax 	       115	sequencer.c	CALL_18
0x4009b5b	      0xe9e8fbffff	                           jmp 0x4009748	       115	sequencer.c	CALL_18
0x4009b60	      0xbf00000000	                              mov edi, 0	        41	sequencer.c	CALL_4
0x4009b65	            0x31c0	                            xor eax, eax	        41	sequencer.c	CALL_4
0x4009b67	      0xe800000000	                          call 0x4009b6c	        41	sequencer.c	CALL_4
0x4009b6c	          0x4889c3	                            mov rbx, rax	        41	sequencer.c	CALL_4
0x4009b6f	    0x488905000000	            mov qword [0x04009b76], rax 	        41	sequencer.c	CALL_4
0x4009b76	      0xe904faffff	                           jmp 0x400957f	        41	sequencer.c	CALL_4
0x4009b7b	      0xba07000000	                              mov edx, 7	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4009b80	    0x41bd01000000	                             mov r13d, 1	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4009b86	      0xe9ebfcffff	                           jmp 0x4009876	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4009b8b	      0xe800000000	                          call 0x4009b90	      3424	sequencer.c	FUNCTION_90
0x4009b90	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x4009b95	            0x31c0	                            xor eax, eax	       110	sequencer.c	CALL_17
0x4009b97	      0xe800000000	                          call 0x4009b9c	       110	sequencer.c	CALL_17
0x4009b9c	          0x4889c3	                            mov rbx, rax	       110	sequencer.c	CALL_17
0x4009b9f	    0x488905000000	            mov qword [0x04009ba6], rax 	       110	sequencer.c	CALL_17
0x4009ba6	      0xe98efeffff	                           jmp 0x4009a39	       110	sequencer.c	CALL_17
0x4009bab	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x4009bb0	      0xe89b68ffff	                       call sym._.part.6	       110	sequencer.c	CALL_17
0x4009bb5	          0x4889c7	                            mov rdi, rax	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x4009bb8	            0x31c0	                            xor eax, eax	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x4009bba	      0xe800000000	                          call 0x4009bbf	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x4009bbf	      0xe97cf7ffff	                           jmp 0x4009340	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x4009bc4	          0x4c89e7	                            mov rdi, r12	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009bc7	        0x8954240c	              mov dword [rsp + 0xc], edx	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009bcb	      0xe800000000	                          call 0x4009bd0	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009bd0	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009bd2	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009bd6	     0xf84c2fcffff	                            je 0x400989e	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009bdc	      0xe95afaffff	                           jmp 0x400963b	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009be1	          0x83ea04	                              sub edx, 4	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4009be4	          0x83fa01	                              cmp edx, 1	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4009be7	     0xf86d1feffff	                           jbe 0x4009abe	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4009bed	      0xe950fcffff	                           jmp 0x4009842	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4009bf2	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x4009bf7	      0xe800000000	                          call 0x4009bfc	       110	sequencer.c	CALL_17
0x4009bfc	          0x4889c3	                            mov rbx, rax	       110	sequencer.c	CALL_17
0x4009bff	    0x488905000000	            mov qword [0x04009c06], rax 	       110	sequencer.c	CALL_17
0x4009c06	      0xe915f7ffff	                           jmp 0x4009320	       110	sequencer.c	CALL_17
0x4009c0b	          0x4c89e9	                            mov rcx, r13	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4009c0e	      0xba00000000	                              mov edx, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4009c13	      0xbedd0c0000	                          mov esi, 0xcdd	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4009c18	      0xbf00000000	                              mov edi, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4009c1d	            0x31c0	                            xor eax, eax	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4009c1f	      0xe800000000	                          call 0x4009c24	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4009c24	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_108	CALL_1
0x4009c29	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_108	CALL_1
0x4009c2b	      0xe800000000	                          call 0x4009c30	       163	strbuf.h	FUNCTION_108	CALL_1
0x4009c30	    0x48833d000000	               cmp qword [0x04009c38], 0	        95	sequencer.c	CALL_15
0x4009c38	            0x7513	                           jne 0x4009c4d	        95	sequencer.c	CALL_15
0x4009c3a	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x4009c3f	            0x31c0	                            xor eax, eax	        95	sequencer.c	CALL_15
0x4009c41	      0xe800000000	                          call 0x4009c46	        95	sequencer.c	CALL_15
0x4009c46	    0x488905000000	            mov qword [0x04009c4d], rax 	        95	sequencer.c	CALL_15
0x4009c4d	    0x488b1d000000	            mov rbx, qword [0x04009c54] 	        95	sequencer.c	CALL_15
0x4009c54	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x4009c59	      0xe9c7f6ffff	                           jmp 0x4009325	        95	sequencer.c	CALL_15
0x4009c5e	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x4009c63	      0xe800000000	                          call 0x4009c68	        95	sequencer.c	CALL_15
0x4009c68	    0x488905000000	            mov qword [0x04009c6f], rax 	        95	sequencer.c	CALL_15
0x4009c6f	      0xe95cfbffff	                           jmp 0x40097d0	        95	sequencer.c	CALL_15
0x4009c74	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x4009c79	          0x4c89ee	                            mov rsi, r13	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x4009c7c	      0xe800000000	                          call 0x4009c81	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x4009c81	      0xbf00000000	                              mov edi, 0	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x4009c86	      0xe8c567ffff	                       call sym._.part.6	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x4009c8b	          0x4c89f6	                            mov rsi, r14	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x4009c8e	          0x4889c7	                            mov rdi, rax	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x4009c91	            0x31c0	                            xor eax, eax	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x4009c93	      0xe800000000	                          call 0x4009c98	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x4009c98	      0xe9a3f6ffff	                           jmp 0x4009340	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x4009c9d	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4009ca2	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x4009ca4	      0xe800000000	                          call 0x4009ca9	        82	sequencer.c	CALL_13
0x4009ca9	    0x488905000000	            mov qword [0x04009cb0], rax 	        82	sequencer.c	CALL_13
0x4009cb0	      0xe920feffff	                           jmp 0x4009ad5	        82	sequencer.c	CALL_13
labels_cmp	WHILE,0:IF,0:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,0	10
0x4000040	          0x4885c9	                           test rcx, rcx	      3573	sequencer.c	FUNCTION_94
0x4000043	            0x7413	                            je 0x4000058	      3573	sequencer.c	FUNCTION_94
0x4000045	        0x488d7e10	                   lea rdi, [rsi + 0x10]	      3573	sequencer.c	FUNCTION_94
0x4000049	          0x4889ce	                            mov rsi, rcx	      3573	sequencer.c	FUNCTION_94
0x400004c	      0xe900000000	                           jmp 0x4000051	      3573	sequencer.c	FUNCTION_94
0x4000051	     0xf1f80000000	                         nop dword [rax]	      3573	sequencer.c	FUNCTION_94
0x4000058	        0x4883c210	                           add rdx, 0x10	      3573	sequencer.c	FUNCTION_94
0x400005c	        0x488d7e10	                   lea rdi, [rsi + 0x10]	      3573	sequencer.c	FUNCTION_94
0x4000060	          0x4889d6	                            mov rsi, rdx	      3573	sequencer.c	FUNCTION_94
0x4000063	      0xe900000000	                           jmp 0x4000068	      3573	sequencer.c	FUNCTION_94
read_oneliner	WHILE,0:IF,5:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,4	69
0x4001370	            0x4155	                                push r13	       401	sequencer.c	FUNCTION_15
0x4001372	            0x4154	                                push r12	       401	sequencer.c	FUNCTION_15
0x4001374	          0x4189d5	                           mov r13d, edx	       401	sequencer.c	FUNCTION_15
0x4001377	              0x55	                                push rbp	       401	sequencer.c	FUNCTION_15
0x4001378	              0x53	                                push rbx	       401	sequencer.c	FUNCTION_15
0x4001379	          0x4889fb	                            mov rbx, rdi	       401	sequencer.c	FUNCTION_15
0x400137c	          0x4889f5	                            mov rbp, rsi	       401	sequencer.c	FUNCTION_15
0x400137f	        0x4883ec08	                              sub rsp, 8	       401	sequencer.c	FUNCTION_15
0x4001383	        0x4c8b6708	                mov r12, qword [rdi + 8]	       402	sequencer.c	FUNCTION_15
0x4001387	          0x4889f7	                            mov rdi, rsi	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400138a	      0xe800000000	                          call 0x400138f	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400138f	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4001391	            0x750d	                           jne 0x40013a0	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4001393	            0x31c0	                            xor eax, eax	       409	sequencer.c	FUNCTION_15	IF_2
0x4001395	        0x4883c408	                              add rsp, 8	       422	sequencer.c	FUNCTION_15
0x4001399	              0x5b	                                 pop rbx	       422	sequencer.c	FUNCTION_15
0x400139a	              0x5d	                                 pop rbp	       422	sequencer.c	FUNCTION_15
0x400139b	            0x415c	                                 pop r12	       422	sequencer.c	FUNCTION_15
0x400139d	            0x415d	                                 pop r13	       422	sequencer.c	FUNCTION_15
0x400139f	              0xc3	                                     ret	       422	sequencer.c	FUNCTION_15
0x40013a0	            0x31d2	                            xor edx, edx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013a2	          0x4889ee	                            mov rsi, rbp	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013a5	          0x4889df	                            mov rdi, rbx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013a8	      0xe800000000	                          call 0x40013ad	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013ad	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013b0	            0x785e	                            js 0x4001410	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013b2	        0x488b4308	                mov rax, qword [rbx + 8]	       412	sequencer.c	FUNCTION_15	IF_3
0x40013b6	          0x4d63e4	                        movsxd r12, r12d	       412	sequencer.c	FUNCTION_15	IF_3
0x40013b9	          0x4c39e0	                            cmp rax, r12	       412	sequencer.c	FUNCTION_15	IF_3
0x40013bc	            0x7611	                           jbe 0x40013cf	       412	sequencer.c	FUNCTION_15	IF_3
0x40013be	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       412	sequencer.c	FUNCTION_15	IF_3
0x40013c2	        0x488d50ff	                      lea rdx, [rax - 1]	       412	sequencer.c	FUNCTION_15	IF_3
0x40013c6	        0x488d3411	                    lea rsi, [rcx + rdx]	       412	sequencer.c	FUNCTION_15	IF_3
0x40013ca	          0x803e0a	                     cmp byte [rsi], 0xa	       412	sequencer.c	FUNCTION_15	IF_3
0x40013cd	            0x7421	                            je 0x40013f0	       412	sequencer.c	FUNCTION_15	IF_3
0x40013cf	          0x4585ed	                         test r13d, r13d	       418	sequencer.c	FUNCTION_15	IF_5
0x40013d2	      0xb801000000	                              mov eax, 1	       421	sequencer.c	FUNCTION_15
0x40013d7	            0x74bc	                            je 0x4001395	       418	sequencer.c	FUNCTION_15	IF_5
0x40013d9	        0x4c3b6308	                cmp r12, qword [rbx + 8]	       418	sequencer.c	FUNCTION_15	IF_5
0x40013dd	            0x74b4	                            je 0x4001393	       418	sequencer.c	FUNCTION_15	IF_5
0x40013df	        0x4883c408	                              add rsp, 8	       422	sequencer.c	FUNCTION_15
0x40013e3	              0x5b	                                 pop rbx	       422	sequencer.c	FUNCTION_15
0x40013e4	              0x5d	                                 pop rbp	       422	sequencer.c	FUNCTION_15
0x40013e5	            0x415c	                                 pop r12	       422	sequencer.c	FUNCTION_15
0x40013e7	            0x415d	                                 pop r13	       422	sequencer.c	FUNCTION_15
0x40013e9	              0xc3	                                     ret	       422	sequencer.c	FUNCTION_15
0x40013ea	    0x660f1f440000	                    nop word [rax + rax]	       422	sequencer.c	FUNCTION_15
0x40013f0	          0x4939d4	                            cmp r12, rdx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x40013f3	        0x48895308	                mov qword [rbx + 8], rdx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x40013f7	            0x730c	                           jae 0x4001405	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x40013f9	        0x4883e802	                              sub rax, 2	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x40013fd	          0x4801c1	                            add rcx, rax	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001400	          0x80390d	                     cmp byte [rcx], 0xd	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001403	            0x742e	                            je 0x4001433	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001405	          0xc60600	                       mov byte [rsi], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x4001408	            0xebc5	                           jmp 0x40013cf	       415	sequencer.c	FUNCTION_15	IF_3
0x400140a	    0x660f1f440000	                    nop word [rax + rax]	       415	sequencer.c	FUNCTION_15	IF_3
0x4001410	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4001412	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4001417	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400141c	      0xe800000000	                          call 0x4001421	        54	gettext.h	FUNCTION_147
0x4001421	          0x4889ee	                            mov rsi, rbp	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x4001424	          0x4889c7	                            mov rdi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x4001427	            0x31c0	                            xor eax, eax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x4001429	      0xe800000000	                          call 0x400142e	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400142e	      0xe960ffffff	                           jmp 0x4001393	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x4001433	        0x48894308	                mov qword [rbx + 8], rax	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001437	          0x4889ce	                            mov rsi, rcx	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400143a	            0xebc9	                           jmp 0x4001405	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
append_signoff	WHILE,0:IF,8:functions,0:SWITCH,0:ELSE,3:DO,0:FOR,0:CALL,12	161
0x4004d60	            0x4155	                                push r13	      3505	sequencer.c	FUNCTION_93
0x4004d62	            0x4154	                                push r12	      3505	sequencer.c	FUNCTION_93
0x4004d64	          0x83e201	                              and edx, 1	      3506	sequencer.c	FUNCTION_93
0x4004d67	              0x55	                                push rbp	      3505	sequencer.c	FUNCTION_93
0x4004d68	              0x53	                                push rbx	      3505	sequencer.c	FUNCTION_93
0x4004d69	          0x4889fd	                            mov rbp, rdi	      3505	sequencer.c	FUNCTION_93
0x4004d6c	          0x4863de	                         movsxd rbx, esi	      3505	sequencer.c	FUNCTION_93
0x4004d6f	          0x4189d4	                           mov r12d, edx	      3506	sequencer.c	FUNCTION_93
0x4004d72	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004d77	        0x4883ec28	                           sub rsp, 0x28	      3505	sequencer.c	FUNCTION_93
0x4004d7b	      0xba0f000000	                            mov edx, 0xf	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004d80	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004d83	    0x48c704240000	                      mov qword [rsp], 0	      3507	sequencer.c	FUNCTION_93
0x4004d8b	    0x48c744240800	                  mov qword [rsp + 8], 0	      3507	sequencer.c	FUNCTION_93
0x4004d94	    0x64488b042528	                mov rax, qword fs:[0x28]	      3505	sequencer.c	FUNCTION_93
0x4004d9d	      0x4889442418	             mov qword [rsp + 0x18], rax	      3505	sequencer.c	FUNCTION_93
0x4004da2	            0x31c0	                            xor eax, eax	      3505	sequencer.c	FUNCTION_93
0x4004da4	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3507	sequencer.c	FUNCTION_93
0x4004dad	      0xe800000000	                          call 0x4004db2	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004db2	      0xbf00000000	                              mov edi, 0	      3512	sequencer.c	FUNCTION_93	CALL_5
0x4004db7	      0xe800000000	                          call 0x4004dbc	      3512	sequencer.c	FUNCTION_93	CALL_5
0x4004dbc	      0xbf00000000	                              mov edi, 0	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004dc1	          0x4989c5	                            mov r13, rax	      3512	sequencer.c	FUNCTION_93	CALL_5
0x4004dc4	      0xe800000000	                          call 0x4004dc9	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004dc9	          0x4c89ee	                            mov rsi, r13	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004dcc	          0x4889c7	                            mov rdi, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004dcf	      0xe800000000	                          call 0x4004dd4	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004dd4	          0x4989c5	                            mov r13, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004dd7	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004dda	      0xe800000000	                          call 0x4004ddf	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004ddf	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004de2	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004de5	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004de8	      0xe800000000	                          call 0x4004ded	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004ded	        0x488b0424	                    mov rax, qword [rsp]	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004df1	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x4004df4	     0xf85a6000000	                           jne 0x4004ea0	       141	strbuf.h	FUNCTION_107
0x4004dfa	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004dff	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004e02	      0xe800000000	                          call 0x4004e07	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004e07	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004e0c	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x4004e10	            0x85db	                           test ebx, ebx	      3515	sequencer.c	FUNCTION_93	IF_1
0x4004e12	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_109
0x4004e17	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_109
0x4004e1c	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x4004e20	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_109
0x4004e25	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_109
0x4004e2a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4004e2e	        0x488b5508	                mov rdx, qword [rbp + 8]	       595	strbuf.h	FUNCTION_115	IF_1
0x4004e32	     0xf8420010000	                            je 0x4004f58	      3515	sequencer.c	FUNCTION_93	IF_1
0x4004e38	        0x4c8b6d10	            mov r13, qword [rbp + 0x10] 	      3515	sequencer.c	FUNCTION_93	IF_1
0x4004e3c	          0x4829da	                            sub rdx, rbx	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004e3f	      0x483b542408	                cmp rdx, qword [rsp + 8]	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004e44	            0x747a	                            je 0x4004ec0	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004e46	          0x4889e6	                            mov rsi, rsp	      3526	sequencer.c	FUNCTION_93	CALL_8
0x4004e49	          0x4c89ef	                            mov rdi, r13	      3526	sequencer.c	FUNCTION_93	CALL_8
0x4004e4c	      0xe86fb7ffff	  call sym.has_conforming_footer.isra.17	      3526	sequencer.c	FUNCTION_93	CALL_8
0x4004e51	            0x85c0	                           test eax, eax	      3528	sequencer.c	FUNCTION_93	IF_3
0x4004e53	     0xf858b000000	                           jne 0x4004ee4	      3528	sequencer.c	FUNCTION_93	IF_3
0x4004e59	        0x488b4508	                mov rax, qword [rbp + 8]	      3530	sequencer.c	FUNCTION_93	IF_3
0x4004e5d	          0x4889c6	                            mov rsi, rax	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004e60	          0x4829de	                            sub rsi, rbx	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004e63	     0xf85bf000000	                           jne 0x4004f28	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004e69	    0x41b802000000	                              mov r8d, 2	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004e6f	      0xb900000000	                              mov ecx, 0	      3537	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004e74	            0x31d2	                            xor edx, edx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004e76	          0x4889ef	                            mov rdi, rbp	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004e79	      0xe800000000	                          call 0x4004e7e	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004e7e	        0x488b4508	                mov rax, qword [rbp + 8]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004e82	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e87	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e8c	          0x4829d8	                            sub rax, rbx	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e8f	          0x4889c6	                            mov rsi, rax	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e92	            0x31d2	                            xor edx, edx	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e94	          0x4889ef	                            mov rdi, rbp	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e97	      0xe800000000	                          call 0x4004e9c	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e9c	            0xeb5d	                           jmp 0x4004efb	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e9e	            0x6690	                                     nop	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004ea0	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_107
0x4004ea5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4004ea9	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4004eac	     0xf855affffff	                           jne 0x4004e0c	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4004eb2	      0xe943ffffff	                           jmp 0x4004dfa	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4004eb7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4004ec0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3523	sequencer.c	FUNCTION_93	IF_2
0x4004ec5	          0x4c89ef	                            mov rdi, r13	      3523	sequencer.c	FUNCTION_93	IF_2
0x4004ec8	      0xe800000000	                          call 0x4004ecd	      3523	sequencer.c	FUNCTION_93	IF_2
0x4004ecd	            0x85c0	                           test eax, eax	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004ecf	            0x742a	                            je 0x4004efb	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004ed1	          0x4889e6	                            mov rsi, rsp	      3526	sequencer.c	FUNCTION_93	CALL_8
0x4004ed4	          0x4c89ef	                            mov rdi, r13	      3526	sequencer.c	FUNCTION_93	CALL_8
0x4004ed7	      0xe8e4b6ffff	  call sym.has_conforming_footer.isra.17	      3526	sequencer.c	FUNCTION_93	CALL_8
0x4004edc	            0x85c0	                           test eax, eax	      3528	sequencer.c	FUNCTION_93	IF_3
0x4004ede	     0xf8475ffffff	                            je 0x4004e59	      3528	sequencer.c	FUNCTION_93	IF_3
0x4004ee4	          0x83f803	                              cmp eax, 3	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004ee7	            0x7412	                            je 0x4004efb	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004ee9	          0x4585e4	                         test r12d, r12d	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004eec	     0xf8400010000	                            je 0x4004ff2	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004ef2	          0x83f802	                              cmp eax, 2	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004ef5	     0xf85f7000000	                           jne 0x4004ff2	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004efb	          0x4889e7	                            mov rdi, rsp	      3562	sequencer.c	FUNCTION_93	CALL_12
0x4004efe	      0xe800000000	                          call 0x4004f03	      3562	sequencer.c	FUNCTION_93	CALL_12
0x4004f03	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3563	sequencer.c	FUNCTION_93
0x4004f08	    0x644833042528	                xor rax, qword fs:[0x28]	      3563	sequencer.c	FUNCTION_93
0x4004f11	     0xf85d6000000	                           jne 0x4004fed	      3563	sequencer.c	FUNCTION_93
0x4004f17	        0x4883c428	                           add rsp, 0x28	      3563	sequencer.c	FUNCTION_93
0x4004f1b	              0x5b	                                 pop rbx	      3563	sequencer.c	FUNCTION_93
0x4004f1c	              0x5d	                                 pop rbp	      3563	sequencer.c	FUNCTION_93
0x4004f1d	            0x415c	                                 pop r12	      3563	sequencer.c	FUNCTION_93
0x4004f1f	            0x415d	                                 pop r13	      3563	sequencer.c	FUNCTION_93
0x4004f21	              0xc3	                                     ret	      3563	sequencer.c	FUNCTION_93
0x4004f22	    0x660f1f440000	                    nop word [rax + rax]	      3563	sequencer.c	FUNCTION_93
0x4004f28	        0x4883fe01	                              cmp rsi, 1	      3538	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004f2c	     0xf8496000000	                            je 0x4004fc8	      3538	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004f32	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004f36	    0x41b801000000	                              mov r8d, 1	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004f3c	      0xb900000000	                              mov ecx, 0	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004f41	      0x807c32fe0a	          cmp byte [rdx + rsi - 2], 0xa 	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004f46	     0xf8528ffffff	                           jne 0x4004e74	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004f4c	      0xe931ffffff	                           jmp 0x4004e82	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004f51	     0xf1f80000000	                         nop dword [rax]	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004f58	          0x4885d2	                           test rdx, rdx	       595	strbuf.h	FUNCTION_115	IF_1
0x4004f5b	        0x4c8b6d10	            mov r13, qword [rbp + 0x10] 	       595	strbuf.h	FUNCTION_115	IF_1
0x4004f5f	            0x744f	                            je 0x4004fb0	       595	strbuf.h	FUNCTION_115	IF_1
0x4004f61	    0x41807c15ff0a	          cmp byte [r13 + rdx - 1], 0xa 	       595	strbuf.h	FUNCTION_115	IF_1
0x4004f67	     0xf84cffeffff	                            je 0x4004e3c	       595	strbuf.h	FUNCTION_115	IF_1
0x4004f6d	        0x488b4500	                    mov rax, qword [rbp]	       595	strbuf.h	FUNCTION_115	IF_1
0x4004f71	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x4004f74	            0x756a	                           jne 0x4004fe0	       141	strbuf.h	FUNCTION_107
0x4004f76	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004f7b	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004f7e	      0xe800000000	                          call 0x4004f83	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004f83	        0x4c8b6d10	            mov r13, qword [rbp + 0x10] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004f87	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004f8b	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x4004f8f	        0x48894508	                mov qword [rbp + 8], rax	       229	strbuf.h	FUNCTION_109
0x4004f93	    0x41c64415000a	               mov byte [r13 + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x4004f99	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_109
0x4004f9d	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_109
0x4004fa1	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4004fa5	        0x488b5508	                mov rdx, qword [rbp + 8]	       230	strbuf.h	FUNCTION_109
0x4004fa9	      0xe98afeffff	                           jmp 0x4004e38	       230	strbuf.h	FUNCTION_109
0x4004fae	            0x6690	                                     nop	       230	strbuf.h	FUNCTION_109
0x4004fb0	            0x31db	                            xor ebx, ebx	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004fb2	    0x48837c240800	                  cmp qword [rsp + 8], 0	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004fb8	     0xf8588feffff	                           jne 0x4004e46	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004fbe	      0xe938ffffff	                           jmp 0x4004efb	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004fc3	       0xf1f440000	                   nop dword [rax + rax]	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004fc8	    0x41b801000000	                              mov r8d, 1	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004fce	      0xb900000000	                              mov ecx, 0	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004fd3	      0xe99cfeffff	                           jmp 0x4004e74	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004fd8	     0xf1f84000000	                   nop dword [rax + rax]	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004fe0	          0x4889d1	                            mov rcx, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4004fe3	          0x48f7d1	                                 not rcx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4004fe6	          0x4801c1	                            add rcx, rax	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4004fe9	            0x75a0	                           jne 0x4004f8b	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4004feb	            0xeb89	                           jmp 0x4004f76	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4004fed	      0xe800000000	                          call 0x4004ff2	      3563	sequencer.c	FUNCTION_93
0x4004ff2	        0x488b4508	                mov rax, qword [rbp + 8]	      3563	sequencer.c	FUNCTION_93
0x4004ff6	      0xe987feffff	                           jmp 0x4004e82	      3563	sequencer.c	FUNCTION_93
record_in_rewritten	WHILE,0:IF,2:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,6	42
0x4000310	            0x4154	                                push r12	      1482	sequencer.c	FUNCTION_47
0x4000312	          0x4989fc	                            mov r12, rdi	      1482	sequencer.c	FUNCTION_47
0x4000315	    0x488b3d000000	            mov rdi, qword [0x0400031c] 	       123	sequencer.c	CALL_20
0x400031c	              0x55	                                push rbp	      1482	sequencer.c	FUNCTION_47
0x400031d	            0x89f5	                            mov ebp, esi	      1482	sequencer.c	FUNCTION_47
0x400031f	              0x53	                                push rbx	      1482	sequencer.c	FUNCTION_47
0x4000320	          0x4885ff	                           test rdi, rdi	       123	sequencer.c	CALL_20
0x4000323	            0x7453	                            je 0x4000378	       123	sequencer.c	CALL_20
0x4000325	      0xbe00000000	                              mov esi, 0	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400032a	      0xe800000000	                          call 0x400032f	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400032f	          0x4885c0	                           test rax, rax	      1485	sequencer.c	FUNCTION_47	IF_1
0x4000332	          0x4889c3	                            mov rbx, rax	      1483	sequencer.c	FUNCTION_47	CALL_2
0x4000335	            0x7439	                            je 0x4000370	      1485	sequencer.c	FUNCTION_47	IF_1
0x4000337	          0x4c89e7	                            mov rdi, r12	      1488	sequencer.c	FUNCTION_47	CALL_3
0x400033a	          0x83ed04	                              sub ebp, 4	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x400033d	      0xe800000000	                          call 0x4000342	      1488	sequencer.c	FUNCTION_47	CALL_3
0x4000342	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_476
0x4000347	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_476
0x400034a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400034f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_476
0x4000352	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x4000354	      0xe800000000	                          call 0x4000359	        97	stdio2.h	CALL_476
0x4000359	          0x4889df	                            mov rdi, rbx	      1489	sequencer.c	FUNCTION_47	CALL_4
0x400035c	      0xe800000000	                          call 0x4000361	      1489	sequencer.c	FUNCTION_47	CALL_4
0x4000361	          0x83fd01	                              cmp ebp, 1	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x4000364	            0x760a	                           jbe 0x4000370	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x4000366	              0x5b	                                 pop rbx	      1493	sequencer.c	FUNCTION_47
0x4000367	              0x5d	                                 pop rbp	      1493	sequencer.c	FUNCTION_47
0x4000368	            0x415c	                                 pop r12	      1493	sequencer.c	FUNCTION_47
0x400036a	      0xe921feffff	         jmp sym.flush_rewritten_pending	      1492	sequencer.c	FUNCTION_47	CALL_6
0x400036f	              0x90	                                     nop	      1492	sequencer.c	FUNCTION_47	CALL_6
0x4000370	              0x5b	                                 pop rbx	      1493	sequencer.c	FUNCTION_47
0x4000371	              0x5d	                                 pop rbp	      1493	sequencer.c	FUNCTION_47
0x4000372	            0x415c	                                 pop r12	      1493	sequencer.c	FUNCTION_47
0x4000374	              0xc3	                                     ret	      1493	sequencer.c	FUNCTION_47
0x4000375	           0xf1f00	                         nop dword [rax]	      1493	sequencer.c	FUNCTION_47
0x4000378	      0xbf00000000	                              mov edi, 0	       123	sequencer.c	CALL_20
0x400037d	            0x31c0	                            xor eax, eax	       123	sequencer.c	CALL_20
0x400037f	      0xe800000000	                          call 0x4000384	       123	sequencer.c	CALL_20
0x4000384	          0x4889c7	                            mov rdi, rax	       123	sequencer.c	CALL_20
0x4000387	    0x488905000000	            mov qword [0x0400038e], rax 	       123	sequencer.c	CALL_20
0x400038e	            0xeb95	                           jmp 0x4000325	       123	sequencer.c	CALL_20
sequencer_add_exec_commands	WHILE,0:IF,3:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,1:CALL,11	112
0x400b370	            0x4157	                                push r15	      3972	sequencer.c	FUNCTION_98
0x400b372	            0x4156	                                push r14	      3972	sequencer.c	FUNCTION_98
0x400b374	            0x4155	                                push r13	      3972	sequencer.c	FUNCTION_98
0x400b376	            0x4154	                                push r12	      3972	sequencer.c	FUNCTION_98
0x400b378	          0x4989fd	                            mov r13, rdi	      3972	sequencer.c	FUNCTION_98
0x400b37b	              0x55	                                push rbp	      3972	sequencer.c	FUNCTION_98
0x400b37c	              0x53	                                push rbx	      3972	sequencer.c	FUNCTION_98
0x400b37d	        0x4883ec68	                           sub rsp, 0x68	      3972	sequencer.c	FUNCTION_98
0x400b381	    0x4c8b35000000	            mov r14, qword [0x0400b388] 	        52	sequencer.c	CALL_8
0x400b388	    0x64488b042528	                mov rax, qword fs:[0x28]	      3972	sequencer.c	FUNCTION_98
0x400b391	      0x4889442458	             mov qword [rsp + 0x58], rax	      3972	sequencer.c	FUNCTION_98
0x400b396	            0x31c0	                            xor eax, eax	      3972	sequencer.c	FUNCTION_98
0x400b398	          0x4d85f6	                           test r14, r14	        52	sequencer.c	CALL_8
0x400b39b	     0xf84fa000000	                            je 0x400b49b	        52	sequencer.c	CALL_8
0x400b3a1	            0x31c0	                            xor eax, eax	      3974	sequencer.c	FUNCTION_98
0x400b3a3	          0x4889e7	                            mov rdi, rsp	      3974	sequencer.c	FUNCTION_98
0x400b3a6	      0xb90b000000	                            mov ecx, 0xb	      3974	sequencer.c	FUNCTION_98
0x400b3ab	          0xf348ab	              rep stosq qword [rdi], rax	      3974	sequencer.c	FUNCTION_98
0x400b3ae	          0x4c89ef	                            mov rdi, r13	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400b3b1	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3974	sequencer.c	FUNCTION_98
0x400b3ba	      0xe800000000	                          call 0x400b3bf	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400b3bf	            0x31d2	                            xor edx, edx	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400b3c1	          0x4c89f6	                            mov rsi, r14	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400b3c4	          0x4889e7	                            mov rdi, rsp	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400b3c7	          0x4989c4	                            mov r12, rax	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400b3ca	      0xe800000000	                          call 0x400b3cf	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400b3cf	          0x4885c0	                           test rax, rax	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400b3d2	     0xf882f010000	                            js 0x400b507	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400b3d8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400b3dd	          0x4889e6	                            mov rsi, rsp	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400b3e0	      0xe8db57ffff	              call sym.parse_insn_buffer	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400b3e5	            0x85c0	                           test eax, eax	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400b3e7	     0xf85c7000000	                           jne 0x400b4b4	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400b3ed	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b3f1	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b3f6	            0x85c0	                           test eax, eax	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b3f8	            0x7e46	                           jle 0x400b440	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b3fa	            0x31ed	                            xor ebp, ebp	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b3fc	          0x4531ff	                          xor r15d, r15d	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b3ff	              0x90	                                     nop	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b400	          0x83c501	                              add ebp, 1	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b403	        0x4883c330	                           add rbx, 0x30	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b407	            0x39c5	                            cmp ebp, eax	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b409	            0x7d35	                           jge 0x400b440	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b40b	            0x8b13	                    mov edx, dword [rbx]	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400b40d	            0x85d2	                           test edx, edx	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400b40f	            0x75ef	                           jne 0x400b400	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400b411	          0x4c89fe	                            mov rsi, r15	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400b414	        0x48037328	             add rsi, qword [rbx + 0x28]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400b418	          0x4c89e1	                            mov rcx, r12	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400b41b	          0x4c89ea	                            mov rdx, r13	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400b41e	          0x4889e7	                            mov rdi, rsp	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400b421	          0x83c501	                              add ebp, 1	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b424	          0x4d01e7	                            add r15, r12	      3994	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400b427	        0x4883c330	                           add rbx, 0x30	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b42b	      0xe800000000	                          call 0x400b430	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400b430	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400b434	            0x39c5	                            cmp ebp, eax	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b436	            0x7cd3	                            jl 0x400b40b	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b438	     0xf1f84000000	                   nop dword [rax + rax]	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400b440	          0x4c89e2	                            mov rdx, r12	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400b443	          0x4c89ee	                            mov rsi, r13	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400b446	          0x4889e7	                            mov rdi, rsp	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400b449	      0xe800000000	                          call 0x400b44e	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400b44e	      0x488b742408	                mov rsi, qword [rsp + 8]	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400b453	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400b458	            0x31c9	                            xor ecx, ecx	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400b45a	          0x4c89f2	                            mov rdx, r14	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400b45d	      0xe8ae72ffff	                  call sym.write_message	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400b462	          0x4889e7	                            mov rdi, rsp	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400b465	            0x89c3	                            mov ebx, eax	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400b467	      0xe800000000	                          call 0x400b46c	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400b46c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1792	sequencer.c	FUNCTION_51
0x400b471	      0xe800000000	                          call 0x400b476	      1792	sequencer.c	FUNCTION_51
0x400b476	            0x89d8	                            mov eax, ebx	      4004	sequencer.c	FUNCTION_98
0x400b478	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      4005	sequencer.c	FUNCTION_98
0x400b47d	    0x644833142528	                xor rdx, qword fs:[0x28]	      4005	sequencer.c	FUNCTION_98
0x400b486	     0xf8587000000	                           jne 0x400b513	      4005	sequencer.c	FUNCTION_98
0x400b48c	        0x4883c468	                           add rsp, 0x68	      4005	sequencer.c	FUNCTION_98
0x400b490	              0x5b	                                 pop rbx	      4005	sequencer.c	FUNCTION_98
0x400b491	              0x5d	                                 pop rbp	      4005	sequencer.c	FUNCTION_98
0x400b492	            0x415c	                                 pop r12	      4005	sequencer.c	FUNCTION_98
0x400b494	            0x415d	                                 pop r13	      4005	sequencer.c	FUNCTION_98
0x400b496	            0x415e	                                 pop r14	      4005	sequencer.c	FUNCTION_98
0x400b498	            0x415f	                                 pop r15	      4005	sequencer.c	FUNCTION_98
0x400b49a	              0xc3	                                     ret	      4005	sequencer.c	FUNCTION_98
0x400b49b	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400b4a0	      0xe800000000	                          call 0x400b4a5	        52	sequencer.c	CALL_8
0x400b4a5	          0x4989c6	                            mov r14, rax	        52	sequencer.c	CALL_8
0x400b4a8	    0x488905000000	            mov qword [0x0400b4af], rax 	        52	sequencer.c	CALL_8
0x400b4af	      0xe9edfeffff	                           jmp 0x400b3a1	        52	sequencer.c	CALL_8
0x400b4b4	          0x4889e7	                            mov rdi, rsp	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400b4b7	      0xe800000000	                          call 0x400b4bc	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400b4bc	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1792	sequencer.c	FUNCTION_51
0x400b4c1	      0xe800000000	                          call 0x400b4c6	      1792	sequencer.c	FUNCTION_51
0x400b4c6	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1792	sequencer.c	FUNCTION_51
0x400b4cf	    0xc74424240000	               mov dword [rsp + 0x24], 0	      1793	sequencer.c	FUNCTION_51
0x400b4d7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400b4dc	    0xc74424200000	               mov dword [rsp + 0x20], 0	      1793	sequencer.c	FUNCTION_51
0x400b4e4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400b4e9	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400b4eb	      0xe800000000	                          call 0x400b4f0	        54	gettext.h	FUNCTION_147
0x400b4f0	          0x4c89f6	                            mov rsi, r14	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400b4f3	          0x4889c7	                            mov rdi, rax	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400b4f6	            0x31c0	                            xor eax, eax	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400b4f8	      0xe800000000	                          call 0x400b4fd	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400b4fd	      0xb8ffffffff	                     mov eax, 0xffffffff	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400b502	      0xe971ffffff	                           jmp 0x400b478	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400b507	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400b50c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400b511	            0xebd6	                           jmp 0x400b4e9	        54	gettext.h	FUNCTION_147
0x400b513	      0xe800000000	                          call 0x400b518	      4005	sequencer.c	FUNCTION_98
read_and_refresh_cache	WHILE,0:IF,3:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,11	78
0x4003080	              0x55	                                push rbp	      1747	sequencer.c	FUNCTION_50
0x4003081	              0x53	                                push rbx	      1747	sequencer.c	FUNCTION_50
0x4003082	            0x31f6	                            xor esi, esi	      1749	sequencer.c	FUNCTION_50	CALL_1
0x4003084	          0x4889fd	                            mov rbp, rdi	      1747	sequencer.c	FUNCTION_50
0x4003087	        0x4883ec18	                           sub rsp, 0x18	      1747	sequencer.c	FUNCTION_50
0x400308b	          0x4889e7	                            mov rdi, rsp	      1749	sequencer.c	FUNCTION_50	CALL_1
0x400308e	    0x48c704240000	                      mov qword [rsp], 0	      1748	sequencer.c	FUNCTION_50
0x4003096	    0x64488b042528	                mov rax, qword fs:[0x28]	      1747	sequencer.c	FUNCTION_50
0x400309f	      0x4889442408	                mov qword [rsp + 8], rax	      1747	sequencer.c	FUNCTION_50
0x40030a4	            0x31c0	                            xor eax, eax	      1747	sequencer.c	FUNCTION_50
0x40030a6	      0xe800000000	                          call 0x40030ab	      1749	sequencer.c	FUNCTION_50	CALL_1
0x40030ab	            0x31f6	                            xor esi, esi	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x40030ad	      0xbf00000000	                              mov edi, 0	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x40030b2	            0x89c3	                            mov ebx, eax	      1749	sequencer.c	FUNCTION_50	CALL_1
0x40030b4	      0xe800000000	                          call 0x40030b9	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x40030b9	            0x85c0	                           test eax, eax	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x40030bb	     0xf888f000000	                            js 0x4003150	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x40030c1	          0x4531c0	                            xor r8d, r8d	      1755	sequencer.c	FUNCTION_50	CALL_7
0x40030c4	            0x31c9	                            xor ecx, ecx	      1755	sequencer.c	FUNCTION_50	CALL_7
0x40030c6	            0x31d2	                            xor edx, edx	      1755	sequencer.c	FUNCTION_50	CALL_7
0x40030c8	      0xbe06000000	                              mov esi, 6	      1755	sequencer.c	FUNCTION_50	CALL_7
0x40030cd	      0xbf00000000	                              mov edi, 0	      1755	sequencer.c	FUNCTION_50	CALL_7
0x40030d2	      0xe800000000	                          call 0x40030d7	      1755	sequencer.c	FUNCTION_50	CALL_7
0x40030d7	            0x85db	                           test ebx, ebx	      1756	sequencer.c	FUNCTION_50	IF_2
0x40030d9	            0x7816	                            js 0x40030f1	      1756	sequencer.c	FUNCTION_50	IF_2
0x40030db	      0xba03000000	                              mov edx, 3	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x40030e0	          0x4889e6	                            mov rsi, rsp	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x40030e3	      0xbf00000000	                              mov edi, 0	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x40030e8	      0xe800000000	                          call 0x40030ed	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x40030ed	            0x85c0	                           test eax, eax	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x40030ef	            0x751f	                           jne 0x4003110	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x40030f1	            0x31c0	                            xor eax, eax	      1763	sequencer.c	FUNCTION_50
0x40030f3	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1764	sequencer.c	FUNCTION_50
0x40030f8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1764	sequencer.c	FUNCTION_50
0x4003101	     0xf8595000000	                           jne 0x400319c	      1764	sequencer.c	FUNCTION_50
0x4003107	        0x4883c418	                           add rsp, 0x18	      1764	sequencer.c	FUNCTION_50
0x400310b	              0x5b	                                 pop rbx	      1764	sequencer.c	FUNCTION_50
0x400310c	              0x5d	                                 pop rbp	      1764	sequencer.c	FUNCTION_50
0x400310d	              0xc3	                                     ret	      1764	sequencer.c	FUNCTION_50
0x400310e	            0x6690	                                     nop	      1764	sequencer.c	FUNCTION_50
0x4003110	          0x8b7d00	                    mov edi, dword [rbp]	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4003113	      0xbb00000000	                              mov ebx, 0	        53	gettext.h	FUNCTION_147	IF_1
0x4003118	      0xe8b3d7ffff	             call sym.action_name.isra.7	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x400311d	          0x803800	                       cmp byte [rax], 0	        52	gettext.h	FUNCTION_147	IF_1
0x4003120	            0x7566	                           jne 0x4003188	        52	gettext.h	FUNCTION_147	IF_1
0x4003122	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4003127	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400312c	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400312e	      0xe800000000	                          call 0x4003133	        54	gettext.h	FUNCTION_147
0x4003133	          0x4889de	                            mov rsi, rbx	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4003136	          0x4889c7	                            mov rdi, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4003139	            0x31c0	                            xor eax, eax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x400313b	      0xe800000000	                          call 0x4003140	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4003140	      0xb8ffffffff	                     mov eax, 0xffffffff	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4003145	            0xebac	                           jmp 0x40030f3	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4003147	    0x660f1f840000	                    nop word [rax + rax]	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4003150	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_240	CALL_1
0x4003153	      0xbb00000000	                              mov ebx, 0	        53	gettext.h	FUNCTION_147	IF_1
0x4003158	      0xe800000000	                          call 0x400315d	       304	lockfile.h	FUNCTION_240	CALL_1
0x400315d	          0x8b7d00	                    mov edi, dword [rbp]	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x4003160	      0xe86bd7ffff	             call sym.action_name.isra.7	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x4003165	          0x803800	                       cmp byte [rax], 0	        52	gettext.h	FUNCTION_147	IF_1
0x4003168	            0x7412	                            je 0x400317c	        52	gettext.h	FUNCTION_147	IF_1
0x400316a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400316f	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_147
0x4003172	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4003174	      0xe800000000	                          call 0x4003179	        54	gettext.h	FUNCTION_147
0x4003179	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_147
0x400317c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4003181	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4003186	            0xeba4	                           jmp 0x400312c	        54	gettext.h	FUNCTION_147
0x4003188	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400318d	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_147
0x4003190	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4003192	      0xe800000000	                          call 0x4003197	        54	gettext.h	FUNCTION_147
0x4003197	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_147
0x400319a	            0xeb86	                           jmp 0x4003122	        54	gettext.h	FUNCTION_147
0x400319c	      0xe800000000	                          call 0x40031a1	      1764	sequencer.c	FUNCTION_50
update_head_with_reflog	WHILE,0:IF,3:functions,0:SWITCH,0:ELSE,1:DO,0:FOR,0:CALL,10	116
0x4004000	            0x4157	                                push r15	       848	sequencer.c	FUNCTION_30
0x4004002	            0x4156	                                push r14	       848	sequencer.c	FUNCTION_30
0x4004004	          0x4989ce	                            mov r14, rcx	       848	sequencer.c	FUNCTION_30
0x4004007	            0x4155	                                push r13	       848	sequencer.c	FUNCTION_30
0x4004009	            0x4154	                                push r12	       848	sequencer.c	FUNCTION_30
0x400400b	          0x4989f5	                            mov r13, rsi	       848	sequencer.c	FUNCTION_30
0x400400e	              0x55	                                push rbp	       848	sequencer.c	FUNCTION_30
0x400400f	              0x53	                                push rbx	       848	sequencer.c	FUNCTION_30
0x4004010	          0x4989fc	                            mov r12, rdi	       848	sequencer.c	FUNCTION_30
0x4004013	          0x4c89c5	                             mov rbp, r8	       848	sequencer.c	FUNCTION_30
0x4004016	        0x4883ec28	                           sub rsp, 0x28	       848	sequencer.c	FUNCTION_30
0x400401a	    0x64488b042528	                mov rax, qword fs:[0x28]	       848	sequencer.c	FUNCTION_30
0x4004023	      0x4889442418	             mov qword [rsp + 0x18], rax	       848	sequencer.c	FUNCTION_30
0x4004028	            0x31c0	                            xor eax, eax	       848	sequencer.c	FUNCTION_30
0x400402a	          0x4885d2	                           test rdx, rdx	       854	sequencer.c	FUNCTION_30	IF_1
0x400402d	    0x48c704240000	                      mov qword [rsp], 0	       850	sequencer.c	FUNCTION_30
0x4004035	    0x48c744240800	                  mov qword [rsp + 8], 0	       850	sequencer.c	FUNCTION_30
0x400403e	    0x48c744241000	               mov qword [rsp + 0x10], 0	       850	sequencer.c	FUNCTION_30
0x4004047	          0x4889e3	                            mov rbx, rsp	       850	sequencer.c	FUNCTION_30
0x400404a	            0x742e	                            je 0x400407a	       854	sequencer.c	FUNCTION_30	IF_1
0x400404c	          0x4989d7	                            mov r15, rdx	       854	sequencer.c	FUNCTION_30	IF_1
0x400404f	          0x4889d7	                            mov rdi, rdx	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004052	          0x4889e3	                            mov rbx, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004055	      0xe800000000	                          call 0x400405a	       279	strbuf.h	FUNCTION_110	CALL_2
0x400405a	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x400405d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004060	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004063	      0xe800000000	                          call 0x4004068	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004068	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_110	CALL_2
0x400406d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004072	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_110	CALL_2
0x4004075	      0xe800000000	                          call 0x400407a	       279	strbuf.h	FUNCTION_110	CALL_2
0x400407a	        0x4d8b7e10	            mov r15, qword [r14 + 0x10] 	       859	sequencer.c	FUNCTION_30
0x400407e	      0xbe0a000000	                            mov esi, 0xa	       859	sequencer.c	FUNCTION_30
0x4004083	          0x4c89ff	                            mov rdi, r15	       859	sequencer.c	FUNCTION_30
0x4004086	      0xe800000000	                          call 0x400408b	       859	sequencer.c	FUNCTION_30
0x400408b	          0x4885c0	                           test rax, rax	       860	sequencer.c	FUNCTION_30	IF_2
0x400408e	     0xf84ac000000	                            je 0x4004140	       860	sequencer.c	FUNCTION_30	IF_2
0x4004094	        0x488d5001	                      lea rdx, [rax + 1]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x4004098	          0x4c89fe	                            mov rsi, r15	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x400409b	          0x4889df	                            mov rdi, rbx	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x400409e	          0x4c29fa	                            sub rdx, r15	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x40040a1	      0xe800000000	                          call 0x40040a6	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x40040a6	          0x4889ef	                            mov rdi, rbp	       867	sequencer.c	FUNCTION_30	CALL_6
0x40040a9	      0xe800000000	                          call 0x40040ae	       867	sequencer.c	FUNCTION_30	CALL_6
0x40040ae	          0x4885c0	                           test rax, rax	       868	sequencer.c	FUNCTION_30	IF_3
0x40040b1	          0x4989c6	                            mov r14, rax	       867	sequencer.c	FUNCTION_30	CALL_6
0x40040b4	     0xf84d6000000	                            je 0x4004190	       868	sequencer.c	FUNCTION_30	IF_3
0x40040ba	      0x498d442404	                      lea rax, [r12 + 4]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040bf	          0x4d85e4	                           test r12, r12	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040c2	      0xb900000000	                              mov ecx, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040c7	          0x4c89ea	                            mov rdx, r13	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040ca	      0xbe00000000	                              mov esi, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040cf	          0x4c89f7	                            mov rdi, r14	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040d2	        0x480f45c8	                         cmovne rcx, rax	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040d6	        0x4883ec08	                              sub rsp, 8	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040da	          0x4531c0	                            xor r8d, r8d	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040dd	              0x55	                                push rbp	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040de	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040e3	      0xe800000000	                          call 0x40040e8	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40040e8	            0x85c0	                           test eax, eax	       868	sequencer.c	FUNCTION_30	IF_3
0x40040ea	              0x5a	                                 pop rdx	       868	sequencer.c	FUNCTION_30	IF_3
0x40040eb	              0x59	                                 pop rcx	       868	sequencer.c	FUNCTION_30	IF_3
0x40040ec	     0xf859e000000	                           jne 0x4004190	       868	sequencer.c	FUNCTION_30	IF_3
0x40040f2	          0x4889ee	                            mov rsi, rbp	       872	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40040f5	          0x4c89f7	                            mov rdi, r14	       872	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40040f8	            0x31ed	                            xor ebp, ebp	       871	sequencer.c	FUNCTION_30	IF_3
0x40040fa	      0xe800000000	                          call 0x40040ff	       872	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40040ff	            0x85c0	                           test eax, eax	       871	sequencer.c	FUNCTION_30	IF_3
0x4004101	        0x400f95c5	                               setne bpl	       871	sequencer.c	FUNCTION_30	IF_3
0x4004105	            0xf7dd	                                 neg ebp	       871	sequencer.c	FUNCTION_30	IF_3
0x4004107	          0x4c89f7	                            mov rdi, r14	       875	sequencer.c	FUNCTION_30	CALL_9
0x400410a	      0xe800000000	                          call 0x400410f	       875	sequencer.c	FUNCTION_30	CALL_9
0x400410f	          0x4889df	                            mov rdi, rbx	       876	sequencer.c	FUNCTION_30	CALL_10
0x4004112	      0xe800000000	                          call 0x4004117	       876	sequencer.c	FUNCTION_30	CALL_10
0x4004117	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       879	sequencer.c	FUNCTION_30
0x400411c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       879	sequencer.c	FUNCTION_30
0x4004125	            0x89e8	                            mov eax, ebp	       879	sequencer.c	FUNCTION_30
0x4004127	     0xf8583000000	                           jne 0x40041b0	       879	sequencer.c	FUNCTION_30
0x400412d	        0x4883c428	                           add rsp, 0x28	       879	sequencer.c	FUNCTION_30
0x4004131	              0x5b	                                 pop rbx	       879	sequencer.c	FUNCTION_30
0x4004132	              0x5d	                                 pop rbp	       879	sequencer.c	FUNCTION_30
0x4004133	            0x415c	                                 pop r12	       879	sequencer.c	FUNCTION_30
0x4004135	            0x415d	                                 pop r13	       879	sequencer.c	FUNCTION_30
0x4004137	            0x415e	                                 pop r14	       879	sequencer.c	FUNCTION_30
0x4004139	            0x415f	                                 pop r15	       879	sequencer.c	FUNCTION_30
0x400413b	              0xc3	                                     ret	       879	sequencer.c	FUNCTION_30
0x400413c	         0xf1f4000	                         nop dword [rax]	       879	sequencer.c	FUNCTION_30
0x4004140	          0x4c89f6	                            mov rsi, r14	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x4004143	          0x4889df	                            mov rdi, rbx	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x4004146	      0xe800000000	                          call 0x400414b	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x400414b	        0x488b0424	                    mov rax, qword [rsp]	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x400414f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x4004152	            0x754c	                           jne 0x40041a0	       141	strbuf.h	FUNCTION_107
0x4004154	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004159	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_109	CALL_2
0x400415c	      0xe800000000	                          call 0x4004161	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004161	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_109	CALL_2
0x4004166	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x400416a	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_109
0x400416f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_109
0x4004174	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x4004178	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_109
0x400417d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_109
0x4004182	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4004186	      0xe91bffffff	                           jmp 0x40040a6	       230	strbuf.h	FUNCTION_109
0x400418b	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_109
0x4004190	      0xbdffffffff	                     mov ebp, 0xffffffff	       873	sequencer.c	FUNCTION_30	IF_3
0x4004195	      0xe96dffffff	                           jmp 0x4004107	       873	sequencer.c	FUNCTION_30	IF_3
0x400419a	    0x660f1f440000	                    nop word [rax + rax]	       873	sequencer.c	FUNCTION_30	IF_3
0x40041a0	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_107
0x40041a5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40041a9	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40041ac	            0x75b8	                           jne 0x4004166	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40041ae	            0xeba4	                           jmp 0x4004154	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40041b0	      0xe800000000	                          call 0x40041b5	       879	sequencer.c	FUNCTION_30
run_git_commit	WHILE,0:IF,15:functions,0:SWITCH,0:ELSE,2:DO,0:FOR,0:CALL,20	275
0x4002280	            0x4157	                                push r15	       719	sequencer.c	FUNCTION_26
0x4002282	            0x4156	                                push r14	       719	sequencer.c	FUNCTION_26
0x4002284	      0xb90c000000	                            mov ecx, 0xc	       720	sequencer.c	FUNCTION_26
0x4002289	            0x4155	                                push r13	       719	sequencer.c	FUNCTION_26
0x400228b	            0x4154	                                push r12	       719	sequencer.c	FUNCTION_26
0x400228d	          0x4989f7	                            mov r15, rsi	       719	sequencer.c	FUNCTION_26
0x4002290	              0x55	                                push rbp	       719	sequencer.c	FUNCTION_26
0x4002291	              0x53	                                push rbx	       719	sequencer.c	FUNCTION_26
0x4002292	          0x4189d5	                           mov r13d, edx	       719	sequencer.c	FUNCTION_26
0x4002295	    0x4881ecc80000	                           sub rsp, 0xc8	       719	sequencer.c	FUNCTION_26
0x400229c	      0x488d6c2450	                   lea rbp, [rsp + 0x50]	       720	sequencer.c	FUNCTION_26
0x40022a1	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       719	sequencer.c	FUNCTION_26
0x40022a6	    0x64488b042528	                mov rax, qword fs:[0x28]	       719	sequencer.c	FUNCTION_26
0x40022af	    0x48898424b800	             mov qword [rsp + 0xb8], rax	       719	sequencer.c	FUNCTION_26
0x40022b7	            0x31c0	                            xor eax, eax	       719	sequencer.c	FUNCTION_26
0x40022b9	          0x4889ef	                            mov rdi, rbp	       720	sequencer.c	FUNCTION_26
0x40022bc	          0xf348ab	              rep stosq qword [rdi], rax	       720	sequencer.c	FUNCTION_26
0x40022bf	            0x89d0	                            mov eax, edx	       720	sequencer.c	FUNCTION_26
0x40022c1	    0x48c744245800	               mov qword [rsp + 0x58], 0	       720	sequencer.c	FUNCTION_26
0x40022ca	    0x48c744246800	               mov qword [rsp + 0x68], 0	       720	sequencer.c	FUNCTION_26
0x40022d3	          0x83e002	                              and eax, 2	       720	sequencer.c	FUNCTION_26
0x40022d6	          0x833e02	                      cmp dword [rsi], 2	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x40022d9	    0xc68424980000	                mov byte [rsp + 0x98], 8	       723	sequencer.c	FUNCTION_26
0x40022e1	        0x8944241c	             mov dword [rsp + 0x1c], eax	       723	sequencer.c	FUNCTION_26
0x40022e5	     0xf841d010000	                            je 0x4002408	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x40022eb	        0x488d5d08	                      lea rbx, [rbp + 8]	       739	sequencer.c	FUNCTION_26	CALL_5
0x40022ef	      0xbe00000000	                              mov esi, 0	       739	sequencer.c	FUNCTION_26	CALL_5
0x40022f4	          0x4889df	                            mov rdi, rbx	       739	sequencer.c	FUNCTION_26	CALL_5
0x40022f7	      0xe800000000	                          call 0x40022fc	       739	sequencer.c	FUNCTION_26	CALL_5
0x40022fc	        0x41f6c510	                         test r13b, 0x10	       741	sequencer.c	FUNCTION_26	IF_4
0x4002300	     0xf842d030000	                            je 0x4002633	       741	sequencer.c	FUNCTION_26	IF_4
0x4002306	        0x41f6c504	                            test r13b, 4	       743	sequencer.c	FUNCTION_26	IF_5
0x400230a	     0xf8510030000	                           jne 0x4002620	       743	sequencer.c	FUNCTION_26	IF_5
0x4002310	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	       745	sequencer.c	FUNCTION_26	IF_6
0x4002314	          0x4885d2	                           test rdx, rdx	       745	sequencer.c	FUNCTION_26	IF_6
0x4002317	            0x7410	                            je 0x4002329	       745	sequencer.c	FUNCTION_26	IF_6
0x4002319	        0x488d7d08	                      lea rdi, [rbp + 8]	       746	sequencer.c	FUNCTION_26	CALL_8
0x400231d	      0xbe00000000	                              mov esi, 0	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002322	            0x31c0	                            xor eax, eax	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002324	      0xe800000000	                          call 0x4002329	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002329	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       747	sequencer.c	FUNCTION_26	IF_7
0x400232e	          0x4885c0	                           test rax, rax	       747	sequencer.c	FUNCTION_26	IF_7
0x4002331	     0xf8432020000	                            je 0x4002569	       747	sequencer.c	FUNCTION_26	IF_7
0x4002337	        0x488d5d08	                      lea rbx, [rbp + 8]	       748	sequencer.c	FUNCTION_26	CALL_9
0x400233b	            0x31c9	                            xor ecx, ecx	       748	sequencer.c	FUNCTION_26	CALL_9
0x400233d	          0x4889c2	                            mov rdx, rax	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002340	      0xbe00000000	                              mov esi, 0	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002345	            0x31c0	                            xor eax, eax	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002347	          0x4889df	                            mov rdi, rbx	       748	sequencer.c	FUNCTION_26	CALL_9
0x400234a	      0xe800000000	                          call 0x400234f	       748	sequencer.c	FUNCTION_26	CALL_9
0x400234f	        0x41f6c508	                            test r13b, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x4002353	            0x7543	                           jne 0x4002398	       751	sequencer.c	FUNCTION_26	IF_9
0x4002355	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       753	sequencer.c	FUNCTION_26	IF_10
0x4002359	            0x85c0	                           test eax, eax	       753	sequencer.c	FUNCTION_26	IF_10
0x400235b	     0xf8520020000	                           jne 0x4002581	       753	sequencer.c	FUNCTION_26	IF_10
0x4002361	        0x458b4710	            mov r8d, dword [r15 + 0x10] 	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002365	          0x4585c0	                           test r8d, r8d	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002368	            0x7549	                           jne 0x40023b3	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x400236a	        0x418b7f08	                mov edi, dword [r15 + 8]	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x400236e	            0x85ff	                           test edi, edi	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002370	            0x7541	                           jne 0x40023b3	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002372	      0x488d742428	                   lea rsi, [rsp + 0x28]	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x4002377	      0xbf00000000	                              mov edi, 0	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x400237c	      0xe800000000	                          call 0x4002381	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x4002381	            0x85c0	                           test eax, eax	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002383	            0x742e	                            je 0x40023b3	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002385	        0x488d7d08	                      lea rdi, [rbp + 8]	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002389	      0xbe00000000	                              mov esi, 0	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x400238e	      0xe800000000	                          call 0x4002393	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002393	            0xeb1e	                           jmp 0x40023b3	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002395	           0xf1f00	                         nop dword [rax]	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002398	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_11
0x400239d	          0x4889df	                            mov rdi, rbx	       752	sequencer.c	FUNCTION_26	CALL_11
0x40023a0	      0xe800000000	                          call 0x40023a5	       752	sequencer.c	FUNCTION_26	CALL_11
0x40023a5	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	       753	sequencer.c	FUNCTION_26	IF_10
0x40023aa	          0x4585c9	                           test r9d, r9d	       753	sequencer.c	FUNCTION_26	IF_10
0x40023ad	     0xf85ce010000	                           jne 0x4002581	       753	sequencer.c	FUNCTION_26	IF_10
0x40023b3	        0x4183e501	                             and r13d, 1	       760	sequencer.c	FUNCTION_26	IF_12
0x40023b7	     0xf85dc010000	                           jne 0x4002599	       760	sequencer.c	FUNCTION_26	IF_12
0x40023bd	        0x418b7720	            mov esi, dword [r15 + 0x20] 	       763	sequencer.c	FUNCTION_26	IF_13
0x40023c1	            0x85f6	                           test esi, esi	       763	sequencer.c	FUNCTION_26	IF_13
0x40023c3	     0xf85ea010000	                           jne 0x40025b3	       763	sequencer.c	FUNCTION_26	IF_13
0x40023c9	    0x83bc24840000	cmp dword [rsp + 0x84], 0xffffffffffffffff	       766	sequencer.c	FUNCTION_26	IF_14
0x40023d1	     0xf84f8010000	                            je 0x40025cf	       766	sequencer.c	FUNCTION_26	IF_14
0x40023d7	          0x4889ef	                            mov rdi, rbp	       780	sequencer.c	FUNCTION_26	CALL_20
0x40023da	      0xe800000000	                          call 0x40023df	       780	sequencer.c	FUNCTION_26	CALL_20
0x40023df	    0x488b9c24b800	            mov rbx, qword [rsp + 0xb8] 	       781	sequencer.c	FUNCTION_26
0x40023e7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       781	sequencer.c	FUNCTION_26
0x40023f0	     0xf850a030000	                           jne 0x4002700	       781	sequencer.c	FUNCTION_26
0x40023f6	    0x4881c4c80000	                           add rsp, 0xc8	       781	sequencer.c	FUNCTION_26
0x40023fd	              0x5b	                                 pop rbx	       781	sequencer.c	FUNCTION_26
0x40023fe	              0x5d	                                 pop rbp	       781	sequencer.c	FUNCTION_26
0x40023ff	            0x415c	                                 pop r12	       781	sequencer.c	FUNCTION_26
0x4002401	            0x415d	                                 pop r13	       781	sequencer.c	FUNCTION_26
0x4002403	            0x415e	                                 pop r14	       781	sequencer.c	FUNCTION_26
0x4002405	            0x415f	                                 pop r15	       781	sequencer.c	FUNCTION_26
0x4002407	              0xc3	                                     ret	       781	sequencer.c	FUNCTION_26
0x4002408	            0x85c0	                           test eax, eax	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x400240a	            0x7517	                           jne 0x4002423	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x400240c	      0xb828000000	                           mov eax, 0x28	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002411	    0xc78424840000	     mov dword [rsp + 0x84], 0xffffffff 	       728	sequencer.c	FUNCTION_26	IF_1	IF_2
0x400241c	    0x888424980000	               mov byte [rsp + 0x98], al	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002423	    0x488b35000000	            mov rsi, qword [0x0400242a] 	       101	sequencer.c	CALL_16
0x400242a	    0x48c744243000	               mov qword [rsp + 0x30], 0	       648	sequencer.c	FUNCTION_24
0x4002433	    0x48c744243800	               mov qword [rsp + 0x38], 0	       648	sequencer.c	FUNCTION_24
0x400243c	    0x48c744244000	               mov qword [rsp + 0x40], 0	       648	sequencer.c	FUNCTION_24
0x4002445	          0x4885f6	                           test rsi, rsi	       101	sequencer.c	CALL_16
0x4002448	     0xf844d020000	                            je 0x400269b	       101	sequencer.c	CALL_16
0x400244e	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002453	      0xba00010000	                          mov edx, 0x100	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002458	          0x4889df	                            mov rdi, rbx	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x400245b	      0xe800000000	                          call 0x4002460	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002460	          0x4885c0	                           test rax, rax	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002463	     0xf8e4d020000	                           jle 0x40026b6	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002469	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	       655	sequencer.c	FUNCTION_24	FOR_1
0x400246e	        0x410fb636	                   movzx esi, byte [r14]	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002472	          0x4084f6	                           test sil, sil	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002475	     0xf8470feffff	                            je 0x40022eb	       655	sequencer.c	FUNCTION_24	FOR_1
0x400247b	          0x4531e4	                          xor r12d, r12d	       655	sequencer.c	FUNCTION_24	FOR_1
0x400247e	            0x6690	                                     nop	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002480	          0x4c89f2	                            mov rdx, r14	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002483	      0xb800000000	                              mov eax, 0	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002488	            0xeb17	                           jmp 0x40024a1	       655	sequencer.c	FUNCTION_24	FOR_1
0x400248a	    0x660f1f440000	                    nop word [rax + rax]	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002490	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4002494	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4002498	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400249b	     0xf857f000000	                           jne 0x4002520	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40024a1	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x40024a4	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x40024a6	            0x75e8	                           jne 0x4002490	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x40024a8	          0x4c89f6	                            mov rsi, r14	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x40024ab	      0x482b742440	             sub rsi, qword [rsp + 0x40]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x40024b0	          0x4c29f2	                            sub rdx, r14	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x40024b3	    0x41b801000000	                              mov r8d, 1	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x40024b9	      0xb900000000	                              mov ecx, 0	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x40024be	          0x4889df	                            mov rdi, rbx	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x40024c1	      0xe800000000	                          call 0x40024c6	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x40024c6	          0x4c89f0	                            mov rax, r14	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x40024c9	         0xfb67001	               movzx esi, byte [rax + 1]	       655	sequencer.c	FUNCTION_24	FOR_1
0x40024cd	        0x4c8d7001	                      lea r14, [rax + 1]	       655	sequencer.c	FUNCTION_24	FOR_1
0x40024d1	          0x4084f6	                           test sil, sil	       655	sequencer.c	FUNCTION_24	FOR_1
0x40024d4	            0x75aa	                           jne 0x4002480	       655	sequencer.c	FUNCTION_24	FOR_1
0x40024d6	          0x4585e4	                         test r12d, r12d	       665	sequencer.c	FUNCTION_24	FOR_2
0x40024d9	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       665	sequencer.c	FUNCTION_24	FOR_2
0x40024de	     0xf8407feffff	                            je 0x40022eb	       665	sequencer.c	FUNCTION_24	FOR_2
0x40024e4	        0x488d4518	                   lea rax, [rbp + 0x18]	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x40024e8	          0x4531f6	                          xor r14d, r14d	       665	sequencer.c	FUNCTION_24	FOR_2
0x40024eb	      0x4889442408	                mov qword [rsp + 8], rax	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x40024f0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x40024f5	          0x4889de	                            mov rsi, rbx	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x40024f8	        0x4183c601	                             add r14d, 1	       665	sequencer.c	FUNCTION_24	FOR_2
0x40024fc	      0xe800000000	                          call 0x4002501	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4002501	          0x4889df	                            mov rdi, rbx	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4002504	      0xe800000000	                          call 0x4002509	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4002509	          0x4539e6	                          cmp r14d, r12d	       665	sequencer.c	FUNCTION_24	FOR_2
0x400250c	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4002511	            0x75dd	                           jne 0x40024f0	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002513	      0xe9d3fdffff	                           jmp 0x40022eb	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002518	     0xf1f84000000	                   nop dword [rax + rax]	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002520	        0x4080fe27	                           cmp sil, 0x27	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002524	            0x7413	                            je 0x4002539	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002526	        0x4080fe0a	                            cmp sil, 0xa	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x400252a	          0x4c89f0	                            mov rax, r14	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x400252d	            0x759a	                           jne 0x40024c9	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x400252f	        0x41c60600	                       mov byte [r14], 0	       661	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4002533	        0x4183c401	                             add r12d, 1	       662	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4002537	            0xeb90	                           jmp 0x40024c9	       662	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4002539	          0x4c89f6	                            mov rsi, r14	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400253c	      0x482b742440	             sub rsi, qword [rsp + 0x40]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002541	        0x498d46ff	                      lea rax, [r14 - 1]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002545	          0x4531c0	                            xor r8d, r8d	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002548	      0xb900000000	                              mov ecx, 0	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400254d	      0xba01000000	                              mov edx, 1	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002552	          0x4889df	                            mov rdi, rbx	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002555	      0x4889442408	                mov qword [rsp + 8], rax	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400255a	      0xe800000000	                          call 0x400255f	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400255f	      0x488b442408	                mov rax, qword [rsp + 8]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002564	      0xe960ffffff	                           jmp 0x40024c9	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002569	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400256e	          0x4585d2	                         test r10d, r10d	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002571	     0xf84ee000000	                            je 0x4002665	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002577	        0x41f6c508	                            test r13b, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x400257b	     0xf856c010000	                           jne 0x40026ed	       751	sequencer.c	FUNCTION_26	IF_9
0x4002581	        0x488d7d08	                      lea rdi, [rbp + 8]	       754	sequencer.c	FUNCTION_26	CALL_12
0x4002585	      0xbe00000000	                              mov esi, 0	       754	sequencer.c	FUNCTION_26	CALL_12
0x400258a	      0xe800000000	                          call 0x400258f	       754	sequencer.c	FUNCTION_26	CALL_12
0x400258f	        0x4183e501	                             and r13d, 1	       760	sequencer.c	FUNCTION_26	IF_12
0x4002593	     0xf8424feffff	                            je 0x40023bd	       760	sequencer.c	FUNCTION_26	IF_12
0x4002599	        0x488d7d08	                      lea rdi, [rbp + 8]	       761	sequencer.c	FUNCTION_26	CALL_15
0x400259d	      0xbe00000000	                              mov esi, 0	       761	sequencer.c	FUNCTION_26	CALL_15
0x40025a2	      0xe800000000	                          call 0x40025a7	       761	sequencer.c	FUNCTION_26	CALL_15
0x40025a7	        0x418b7720	            mov esi, dword [r15 + 0x20] 	       763	sequencer.c	FUNCTION_26	IF_13
0x40025ab	            0x85f6	                           test esi, esi	       763	sequencer.c	FUNCTION_26	IF_13
0x40025ad	     0xf8416feffff	                            je 0x40023c9	       763	sequencer.c	FUNCTION_26	IF_13
0x40025b3	        0x488d7d08	                      lea rdi, [rbp + 8]	       764	sequencer.c	FUNCTION_26	CALL_16
0x40025b7	      0xbe00000000	                              mov esi, 0	       764	sequencer.c	FUNCTION_26	CALL_16
0x40025bc	      0xe800000000	                          call 0x40025c1	       764	sequencer.c	FUNCTION_26	CALL_16
0x40025c1	    0x83bc24840000	cmp dword [rsp + 0x84], 0xffffffffffffffff	       766	sequencer.c	FUNCTION_26	IF_14
0x40025c9	     0xf8508feffff	                           jne 0x40023d7	       766	sequencer.c	FUNCTION_26	IF_14
0x40025cf	    0x48c744243000	               mov qword [rsp + 0x30], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x40025d8	    0x48c744243800	               mov qword [rsp + 0x38], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x40025e1	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025e6	    0x48c744244000	               mov qword [rsp + 0x40], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x40025ef	        0x4883ec08	                              sub rsp, 8	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025f3	            0x31c9	                            xor ecx, ecx	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025f5	            0x6a00	                                  push 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025f7	            0x31d2	                            xor edx, edx	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025f9	          0x4531c0	                            xor r8d, r8d	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025fc	            0x31f6	                            xor esi, esi	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025fe	          0x4889ef	                            mov rdi, rbp	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002601	          0x4989d9	                             mov r9, rbx	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002604	      0xe800000000	                          call 0x4002609	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002609	            0x85c0	                           test eax, eax	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x400260b	            0x89c5	                            mov ebp, eax	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x400260d	              0x5a	                                 pop rdx	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x400260e	              0x59	                                 pop rcx	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x400260f	            0x7534	                           jne 0x4002645	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x4002611	          0x4889df	                            mov rdi, rbx	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x4002614	      0xe800000000	                          call 0x4002619	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x4002619	            0x89e8	                            mov eax, ebp	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x400261b	      0xe9bffdffff	                           jmp 0x40023df	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002620	        0x488d7d08	                      lea rdi, [rbp + 8]	       744	sequencer.c	FUNCTION_26	CALL_7
0x4002624	      0xbe00000000	                              mov esi, 0	       744	sequencer.c	FUNCTION_26	CALL_7
0x4002629	      0xe800000000	                          call 0x400262e	       744	sequencer.c	FUNCTION_26	CALL_7
0x400262e	      0xe9ddfcffff	                           jmp 0x4002310	       744	sequencer.c	FUNCTION_26	CALL_7
0x4002633	      0xbe00000000	                              mov esi, 0	       742	sequencer.c	FUNCTION_26	CALL_6
0x4002638	          0x4889df	                            mov rdi, rbx	       742	sequencer.c	FUNCTION_26	CALL_6
0x400263b	      0xe800000000	                          call 0x4002640	       742	sequencer.c	FUNCTION_26	CALL_6
0x4002640	      0xe9c1fcffff	                           jmp 0x4002306	       742	sequencer.c	FUNCTION_26	CALL_6
0x4002645	    0x488b35000000	            mov rsi, qword [0x0400264c] 	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x400264c	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x4002651	      0xe800000000	                          call 0x4002656	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x4002656	          0x4889df	                            mov rdi, rbx	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x4002659	      0xe800000000	                          call 0x400265e	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x400265e	            0x89e8	                            mov eax, ebp	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002660	      0xe97afdffff	                           jmp 0x40023df	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002665	        0x488d5d08	                      lea rbx, [rbp + 8]	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002669	            0x31c9	                            xor ecx, ecx	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400266b	            0x31c0	                            xor eax, eax	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400266d	      0xba00000000	                              mov edx, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002672	      0xbe00000000	                              mov esi, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002677	          0x4889df	                            mov rdi, rbx	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400267a	      0xe800000000	                          call 0x400267f	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400267f	        0x41f6c508	                            test r13b, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x4002683	     0xf84d8fcffff	                            je 0x4002361	       751	sequencer.c	FUNCTION_26	IF_9
0x4002689	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_11
0x400268e	          0x4889df	                            mov rdi, rbx	       752	sequencer.c	FUNCTION_26	CALL_11
0x4002691	      0xe800000000	                          call 0x4002696	       752	sequencer.c	FUNCTION_26	CALL_11
0x4002696	      0xe918fdffff	                           jmp 0x40023b3	       752	sequencer.c	FUNCTION_26	CALL_11
0x400269b	      0xbf00000000	                              mov edi, 0	       101	sequencer.c	CALL_16
0x40026a0	            0x31c0	                            xor eax, eax	       101	sequencer.c	CALL_16
0x40026a2	      0xe800000000	                          call 0x40026a7	       101	sequencer.c	CALL_16
0x40026a7	          0x4889c6	                            mov rsi, rax	       101	sequencer.c	CALL_16
0x40026aa	    0x488905000000	            mov qword [0x040026b1], rax 	       101	sequencer.c	CALL_16
0x40026b1	      0xe998fdffff	                           jmp 0x400244e	       101	sequencer.c	CALL_16
0x40026b6	        0x498d7f30	                   lea rdi, [r15 + 0x30]	       101	sequencer.c	CALL_16
0x40026ba	      0xe871e2ffff	    call sym.gpg_sign_opt_quoted.isra.13	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x40026bf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40026c4	          0x4889c3	                            mov rbx, rax	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x40026c7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40026cc	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40026ce	      0xe800000000	                          call 0x40026d3	        54	gettext.h	FUNCTION_147
0x40026d3	          0x4889da	                            mov rdx, rbx	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40026d6	          0x4889c7	                            mov rdi, rax	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40026d9	          0x4889de	                            mov rsi, rbx	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40026dc	            0x31c0	                            xor eax, eax	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40026de	      0xe800000000	                          call 0x40026e3	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40026e3	      0xb8ffffffff	                     mov eax, 0xffffffff	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40026e8	      0xe9f2fcffff	                           jmp 0x40023df	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40026ed	        0x488d7d08	                      lea rdi, [rbp + 8]	       752	sequencer.c	FUNCTION_26	CALL_11
0x40026f1	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_11
0x40026f6	      0xe800000000	                          call 0x40026fb	       752	sequencer.c	FUNCTION_26	CALL_11
0x40026fb	      0xe981feffff	                           jmp 0x4002581	       752	sequencer.c	FUNCTION_26	CALL_11
0x4002700	      0xe800000000	                          call 0x4002705	       781	sequencer.c	FUNCTION_26
parse_insn_buffer	WHILE,0:IF,5:functions,0:SWITCH,0:ELSE,2:DO,0:FOR,1:CALL,9	387
0x4000bc0	            0x4157	                                push r15	      1891	sequencer.c	FUNCTION_54
0x4000bc2	            0x4156	                                push r14	      1891	sequencer.c	FUNCTION_54
0x4000bc4	          0x4989ff	                            mov r15, rdi	      1891	sequencer.c	FUNCTION_54
0x4000bc7	            0x4155	                                push r13	      1891	sequencer.c	FUNCTION_54
0x4000bc9	            0x4154	                                push r12	      1891	sequencer.c	FUNCTION_54
0x4000bcb	          0x4989f5	                            mov r13, rsi	      1891	sequencer.c	FUNCTION_54
0x4000bce	              0x55	                                push rbp	      1891	sequencer.c	FUNCTION_54
0x4000bcf	              0x53	                                push rbx	      1891	sequencer.c	FUNCTION_54
0x4000bd0	        0x4883ec48	                           sub rsp, 0x48	      1891	sequencer.c	FUNCTION_54
0x4000bd4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1891	sequencer.c	FUNCTION_54
0x4000bdd	      0x4889442438	             mov qword [rsp + 0x38], rax	      1891	sequencer.c	FUNCTION_54
0x4000be2	            0x31c0	                            xor eax, eax	      1891	sequencer.c	FUNCTION_54
0x4000be4	    0x488b05000000	            mov rax, qword [0x04000beb] 	        58	sequencer.c	CALL_9
0x4000beb	          0x4885c0	                           test rax, rax	        58	sequencer.c	CALL_9
0x4000bee	     0xf844e050000	                            je 0x4001142	        58	sequencer.c	CALL_9
0x4000bf4	          0x4889c7	                            mov rdi, rax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4000bf7	      0xe800000000	                          call 0x4000bfc	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4000bfc	        0x41803f00	                       cmp byte [r15], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000c00	        0x89442418	             mov dword [rsp + 0x18], eax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4000c04	     0xf844e050000	                            je 0x4001158	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000c0a	    0xc70424000000	                      mov dword [rsp], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000c11	    0x41bc01000000	                             mov r12d, 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000c17	    0x660f1f840000	                    nop word [rax + rax]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000c20	      0xbe0a000000	                            mov esi, 0xa	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4000c25	          0x4c89ff	                            mov rdi, r15	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4000c28	      0xe800000000	                          call 0x4000c2d	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4000c2d	          0x803801	                       cmp byte [rax], 1	      1899	sequencer.c	FUNCTION_54	FOR_1
0x4000c30	          0x4889c5	                            mov rbp, rax	      1899	sequencer.c	FUNCTION_54	FOR_1
0x4000c33	          0x4989c6	                            mov r14, rax	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4000c36	        0x4883ddff	             sbb rbp, 0xffffffffffffffff	      1899	sequencer.c	FUNCTION_54	FOR_1
0x4000c3a	          0x4c39f8	                            cmp rax, r15	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4000c3d	            0x740d	                            je 0x4000c4c	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4000c3f	            0x31c0	                            xor eax, eax	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4000c41	      0x41807eff0d	                 cmp byte [r14 - 1], 0xd	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4000c46	           0xf94c0	                                 sete al	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4000c49	          0x4929c6	                            sub r14, rax	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4000c4c	          0x4c89ef	                            mov rdi, r13	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x4000c4f	      0xe8acf4ffff	                call sym.append_new_todo	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x4000c54	          0x4989c1	                             mov r9, rax	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x4000c57	          0x4c89f8	                            mov rax, r15	      1905	sequencer.c	FUNCTION_54	FOR_1
0x4000c5a	        0x492b4510	             sub rax, qword [r13 + 0x10]	      1905	sequencer.c	FUNCTION_54	FOR_1
0x4000c5e	    0x41c741100000	                mov dword [r9 + 0x10], 0	      1808	sequencer.c	FUNCTION_53
0x4000c66	        0x49894128	              mov qword [r9 + 0x28], rax	      1905	sequencer.c	FUNCTION_54	FOR_1
0x4000c6a	        0x410fbe07	                   movsx eax, byte [r15]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c6e	          0x83f820	                           cmp eax, 0x20	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c71	            0x89c7	                            mov edi, eax	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c73	            0x7409	                            je 0x4000c7e	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c75	          0x83f809	                              cmp eax, 9	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c78	     0xf8514030000	                           jne 0x4000f92	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c7e	        0x498d4701	                      lea rax, [r15 + 1]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c82	    0x660f1f440000	                    nop word [rax + rax]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c88	           0xfbe10	                   movsx edx, byte [rax]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c8b	          0x4889c6	                            mov rsi, rax	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c8e	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c92	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c95	            0x89d7	                            mov edi, edx	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c97	            0x74ef	                            je 0x4000c88	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c99	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c9c	            0x74ea	                            je 0x4000c88	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000c9e	        0x4080ff0d	                            cmp dil, 0xd	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000ca2	     0xf843c020000	                            je 0x4000ee4	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000ca8	          0x4939f6	                            cmp r14, rsi	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000cab	     0xf8433020000	                            je 0x4000ee4	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000cb1	    0x40383d000000	              cmp byte [0x04000cb8], dil	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000cb8	     0xf8426020000	                            je 0x4000ee4	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000cbe	      0xbf00000000	                              mov edi, 0	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000cc3	      0xb800000000	                              mov eax, 0	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000cc8	          0x4531d2	                          xor r10d, r10d	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000ccb	       0xf1f440000	                   nop dword [rax + rax]	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000cd0	          0x4889f3	                            mov rbx, rsi	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000cd3	            0xeb14	                           jmp 0x4000ce9	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000cd5	           0xf1f00	                         nop dword [rax]	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000cd8	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4000cdc	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4000ce0	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4000ce3	     0xf85bf010000	                           jne 0x4000ea8	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4000ce9	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4000cec	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4000cee	            0x75e8	                           jne 0x4000cd8	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4000cf0	          0x458911	                    mov dword [r9], r10d	      1823	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x4000cf3	           0xfbe03	                   movsx eax, byte [rbx]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000cf6	          0x83f820	                           cmp eax, 0x20	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000cf9	            0x7409	                            je 0x4000d04	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000cfb	          0x83f809	                              cmp eax, 9	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000cfe	     0xf8504010000	                           jne 0x4000e08	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000d04	            0x31c0	                            xor eax, eax	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000d06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000d10	        0x4883c001	                              add rax, 1	      1040	string2.h	FUNCTION_211	WHILE_1
0x4000d14	         0xfbe1403	             movsx edx, byte [rbx + rax]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000d18	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000d1b	            0x74f3	                            je 0x4000d10	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000d1d	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000d20	            0x74ee	                            je 0x4000d10	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000d22	          0x418b31	                     mov esi, dword [r9]	      1837	sequencer.c	FUNCTION_53	IF_5
0x4000d25	          0x4863d0	                         movsxd rdx, eax	      1835	sequencer.c	FUNCTION_53
0x4000d28	          0x4801d3	                            add rbx, rdx	      1835	sequencer.c	FUNCTION_53
0x4000d2b	          0x83fe0a	                            cmp esi, 0xa	      1837	sequencer.c	FUNCTION_53	IF_5
0x4000d2e	     0xf8425020000	                            je 0x4000f59	      1837	sequencer.c	FUNCTION_53	IF_5
0x4000d34	            0x85c0	                           test eax, eax	      1847	sequencer.c	FUNCTION_53	IF_7
0x4000d36	     0xf84d8000000	                            je 0x4000e14	      1847	sequencer.c	FUNCTION_53	IF_7
0x4000d3c	          0x8d46fa	                      lea eax, [rsi - 6]	      1851	sequencer.c	FUNCTION_53	IF_8
0x4000d3f	          0x83f802	                              cmp eax, 2	      1851	sequencer.c	FUNCTION_53	IF_8
0x4000d42	     0xf865a020000	                           jbe 0x4000fa2	      1851	sequencer.c	FUNCTION_53	IF_8
0x4000d48	          0x83fe09	                              cmp esi, 9	      1859	sequencer.c	FUNCTION_53	IF_9
0x4000d4b	     0xf846c020000	                            je 0x4000fbd	      1859	sequencer.c	FUNCTION_53	IF_9
0x4000d51	           0xfb613	                   movzx edx, byte [rbx]	      1859	sequencer.c	FUNCTION_53	IF_9
0x4000d54	            0x84d2	                             test dl, dl	       974	string2.h	FUNCTION_209	WHILE_1
0x4000d56	     0xf842f040000	                            je 0x400118b	       974	string2.h	FUNCTION_209	WHILE_1
0x4000d5c	          0x8d42f7	                      lea eax, [rdx - 9]	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d5f	            0x3c01	                               cmp al, 1	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d61	     0xf86fd030000	                           jbe 0x4001164	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d67	          0x80fa20	                            cmp dl, 0x20	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d6a	     0xf84f4030000	                            je 0x4001164	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d70	        0x488d4301	                      lea rax, [rbx + 1]	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d74	            0xeb24	                           jmp 0x4000d9a	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d80	          0x8d72f7	                      lea esi, [rdx - 9]	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d83	        0x4883c001	                              add rax, 1	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d87	        0x4080fe01	                              cmp sil, 1	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d8b	     0xf868b020000	                           jbe 0x400101c	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d91	          0x80fa20	                            cmp dl, 0x20	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d94	     0xf8482020000	                            je 0x400101c	       975	string2.h	FUNCTION_209	WHILE_1
0x4000d9a	           0xfb610	                   movzx edx, byte [rax]	       974	string2.h	FUNCTION_209	WHILE_1
0x4000d9d	          0x4989c2	                            mov r10, rax	       974	string2.h	FUNCTION_209	WHILE_1
0x4000da0	            0x84d2	                             test dl, dl	       974	string2.h	FUNCTION_209	WHILE_1
0x4000da2	            0x75dc	                           jne 0x4000d80	       974	string2.h	FUNCTION_209	WHILE_1
0x4000da4	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000da9	          0xc60000	                       mov byte [rax], 0	      1876	sequencer.c	FUNCTION_53
0x4000dac	          0x4889df	                            mov rdi, rbx	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000daf	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000db4	      0x4889442408	                mov qword [rsp + 8], rax	      1876	sequencer.c	FUNCTION_53
0x4000db9	      0xe800000000	                          call 0x4000dbe	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000dbe	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1878	sequencer.c	FUNCTION_53
0x4000dc3	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      1878	sequencer.c	FUNCTION_53
0x4000dc8	        0x41c60200	                       mov byte [r10], 0	      1878	sequencer.c	FUNCTION_53
0x4000dcc	          0x4c89f2	                            mov rdx, r14	      1881	sequencer.c	FUNCTION_53
0x4000dcf	        0x4d895118	              mov qword [r9 + 0x18], r10	      1880	sequencer.c	FUNCTION_53
0x4000dd3	          0x4c29d2	                            sub rdx, r10	      1881	sequencer.c	FUNCTION_53
0x4000dd6	            0x85c0	                           test eax, eax	      1883	sequencer.c	FUNCTION_53	IF_12
0x4000dd8	        0x41895120	              mov dword [r9 + 0x20], edx	      1881	sequencer.c	FUNCTION_53
0x4000ddc	            0x7870	                            js 0x4000e4e	      1883	sequencer.c	FUNCTION_53	IF_12
0x4000dde	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1886	sequencer.c	FUNCTION_53	CALL_9
0x4000de3	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1886	sequencer.c	FUNCTION_53	CALL_9
0x4000de8	      0xe800000000	                          call 0x4000ded	      1886	sequencer.c	FUNCTION_53	CALL_9
0x4000ded	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1886	sequencer.c	FUNCTION_53	CALL_9
0x4000df2	          0x4885c0	                           test rax, rax	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x4000df5	        0x49894108	                 mov qword [r9 + 8], rax	      1886	sequencer.c	FUNCTION_53	CALL_9
0x4000df9	     0xf8502010000	                           jne 0x4000f01	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x4000dff	            0xeb4d	                           jmp 0x4000e4e	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x4000e01	     0xf1f80000000	                         nop dword [rax]	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x4000e08	          0x418b31	                     mov esi, dword [r9]	      1837	sequencer.c	FUNCTION_53	IF_5
0x4000e0b	          0x83fe0a	                            cmp esi, 0xa	      1837	sequencer.c	FUNCTION_53	IF_5
0x4000e0e	     0xf8445010000	                            je 0x4000f59	      1837	sequencer.c	FUNCTION_53	IF_5
0x4000e14	          0x83fe0b	                            cmp esi, 0xb	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000e17	        0x4c890c24	                     mov qword [rsp], r9	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000e1b	     0xf875e030000	                            ja 0x400117f	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000e21	        0x48c1e604	                              shl rsi, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000e25	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4000e2a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4000e2c	    0x488b9e000000	                    mov rbx, qword [rsi]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000e33	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4000e38	      0xe800000000	                          call 0x4000e3d	        54	gettext.h	FUNCTION_147
0x4000e3d	          0x4889c7	                            mov rdi, rax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4000e40	            0x31c0	                            xor eax, eax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4000e42	          0x4889de	                            mov rsi, rbx	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4000e45	      0xe800000000	                          call 0x4000e4a	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4000e4a	        0x4c8b0c24	                     mov r9, qword [rsp]	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4000e4e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4000e53	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4000e58	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4000e5a	        0x4c890c24	                     mov qword [rsp], r9	        54	gettext.h	FUNCTION_147
0x4000e5e	      0xe800000000	                          call 0x4000e63	        54	gettext.h	FUNCTION_147
0x4000e63	          0x4c89f2	                            mov rdx, r14	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000e66	          0x4889c7	                            mov rdi, rax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000e69	          0x4c89f9	                            mov rcx, r15	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000e6c	          0x4c29fa	                            sub rdx, r15	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000e6f	          0x4489e6	                           mov esi, r12d	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000e72	            0x31c0	                            xor eax, eax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000e74	      0xe800000000	                          call 0x4000e79	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000e79	        0x4c8b0c24	                     mov r9, qword [rsp]	      1909	sequencer.c	FUNCTION_54	FOR_1	IF_2
0x4000e7d	    0xc70424ffffff	            mov dword [rsp], 0xffffffff 	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000e84	    0x41c7010a0000	                     mov dword [r9], 0xa	      1909	sequencer.c	FUNCTION_54	FOR_1	IF_2
0x4000e8b	        0x4183c401	                             add r12d, 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000e8f	        0x807d0000	                       cmp byte [rbp], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000e93	     0xf849a000000	                            je 0x4000f33	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000e99	          0x4989ef	                            mov r15, rbp	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000e9c	      0xe97ffdffff	                           jmp 0x4000c20	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000ea1	     0xf1f80000000	                         nop dword [rax]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000ea8	        0x807e0120	                cmp byte [rsi + 1], 0x20	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4000eac	            0x7422	                            je 0x4000ed0	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4000eae	        0x4183c201	                             add r10d, 1	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4000eb2	    0x4881ff000000	                              cmp rdi, 0	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4000eb9	            0x7493	                            je 0x4000e4e	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4000ebb	          0x488b07	                    mov rax, qword [rdi]	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4000ebe	        0x4883c710	                           add rdi, 0x10	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4000ec2	      0xe909feffff	                           jmp 0x4000cd0	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4000ec7	    0x660f1f840000	                    nop word [rax + rax]	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4000ed0	         0xfb647e8	            movzx eax, byte [rdi - 0x18]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4000ed4	            0x3806	                      cmp byte [rsi], al	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4000ed6	            0x75d6	                           jne 0x4000eae	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4000ed8	        0x488d5e01	                      lea rbx, [rsi + 1]	      1826	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4000edc	          0x458911	                    mov dword [r9], r10d	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4000edf	      0xe90ffeffff	                           jmp 0x4000cf3	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4000ee4	          0x4d89f0	                             mov r8, r14	      1817	sequencer.c	FUNCTION_53	IF_1
0x4000ee7	    0x41c7010c0000	                     mov dword [r9], 0xc	      1814	sequencer.c	FUNCTION_53	IF_1
0x4000eee	    0x49c741080000	                   mov qword [r9 + 8], 0	      1815	sequencer.c	FUNCTION_53	IF_1
0x4000ef6	          0x4929f0	                             sub r8, rsi	      1817	sequencer.c	FUNCTION_53	IF_1
0x4000ef9	        0x49897118	              mov qword [r9 + 0x18], rsi	      1816	sequencer.c	FUNCTION_53	IF_1
0x4000efd	        0x45894120	              mov dword [r9 + 0x20], r8d	      1817	sequencer.c	FUNCTION_53	IF_1
0x4000f01	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x4000f05	            0x85c0	                           test eax, eax	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x4000f07	            0x7582	                           jne 0x4000e8b	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x4000f09	          0x418b01	                     mov eax, dword [r9]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4000f0c	          0x8d50fc	                      lea edx, [rax - 4]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4000f0f	          0x83fa01	                              cmp edx, 1	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4000f12	     0xf8681010000	                           jbe 0x4001099	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4000f18	          0x83f809	                              cmp eax, 9	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4000f1b	           0xf96c0	                                setbe al	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4000f1e	        0x4183c401	                             add r12d, 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000f22	        0x807d0000	                       cmp byte [rbp], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000f26	           0xfb6c0	                           movzx eax, al	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000f29	        0x89442418	             mov dword [rsp + 0x18], eax	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000f2d	     0xf8566ffffff	                           jne 0x4000e99	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000f33	          0x8b0424	                    mov eax, dword [rsp]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000f36	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1922	sequencer.c	FUNCTION_54
0x4000f3b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1922	sequencer.c	FUNCTION_54
0x4000f44	     0xf8515020000	                           jne 0x400115f	      1922	sequencer.c	FUNCTION_54
0x4000f4a	        0x4883c448	                           add rsp, 0x48	      1922	sequencer.c	FUNCTION_54
0x4000f4e	              0x5b	                                 pop rbx	      1922	sequencer.c	FUNCTION_54
0x4000f4f	              0x5d	                                 pop rbp	      1922	sequencer.c	FUNCTION_54
0x4000f50	            0x415c	                                 pop r12	      1922	sequencer.c	FUNCTION_54
0x4000f52	            0x415d	                                 pop r13	      1922	sequencer.c	FUNCTION_54
0x4000f54	            0x415e	                                 pop r14	      1922	sequencer.c	FUNCTION_54
0x4000f56	            0x415f	                                 pop r15	      1922	sequencer.c	FUNCTION_54
0x4000f58	              0xc3	                                     ret	      1922	sequencer.c	FUNCTION_54
0x4000f59	          0x4939de	                            cmp r14, rbx	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x4000f5c	     0xf846a010000	                            je 0x40010cc	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x4000f62	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4000f67	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4000f6c	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4000f6e	        0x4c890c24	                     mov qword [rsp], r9	        54	gettext.h	FUNCTION_147
0x4000f72	      0xe800000000	                          call 0x4000f77	        54	gettext.h	FUNCTION_147
0x4000f77	          0x4889da	                            mov rdx, rbx	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4000f7a	          0x4889c7	                            mov rdi, rax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4000f7d	      0xbe00000000	                              mov esi, 0	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4000f82	            0x31c0	                            xor eax, eax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4000f84	      0xe800000000	                          call 0x4000f89	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4000f89	        0x4c8b0c24	                     mov r9, qword [rsp]	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4000f8d	      0xe9bcfeffff	                           jmp 0x4000e4e	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4000f92	          0x4c89fe	                            mov rsi, r15	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000f95	      0xe904fdffff	                           jmp 0x4000c9e	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000f9a	    0x41c741100100	                mov dword [r9 + 0x10], 1	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000fa2	          0x4d89f0	                             mov r8, r14	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000fa5	    0x49c741080000	                   mov qword [r9 + 8], 0	      1867	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000fad	        0x49895918	              mov qword [r9 + 0x18], rbx	      1868	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000fb1	          0x4929d8	                             sub r8, rbx	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000fb4	        0x45894120	              mov dword [r9 + 0x20], r8d	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000fb8	      0xe944ffffff	                           jmp 0x4000f01	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000fbd	          0x4889d8	                            mov rax, rbx	      1835	sequencer.c	FUNCTION_53
0x4000fc0	      0xba00000000	                              mov edx, 0	      1859	sequencer.c	FUNCTION_53	IF_9
0x4000fc5	            0xeb1b	                           jmp 0x4000fe2	      1859	sequencer.c	FUNCTION_53	IF_9
0x4000fc7	    0x660f1f840000	                    nop word [rax + rax]	      1859	sequencer.c	FUNCTION_53	IF_9
0x4000fd0	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4000fd4	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4000fd8	        0x403a70ff	                 cmp sil, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4000fdc	     0xf8503010000	                           jne 0x40010e5	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4000fe2	           0xfb632	                   movzx esi, byte [rdx]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4000fe5	          0x4084f6	                           test sil, sil	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4000fe8	            0x75e6	                           jne 0x4000fd0	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4000fea	           0xfbe30	                   movsx esi, byte [rax]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000fed	          0x83fe20	                           cmp esi, 0x20	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000ff0	            0x89f2	                            mov edx, esi	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000ff2	            0x7409	                            je 0x4000ffd	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000ff4	          0x83fe09	                              cmp esi, 9	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000ff7	     0xf853d010000	                           jne 0x400113a	      1039	string2.h	FUNCTION_211	WHILE_1
0x4000ffd	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001001	           0xfbe30	                   movsx esi, byte [rax]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001004	          0x4889c3	                            mov rbx, rax	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001007	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_211	WHILE_1
0x400100b	          0x83fe09	                              cmp esi, 9	      1039	string2.h	FUNCTION_211	WHILE_1
0x400100e	            0x89f2	                            mov edx, esi	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001010	            0x74ef	                            je 0x4001001	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001012	          0x83fe20	                           cmp esi, 0x20	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001015	            0x74ea	                            je 0x4001001	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001017	      0xe938fdffff	                           jmp 0x4000d54	      1039	string2.h	FUNCTION_211	WHILE_1
0x400101c	           0xfbec2	                           movsx eax, dl	      1039	string2.h	FUNCTION_211	WHILE_1
0x400101f	          0x83f820	                           cmp eax, 0x20	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001022	        0x410f94c3	                               sete r11b	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001026	          0x83f809	                              cmp eax, 9	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001029	           0xf94c0	                                 sete al	      1039	string2.h	FUNCTION_211	WHILE_1
0x400102c	          0x4109c3	                            or r11d, eax	      1039	string2.h	FUNCTION_211	WHILE_1
0x400102f	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4001034	        0x41c60200	                       mov byte [r10], 0	      1876	sequencer.c	FUNCTION_53
0x4001038	          0x4889df	                            mov rdi, rbx	      1877	sequencer.c	FUNCTION_53	CALL_8
0x400103b	      0x44885c241f	             mov byte [rsp + 0x1f], r11b	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4001040	        0x8854241e	               mov byte [rsp + 0x1e], dl	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4001044	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4001049	      0x4c89542408	                mov qword [rsp + 8], r10	      1876	sequencer.c	FUNCTION_53
0x400104e	      0xe800000000	                          call 0x4001053	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4001053	    0x440fb65c241f	          movzx r11d, byte [rsp + 0x1f] 	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001059	       0xfb654241e	           movzx edx, byte [rsp + 0x1e] 	      1878	sequencer.c	FUNCTION_53
0x400105e	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1878	sequencer.c	FUNCTION_53
0x4001063	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001068	          0x4584db	                         test r11b, r11b	      1039	string2.h	FUNCTION_211	WHILE_1
0x400106b	          0x418812	                      mov byte [r10], dl	      1878	sequencer.c	FUNCTION_53
0x400106e	     0xf8458fdffff	                            je 0x4000dcc	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001074	        0x498d5201	                      lea rdx, [r10 + 1]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001078	     0xf1f84000000	                   nop dword [rax + rax]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001080	           0xfbe32	                   movsx esi, byte [rdx]	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001083	          0x4989d2	                            mov r10, rdx	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001086	        0x4883c201	                              add rdx, 1	      1039	string2.h	FUNCTION_211	WHILE_1
0x400108a	          0x83fe20	                           cmp esi, 0x20	      1039	string2.h	FUNCTION_211	WHILE_1
0x400108d	            0x74f1	                            je 0x4001080	      1039	string2.h	FUNCTION_211	WHILE_1
0x400108f	          0x83fe09	                              cmp esi, 9	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001092	            0x74ec	                            je 0x4001080	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001094	      0xe933fdffff	                           jmp 0x4000dcc	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001099	        0x48c1e004	                              shl rax, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x400109d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40010a2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40010a7	    0x488b98000000	                    mov rbx, qword [rax]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x40010ae	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40010b0	      0xe800000000	                          call 0x40010b5	        54	gettext.h	FUNCTION_147
0x40010b5	          0x4889c7	                            mov rdi, rax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x40010b8	            0x31c0	                            xor eax, eax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x40010ba	          0x4889de	                            mov rsi, rbx	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x40010bd	      0xe800000000	                          call 0x40010c2	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x40010c2	      0xb8ffffffff	                     mov eax, 0xffffffff	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x40010c7	      0xe96afeffff	                           jmp 0x4000f36	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x40010cc	    0x49c741080000	                   mov qword [r9 + 8], 0	      1841	sequencer.c	FUNCTION_53	IF_5
0x40010d4	        0x4d897118	              mov qword [r9 + 0x18], r14	      1842	sequencer.c	FUNCTION_53	IF_5
0x40010d8	    0x41c741200000	                mov dword [r9 + 0x20], 0	      1843	sequencer.c	FUNCTION_53	IF_5
0x40010e0	      0xe91cfeffff	                           jmp 0x4000f01	      1843	sequencer.c	FUNCTION_53	IF_5
0x40010e5	          0x4889d8	                            mov rax, rbx	      1835	sequencer.c	FUNCTION_53
0x40010e8	      0xba00000000	                              mov edx, 0	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40010ed	            0xeb13	                           jmp 0x4001102	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40010ef	              0x90	                                     nop	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40010f0	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40010f4	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40010f8	        0x403a70ff	                 cmp sil, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x40010fc	     0xf8598feffff	                           jne 0x4000f9a	       488	git-compat-util.h	FUNCTION_172	DO_1
0x4001102	           0xfb632	                   movzx esi, byte [rdx]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4001105	          0x4084f6	                           test sil, sil	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x4001108	            0x75e6	                           jne 0x40010f0	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400110a	           0xfbe10	                   movsx edx, byte [rax]	      1039	string2.h	FUNCTION_211	WHILE_1
0x400110d	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001110	            0x7405	                            je 0x4001117	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001112	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001115	            0x7518	                           jne 0x400112f	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001117	        0x488d5001	                      lea rdx, [rax + 1]	      1039	string2.h	FUNCTION_211	WHILE_1
0x400111b	           0xfbe32	                   movsx esi, byte [rdx]	      1039	string2.h	FUNCTION_211	WHILE_1
0x400111e	          0x4889d0	                            mov rax, rdx	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001121	        0x4883c201	                              add rdx, 1	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001125	          0x83fe20	                           cmp esi, 0x20	      1039	string2.h	FUNCTION_211	WHILE_1
0x4001128	            0x74f1	                            je 0x400111b	      1039	string2.h	FUNCTION_211	WHILE_1
0x400112a	          0x83fe09	                              cmp esi, 9	      1039	string2.h	FUNCTION_211	WHILE_1
0x400112d	            0x74ec	                            je 0x400111b	      1039	string2.h	FUNCTION_211	WHILE_1
0x400112f	    0x41c741100100	                mov dword [r9 + 0x10], 1	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x4001137	           0xfb610	                   movzx edx, byte [rax]	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x400113a	          0x4889c3	                            mov rbx, rax	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x400113d	      0xe912fcffff	                           jmp 0x4000d54	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x4001142	      0xbf00000000	                              mov edi, 0	        58	sequencer.c	CALL_9
0x4001147	      0xe800000000	                          call 0x400114c	        58	sequencer.c	CALL_9
0x400114c	    0x488905000000	            mov qword [0x04001153], rax 	        58	sequencer.c	CALL_9
0x4001153	      0xe99cfaffff	                           jmp 0x4000bf4	        58	sequencer.c	CALL_9
0x4001158	            0x31c0	                            xor eax, eax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x400115a	      0xe9d7fdffff	                           jmp 0x4000f36	      1894	sequencer.c	FUNCTION_54	CALL_2
0x400115f	      0xe800000000	                          call 0x4001164	      1922	sequencer.c	FUNCTION_54
0x4001164	           0xfbec2	                           movsx eax, dl	      1922	sequencer.c	FUNCTION_54
0x4001167	          0x4989da	                            mov r10, rbx	       975	string2.h	FUNCTION_209	WHILE_1
0x400116a	          0x83f809	                              cmp eax, 9	       975	string2.h	FUNCTION_209	WHILE_1
0x400116d	        0x410f94c3	                               sete r11b	       975	string2.h	FUNCTION_209	WHILE_1
0x4001171	          0x83f820	                           cmp eax, 0x20	       975	string2.h	FUNCTION_209	WHILE_1
0x4001174	           0xf94c0	                                 sete al	       975	string2.h	FUNCTION_209	WHILE_1
0x4001177	          0x4109c3	                            or r11d, eax	       975	string2.h	FUNCTION_209	WHILE_1
0x400117a	      0xe9b0feffff	                           jmp 0x400102f	       975	string2.h	FUNCTION_209	WHILE_1
0x400117f	      0xbf00000000	                              mov edi, 0	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4001184	            0x31c0	                            xor eax, eax	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4001186	      0xe800000000	                          call 0x400118b	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x400118b	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4001190	          0xc60300	                       mov byte [rbx], 0	      1876	sequencer.c	FUNCTION_53
0x4001193	          0x4889df	                            mov rdi, rbx	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4001196	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1877	sequencer.c	FUNCTION_53	CALL_8
0x400119b	      0xe800000000	                          call 0x40011a0	      1877	sequencer.c	FUNCTION_53	CALL_8
0x40011a0	          0xc60300	                       mov byte [rbx], 0	      1878	sequencer.c	FUNCTION_53
0x40011a3	          0x4989da	                            mov r10, rbx	      1878	sequencer.c	FUNCTION_53
0x40011a6	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1878	sequencer.c	FUNCTION_53
0x40011ab	      0xe91cfcffff	                           jmp 0x4000dcc	      1878	sequencer.c	FUNCTION_53
write_message	WHILE,0:IF,4:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,10	89
0x4002710	            0x4156	                                push r14	       368	sequencer.c	FUNCTION_14
0x4002712	            0x4155	                                push r13	       368	sequencer.c	FUNCTION_14
0x4002714	          0x4189ce	                           mov r14d, ecx	       368	sequencer.c	FUNCTION_14
0x4002717	            0x4154	                                push r12	       368	sequencer.c	FUNCTION_14
0x4002719	              0x55	                                push rbp	       368	sequencer.c	FUNCTION_14
0x400271a	          0x4889d5	                            mov rbp, rdx	       368	sequencer.c	FUNCTION_14
0x400271d	              0x53	                                push rbx	       368	sequencer.c	FUNCTION_14
0x400271e	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_231	CALL_1
0x4002720	            0x31d2	                            xor edx, edx	       175	lockfile.h	FUNCTION_231	CALL_1
0x4002722	          0x4989fc	                            mov r12, rdi	       368	sequencer.c	FUNCTION_14
0x4002725	          0x4989f5	                            mov r13, rsi	       368	sequencer.c	FUNCTION_14
0x4002728	          0x4889ee	                            mov rsi, rbp	       175	lockfile.h	FUNCTION_231	CALL_1
0x400272b	        0x4883ec10	                           sub rsp, 0x10	       368	sequencer.c	FUNCTION_14
0x400272f	          0x4889e7	                            mov rdi, rsp	       175	lockfile.h	FUNCTION_231	CALL_1
0x4002732	    0x48c704240000	                      mov qword [rsp], 0	       369	sequencer.c	FUNCTION_14
0x400273a	    0x64488b042528	                mov rax, qword fs:[0x28]	       368	sequencer.c	FUNCTION_14
0x4002743	      0x4889442408	                mov qword [rsp + 8], rax	       368	sequencer.c	FUNCTION_14
0x4002748	            0x31c0	                            xor eax, eax	       368	sequencer.c	FUNCTION_14
0x400274a	      0xe800000000	                          call 0x400274f	       175	lockfile.h	FUNCTION_231	CALL_1
0x400274f	            0x85c0	                           test eax, eax	       372	sequencer.c	FUNCTION_14	IF_1
0x4002751	     0xf88a1000000	                            js 0x40027f8	       372	sequencer.c	FUNCTION_14	IF_1
0x4002757	          0x4c89ea	                            mov rdx, r13	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x400275a	          0x4c89e6	                            mov rsi, r12	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x400275d	            0x89c7	                            mov edi, eax	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x400275f	            0x89c3	                            mov ebx, eax	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4002761	      0xe800000000	                          call 0x4002766	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4002766	          0x4885c0	                           test rax, rax	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4002769	     0xf88b1000000	                            js 0x4002820	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x400276f	          0x4585f6	                         test r14d, r14d	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x4002772	            0x753c	                           jne 0x40027b0	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x4002774	          0x4889e7	                            mov rdi, rsp	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x4002777	      0xe800000000	                          call 0x400277c	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x400277c	            0x85c0	                           test eax, eax	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x400277e	     0xf88a8000000	                            js 0x400282c	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x4002784	            0x31c0	                            xor eax, eax	       387	sequencer.c	FUNCTION_14
0x4002786	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       388	sequencer.c	FUNCTION_14
0x400278b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       388	sequencer.c	FUNCTION_14
0x4002794	     0xf85ba000000	                           jne 0x4002854	       388	sequencer.c	FUNCTION_14
0x400279a	        0x4883c410	                           add rsp, 0x10	       388	sequencer.c	FUNCTION_14
0x400279e	              0x5b	                                 pop rbx	       388	sequencer.c	FUNCTION_14
0x400279f	              0x5d	                                 pop rbp	       388	sequencer.c	FUNCTION_14
0x40027a0	            0x415c	                                 pop r12	       388	sequencer.c	FUNCTION_14
0x40027a2	            0x415d	                                 pop r13	       388	sequencer.c	FUNCTION_14
0x40027a4	            0x415e	                                 pop r14	       388	sequencer.c	FUNCTION_14
0x40027a6	              0xc3	                                     ret	       388	sequencer.c	FUNCTION_14
0x40027a7	    0x660f1f840000	                    nop word [rax + rax]	       388	sequencer.c	FUNCTION_14
0x40027b0	      0xba01000000	                              mov edx, 1	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40027b5	      0xbe00000000	                              mov esi, 0	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40027ba	            0x89df	                            mov edi, ebx	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40027bc	      0xe800000000	                          call 0x40027c1	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40027c1	          0x4885c0	                           test rax, rax	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40027c4	            0x79ae	                           jns 0x4002774	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40027c6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40027cb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40027d0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40027d2	      0xe800000000	                          call 0x40027d7	        54	gettext.h	FUNCTION_147
0x40027d7	          0x4889ee	                            mov rsi, rbp	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40027da	          0x4889c7	                            mov rdi, rax	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40027dd	            0x31c0	                            xor eax, eax	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40027df	      0xe800000000	                          call 0x40027e4	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40027e4	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_240	CALL_1
0x40027e7	      0xe800000000	                          call 0x40027ec	       304	lockfile.h	FUNCTION_240	CALL_1
0x40027ec	      0xb8ffffffff	                     mov eax, 0xffffffff	       382	sequencer.c	FUNCTION_14	IF_3
0x40027f1	            0xeb93	                           jmp 0x4002786	       382	sequencer.c	FUNCTION_14	IF_3
0x40027f3	       0xf1f440000	                   nop dword [rax + rax]	       382	sequencer.c	FUNCTION_14	IF_3
0x40027f8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40027fd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4002802	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4002804	      0xe800000000	                          call 0x4002809	        54	gettext.h	FUNCTION_147
0x4002809	          0x4889ee	                            mov rsi, rbp	       373	sequencer.c	FUNCTION_14	CALL_2
0x400280c	          0x4889c7	                            mov rdi, rax	       373	sequencer.c	FUNCTION_14	CALL_2
0x400280f	            0x31c0	                            xor eax, eax	       373	sequencer.c	FUNCTION_14	CALL_2
0x4002811	      0xe800000000	                          call 0x4002816	       373	sequencer.c	FUNCTION_14	CALL_2
0x4002816	      0xb8ffffffff	                     mov eax, 0xffffffff	       373	sequencer.c	FUNCTION_14	CALL_2
0x400281b	      0xe966ffffff	                           jmp 0x4002786	       373	sequencer.c	FUNCTION_14	CALL_2
0x4002820	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4002825	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400282a	            0xeba4	                           jmp 0x40027d0	        54	gettext.h	FUNCTION_147
0x400282c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4002831	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4002836	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4002838	      0xe800000000	                          call 0x400283d	        54	gettext.h	FUNCTION_147
0x400283d	          0x4889ee	                            mov rsi, rbp	       385	sequencer.c	FUNCTION_14	CALL_10
0x4002840	          0x4889c7	                            mov rdi, rax	       385	sequencer.c	FUNCTION_14	CALL_10
0x4002843	            0x31c0	                            xor eax, eax	       385	sequencer.c	FUNCTION_14	CALL_10
0x4002845	      0xe800000000	                          call 0x400284a	       385	sequencer.c	FUNCTION_14	CALL_10
0x400284a	      0xb8ffffffff	                     mov eax, 0xffffffff	       385	sequencer.c	FUNCTION_14	CALL_10
0x400284f	      0xe932ffffff	                           jmp 0x4002786	       385	sequencer.c	FUNCTION_14	CALL_10
0x4002854	      0xe800000000	                          call 0x4002859	       388	sequencer.c	FUNCTION_14
commit_post_rewrite	WHILE,0:IF,1:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,4	87
0x40041c0	            0x4154	                                push r12	       914	sequencer.c	FUNCTION_32
0x40041c2	              0x55	                                push rbp	       914	sequencer.c	FUNCTION_32
0x40041c3	          0x4889fd	                            mov rbp, rdi	       914	sequencer.c	FUNCTION_32
0x40041c6	              0x53	                                push rbx	       914	sequencer.c	FUNCTION_32
0x40041c7	      0xbf00000000	                              mov edi, 0	       917	sequencer.c	FUNCTION_32	CALL_1
0x40041cc	          0x4989f4	                            mov r12, rsi	       914	sequencer.c	FUNCTION_32
0x40041cf	    0x4881eca00000	                           sub rsp, 0xa0	       914	sequencer.c	FUNCTION_32
0x40041d6	    0x64488b042528	                mov rax, qword fs:[0x28]	       914	sequencer.c	FUNCTION_32
0x40041df	    0x488984249800	             mov qword [rsp + 0x98], rax	       914	sequencer.c	FUNCTION_32
0x40041e7	            0x31c0	                            xor eax, eax	       914	sequencer.c	FUNCTION_32
0x40041e9	      0xe800000000	                          call 0x40041ee	       917	sequencer.c	FUNCTION_32	CALL_1
0x40041ee	          0x4885c0	                           test rax, rax	       918	sequencer.c	FUNCTION_32	IF_1
0x40041f1	     0xf8451010000	                            je 0x4004348	       918	sequencer.c	FUNCTION_32	IF_1
0x40041f7	        0x4883c504	                              add rbp, 4	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x40041fb	          0x4889c3	                            mov rbx, rax	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x40041fe	          0x4889c7	                            mov rdi, rax	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4004201	          0x4889ee	                            mov rsi, rbp	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4004204	          0x4c89e2	                            mov rdx, r12	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4004207	      0xe800000000	                          call 0x400420c	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x400420c	      0xbe00000000	                              mov esi, 0	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4004211	          0x4889df	                            mov rdi, rbx	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4004214	      0xe800000000	                          call 0x4004219	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4004219	      0x488d5c2420	                   lea rbx, [rsp + 0x20]	       884	sequencer.c	FUNCTION_31
0x400421e	            0x31c0	                            xor eax, eax	       884	sequencer.c	FUNCTION_31
0x4004220	      0xb90c000000	                            mov ecx, 0xc	       884	sequencer.c	FUNCTION_31
0x4004225	    0x48c704240000	                      mov qword [rsp], 0	       887	sequencer.c	FUNCTION_31
0x400422d	    0x48c744240800	                  mov qword [rsp + 8], 0	       887	sequencer.c	FUNCTION_31
0x4004236	          0x4889df	                            mov rdi, rbx	       884	sequencer.c	FUNCTION_31
0x4004239	    0x48c744241000	               mov qword [rsp + 0x10], 0	       887	sequencer.c	FUNCTION_31
0x4004242	          0xf348ab	              rep stosq qword [rdi], rax	       884	sequencer.c	FUNCTION_31
0x4004245	      0xbf00000000	                              mov edi, 0	       889	sequencer.c	FUNCTION_31	CALL_1
0x400424a	    0x48c744242800	               mov qword [rsp + 0x28], 0	       884	sequencer.c	FUNCTION_31
0x4004253	    0x48c744243800	               mov qword [rsp + 0x38], 0	       884	sequencer.c	FUNCTION_31
0x400425c	      0xe800000000	                          call 0x4004261	       889	sequencer.c	FUNCTION_31	CALL_1
0x4004261	          0x4885c0	                           test rax, rax	       890	sequencer.c	FUNCTION_31	IF_1
0x4004264	    0x488984248000	             mov qword [rsp + 0x80], rax	       889	sequencer.c	FUNCTION_31	CALL_1
0x400426c	            0x743e	                            je 0x40042ac	       890	sequencer.c	FUNCTION_31	IF_1
0x400426e	    0x488d84248000	                   lea rax, [rsp + 0x80]	       896	sequencer.c	FUNCTION_31
0x4004276	          0x4889df	                            mov rdi, rbx	       900	sequencer.c	FUNCTION_31	CALL_2
0x4004279	      0x804c246820	              or byte [rsp + 0x68], 0x20	       898	sequencer.c	FUNCTION_31
0x400427e	    0x48c784248800	               mov qword [rsp + 0x88], 0	       893	sequencer.c	FUNCTION_31
0x400428a	    0x48c784249000	               mov qword [rsp + 0x90], 0	       894	sequencer.c	FUNCTION_31
0x4004296	      0x4889442420	             mov qword [rsp + 0x20], rax	       896	sequencer.c	FUNCTION_31
0x400429b	    0xc744244cffff	     mov dword [rsp + 0x4c], 0xffffffff 	       897	sequencer.c	FUNCTION_31
0x40042a3	      0xe800000000	                          call 0x40042a8	       900	sequencer.c	FUNCTION_31	CALL_2
0x40042a8	            0x85c0	                           test eax, eax	       901	sequencer.c	FUNCTION_31	IF_2
0x40042aa	            0x7424	                            je 0x40042d0	       901	sequencer.c	FUNCTION_31	IF_2
0x40042ac	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       924	sequencer.c	FUNCTION_32
0x40042b4	    0x644833042528	                xor rax, qword fs:[0x28]	       924	sequencer.c	FUNCTION_32
0x40042bd	     0xf858e000000	                           jne 0x4004351	       924	sequencer.c	FUNCTION_32
0x40042c3	    0x4881c4a00000	                           add rsp, 0xa0	       924	sequencer.c	FUNCTION_32
0x40042ca	              0x5b	                                 pop rbx	       924	sequencer.c	FUNCTION_32
0x40042cb	              0x5d	                                 pop rbp	       924	sequencer.c	FUNCTION_32
0x40042cc	            0x415c	                                 pop r12	       924	sequencer.c	FUNCTION_32
0x40042ce	              0xc3	                                     ret	       924	sequencer.c	FUNCTION_32
0x40042cf	              0x90	                                     nop	       924	sequencer.c	FUNCTION_32
0x40042d0	          0x4c89e7	                            mov rdi, r12	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042d3	      0xe800000000	                          call 0x40042d8	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042d8	          0x4889ef	                            mov rdi, rbp	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042db	          0x4989c4	                            mov r12, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042de	      0xe800000000	                          call 0x40042e3	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042e3	          0x4c89e1	                            mov rcx, r12	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042e6	          0x4889c2	                            mov rdx, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042e9	          0x4889e7	                            mov rdi, rsp	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042ec	            0x31c0	                            xor eax, eax	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042ee	      0xbe00000000	                              mov esi, 0	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042f3	      0xe800000000	                          call 0x40042f8	       903	sequencer.c	FUNCTION_31	CALL_5
0x40042f8	      0xbe01000000	                              mov esi, 1	       904	sequencer.c	FUNCTION_31	CALL_6
0x40042fd	      0xbf0d000000	                            mov edi, 0xd	       904	sequencer.c	FUNCTION_31	CALL_6
0x4004302	      0xe800000000	                          call 0x4004307	       904	sequencer.c	FUNCTION_31	CALL_6
0x4004307	      0x488b542408	                mov rdx, qword [rsp + 8]	       905	sequencer.c	FUNCTION_31	CALL_7
0x400430c	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       905	sequencer.c	FUNCTION_31	CALL_7
0x4004311	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	       905	sequencer.c	FUNCTION_31	CALL_7
0x4004315	      0xe800000000	                          call 0x400431a	       905	sequencer.c	FUNCTION_31	CALL_7
0x400431a	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	       906	sequencer.c	FUNCTION_31	CALL_8
0x400431e	      0xe800000000	                          call 0x4004323	       906	sequencer.c	FUNCTION_31	CALL_8
0x4004323	          0x4889e7	                            mov rdi, rsp	       907	sequencer.c	FUNCTION_31	CALL_9
0x4004326	      0xe800000000	                          call 0x400432b	       907	sequencer.c	FUNCTION_31	CALL_9
0x400432b	      0xbf0d000000	                            mov edi, 0xd	       908	sequencer.c	FUNCTION_31	CALL_10
0x4004330	      0xe800000000	                          call 0x4004335	       908	sequencer.c	FUNCTION_31	CALL_10
0x4004335	          0x4889df	                            mov rdi, rbx	       909	sequencer.c	FUNCTION_31	CALL_11
0x4004338	      0xe800000000	                          call 0x400433d	       909	sequencer.c	FUNCTION_31	CALL_11
0x400433d	      0xe96affffff	                           jmp 0x40042ac	       924	sequencer.c	FUNCTION_32
0x4004342	    0x660f1f440000	                    nop word [rax + rax]	       924	sequencer.c	FUNCTION_32
0x4004348	        0x4883c504	                              add rbp, 4	       924	sequencer.c	FUNCTION_32
0x400434c	      0xe9c8feffff	                           jmp 0x4004219	       924	sequencer.c	FUNCTION_32
0x4004351	      0xe800000000	                          call 0x4004356	       924	sequencer.c	FUNCTION_32
label_oid	WHILE,0:IF,6:functions,0:SWITCH,0:ELSE,1:DO,0:FOR,2:CALL,23	238
0x4003440	            0x4157	                                push r15	      3589	sequencer.c	FUNCTION_95
0x4003442	            0x4156	                                push r14	      3589	sequencer.c	FUNCTION_95
0x4003444	            0x4155	                                push r13	      3589	sequencer.c	FUNCTION_95
0x4003446	            0x4154	                                push r12	      3589	sequencer.c	FUNCTION_95
0x4003448	          0x4989fd	                            mov r13, rdi	      3589	sequencer.c	FUNCTION_95
0x400344b	              0x55	                                push rbp	      3589	sequencer.c	FUNCTION_95
0x400344c	              0x53	                                push rbx	      3589	sequencer.c	FUNCTION_95
0x400344d	          0x4989f4	                            mov r12, rsi	      3589	sequencer.c	FUNCTION_95
0x4003450	          0x4889fe	                            mov rsi, rdi	      3596	sequencer.c	FUNCTION_95	CALL_1
0x4003453	          0x4889d7	                            mov rdi, rdx	      3596	sequencer.c	FUNCTION_95	CALL_1
0x4003456	          0x4889d3	                            mov rbx, rdx	      3589	sequencer.c	FUNCTION_95
0x4003459	        0x4883ec48	                           sub rsp, 0x48	      3589	sequencer.c	FUNCTION_95
0x400345d	    0x64488b042528	                mov rax, qword fs:[0x28]	      3589	sequencer.c	FUNCTION_95
0x4003466	      0x4889442438	             mov qword [rsp + 0x38], rax	      3589	sequencer.c	FUNCTION_95
0x400346b	            0x31c0	                            xor eax, eax	      3589	sequencer.c	FUNCTION_95
0x400346d	      0xe800000000	                          call 0x4003472	      3596	sequencer.c	FUNCTION_95	CALL_1
0x4003472	          0x4885c0	                           test rax, rax	      3597	sequencer.c	FUNCTION_95	IF_1
0x4003475	            0x7429	                            je 0x40034a0	      3597	sequencer.c	FUNCTION_95	IF_1
0x4003477	        0x4883c028	                           add rax, 0x28	      3598	sequencer.c	FUNCTION_95	IF_1
0x400347b	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      3676	sequencer.c	FUNCTION_95
0x4003480	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3676	sequencer.c	FUNCTION_95
0x4003489	     0xf854a030000	                           jne 0x40037d9	      3676	sequencer.c	FUNCTION_95
0x400348f	        0x4883c448	                           add rsp, 0x48	      3676	sequencer.c	FUNCTION_95
0x4003493	              0x5b	                                 pop rbx	      3676	sequencer.c	FUNCTION_95
0x4003494	              0x5d	                                 pop rbp	      3676	sequencer.c	FUNCTION_95
0x4003495	            0x415c	                                 pop r12	      3676	sequencer.c	FUNCTION_95
0x4003497	            0x415d	                                 pop r13	      3676	sequencer.c	FUNCTION_95
0x4003499	            0x415e	                                 pop r14	      3676	sequencer.c	FUNCTION_95
0x400349b	            0x415f	                                 pop r15	      3676	sequencer.c	FUNCTION_95
0x400349d	              0xc3	                                     ret	      3676	sequencer.c	FUNCTION_95
0x400349e	            0x6690	                                     nop	      3676	sequencer.c	FUNCTION_95
0x40034a0	          0x4d85e4	                           test r12, r12	      3613	sequencer.c	FUNCTION_95	IF_2
0x40034a3	     0xf841f020000	                            je 0x40036c8	      3613	sequencer.c	FUNCTION_95	IF_2
0x40034a9	          0x4c89e7	                            mov rdi, r12	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40034ac	      0xe800000000	                          call 0x40034b1	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40034b1	        0x4883f814	                           cmp rax, 0x14	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40034b5	          0x4889c5	                            mov rbp, rax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40034b8	     0xf84d2010000	                            je 0x4003690	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40034be	        0x4883f801	                              cmp rax, 1	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x40034c2	            0x7507	                           jne 0x40034cb	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x40034c4	      0x41803c2423	                    cmp byte [r12], 0x23	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x40034c9	            0x7432	                            je 0x40034fd	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x40034cb	          0x4c89e7	                            mov rdi, r12	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x40034ce	        0x4c8d7b30	                   lea r15, [rbx + 0x30]	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x40034d2	      0xe800000000	                          call 0x40034d7	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x40034d7	      0x488d742410	                   lea rsi, [rsp + 0x10]	       308	hashmap.h	FUNCTION_196	CALL_2
0x40034dc	          0x4c89e2	                            mov rdx, r12	       308	hashmap.h	FUNCTION_196	CALL_2
0x40034df	          0x4c89ff	                            mov rdi, r15	       308	hashmap.h	FUNCTION_196	CALL_2
0x40034e2	        0x89442418	             mov dword [rsp + 0x18], eax	       248	hashmap.h	FUNCTION_194
0x40034e6	    0x48c744241000	               mov qword [rsp + 0x10], 0	       249	hashmap.h	FUNCTION_194
0x40034ef	      0xe800000000	                          call 0x40034f4	       308	hashmap.h	FUNCTION_196	CALL_2
0x40034f4	          0x4885c0	                           test rax, rax	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x40034f7	     0xf84cf000000	                            je 0x40035cc	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x40034fd	        0x488d4360	                   lea rax, [rbx + 0x60]	      3650	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x4003501	    0x48c743680000	               mov qword [rbx + 0x68], 0	       164	strbuf.h	FUNCTION_108
0x4003509	      0x4889442408	                mov qword [rsp + 8], rax	      3650	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400350e	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_108	IF_2
0x4003512	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x4003518	     0xf8492010000	                            je 0x40036b0	       165	strbuf.h	FUNCTION_108	IF_2
0x400351e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x4003521	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x4003525	          0x4c89e6	                            mov rsi, r12	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x4003528	          0x4889ea	                            mov rdx, rbp	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400352b	    0x41be02000000	                             mov r14d, 2	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x4003531	        0x4c8d6330	                   lea r12, [rbx + 0x30]	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x4003535	      0xe800000000	                          call 0x400353a	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400353a	            0xeb56	                           jmp 0x4003592	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400353c	         0xf1f4000	                         nop dword [rax]	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x4003540	        0xc6042800	                 mov byte [rax + rbp], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x4003544	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x4003549	      0xbe00000000	                              mov esi, 0	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400354e	            0x31c0	                            xor eax, eax	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x4003550	          0x4489f2	                           mov edx, r14d	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x4003553	          0x4d89e7	                            mov r15, r12	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x4003556	      0xe800000000	                          call 0x400355b	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400355b	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	      3659	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_18
0x400355f	          0x4889d7	                            mov rdi, rdx	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x4003562	        0x48891424	                    mov qword [rsp], rdx	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x4003566	      0xe800000000	                          call 0x400356b	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400356b	        0x488b1424	                    mov rdx, qword [rsp]	       308	hashmap.h	FUNCTION_196	CALL_2
0x400356f	      0x488d742410	                   lea rsi, [rsp + 0x10]	       308	hashmap.h	FUNCTION_196	CALL_2
0x4003574	          0x4c89e7	                            mov rdi, r12	       308	hashmap.h	FUNCTION_196	CALL_2
0x4003577	        0x89442418	             mov dword [rsp + 0x18], eax	       248	hashmap.h	FUNCTION_194
0x400357b	    0x48c744241000	               mov qword [rsp + 0x10], 0	       249	hashmap.h	FUNCTION_194
0x4003584	      0xe800000000	                          call 0x4003589	       308	hashmap.h	FUNCTION_196	CALL_2
0x4003589	          0x4885c0	                           test rax, rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400358c	            0x743a	                            je 0x40035c8	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400358e	        0x4183c601	                             add r14d, 1	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x4003592	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       162	strbuf.h	FUNCTION_108	IF_1
0x4003596	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_108	IF_1
0x400359a	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_108	IF_1
0x400359e	          0x4839c5	                            cmp rbp, rax	       162	strbuf.h	FUNCTION_108	IF_1
0x40035a1	     0xf8726020000	                            ja 0x40037cd	       162	strbuf.h	FUNCTION_108	IF_1
0x40035a7	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_108	IF_2
0x40035ab	        0x48896b68	             mov qword [rbx + 0x68], rbp	       164	strbuf.h	FUNCTION_108
0x40035af	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x40035b5	            0x7589	                           jne 0x4003540	       165	strbuf.h	FUNCTION_108	IF_2
0x40035b7	    0x803d00000000	                cmp byte [0x040035be], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x40035be	            0x7484	                            je 0x4003544	       168	strbuf.h	FUNCTION_108	CALL_2
0x40035c0	      0xe800000000	                          call 0x40035c5	       168	strbuf.h	FUNCTION_108	CALL_2
0x40035c5	           0xf1f00	                         nop dword [rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x40035c8	        0x4c8b6370	            mov r12, qword [rbx + 0x70] 	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x40035cc	          0x4c89e7	                            mov rdi, r12	      3667	sequencer.c	FUNCTION_95
0x40035cf	      0xe800000000	                          call 0x40035d4	      3667	sequencer.c	FUNCTION_95
0x40035d4	        0x4883f8ef	             cmp rax, 0xffffffffffffffef	       785	git-compat-util.h	FUNCTION_179	IF_1
0x40035d8	          0x4989c6	                            mov r14, rax	      3667	sequencer.c	FUNCTION_95
0x40035db	     0xf8726020000	                            ja 0x4003807	       785	git-compat-util.h	FUNCTION_179	IF_1
0x40035e1	     0xf840b020000	                            je 0x40037f2	       785	git-compat-util.h	FUNCTION_179	IF_1
0x40035e7	        0x488d7011	                   lea rsi, [rax + 0x11]	      3667	sequencer.c	FUNCTION_95
0x40035eb	      0xbf01000000	                              mov edi, 1	      3667	sequencer.c	FUNCTION_95
0x40035f0	      0xe800000000	                          call 0x40035f5	      3667	sequencer.c	FUNCTION_95
0x40035f5	        0x488d7810	                   lea rdi, [rax + 0x10]	        53	string3.h	FUNCTION_219	CALL_3
0x40035f9	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_219	CALL_3
0x40035fc	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_219	CALL_3
0x40035ff	          0x4889c5	                            mov rbp, rax	      3667	sequencer.c	FUNCTION_95
0x4003602	      0xe800000000	                          call 0x4003607	        53	string3.h	FUNCTION_219	CALL_3
0x4003607	          0x4c89e7	                            mov rdi, r12	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400360a	      0xe800000000	                          call 0x400360f	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400360f	          0x4c89ff	                            mov rdi, r15	      3669	sequencer.c	FUNCTION_95	CALL_21
0x4003612	          0x894508	                mov dword [rbp + 8], eax	       248	hashmap.h	FUNCTION_194
0x4003615	          0x4889ee	                            mov rsi, rbp	      3669	sequencer.c	FUNCTION_95	CALL_21
0x4003618	    0x48c745000000	                      mov qword [rbp], 0	       249	hashmap.h	FUNCTION_194
0x4003620	      0xe800000000	                          call 0x4003625	      3669	sequencer.c	FUNCTION_95	CALL_21
0x4003625	          0x4c89e7	                            mov rdi, r12	      3671	sequencer.c	FUNCTION_95
0x4003628	      0xe800000000	                          call 0x400362d	      3671	sequencer.c	FUNCTION_95
0x400362d	        0x4883f8d7	             cmp rax, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_179	IF_1
0x4003631	          0x4989c7	                            mov r15, rax	      3671	sequencer.c	FUNCTION_95
0x4003634	     0xf87a4010000	                            ja 0x40037de	       785	git-compat-util.h	FUNCTION_179	IF_1
0x400363a	     0xf84b2010000	                            je 0x40037f2	       785	git-compat-util.h	FUNCTION_179	IF_1
0x4003640	        0x488d7029	                   lea rsi, [rax + 0x29]	      3671	sequencer.c	FUNCTION_95
0x4003644	      0xbf01000000	                              mov edi, 1	      3671	sequencer.c	FUNCTION_95
0x4003649	      0xe800000000	                          call 0x400364e	      3671	sequencer.c	FUNCTION_95
0x400364e	        0x488d6828	                   lea rbp, [rax + 0x28]	      3671	sequencer.c	FUNCTION_95
0x4003652	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_219	CALL_3
0x4003655	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_219	CALL_3
0x4003658	          0x4989c6	                            mov r14, rax	      3671	sequencer.c	FUNCTION_95
0x400365b	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_219	CALL_3
0x400365e	      0xe800000000	                          call 0x4003663	        53	string3.h	FUNCTION_219	CALL_3
0x4003663	        0x498b5500	                    mov rdx, qword [r13]	        53	string3.h	FUNCTION_219	CALL_3
0x4003667	          0x4c89f6	                            mov rsi, r14	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400366a	          0x4889df	                            mov rdi, rbx	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400366d	        0x49895610	             mov qword [r14 + 0x10], rdx	        53	string3.h	FUNCTION_219	CALL_3
0x4003671	        0x498b5508	                mov rdx, qword [r13 + 8]	        53	string3.h	FUNCTION_219	CALL_3
0x4003675	        0x49895618	             mov qword [r14 + 0x18], rdx	        53	string3.h	FUNCTION_219	CALL_3
0x4003679	        0x418b5510	            mov edx, dword [r13 + 0x10] 	        53	string3.h	FUNCTION_219	CALL_3
0x400367d	        0x41895620	             mov dword [r14 + 0x20], edx	        53	string3.h	FUNCTION_219	CALL_3
0x4003681	      0xe800000000	                          call 0x4003686	      3673	sequencer.c	FUNCTION_95	CALL_23
0x4003686	          0x4889e8	                            mov rax, rbp	      3675	sequencer.c	FUNCTION_95
0x4003689	      0xe9edfdffff	                           jmp 0x400347b	      3675	sequencer.c	FUNCTION_95
0x400368e	            0x6690	                                     nop	      3675	sequencer.c	FUNCTION_95
0x4003690	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x4003695	          0x4c89e7	                            mov rdi, r12	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x4003698	      0xe800000000	                          call 0x400369d	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400369d	            0x85c0	                           test eax, eax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400369f	     0xf8458feffff	                            je 0x40034fd	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40036a5	      0xe921feffff	                           jmp 0x40034cb	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40036aa	    0x660f1f440000	                    nop word [rax + rax]	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40036b0	    0x803d00000000	                cmp byte [0x040036b7], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x40036b7	     0xf8464feffff	                            je 0x4003521	       168	strbuf.h	FUNCTION_108	CALL_2
0x40036bd	      0xe9fefeffff	                           jmp 0x40035c0	       168	strbuf.h	FUNCTION_108	CALL_2
0x40036c2	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x40036c8	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_108	IF_2
0x40036cc	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      3616	sequencer.c	FUNCTION_95	IF_2
0x40036d0	    0x48c743680000	               mov qword [rbx + 0x68], 0	       164	strbuf.h	FUNCTION_108
0x40036d8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x40036de	     0xf84d7000000	                            je 0x40037bb	       165	strbuf.h	FUNCTION_108	IF_2
0x40036e4	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x40036e7	      0xbe28000000	                           mov esi, 0x28	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x40036ec	        0x4c8d7b30	                   lea r15, [rbx + 0x30]	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x40036f0	      0xe800000000	                          call 0x40036f5	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x40036f5	        0x4c8b6370	            mov r12, qword [rbx + 0x70] 	      3618	sequencer.c	FUNCTION_95	IF_2
0x40036f9	    0x8b1500000000	            mov edx, dword [0x040036ff] 	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x40036ff	          0x4c89ee	                            mov rsi, r13	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x4003702	          0x4c89e7	                            mov rdi, r12	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x4003705	      0xe800000000	                          call 0x400370a	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400370a	          0x4c89e7	                            mov rdi, r12	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400370d	      0xe800000000	                          call 0x4003712	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x4003712	      0x488d742410	                   lea rsi, [rsp + 0x10]	       308	hashmap.h	FUNCTION_196	CALL_2
0x4003717	          0x4c89e2	                            mov rdx, r12	       308	hashmap.h	FUNCTION_196	CALL_2
0x400371a	          0x4c89ff	                            mov rdi, r15	       308	hashmap.h	FUNCTION_196	CALL_2
0x400371d	        0x89442418	             mov dword [rsp + 0x18], eax	       248	hashmap.h	FUNCTION_194
0x4003721	    0x48c744241000	               mov qword [rsp + 0x10], 0	       249	hashmap.h	FUNCTION_194
0x400372a	      0xe800000000	                          call 0x400372f	       308	hashmap.h	FUNCTION_196	CALL_2
0x400372f	          0x4885c0	                           test rax, rax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x4003732	     0xf8494feffff	                            je 0x40035cc	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x4003738	          0x4c89e7	                            mov rdi, r12	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400373b	      0xe800000000	                          call 0x4003740	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x4003740	          0x4c89ee	                            mov rsi, r13	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x4003743	          0x4889c5	                            mov rbp, rax	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x4003746	          0x4c89e7	                            mov rdi, r12	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x4003749	      0xe800000000	                          call 0x400374e	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x400374e	        0x488d4501	                      lea rax, [rbp + 1]	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4003752	        0x4883f827	                           cmp rax, 0x27	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4003756	     0xf8770feffff	                            ja 0x40035cc	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400375c	      0x498d442427	                   lea rax, [r12 + 0x27]	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4003761	        0x4d8d342c	                    lea r14, [r12 + rbp]	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4003765	        0x48890424	                    mov qword [rsp], rax	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4003769	            0xeb17	                           jmp 0x4003782	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400376b	       0xf1f440000	                   nop dword [rax + rax]	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4003770	        0x41886e01	                 mov byte [r14 + 1], bpl	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4003774	        0x4983c601	                              add r14, 1	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4003778	        0x4c393424	                    cmp qword [rsp], r14	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400377c	     0xf844afeffff	                            je 0x40035cc	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4003782	      0x410fb66e01	               movzx ebp, byte [r14 + 1]	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4003787	          0x4c89e7	                            mov rdi, r12	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400378a	      0x41c6460100	                   mov byte [r14 + 1], 0	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400378f	      0xe800000000	                          call 0x4003794	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x4003794	      0x488d742410	                   lea rsi, [rsp + 0x10]	       308	hashmap.h	FUNCTION_196	CALL_2
0x4003799	          0x4c89e2	                            mov rdx, r12	       308	hashmap.h	FUNCTION_196	CALL_2
0x400379c	          0x4c89ff	                            mov rdi, r15	       308	hashmap.h	FUNCTION_196	CALL_2
0x400379f	        0x89442418	             mov dword [rsp + 0x18], eax	       248	hashmap.h	FUNCTION_194
0x40037a3	    0x48c744241000	               mov qword [rsp + 0x10], 0	       249	hashmap.h	FUNCTION_194
0x40037ac	      0xe800000000	                          call 0x40037b1	       308	hashmap.h	FUNCTION_196	CALL_2
0x40037b1	          0x4885c0	                           test rax, rax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x40037b4	            0x75ba	                           jne 0x4003770	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x40037b6	      0xe911feffff	                           jmp 0x40035cc	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x40037bb	    0x803d00000000	                cmp byte [0x040037c2], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x40037c2	     0xf841fffffff	                            je 0x40036e7	       168	strbuf.h	FUNCTION_108	CALL_2
0x40037c8	      0xe9f3fdffff	                           jmp 0x40035c0	       168	strbuf.h	FUNCTION_108	CALL_2
0x40037cd	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_108	CALL_1
0x40037d2	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_108	CALL_1
0x40037d4	      0xe800000000	                          call 0x40037d9	       163	strbuf.h	FUNCTION_108	CALL_1
0x40037d9	      0xe800000000	                          call 0x40037de	      3676	sequencer.c	FUNCTION_95
0x40037de	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x40037e1	      0xbe28000000	                           mov esi, 0x28	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x40037e6	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x40037eb	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x40037ed	      0xe800000000	                          call 0x40037f2	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x40037f2	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x40037f7	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x40037fb	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x4003800	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x4003802	      0xe800000000	                          call 0x4003807	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x4003807	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400380a	      0xbe10000000	                           mov esi, 0x10	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400380f	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x4003814	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x4003816	      0xe800000000	                          call 0x400381b	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
get_author	WHILE,0:IF,1:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,2	21
0x4000390	        0x4883ec18	                           sub rsp, 0x18	       674	sequencer.c	FUNCTION_25
0x4000394	      0xbe00000000	                              mov esi, 0	       678	sequencer.c	FUNCTION_25	CALL_1
0x4000399	          0x4889e2	                            mov rdx, rsp	       678	sequencer.c	FUNCTION_25	CALL_1
0x400039c	    0x64488b042528	                mov rax, qword fs:[0x28]	       674	sequencer.c	FUNCTION_25
0x40003a5	      0x4889442408	                mov qword [rsp + 8], rax	       674	sequencer.c	FUNCTION_25
0x40003aa	            0x31c0	                            xor eax, eax	       674	sequencer.c	FUNCTION_25
0x40003ac	      0xe800000000	                          call 0x40003b1	       678	sequencer.c	FUNCTION_25	CALL_1
0x40003b1	          0x4885c0	                           test rax, rax	       679	sequencer.c	FUNCTION_25	IF_1
0x40003b4	            0x742a	                            je 0x40003e0	       679	sequencer.c	FUNCTION_25	IF_1
0x40003b6	        0x488b3424	                    mov rsi, qword [rsp]	       680	sequencer.c	FUNCTION_25	CALL_2
0x40003ba	          0x4889c7	                            mov rdi, rax	       680	sequencer.c	FUNCTION_25	CALL_2
0x40003bd	      0xe800000000	                          call 0x40003c2	       680	sequencer.c	FUNCTION_25	CALL_2
0x40003c2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       683	sequencer.c	FUNCTION_25
0x40003c7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       683	sequencer.c	FUNCTION_25
0x40003d0	            0x7512	                           jne 0x40003e4	       683	sequencer.c	FUNCTION_25
0x40003d2	        0x4883c418	                           add rsp, 0x18	       683	sequencer.c	FUNCTION_25
0x40003d6	              0xc3	                                     ret	       683	sequencer.c	FUNCTION_25
0x40003d7	    0x660f1f840000	                    nop word [rax + rax]	       683	sequencer.c	FUNCTION_25
0x40003e0	            0x31c0	                            xor eax, eax	       682	sequencer.c	FUNCTION_25
0x40003e2	            0xebde	                           jmp 0x40003c2	       682	sequencer.c	FUNCTION_25
0x40003e4	      0xe800000000	                          call 0x40003e9	       683	sequencer.c	FUNCTION_25
reflog_message	WHILE,0:IF,2:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,7	73
0x4000a60	            0x4154	                                push r12	      2959	sequencer.c	FUNCTION_86
0x4000a62	              0x55	                                push rbp	      2959	sequencer.c	FUNCTION_86
0x4000a63	          0x4989f4	                            mov r12, rsi	      2959	sequencer.c	FUNCTION_86
0x4000a66	              0x53	                                push rbx	      2959	sequencer.c	FUNCTION_86
0x4000a67	          0x4889d5	                            mov rbp, rdx	      2959	sequencer.c	FUNCTION_86
0x4000a6a	    0x4881ecd00000	                           sub rsp, 0xd0	      2959	sequencer.c	FUNCTION_86
0x4000a71	            0x84c0	                             test al, al	      2959	sequencer.c	FUNCTION_86
0x4000a73	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      2959	sequencer.c	FUNCTION_86
0x4000a78	      0x4c89442440	              mov qword [rsp + 0x40], r8	      2959	sequencer.c	FUNCTION_86
0x4000a7d	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      2959	sequencer.c	FUNCTION_86
0x4000a82	            0x7437	                            je 0x4000abb	      2959	sequencer.c	FUNCTION_86
0x4000a84	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	      2959	sequencer.c	FUNCTION_86
0x4000a89	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	      2959	sequencer.c	FUNCTION_86
0x4000a8e	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	      2959	sequencer.c	FUNCTION_86
0x4000a93	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	      2959	sequencer.c	FUNCTION_86
0x4000a9b	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	      2959	sequencer.c	FUNCTION_86
0x4000aa3	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	      2959	sequencer.c	FUNCTION_86
0x4000aab	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	      2959	sequencer.c	FUNCTION_86
0x4000ab3	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	      2959	sequencer.c	FUNCTION_86
0x4000abb	    0x64488b042528	                mov rax, qword fs:[0x28]	      2959	sequencer.c	FUNCTION_86
0x4000ac4	      0x4889442418	             mov qword [rsp + 0x18], rax	      2959	sequencer.c	FUNCTION_86
0x4000ac9	            0x31c0	                            xor eax, eax	      2959	sequencer.c	FUNCTION_86
0x4000acb	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4000ad3	      0x4889442408	                mov qword [rsp + 8], rax	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4000ad8	      0x488d442420	                   lea rax, [rsp + 0x20]	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4000add	    0xc70424180000	                   mov dword [rsp], 0x18	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4000ae4	    0xc74424043000	               mov dword [rsp + 4], 0x30	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4000aec	    0x48c705000000	               mov qword [0x04000af7], 0	       164	strbuf.h	FUNCTION_108
0x4000af7	      0x4889442410	             mov qword [rsp + 0x10], rax	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4000afc	    0x488b05000000	            mov rax, qword [0x04000b03] 	       165	strbuf.h	FUNCTION_108	IF_2
0x4000b03	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x4000b09	     0xf8491000000	                            je 0x4000ba0	       165	strbuf.h	FUNCTION_108	IF_2
0x4000b0f	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x4000b12	            0x8b3f	                    mov edi, dword [rdi]	      2965	sequencer.c	FUNCTION_86	CALL_3
0x4000b14	      0xe8b7fdffff	             call sym.action_name.isra.7	      2965	sequencer.c	FUNCTION_86	CALL_3
0x4000b19	          0x4889c3	                            mov rbx, rax	      2965	sequencer.c	FUNCTION_86	CALL_3
0x4000b1c	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4000b1f	      0xe800000000	                          call 0x4000b24	       279	strbuf.h	FUNCTION_110	CALL_2
0x4000b24	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_110	CALL_2
0x4000b27	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4000b2a	      0xbf00000000	                              mov edi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4000b2f	      0xe800000000	                          call 0x4000b34	       279	strbuf.h	FUNCTION_110	CALL_2
0x4000b34	          0x4d85e4	                           test r12, r12	      2966	sequencer.c	FUNCTION_86	IF_1
0x4000b37	            0x7414	                            je 0x4000b4d	      2966	sequencer.c	FUNCTION_86	IF_1
0x4000b39	          0x4c89e2	                            mov rdx, r12	      2967	sequencer.c	FUNCTION_86	CALL_4
0x4000b3c	      0xbe00000000	                              mov esi, 0	      2967	sequencer.c	FUNCTION_86	CALL_4
0x4000b41	      0xbf00000000	                              mov edi, 0	      2967	sequencer.c	FUNCTION_86	CALL_4
0x4000b46	            0x31c0	                            xor eax, eax	      2967	sequencer.c	FUNCTION_86	CALL_4
0x4000b48	      0xe800000000	                          call 0x4000b4d	      2967	sequencer.c	FUNCTION_86	CALL_4
0x4000b4d	          0x4885ed	                           test rbp, rbp	      2968	sequencer.c	FUNCTION_86	IF_2
0x4000b50	            0x7424	                            je 0x4000b76	      2968	sequencer.c	FUNCTION_86	IF_2
0x4000b52	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_110	CALL_2
0x4000b57	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4000b5c	      0xbf00000000	                              mov edi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4000b61	      0xe800000000	                          call 0x4000b66	       279	strbuf.h	FUNCTION_110	CALL_2
0x4000b66	          0x4889e2	                            mov rdx, rsp	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x4000b69	          0x4889ee	                            mov rsi, rbp	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x4000b6c	      0xbf00000000	                              mov edi, 0	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x4000b71	      0xe800000000	                          call 0x4000b76	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x4000b76	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2975	sequencer.c	FUNCTION_86
0x4000b7b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2975	sequencer.c	FUNCTION_86
0x4000b84	    0x488b05000000	            mov rax, qword [0x04000b8b] 	      2975	sequencer.c	FUNCTION_86
0x4000b8b	            0x7525	                           jne 0x4000bb2	      2975	sequencer.c	FUNCTION_86
0x4000b8d	    0x4881c4d00000	                           add rsp, 0xd0	      2975	sequencer.c	FUNCTION_86
0x4000b94	              0x5b	                                 pop rbx	      2975	sequencer.c	FUNCTION_86
0x4000b95	              0x5d	                                 pop rbp	      2975	sequencer.c	FUNCTION_86
0x4000b96	            0x415c	                                 pop r12	      2975	sequencer.c	FUNCTION_86
0x4000b98	              0xc3	                                     ret	      2975	sequencer.c	FUNCTION_86
0x4000b99	     0xf1f80000000	                         nop dword [rax]	      2975	sequencer.c	FUNCTION_86
0x4000ba0	    0x803d00000000	                cmp byte [0x04000ba7], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x4000ba7	     0xf8465ffffff	                            je 0x4000b12	       168	strbuf.h	FUNCTION_108	CALL_2
0x4000bad	      0xe800000000	                          call 0x4000bb2	       168	strbuf.h	FUNCTION_108	CALL_2
0x4000bb2	      0xe800000000	                          call 0x4000bb7	      2975	sequencer.c	FUNCTION_86
sequencer_pick_revisions	WHILE,0:IF,11:functions,0:SWITCH,0:ELSE,1:DO,0:FOR,1:CALL,24	529
0x4009cc0	            0x4157	                                push r15	      3434	sequencer.c	FUNCTION_92
0x4009cc2	            0x4156	                                push r14	      3434	sequencer.c	FUNCTION_92
0x4009cc4	      0xb90b000000	                            mov ecx, 0xb	      3435	sequencer.c	FUNCTION_92
0x4009cc9	            0x4155	                                push r13	      3434	sequencer.c	FUNCTION_92
0x4009ccb	            0x4154	                                push r12	      3434	sequencer.c	FUNCTION_92
0x4009ccd	          0x4989fd	                            mov r13, rdi	      3434	sequencer.c	FUNCTION_92
0x4009cd0	              0x55	                                push rbp	      3434	sequencer.c	FUNCTION_92
0x4009cd1	              0x53	                                push rbx	      3434	sequencer.c	FUNCTION_92
0x4009cd2	    0x4881ecc80000	                           sub rsp, 0xc8	      3434	sequencer.c	FUNCTION_92
0x4009cd9	    0x64488b042528	                mov rax, qword fs:[0x28]	      3434	sequencer.c	FUNCTION_92
0x4009ce2	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3434	sequencer.c	FUNCTION_92
0x4009cea	            0x31c0	                            xor eax, eax	      3434	sequencer.c	FUNCTION_92
0x4009cec	    0x4983bd800000	               cmp qword [r13 + 0x80], 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x4009cf4	      0x4c8d742440	                   lea r14, [rsp + 0x40]	      3435	sequencer.c	FUNCTION_92
0x4009cf9	          0x4c89f7	                            mov rdi, r14	      3435	sequencer.c	FUNCTION_92
0x4009cfc	          0xf348ab	              rep stosq qword [rdi], rax	      3435	sequencer.c	FUNCTION_92
0x4009cff	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3435	sequencer.c	FUNCTION_92
0x4009d08	     0xf840c080000	                            je 0x400a51a	      3439	sequencer.c	FUNCTION_92	CALL_1
0x4009d0e	          0x4c89ef	                            mov rdi, r13	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x4009d11	      0xe86a93ffff	         call sym.read_and_refresh_cache	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x4009d16	            0x85c0	                           test eax, eax	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x4009d18	     0xf85d2030000	                           jne 0x400a0f0	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x4009d1e	    0x498bbd800000	            mov rdi, qword [r13 + 0x80] 	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d25	        0x448b5708	               mov r10d, dword [rdi + 8]	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d29	          0x4585d2	                         test r10d, r10d	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d2c	            0x746c	                            je 0x4009d9a	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d2e	            0x31db	                            xor ebx, ebx	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d30	            0x31ed	                            xor ebp, ebp	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d32	            0xeb10	                           jmp 0x4009d44	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d34	         0xf1f4000	                         nop dword [rax]	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d38	          0x83c501	                              add ebp, 1	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d3b	        0x4883c320	                           add rbx, 0x20	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d3f	          0x396f08	                cmp dword [rdi + 8], ebp	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d42	            0x7656	                           jbe 0x4009d9a	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d44	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3445	sequencer.c	FUNCTION_92	FOR_1
0x4009d48	      0x4c8b641808	         mov r12, qword [rax + rbx + 8] 	      3445	sequencer.c	FUNCTION_92	FOR_1
0x4009d4d	      0x41803c2400	                       cmp byte [r12], 0	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0x4009d52	            0x74e4	                            je 0x4009d38	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0x4009d54	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x4009d5c	          0x4c89e7	                            mov rdi, r12	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x4009d5f	      0xe800000000	                          call 0x4009d64	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x4009d64	            0x85c0	                           test eax, eax	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x4009d66	     0xf8527040000	                           jne 0x400a193	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x4009d6c	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x4009d74	      0xbe01000000	                              mov esi, 1	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x4009d79	      0xe800000000	                          call 0x4009d7e	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x4009d7e	          0x4885c0	                           test rax, rax	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x4009d81	     0xf842f040000	                            je 0x400a1b6	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x4009d87	    0x498bbd800000	            mov rdi, qword [r13 + 0x80] 	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x4009d8e	          0x83c501	                              add ebp, 1	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d91	        0x4883c320	                           add rbx, 0x20	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d95	          0x396f08	                cmp dword [rdi + 8], ebp	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d98	            0x77aa	                            ja 0x4009d44	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009d9a	        0x837f2801	               cmp dword [rdi + 0x28], 1	      3470	sequencer.c	FUNCTION_92	IF_5
0x4009d9e	     0xf847c030000	                            je 0x400a120	      3470	sequencer.c	FUNCTION_92	IF_5
0x4009da4	        0x418b5500	                    mov edx, dword [r13]	      2165	sequencer.c	FUNCTION_65
0x4009da8	            0x31c0	                            xor eax, eax	      2165	sequencer.c	FUNCTION_65
0x4009daa	          0x83fa01	                              cmp edx, 1	      2165	sequencer.c	FUNCTION_65
0x4009dad	           0xf95c0	                                setne al	      2165	sequencer.c	FUNCTION_65
0x4009db0	          0x4889c5	                            mov rbp, rax	      2165	sequencer.c	FUNCTION_65
0x4009db3	        0x48c1e004	                              shl rax, 4	      2167	sequencer.c	FUNCTION_65
0x4009db7	    0x480500000000	                              add rax, 0	      2167	sequencer.c	FUNCTION_65
0x4009dbd	          0x83fa01	                              cmp edx, 1	      1735	sequencer.c	FUNCTION_49	IF_1
0x4009dc0	        0x488b4008	                mov rax, qword [rax + 8]	      2167	sequencer.c	FUNCTION_65
0x4009dc4	      0x4889442408	                mov qword [rsp + 8], rax	      2167	sequencer.c	FUNCTION_65
0x4009dc9	     0xf849b030000	                            je 0x400a16a	      1735	sequencer.c	FUNCTION_49	IF_1
0x4009dcf	    0x498bbd800000	            mov rdi, qword [r13 + 0x80] 	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x4009dd6	      0xe800000000	                          call 0x4009ddb	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x4009ddb	            0x85c0	                           test eax, eax	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x4009ddd	     0xf852d060000	                           jne 0x400a410	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x4009de3	    0x498bbd800000	            mov rdi, qword [r13 + 0x80] 	      1741	sequencer.c	FUNCTION_49	IF_3
0x4009dea	        0x48833f00	                      cmp qword [rdi], 0	      1741	sequencer.c	FUNCTION_49	IF_3
0x4009dee	     0xf859c000000	                           jne 0x4009e90	      1741	sequencer.c	FUNCTION_49	IF_3
0x4009df4	      0xe908070000	                           jmp 0x400a501	      1741	sequencer.c	FUNCTION_49	IF_3
0x4009df9	     0xf1f80000000	                         nop dword [rax]	      1741	sequencer.c	FUNCTION_49	IF_3
0x4009e00	          0x4c89f7	                            mov rdi, r14	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x4009e03	      0xe8f862ffff	                call sym.append_new_todo	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x4009e08	            0x31f6	                            xor esi, esi	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x4009e0a	          0x4889df	                            mov rdi, rbx	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x4009e0d	          0x4989c7	                            mov r15, rax	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x4009e10	      0xe800000000	                          call 0x4009e15	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x4009e15	          0x4989c4	                            mov r12, rax	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x4009e18	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x4009e1d	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x4009e22	          0x41892f	                    mov dword [r15], ebp	      2179	sequencer.c	FUNCTION_65	WHILE_1
0x4009e25	        0x49895f08	                mov qword [r15 + 8], rbx	      2180	sequencer.c	FUNCTION_65	WHILE_1
0x4009e29	          0x4c89e7	                            mov rdi, r12	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x4009e2c	    0x49c747180000	               mov qword [r15 + 0x18], 0	      2181	sequencer.c	FUNCTION_65	WHILE_1
0x4009e34	    0x41c747200000	               mov dword [r15 + 0x20], 0	      2182	sequencer.c	FUNCTION_65	WHILE_1
0x4009e3c	        0x49894728	             mov qword [r15 + 0x28], rax	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x4009e40	      0xe800000000	                          call 0x4009e45	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x4009e45	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009e4a	    0x8b3500000000	            mov esi, dword [0x04009e50] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4009e50	        0x488d7b04	                      lea rdi, [rbx + 4]	       312	sequencer.c	FUNCTION_10	CALL_1
0x4009e54	          0x4189c7	                           mov r15d, eax	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x4009e57	        0x4c890c24	                     mov qword [rsp], r9	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009e5b	      0xe800000000	                          call 0x4009e60	       312	sequencer.c	FUNCTION_10	CALL_1
0x4009e60	        0x4c8b0c24	                     mov r9, qword [rsp]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009e64	      0x488b542408	                mov rdx, qword [rsp + 8]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009e69	          0x4889c1	                            mov rcx, rax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009e6c	          0x4589f8	                           mov r8d, r15d	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009e6f	      0xbe00000000	                              mov esi, 0	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009e74	          0x4c89f7	                            mov rdi, r14	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009e77	            0x31c0	                            xor eax, eax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009e79	      0xe800000000	                          call 0x4009e7e	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009e7e	          0x4889df	                            mov rdi, rbx	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x4009e81	          0x4c89e6	                            mov rsi, r12	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x4009e84	      0xe800000000	                          call 0x4009e89	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x4009e89	    0x498bbd800000	            mov rdi, qword [r13 + 0x80] 	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x4009e90	      0xe800000000	                          call 0x4009e95	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x4009e95	          0x4885c0	                           test rax, rax	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x4009e98	          0x4889c3	                            mov rbx, rax	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x4009e9b	     0xf855fffffff	                           jne 0x4009e00	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x4009ea1	    0x488b3d000000	            mov rdi, qword [0x04009ea8] 	        38	sequencer.c	CALL_2
0x4009ea8	          0x4885ff	                           test rdi, rdi	        38	sequencer.c	CALL_2
0x4009eab	     0xf84ba040000	                            je 0x400a36b	        38	sequencer.c	CALL_2
0x4009eb1	      0xe800000000	                          call 0x4009eb6	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x4009eb6	            0x85c0	                           test eax, eax	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x4009eb8	     0xf85a4050000	                           jne 0x400a462	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x4009ebe	    0x488b1d000000	            mov rbx, qword [0x04009ec5] 	        38	sequencer.c	CALL_2
0x4009ec5	          0x4885db	                           test rbx, rbx	        38	sequencer.c	CALL_2
0x4009ec8	     0xf8482040000	                            je 0x400a350	        38	sequencer.c	CALL_2
0x4009ece	      0xbeff010000	                          mov esi, 0x1ff	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4009ed3	          0x4889df	                            mov rdi, rbx	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4009ed6	      0xe800000000	                          call 0x4009edb	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4009edb	            0x85c0	                           test eax, eax	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4009edd	     0xf885c050000	                            js 0x400a43f	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4009ee3	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009eeb	      0xbf00000000	                              mov edi, 0	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009ef0	      0xe800000000	                          call 0x4009ef5	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009ef5	            0x85c0	                           test eax, eax	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009ef7	            0x740d	                            je 0x4009f06	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009ef9	        0x458b4500	                    mov r8d, dword [r13]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009efd	          0x4585c0	                           test r8d, r8d	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009f00	     0xf84c7010000	                            je 0x400a0cd	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009f06	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x4009f0e	      0xe800000000	                          call 0x4009f13	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x4009f13	    0x488b35000000	            mov rsi, qword [0x04009f1a] 	        42	sequencer.c	CALL_5
0x4009f1a	          0x4889c5	                            mov rbp, rax	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x4009f1d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2206	sequencer.c	FUNCTION_67
0x4009f26	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2207	sequencer.c	FUNCTION_67
0x4009f2f	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2207	sequencer.c	FUNCTION_67
0x4009f38	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2207	sequencer.c	FUNCTION_67
0x4009f41	          0x4885f6	                           test rsi, rsi	        42	sequencer.c	CALL_5
0x4009f44	     0xf84ae030000	                            je 0x400a2f8	        42	sequencer.c	CALL_5
0x4009f4a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       175	lockfile.h	FUNCTION_231	CALL_1
0x4009f4f	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_231	CALL_1
0x4009f51	            0x31d2	                            xor edx, edx	       175	lockfile.h	FUNCTION_231	CALL_1
0x4009f53	      0xe800000000	                          call 0x4009f58	       175	lockfile.h	FUNCTION_231	CALL_1
0x4009f58	            0x85c0	                           test eax, eax	      2212	sequencer.c	FUNCTION_67	IF_1
0x4009f5a	            0x89c3	                            mov ebx, eax	       175	lockfile.h	FUNCTION_231	CALL_1
0x4009f5c	     0xf88bd040000	                            js 0x400a41f	      2212	sequencer.c	FUNCTION_67	IF_1
0x4009f62	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4009f67	            0x31c0	                            xor eax, eax	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4009f69	          0x4889ea	                            mov rdx, rbp	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4009f6c	      0xbe00000000	                              mov esi, 0	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4009f71	      0xe800000000	                          call 0x4009f76	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4009f76	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4009f7b	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4009f80	            0x89df	                            mov edi, ebx	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4009f82	      0xe800000000	                          call 0x4009f87	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4009f87	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2216	sequencer.c	FUNCTION_67	CALL_6
0x4009f8c	          0x4889c3	                            mov rbx, rax	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4009f8f	      0xe800000000	                          call 0x4009f94	      2216	sequencer.c	FUNCTION_67	CALL_6
0x4009f94	          0x4885db	                           test rbx, rbx	      2217	sequencer.c	FUNCTION_67	IF_2
0x4009f97	     0xf8876030000	                            js 0x400a313	      2217	sequencer.c	FUNCTION_67	IF_2
0x4009f9d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x4009fa2	      0xe800000000	                          call 0x4009fa7	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x4009fa7	            0x85c0	                           test eax, eax	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x4009fa9	     0xf88ee040000	                            js 0x400a49d	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x4009faf	    0x4c8b25000000	            mov r12, qword [0x04009fb6] 	        41	sequencer.c	CALL_4
0x4009fb6	          0x4d85e4	                           test r12, r12	        41	sequencer.c	CALL_4
0x4009fb9	     0xf84c7030000	                            je 0x400a386	        41	sequencer.c	CALL_4
0x4009fbf	        0x418b7d0c	              mov edi, dword [r13 + 0xc]	      2371	sequencer.c	FUNCTION_73	IF_1
0x4009fc3	            0x31ed	                            xor ebp, ebp	      2369	sequencer.c	FUNCTION_73
0x4009fc5	            0x85ff	                           test edi, edi	      2371	sequencer.c	FUNCTION_73	IF_1
0x4009fc7	     0xf85e2020000	                           jne 0x400a2af	      2371	sequencer.c	FUNCTION_73	IF_1
0x4009fcd	        0x418b7504	                mov esi, dword [r13 + 4]	      2373	sequencer.c	FUNCTION_73	IF_2
0x4009fd1	            0x85f6	                           test esi, esi	      2373	sequencer.c	FUNCTION_73	IF_2
0x4009fd3	     0xf85bd020000	                           jne 0x400a296	      2373	sequencer.c	FUNCTION_73	IF_2
0x4009fd9	        0x418b4d10	            mov ecx, dword [r13 + 0x10] 	      2375	sequencer.c	FUNCTION_73	IF_3
0x4009fdd	            0x85c9	                           test ecx, ecx	      2375	sequencer.c	FUNCTION_73	IF_3
0x4009fdf	     0xf8598020000	                           jne 0x400a27d	      2375	sequencer.c	FUNCTION_73	IF_3
0x4009fe5	        0x418b5508	                mov edx, dword [r13 + 8]	      2377	sequencer.c	FUNCTION_73	IF_4
0x4009fe9	            0x85d2	                           test edx, edx	      2377	sequencer.c	FUNCTION_73	IF_4
0x4009feb	     0xf8573020000	                           jne 0x400a264	      2377	sequencer.c	FUNCTION_73	IF_4
0x4009ff1	        0x418b4514	            mov eax, dword [r13 + 0x14] 	      2379	sequencer.c	FUNCTION_73	IF_5
0x4009ff5	            0x85c0	                           test eax, eax	      2379	sequencer.c	FUNCTION_73	IF_5
0x4009ff7	     0xf854e020000	                           jne 0x400a24b	      2379	sequencer.c	FUNCTION_73	IF_5
0x4009ffd	        0x418b552c	            mov edx, dword [r13 + 0x2c] 	      2381	sequencer.c	FUNCTION_73	IF_6
0x400a001	            0x85d2	                           test edx, edx	      2381	sequencer.c	FUNCTION_73	IF_6
0x400a003	     0xf85f3010000	                           jne 0x400a1fc	      2381	sequencer.c	FUNCTION_73	IF_6
0x400a009	        0x498b5540	            mov rdx, qword [r13 + 0x40] 	      2387	sequencer.c	FUNCTION_73	IF_7
0x400a00d	          0x4885d2	                           test rdx, rdx	      2387	sequencer.c	FUNCTION_73	IF_7
0x400a010	            0x740f	                            je 0x400a021	      2387	sequencer.c	FUNCTION_73	IF_7
0x400a012	      0xbe00000000	                              mov esi, 0	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400a017	          0x4c89e7	                            mov rdi, r12	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400a01a	      0xe800000000	                          call 0x400a01f	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400a01f	             0x9c5	                             or ebp, eax	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400a021	        0x498b5530	            mov rdx, qword [r13 + 0x30] 	      2389	sequencer.c	FUNCTION_73	IF_8
0x400a025	          0x4885d2	                           test rdx, rdx	      2389	sequencer.c	FUNCTION_73	IF_8
0x400a028	            0x740f	                            je 0x400a039	      2389	sequencer.c	FUNCTION_73	IF_8
0x400a02a	      0xbe00000000	                              mov esi, 0	      2390	sequencer.c	FUNCTION_73	CALL_11
0x400a02f	          0x4c89e7	                            mov rdi, r12	      2390	sequencer.c	FUNCTION_73	CALL_11
0x400a032	      0xe800000000	                          call 0x400a037	      2390	sequencer.c	FUNCTION_73	CALL_11
0x400a037	             0x9c5	                             or ebp, eax	      2390	sequencer.c	FUNCTION_73	CALL_11
0x400a039	        0x498b4548	            mov rax, qword [r13 + 0x48] 	      2391	sequencer.c	FUNCTION_73	IF_9
0x400a03d	          0x4885c0	                           test rax, rax	      2391	sequencer.c	FUNCTION_73	IF_9
0x400a040	            0x7437	                            je 0x400a079	      2391	sequencer.c	FUNCTION_73	IF_9
0x400a042	      0x49837d5000	               cmp qword [r13 + 0x50], 0	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400a047	            0x7430	                            je 0x400a079	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400a049	            0x31db	                            xor ebx, ebx	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400a04b	            0xeb07	                           jmp 0x400a054	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400a04d	           0xf1f00	                         nop dword [rax]	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400a050	        0x498b4548	            mov rax, qword [r13 + 0x48] 	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400a054	        0x488b14d8	            mov rdx, qword [rax + rbx*8]	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400a058	          0x4531c0	                            xor r8d, r8d	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400a05b	      0xb900000000	                              mov ecx, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400a060	      0xbe00000000	                              mov esi, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400a065	          0x4c89e7	                            mov rdi, r12	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400a068	        0x4883c301	                              add rbx, 1	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400a06c	      0xe800000000	                          call 0x400a071	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400a071	             0x9c5	                             or ebp, eax	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400a073	        0x49395d50	            cmp qword [r13 + 0x50], rbx 	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400a077	            0x77d7	                            ja 0x400a050	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400a079	        0x418b4518	            mov eax, dword [r13 + 0x18] 	      2398	sequencer.c	FUNCTION_73	IF_10
0x400a07d	            0x85c0	                           test eax, eax	      2398	sequencer.c	FUNCTION_73	IF_10
0x400a07f	            0x7420	                            je 0x400a0a1	      2398	sequencer.c	FUNCTION_73	IF_10
0x400a081	          0x83f801	                              cmp eax, 1	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400a084	      0xba00000000	                              mov edx, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400a089	      0xb800000000	                              mov eax, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400a08e	        0x480f45d0	                         cmovne rdx, rax	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400a092	      0xbe00000000	                              mov esi, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400a097	          0x4c89e7	                            mov rdi, r12	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400a09a	      0xe800000000	                          call 0x400a09f	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400a09f	             0x9c5	                             or ebp, eax	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400a0a1	            0x85ed	                           test ebp, ebp	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x400a0a3	            0x754b	                           jne 0x400a0f0	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x400a0a5	      0xe88666ffff	       call sym.update_abort_safety_file	      3498	sequencer.c	FUNCTION_92	CALL_22
0x400a0aa	          0x4c89ee	                            mov rsi, r13	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400a0ad	          0x4c89f7	                            mov rdi, r14	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400a0b0	      0xe86bccffff	                   call sym.pick_commits	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400a0b5	          0x4c89f7	                            mov rdi, r14	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400a0b8	            0x89c3	                            mov ebx, eax	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400a0ba	      0xe800000000	                          call 0x400a0bf	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400a0bf	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1792	sequencer.c	FUNCTION_51
0x400a0c4	      0xe800000000	                          call 0x400a0c9	      1792	sequencer.c	FUNCTION_51
0x400a0c9	            0x89d8	                            mov eax, ebx	      3501	sequencer.c	FUNCTION_92
0x400a0cb	            0xeb28	                           jmp 0x400a0f5	      3501	sequencer.c	FUNCTION_92
0x400a0cd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a0d2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a0d7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400a0d9	      0xe800000000	                          call 0x400a0de	        54	gettext.h	FUNCTION_147
0x400a0de	          0x4889c7	                            mov rdi, rax	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400a0e1	            0x31c0	                            xor eax, eax	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400a0e3	      0xe800000000	                          call 0x400a0e8	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400a0e8	     0xf1f84000000	                   nop dword [rax + rax]	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400a0f0	      0xb8ffffffff	                     mov eax, 0xffffffff	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400a0f5	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      3502	sequencer.c	FUNCTION_92
0x400a0fd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3502	sequencer.c	FUNCTION_92
0x400a106	     0xf8527040000	                           jne 0x400a533	      3502	sequencer.c	FUNCTION_92
0x400a10c	    0x4881c4c80000	                           add rsp, 0xc8	      3502	sequencer.c	FUNCTION_92
0x400a113	              0x5b	                                 pop rbx	      3502	sequencer.c	FUNCTION_92
0x400a114	              0x5d	                                 pop rbp	      3502	sequencer.c	FUNCTION_92
0x400a115	            0x415c	                                 pop r12	      3502	sequencer.c	FUNCTION_92
0x400a117	            0x415d	                                 pop r13	      3502	sequencer.c	FUNCTION_92
0x400a119	            0x415e	                                 pop r14	      3502	sequencer.c	FUNCTION_92
0x400a11b	            0x415f	                                 pop r15	      3502	sequencer.c	FUNCTION_92
0x400a11d	              0xc3	                                     ret	      3502	sequencer.c	FUNCTION_92
0x400a11e	            0x6690	                                     nop	      3502	sequencer.c	FUNCTION_92
0x400a120	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      3471	sequencer.c	FUNCTION_92	IF_5
0x400a124	        0x83781005	               cmp dword [rax + 0x10], 5	      3470	sequencer.c	FUNCTION_92	IF_5
0x400a128	     0xf8576fcffff	                           jne 0x4009da4	      3470	sequencer.c	FUNCTION_92	IF_5
0x400a12e	        0xf6477430	           test byte [rdi + 0x74], 0x30 	      3471	sequencer.c	FUNCTION_92	IF_5
0x400a132	     0xf8490010000	                            je 0x400a2c8	      3471	sequencer.c	FUNCTION_92	IF_5
0x400a138	        0x448b4814	            mov r9d, dword [rax + 0x14] 	      3472	sequencer.c	FUNCTION_92	IF_5
0x400a13c	          0x4585c9	                           test r9d, r9d	      3472	sequencer.c	FUNCTION_92	IF_5
0x400a13f	     0xf845c020000	                            je 0x400a3a1	      3472	sequencer.c	FUNCTION_92	IF_5
0x400a145	            0x31c0	                            xor eax, eax	      2165	sequencer.c	FUNCTION_65
0x400a147	      0x41837d0001	                      cmp dword [r13], 1	      2165	sequencer.c	FUNCTION_65
0x400a14c	           0xf95c0	                                setne al	      2165	sequencer.c	FUNCTION_65
0x400a14f	          0x4889c5	                            mov rbp, rax	      2165	sequencer.c	FUNCTION_65
0x400a152	        0x48c1e004	                              shl rax, 4	      2167	sequencer.c	FUNCTION_65
0x400a156	    0x480500000000	                              add rax, 0	      2167	sequencer.c	FUNCTION_65
0x400a15c	        0x488b4008	                mov rax, qword [rax + 8]	      2167	sequencer.c	FUNCTION_65
0x400a160	      0x4889442408	                mov qword [rsp + 8], rax	      2167	sequencer.c	FUNCTION_65
0x400a165	      0xe965fcffff	                           jmp 0x4009dcf	      2167	sequencer.c	FUNCTION_65
0x400a16a	        0xf6477430	           test byte [rdi + 0x74], 0x30 	      1735	sequencer.c	FUNCTION_49	IF_1
0x400a16e	     0xf855bfcffff	                           jne 0x4009dcf	      1735	sequencer.c	FUNCTION_49	IF_1
0x400a174	         0xfb64777	           movzx eax, byte [rdi + 0x77] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x400a178	            0x89c2	                            mov edx, eax	      1736	sequencer.c	FUNCTION_49	IF_1
0x400a17a	          0x83e0bf	                     and eax, 0xffffffbf	      1736	sequencer.c	FUNCTION_49	IF_1
0x400a17d	          0xc0ea06	                               shr dl, 6	      1736	sequencer.c	FUNCTION_49	IF_1
0x400a180	          0x83e201	                              and edx, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x400a183	          0x83f201	                              xor edx, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x400a186	          0xc1e206	                              shl edx, 6	      1736	sequencer.c	FUNCTION_49	IF_1
0x400a189	             0x9d0	                             or eax, edx	      1736	sequencer.c	FUNCTION_49	IF_1
0x400a18b	          0x884777	               mov byte [rdi + 0x77], al	      1736	sequencer.c	FUNCTION_49	IF_1
0x400a18e	      0xe93cfcffff	                           jmp 0x4009dcf	      1736	sequencer.c	FUNCTION_49	IF_1
0x400a193	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400a195	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a19a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a19f	      0xe800000000	                          call 0x400a1a4	        54	gettext.h	FUNCTION_147
0x400a1a4	          0x4c89e6	                            mov rsi, r12	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400a1a7	          0x4889c7	                            mov rdi, rax	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400a1aa	            0x31c0	                            xor eax, eax	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400a1ac	      0xe800000000	                          call 0x400a1b1	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400a1b1	      0xe93affffff	                           jmp 0x400a0f0	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400a1b6	    0x488b3d000000	            mov rdi, qword [0x0400a1bd] 	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400a1bd	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400a1c5	            0x31d2	                            xor edx, edx	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400a1c7	      0xe800000000	                          call 0x400a1cc	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400a1cc	            0x89c7	                            mov edi, eax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400a1ce	      0xe800000000	                          call 0x400a1d3	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400a1d3	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400a1d5	          0x4889c3	                            mov rbx, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400a1d8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a1dd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a1e2	      0xe800000000	                          call 0x400a1e7	        54	gettext.h	FUNCTION_147
0x400a1e7	          0x4889da	                            mov rdx, rbx	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400a1ea	          0x4889c7	                            mov rdi, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400a1ed	          0x4c89e6	                            mov rsi, r12	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400a1f0	            0x31c0	                            xor eax, eax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400a1f2	      0xe800000000	                          call 0x400a1f7	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400a1f7	      0xe9f4feffff	                           jmp 0x400a0f0	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400a1fc	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x400a201	            0x31c0	                            xor eax, eax	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x400a203	      0xbe00000000	                              mov esi, 0	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x400a208	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x400a211	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x400a21a	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x400a223	      0xe800000000	                          call 0x400a228	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x400a228	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400a22d	          0x4c89e7	                            mov rdi, r12	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400a230	      0xbe00000000	                              mov esi, 0	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400a235	      0xe800000000	                          call 0x400a23a	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400a23a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x400a23f	             0x9c5	                             or ebp, eax	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400a241	      0xe800000000	                          call 0x400a246	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x400a246	      0xe9befdffff	                           jmp 0x400a009	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x400a24b	      0xba00000000	                              mov edx, 0	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400a250	      0xbe00000000	                              mov esi, 0	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400a255	          0x4c89e7	                            mov rdi, r12	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400a258	      0xe800000000	                          call 0x400a25d	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400a25d	             0x9c5	                             or ebp, eax	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400a25f	      0xe999fdffff	                           jmp 0x4009ffd	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400a264	      0xba00000000	                              mov edx, 0	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400a269	      0xbe00000000	                              mov esi, 0	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400a26e	          0x4c89e7	                            mov rdi, r12	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400a271	      0xe800000000	                          call 0x400a276	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400a276	             0x9c5	                             or ebp, eax	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400a278	      0xe974fdffff	                           jmp 0x4009ff1	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400a27d	      0xba00000000	                              mov edx, 0	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400a282	      0xbe00000000	                              mov esi, 0	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400a287	          0x4c89e7	                            mov rdi, r12	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400a28a	      0xe800000000	                          call 0x400a28f	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400a28f	             0x9c5	                             or ebp, eax	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400a291	      0xe94ffdffff	                           jmp 0x4009fe5	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400a296	      0xba00000000	                              mov edx, 0	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400a29b	      0xbe00000000	                              mov esi, 0	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400a2a0	          0x4c89e7	                            mov rdi, r12	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400a2a3	      0xe800000000	                          call 0x400a2a8	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400a2a8	             0x9c5	                             or ebp, eax	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400a2aa	      0xe92afdffff	                           jmp 0x4009fd9	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400a2af	      0xba00000000	                              mov edx, 0	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400a2b4	      0xbe00000000	                              mov esi, 0	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400a2b9	          0x4c89e7	                            mov rdi, r12	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400a2bc	      0xe800000000	                          call 0x400a2c1	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400a2c1	            0x89c5	                            mov ebp, eax	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400a2c3	      0xe905fdffff	                           jmp 0x4009fcd	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400a2c8	        0x418b5500	                    mov edx, dword [r13]	      2165	sequencer.c	FUNCTION_65
0x400a2cc	            0x31c0	                            xor eax, eax	      2165	sequencer.c	FUNCTION_65
0x400a2ce	          0x83fa01	                              cmp edx, 1	      2165	sequencer.c	FUNCTION_65
0x400a2d1	           0xf95c0	                                setne al	      2165	sequencer.c	FUNCTION_65
0x400a2d4	          0x4889c5	                            mov rbp, rax	      2165	sequencer.c	FUNCTION_65
0x400a2d7	        0x48c1e004	                              shl rax, 4	      2167	sequencer.c	FUNCTION_65
0x400a2db	    0x480500000000	                              add rax, 0	      2167	sequencer.c	FUNCTION_65
0x400a2e1	          0x83fa01	                              cmp edx, 1	      1735	sequencer.c	FUNCTION_49	IF_1
0x400a2e4	        0x488b4008	                mov rax, qword [rax + 8]	      2167	sequencer.c	FUNCTION_65
0x400a2e8	      0x4889442408	                mov qword [rsp + 8], rax	      2167	sequencer.c	FUNCTION_65
0x400a2ed	     0xf85dcfaffff	                           jne 0x4009dcf	      1735	sequencer.c	FUNCTION_49	IF_1
0x400a2f3	      0xe97cfeffff	                           jmp 0x400a174	      1735	sequencer.c	FUNCTION_49	IF_1
0x400a2f8	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x400a2fd	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x400a2ff	      0xe800000000	                          call 0x400a304	        42	sequencer.c	CALL_5
0x400a304	          0x4889c6	                            mov rsi, rax	        42	sequencer.c	CALL_5
0x400a307	    0x488905000000	            mov qword [0x0400a30e], rax 	        42	sequencer.c	CALL_5
0x400a30e	      0xe937fcffff	                           jmp 0x4009f4a	        42	sequencer.c	CALL_5
0x400a313	    0x488b1d000000	            mov rbx, qword [0x0400a31a] 	        42	sequencer.c	CALL_5
0x400a31a	          0x4885db	                           test rbx, rbx	        42	sequencer.c	CALL_5
0x400a31d	     0xf84c3010000	                            je 0x400a4e6	        42	sequencer.c	CALL_5
0x400a323	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a328	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400a32a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a32f	      0xe800000000	                          call 0x400a334	        54	gettext.h	FUNCTION_147
0x400a334	          0x4889de	                            mov rsi, rbx	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x400a337	          0x4889c7	                            mov rdi, rax	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x400a33a	            0x31c0	                            xor eax, eax	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x400a33c	      0xe800000000	                          call 0x400a341	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x400a341	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       304	lockfile.h	FUNCTION_240	CALL_1
0x400a346	      0xe800000000	                          call 0x400a34b	       304	lockfile.h	FUNCTION_240	CALL_1
0x400a34b	      0xe9a0fdffff	                           jmp 0x400a0f0	       304	lockfile.h	FUNCTION_240	CALL_1
0x400a350	      0xbf00000000	                              mov edi, 0	        38	sequencer.c	CALL_2
0x400a355	            0x31c0	                            xor eax, eax	        38	sequencer.c	CALL_2
0x400a357	      0xe800000000	                          call 0x400a35c	        38	sequencer.c	CALL_2
0x400a35c	          0x4889c3	                            mov rbx, rax	        38	sequencer.c	CALL_2
0x400a35f	    0x488905000000	            mov qword [0x0400a366], rax 	        38	sequencer.c	CALL_2
0x400a366	      0xe963fbffff	                           jmp 0x4009ece	        38	sequencer.c	CALL_2
0x400a36b	      0xbf00000000	                              mov edi, 0	        38	sequencer.c	CALL_2
0x400a370	            0x31c0	                            xor eax, eax	        38	sequencer.c	CALL_2
0x400a372	      0xe800000000	                          call 0x400a377	        38	sequencer.c	CALL_2
0x400a377	          0x4889c7	                            mov rdi, rax	        38	sequencer.c	CALL_2
0x400a37a	    0x488905000000	            mov qword [0x0400a381], rax 	        38	sequencer.c	CALL_2
0x400a381	      0xe92bfbffff	                           jmp 0x4009eb1	        38	sequencer.c	CALL_2
0x400a386	      0xbf00000000	                              mov edi, 0	        41	sequencer.c	CALL_4
0x400a38b	            0x31c0	                            xor eax, eax	        41	sequencer.c	CALL_4
0x400a38d	      0xe800000000	                          call 0x400a392	        41	sequencer.c	CALL_4
0x400a392	          0x4989c4	                            mov r12, rax	        41	sequencer.c	CALL_4
0x400a395	    0x488905000000	            mov qword [0x0400a39c], rax 	        41	sequencer.c	CALL_4
0x400a39c	      0xe91efcffff	                           jmp 0x4009fbf	        41	sequencer.c	CALL_4
0x400a3a1	      0xe800000000	                          call 0x400a3a6	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400a3a6	            0x85c0	                           test eax, eax	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400a3a8	     0xf858a010000	                           jne 0x400a538	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400a3ae	    0x498bbd800000	            mov rdi, qword [r13 + 0x80] 	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400a3b5	      0xe800000000	                          call 0x400a3ba	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400a3ba	          0x4885c0	                           test rax, rax	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400a3bd	          0x4889c3	                            mov rbx, rax	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400a3c0	     0xf840a010000	                            je 0x400a4d0	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400a3c6	    0x498bbd800000	            mov rdi, qword [r13 + 0x80] 	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400a3cd	      0xe800000000	                          call 0x400a3d2	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400a3d2	          0x4885c0	                           test rax, rax	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400a3d5	     0xf85f5000000	                           jne 0x400a4d0	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400a3db	        0x418b7d00	                    mov edi, dword [r13]	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400a3df	      0xe8ec64ffff	             call sym.action_name.isra.7	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400a3e4	            0x31d2	                            xor edx, edx	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400a3e6	          0x4889c6	                            mov rsi, rax	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400a3e9	      0xbf00000000	                              mov edi, 0	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400a3ee	      0xe800000000	                          call 0x400a3f3	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400a3f3	            0x31ff	                            xor edi, edi	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400a3f5	      0x41837d0001	                      cmp dword [r13], 1	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400a3fa	          0x4c89ea	                            mov rdx, r13	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400a3fd	          0x4889de	                            mov rsi, rbx	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400a400	        0x400f95c7	                               setne dil	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400a404	            0x31c9	                            xor ecx, ecx	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400a406	      0xe8f5abffff	                 call sym.do_pick_commit	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400a40b	      0xe9e5fcffff	                           jmp 0x400a0f5	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_14
0x400a410	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a415	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a41a	      0xe9b8fcffff	                           jmp 0x400a0d7	        54	gettext.h	FUNCTION_147
0x400a41f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400a421	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a426	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a42b	      0xe800000000	                          call 0x400a430	        54	gettext.h	FUNCTION_147
0x400a430	          0x4889c7	                            mov rdi, rax	      2213	sequencer.c	FUNCTION_67	CALL_3
0x400a433	            0x31c0	                            xor eax, eax	      2213	sequencer.c	FUNCTION_67	CALL_3
0x400a435	      0xe800000000	                          call 0x400a43a	      2213	sequencer.c	FUNCTION_67	CALL_3
0x400a43a	      0xe9b1fcffff	                           jmp 0x400a0f0	      2213	sequencer.c	FUNCTION_67	CALL_3
0x400a43f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400a441	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a446	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a44b	      0xe800000000	                          call 0x400a450	        54	gettext.h	FUNCTION_147
0x400a450	          0x4889de	                            mov rsi, rbx	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x400a453	          0x4889c7	                            mov rdi, rax	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x400a456	            0x31c0	                            xor eax, eax	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x400a458	      0xe800000000	                          call 0x400a45d	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x400a45d	      0xe98efcffff	                           jmp 0x400a0f0	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x400a462	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a467	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a46c	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400a46e	      0xe800000000	                          call 0x400a473	        54	gettext.h	FUNCTION_147
0x400a473	          0x4889c7	                            mov rdi, rax	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x400a476	            0x31c0	                            xor eax, eax	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x400a478	      0xe800000000	                          call 0x400a47d	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x400a47d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400a47f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a484	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a489	      0xe800000000	                          call 0x400a48e	        54	gettext.h	FUNCTION_147
0x400a48e	          0x4889c7	                            mov rdi, rax	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x400a491	            0x31c0	                            xor eax, eax	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x400a493	      0xe800000000	                          call 0x400a498	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x400a498	      0xe953fcffff	                           jmp 0x400a0f0	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x400a49d	    0x488b1d000000	            mov rbx, qword [0x0400a4a4] 	        42	sequencer.c	CALL_5
0x400a4a4	          0x4885db	                           test rbx, rbx	        42	sequencer.c	CALL_5
0x400a4a7	     0xf84a9000000	                            je 0x400a556	        42	sequencer.c	CALL_5
0x400a4ad	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400a4af	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a4b4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a4b9	      0xe800000000	                          call 0x400a4be	        54	gettext.h	FUNCTION_147
0x400a4be	          0x4889de	                            mov rsi, rbx	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400a4c1	          0x4889c7	                            mov rdi, rax	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400a4c4	            0x31c0	                            xor eax, eax	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400a4c6	      0xe800000000	                          call 0x400a4cb	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400a4cb	      0xe920fcffff	                           jmp 0x400a0f0	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400a4d0	      0xbf00000000	                              mov edi, 0	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400a4d5	            0x31c0	                            xor eax, eax	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400a4d7	      0xe800000000	                          call 0x400a4dc	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400a4dc	      0xb8ffffffff	                     mov eax, 0xffffffff	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400a4e1	      0xe90ffcffff	                           jmp 0x400a0f5	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400a4e6	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x400a4eb	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x400a4ed	      0xe800000000	                          call 0x400a4f2	        42	sequencer.c	CALL_5
0x400a4f2	          0x4889c3	                            mov rbx, rax	        42	sequencer.c	CALL_5
0x400a4f5	    0x488905000000	            mov qword [0x0400a4fc], rax 	        42	sequencer.c	CALL_5
0x400a4fc	      0xe922feffff	                           jmp 0x400a323	        42	sequencer.c	CALL_5
0x400a501	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x400a506	      0xe8455fffff	                       call sym._.part.6	        42	sequencer.c	CALL_5
0x400a50b	          0x4889c7	                            mov rdi, rax	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400a50e	            0x31c0	                            xor eax, eax	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400a510	      0xe800000000	                          call 0x400a515	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400a515	      0xe9d6fbffff	                           jmp 0x400a0f0	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400a51a	      0xb900000000	                              mov ecx, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400a51f	      0xba6f0d0000	                          mov edx, 0xd6f	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400a524	      0xbe00000000	                              mov esi, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400a529	      0xbf00000000	                              mov edi, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400a52e	      0xe800000000	                          call 0x400a533	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400a533	      0xe800000000	                          call 0x400a538	      3502	sequencer.c	FUNCTION_92
0x400a538	      0xbf00000000	                              mov edi, 0	      3502	sequencer.c	FUNCTION_92
0x400a53d	      0xe80e5fffff	                       call sym._.part.6	      3502	sequencer.c	FUNCTION_92
0x400a542	          0x4889c7	                            mov rdi, rax	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400a545	            0x31c0	                            xor eax, eax	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400a547	      0xe800000000	                          call 0x400a54c	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400a54c	      0xb8ffffffff	                     mov eax, 0xffffffff	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400a551	      0xe99ffbffff	                           jmp 0x400a0f5	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400a556	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x400a55b	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x400a55d	      0xe800000000	                          call 0x400a562	        42	sequencer.c	CALL_5
0x400a562	          0x4889c3	                            mov rbx, rax	        42	sequencer.c	CALL_5
0x400a565	    0x488905000000	            mov qword [0x0400a56c], rax 	        42	sequencer.c	CALL_5
0x400a56c	      0xe93cffffff	                           jmp 0x400a4ad	        42	sequencer.c	CALL_5
rearrange_squash	WHILE,2:IF,16:functions,0:SWITCH,0:ELSE,4:DO,0:FOR,5:CALL,42	486
0x400c1f0	            0x4157	                                push r15	      4289	sequencer.c	FUNCTION_105
0x400c1f2	            0x4156	                                push r14	      4289	sequencer.c	FUNCTION_105
0x400c1f4	            0x4155	                                push r13	      4289	sequencer.c	FUNCTION_105
0x400c1f6	            0x4154	                                push r12	      4289	sequencer.c	FUNCTION_105
0x400c1f8	              0x55	                                push rbp	      4289	sequencer.c	FUNCTION_105
0x400c1f9	              0x53	                                push rbx	      4289	sequencer.c	FUNCTION_105
0x400c1fa	    0x4881ec080100	                          sub rsp, 0x108	      4289	sequencer.c	FUNCTION_105
0x400c201	    0x64488b042528	                mov rax, qword fs:[0x28]	      4289	sequencer.c	FUNCTION_105
0x400c20a	    0x48898424f800	             mov qword [rsp + 0xf8], rax	      4289	sequencer.c	FUNCTION_105
0x400c212	            0x31c0	                            xor eax, eax	      4289	sequencer.c	FUNCTION_105
0x400c214	    0x488b05000000	            mov rax, qword [0x0400c21b] 	        52	sequencer.c	CALL_8
0x400c21b	          0x4885c0	                           test rax, rax	        52	sequencer.c	CALL_8
0x400c21e	      0x4889442428	             mov qword [rsp + 0x28], rax	        52	sequencer.c	CALL_8
0x400c223	     0xf843f070000	                            je 0x400c968	        52	sequencer.c	CALL_8
0x400c229	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      4291	sequencer.c	FUNCTION_105
0x400c231	            0x31c0	                            xor eax, eax	      4291	sequencer.c	FUNCTION_105
0x400c233	      0xb90b000000	                            mov ecx, 0xb	      4291	sequencer.c	FUNCTION_105
0x400c238	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400c23d	          0xf348ab	              rep stosq qword [rdi], rax	      4291	sequencer.c	FUNCTION_105
0x400c240	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400c248	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      4291	sequencer.c	FUNCTION_105
0x400c254	      0xe8e751ffff	      call sym.strbuf_read_file_or_whine	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400c259	          0x4885c0	                           test rax, rax	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400c25c	     0xf88f1070000	                            js 0x400ca53	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400c262	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400c26a	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400c272	      0xe84949ffff	              call sym.parse_insn_buffer	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400c277	            0x85c0	                           test eax, eax	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400c279	     0xf88b0070000	                            js 0x400ca2f	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400c27f	    0x48638c24c000	         movsxd rcx, dword [rsp + 0xc0] 	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400c287	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400c28c	            0x31d2	                            xor edx, edx	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400c28e	      0xbe00000000	                              mov esi, 0	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400c293	    0x48bbffffffff	         movabs rbx, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_180	IF_1
0x400c29d	      0xe800000000	                          call 0x400c2a2	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400c2a2	    0x48639424c000	         movsxd rdx, dword [rsp + 0xc0] 	      4314	sequencer.c	FUNCTION_105
0x400c2aa	          0x4839da	                            cmp rdx, rbx	       795	git-compat-util.h	FUNCTION_180	IF_1
0x400c2ad	     0xf876b070000	                            ja 0x400ca1e	       795	git-compat-util.h	FUNCTION_180	IF_1
0x400c2b3	    0x488d3c950000	                        lea rdi, [rdx*4]	      4314	sequencer.c	FUNCTION_105
0x400c2bb	      0xe800000000	                          call 0x400c2c0	      4314	sequencer.c	FUNCTION_105
0x400c2c0	    0x48639424c000	         movsxd rdx, dword [rsp + 0xc0] 	      4315	sequencer.c	FUNCTION_105
0x400c2c8	          0x4989c5	                            mov r13, rax	      4314	sequencer.c	FUNCTION_105
0x400c2cb	          0x4839da	                            cmp rdx, rbx	       795	git-compat-util.h	FUNCTION_180	IF_1
0x400c2ce	     0xf874a070000	                            ja 0x400ca1e	       795	git-compat-util.h	FUNCTION_180	IF_1
0x400c2d4	    0x488d3c950000	                        lea rdi, [rdx*4]	      4315	sequencer.c	FUNCTION_105
0x400c2dc	      0xe800000000	                          call 0x400c2e1	      4315	sequencer.c	FUNCTION_105
0x400c2e1	    0x48639424c000	         movsxd rdx, dword [rsp + 0xc0] 	      4316	sequencer.c	FUNCTION_105
0x400c2e9	        0x48890424	                    mov qword [rsp], rax	      4315	sequencer.c	FUNCTION_105
0x400c2ed	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_180	IF_1
0x400c2f7	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_180	IF_1
0x400c2fa	     0xf870d070000	                            ja 0x400ca0d	       795	git-compat-util.h	FUNCTION_180	IF_1
0x400c300	    0x488d3cd50000	                        lea rdi, [rdx*8]	      4316	sequencer.c	FUNCTION_105
0x400c308	            0x31db	                            xor ebx, ebx	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c30a	            0x31ed	                            xor ebp, ebp	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c30c	      0xe800000000	                          call 0x400c311	      4316	sequencer.c	FUNCTION_105
0x400c311	    0x8bbc24c00000	            mov edi, dword [rsp + 0xc0] 	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c318	      0x4889442408	                mov qword [rsp + 8], rax	      4316	sequencer.c	FUNCTION_105
0x400c31d	    0xc74424200000	               mov dword [rsp + 0x20], 0	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c325	            0x85ff	                           test edi, edi	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c327	     0xf8ed3050000	                           jle 0x400c900	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c32d	        0x4c8d245b	                  lea r12, [rbx + rbx*2]	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c331	        0x488b0424	                    mov rax, qword [rsp]	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400c335	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400c33e	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400c347	    0x48c744246000	               mov qword [rsp + 0x60], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400c350	        0x49c1e402	                              shl r12, 2	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400c354	          0x4d89e6	                            mov r14, r12	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400c357	    0x4c03b424b800	             add r14, qword [rsp + 0xb8]	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400c35f	    0xc70418ffffff	      mov dword [rax + rbx], 0xffffffff 	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400c366	    0x41c7441d00ff	      mov dword [r13 + rbx], 0xffffffff 	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400c36f	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400c373	          0x4885ff	                           test rdi, rdi	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400c376	     0xf8461030000	                            je 0x400c6dd	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400c37c	          0x418b06	                    mov eax, dword [r14]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400c37f	          0x83f80b	                            cmp eax, 0xb	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400c382	     0xf8455030000	                            je 0x400c6dd	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400c388	          0x83e804	                              sub eax, 4	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400c38b	          0x83f801	                              cmp eax, 1	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400c38e	     0xf8673050000	                           jbe 0x400c907	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400c394	        0x4c897718	             mov qword [rdi + 0x18], r14	      4336	sequencer.c	FUNCTION_105	FOR_1
0x400c398	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_117	CALL_1
0x400c39a	      0xe800000000	                          call 0x400c39f	        75	commit.h	FUNCTION_117	CALL_1
0x400c39f	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400c3a3	            0x31f6	                            xor esi, esi	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400c3a5	      0xe800000000	                          call 0x400c3aa	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400c3aa	      0x488d742430	                   lea rsi, [rsp + 0x30]	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400c3af	          0x4889c7	                            mov rdi, rax	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400c3b2	          0x4989c7	                            mov r15, rax	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400c3b5	      0xe800000000	                          call 0x400c3ba	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400c3ba	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400c3bf	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400c3c4	      0xba00000000	                              mov edx, 0	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400c3c9	      0xe800000000	                          call 0x400c3ce	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400c3ce	      0x488d742438	                   lea rsi, [rsp + 0x38]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400c3d3	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400c3d8	      0xe800000000	                          call 0x400c3dd	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400c3dd	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400c3e2	          0x4c89fe	                            mov rsi, r15	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400c3e5	        0x4889045f	            mov qword [rdi + rbx*2], rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400c3e9	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400c3ed	      0x4889442430	             mov qword [rsp + 0x30], rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400c3f2	      0xe800000000	                          call 0x400c3f7	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400c3f7	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400c3fc	      0xb800000000	                              mov eax, 0	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400c401	          0x4989cf	                            mov r15, rcx	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400c404	            0xeb1c	                           jmp 0x400c422	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400c406	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400c410	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c414	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c418	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c41c	     0xf85cd020000	                           jne 0x400c6ef	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c422	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c425	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c427	            0x75e7	                           jne 0x400c410	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c429	        0x410fb63f	                   movzx edi, byte [r15]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c42d	           0xf1f00	                         nop dword [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c430	        0x400fb6c7	                          movzx eax, dil	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c434	    0xf68000000000	                      test byte [rax], 1	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c43b	            0x753c	                           jne 0x400c479	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c43d	            0x89fe	                            mov esi, edi	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c43f	          0x4c89fa	                            mov rdx, r15	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c442	      0xb800000000	                              mov eax, 0	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c447	            0xeb17	                           jmp 0x400c460	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c449	     0xf1f80000000	                         nop dword [rax]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c450	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c454	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c458	          0x4038f1	                             cmp cl, sil	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c45b	            0x752b	                           jne 0x400c488	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c45d	           0xfb632	                   movzx esi, byte [rdx]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c460	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c463	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c465	            0x75e9	                           jne 0x400c450	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c467	            0x89f7	                            mov edi, esi	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c469	          0x4989d7	                            mov r15, rdx	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c46c	        0x400fb6c7	                          movzx eax, dil	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c470	    0xf68000000000	                      test byte [rax], 1	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c477	            0x74c4	                            je 0x400c43d	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c479	      0x410fb67f01	               movzx edi, byte [r15 + 1]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c47e	        0x4983c701	                              add r15, 1	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c482	            0xebac	                           jmp 0x400c430	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c484	         0xf1f4000	                         nop dword [rax]	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400c488	          0x4c89f9	                            mov rcx, r15	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c48b	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c490	            0xeb16	                           jmp 0x400c4a8	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c492	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c498	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c49c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c4a0	          0x4038fa	                             cmp dl, dil	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c4a3	            0x751b	                           jne 0x400c4c0	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c4a5	           0xfb639	                   movzx edi, byte [rcx]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c4a8	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c4ab	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c4ad	            0x75e9	                           jne 0x400c498	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c4af	          0x4989cf	                            mov r15, rcx	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c4b2	      0xe979ffffff	                           jmp 0x400c430	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c4b7	    0x660f1f840000	                    nop word [rax + rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c4c0	          0x4c89ff	                            mov rdi, r15	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400c4c3	      0xe800000000	                          call 0x400c4c8	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400c4c8	      0x488d742440	                   lea rsi, [rsp + 0x40]	       308	hashmap.h	FUNCTION_196	CALL_2
0x400c4cd	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       308	hashmap.h	FUNCTION_196	CALL_2
0x400c4d2	          0x4c89fa	                            mov rdx, r15	       308	hashmap.h	FUNCTION_196	CALL_2
0x400c4d5	        0x89442448	             mov dword [rsp + 0x48], eax	       248	hashmap.h	FUNCTION_194
0x400c4d9	    0x48c744244000	               mov qword [rsp + 0x40], 0	       249	hashmap.h	FUNCTION_194
0x400c4e2	      0xe800000000	                          call 0x400c4e7	       308	hashmap.h	FUNCTION_196	CALL_2
0x400c4e7	          0x4885c0	                           test rax, rax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400c4ea	     0xf849c030000	                            je 0x400c88c	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400c4f0	          0x8b5010	            mov edx, dword [rax + 0x10] 	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0x400c4f3	            0x85d2	                           test edx, edx	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c4f5	     0xf88e8030000	                            js 0x400c8e3	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c4fb	          0x4863d2	                         movsxd rdx, edx	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c4fe	        0x48c1e202	                              shl rdx, 2	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c502	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_23
0x400c507	      0xbe00000000	                              mov esi, 0	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_23
0x400c50c	    0x4c03a424b800	             add r12, qword [rsp + 0xb8]	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c514	      0x4889542410	             mov qword [rsp + 0x10], rdx	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c519	      0xe800000000	                          call 0x400c51e	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_23
0x400c51e	          0x83f801	                              cmp eax, 1	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c521	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400c526	            0x19c0	                            sbb eax, eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c528	            0xf7d0	                                 not eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c52a	          0x83c005	                              add eax, 5	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c52d	        0x41890424	                    mov dword [r12], eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c531	      0x498d441500	                    lea rax, [r13 + rdx]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400c536	            0x8b30	                    mov esi, dword [rax]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400c538	            0x85f6	                           test esi, esi	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400c53a	     0xf8841030000	                            js 0x400c881	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400c540	        0x48031424	                    add rdx, qword [rsp]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400c544	          0x486302	                 movsxd rax, dword [rdx]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400c547	      0x41896c8500	            mov dword [r13 + rax*4], ebp	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400c54c	            0x892a	                    mov dword [rdx], ebp	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400c54e	    0xc74424200100	               mov dword [rsp + 0x20], 1	      4378	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400c556	    0x8b9424c00000	            mov edx, dword [rsp + 0xc0] 	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c55d	          0x83c501	                              add ebp, 1	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c560	        0x4883c304	                              add rbx, 4	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c564	            0x39ea	                            cmp edx, ebp	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c566	     0xf8fc1fdffff	                            jg 0x400c32d	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400c56c	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      4396	sequencer.c	FUNCTION_105	IF_14
0x400c570	            0x85c9	                           test ecx, ecx	      4396	sequencer.c	FUNCTION_105	IF_14
0x400c572	     0xf8488030000	                            je 0x400c900	      4396	sequencer.c	FUNCTION_105	IF_14
0x400c578	            0x85d2	                           test edx, edx	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c57a	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400c583	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400c58c	    0x48c744246000	               mov qword [rsp + 0x60], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400c595	     0xf8e61040000	                           jle 0x400c9fc	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c59b	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c5a0	          0x4531f6	                          xor r14d, r14d	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c5a3	            0x31ed	                            xor ebp, ebp	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c5a5	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c5ad	        0x428b3437	              mov esi, dword [rdi + r14]	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c5b1	          0x8d46fc	                      lea eax, [rsi - 4]	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_29
0x400c5b4	          0x83f801	                              cmp eax, 1	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_29
0x400c5b7	     0xf86fd010000	                           jbe 0x400c7ba	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_29
0x400c5bd	            0x85ed	                           test ebp, ebp	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c5bf	     0xf88f5010000	                            js 0x400c7ba	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c5c5	            0x89e8	                            mov eax, ebp	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c5c7	          0x4c63e5	                         movsxd r12, ebp	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c5ca	            0xeb6c	                           jmp 0x400c638	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c5cc	        0x4b8d0c64	                  lea rcx, [r12 + r12*2]	      1938	sequencer.c	FUNCTION_56
0x400c5d0	          0x83c001	                              add eax, 1	      4414	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_31
0x400c5d3	        0x48c1e104	                              shl rcx, 4	      1938	sequencer.c	FUNCTION_56
0x400c5d7	      0x48634c0f28	   movsxd rcx, dword [rdi + rcx + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x400c5dc	          0x4c01c1	                             add rcx, r8	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400c5df	            0x39d0	                            cmp eax, edx	      1937	sequencer.c	FUNCTION_56
0x400c5e1	            0x7d73	                           jge 0x400c656	      1937	sequencer.c	FUNCTION_56
0x400c5e3	            0x4898	                                    cdqe	      1938	sequencer.c	FUNCTION_56
0x400c5e5	        0x488d0440	                  lea rax, [rax + rax*2]	      1938	sequencer.c	FUNCTION_56
0x400c5e9	        0x48c1e004	                              shl rax, 4	      1938	sequencer.c	FUNCTION_56
0x400c5ed	      0x4863440728	   movsxd rax, dword [rdi + rax + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x400c5f2	          0x4901c0	                             add r8, rax	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400c5f5	          0x8d46fc	                      lea eax, [rsi - 4]	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400c5f8	          0x83f801	                              cmp eax, 1	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400c5fb	            0x766c	                           jbe 0x400c669	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400c5fd	          0x4c89c2	                             mov rdx, r8	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400c600	          0x4889ce	                            mov rsi, rcx	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400c603	          0x4889df	                            mov rdi, rbx	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400c606	          0x4829ca	                            sub rdx, rcx	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400c609	      0xe800000000	                          call 0x400c60e	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400c60e	      0x438b44a500	            mov eax, dword [r13 + r12*4]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c613	    0x8b9424c00000	            mov edx, dword [rsp + 0xc0] 	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c61a	            0x85c0	                           test eax, eax	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c61c	     0xf8898010000	                            js 0x400c7ba	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c622	          0x4c63e0	                         movsxd r12, eax	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c625	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c62d	        0x4b8d0c64	                  lea rcx, [r12 + r12*2]	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c631	        0x48c1e104	                              shl rcx, 4	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c635	          0x8b340f	              mov esi, dword [rdi + rcx]	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400c638	            0x39d0	                            cmp eax, edx	      1937	sequencer.c	FUNCTION_56
0x400c63a	    0x4c8b8424b000	              mov r8, qword [rsp + 0xb0]	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400c642	            0x7c88	                            jl 0x400c5cc	      1937	sequencer.c	FUNCTION_56
0x400c644	    0x48638c24a800	         movsxd rcx, dword [rsp + 0xa8] 	      1937	sequencer.c	FUNCTION_56
0x400c64c	          0x83c001	                              add eax, 1	      4414	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_31
0x400c64f	          0x4c01c1	                             add rcx, r8	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400c652	            0x39d0	                            cmp eax, edx	      1937	sequencer.c	FUNCTION_56
0x400c654	            0x7c8d	                            jl 0x400c5e3	      1937	sequencer.c	FUNCTION_56
0x400c656	    0x48638424a800	         movsxd rax, dword [rsp + 0xa8] 	      1937	sequencer.c	FUNCTION_56
0x400c65e	          0x4901c0	                             add r8, rax	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400c661	          0x8d46fc	                      lea eax, [rsi - 4]	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400c664	          0x83f801	                              cmp eax, 1	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400c667	            0x7794	                            ja 0x400c5fd	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400c669	            0x89f0	                            mov eax, esi	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400c66b	      0x4c89442420	              mov qword [rsp + 0x20], r8	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400c670	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400c675	        0x48c1e004	                              shl rax, 4	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400c679	    0x488bb0000000	                    mov rsi, qword [rax]	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400c680	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_110	CALL_2
0x400c683	      0x4889742410	             mov qword [rsp + 0x10], rsi	       279	strbuf.h	FUNCTION_110	CALL_2
0x400c688	      0xe800000000	                          call 0x400c68d	       279	strbuf.h	FUNCTION_110	CALL_2
0x400c68d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x400c692	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x400c695	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_110	CALL_2
0x400c698	      0xe800000000	                          call 0x400c69d	       279	strbuf.h	FUNCTION_110	CALL_2
0x400c69d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       961	string2.h	FUNCTION_208	WHILE_1
0x400c6a2	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       961	string2.h	FUNCTION_208	WHILE_1
0x400c6a7	           0xfb601	                   movzx eax, byte [rcx]	       961	string2.h	FUNCTION_208	WHILE_1
0x400c6aa	            0xa8df	                           test al, 0xdf	       961	string2.h	FUNCTION_208	WHILE_1
0x400c6ac	     0xf844bffffff	                            je 0x400c5fd	       961	string2.h	FUNCTION_208	WHILE_1
0x400c6b2	            0x3c09	                               cmp al, 9	       962	string2.h	FUNCTION_208	WHILE_1
0x400c6b4	     0xf8443ffffff	                            je 0x400c5fd	       962	string2.h	FUNCTION_208	WHILE_1
0x400c6ba	        0x488d4101	                      lea rax, [rcx + 1]	       962	string2.h	FUNCTION_208	WHILE_1
0x400c6be	            0xeb0d	                           jmp 0x400c6cd	       962	string2.h	FUNCTION_208	WHILE_1
0x400c6c0	        0x4883c001	                              add rax, 1	       962	string2.h	FUNCTION_208	WHILE_1
0x400c6c4	          0x80fa09	                               cmp dl, 9	       962	string2.h	FUNCTION_208	WHILE_1
0x400c6c7	     0xf8430ffffff	                            je 0x400c5fd	       962	string2.h	FUNCTION_208	WHILE_1
0x400c6cd	           0xfb610	                   movzx edx, byte [rax]	       961	string2.h	FUNCTION_208	WHILE_1
0x400c6d0	          0x4889c1	                            mov rcx, rax	       961	string2.h	FUNCTION_208	WHILE_1
0x400c6d3	          0xf6c2df	                           test dl, 0xdf	       961	string2.h	FUNCTION_208	WHILE_1
0x400c6d6	            0x75e8	                           jne 0x400c6c0	       961	string2.h	FUNCTION_208	WHILE_1
0x400c6d8	      0xe920ffffff	                           jmp 0x400c5fd	       961	string2.h	FUNCTION_208	WHILE_1
0x400c6dd	      0x488b442408	                mov rax, qword [rsp + 8]	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400c6e2	    0x48c704580000	              mov qword [rax + rbx*2], 0	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400c6ea	      0xe967feffff	                           jmp 0x400c556	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400c6ef	          0x4989cf	                            mov r15, rcx	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c6f2	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c6f7	            0xeb15	                           jmp 0x400c70e	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c6f9	     0xf1f80000000	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c700	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c704	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c708	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c70c	            0x750c	                           jne 0x400c71a	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c70e	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c711	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c713	            0x75eb	                           jne 0x400c700	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c715	      0xe90ffdffff	                           jmp 0x400c429	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400c71a	          0x4989cc	                            mov r12, rcx	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400c71d	          0x4c89e7	                            mov rdi, r12	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400c720	      0xe800000000	                          call 0x400c725	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400c725	      0x488d742440	                   lea rsi, [rsp + 0x40]	       308	hashmap.h	FUNCTION_196	CALL_2
0x400c72a	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       308	hashmap.h	FUNCTION_196	CALL_2
0x400c72f	          0x4c89e2	                            mov rdx, r12	       308	hashmap.h	FUNCTION_196	CALL_2
0x400c732	        0x89442448	             mov dword [rsp + 0x48], eax	       248	hashmap.h	FUNCTION_194
0x400c736	    0x48c744244000	               mov qword [rsp + 0x40], 0	       249	hashmap.h	FUNCTION_194
0x400c73f	      0xe800000000	                          call 0x400c744	       308	hashmap.h	FUNCTION_196	CALL_2
0x400c744	          0x4885c0	                           test rax, rax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400c747	     0xf8509feffff	                           jne 0x400c556	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400c74d	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400c752	        0x4883fae7	             cmp rdx, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_179	IF_1
0x400c756	     0xf8791020000	                            ja 0x400c9ed	       785	git-compat-util.h	FUNCTION_179	IF_1
0x400c75c	     0xf8473020000	                            je 0x400c9d5	       785	git-compat-util.h	FUNCTION_179	IF_1
0x400c762	        0x488d7219	                   lea rsi, [rdx + 0x19]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400c766	      0xbf01000000	                              mov edi, 1	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400c76b	      0x4889542410	             mov qword [rsp + 0x10], rdx	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400c770	      0xe800000000	                          call 0x400c775	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400c775	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_219	CALL_3
0x400c77a	        0x488d4814	                   lea rcx, [rax + 0x14]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400c77e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_219	CALL_3
0x400c783	          0x4989c4	                            mov r12, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400c786	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_219	CALL_3
0x400c789	      0xe800000000	                          call 0x400c78e	        53	string3.h	FUNCTION_219	CALL_3
0x400c78e	      0x41896c2410	             mov dword [r12 + 0x10], ebp	      4390	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400c793	          0x4889c7	                            mov rdi, rax	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_27
0x400c796	      0xe800000000	                          call 0x400c79b	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_27
0x400c79b	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400c7a0	      0x4189442408	                mov dword [r12 + 8], eax	       248	hashmap.h	FUNCTION_194
0x400c7a5	    0x49c704240000	                      mov qword [r12], 0	       249	hashmap.h	FUNCTION_194
0x400c7ad	          0x4c89e6	                            mov rsi, r12	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400c7b0	      0xe800000000	                          call 0x400c7b5	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400c7b5	      0xe99cfdffff	                           jmp 0x400c556	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400c7ba	          0x83c501	                              add ebp, 1	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c7bd	        0x4983c630	                           add r14, 0x30	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c7c1	            0x39d5	                            cmp ebp, edx	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c7c3	     0xf8cdcfdffff	                            jl 0x400c5a5	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c7c9	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c7ce	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400c7d3	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_35
0x400c7d8	      0xe8f34cffff	                   call sym.rewrite_file	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_35
0x400c7dd	          0x4889df	                            mov rdi, rbx	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_36
0x400c7e0	            0x89c5	                            mov ebp, eax	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_35
0x400c7e2	      0xe800000000	                          call 0x400c7e7	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_36
0x400c7e7	          0x4c89ef	                            mov rdi, r13	      4434	sequencer.c	FUNCTION_105	CALL_37
0x400c7ea	            0x31db	                            xor ebx, ebx	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400c7ec	      0xe800000000	                          call 0x400c7f1	      4434	sequencer.c	FUNCTION_105	CALL_37
0x400c7f1	        0x488b3c24	                    mov rdi, qword [rsp]	      4435	sequencer.c	FUNCTION_105	CALL_38
0x400c7f5	      0xe800000000	                          call 0x400c7fa	      4435	sequencer.c	FUNCTION_105	CALL_38
0x400c7fa	    0x8b8424c00000	            mov eax, dword [rsp + 0xc0] 	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400c801	      0x4c8b642408	                mov r12, qword [rsp + 8]	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400c806	            0x85c0	                           test eax, eax	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400c808	            0x7e19	                           jle 0x400c823	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400c80a	        0x498b3c24	                    mov rdi, qword [r12]	      4437	sequencer.c	FUNCTION_105	CALL_39
0x400c80e	          0x83c301	                              add ebx, 1	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400c811	        0x4983c408	                              add r12, 8	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400c815	      0xe800000000	                          call 0x400c81a	      4437	sequencer.c	FUNCTION_105	CALL_39
0x400c81a	    0x399c24c00000	            cmp dword [rsp + 0xc0], ebx 	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400c821	            0x7fe7	                            jg 0x400c80a	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400c823	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4438	sequencer.c	FUNCTION_105	CALL_40
0x400c828	      0xe800000000	                          call 0x400c82d	      4438	sequencer.c	FUNCTION_105	CALL_40
0x400c82d	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      4439	sequencer.c	FUNCTION_105	CALL_41
0x400c832	      0xbe01000000	                              mov esi, 1	      4439	sequencer.c	FUNCTION_105	CALL_41
0x400c837	      0xe800000000	                          call 0x400c83c	      4439	sequencer.c	FUNCTION_105	CALL_41
0x400c83c	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400c844	      0xe800000000	                          call 0x400c849	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400c849	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      1792	sequencer.c	FUNCTION_51
0x400c851	      0xe800000000	                          call 0x400c856	      1792	sequencer.c	FUNCTION_51
0x400c856	            0x89e8	                            mov eax, ebp	      4442	sequencer.c	FUNCTION_105
0x400c858	    0x488b9c24f800	            mov rbx, qword [rsp + 0xf8] 	      4443	sequencer.c	FUNCTION_105
0x400c860	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4443	sequencer.c	FUNCTION_105
0x400c869	     0xf8561010000	                           jne 0x400c9d0	      4443	sequencer.c	FUNCTION_105
0x400c86f	    0x4881c4080100	                          add rsp, 0x108	      4443	sequencer.c	FUNCTION_105
0x400c876	              0x5b	                                 pop rbx	      4443	sequencer.c	FUNCTION_105
0x400c877	              0x5d	                                 pop rbp	      4443	sequencer.c	FUNCTION_105
0x400c878	            0x415c	                                 pop r12	      4443	sequencer.c	FUNCTION_105
0x400c87a	            0x415d	                                 pop r13	      4443	sequencer.c	FUNCTION_105
0x400c87c	            0x415e	                                 pop r14	      4443	sequencer.c	FUNCTION_105
0x400c87e	            0x415f	                                 pop r15	      4443	sequencer.c	FUNCTION_105
0x400c880	              0xc3	                                     ret	      4443	sequencer.c	FUNCTION_105
0x400c881	            0x8928	                    mov dword [rax], ebp	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400c883	        0x48031424	                    add rdx, qword [rsp]	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400c887	      0xe9c0fcffff	                           jmp 0x400c54c	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400c88c	      0xbe20000000	                           mov esi, 0x20	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c891	          0x4c89ff	                            mov rdi, r15	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c894	      0xe800000000	                          call 0x400c899	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c899	          0x4885c0	                           test rax, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c89c	     0xf84f6000000	                            je 0x400c998	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c8a2	            0x31d2	                            xor edx, edx	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400c8a4	          0x83fd00	                              cmp ebp, 0	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400c8a7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400c8ac	     0xf8ed1000000	                           jle 0x400c983	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400c8b2	          0x488b39	                    mov rdi, qword [rcx]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400c8b5	          0x4885ff	                           test rdi, rdi	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400c8b8	            0x741e	                            je 0x400c8d8	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400c8ba	          0x4c89fe	                            mov rsi, r15	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_22
0x400c8bd	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_22
0x400c8c2	        0x89542410	             mov dword [rsp + 0x10], edx	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_22
0x400c8c6	      0xe800000000	                          call 0x400c8cb	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_22
0x400c8cb	            0x85c0	                           test eax, eax	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400c8cd	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400c8d1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400c8d6	            0x7515	                           jne 0x400c8ed	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400c8d8	          0x83c201	                              add edx, 1	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400c8db	        0x4883c108	                              add rcx, 8	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400c8df	            0x39ea	                            cmp edx, ebp	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400c8e1	            0x75cf	                           jne 0x400c8b2	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400c8e3	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400c8e8	      0xe930feffff	                           jmp 0x400c71d	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400c8ed	            0x39ea	                            cmp edx, ebp	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400c8ef	     0xf85fefbffff	                           jne 0x400c4f3	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400c8f5	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400c8fa	      0xe91efeffff	                           jmp 0x400c71d	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400c8ff	              0x90	                                     nop	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400c900	            0x31ed	                            xor ebp, ebp	      4293	sequencer.c	FUNCTION_105
0x400c902	      0xe9e0feffff	                           jmp 0x400c7e7	      4293	sequencer.c	FUNCTION_105
0x400c907	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400c90f	      0xe800000000	                          call 0x400c914	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400c914	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      1792	sequencer.c	FUNCTION_51
0x400c91c	      0xe800000000	                          call 0x400c921	      1792	sequencer.c	FUNCTION_51
0x400c921	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400c926	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400c92b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400c92d	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      1792	sequencer.c	FUNCTION_51
0x400c939	    0xc78424c40000	               mov dword [rsp + 0xc4], 0	      1793	sequencer.c	FUNCTION_51
0x400c944	    0xc78424c00000	               mov dword [rsp + 0xc0], 0	      1793	sequencer.c	FUNCTION_51
0x400c94f	      0xe800000000	                          call 0x400c954	        54	gettext.h	FUNCTION_147
0x400c954	          0x4889c7	                            mov rdi, rax	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400c957	            0x31c0	                            xor eax, eax	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400c959	      0xe800000000	                          call 0x400c95e	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400c95e	      0xb8ffffffff	                     mov eax, 0xffffffff	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400c963	      0xe9f0feffff	                           jmp 0x400c858	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400c968	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400c96d	      0xe800000000	                          call 0x400c972	        52	sequencer.c	CALL_8
0x400c972	      0x4889442428	             mov qword [rsp + 0x28], rax	        52	sequencer.c	CALL_8
0x400c977	    0x488905000000	            mov qword [0x0400c97e], rax 	        52	sequencer.c	CALL_8
0x400c97e	      0xe9a6f8ffff	                           jmp 0x400c229	        52	sequencer.c	CALL_8
0x400c983	      0xba00000000	                              mov edx, 0	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400c988	     0xf8574fbffff	                           jne 0x400c502	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400c98e	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400c993	      0xe985fdffff	                           jmp 0x400c71d	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400c998	          0x4c89ff	                            mov rdi, r15	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c99b	      0xe800000000	                          call 0x400c9a0	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c9a0	          0x4885c0	                           test rax, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c9a3	     0xf84f9feffff	                            je 0x400c8a2	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c9a9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4363	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c9ad	          0x4885c0	                           test rax, rax	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400c9b0	     0xf84ecfeffff	                            je 0x400c8a2	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400c9b6	    0x482b8424b800	             sub rax, qword [rsp + 0xb8]	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c9be	          0x4889c2	                            mov rdx, rax	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c9c1	        0x48c1fa04	                              sar rdx, 4	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c9c5	    0x69d2abaaaaaa	               imul edx, edx, 0xaaaaaaab	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c9cb	      0xe923fbffff	                           jmp 0x400c4f3	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400c9d0	      0xe800000000	                          call 0x400c9d5	      4443	sequencer.c	FUNCTION_105
0x400c9d5	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400c9da	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400c9e1	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400c9e6	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400c9e8	      0xe800000000	                          call 0x400c9ed	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400c9ed	      0xbe18000000	                           mov esi, 0x18	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400c9f2	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400c9f7	      0xe800000000	                          call 0x400c9fc	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400c9fc	      0xbe00000000	                              mov esi, 0	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400ca01	            0x31d2	                            xor edx, edx	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400ca03	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400ca08	      0xe9c6fdffff	                           jmp 0x400c7d3	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400ca0d	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x400ca12	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x400ca17	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x400ca19	      0xe800000000	                          call 0x400ca1e	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x400ca1e	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x400ca23	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x400ca28	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x400ca2a	      0xe800000000	                          call 0x400ca2f	       796	git-compat-util.h	FUNCTION_180	IF_1	CALL_1
0x400ca2f	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ca37	      0xe800000000	                          call 0x400ca3c	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ca3c	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      1792	sequencer.c	FUNCTION_51
0x400ca44	      0xe800000000	                          call 0x400ca49	      1792	sequencer.c	FUNCTION_51
0x400ca49	      0xb8ffffffff	                     mov eax, 0xffffffff	      4300	sequencer.c	FUNCTION_105	IF_2
0x400ca4e	      0xe905feffff	                           jmp 0x400c858	      4300	sequencer.c	FUNCTION_105	IF_2
0x400ca53	      0xb8ffffffff	                     mov eax, 0xffffffff	      4297	sequencer.c	FUNCTION_105	IF_1
0x400ca58	      0xe9fbfdffff	                           jmp 0x400c858	      4297	sequencer.c	FUNCTION_105	IF_1
flush_rewritten_pending	WHILE,1:IF,2:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,10	90
0x4000190	            0x4154	                                push r12	      1457	sequencer.c	FUNCTION_46
0x4000192	              0x55	                                push rbp	      1457	sequencer.c	FUNCTION_46
0x4000193	              0x53	                                push rbx	      1457	sequencer.c	FUNCTION_46
0x4000194	        0x4883ec40	                           sub rsp, 0x40	      1457	sequencer.c	FUNCTION_46
0x4000198	    0x488b35000000	            mov rsi, qword [0x0400019f] 	       123	sequencer.c	CALL_20
0x400019f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1457	sequencer.c	FUNCTION_46
0x40001a8	      0x4889442438	             mov qword [rsp + 0x38], rax	      1457	sequencer.c	FUNCTION_46
0x40001ad	            0x31c0	                            xor eax, eax	      1457	sequencer.c	FUNCTION_46
0x40001af	    0x48c704240000	                      mov qword [rsp], 0	      1458	sequencer.c	FUNCTION_46
0x40001b7	    0x48c744240800	                  mov qword [rsp + 8], 0	      1458	sequencer.c	FUNCTION_46
0x40001c0	          0x4885f6	                           test rsi, rsi	       123	sequencer.c	CALL_20
0x40001c3	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1458	sequencer.c	FUNCTION_46
0x40001cc	     0xf84e6000000	                            je 0x40002b8	       123	sequencer.c	CALL_20
0x40001d2	      0xba52000000	                           mov edx, 0x52	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40001d7	          0x4889e7	                            mov rdi, rsp	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40001da	      0xe800000000	                          call 0x40001df	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40001df	          0x4885c0	                           test rax, rax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40001e2	     0xf8eaa000000	                           jle 0x4000292	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40001e8	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x40001ed	      0xbf00000000	                              mov edi, 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x40001f2	      0xe800000000	                          call 0x40001f7	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x40001f7	            0x85c0	                           test eax, eax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40001f9	     0xf8593000000	                           jne 0x4000292	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40001ff	    0x488b3d000000	            mov rdi, qword [0x04000206] 	       122	sequencer.c	CALL_19
0x4000206	          0x4885ff	                           test rdi, rdi	       122	sequencer.c	CALL_19
0x4000209	     0xf84c2000000	                            je 0x40002d1	       122	sequencer.c	CALL_19
0x400020f	      0xbe00000000	                              mov esi, 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4000214	      0xe800000000	                          call 0x4000219	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4000219	          0x4885c0	                           test rax, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400021c	          0x4989c4	                            mov r12, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400021f	            0x7471	                            je 0x4000292	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4000221	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      1465	sequencer.c	FUNCTION_46	IF_1
0x4000226	        0x807d0000	                       cmp byte [rbp], 0	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400022a	            0x750e	                           jne 0x400023a	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400022c	            0xeb4b	                           jmp 0x4000279	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400022e	            0x6690	                                     nop	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000230	        0x807b0100	                   cmp byte [rbx + 1], 0	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000234	        0x488d6b01	                      lea rbp, [rbx + 1]	      1473	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000238	            0x743f	                            je 0x4000279	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400023a	      0xbe0a000000	                            mov esi, 0xa	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400023f	          0x4889ef	                            mov rdi, rbp	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000242	      0xe800000000	                          call 0x4000247	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000247	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400024c	          0x4889c3	                            mov rbx, rax	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400024f	      0xe800000000	                          call 0x4000254	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000254	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_476
0x4000257	          0x4989c1	                             mov r9, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400025a	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	CALL_476
0x400025d	          0x4829e9	                            sub rcx, rbp	        97	stdio2.h	CALL_476
0x4000260	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x4000262	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_476
0x4000267	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400026c	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_476
0x400026f	      0xe800000000	                          call 0x4000274	        97	stdio2.h	CALL_476
0x4000274	          0x803b00	                       cmp byte [rbx], 0	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x4000277	            0x75b7	                           jne 0x4000230	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x4000279	          0x4c89e7	                            mov rdi, r12	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_7
0x400027c	      0xe800000000	                          call 0x4000281	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_7
0x4000281	    0x488b3d000000	            mov rdi, qword [0x04000288] 	       123	sequencer.c	CALL_20
0x4000288	          0x4885ff	                           test rdi, rdi	       123	sequencer.c	CALL_20
0x400028b	            0x745d	                            je 0x40002ea	       123	sequencer.c	CALL_20
0x400028d	      0xe800000000	                          call 0x4000292	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_9
0x4000292	          0x4889e7	                            mov rdi, rsp	      1478	sequencer.c	FUNCTION_46	CALL_10
0x4000295	      0xe800000000	                          call 0x400029a	      1478	sequencer.c	FUNCTION_46	CALL_10
0x400029a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1479	sequencer.c	FUNCTION_46
0x400029f	    0x644833042528	                xor rax, qword fs:[0x28]	      1479	sequencer.c	FUNCTION_46
0x40002a8	            0x7558	                           jne 0x4000302	      1479	sequencer.c	FUNCTION_46
0x40002aa	        0x4883c440	                           add rsp, 0x40	      1479	sequencer.c	FUNCTION_46
0x40002ae	              0x5b	                                 pop rbx	      1479	sequencer.c	FUNCTION_46
0x40002af	              0x5d	                                 pop rbp	      1479	sequencer.c	FUNCTION_46
0x40002b0	            0x415c	                                 pop r12	      1479	sequencer.c	FUNCTION_46
0x40002b2	              0xc3	                                     ret	      1479	sequencer.c	FUNCTION_46
0x40002b3	       0xf1f440000	                   nop dword [rax + rax]	      1479	sequencer.c	FUNCTION_46
0x40002b8	      0xbf00000000	                              mov edi, 0	       123	sequencer.c	CALL_20
0x40002bd	      0xe800000000	                          call 0x40002c2	       123	sequencer.c	CALL_20
0x40002c2	          0x4889c6	                            mov rsi, rax	       123	sequencer.c	CALL_20
0x40002c5	    0x488905000000	            mov qword [0x040002cc], rax 	       123	sequencer.c	CALL_20
0x40002cc	      0xe901ffffff	                           jmp 0x40001d2	       123	sequencer.c	CALL_20
0x40002d1	      0xbf00000000	                              mov edi, 0	       122	sequencer.c	CALL_19
0x40002d6	      0xe800000000	                          call 0x40002db	       122	sequencer.c	CALL_19
0x40002db	          0x4889c7	                            mov rdi, rax	       122	sequencer.c	CALL_19
0x40002de	    0x488905000000	            mov qword [0x040002e5], rax 	       122	sequencer.c	CALL_19
0x40002e5	      0xe925ffffff	                           jmp 0x400020f	       122	sequencer.c	CALL_19
0x40002ea	      0xbf00000000	                              mov edi, 0	       123	sequencer.c	CALL_20
0x40002ef	            0x31c0	                            xor eax, eax	       123	sequencer.c	CALL_20
0x40002f1	      0xe800000000	                          call 0x40002f6	       123	sequencer.c	CALL_20
0x40002f6	          0x4889c7	                            mov rdi, rax	       123	sequencer.c	CALL_20
0x40002f9	    0x488905000000	            mov qword [0x04000300], rax 	       123	sequencer.c	CALL_20
0x4000300	            0xeb8b	                           jmp 0x400028d	       123	sequencer.c	CALL_20
0x4000302	      0xe800000000	                          call 0x4000307	      1479	sequencer.c	FUNCTION_46
sequencer_make_script	WHILE,1:IF,7:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,21	754
0x400a580	            0x4157	                                push r15	      3908	sequencer.c	FUNCTION_97
0x400a582	            0x4156	                                push r14	      3908	sequencer.c	FUNCTION_97
0x400a584	          0x4189f6	                           mov r14d, esi	      3908	sequencer.c	FUNCTION_97
0x400a587	            0x4155	                                push r13	      3908	sequencer.c	FUNCTION_97
0x400a589	            0x4154	                                push r12	      3908	sequencer.c	FUNCTION_97
0x400a58b	          0x4189cc	                           mov r12d, ecx	      3908	sequencer.c	FUNCTION_97
0x400a58e	              0x55	                                push rbp	      3908	sequencer.c	FUNCTION_97
0x400a58f	              0x53	                                push rbx	      3908	sequencer.c	FUNCTION_97
0x400a590	      0xb914000000	                           mov ecx, 0x14	      3910	sequencer.c	FUNCTION_97
0x400a595	          0x4589e5	                          mov r13d, r12d	      3914	sequencer.c	FUNCTION_97
0x400a598	      0xbb00000000	                              mov ebx, 0	      3915	sequencer.c	FUNCTION_97
0x400a59d	          0x4489e5	                           mov ebp, r12d	      3916	sequencer.c	FUNCTION_97
0x400a5a0	    0x4881ec880b00	                          sub rsp, 0xb88	      3908	sequencer.c	FUNCTION_97
0x400a5a7	        0x4183e501	                             and r13d, 1	      3914	sequencer.c	FUNCTION_97
0x400a5ab	          0x4989d7	                            mov r15, rdx	      3908	sequencer.c	FUNCTION_97
0x400a5ae	    0x64488b042528	                mov rax, qword fs:[0x28]	      3908	sequencer.c	FUNCTION_97
0x400a5b7	    0x48898424780b	            mov qword [rsp + 0xb78], rax	      3908	sequencer.c	FUNCTION_97
0x400a5bf	            0x31c0	                            xor eax, eax	      3908	sequencer.c	FUNCTION_97
0x400a5c1	      0x48897c2408	                mov qword [rsp + 8], rdi	      3908	sequencer.c	FUNCTION_97
0x400a5c6	    0x488dbc242002	                  lea rdi, [rsp + 0x220]	      3910	sequencer.c	FUNCTION_97
0x400a5ce	        0x41f6c404	                            test r12b, 4	      3915	sequencer.c	FUNCTION_97
0x400a5d2	    0x48c744244000	               mov qword [rsp + 0x40], 0	      3909	sequencer.c	FUNCTION_97
0x400a5db	    0x48c744246000	               mov qword [rsp + 0x60], 0	      3911	sequencer.c	FUNCTION_97
0x400a5e4	          0xf348ab	              rep stosq qword [rdi], rax	      3910	sequencer.c	FUNCTION_97
0x400a5e7	      0xb800000000	                              mov eax, 0	      3915	sequencer.c	FUNCTION_97
0x400a5ec	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	      3918	sequencer.c	FUNCTION_97	CALL_1
0x400a5f4	    0x48c744246800	               mov qword [rsp + 0x68], 0	      3911	sequencer.c	FUNCTION_97
0x400a5fd	        0x480f45d8	                         cmovne rbx, rax	      3915	sequencer.c	FUNCTION_97
0x400a601	            0x31f6	                            xor esi, esi	      3918	sequencer.c	FUNCTION_97	CALL_1
0x400a603	          0x83e508	                              and ebp, 8	      3916	sequencer.c	FUNCTION_97
0x400a606	    0x48c744247000	               mov qword [rsp + 0x70], 0	      3911	sequencer.c	FUNCTION_97
0x400a60f	      0xe800000000	                          call 0x400a614	      3918	sequencer.c	FUNCTION_97	CALL_1
0x400a614	    0x808c24390300	             or byte [rsp + 0x339], 0x10	      3919	sequencer.c	FUNCTION_97
0x400a61c	            0x85ed	                           test ebp, ebp	      3920	sequencer.c	FUNCTION_97	IF_1
0x400a61e	            0x750b	                           jne 0x400a62b	      3920	sequencer.c	FUNCTION_97	IF_1
0x400a620	    0xc78424a40700	              mov dword [rsp + 0x7a4], 1	      3921	sequencer.c	FUNCTION_97	IF_1
0x400a62b	      0x488d742440	                   lea rsi, [rsp + 0x40]	      3930	sequencer.c	FUNCTION_97	CALL_2
0x400a630	      0xbf00000000	                              mov edi, 0	      3930	sequencer.c	FUNCTION_97	CALL_2
0x400a635	    0x808c24380300	                or byte [rsp + 0x338], 2	      3922	sequencer.c	FUNCTION_97
0x400a63d	    0x808c24360300	                or byte [rsp + 0x336], 4	      3923	sequencer.c	FUNCTION_97
0x400a645	    0x808c24370300	            or byte [rsp + 0x337], 0x42 	      3925	sequencer.c	FUNCTION_97
0x400a64d	    0xc784242c0300	              mov dword [rsp + 0x32c], 0	      3926	sequencer.c	FUNCTION_97
0x400a658	    0x808c24350300	                or byte [rsp + 0x335], 1	      3927	sequencer.c	FUNCTION_97
0x400a660	    0x808c243a0300	             or byte [rsp + 0x33a], 0x80	      3929	sequencer.c	FUNCTION_97
0x400a668	      0xe800000000	                          call 0x400a66d	      3930	sequencer.c	FUNCTION_97	CALL_2
0x400a66d	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3931	sequencer.c	FUNCTION_97	IF_2
0x400a672	          0x4885ff	                           test rdi, rdi	      3931	sequencer.c	FUNCTION_97	IF_2
0x400a675	     0xf8486010000	                            je 0x400a801	      3931	sequencer.c	FUNCTION_97	IF_2
0x400a67b	          0x803f00	                       cmp byte [rdi], 0	      3931	sequencer.c	FUNCTION_97	IF_2
0x400a67e	     0xf847d010000	                            je 0x400a801	      3931	sequencer.c	FUNCTION_97	IF_2
0x400a684	    0x488db424c002	                  lea rsi, [rsp + 0x2c0]	      3935	sequencer.c	FUNCTION_97	CALL_5
0x400a68c	      0xe800000000	                          call 0x400a691	      3935	sequencer.c	FUNCTION_97	CALL_5
0x400a691	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3936	sequencer.c	FUNCTION_97	CALL_6
0x400a696	      0xe800000000	                          call 0x400a69b	      3936	sequencer.c	FUNCTION_97	CALL_6
0x400a69b	    0x8b8424640300	           mov eax, dword [rsp + 0x364] 	      3937	sequencer.c	FUNCTION_97
0x400a6a2	    0x898424200200	            mov dword [rsp + 0x220], eax	      3937	sequencer.c	FUNCTION_97
0x400a6a9	      0xe800000000	                          call 0x400a6ae	      3938	sequencer.c	FUNCTION_97	CALL_7
0x400a6ae	    0x488d9424c002	                  lea rdx, [rsp + 0x2c0]	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400a6b6	            0x31c9	                            xor ecx, ecx	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400a6b8	          0x4c89fe	                            mov rsi, r15	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400a6bb	          0x4489f7	                           mov edi, r14d	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400a6be	    0x488984247802	            mov qword [rsp + 0x278], rax	      3938	sequencer.c	FUNCTION_97	CALL_7
0x400a6c6	      0xe800000000	                          call 0x400a6cb	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400a6cb	          0x83f801	                              cmp eax, 1	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400a6ce	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400a6d3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400a6d8	     0xf8f7a0b0000	                            jg 0x400b258	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400a6de	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400a6e6	      0xe800000000	                          call 0x400a6eb	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400a6eb	            0x85c0	                           test eax, eax	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400a6ed	     0xf885b0b0000	                            js 0x400b24e	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400a6f3	          0x4589ee	                          mov r14d, r13d	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a6f6	        0x4183f601	                             xor r14d, 1	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a6fa	        0x4183e601	                             and r14d, 1	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a6fe	            0x85ed	                           test ebp, ebp	      3946	sequencer.c	FUNCTION_97	IF_5
0x400a700	     0xf8577010000	                           jne 0x400a87d	      3946	sequencer.c	FUNCTION_97	IF_5
0x400a706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3946	sequencer.c	FUNCTION_97	IF_5
0x400a710	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400a718	      0xe800000000	                          call 0x400a71d	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400a71d	          0x4885c0	                           test rax, rax	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400a720	          0x4889c5	                            mov rbp, rax	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400a723	     0xf841f010000	                            je 0x400a848	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400a729	          0x4889ef	                            mov rdi, rbp	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_14
0x400a72c	      0xe85f6effff	       call sym.is_original_commit_empty	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_14
0x400a731	            0x85c0	                           test eax, eax	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400a733	            0x7509	                           jne 0x400a73e	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400a735	    0xf74500002000	                test dword [rbp], 0x2000	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400a73c	            0x75d2	                           jne 0x400a710	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400a73e	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       165	strbuf.h	FUNCTION_108	IF_2
0x400a743	    0x48c744246800	               mov qword [rsp + 0x68], 0	       164	strbuf.h	FUNCTION_108
0x400a74c	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x400a753	     0xf84d7000000	                            je 0x400a830	       165	strbuf.h	FUNCTION_108	IF_2
0x400a759	          0xc60200	                       mov byte [rdx], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x400a75c	          0x4584f6	                         test r14b, r14b	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a75f	      0x4c8d642460	                   lea r12, [rsp + 0x60]	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a764	            0x741a	                            je 0x400a780	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a766	            0x85c0	                           test eax, eax	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a768	            0x7416	                            je 0x400a780	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a76a	     0xfbe15000000	           movsx edx, byte [0x0400a771] 	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400a771	      0xbe00000000	                              mov esi, 0	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400a776	          0x4c89e7	                            mov rdi, r12	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400a779	            0x31c0	                            xor eax, eax	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400a77b	      0xe800000000	                          call 0x400a780	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400a780	        0x488d7d04	                      lea rdi, [rbp + 4]	      3958	sequencer.c	FUNCTION_97	WHILE_1	CALL_17
0x400a784	      0xe800000000	                          call 0x400a789	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a789	          0x4889da	                            mov rdx, rbx	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a78c	          0x4889c1	                            mov rcx, rax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a78f	      0xbe00000000	                              mov esi, 0	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a794	            0x31c0	                            xor eax, eax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a796	          0x4c89e7	                            mov rdi, r12	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a799	      0xe800000000	                          call 0x400a79e	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a79e	    0x488dbc242002	                  lea rdi, [rsp + 0x220]	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400a7a6	          0x4c89e2	                            mov rdx, r12	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400a7a9	          0x4889ee	                            mov rsi, rbp	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400a7ac	      0xe800000000	                          call 0x400a7b1	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400a7b1	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400a7b6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x400a7b9	            0x7565	                           jne 0x400a820	       141	strbuf.h	FUNCTION_107
0x400a7bb	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x400a7c0	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_109	CALL_2
0x400a7c3	      0xe800000000	                          call 0x400a7c8	       228	strbuf.h	FUNCTION_109	CALL_2
0x400a7c8	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x400a7cd	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x400a7d1	      0x488b742408	                mov rsi, qword [rsp + 8]	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400a7d6	      0x4889442468	             mov qword [rsp + 0x68], rax	       229	strbuf.h	FUNCTION_109
0x400a7db	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       229	strbuf.h	FUNCTION_109
0x400a7e0	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x400a7e4	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       230	strbuf.h	FUNCTION_109
0x400a7e9	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       230	strbuf.h	FUNCTION_109
0x400a7ee	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x400a7f2	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400a7f7	      0xe800000000	                          call 0x400a7fc	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400a7fc	      0xe90fffffff	                           jmp 0x400a710	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400a801	      0xe800000000	                          call 0x400a806	      3932	sequencer.c	FUNCTION_97	IF_2	CALL_3
0x400a806	      0xbf00000000	                              mov edi, 0	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400a80b	      0xe800000000	                          call 0x400a810	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400a810	          0x4889c7	                            mov rdi, rax	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400a813	      0x4889442440	             mov qword [rsp + 0x40], rax	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400a818	      0xe967feffff	                           jmp 0x400a684	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400a81d	           0xf1f00	                         nop dword [rax]	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400a820	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	       141	strbuf.h	FUNCTION_107
0x400a825	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400a829	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400a82c	            0x759f	                           jne 0x400a7cd	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400a82e	            0xeb8b	                           jmp 0x400a7bb	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400a830	    0x803d00000000	                cmp byte [0x0400a837], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x400a837	     0xf841fffffff	                            je 0x400a75c	       168	strbuf.h	FUNCTION_108	CALL_2
0x400a83d	      0xe9e60a0000	                           jmp 0x400b328	       168	strbuf.h	FUNCTION_108	CALL_2
0x400a842	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x400a848	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3963	sequencer.c	FUNCTION_97	CALL_21
0x400a84d	      0xe800000000	                          call 0x400a852	      3963	sequencer.c	FUNCTION_97	CALL_21
0x400a852	            0x31c0	                            xor eax, eax	      3964	sequencer.c	FUNCTION_97
0x400a854	    0x488b8c24780b	           mov rcx, qword [rsp + 0xb78] 	      3965	sequencer.c	FUNCTION_97
0x400a85c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3965	sequencer.c	FUNCTION_97
0x400a865	     0xf85c20a0000	                           jne 0x400b32d	      3965	sequencer.c	FUNCTION_97
0x400a86b	    0x4881c4880b00	                          add rsp, 0xb88	      3965	sequencer.c	FUNCTION_97
0x400a872	              0x5b	                                 pop rbx	      3965	sequencer.c	FUNCTION_97
0x400a873	              0x5d	                                 pop rbp	      3965	sequencer.c	FUNCTION_97
0x400a874	            0x415c	                                 pop r12	      3965	sequencer.c	FUNCTION_97
0x400a876	            0x415d	                                 pop r13	      3965	sequencer.c	FUNCTION_97
0x400a878	            0x415e	                                 pop r14	      3965	sequencer.c	FUNCTION_97
0x400a87a	            0x415f	                                 pop r15	      3965	sequencer.c	FUNCTION_97
0x400a87c	              0xc3	                                     ret	      3965	sequencer.c	FUNCTION_97
0x400a87d	          0x4489e0	                           mov eax, r12d	      3683	sequencer.c	FUNCTION_96
0x400a880	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3689	sequencer.c	FUNCTION_96
0x400a888	    0x488dac241001	                  lea rbp, [rsp + 0x110]	      3691	sequencer.c	FUNCTION_96
0x400a890	          0x83e010	                           and eax, 0x10	      3683	sequencer.c	FUNCTION_96
0x400a893	      0xb906000000	                              mov ecx, 6	      3689	sequencer.c	FUNCTION_96
0x400a898	      0xba00000000	                              mov edx, 0	      3698	sequencer.c	FUNCTION_96
0x400a89d	        0x8944243c	             mov dword [rsp + 0x3c], eax	      3683	sequencer.c	FUNCTION_96
0x400a8a1	            0x31c0	                            xor eax, eax	      3689	sequencer.c	FUNCTION_96
0x400a8a3	        0x4183e404	                             and r12d, 4	      3698	sequencer.c	FUNCTION_96
0x400a8a7	          0xf348ab	              rep stosq qword [rdi], rax	      3689	sequencer.c	FUNCTION_96
0x400a8aa	      0xb906000000	                              mov ecx, 6	      3691	sequencer.c	FUNCTION_96
0x400a8af	          0x4889ef	                            mov rdi, rbp	      3691	sequencer.c	FUNCTION_96
0x400a8b2	    0x48c784248000	               mov qword [rsp + 0x80], 0	      3684	sequencer.c	FUNCTION_96
0x400a8be	    0x48c784248800	               mov qword [rsp + 0x88], 0	      3684	sequencer.c	FUNCTION_96
0x400a8ca	    0x48c784249000	               mov qword [rsp + 0x90], 0	      3684	sequencer.c	FUNCTION_96
0x400a8d6	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      3684	sequencer.c	FUNCTION_96
0x400a8e2	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      3684	sequencer.c	FUNCTION_96
0x400a8ee	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      3684	sequencer.c	FUNCTION_96
0x400a8fa	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      3685	sequencer.c	FUNCTION_96
0x400a906	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      3685	sequencer.c	FUNCTION_96
0x400a912	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      3685	sequencer.c	FUNCTION_96
0x400a91e	          0xf348ab	              rep stosq qword [rdi], rax	      3691	sequencer.c	FUNCTION_96
0x400a921	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      3691	sequencer.c	FUNCTION_96
0x400a929	      0xb906000000	                              mov ecx, 6	      3691	sequencer.c	FUNCTION_96
0x400a92e	    0x48c744244800	               mov qword [rsp + 0x48], 0	      3686	sequencer.c	FUNCTION_96
0x400a937	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3687	sequencer.c	FUNCTION_96
0x400a940	          0xf348ab	              rep stosq qword [rdi], rax	      3691	sequencer.c	FUNCTION_96
0x400a943	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      3692	sequencer.c	FUNCTION_96
0x400a94b	      0xb906000000	                              mov ecx, 6	      3692	sequencer.c	FUNCTION_96
0x400a950	          0xf348ab	              rep stosq qword [rdi], rax	      3692	sequencer.c	FUNCTION_96
0x400a953	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3693	sequencer.c	FUNCTION_96
0x400a95b	      0xb90f000000	                            mov ecx, 0xf	      3693	sequencer.c	FUNCTION_96
0x400a960	          0xf348ab	              rep stosq qword [rdi], rax	      3693	sequencer.c	FUNCTION_96
0x400a963	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0x400a968	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3701	sequencer.c	FUNCTION_96	CALL_1
0x400a970	    0x48c784241002	              mov qword [rsp + 0x210], 0	      3693	sequencer.c	FUNCTION_96
0x400a97c	        0x480f45c2	                         cmovne rax, rdx	      3698	sequencer.c	FUNCTION_96
0x400a980	      0xba00000000	                              mov edx, 0	      3698	sequencer.c	FUNCTION_96
0x400a985	      0x4889442420	             mov qword [rsp + 0x20], rax	      3698	sequencer.c	FUNCTION_96
0x400a98a	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0x400a98f	        0x480f45c2	                         cmovne rax, rdx	      3698	sequencer.c	FUNCTION_96
0x400a993	      0xba00000000	                              mov edx, 0	      3698	sequencer.c	FUNCTION_96
0x400a998	      0x4889442430	             mov qword [rsp + 0x30], rax	      3698	sequencer.c	FUNCTION_96
0x400a99d	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0x400a9a2	        0x480f45c2	                         cmovne rax, rdx	      3698	sequencer.c	FUNCTION_96
0x400a9a6	      0xba00000000	                              mov edx, 0	      3698	sequencer.c	FUNCTION_96
0x400a9ab	      0x4889442428	             mov qword [rsp + 0x28], rax	      3698	sequencer.c	FUNCTION_96
0x400a9b0	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0x400a9b5	        0x480f45c2	                         cmovne rax, rdx	      3698	sequencer.c	FUNCTION_96
0x400a9b9	            0x31f6	                            xor esi, esi	      3701	sequencer.c	FUNCTION_96	CALL_1
0x400a9bb	      0x4889442418	             mov qword [rsp + 0x18], rax	      3698	sequencer.c	FUNCTION_96
0x400a9c0	      0xe800000000	                          call 0x400a9c5	      3701	sequencer.c	FUNCTION_96	CALL_1
0x400a9c5	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3702	sequencer.c	FUNCTION_96	CALL_2
0x400a9cd	            0x31f6	                            xor esi, esi	      3702	sequencer.c	FUNCTION_96	CALL_2
0x400a9cf	      0xe800000000	                          call 0x400a9d4	      3702	sequencer.c	FUNCTION_96	CALL_2
0x400a9d4	    0x488dbc24d001	                  lea rdi, [rsp + 0x1d0]	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400a9dc	            0x31d2	                            xor edx, edx	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400a9de	            0x31c9	                            xor ecx, ecx	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400a9e0	      0xbe00000000	                              mov esi, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400a9e5	      0xe800000000	                          call 0x400a9ea	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400a9ea	    0x488dbc240002	                  lea rdi, [rsp + 0x200]	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400a9f2	      0xbe20000000	                           mov esi, 0x20	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400a9f7	      0xe800000000	                          call 0x400a9fc	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400a9fc	    0x8b9424e80200	           mov edx, dword [rsp + 0x2e8] 	      3706	sequencer.c	FUNCTION_96	IF_1
0x400aa03	            0x85d2	                           test edx, edx	      3706	sequencer.c	FUNCTION_96	IF_1
0x400aa05	            0x7412	                            je 0x400aa19	      3706	sequencer.c	FUNCTION_96	IF_1
0x400aa07	    0x488b8424f002	           mov rax, qword [rsp + 0x2f0] 	      3706	sequencer.c	FUNCTION_96	IF_1
0x400aa0f	        0xf6401504	               test byte [rax + 0x15], 4	      3706	sequencer.c	FUNCTION_96	IF_1
0x400aa13	     0xf85be080000	                           jne 0x400b2d7	      3706	sequencer.c	FUNCTION_96	IF_1
0x400aa19	      0x488d442450	                   lea rax, [rsp + 0x50]	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400aa1e	        0x4183f501	                             xor r13d, 1	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400aa22	      0x4889442410	             mov qword [rsp + 0x10], rax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400aa27	      0x488d442448	                   lea rax, [rsp + 0x48]	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400aa2c	        0x48890424	                    mov qword [rsp], rax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400aa30	          0x4489e8	                           mov eax, r13d	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400aa33	          0x83e001	                              and eax, 1	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400aa36	        0x8844243b	               mov byte [rsp + 0x3b], al	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400aa3a	    0x660f1f440000	                    nop word [rax + rax]	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400aa40	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400aa48	      0xe800000000	                          call 0x400aa4d	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400aa4d	          0x4885c0	                           test rax, rax	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400aa50	          0x4889c3	                            mov rbx, rax	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400aa53	     0xf8473040000	                            je 0x400aecc	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400aa59	        0x488b3424	                    mov rsi, qword [rsp]	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400aa5d	        0x4c8d6304	                      lea r12, [rbx + 4]	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400aa61	          0x4889df	                            mov rdi, rbx	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400aa64	      0xe800000000	                          call 0x400aa69	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400aa69	          0x4c89e6	                            mov rsi, r12	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400aa6c	        0x4883c008	                              add rax, 8	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400aa70	          0x4889ef	                            mov rdi, rbp	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400aa73	        0x48890424	                    mov qword [rsp], rax	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400aa77	      0xe800000000	                          call 0x400aa7c	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400aa7c	          0x4889df	                            mov rdi, rbx	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x400aa7f	      0xe80c6bffff	       call sym.is_original_commit_empty	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x400aa84	            0x85c0	                           test eax, eax	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400aa86	          0x4189c5	                           mov r13d, eax	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x400aa89	            0x7508	                           jne 0x400aa93	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400aa8b	    0xf70300200000	                test dword [rbx], 0x2000	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400aa91	            0x75ad	                           jne 0x400aa40	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400aa93	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       165	strbuf.h	FUNCTION_108	IF_2
0x400aa9b	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       164	strbuf.h	FUNCTION_108
0x400aaa7	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x400aaad	     0xf843d030000	                            je 0x400adf0	       165	strbuf.h	FUNCTION_108	IF_2
0x400aab3	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x400aab6	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400aabe	    0x488dbc242002	                  lea rdi, [rsp + 0x220]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400aac6	          0x4889de	                            mov rsi, rbx	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400aac9	      0xe800000000	                          call 0x400aace	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400aace	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400aad2	          0x4885c0	                           test rax, rax	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400aad5	     0xf8475030000	                            je 0x400ae50	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400aadb	        0x4c8b7808	                mov r15, qword [rax + 8]	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400aadf	          0x4d85ff	                           test r15, r15	      3737	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400aae2	     0xf8468030000	                            je 0x400ae50	      3737	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400aae8	      0x49837f0800	                  cmp qword [r15 + 8], 0	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400aaed	     0xf8545030000	                           jne 0x400ae38	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400aaf3	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	       165	strbuf.h	FUNCTION_108	IF_2
0x400aafb	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       164	strbuf.h	FUNCTION_108
0x400ab07	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x400ab0d	     0xf840d030000	                            je 0x400ae20	       165	strbuf.h	FUNCTION_108	IF_2
0x400ab13	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x400ab16	    0x4c8bac24b000	            mov r13, qword [rsp + 0xb0] 	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400ab1e	      0xb800000000	                              mov eax, 0	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400ab23	          0x4c89ef	                            mov rdi, r13	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400ab26	            0xeb19	                           jmp 0x400ab41	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400ab28	     0xf1f84000000	                   nop dword [rax + rax]	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400ab30	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400ab34	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400ab38	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400ab3b	     0xf85e7010000	                           jne 0x400ad28	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400ab41	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400ab44	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400ab46	            0x75e8	                           jne 0x400ab30	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400ab48	      0xbe27000000	                           mov esi, 0x27	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ab4d	      0xe800000000	                          call 0x400ab52	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ab52	          0x4885c0	                           test rax, rax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400ab55	     0xf84cd010000	                            je 0x400ad28	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400ab5b	        0x4c8d7001	                      lea r14, [rax + 1]	      3762	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ab5f	      0xbe27000000	                           mov esi, 0x27	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ab64	          0x4c89f7	                            mov rdi, r14	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ab67	      0xe800000000	                          call 0x400ab6c	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ab6c	          0x4885c0	                           test rax, rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ab6f	     0xf84b3010000	                            je 0x400ad28	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ab75	          0x4c29f0	                            sub rax, r14	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400ab78	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400ab80	          0x4c89f6	                            mov rsi, r14	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400ab83	          0x4889c2	                            mov rdx, rax	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400ab86	      0xe800000000	                          call 0x400ab8b	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400ab8b	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ab93	           0xfb602	                   movzx eax, byte [rdx]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ab96	            0x84c0	                             test al, al	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ab98	            0x741d	                            je 0x400abb7	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ab9a	    0x660f1f440000	                    nop word [rax + rax]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400aba0	    0xf68000000000	                      test byte [rax], 1	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400aba7	            0x7403	                            je 0x400abac	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400aba9	          0xc6022d	                    mov byte [rdx], 0x2d	      3773	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400abac	        0x4883c201	                              add rdx, 1	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400abb0	           0xfb602	                   movzx eax, byte [rdx]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400abb3	            0x84c0	                             test al, al	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400abb5	            0x75e9	                           jne 0x400aba0	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400abb7	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       165	strbuf.h	FUNCTION_108	IF_2
0x400abbf	    0x48c784248800	               mov qword [rsp + 0x88], 0	       164	strbuf.h	FUNCTION_108
0x400abcb	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x400abd1	     0xf8431020000	                            je 0x400ae08	       165	strbuf.h	FUNCTION_108	IF_2
0x400abd7	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x400abda	          0x4c89e7	                            mov rdi, r12	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400abdd	    0x4c8db4248000	                   lea r14, [rsp + 0x80]	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400abe5	      0xe800000000	                          call 0x400abea	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400abea	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400abef	          0x4889c1	                            mov rcx, rax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400abf2	      0xbe00000000	                              mov esi, 0	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400abf7	            0x31c0	                            xor eax, eax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400abf9	          0x4c89f7	                            mov rdi, r14	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400abfc	      0xe800000000	                          call 0x400ac01	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400ac01	          0x498b07	                    mov rax, qword [r15]	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400ac04	        0x4c8d6804	                      lea r13, [rax + 4]	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400ac08	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400ac10	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x400ac13	     0xf8597010000	                           jne 0x400adb0	       141	strbuf.h	FUNCTION_107
0x400ac19	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x400ac1e	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_109	CALL_2
0x400ac21	      0xe800000000	                          call 0x400ac26	       228	strbuf.h	FUNCTION_109	CALL_2
0x400ac26	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x400ac2e	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x400ac32	          0x4c89ee	                            mov rsi, r13	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400ac35	          0x4889ef	                            mov rdi, rbp	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400ac38	    0x488984248800	             mov qword [rsp + 0x88], rax	       229	strbuf.h	FUNCTION_109
0x400ac40	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       229	strbuf.h	FUNCTION_109
0x400ac48	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_109
0x400ac4c	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       230	strbuf.h	FUNCTION_109
0x400ac54	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	       230	strbuf.h	FUNCTION_109
0x400ac5c	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x400ac60	      0xe800000000	                          call 0x400ac65	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400ac65	            0x85c0	                           test eax, eax	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400ac67	     0xf8513010000	                           jne 0x400ad80	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400ac6d	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400ac75	            0x31f6	                            xor esi, esi	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400ac77	          0x4c89ef	                            mov rdi, r13	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400ac7a	      0xe8c187ffff	                      call sym.label_oid	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400ac7f	          0x4989c5	                            mov r13, rax	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400ac82	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ac85	      0xe800000000	                          call 0x400ac8a	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ac8a	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ac8d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ac90	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ac93	      0xe800000000	                          call 0x400ac98	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ac98	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400aca0	      0xbe00000000	                              mov esi, 0	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400aca5	          0x4c89f7	                            mov rdi, r14	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400aca8	            0x31c0	                            xor eax, eax	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400acaa	      0xe800000000	                          call 0x400acaf	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400acaf	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400acb7	      0xe800000000	                          call 0x400acbc	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400acbc	        0x4883f8d7	             cmp rax, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_179	IF_1
0x400acc0	          0x4989c6	                            mov r14, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400acc3	     0xf878f060000	                            ja 0x400b358	       785	git-compat-util.h	FUNCTION_179	IF_1
0x400acc9	     0xf8471060000	                            je 0x400b340	       785	git-compat-util.h	FUNCTION_179	IF_1
0x400accf	        0x498d7629	                   lea rsi, [r14 + 0x29]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400acd3	      0xbf01000000	                              mov edi, 1	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400acd8	      0xe800000000	                          call 0x400acdd	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400acdd	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	        53	string3.h	FUNCTION_219	CALL_3
0x400ace5	        0x488d7828	                   lea rdi, [rax + 0x28]	        53	string3.h	FUNCTION_219	CALL_3
0x400ace9	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_219	CALL_3
0x400acec	          0x4989c5	                            mov r13, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400acef	      0xe800000000	                          call 0x400acf4	        53	string3.h	FUNCTION_219	CALL_3
0x400acf4	        0x488b5304	                mov rdx, qword [rbx + 4]	        53	string3.h	FUNCTION_219	CALL_3
0x400acf8	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400ad00	          0x4c89ee	                            mov rsi, r13	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400ad03	        0x49895510	             mov qword [r13 + 0x10], rdx	        53	string3.h	FUNCTION_219	CALL_3
0x400ad07	      0x498b542408	                mov rdx, qword [r12 + 8]	        53	string3.h	FUNCTION_219	CALL_3
0x400ad0c	        0x49895518	             mov qword [r13 + 0x18], rdx	        53	string3.h	FUNCTION_219	CALL_3
0x400ad10	      0x418b542410	            mov edx, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_219	CALL_3
0x400ad15	        0x41895520	             mov dword [r13 + 0x20], edx	        53	string3.h	FUNCTION_219	CALL_3
0x400ad19	      0xe800000000	                          call 0x400ad1e	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400ad1e	      0xe91dfdffff	                           jmp 0x400aa40	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400ad23	       0xf1f440000	                   nop dword [rax + rax]	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400ad28	      0xb800000000	                              mov eax, 0	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ad2d	            0xeb13	                           jmp 0x400ad42	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ad2f	              0x90	                                     nop	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400ad30	        0x4983c501	                              add r13, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400ad34	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400ad38	        0x413a55ff	                  cmp dl, byte [r13 - 1]	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400ad3c	     0xf858e000000	                           jne 0x400add0	       488	git-compat-util.h	FUNCTION_172	DO_1
0x400ad42	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400ad45	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400ad47	            0x75e7	                           jne 0x400ad30	       484	git-compat-util.h	FUNCTION_172	DO_1	IF_1
0x400ad49	      0xbe00000000	                              mov esi, 0	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400ad4e	          0x4c89ef	                            mov rdi, r13	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400ad51	      0xe800000000	                          call 0x400ad56	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400ad56	          0x4885c0	                           test rax, rax	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400ad59	            0x7475	                            je 0x400add0	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400ad5b	        0x4c8d6806	                      lea r13, [rax + 6]	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400ad5f	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ad62	      0xe800000000	                          call 0x400ad67	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ad67	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ad6f	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ad72	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ad75	      0xe800000000	                          call 0x400ad7a	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ad7a	      0xe90cfeffff	                           jmp 0x400ab8b	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ad7f	              0x90	                                     nop	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ad80	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400ad85	          0x498b3f	                    mov rdi, qword [r15]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400ad88	      0xe800000000	                          call 0x400ad8d	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400ad8d	        0x4883c008	                              add rax, 8	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400ad91	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400ad99	    0x488bb424d000	            mov rsi, qword [rsp + 0xd0] 	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400ada1	      0x4889442410	             mov qword [rsp + 0x10], rax	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400ada6	      0xe9ccfeffff	                           jmp 0x400ac77	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400adab	       0xf1f440000	                   nop dword [rax + rax]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400adb0	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	       141	strbuf.h	FUNCTION_107
0x400adb8	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400adbc	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400adbf	     0xf8569feffff	                           jne 0x400ac2e	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400adc5	      0xe94ffeffff	                           jmp 0x400ac19	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400adca	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x400add0	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400add8	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400ade0	      0xe800000000	                          call 0x400ade5	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400ade5	      0xe9a1fdffff	                           jmp 0x400ab8b	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400adea	    0x660f1f440000	                    nop word [rax + rax]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400adf0	    0x803d00000000	                cmp byte [0x0400adf7], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x400adf7	     0xf84b9fcffff	                            je 0x400aab6	       168	strbuf.h	FUNCTION_108	CALL_2
0x400adfd	      0xe926050000	                           jmp 0x400b328	       168	strbuf.h	FUNCTION_108	CALL_2
0x400ae02	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x400ae08	    0x803d00000000	                cmp byte [0x0400ae0f], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x400ae0f	     0xf84c5fdffff	                            je 0x400abda	       168	strbuf.h	FUNCTION_108	CALL_2
0x400ae15	      0xe90e050000	                           jmp 0x400b328	       168	strbuf.h	FUNCTION_108	CALL_2
0x400ae1a	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x400ae20	    0x803d00000000	                cmp byte [0x0400ae27], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x400ae27	     0xf84e9fcffff	                            je 0x400ab16	       168	strbuf.h	FUNCTION_108	CALL_2
0x400ae2d	      0xe9f6040000	                           jmp 0x400b328	       168	strbuf.h	FUNCTION_108	CALL_2
0x400ae32	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x400ae38	      0xba00000000	                              mov edx, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400ae3d	      0xbeac0e0000	                          mov esi, 0xeac	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400ae42	      0xbf00000000	                              mov edi, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400ae47	            0x31c0	                            xor eax, eax	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400ae49	      0xe800000000	                          call 0x400ae4e	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400ae4e	            0x6690	                                     nop	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400ae50	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       165	strbuf.h	FUNCTION_108	IF_2
0x400ae58	    0x48c784248800	               mov qword [rsp + 0x88], 0	       164	strbuf.h	FUNCTION_108
0x400ae64	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x400ae6a	     0xf8403040000	                            je 0x400b273	       165	strbuf.h	FUNCTION_108	IF_2
0x400ae70	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x400ae73	      0x807c243b00	                cmp byte [rsp + 0x3b], 0	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400ae78	    0x4c8db4248000	                   lea r14, [rsp + 0x80]	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400ae80	            0x741b	                            je 0x400ae9d	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400ae82	          0x4585ed	                         test r13d, r13d	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400ae85	            0x7416	                            je 0x400ae9d	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400ae87	     0xfbe15000000	           movsx edx, byte [0x0400ae8e] 	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400ae8e	      0xbe00000000	                              mov esi, 0	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400ae93	          0x4c89f7	                            mov rdi, r14	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400ae96	            0x31c0	                            xor eax, eax	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400ae98	      0xe800000000	                          call 0x400ae9d	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400ae9d	    0x4c8bac24b000	            mov r13, qword [rsp + 0xb0] 	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aea5	          0x4c89e7	                            mov rdi, r12	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aea8	      0xe800000000	                          call 0x400aead	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aead	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aeb2	          0x4889c1	                            mov rcx, rax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aeb5	      0xbe00000000	                              mov esi, 0	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aeba	          0x4d89e8	                             mov r8, r13	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aebd	          0x4c89f7	                            mov rdi, r14	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aec0	            0x31c0	                            xor eax, eax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aec2	      0xe800000000	                          call 0x400aec7	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aec7	      0xe9e3fdffff	                           jmp 0x400acaf	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400aecc	      0x4c8b642448	            mov r12, qword [rsp + 0x48] 	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400aed1	          0x4d85e4	                           test r12, r12	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400aed4	     0xf84a9000000	                            je 0x400af83	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400aeda	    0x660f1f440000	                    nop word [rax + rax]	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400aee0	        0x498b0424	                    mov rax, qword [r12]	      3804	sequencer.c	FUNCTION_96	FOR_2
0x400aee4	        0x4c8b6830	            mov r13, qword [rax + 0x30] 	      3804	sequencer.c	FUNCTION_96	FOR_2
0x400aee8	          0x4d85ed	                           test r13, r13	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400aeeb	            0x750c	                           jne 0x400aef9	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400aeed	            0xeb51	                           jmp 0x400af40	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400aeef	              0x90	                                     nop	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400aef0	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400aef4	          0x4d85ed	                           test r13, r13	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400aef7	            0x7447	                            je 0x400af40	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400aef9	        0x498b4500	                    mov rax, qword [r13]	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400aefd	          0x4889ef	                            mov rdi, rbp	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400af00	        0x488d5804	                      lea rbx, [rax + 4]	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400af04	          0x4889de	                            mov rsi, rbx	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400af07	      0xe800000000	                          call 0x400af0c	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400af0c	            0x85c0	                           test eax, eax	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400af0e	            0x74e0	                            je 0x400aef0	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400af10	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400af18	          0x4889de	                            mov rsi, rbx	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400af1b	      0xe800000000	                          call 0x400af20	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400af20	            0x85c0	                           test eax, eax	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400af22	            0x752c	                           jne 0x400af50	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400af24	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_37
0x400af2c	          0x4889de	                            mov rsi, rbx	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_37
0x400af2f	      0xe800000000	                          call 0x400af34	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_37
0x400af34	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400af38	          0x4d85ed	                           test r13, r13	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400af3b	            0x75bc	                           jne 0x400aef9	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400af3d	           0xf1f00	                         nop dword [rax]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400af40	      0x498b542408	                mov rdx, qword [r12 + 8]	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400af45	          0x4885d2	                           test rdx, rdx	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400af48	            0x741d	                            je 0x400af67	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400af4a	          0x4989d4	                            mov r12, rdx	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400af4d	            0xeb91	                           jmp 0x400aee0	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400af4f	              0x90	                                     nop	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400af50	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_38
0x400af58	      0xbe00000000	                              mov esi, 0	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_38
0x400af5d	          0x4889df	                            mov rdi, rbx	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_38
0x400af60	      0xe8db84ffff	                      call sym.label_oid	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_38
0x400af65	            0xeb89	                           jmp 0x400aef0	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_38
0x400af67	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400af6c	        0x498b3c24	                    mov rdi, qword [r12]	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400af70	      0xe800000000	                          call 0x400af75	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400af75	      0x498b542408	                mov rdx, qword [r12 + 8]	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400af7a	          0x4885d2	                           test rdx, rdx	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400af7d	     0xf85af030000	                           jne 0x400b332	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400af83	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	        97	stdio2.h	CALL_476
0x400af88	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        97	stdio2.h	CALL_476
0x400af8d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x400af8f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_476
0x400af94	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400af99	      0xe800000000	                          call 0x400af9e	        97	stdio2.h	CALL_476
0x400af9e	      0x4c8b642450	            mov r12, qword [rsp + 0x50] 	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400afa3	          0x4d85e4	                           test r12, r12	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400afa6	     0xf84b9010000	                            je 0x400b165	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400afac	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400afb1	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400afb6	            0xeb16	                           jmp 0x400afce	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400afb8	     0xf1f84000000	                   nop dword [rax + rax]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400afc0	      0x4d8b642408	                mov r12, qword [r12 + 8]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400afc5	          0x4d85e4	                           test r12, r12	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400afc8	     0xf8497010000	                            je 0x400b165	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400afce	        0x498b1c24	                    mov rbx, qword [r12]	      3832	sequencer.c	FUNCTION_96	FOR_4
0x400afd2	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400afda	    0x48c744245800	               mov qword [rsp + 0x58], 0	      3830	sequencer.c	FUNCTION_96	FOR_4
0x400afe3	        0x4c8d7b04	                      lea r15, [rbx + 4]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400afe7	          0x4c89fe	                            mov rsi, r15	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400afea	      0xe800000000	                          call 0x400afef	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400afef	            0x85c0	                           test eax, eax	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400aff1	            0x75cd	                           jne 0x400afc0	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400aff3	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_41
0x400affb	          0x4c89fe	                            mov rsi, r15	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_41
0x400affe	      0xe800000000	                          call 0x400b003	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_41
0x400b003	          0x4885c0	                           test rax, rax	      3837	sequencer.c	FUNCTION_96	FOR_4	IF_14
0x400b006	     0xf847c020000	                            je 0x400b288	      3837	sequencer.c	FUNCTION_96	FOR_4	IF_14
0x400b00c	        0x488d4828	                   lea rcx, [rax + 0x28]	        97	stdio2.h	CALL_476
0x400b010	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_476
0x400b015	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400b01a	          0x4c89ef	                            mov rdi, r13	        97	stdio2.h	CALL_476
0x400b01d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x400b01f	      0xe800000000	                          call 0x400b024	        97	stdio2.h	CALL_476
0x400b024	            0xeb3b	                           jmp 0x400b061	        97	stdio2.h	CALL_476
0x400b026	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        97	stdio2.h	CALL_476
0x400b030	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_43
0x400b038	          0x4c89fe	                            mov rsi, r15	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_43
0x400b03b	      0xe800000000	                          call 0x400b040	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_43
0x400b040	            0x85c0	                           test eax, eax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400b042	            0x752c	                           jne 0x400b070	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400b044	      0x488d742458	                   lea rsi, [rsp + 0x58]	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_44
0x400b049	          0x4889df	                            mov rdi, rbx	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_44
0x400b04c	      0xe800000000	                          call 0x400b051	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_44
0x400b051	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400b055	          0x4885c0	                           test rax, rax	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400b058	            0x744d	                            je 0x400b0a7	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400b05a	          0x488b18	                    mov rbx, qword [rax]	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0x400b05d	        0x4c8d7b04	                      lea r15, [rbx + 4]	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0x400b061	          0x4c89fe	                            mov rsi, r15	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400b064	          0x4889ef	                            mov rdi, rbp	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400b067	      0xe800000000	                          call 0x400b06c	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400b06c	            0x85c0	                           test eax, eax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400b06e	            0x75c0	                           jne 0x400b030	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400b070	          0x4885db	                           test rbx, rbx	      3852	sequencer.c	FUNCTION_96	FOR_4	IF_16
0x400b073	            0x7432	                            je 0x400b0a7	      3852	sequencer.c	FUNCTION_96	FOR_4	IF_16
0x400b075	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_45
0x400b07d	          0x4c89fe	                            mov rsi, r15	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_45
0x400b080	      0xe800000000	                          call 0x400b085	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_45
0x400b085	          0x4885c0	                           test rax, rax	      3859	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400b088	     0xf840c020000	                            je 0x400b29a	      3859	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400b08e	        0x4c8d7828	                   lea r15, [rax + 0x28]	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400b092	      0xbf00000000	                              mov edi, 0	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400b097	      0xb905000000	                              mov ecx, 5	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400b09c	          0x4c89fe	                            mov rsi, r15	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400b09f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400b0a1	     0xf8543010000	                           jne 0x400b1ea	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400b0a7	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	        97	stdio2.h	CALL_476
0x400b0ac	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_476
0x400b0b1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400b0b6	          0x4c89ef	                            mov rdi, r13	        97	stdio2.h	CALL_476
0x400b0b9	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x400b0bb	      0xe800000000	                          call 0x400b0c0	        97	stdio2.h	CALL_476
0x400b0c0	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b0c5	          0x4d85ff	                           test r15, r15	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b0c8	     0xf8402020000	                            je 0x400b2d0	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b0ce	            0x6690	                                     nop	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b0d0	          0x498b07	                    mov rax, qword [r15]	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b0d3	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_48
0x400b0db	        0x488d5804	                      lea rbx, [rax + 4]	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b0df	          0x4889de	                            mov rsi, rbx	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_48
0x400b0e2	      0xe800000000	                          call 0x400b0e7	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_48
0x400b0e7	          0x4885c0	                           test rax, rax	      3879	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_20
0x400b0ea	            0x7418	                            je 0x400b104	      3879	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_20
0x400b0ec	        0x488d4828	                   lea rcx, [rax + 0x28]	        97	stdio2.h	CALL_476
0x400b0f0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_476
0x400b0f5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400b0fa	          0x4c89ef	                            mov rdi, r13	        97	stdio2.h	CALL_476
0x400b0fd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x400b0ff	      0xe800000000	                          call 0x400b104	        97	stdio2.h	CALL_476
0x400b104	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_49
0x400b10c	          0x4889de	                            mov rsi, rbx	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_49
0x400b10f	      0xe800000000	                          call 0x400b114	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_49
0x400b114	          0x4885c0	                           test rax, rax	      3882	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0x400b117	            0x741b	                            je 0x400b134	      3882	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0x400b119	        0x4c8d4028	                    lea r8, [rax + 0x28]	        97	stdio2.h	CALL_476
0x400b11d	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_476
0x400b120	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_476
0x400b125	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400b12a	          0x4c89ef	                            mov rdi, r13	        97	stdio2.h	CALL_476
0x400b12d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x400b12f	      0xe800000000	                          call 0x400b134	        97	stdio2.h	CALL_476
0x400b134	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_50
0x400b13c	          0x4889de	                            mov rsi, rbx	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_50
0x400b13f	      0xe800000000	                          call 0x400b144	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_50
0x400b144	        0x4d8b7f08	                mov r15, qword [r15 + 8]	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b148	          0x4d85ff	                           test r15, r15	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b14b	            0x7583	                           jne 0x400b0d0	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b14d	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b152	      0xe800000000	                          call 0x400b157	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400b157	      0x4d8b642408	                mov r12, qword [r12 + 8]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400b15c	          0x4d85e4	                           test r12, r12	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400b15f	     0xf8569feffff	                           jne 0x400afce	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400b165	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      3891	sequencer.c	FUNCTION_96	CALL_52
0x400b16a	      0xe800000000	                          call 0x400b16f	      3891	sequencer.c	FUNCTION_96	CALL_52
0x400b16f	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      3892	sequencer.c	FUNCTION_96	CALL_53
0x400b174	      0xe800000000	                          call 0x400b179	      3892	sequencer.c	FUNCTION_96	CALL_53
0x400b179	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      3894	sequencer.c	FUNCTION_96	CALL_54
0x400b181	      0xe800000000	                          call 0x400b186	      3894	sequencer.c	FUNCTION_96	CALL_54
0x400b186	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3895	sequencer.c	FUNCTION_96	CALL_55
0x400b18e	      0xe800000000	                          call 0x400b193	      3895	sequencer.c	FUNCTION_96	CALL_55
0x400b193	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      3896	sequencer.c	FUNCTION_96	CALL_56
0x400b19b	      0xe800000000	                          call 0x400b1a0	      3896	sequencer.c	FUNCTION_96	CALL_56
0x400b1a0	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3898	sequencer.c	FUNCTION_96	CALL_57
0x400b1a8	      0xbe01000000	                              mov esi, 1	      3898	sequencer.c	FUNCTION_96	CALL_57
0x400b1ad	      0xe800000000	                          call 0x400b1b2	      3898	sequencer.c	FUNCTION_96	CALL_57
0x400b1b2	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3899	sequencer.c	FUNCTION_96	CALL_58
0x400b1ba	      0xbe01000000	                              mov esi, 1	      3899	sequencer.c	FUNCTION_96	CALL_58
0x400b1bf	      0xe800000000	                          call 0x400b1c4	      3899	sequencer.c	FUNCTION_96	CALL_58
0x400b1c4	    0x488dbc24d001	                  lea rdi, [rsp + 0x1d0]	      3900	sequencer.c	FUNCTION_96	CALL_59
0x400b1cc	      0xbe01000000	                              mov esi, 1	      3900	sequencer.c	FUNCTION_96	CALL_59
0x400b1d1	      0xe800000000	                          call 0x400b1d6	      3900	sequencer.c	FUNCTION_96	CALL_59
0x400b1d6	    0x488dbc240002	                  lea rdi, [rsp + 0x200]	      3901	sequencer.c	FUNCTION_96	CALL_60
0x400b1de	      0xe800000000	                          call 0x400b1e3	      3901	sequencer.c	FUNCTION_96	CALL_60
0x400b1e3	            0x31c0	                            xor eax, eax	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400b1e5	      0xe96af6ffff	                           jmp 0x400a854	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400b1ea	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       165	strbuf.h	FUNCTION_108	IF_2
0x400b1f2	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       164	strbuf.h	FUNCTION_108
0x400b1fe	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x400b204	     0xf8411010000	                            je 0x400b31b	       165	strbuf.h	FUNCTION_108	IF_2
0x400b20a	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x400b20d	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400b215	    0x488dbc242002	                  lea rdi, [rsp + 0x220]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400b21d	          0x4889de	                            mov rsi, rbx	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400b220	      0xe800000000	                          call 0x400b225	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400b225	    0x4c8b8c24b000	              mov r9, qword [rsp + 0xb0]	        97	stdio2.h	CALL_476
0x400b22d	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	        97	stdio2.h	CALL_476
0x400b232	          0x4d89f8	                             mov r8, r15	        97	stdio2.h	CALL_476
0x400b235	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_476
0x400b23a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400b23f	          0x4c89ef	                            mov rdi, r13	        97	stdio2.h	CALL_476
0x400b242	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x400b244	      0xe800000000	                          call 0x400b249	        97	stdio2.h	CALL_476
0x400b249	      0xe972feffff	                           jmp 0x400b0c0	        97	stdio2.h	CALL_476
0x400b24e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400b253	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400b258	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400b25a	      0xe800000000	                          call 0x400b25f	        54	gettext.h	FUNCTION_147
0x400b25f	          0x4889c7	                            mov rdi, rax	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400b262	            0x31c0	                            xor eax, eax	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400b264	      0xe800000000	                          call 0x400b269	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400b269	      0xb8ffffffff	                     mov eax, 0xffffffff	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400b26e	      0xe9e1f5ffff	                           jmp 0x400a854	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400b273	    0x803d00000000	                cmp byte [0x0400b27a], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x400b27a	     0xf84f3fbffff	                            je 0x400ae73	       168	strbuf.h	FUNCTION_108	CALL_2
0x400b280	      0xe9a3000000	                           jmp 0x400b328	       168	strbuf.h	FUNCTION_108	CALL_2
0x400b285	           0xf1f00	                         nop dword [rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x400b288	          0x4c89ee	                            mov rsi, r13	        97	stdio2.h	CALL_476
0x400b28b	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_476
0x400b290	      0xe800000000	                          call 0x400b295	        97	stdio2.h	CALL_476
0x400b295	      0xe9c7fdffff	                           jmp 0x400b061	        97	stdio2.h	CALL_476
0x400b29a	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0x400b29e	            0x85c0	                           test eax, eax	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0x400b2a0	     0xf8501feffff	                           jne 0x400b0a7	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0x400b2a6	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400b2ae	            0x31f6	                            xor esi, esi	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400b2b0	          0x4c89ff	                            mov rdi, r15	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400b2b3	      0xe88881ffff	                      call sym.label_oid	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400b2b8	          0x4885c0	                           test rax, rax	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400b2bb	          0x4989c7	                            mov r15, rax	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400b2be	     0xf85cefdffff	                           jne 0x400b092	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400b2c4	      0xe9defdffff	                           jmp 0x400b0a7	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400b2c9	     0xf1f80000000	                         nop dword [rax]	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400b2d0	            0x31ff	                            xor edi, edi	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b2d2	      0xe97bfeffff	                           jmp 0x400b152	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400b2d7	          0x488b18	                    mov rbx, qword [rax]	      3707	sequencer.c	FUNCTION_96	IF_1
0x400b2da	      0xbe2d000000	                           mov esi, 0x2d	      3708	sequencer.c	FUNCTION_96	IF_1
0x400b2df	      0xbf01000000	                              mov edi, 1	      3708	sequencer.c	FUNCTION_96	IF_1
0x400b2e4	      0xe800000000	                          call 0x400b2e9	      3708	sequencer.c	FUNCTION_96	IF_1
0x400b2e9	    0xc740286f6e74	     mov dword [rax + 0x28], 0x6f746e6f 	        53	string3.h	FUNCTION_219	CALL_3
0x400b2f0	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400b2f8	        0x488b7304	                mov rsi, qword [rbx + 4]	        53	string3.h	FUNCTION_219	CALL_3
0x400b2fc	        0x48897010	             mov qword [rax + 0x10], rsi	        53	string3.h	FUNCTION_219	CALL_3
0x400b300	        0x488b730c	              mov rsi, qword [rbx + 0xc]	        53	string3.h	FUNCTION_219	CALL_3
0x400b304	        0x48897018	             mov qword [rax + 0x18], rsi	        53	string3.h	FUNCTION_219	CALL_3
0x400b308	          0x8b4b14	            mov ecx, dword [rbx + 0x14] 	        53	string3.h	FUNCTION_219	CALL_3
0x400b30b	          0x4889c6	                            mov rsi, rax	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400b30e	          0x894820	             mov dword [rax + 0x20], ecx	        53	string3.h	FUNCTION_219	CALL_3
0x400b311	      0xe800000000	                          call 0x400b316	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400b316	      0xe9fef6ffff	                           jmp 0x400aa19	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400b31b	    0x803d00000000	                cmp byte [0x0400b322], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x400b322	     0xf84e5feffff	                            je 0x400b20d	       168	strbuf.h	FUNCTION_108	CALL_2
0x400b328	      0xe800000000	                          call 0x400b32d	       168	strbuf.h	FUNCTION_108	CALL_2
0x400b32d	      0xe800000000	                          call 0x400b332	      3965	sequencer.c	FUNCTION_97
0x400b332	        0x4883c008	                              add rax, 8	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400b336	      0x4889442410	             mov qword [rsp + 0x10], rax	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400b33b	      0xe90afcffff	                           jmp 0x400af4a	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400b340	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400b345	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400b34c	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400b351	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400b353	      0xe800000000	                          call 0x400b358	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400b358	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400b35b	      0xbe28000000	                           mov esi, 0x28	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400b360	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400b365	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
0x400b367	      0xe800000000	                          call 0x400b36c	       786	git-compat-util.h	FUNCTION_179	IF_1	CALL_1
sequencer_rollback	WHILE,0:IF,7:functions,0:SWITCH,0:ELSE,1:DO,0:FOR,0:CALL,24	281
0x4004840	            0x4154	                                push r12	      2277	sequencer.c	FUNCTION_71
0x4004842	              0x55	                                push rbp	      2277	sequencer.c	FUNCTION_71
0x4004843	          0x4889fd	                            mov rbp, rdi	      2277	sequencer.c	FUNCTION_71
0x4004846	              0x53	                                push rbx	      2277	sequencer.c	FUNCTION_71
0x4004847	    0x4881ecb00000	                           sub rsp, 0xb0	      2277	sequencer.c	FUNCTION_71
0x400484e	    0x488b3d000000	            mov rdi, qword [0x04004855] 	        42	sequencer.c	CALL_5
0x4004855	    0x64488b042528	                mov rax, qword fs:[0x28]	      2277	sequencer.c	FUNCTION_71
0x400485e	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      2277	sequencer.c	FUNCTION_71
0x4004866	            0x31c0	                            xor eax, eax	      2277	sequencer.c	FUNCTION_71
0x4004868	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2280	sequencer.c	FUNCTION_71
0x4004871	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2280	sequencer.c	FUNCTION_71
0x400487a	          0x4885ff	                           test rdi, rdi	        42	sequencer.c	CALL_5
0x400487d	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2280	sequencer.c	FUNCTION_71
0x4004886	     0xf847c020000	                            je 0x4004b08	        42	sequencer.c	CALL_5
0x400488c	      0xbe00000000	                              mov esi, 0	      2283	sequencer.c	FUNCTION_71	CALL_1
0x4004891	      0xe800000000	                          call 0x4004896	      2283	sequencer.c	FUNCTION_71	CALL_1
0x4004896	          0x4885c0	                           test rax, rax	      2284	sequencer.c	FUNCTION_71	IF_1
0x4004899	          0x4889c3	                            mov rbx, rax	      2283	sequencer.c	FUNCTION_71	CALL_1
0x400489c	     0xf84e6010000	                            je 0x4004a88	      2284	sequencer.c	FUNCTION_71	IF_1
0x40048a2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x40048a7	          0x4889c6	                            mov rsi, rax	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x40048aa	      0xe800000000	                          call 0x40048af	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x40048af	            0x85c0	                           test eax, eax	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x40048b1	          0x4889df	                            mov rdi, rbx	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x40048b4	     0xf85a6020000	                           jne 0x4004b60	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x40048ba	      0xe800000000	                          call 0x40048bf	      2300	sequencer.c	FUNCTION_71	CALL_12
0x40048bf	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40048c4	      0x488d542408	                      lea rdx, [rsp + 8]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40048c9	      0x488d742450	                   lea rsi, [rsp + 0x50]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40048ce	      0xe800000000	                          call 0x40048d3	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40048d3	            0x85c0	                           test eax, eax	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40048d5	     0xf85f5010000	                           jne 0x4004ad0	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40048db	      0x488b442408	                mov rax, qword [rsp + 8]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40048e0	          0x803800	                       cmp byte [rax], 0	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40048e3	     0xf85e7010000	                           jne 0x4004ad0	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40048e9	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       975	cache.h	FUNCTION_125	CALL_1
0x40048ee	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_125	CALL_1
0x40048f3	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_125	CALL_1
0x40048f8	      0xe800000000	                          call 0x40048fd	       975	cache.h	FUNCTION_125	CALL_1
0x40048fd	            0x85c0	                           test eax, eax	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x40048ff	     0xf84bb020000	                            je 0x4004bc0	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x4004905	    0x488b35000000	            mov rsi, qword [0x0400490c] 	        43	sequencer.c	CALL_6
0x400490c	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2229	sequencer.c	FUNCTION_68
0x4004915	    0x48c744243800	               mov qword [rsp + 0x38], 0	      2229	sequencer.c	FUNCTION_68
0x400491e	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2229	sequencer.c	FUNCTION_68
0x4004927	          0x4885f6	                           test rsi, rsi	        43	sequencer.c	CALL_6
0x400492a	     0xf84f8010000	                            je 0x4004b28	        43	sequencer.c	CALL_6
0x4004930	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004935	            0x31d2	                            xor edx, edx	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004937	      0xe800000000	                          call 0x400493c	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x400493c	          0x4885c0	                           test rax, rax	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x400493f	     0xf88db000000	                            js 0x4004a20	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004945	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x400494a	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x400494f	      0xe800000000	                          call 0x4004954	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x4004954	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004959	          0x4889de	                            mov rsi, rbx	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x400495c	      0xe800000000	                          call 0x4004961	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004961	            0x85c0	                           test eax, eax	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004963	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x4004968	     0xf8561030000	                           jne 0x4004ccf	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x400496e	      0xe800000000	                          call 0x4004973	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x4004973	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x400497b	      0xbf00000000	                              mov edi, 0	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004980	      0xe800000000	                          call 0x4004985	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004985	            0x85c0	                           test eax, eax	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004987	            0x7423	                            je 0x40049ac	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004989	    0x48c784249000	               mov qword [rsp + 0x90], 0	        90	string3.h	FUNCTION_222	CALL_5
0x4004995	    0x48c784249800	               mov qword [rsp + 0x98], 0	        90	string3.h	FUNCTION_222	CALL_5
0x40049a1	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	        90	string3.h	FUNCTION_222	CALL_5
0x40049ac	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       975	cache.h	FUNCTION_125	CALL_1
0x40049b4	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_125	CALL_1
0x40049b9	          0x4889de	                            mov rsi, rbx	       975	cache.h	FUNCTION_125	CALL_1
0x40049bc	      0xe800000000	                          call 0x40049c1	       975	cache.h	FUNCTION_125	CALL_1
0x40049c1	            0x85c0	                           test eax, eax	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_18
0x40049c3	     0xf848f000000	                            je 0x4004a58	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_18
0x40049c9	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40049cb	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40049d0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40049d5	      0xe800000000	                          call 0x40049da	        54	gettext.h	FUNCTION_147
0x40049da	          0x4889c7	                            mov rdi, rax	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x40049dd	            0x31c0	                            xor eax, eax	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x40049df	      0xe800000000	                          call 0x40049e4	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x40049e4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2318	sequencer.c	FUNCTION_71	CALL_22
0x40049e9	      0xe800000000	                          call 0x40049ee	      2318	sequencer.c	FUNCTION_71	CALL_22
0x40049ee	          0x4889ef	                            mov rdi, rbp	      2319	sequencer.c	FUNCTION_71	CALL_23
0x40049f1	      0xe800000000	                          call 0x40049f6	      2319	sequencer.c	FUNCTION_71	CALL_23
0x40049f6	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      2323	sequencer.c	FUNCTION_71
0x40049fe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2323	sequencer.c	FUNCTION_71
0x4004a07	     0xf85b6020000	                           jne 0x4004cc3	      2323	sequencer.c	FUNCTION_71
0x4004a0d	    0x4881c4b00000	                           add rsp, 0xb0	      2323	sequencer.c	FUNCTION_71
0x4004a14	              0x5b	                                 pop rbx	      2323	sequencer.c	FUNCTION_71
0x4004a15	              0x5d	                                 pop rbp	      2323	sequencer.c	FUNCTION_71
0x4004a16	            0x415c	                                 pop r12	      2323	sequencer.c	FUNCTION_71
0x4004a18	              0xc3	                                     ret	      2323	sequencer.c	FUNCTION_71
0x4004a19	     0xf1f80000000	                         nop dword [rax]	      2323	sequencer.c	FUNCTION_71
0x4004a20	      0xe800000000	                          call 0x4004a25	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4004a25	          0x833802	                      cmp dword [rax], 2	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4004a28	     0xf85ce020000	                           jne 0x4004cfc	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4004a2e	    0x48c744247000	               mov qword [rsp + 0x70], 0	        90	string3.h	FUNCTION_222	CALL_5
0x4004a37	    0x48c744247800	               mov qword [rsp + 0x78], 0	        90	string3.h	FUNCTION_222	CALL_5
0x4004a40	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	        90	string3.h	FUNCTION_222	CALL_5
0x4004a45	    0xc78424800000	               mov dword [rsp + 0x80], 0	        90	string3.h	FUNCTION_222	CALL_5
0x4004a50	      0xe91effffff	                           jmp 0x4004973	        90	string3.h	FUNCTION_222	CALL_5
0x4004a55	           0xf1f00	                         nop dword [rax]	        90	string3.h	FUNCTION_222	CALL_5
0x4004a58	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004a5d	      0xe83eb6ffff	             call sym.reset_for_rollback	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004a62	            0x85c0	                           test eax, eax	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004a64	     0xf847affffff	                            je 0x40049e4	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004a6a	    0x660f1f440000	                    nop word [rax + rax]	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004a70	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2321	sequencer.c	FUNCTION_71	CALL_24
0x4004a75	      0xe800000000	                          call 0x4004a7a	      2321	sequencer.c	FUNCTION_71	CALL_24
0x4004a7a	      0xb8ffffffff	                     mov eax, 0xffffffff	      2322	sequencer.c	FUNCTION_71
0x4004a7f	      0xe972ffffff	                           jmp 0x40049f6	      2322	sequencer.c	FUNCTION_71
0x4004a84	         0xf1f4000	                         nop dword [rax]	      2322	sequencer.c	FUNCTION_71
0x4004a88	      0xe800000000	                          call 0x4004a8d	      2284	sequencer.c	FUNCTION_71	IF_1
0x4004a8d	          0x833802	                      cmp dword [rax], 2	      2284	sequencer.c	FUNCTION_71	IF_1
0x4004a90	     0xf846a010000	                            je 0x4004c00	      2284	sequencer.c	FUNCTION_71	IF_1
0x4004a96	    0x488b1d000000	            mov rbx, qword [0x04004a9d] 	        42	sequencer.c	CALL_5
0x4004a9d	          0x4885db	                           test rbx, rbx	        42	sequencer.c	CALL_5
0x4004aa0	     0xf849d000000	                            je 0x4004b43	        42	sequencer.c	CALL_5
0x4004aa6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4004aab	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4004ab0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4004ab2	      0xe800000000	                          call 0x4004ab7	        54	gettext.h	FUNCTION_147
0x4004ab7	          0x4889de	                            mov rsi, rbx	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4004aba	          0x4889c7	                            mov rdi, rax	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4004abd	            0x31c0	                            xor eax, eax	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4004abf	      0xe800000000	                          call 0x4004ac4	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4004ac4	      0xb8ffffffff	                     mov eax, 0xffffffff	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4004ac9	      0xe928ffffff	                           jmp 0x40049f6	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4004ace	            0x6690	                                     nop	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4004ad0	    0x488b1d000000	            mov rbx, qword [0x04004ad7] 	        42	sequencer.c	CALL_5
0x4004ad7	          0x4885db	                           test rbx, rbx	        42	sequencer.c	CALL_5
0x4004ada	     0xf8491010000	                            je 0x4004c71	        42	sequencer.c	CALL_5
0x4004ae0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4004ae2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4004ae7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4004aec	      0xe800000000	                          call 0x4004af1	        54	gettext.h	FUNCTION_147
0x4004af1	          0x4889de	                            mov rsi, rbx	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004af4	          0x4889c7	                            mov rdi, rax	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004af7	            0x31c0	                            xor eax, eax	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004af9	      0xe800000000	                          call 0x4004afe	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004afe	      0xe96dffffff	                           jmp 0x4004a70	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004b03	       0xf1f440000	                   nop dword [rax + rax]	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004b08	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x4004b0d	      0xe800000000	                          call 0x4004b12	        42	sequencer.c	CALL_5
0x4004b12	          0x4889c7	                            mov rdi, rax	        42	sequencer.c	CALL_5
0x4004b15	    0x488905000000	            mov qword [0x04004b1c], rax 	        42	sequencer.c	CALL_5
0x4004b1c	      0xe96bfdffff	                           jmp 0x400488c	        42	sequencer.c	CALL_5
0x4004b21	     0xf1f80000000	                         nop dword [rax]	        42	sequencer.c	CALL_5
0x4004b28	      0xbf00000000	                              mov edi, 0	        43	sequencer.c	CALL_6
0x4004b2d	            0x31c0	                            xor eax, eax	        43	sequencer.c	CALL_6
0x4004b2f	      0xe800000000	                          call 0x4004b34	        43	sequencer.c	CALL_6
0x4004b34	          0x4889c6	                            mov rsi, rax	        43	sequencer.c	CALL_6
0x4004b37	    0x488905000000	            mov qword [0x04004b3e], rax 	        43	sequencer.c	CALL_6
0x4004b3e	      0xe9edfdffff	                           jmp 0x4004930	        43	sequencer.c	CALL_6
0x4004b43	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x4004b48	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x4004b4a	      0xe800000000	                          call 0x4004b4f	        42	sequencer.c	CALL_5
0x4004b4f	          0x4889c3	                            mov rbx, rax	        42	sequencer.c	CALL_5
0x4004b52	    0x488905000000	            mov qword [0x04004b59], rax 	        42	sequencer.c	CALL_5
0x4004b59	      0xe948ffffff	                           jmp 0x4004aa6	        42	sequencer.c	CALL_5
0x4004b5e	            0x6690	                                     nop	        42	sequencer.c	CALL_5
0x4004b60	      0xe800000000	                          call 0x4004b65	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004b65	            0x85c0	                           test eax, eax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004b67	            0x7477	                            je 0x4004be0	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004b69	      0xe800000000	                          call 0x4004b6e	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004b6e	            0x8b38	                    mov edi, dword [rax]	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004b70	      0xe800000000	                          call 0x4004b75	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004b75	          0x4989c4	                            mov r12, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004b78	    0x488b2d000000	            mov rbp, qword [0x04004b7f] 	        42	sequencer.c	CALL_5
0x4004b7f	          0x4885ed	                           test rbp, rbp	        42	sequencer.c	CALL_5
0x4004b82	     0xf8404010000	                            je 0x4004c8c	        42	sequencer.c	CALL_5
0x4004b88	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4004b8a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4004b8f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4004b94	      0xe800000000	                          call 0x4004b99	        54	gettext.h	FUNCTION_147
0x4004b99	          0x4c89e2	                            mov rdx, r12	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004b9c	          0x4889c7	                            mov rdi, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004b9f	          0x4889ee	                            mov rsi, rbp	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004ba2	            0x31c0	                            xor eax, eax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004ba4	      0xe800000000	                          call 0x4004ba9	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004ba9	          0x4889df	                            mov rdi, rbx	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_11
0x4004bac	      0xe800000000	                          call 0x4004bb1	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_11
0x4004bb1	      0xe9bafeffff	                           jmp 0x4004a70	      2298	sequencer.c	FUNCTION_71	IF_3
0x4004bb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2298	sequencer.c	FUNCTION_71	IF_3
0x4004bc0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4004bc2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4004bc7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4004bcc	      0xe800000000	                          call 0x4004bd1	        54	gettext.h	FUNCTION_147
0x4004bd1	          0x4889c7	                            mov rdi, rax	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4004bd4	            0x31c0	                            xor eax, eax	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4004bd6	      0xe800000000	                          call 0x4004bdb	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4004bdb	      0xe990feffff	                           jmp 0x4004a70	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4004be0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4004be5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4004bea	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4004bec	      0xe800000000	                          call 0x4004bf1	        54	gettext.h	FUNCTION_147
0x4004bf1	          0x4989c4	                            mov r12, rax	        54	gettext.h	FUNCTION_147
0x4004bf4	            0xeb82	                           jmp 0x4004b78	        54	gettext.h	FUNCTION_147
0x4004bf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        54	gettext.h	FUNCTION_147
0x4004c00	      0xe800000000	                          call 0x4004c05	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004c05	          0x4889c7	                            mov rdi, rax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004c08	      0xe800000000	                          call 0x4004c0d	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004c0d	            0x85c0	                           test eax, eax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004c0f	            0x7515	                           jne 0x4004c26	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004c11	      0xe800000000	                          call 0x4004c16	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x4004c16	          0x4889c7	                            mov rdi, rax	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x4004c19	      0xe800000000	                          call 0x4004c1e	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x4004c1e	            0x85c0	                           test eax, eax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004c20	     0xf84fe000000	                            je 0x4004d24	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004c26	    0x488d94249000	                   lea rdx, [rsp + 0x90]	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004c2e	            0x31c9	                            xor ecx, ecx	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004c30	            0x31f6	                            xor esi, esi	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004c32	      0xbf00000000	                              mov edi, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004c37	      0xe800000000	                          call 0x4004c3c	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004c3c	            0x85c0	                           test eax, eax	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004c3e	     0xf8584000000	                           jne 0x4004cc8	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004c44	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       975	cache.h	FUNCTION_125	CALL_1
0x4004c4c	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_125	CALL_1
0x4004c51	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_125	CALL_1
0x4004c56	      0xe800000000	                          call 0x4004c5b	       975	cache.h	FUNCTION_125	CALL_1
0x4004c5b	            0x85c0	                           test eax, eax	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4004c5d	            0x7448	                            je 0x4004ca7	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4004c5f	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      2273	sequencer.c	FUNCTION_70	CALL_10
0x4004c67	      0xe834b4ffff	             call sym.reset_for_rollback	      2273	sequencer.c	FUNCTION_70	CALL_10
0x4004c6c	      0xe985fdffff	                           jmp 0x40049f6	      2290	sequencer.c	FUNCTION_71	IF_1	CALL_2
0x4004c71	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x4004c76	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x4004c78	      0xe800000000	                          call 0x4004c7d	        42	sequencer.c	CALL_5
0x4004c7d	          0x4889c3	                            mov rbx, rax	        42	sequencer.c	CALL_5
0x4004c80	    0x488905000000	            mov qword [0x04004c87], rax 	        42	sequencer.c	CALL_5
0x4004c87	      0xe954feffff	                           jmp 0x4004ae0	        42	sequencer.c	CALL_5
0x4004c8c	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x4004c91	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x4004c93	      0xe800000000	                          call 0x4004c98	        42	sequencer.c	CALL_5
0x4004c98	          0x4889c5	                            mov rbp, rax	        42	sequencer.c	CALL_5
0x4004c9b	    0x488905000000	            mov qword [0x04004ca2], rax 	        42	sequencer.c	CALL_5
0x4004ca2	      0xe9e1feffff	                           jmp 0x4004b88	        42	sequencer.c	CALL_5
0x4004ca7	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x4004cac	      0xe89fb7ffff	                       call sym._.part.6	        42	sequencer.c	CALL_5
0x4004cb1	          0x4889c7	                            mov rdi, rax	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004cb4	            0x31c0	                            xor eax, eax	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004cb6	      0xe800000000	                          call 0x4004cbb	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004cbb	          0x83c8ff	                      or eax, 0xffffffff	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004cbe	      0xe933fdffff	                           jmp 0x40049f6	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004cc3	      0xe800000000	                          call 0x4004cc8	      2323	sequencer.c	FUNCTION_71
0x4004cc8	      0xbf00000000	                              mov edi, 0	      2323	sequencer.c	FUNCTION_71
0x4004ccd	            0xebdd	                           jmp 0x4004cac	      2323	sequencer.c	FUNCTION_71
0x4004ccf	      0xe800000000	                          call 0x4004cd4	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x4004cd4	    0x48833d000000	               cmp qword [0x04004cdc], 0	        43	sequencer.c	CALL_6
0x4004cdc	            0x744d	                            je 0x4004d2b	        43	sequencer.c	CALL_6
0x4004cde	    0x488b1d000000	            mov rbx, qword [0x04004ce5] 	        43	sequencer.c	CALL_6
0x4004ce5	      0xbf00000000	                              mov edi, 0	        43	sequencer.c	CALL_6
0x4004cea	      0xe861b7ffff	                       call sym._.part.6	        43	sequencer.c	CALL_6
0x4004cef	          0x4889c7	                            mov rdi, rax	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004cf2	            0x31c0	                            xor eax, eax	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004cf4	          0x4889de	                            mov rsi, rbx	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004cf7	      0xe800000000	                          call 0x4004cfc	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004cfc	    0x48833d000000	               cmp qword [0x04004d04], 0	        43	sequencer.c	CALL_6
0x4004d04	            0x743a	                            je 0x4004d40	        43	sequencer.c	CALL_6
0x4004d06	    0x488b1d000000	            mov rbx, qword [0x04004d0d] 	        43	sequencer.c	CALL_6
0x4004d0d	      0xbf00000000	                              mov edi, 0	        43	sequencer.c	CALL_6
0x4004d12	      0xe839b7ffff	                       call sym._.part.6	        43	sequencer.c	CALL_6
0x4004d17	          0x4889c7	                            mov rdi, rax	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004d1a	            0x31c0	                            xor eax, eax	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004d1c	          0x4889de	                            mov rsi, rbx	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004d1f	      0xe800000000	                          call 0x4004d24	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004d24	      0xbf00000000	                              mov edi, 0	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004d29	            0xeb81	                           jmp 0x4004cac	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004d2b	      0xbf00000000	                              mov edi, 0	        43	sequencer.c	CALL_6
0x4004d30	            0x31c0	                            xor eax, eax	        43	sequencer.c	CALL_6
0x4004d32	      0xe800000000	                          call 0x4004d37	        43	sequencer.c	CALL_6
0x4004d37	    0x488905000000	            mov qword [0x04004d3e], rax 	        43	sequencer.c	CALL_6
0x4004d3e	            0xeb9e	                           jmp 0x4004cde	        43	sequencer.c	CALL_6
0x4004d40	      0xbf00000000	                              mov edi, 0	        43	sequencer.c	CALL_6
0x4004d45	            0x31c0	                            xor eax, eax	        43	sequencer.c	CALL_6
0x4004d47	      0xe800000000	                          call 0x4004d4c	        43	sequencer.c	CALL_6
0x4004d4c	    0x488905000000	            mov qword [0x04004d53], rax 	        43	sequencer.c	CALL_6
0x4004d53	            0xebb1	                           jmp 0x4004d06	        43	sequencer.c	CALL_6
append_conflicts_hint	WHILE,1:IF,1:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,1:CALL,3	81
0x4003ab0	            0x4157	                                push r15	       490	sequencer.c	FUNCTION_20
0x4003ab2	            0x4156	                                push r14	       490	sequencer.c	FUNCTION_20
0x4003ab4	            0x4155	                                push r13	       490	sequencer.c	FUNCTION_20
0x4003ab6	            0x4154	                                push r12	       490	sequencer.c	FUNCTION_20
0x4003ab8	          0x4989fc	                            mov r12, rdi	       490	sequencer.c	FUNCTION_20
0x4003abb	              0x55	                                push rbp	       490	sequencer.c	FUNCTION_20
0x4003abc	              0x53	                                push rbx	       490	sequencer.c	FUNCTION_20
0x4003abd	        0x4883ec08	                              sub rsp, 8	       490	sequencer.c	FUNCTION_20
0x4003ac1	          0x488b07	                    mov rax, qword [rdi]	       490	sequencer.c	FUNCTION_20
0x4003ac4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x4003ac7	     0xf8503010000	                           jne 0x4003bd0	       141	strbuf.h	FUNCTION_107
0x4003acd	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4003ad2	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_109	CALL_2
0x4003ad5	      0xe800000000	                          call 0x4003ada	       228	strbuf.h	FUNCTION_109	CALL_2
0x4003ada	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_109	CALL_2
0x4003adf	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_109
0x4003ae4	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x4003ae8	      0xbe00000000	                              mov esi, 0	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003aed	          0x4c89e7	                            mov rdi, r12	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003af0	            0x31db	                            xor ebx, ebx	       495	sequencer.c	FUNCTION_20	FOR_1
0x4003af2	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_109
0x4003af7	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x4003afb	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_109
0x4003b00	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_109
0x4003b05	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4003b09	            0x31c0	                            xor eax, eax	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003b0b	      0xe800000000	                          call 0x4003b10	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003b10	    0x448b2d000000	           mov r13d, dword [0x04003b17] 	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003b17	    0x4c8b35000000	            mov r14, qword [0x04003b1e] 	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003b1e	          0x4863c3	                         movsxd rax, ebx	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003b21	        0x498d04c6	                  lea rax, [r14 + rax*8]	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003b25	            0xeb1c	                           jmp 0x4003b43	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003b27	    0x660f1f840000	                    nop word [rax + rax]	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003b30	          0x488b38	                    mov rdi, qword [rax]	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003b33	          0x83c301	                              add ebx, 1	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003b36	        0x4883c008	                              add rax, 8	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003b3a	    0xf74738003000	        test dword [rdi + 0x38], 0x3000 	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4003b41	            0x751d	                           jne 0x4003b60	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4003b43	          0x4139dd	                           cmp r13d, ebx	       495	sequencer.c	FUNCTION_20	FOR_1
0x4003b46	            0x77e8	                            ja 0x4003b30	       495	sequencer.c	FUNCTION_20	FOR_1
0x4003b48	        0x4883c408	                              add rsp, 8	       504	sequencer.c	FUNCTION_20
0x4003b4c	              0x5b	                                 pop rbx	       504	sequencer.c	FUNCTION_20
0x4003b4d	              0x5d	                                 pop rbp	       504	sequencer.c	FUNCTION_20
0x4003b4e	            0x415c	                                 pop r12	       504	sequencer.c	FUNCTION_20
0x4003b50	            0x415d	                                 pop r13	       504	sequencer.c	FUNCTION_20
0x4003b52	            0x415e	                                 pop r14	       504	sequencer.c	FUNCTION_20
0x4003b54	            0x415f	                                 pop r15	       504	sequencer.c	FUNCTION_20
0x4003b56	              0xc3	                                     ret	       504	sequencer.c	FUNCTION_20
0x4003b57	    0x660f1f840000	                    nop word [rax + rax]	       504	sequencer.c	FUNCTION_20
0x4003b60	        0x488d6f58	                   lea rbp, [rdi + 0x58]	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003b64	            0x31c0	                            xor eax, eax	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003b66	      0xbe00000000	                              mov esi, 0	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003b6b	          0x4c89e7	                            mov rdi, r12	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003b6e	          0x4889ea	                            mov rdx, rbp	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003b71	      0xe800000000	                          call 0x4003b76	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003b76	    0x448b2d000000	           mov r13d, dword [0x04003b7d] 	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003b7d	    0x4c8b35000000	            mov r14, qword [0x04003b84] 	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003b84	          0x4139dd	                           cmp r13d, ebx	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003b87	            0x7695	                           jbe 0x4003b1e	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003b89	    0x4c8b35000000	            mov r14, qword [0x04003b90] 	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003b90	          0x4863c3	                         movsxd rax, ebx	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003b93	        0x4d8d3cc6	                  lea r15, [r14 + rax*8]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003b97	            0xeb17	                           jmp 0x4003bb0	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003b99	     0xf1f80000000	                         nop dword [rax]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003ba0	          0x83c301	                              add ebx, 1	       501	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003ba3	        0x4983c708	                              add r15, 8	       501	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003ba7	          0x4439eb	                           cmp ebx, r13d	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003baa	     0xf836effffff	                           jae 0x4003b1e	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003bb0	          0x498b07	                    mov rax, qword [r15]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003bb3	          0x4889ef	                            mov rdi, rbp	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003bb6	        0x488d7058	                   lea rsi, [rax + 0x58]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003bba	      0xe800000000	                          call 0x4003bbf	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003bbf	            0x85c0	                           test eax, eax	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003bc1	            0x74dd	                            je 0x4003ba0	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003bc3	      0xe956ffffff	                           jmp 0x4003b1e	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003bc8	     0xf1f84000000	                   nop dword [rax + rax]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003bd0	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_107
0x4003bd4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003bd8	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003bdb	     0xf85fefeffff	                           jne 0x4003adf	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x4003be1	      0xe9e7feffff	                           jmp 0x4003acd	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
do_pick_commit	WHILE,0:IF,38:functions,0:SWITCH,0:ELSE,12:DO,0:FOR,1:CALL,94	1608
0x4005000	            0x4157	                                push r15	      1497	sequencer.c	FUNCTION_48
0x4005002	            0x4156	                                push r14	      1497	sequencer.c	FUNCTION_48
0x4005004	            0x4155	                                push r13	      1497	sequencer.c	FUNCTION_48
0x4005006	            0x4154	                                push r12	      1497	sequencer.c	FUNCTION_48
0x4005008	          0x4189fc	                           mov r12d, edi	      1497	sequencer.c	FUNCTION_48
0x400500b	              0x55	                                push rbp	      1497	sequencer.c	FUNCTION_48
0x400500c	              0x53	                                push rbx	      1497	sequencer.c	FUNCTION_48
0x400500d	          0x4889f5	                            mov rbp, rsi	      1497	sequencer.c	FUNCTION_48
0x4005010	          0x4889d3	                            mov rbx, rdx	      1497	sequencer.c	FUNCTION_48
0x4005013	    0x4881ec780100	                          sub rsp, 0x178	      1497	sequencer.c	FUNCTION_48
0x400501a	        0x448b6a04	               mov r13d, dword [rdx + 4]	      1498	sequencer.c	FUNCTION_48
0x400501e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1497	sequencer.c	FUNCTION_48
0x4005027	    0x488984246801	            mov qword [rsp + 0x168], rax	      1497	sequencer.c	FUNCTION_48
0x400502f	            0x31c0	                            xor eax, eax	      1497	sequencer.c	FUNCTION_48
0x4005031	        0x894c2454	             mov dword [rsp + 0x54], ecx	      1497	sequencer.c	FUNCTION_48
0x4005035	          0x4585ed	                         test r13d, r13d	      1498	sequencer.c	FUNCTION_48
0x4005038	     0xf84d2030000	                            je 0x4005410	      1498	sequencer.c	FUNCTION_48
0x400503e	    0xc74424500200	               mov dword [rsp + 0x50], 2	      1498	sequencer.c	FUNCTION_48
0x4005046	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1499	sequencer.c	FUNCTION_48	CALL_1
0x400504f	        0x448b5b0c	            mov r11d, dword [rbx + 0xc] 	      1508	sequencer.c	FUNCTION_48	IF_1
0x4005053	    0x488d84241001	                  lea rax, [rsp + 0x110]	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x400505b	    0x48c784249000	               mov qword [rsp + 0x90], 0	      1505	sequencer.c	FUNCTION_48
0x4005067	    0x48c784249800	               mov qword [rsp + 0x98], 0	      1505	sequencer.c	FUNCTION_48
0x4005073	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      1505	sequencer.c	FUNCTION_48
0x400507f	      0x4889442420	             mov qword [rsp + 0x20], rax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4005084	          0x4585db	                         test r11d, r11d	      1508	sequencer.c	FUNCTION_48	IF_1
0x4005087	     0xf84a3030000	                            je 0x4005430	      1508	sequencer.c	FUNCTION_48	IF_1
0x400508d	            0x31d2	                            xor edx, edx	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x400508f	            0x31f6	                            xor esi, esi	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4005091	          0x4889c7	                            mov rdi, rax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4005094	      0xe800000000	                          call 0x4005099	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4005099	            0x85c0	                           test eax, eax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x400509b	     0xf850f100000	                           jne 0x40060b0	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x40050a1	          0x4531f6	                          xor r14d, r14d	      1506	sequencer.c	FUNCTION_48
0x40050a4	      0xbf00000000	                              mov edi, 0	      1525	sequencer.c	FUNCTION_48
0x40050a9	      0xe800000000	                          call 0x40050ae	      1525	sequencer.c	FUNCTION_48
0x40050ae	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      1527	sequencer.c	FUNCTION_48	IF_5
0x40050b2	          0x4885c0	                           test rax, rax	      1527	sequencer.c	FUNCTION_48	IF_5
0x40050b5	     0xf84260d0000	                            je 0x4005de1	      1527	sequencer.c	FUNCTION_48	IF_5
0x40050bb	        0x488b4808	                mov rcx, qword [rax + 8]	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40050bf	          0x4885c9	                           test rcx, rcx	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40050c2	     0xf84300a0000	                            je 0x4005af8	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40050c8	        0x448b6b2c	           mov r13d, dword [rbx + 0x2c] 	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x40050cc	          0x4585ed	                         test r13d, r13d	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x40050cf	     0xf84ec140000	                            je 0x40065c1	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x40050d5	        0x4183fd01	                             cmp r13d, 1	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050d9	            0x742b	                            je 0x4005106	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050db	      0xba01000000	                              mov edx, 1	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050e0	          0x4889c8	                            mov rax, rcx	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050e3	            0xeb10	                           jmp 0x40050f5	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050e5	           0xf1f00	                         nop dword [rax]	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050e8	          0x4885c0	                           test rax, rax	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050eb	     0xf845f100000	                            je 0x4006150	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050f1	        0x488b4008	                mov rax, qword [rax + 8]	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050f5	          0x83c201	                              add edx, 1	      1540	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050f8	          0x4139d5	                           cmp r13d, edx	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050fb	            0x75eb	                           jne 0x40050e8	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40050fd	          0x4885c0	                           test rax, rax	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4005100	     0xf844a100000	                            je 0x4006150	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4005106	          0x4c8b28	                    mov r13, qword [rax]	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x4005109	      0xe800000000	                          call 0x400510e	       320	sequencer.c	FUNCTION_11	CALL_2
0x400510e	            0x31f6	                            xor esi, esi	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005110	          0x4889c2	                            mov rdx, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005113	          0x4889ef	                            mov rdi, rbp	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005116	      0xe800000000	                          call 0x400511b	       320	sequencer.c	FUNCTION_11	CALL_2
0x400511b	        0x488d4d04	                      lea rcx, [rbp + 4]	       312	sequencer.c	FUNCTION_10	CALL_1
0x400511f	    0x8b3500000000	            mov esi, dword [0x04005125] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005125	      0x4889442408	                mov qword [rsp + 8], rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x400512a	          0x4889cf	                            mov rdi, rcx	       312	sequencer.c	FUNCTION_10	CALL_1
0x400512d	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005132	      0xe800000000	                          call 0x4005137	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005137	    0x488d8c24f000	                   lea rcx, [rsp + 0xf0]	       323	sequencer.c	FUNCTION_11	CALL_4
0x400513f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005144	          0x4989c7	                            mov r15, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005147	          0x4889ce	                            mov rsi, rcx	       323	sequencer.c	FUNCTION_11	CALL_4
0x400514a	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       323	sequencer.c	FUNCTION_11	CALL_4
0x400514f	      0xe800000000	                          call 0x4005154	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005154	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	       325	sequencer.c	FUNCTION_11	CALL_5
0x400515c	          0x4863f0	                         movsxd rsi, eax	       325	sequencer.c	FUNCTION_11	CALL_5
0x400515f	      0xe800000000	                          call 0x4005164	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005164	          0x4c89fe	                            mov rsi, r15	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005167	          0x4889c2	                            mov rdx, rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x400516a	      0x4889442428	             mov qword [rsp + 0x28], rax	       325	sequencer.c	FUNCTION_11	CALL_5
0x400516f	      0xbf00000000	                              mov edi, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005174	            0x31c0	                            xor eax, eax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005176	      0xe800000000	                          call 0x400517b	       326	sequencer.c	FUNCTION_11	CALL_6
0x400517b	      0xbf00000000	                              mov edi, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005180	      0x4889442418	             mov qword [rsp + 0x18], rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005185	          0x4889c6	                            mov rsi, rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005188	            0x31c0	                            xor eax, eax	       327	sequencer.c	FUNCTION_11	CALL_7
0x400518a	      0xe800000000	                          call 0x400518f	       327	sequencer.c	FUNCTION_11	CALL_7
0x400518f	        0x448b4b14	            mov r9d, dword [rbx + 0x14] 	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005193	      0x4889442410	             mov qword [rsp + 0x10], rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005198	          0x4585c9	                           test r9d, r9d	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x400519b	     0xf85ff020000	                           jne 0x40054a0	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40051a1	          0x4d85ed	                           test r13, r13	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x40051a4	            0x7412	                            je 0x40051b8	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x40051a6	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_117	CALL_1
0x40051a8	          0x4c89ef	                            mov rdi, r13	        75	commit.h	FUNCTION_117	CALL_1
0x40051ab	      0xe800000000	                          call 0x40051b0	        75	commit.h	FUNCTION_117	CALL_1
0x40051b0	            0x85c0	                           test eax, eax	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x40051b2	     0xf88d70c0000	                            js 0x4005e8f	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x40051b8	        0x4183fc01	                             cmp r12d, 1	      1583	sequencer.c	FUNCTION_48	IF_15
0x40051bc	     0xf8446080000	                            je 0x4005a08	      1583	sequencer.c	FUNCTION_48	IF_15
0x40051c2	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40051c7	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40051cc	      0xe800000000	                          call 0x40051d1	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40051d1	            0x85c0	                           test eax, eax	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40051d3	     0xf85470a0000	                           jne 0x4005c20	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40051d9	        0x448b4308	                mov r8d, dword [rbx + 8]	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x40051dd	          0x4585c0	                           test r8d, r8d	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x40051e0	     0xf8552090000	                           jne 0x4005b38	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x40051e6	      0x418d4424fc	                      lea eax, [r12 - 4]	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x40051eb	          0x83f801	                              cmp eax, 1	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x40051ee	     0xf865c050000	                           jbe 0x4005750	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x40051f4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_45
0x40051f9	      0xe892b1ffff	                     call sym.get_author	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_45
0x40051fe	        0x4183fc03	                             cmp r12d, 3	      1623	sequencer.c	FUNCTION_48	IF_21
0x4005202	      0x4889442440	             mov qword [rsp + 0x40], rax	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_45
0x4005207	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x400520a	      0xb812000000	                           mov eax, 0x12	      1623	sequencer.c	FUNCTION_48	IF_21
0x400520f	       0xf45442450	          cmovne eax, dword [rsp + 0x50]	      1623	sequencer.c	FUNCTION_48	IF_21
0x4005214	            0x85ff	                           test edi, edi	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005216	        0x89442450	             mov dword [rsp + 0x50], eax	      1623	sequencer.c	FUNCTION_48	IF_21
0x400521a	     0xf85f0040000	                           jne 0x4005710	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005220	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005225	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x400522a	    0x4c8db4249000	                   lea r14, [rsp + 0x90]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005232	          0x4989ea	                            mov r10, rbp	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005235	          0x833b02	                      cmp dword [rbx], 2	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005238	     0xf84720b0000	                            je 0x4005db0	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x400523e	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005242	          0x4885f6	                           test rsi, rsi	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005245	     0xf846d030000	                            je 0x40055b8	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x400524b	      0xbf00000000	                              mov edi, 0	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005250	      0xb90a000000	                            mov ecx, 0xa	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005255	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005257	     0xf845b030000	                            je 0x40055b8	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x400525d	        0x4183fc01	                             cmp r12d, 1	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005261	     0xf8451030000	                            je 0x40055b8	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005267	      0x4c89542458	             mov qword [rsp + 0x58], r10	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x400526c	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1658	sequencer.c	FUNCTION_48	ELSE_10
0x4005278	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	      1659	sequencer.c	FUNCTION_48	ELSE_10
0x4005284	      0xe800000000	                          call 0x4005289	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x4005289	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x4005291	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x4005299	            0x31c9	                            xor ecx, ecx	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x400529b	          0x4889c2	                            mov rdx, rax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x400529e	      0xe86dd4ffff	                  call sym.write_message	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x40052a3	          0x4189c7	                           mov r15d, eax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x40052a6	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x40052ae	          0x4c89ef	                            mov rdi, r13	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x40052b1	          0x4889c6	                            mov rsi, rax	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x40052b4	      0xe800000000	                          call 0x40052b9	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x40052b9	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x40052be	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x40052c3	          0x4c89d7	                            mov rdi, r10	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x40052c6	      0xe800000000	                          call 0x40052cb	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x40052cb	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x40052d0	    0x4c8bac24f000	            mov r13, qword [rsp + 0xf0] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x40052d8	      0xe800000000	                          call 0x40052dd	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x40052dd	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x40052e1	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x40052e5	          0x4989c0	                             mov r8, rax	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x40052e8	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x40052ec	    0x488b8c24d000	            mov rcx, qword [rsp + 0xd0] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x40052f4	          0x4d89e9	                             mov r9, r13	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x40052f7	      0xe800000000	                          call 0x40052fc	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x40052fc	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_73
0x4005304	          0x4109c7	                            or r15d, eax	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005307	      0xe800000000	                          call 0x400530c	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_73
0x400530c	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_74
0x4005314	      0xe800000000	                          call 0x4005319	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_74
0x4005319	          0x4c89f7	                            mov rdi, r14	      1672	sequencer.c	FUNCTION_48	CALL_75
0x400531c	      0xe800000000	                          call 0x4005321	      1672	sequencer.c	FUNCTION_48	CALL_75
0x4005321	          0x4585e4	                         test r12d, r12d	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005324	     0xf85ec020000	                           jne 0x4005616	      1680	sequencer.c	FUNCTION_48	IF_31
0x400532a	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1680	sequencer.c	FUNCTION_48	IF_31
0x400532d	            0x85c0	                           test eax, eax	      1680	sequencer.c	FUNCTION_48	IF_31
0x400532f	     0xf844b030000	                            je 0x4005680	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005335	          0x4585ff	                         test r15d, r15d	      1689	sequencer.c	FUNCTION_48	IF_33
0x4005338	     0xf854c030000	                           jne 0x400568a	      1689	sequencer.c	FUNCTION_48	IF_33
0x400533e	          0x8b431c	            mov eax, dword [rbx + 0x1c] 	      1277	sequencer.c	FUNCTION_40	IF_1
0x4005341	            0x85c0	                           test eax, eax	      1277	sequencer.c	FUNCTION_40	IF_1
0x4005343	     0xf8597090000	                           jne 0x4005ce0	      1277	sequencer.c	FUNCTION_40	IF_1
0x4005349	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1705	sequencer.c	FUNCTION_48	IF_36
0x400534c	            0x85c0	                           test eax, eax	      1705	sequencer.c	FUNCTION_48	IF_36
0x400534e	     0xf853c090000	                           jne 0x4005c90	      1705	sequencer.c	FUNCTION_48	IF_36
0x4005354	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x400535a	     0xf8590100000	                           jne 0x40063f0	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005360	        0x4183fc01	                             cmp r12d, 1	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005364	     0xf8486100000	                            je 0x40063f0	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x400536a	      0xf644245004	               test byte [rsp + 0x50], 4	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x400536f	     0xf85760b0000	                           jne 0x4005eeb	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005375	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400537a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400537f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4005381	      0xe800000000	                          call 0x4005386	        54	gettext.h	FUNCTION_147
0x4005386	          0x4889c7	                            mov rdi, rax	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x4005389	            0x31c0	                            xor eax, eax	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x400538b	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x4005391	      0xe800000000	                          call 0x4005396	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x4005396	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x400539f	              0x90	                                     nop	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40053a0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       334	sequencer.c	FUNCTION_12	CALL_1
0x40053a5	      0xe800000000	                          call 0x40053aa	       334	sequencer.c	FUNCTION_12	CALL_1
0x40053aa	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       335	sequencer.c	FUNCTION_12	CALL_2
0x40053af	      0xe800000000	                          call 0x40053b4	       335	sequencer.c	FUNCTION_12	CALL_2
0x40053b4	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       336	sequencer.c	FUNCTION_12	CALL_3
0x40053b9	      0xe800000000	                          call 0x40053be	       336	sequencer.c	FUNCTION_12	CALL_3
0x40053be	      0x488b742408	                mov rsi, qword [rsp + 8]	       337	sequencer.c	FUNCTION_12	CALL_4
0x40053c3	          0x4889ef	                            mov rdi, rbp	       337	sequencer.c	FUNCTION_12	CALL_4
0x40053c6	      0xe800000000	                          call 0x40053cb	       337	sequencer.c	FUNCTION_12	CALL_4
0x40053cb	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1723	sequencer.c	FUNCTION_48	CALL_93
0x40053d0	      0xe800000000	                          call 0x40053d5	      1723	sequencer.c	FUNCTION_48	CALL_93
0x40053d5	      0xe856b3ffff	       call sym.update_abort_safety_file	      1724	sequencer.c	FUNCTION_48	CALL_94
0x40053da	          0x4489f8	                           mov eax, r15d	      1726	sequencer.c	FUNCTION_48
0x40053dd	    0x488b9c246801	           mov rbx, qword [rsp + 0x168] 	      1727	sequencer.c	FUNCTION_48
0x40053e5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1727	sequencer.c	FUNCTION_48
0x40053ee	     0xf8593170000	                           jne 0x4006b87	      1727	sequencer.c	FUNCTION_48
0x40053f4	    0x4881c4780100	                          add rsp, 0x178	      1727	sequencer.c	FUNCTION_48
0x40053fb	              0x5b	                                 pop rbx	      1727	sequencer.c	FUNCTION_48
0x40053fc	              0x5d	                                 pop rbp	      1727	sequencer.c	FUNCTION_48
0x40053fd	            0x415c	                                 pop r12	      1727	sequencer.c	FUNCTION_48
0x40053ff	            0x415d	                                 pop r13	      1727	sequencer.c	FUNCTION_48
0x4005401	            0x415e	                                 pop r14	      1727	sequencer.c	FUNCTION_48
0x4005403	            0x415f	                                 pop r15	      1727	sequencer.c	FUNCTION_48
0x4005405	              0xc3	                                     ret	      1727	sequencer.c	FUNCTION_48
0x4005406	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1727	sequencer.c	FUNCTION_48
0x4005410	      0xe800000000	                          call 0x4005415	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4005415	    0xc74424500000	               mov dword [rsp + 0x50], 0	      1498	sequencer.c	FUNCTION_48
0x400541d	      0x4889442448	             mov qword [rsp + 0x48], rax	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4005422	      0xe928fcffff	                           jmp 0x400504f	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4005427	    0x660f1f840000	                    nop word [rax + rax]	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4005430	      0xbf00000000	                              mov edi, 0	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x4005435	          0x4889c6	                            mov rsi, rax	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x4005438	      0xe800000000	                          call 0x400543d	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x400543d	            0x85c0	                           test eax, eax	      1519	sequencer.c	FUNCTION_48	ELSE_1	IF_3
0x400543f	          0x4189c6	                           mov r14d, eax	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x4005442	      0xbf00000000	                              mov edi, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4005447	            0x7435	                            je 0x400547e	      1519	sequencer.c	FUNCTION_48	ELSE_1	IF_3
0x4005449	    0x488b05000000	            mov rax, qword [0x04005450] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x4005450	      0xbf00000000	                              mov edi, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4005455	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x4005459	        0x488b4038	            mov rax, qword [rax + 0x38] 	        53	string3.h	FUNCTION_219	CALL_3
0x400545d	          0x488b10	                    mov rdx, qword [rax]	        53	string3.h	FUNCTION_219	CALL_3
0x4005460	    0x488994241001	            mov qword [rsp + 0x110], rdx	        53	string3.h	FUNCTION_219	CALL_3
0x4005468	        0x488b5008	                mov rdx, qword [rax + 8]	        53	string3.h	FUNCTION_219	CALL_3
0x400546c	    0x488994241801	            mov qword [rsp + 0x118], rdx	        53	string3.h	FUNCTION_219	CALL_3
0x4005474	          0x8b4010	            mov eax, dword [rax + 0x10] 	        53	string3.h	FUNCTION_219	CALL_3
0x4005477	    0x898424200100	            mov dword [rsp + 0x120], eax	        53	string3.h	FUNCTION_219	CALL_3
0x400547e	            0x31d2	                            xor edx, edx	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4005480	            0x31f6	                            xor esi, esi	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4005482	      0xe800000000	                          call 0x4005487	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4005487	            0x85c0	                           test eax, eax	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4005489	     0xf8415fcffff	                            je 0x40050a4	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x400548f	          0x4889df	                            mov rdi, rbx	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x4005492	      0xe8f9b4ffff	              call sym.error_dirty_index	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x4005497	      0xe941ffffff	                           jmp 0x40053dd	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x400549c	         0xf1f4000	                         nop dword [rax]	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x40054a0	      0x418d4424fc	                      lea eax, [r12 - 4]	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40054a5	          0x83f801	                              cmp eax, 1	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40054a8	     0xf86f3fcffff	                           jbe 0x40051a1	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40054ae	          0x4d85ed	                           test r13, r13	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40054b1	     0xf84c7090000	                            je 0x4005e7e	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40054b7	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       975	cache.h	FUNCTION_125	CALL_1
0x40054bc	        0x498d7d04	                      lea rdi, [r13 + 4]	       975	cache.h	FUNCTION_125	CALL_1
0x40054c0	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_125	CALL_1
0x40054c5	      0xe800000000	                          call 0x40054ca	       975	cache.h	FUNCTION_125	CALL_1
0x40054ca	            0x85c0	                           test eax, eax	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x40054cc	     0xf85d4fcffff	                           jne 0x40051a6	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x40054d2	          0x833b02	                      cmp dword [rbx], 2	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x40054d5	     0xf84010a0000	                            je 0x4005edc	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x40054db	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40054e0	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40054e5	          0x4889d9	                            mov rcx, rbx	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40054e8	          0x4489f2	                           mov edx, r14d	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40054eb	      0xe8c0bcffff	                call sym.fast_forward_to	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40054f0	            0x85c0	                           test eax, eax	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x40054f2	          0x4189c7	                           mov r15d, eax	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40054f5	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1503	sequencer.c	FUNCTION_48
0x40054fe	     0xf859cfeffff	                           jne 0x40053a0	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4005504	        0x4183fc03	                             cmp r12d, 3	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4005508	     0xf8592feffff	                           jne 0x40053a0	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x400550e	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1566	sequencer.c	FUNCTION_48	IF_11
0x4005517	    0xc74424501600	           mov dword [rsp + 0x50], 0x16 	      1565	sequencer.c	FUNCTION_48	IF_11
0x400551f	        0x8b542450	            mov edx, dword [rsp + 0x50] 	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005523	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005528	          0x4889de	                            mov rsi, rbx	      1235	sequencer.c	FUNCTION_38	CALL_11
0x400552b	      0xe850cdffff	                 call sym.run_git_commit	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005530	          0x4189c7	                           mov r15d, eax	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005533	        0x8b7c2454	            mov edi, dword [rsp + 0x54] 	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005537	            0x85ff	                           test edi, edi	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005539	           0xf95c2	                                setne dl	      1235	sequencer.c	FUNCTION_38	CALL_11
0x400553c	          0x4585ff	                         test r15d, r15d	      1235	sequencer.c	FUNCTION_38	CALL_11
0x400553f	           0xf94c0	                                 sete al	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005542	            0x21d0	                            and eax, edx	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005544	            0x84c0	                             test al, al	      1713	sequencer.c	FUNCTION_48	IF_38
0x4005546	     0xf8454feffff	                            je 0x40053a0	      1713	sequencer.c	FUNCTION_48	IF_38
0x400554c	    0x488b3d000000	            mov rdi, qword [0x04005553] 	        90	sequencer.c	CALL_14
0x4005553	          0x4885ff	                           test rdi, rdi	        90	sequencer.c	CALL_14
0x4005556	     0xf841c110000	                            je 0x4006678	        90	sequencer.c	CALL_14
0x400555c	      0xe800000000	                          call 0x4005561	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_87
0x4005561	    0x488b3d000000	            mov rdi, qword [0x04005568] 	        82	sequencer.c	CALL_13
0x4005568	          0x4885ff	                           test rdi, rdi	        82	sequencer.c	CALL_13
0x400556b	     0xf84ec100000	                            je 0x400665d	        82	sequencer.c	CALL_13
0x4005571	      0xe800000000	                          call 0x4005576	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_89
0x4005576	    0x488b3d000000	            mov rdi, qword [0x0400557d] 	        95	sequencer.c	CALL_15
0x400557d	          0x4885ff	                           test rdi, rdi	        95	sequencer.c	CALL_15
0x4005580	     0xf84bc100000	                            je 0x4006642	        95	sequencer.c	CALL_15
0x4005586	      0xe800000000	                          call 0x400558b	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_91
0x400558b	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_108	IF_2
0x400558f	    0x48c743680000	               mov qword [rbx + 0x68], 0	       164	strbuf.h	FUNCTION_108
0x4005597	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_108	IF_2
0x400559d	     0xf84e40b0000	                            je 0x4006187	       165	strbuf.h	FUNCTION_108	IF_2
0x40055a3	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_108	IF_2
0x40055a6	    0xc74378000000	               mov dword [rbx + 0x78], 0	      1718	sequencer.c	FUNCTION_48	IF_38
0x40055ad	          0x4531ff	                          xor r15d, r15d	      1718	sequencer.c	FUNCTION_48	IF_38
0x40055b0	      0xe9ebfdffff	                           jmp 0x40053a0	      1718	sequencer.c	FUNCTION_48	IF_38
0x40055b5	           0xf1f00	                         nop dword [rax]	      1718	sequencer.c	FUNCTION_48	IF_38
0x40055b8	        0x4883ec08	                              sub rsp, 8	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x40055bc	          0x4c89f9	                            mov rcx, r15	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x40055bf	          0x4c89da	                            mov rdx, r11	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x40055c2	              0x53	                                push rbx	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x40055c3	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x40055c8	          0x4d89f1	                             mov r9, r14	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x40055cb	          0x4c89d6	                            mov rsi, r10	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x40055ce	          0x4c89ef	                            mov rdi, r13	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x40055d1	      0xe81ae6ffff	             call sym.do_recursive_merge	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x40055d6	            0x85c0	                           test eax, eax	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x40055d8	          0x4189c7	                           mov r15d, eax	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x40055db	              0x5a	                                 pop rdx	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x40055dc	              0x59	                                 pop rcx	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x40055dd	     0xf88fafdffff	                            js 0x40053dd	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x40055e3	      0xe800000000	                          call 0x40055e8	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x40055e8	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x40055f0	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x40055f8	            0x31c9	                            xor ecx, ecx	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x40055fa	          0x4889c2	                            mov rdx, rax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x40055fd	      0xe80ed1ffff	                  call sym.write_message	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005602	          0x4c89f7	                            mov rdi, r14	      1672	sequencer.c	FUNCTION_48	CALL_75
0x4005605	          0x4109c7	                            or r15d, eax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005608	      0xe800000000	                          call 0x400560d	      1672	sequencer.c	FUNCTION_48	CALL_75
0x400560d	          0x4585e4	                         test r12d, r12d	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005610	     0xf8414fdffff	                            je 0x400532a	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005616	        0x4183fc01	                             cmp r12d, 1	      1684	sequencer.c	FUNCTION_48	IF_32
0x400561a	     0xf8515fdffff	                           jne 0x4005335	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005620	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005623	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005625	     0xf8420060000	                            je 0x4005c4b	      1684	sequencer.c	FUNCTION_48	IF_32
0x400562b	          0x4585ff	                         test r15d, r15d	      1684	sequencer.c	FUNCTION_48	IF_32
0x400562e	     0xf8517060000	                           jne 0x4005c4b	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005634	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005639	          0x4531c9	                            xor r9d, r9d	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x400563c	            0x31c9	                            xor ecx, ecx	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x400563e	            0x31ff	                            xor edi, edi	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005640	    0x41b801000000	                              mov r8d, 1	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005646	      0xbe00000000	                              mov esi, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x400564b	      0xe800000000	                          call 0x4005650	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005650	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005652	     0xf84e6fcffff	                            je 0x400533e	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005658	    0x8b3500000000	            mov esi, dword [0x0400565e] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x400565e	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005663	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1687	sequencer.c	FUNCTION_48	IF_32
0x4005669	      0xe800000000	                          call 0x400566e	       312	sequencer.c	FUNCTION_10	CALL_1
0x400566e	          0x4989c4	                            mov r12, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005671	      0xe9fb050000	                           jmp 0x4005c71	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005676	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005680	        0x4183ff01	                             cmp r15d, 1	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005684	     0xf86f30e0000	                           jbe 0x400657d	      1680	sequencer.c	FUNCTION_48	IF_31
0x400568a	    0x8b3500000000	            mov esi, dword [0x04005690] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005690	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005695	      0xe800000000	                          call 0x400569a	       312	sequencer.c	FUNCTION_10	CALL_1
0x400569a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400569f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40056a4	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40056a6	          0x4989c4	                            mov r12, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x40056a9	      0xe800000000	                          call 0x40056ae	        54	gettext.h	FUNCTION_147
0x40056ae	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1690	sequencer.c	FUNCTION_48	IF_33
0x40056b3	          0x4889c7	                            mov rdi, rax	      1690	sequencer.c	FUNCTION_48	IF_33
0x40056b6	          0x4c89e6	                            mov rsi, r12	      1690	sequencer.c	FUNCTION_48	IF_33
0x40056b9	            0x31c0	                            xor eax, eax	      1690	sequencer.c	FUNCTION_48	IF_33
0x40056bb	      0xe800000000	                          call 0x40056c0	      1690	sequencer.c	FUNCTION_48	IF_33
0x40056c0	      0xbf00000000	                              mov edi, 0	       342	sequencer.c	FUNCTION_13	CALL_1
0x40056c5	      0xe800000000	                          call 0x40056ca	       342	sequencer.c	FUNCTION_13	CALL_1
0x40056ca	          0x4885c0	                           test rax, rax	       344	sequencer.c	FUNCTION_13	IF_1
0x40056cd	     0xf84d5050000	                            je 0x4005ca8	       344	sequencer.c	FUNCTION_13	IF_1
0x40056d3	    0x488b3d000000	            mov rdi, qword [0x040056da] 	        97	stdio2.h	CALL_476
0x40056da	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_476
0x40056dd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_476
0x40056e2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x40056e7	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x40056e9	      0xe800000000	                          call 0x40056ee	        97	stdio2.h	CALL_476
0x40056ee	      0xe800000000	                          call 0x40056f3	       351	sequencer.c	FUNCTION_13	IF_1	CALL_3
0x40056f3	          0x4889c7	                            mov rdi, rax	       351	sequencer.c	FUNCTION_13	IF_1	CALL_3
0x40056f6	      0xe800000000	                          call 0x40056fb	       351	sequencer.c	FUNCTION_13	IF_1	CALL_3
0x40056fb	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x40056fe	      0xe800000000	                          call 0x4005703	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x4005703	      0xe998fcffff	                           jmp 0x40053a0	      1696	sequencer.c	FUNCTION_48	IF_33
0x4005708	     0xf1f84000000	                   nop dword [rax + rax]	      1696	sequencer.c	FUNCTION_48	IF_33
0x4005710	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005715	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x400571a	    0x4c8db4249000	                   lea r14, [rsp + 0x90]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005722	          0x4989ea	                            mov r10, rbp	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005725	            0x31d2	                            xor edx, edx	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005727	            0x31f6	                            xor esi, esi	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005729	          0x4c89f7	                            mov rdi, r14	      1646	sequencer.c	FUNCTION_48	CALL_61
0x400572c	      0x4c895c2460	             mov qword [rsp + 0x60], r11	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005731	      0x4c89542458	             mov qword [rsp + 0x58], r10	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005736	      0xe800000000	                          call 0x400573b	      1646	sequencer.c	FUNCTION_48	CALL_61
0x400573b	      0x4c8b5c2460	            mov r11, qword [rsp + 0x60] 	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005740	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005745	      0xe9ebfaffff	                           jmp 0x4005235	      1646	sequencer.c	FUNCTION_48	CALL_61
0x400574a	    0x660f1f440000	                    nop word [rax + rax]	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005750	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      1373	sequencer.c	FUNCTION_45	IF_1
0x4005753	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1369	sequencer.c	FUNCTION_45
0x400575f	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	      1369	sequencer.c	FUNCTION_45
0x400576b	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      1369	sequencer.c	FUNCTION_45
0x4005777	            0x85d2	                           test edx, edx	      1373	sequencer.c	FUNCTION_45	IF_1
0x4005779	     0xf8e310f0000	                           jle 0x40066b0	      1373	sequencer.c	FUNCTION_45	IF_1
0x400577f	    0x488b35000000	            mov rsi, qword [0x04005786] 	        82	sequencer.c	CALL_13
0x4005786	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x4005792	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x400579e	    0x48c784240001	              mov qword [rsp + 0x100], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x40057aa	          0x4885f6	                           test rsi, rsi	        82	sequencer.c	CALL_13
0x40057ad	     0xf8422090000	                            je 0x40060d5	        82	sequencer.c	CALL_13
0x40057b3	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x40057bb	      0xba09000000	                              mov edx, 9	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x40057c0	          0x4889c7	                            mov rdi, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x40057c3	      0x4889442458	             mov qword [rsp + 0x58], rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x40057c8	      0xe800000000	                          call 0x40057cd	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x40057cd	          0x4885c0	                           test rax, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x40057d0	     0xf8e85130000	                           jle 0x4006b5b	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x40057d6	    0x4c8bbc24e000	            mov r15, qword [rsp + 0xe0] 	      1381	sequencer.c	FUNCTION_45	IF_1
0x40057de	    0x440fb6350000	          movzx r14d, byte [0x040057e6] 	      1381	sequencer.c	FUNCTION_45	IF_1
0x40057e6	          0x453837	                    cmp byte [r15], r14b	      1382	sequencer.c	FUNCTION_45	IF_1
0x40057e9	     0xf84bd0d0000	                            je 0x40065ac	      1382	sequencer.c	FUNCTION_45	IF_1
0x40057ef	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x40057f4	        0x410fbed6	                         movsx edx, r14b	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x40057f8	      0xbe00000000	                              mov esi, 0	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x40057fd	            0x31c0	                            xor eax, eax	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x40057ff	      0xe800000000	                          call 0x4005804	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4005804	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005807	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400580c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4005811	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4005813	        0x448d7002	                     lea r14d, [rax + 2]	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005817	      0xe800000000	                          call 0x400581c	        54	gettext.h	FUNCTION_147
0x400581c	          0x4489f2	                           mov edx, r14d	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x400581f	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005824	          0x4889c6	                            mov rsi, rax	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005827	            0x31c0	                            xor eax, eax	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005829	          0x4c89f7	                            mov rdi, r14	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x400582c	      0xe800000000	                          call 0x4005831	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005831	          0x4c89fa	                            mov rdx, r15	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005834	    0x482b9424e000	             sub rdx, qword [rsp + 0xe0]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x400583c	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005841	    0x4c8b8424f800	              mov r8, qword [rsp + 0xf8]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005849	    0x488b8c240001	           mov rcx, qword [rsp + 0x100] 	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005851	            0x31f6	                            xor esi, esi	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005853	      0xe800000000	                          call 0x4005858	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005858	          0x4c89f7	                            mov rdi, r14	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x400585b	      0xe800000000	                          call 0x4005860	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x4005860	            0x31f6	                            xor esi, esi	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x4005862	          0x4889ef	                            mov rdi, rbp	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x4005865	      0xe800000000	                          call 0x400586a	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x400586a	          0x4885c0	                           test rax, rax	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x400586d	          0x4989c6	                            mov r14, rax	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x4005870	     0xf84aa130000	                            je 0x4006c20	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x4005876	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1422	sequencer.c	FUNCTION_45	CALL_35
0x400587b	          0x4889c7	                            mov rdi, rax	      1422	sequencer.c	FUNCTION_45	CALL_35
0x400587e	      0xe800000000	                          call 0x4005883	      1422	sequencer.c	FUNCTION_45	CALL_35
0x4005883	        0x4183fc05	                             cmp r12d, 5	      1424	sequencer.c	FUNCTION_45	IF_8
0x4005887	     0xf84530c0000	                            je 0x40064e0	      1424	sequencer.c	FUNCTION_45	IF_8
0x400588d	     0xfbe15000000	           movsx edx, byte [0x04005894] 	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x4005894	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x4005899	      0xbe00000000	                              mov esi, 0	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x400589e	            0x31c0	                            xor eax, eax	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40058a0	      0xe800000000	                          call 0x40058a5	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40058a5	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40058a8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40058ad	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40058b2	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40058b4	        0x448d7801	                     lea r15d, [rax + 1]	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40058b8	        0x44897b78	            mov dword [rbx + 0x78], r15d	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40058bc	      0xe800000000	                          call 0x40058c1	        54	gettext.h	FUNCTION_147
0x40058c1	          0x4489fa	                           mov edx, r15d	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40058c4	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40058c9	          0x4889c6	                            mov rsi, rax	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40058cc	            0x31c0	                            xor eax, eax	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40058ce	          0x4c89ff	                            mov rdi, r15	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40058d1	      0xe800000000	                          call 0x40058d6	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40058d6	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_110	CALL_2
0x40058db	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x40058e0	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x40058e3	      0x4c897c2458	             mov qword [rsp + 0x58], r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x40058e8	      0xe800000000	                          call 0x40058ed	       279	strbuf.h	FUNCTION_110	CALL_2
0x40058ed	    0x4c8bbc24f000	            mov r15, qword [rsp + 0xf0] 	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40058f5	          0x4c89ff	                            mov rdi, r15	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40058f8	      0xe800000000	                          call 0x40058fd	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40058fd	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005902	          0x4889c2	                            mov rdx, rax	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005905	          0x4c89fe	                            mov rsi, r15	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005908	      0xe800000000	                          call 0x400590d	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x400590d	          0x4c89f6	                            mov rsi, r14	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4005910	          0x4889ef	                            mov rdi, rbp	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4005913	      0xe800000000	                          call 0x4005918	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4005918	    0x488b15000000	            mov rdx, qword [0x0400591f] 	        82	sequencer.c	CALL_13
0x400591f	          0x4885d2	                           test rdx, rdx	        82	sequencer.c	CALL_13
0x4005922	     0xf8457100000	                            je 0x400697f	        82	sequencer.c	CALL_13
0x4005928	    0x488bb424d800	            mov rsi, qword [rsp + 0xd8] 	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005930	    0x488bbc24e000	            mov rdi, qword [rsp + 0xe0] 	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005938	            0x31c9	                            xor ecx, ecx	      1441	sequencer.c	FUNCTION_45	CALL_52
0x400593a	      0xe8d1cdffff	                  call sym.write_message	      1441	sequencer.c	FUNCTION_45	CALL_52
0x400593f	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1442	sequencer.c	FUNCTION_45	CALL_53
0x4005944	          0x4189c6	                           mov r14d, eax	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005947	      0xe800000000	                          call 0x400594c	      1442	sequencer.c	FUNCTION_45	CALL_53
0x400594c	          0x4585f6	                         test r14d, r14d	      1444	sequencer.c	FUNCTION_45	IF_10
0x400594f	     0xf857d050000	                           jne 0x4005ed2	      1444	sequencer.c	FUNCTION_45	IF_10
0x4005955	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400595a	      0xe800000000	                          call 0x400595f	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400595f	          0x4489e2	                           mov edx, r12d	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4005962	          0x4989c0	                             mov r8, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005965	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005969	        0x48c1e204	                              shl rdx, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x400596d	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005972	      0xb800000000	                              mov eax, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005977	    0x488b8a000000	                    mov rcx, qword [rdx]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x400597e	      0xba00000000	                              mov edx, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005983	      0xbe00000000	                              mov esi, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005988	        0x480f45d0	                         cmovne rdx, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400598c	            0x31c0	                            xor eax, eax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400598e	      0xe800000000	                          call 0x4005993	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005993	    0x488b15000000	            mov rdx, qword [0x0400599a] 	        95	sequencer.c	CALL_15
0x400599a	          0x4885d2	                           test rdx, rdx	        95	sequencer.c	CALL_15
0x400599d	     0xf8400110000	                            je 0x4006aa3	        95	sequencer.c	CALL_15
0x40059a3	        0x488b7368	            mov rsi, qword [rbx + 0x68] 	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40059a7	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40059ab	            0x31c9	                            xor ecx, ecx	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40059ad	      0xe85ecdffff	                  call sym.write_message	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40059b2	            0x85c0	                           test eax, eax	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x40059b4	     0xf8518050000	                           jne 0x4005ed2	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x40059ba	        0x8b742454	            mov esi, dword [rsp + 0x54] 	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x40059be	            0x85f6	                           test esi, esi	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x40059c0	     0xf8590090000	                           jne 0x4006356	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x40059c6	    0x488b05000000	            mov rax, qword [0x040059cd] 	        82	sequencer.c	CALL_13
0x40059cd	          0x4885c0	                           test rax, rax	        82	sequencer.c	CALL_13
0x40059d0	      0x4889442448	             mov qword [rsp + 0x48], rax	        82	sequencer.c	CALL_13
0x40059d5	     0xf84fe100000	                            je 0x4006ad9	        82	sequencer.c	CALL_13
0x40059db	      0x834c245004	                or dword [rsp + 0x50], 4	      1627	sequencer.c	FUNCTION_48	ELSE_6	IF_22
0x40059e0	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      1503	sequencer.c	FUNCTION_48
0x40059e5	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1503	sequencer.c	FUNCTION_48
0x40059ea	          0x4989ea	                            mov r10, rbp	      1503	sequencer.c	FUNCTION_48
0x40059ed	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1503	sequencer.c	FUNCTION_48
0x40059f6	    0x4c8db4249000	                   lea r14, [rsp + 0x90]	      1503	sequencer.c	FUNCTION_48
0x40059fe	      0xe932f8ffff	                           jmp 0x4005235	      1503	sequencer.c	FUNCTION_48
0x4005a03	       0xf1f440000	                   nop dword [rax + rax]	      1503	sequencer.c	FUNCTION_48
0x4005a08	    0x4c8db4249000	                   lea r14, [rsp + 0x90]	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a10	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a15	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a1a	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a1d	      0xe800000000	                          call 0x4005a22	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a22	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a27	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a2a	      0xe800000000	                          call 0x4005a2f	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a2f	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a32	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a35	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a38	      0xe800000000	                          call 0x4005a3d	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a3d	      0xba17000000	                           mov edx, 0x17	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a42	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a47	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a4a	      0xe800000000	                          call 0x4005a4f	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a4f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4005a54	      0xe800000000	                          call 0x4005a59	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4005a59	          0x4989c7	                            mov r15, rax	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4005a5c	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a5f	      0xe800000000	                          call 0x4005a64	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a64	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a67	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a6a	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a6d	      0xe800000000	                          call 0x4005a72	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a72	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4005a76	          0x4885c0	                           test rax, rax	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4005a79	            0x743b	                            je 0x4005ab6	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4005a7b	      0x4883780800	                  cmp qword [rax + 8], 0	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4005a80	            0x7434	                            je 0x4005ab6	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4005a82	      0xba1c000000	                           mov edx, 0x1c	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a87	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a8c	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a8f	      0xe800000000	                          call 0x4005a94	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005a94	        0x498d7d04	                      lea rdi, [r13 + 4]	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4005a98	      0xe800000000	                          call 0x4005a9d	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4005a9d	          0x4989c7	                            mov r15, rax	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4005aa0	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005aa3	      0xe800000000	                          call 0x4005aa8	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005aa8	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005aab	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005aae	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005ab1	      0xe800000000	                          call 0x4005ab6	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005ab6	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005abb	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005ac0	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005ac3	      0xe800000000	                          call 0x4005ac8	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005ac8	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005acb	          0x4d89ea	                            mov r10, r13	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005ace	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005ad3	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005ad8	          0x4989ed	                            mov r13, rbp	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005adb	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1503	sequencer.c	FUNCTION_48
0x4005ae4	            0x85c9	                           test ecx, ecx	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005ae6	     0xf8449f7ffff	                            je 0x4005235	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005aec	      0xe934fcffff	                           jmp 0x4005725	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005af1	     0xf1f80000000	                         nop dword [rax]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005af8	        0x448b532c	           mov r10d, dword [rbx + 0x2c] 	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x4005afc	          0x4585d2	                         test r10d, r10d	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x4005aff	     0xf8e01f6ffff	                           jle 0x4005106	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x4005b05	        0x488d7d04	                      lea rdi, [rbp + 4]	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005b09	      0xe800000000	                          call 0x4005b0e	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005b0e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4005b13	          0x4889c3	                            mov rbx, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005b16	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4005b1b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4005b1d	      0xe800000000	                          call 0x4005b22	        54	gettext.h	FUNCTION_147
0x4005b22	          0x4889de	                            mov rsi, rbx	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005b25	          0x4889c7	                            mov rdi, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005b28	            0x31c0	                            xor eax, eax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005b2a	      0xe800000000	                          call 0x4005b2f	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005b2f	      0xe99e030000	                           jmp 0x4005ed2	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005b34	         0xf1f4000	                         nop dword [rax]	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005b38	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       595	strbuf.h	FUNCTION_115	IF_1
0x4005b40	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	       595	strbuf.h	FUNCTION_115	IF_1
0x4005b48	    0x4c8db4249000	                   lea r14, [rsp + 0x90]	       595	strbuf.h	FUNCTION_115	IF_1
0x4005b50	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_115	IF_1
0x4005b53	            0x7469	                            je 0x4005bbe	       595	strbuf.h	FUNCTION_115	IF_1
0x4005b55	      0x807c07ff0a	          cmp byte [rdi + rax - 1], 0xa 	       595	strbuf.h	FUNCTION_115	IF_1
0x4005b5a	            0x7462	                            je 0x4005bbe	       595	strbuf.h	FUNCTION_115	IF_1
0x4005b5c	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	       595	strbuf.h	FUNCTION_115	IF_1
0x4005b64	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_107
0x4005b67	     0xf856c080000	                           jne 0x40063d9	       141	strbuf.h	FUNCTION_107
0x4005b6d	    0x4c8db4249000	                   lea r14, [rsp + 0x90]	       228	strbuf.h	FUNCTION_109	CALL_2
0x4005b75	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4005b7a	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_109	CALL_2
0x4005b7d	      0xe800000000	                          call 0x4005b82	       228	strbuf.h	FUNCTION_109	CALL_2
0x4005b82	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x4005b8a	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x4005b92	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_109
0x4005b96	    0x488994249800	             mov qword [rsp + 0x98], rdx	       229	strbuf.h	FUNCTION_109
0x4005b9e	        0xc604070a	               mov byte [rdi + rax], 0xa	       229	strbuf.h	FUNCTION_109
0x4005ba2	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       230	strbuf.h	FUNCTION_109
0x4005baa	    0x488b9424a000	            mov rdx, qword [rsp + 0xa0] 	       230	strbuf.h	FUNCTION_109
0x4005bb2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4005bb6	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	       230	strbuf.h	FUNCTION_109
0x4005bbe	            0x31f6	                            xor esi, esi	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4005bc0	      0xe8fba9ffff	  call sym.has_conforming_footer.isra.17	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4005bc5	            0x85c0	                           test eax, eax	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4005bc7	     0xf8423050000	                            je 0x40060f0	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4005bcd	      0xba1b000000	                           mov edx, 0x1b	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005bd2	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005bd7	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005bda	      0xe800000000	                          call 0x4005bdf	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005bdf	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4005be4	      0xe800000000	                          call 0x4005be9	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4005be9	          0x4989c7	                            mov r15, rax	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4005bec	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005bef	      0xe800000000	                          call 0x4005bf4	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005bf4	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005bf7	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005bfa	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005bfd	      0xe800000000	                          call 0x4005c02	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c02	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c07	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c0c	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c0f	      0xe800000000	                          call 0x4005c14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c14	      0xe9cdf5ffff	                           jmp 0x40051e6	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c19	     0xf1f80000000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c20	    0x4c8bbc24f000	            mov r15, qword [rsp + 0xf0] 	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_36
0x4005c28	    0x4c8db4249000	                   lea r14, [rsp + 0x90]	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c30	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c33	      0xe800000000	                          call 0x4005c38	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c38	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c3b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c3e	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c41	      0xe800000000	                          call 0x4005c46	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c46	      0xe98ef5ffff	                           jmp 0x40051d9	       279	strbuf.h	FUNCTION_110	CALL_2
0x4005c4b	        0x4183ff01	                             cmp r15d, 1	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005c4f	     0xf845b070000	                            je 0x40063b0	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005c55	          0x4585ff	                         test r15d, r15d	      1689	sequencer.c	FUNCTION_48	IF_33
0x4005c58	     0xf84e0f6ffff	                            je 0x400533e	      1689	sequencer.c	FUNCTION_48	IF_33
0x4005c5e	    0x8b3500000000	            mov esi, dword [0x04005c64] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005c64	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005c69	      0xe800000000	                          call 0x4005c6e	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005c6e	          0x4989c4	                            mov r12, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005c71	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4005c76	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4005c7b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4005c7d	      0xe800000000	                          call 0x4005c82	        54	gettext.h	FUNCTION_147
0x4005c82	      0xe927faffff	                           jmp 0x40056ae	        54	gettext.h	FUNCTION_147
0x4005c87	    0x660f1f840000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_147
0x4005c90	      0x448b4c2454	            mov r9d, dword [rsp + 0x54] 	        54	gettext.h	FUNCTION_147
0x4005c95	          0x4585c9	                           test r9d, r9d	        54	gettext.h	FUNCTION_147
0x4005c98	           0xf95c0	                                setne al	        54	gettext.h	FUNCTION_147
0x4005c9b	          0x4531ff	                          xor r15d, r15d	      1705	sequencer.c	FUNCTION_48	IF_36
0x4005c9e	      0xe9a1f8ffff	                           jmp 0x4005544	      1705	sequencer.c	FUNCTION_48	IF_36
0x4005ca3	       0xf1f440000	                   nop dword [rax + rax]	      1705	sequencer.c	FUNCTION_48	IF_36
0x4005ca8	        0x4183ff01	                             cmp r15d, 1	       355	sequencer.c	FUNCTION_13	IF_2
0x4005cac	     0xf8549faffff	                           jne 0x40056fb	       355	sequencer.c	FUNCTION_13	IF_2
0x4005cb2	          0x8b430c	              mov eax, dword [rbx + 0xc]	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x4005cb5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4005cba	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4005cbf	            0x85c0	                           test eax, eax	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x4005cc1	            0x7505	                           jne 0x4005cc8	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x4005cc3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4005cc8	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4005cca	      0xe800000000	                          call 0x4005ccf	        54	gettext.h	FUNCTION_147
0x4005ccf	          0x4889c7	                            mov rdi, rax	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005cd2	            0x31c0	                            xor eax, eax	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005cd4	      0xe800000000	                          call 0x4005cd9	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005cd9	      0xe91dfaffff	                           jmp 0x40056fb	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005cde	            0x6690	                                     nop	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005ce0	    0x4c8db4245001	                  lea r14, [rsp + 0x150]	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005ce8	            0x31c9	                            xor ecx, ecx	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005cea	      0xbe01000000	                              mov esi, 1	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005cef	      0xbf00000000	                              mov edi, 0	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005cf4	          0x4c89f2	                            mov rdx, r14	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005cf7	      0xe800000000	                          call 0x4005cfc	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005cfc	          0x4885c0	                           test rax, rax	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005cff	     0xf84f40e0000	                            je 0x4006bf9	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005d05	          0x4c89f7	                            mov rdi, r14	       572	sequencer.c	FUNCTION_22	CALL_3
0x4005d08	      0xe800000000	                          call 0x4005d0d	       572	sequencer.c	FUNCTION_22	CALL_3
0x4005d0d	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_117	CALL_1
0x4005d0f	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_117	CALL_1
0x4005d12	          0x4989c5	                            mov r13, rax	       572	sequencer.c	FUNCTION_22	CALL_3
0x4005d15	      0xe800000000	                          call 0x4005d1a	        75	commit.h	FUNCTION_117	CALL_1
0x4005d1a	            0x85c0	                           test eax, eax	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4005d1c	            0x753d	                           jne 0x4005d5b	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4005d1e	    0x488b3d000000	            mov rdi, qword [0x04005d25] 	       585	sequencer.c	FUNCTION_22	IF_3
0x4005d25	          0x4885ff	                           test rdi, rdi	       585	sequencer.c	FUNCTION_22	IF_3
0x4005d28	     0xf847b0b0000	                            je 0x40068a9	       585	sequencer.c	FUNCTION_22	IF_3
0x4005d2e	      0xe800000000	                          call 0x4005d33	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4005d33	            0x85c0	                           test eax, eax	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4005d35	            0x7539	                           jne 0x4005d70	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4005d37	            0x31f6	                            xor esi, esi	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005d39	      0xbf00000000	                              mov edi, 0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005d3e	      0xe800000000	                          call 0x4005d43	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005d43	            0x85c0	                           test eax, eax	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005d45	            0x7429	                            je 0x4005d70	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005d47	      0xbf00000000	                              mov edi, 0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005d4c	      0xe8ffa6ffff	                       call sym._.part.6	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005d51	          0x4889c7	                            mov rdi, rax	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4005d54	            0x31c0	                            xor eax, eax	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4005d56	      0xe800000000	                          call 0x4005d5b	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4005d5b	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1118	sequencer.c	FUNCTION_37	IF_1
0x4005d61	      0xe93af6ffff	                           jmp 0x40053a0	      1118	sequencer.c	FUNCTION_37	IF_1
0x4005d66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1118	sequencer.c	FUNCTION_37	IF_1
0x4005d70	          0x4c89ef	                            mov rdi, r13	       593	sequencer.c	FUNCTION_22	CALL_10
0x4005d73	      0xe800000000	                          call 0x4005d78	       593	sequencer.c	FUNCTION_22	CALL_10
0x4005d78	    0x488b0d000000	            mov rcx, qword [0x04005d7f] 	       975	cache.h	FUNCTION_125	CALL_1
0x4005d7f	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_125	CALL_1
0x4005d84	          0x4889c6	                            mov rsi, rax	       975	cache.h	FUNCTION_125	CALL_1
0x4005d87	        0x488d7904	                      lea rdi, [rcx + 4]	       975	cache.h	FUNCTION_125	CALL_1
0x4005d8b	      0xe800000000	                          call 0x4005d90	       975	cache.h	FUNCTION_125	CALL_1
0x4005d90	            0x85c0	                           test eax, eax	      1283	sequencer.c	FUNCTION_40	IF_3
0x4005d92	     0xf85b1f5ffff	                           jne 0x4005349	      1283	sequencer.c	FUNCTION_40	IF_3
0x4005d98	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      1286	sequencer.c	FUNCTION_40	IF_4
0x4005d9b	            0x85c0	                           test eax, eax	      1286	sequencer.c	FUNCTION_40	IF_4
0x4005d9d	     0xf841d070000	                            je 0x40064c0	      1286	sequencer.c	FUNCTION_40	IF_4
0x4005da3	      0x834c245001	                or dword [rsp + 0x50], 1	      1704	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4005da8	      0xe99cf5ffff	                           jmp 0x4005349	      1704	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4005dad	           0xf1f00	                         nop dword [rax]	      1704	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4005db0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005db5	      0x4c895c2460	             mov qword [rsp + 0x60], r11	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005dba	      0x4c89542458	             mov qword [rsp + 0x58], r10	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005dbf	      0xe89ccaffff	            call sym.write_author_script	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005dc4	            0x85c0	                           test eax, eax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005dc6	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005dcb	      0x4c8b5c2460	            mov r11, qword [rsp + 0x60] 	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005dd0	     0xf8968f4ffff	                           jns 0x400523e	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005dd6	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1649	sequencer.c	FUNCTION_48	IF_28
0x4005ddc	      0xe938f5ffff	                           jmp 0x4005319	      1649	sequencer.c	FUNCTION_48	IF_28
0x4005de1	      0xe800000000	                          call 0x4005de6	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005de6	            0x31f6	                            xor esi, esi	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005de8	          0x4889c2	                            mov rdx, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005deb	          0x4889ef	                            mov rdi, rbp	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005dee	      0xe800000000	                          call 0x4005df3	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005df3	        0x488d4d04	                      lea rcx, [rbp + 4]	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005df7	    0x8b3500000000	            mov esi, dword [0x04005dfd] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005dfd	          0x4989c7	                            mov r15, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005e00	      0x4889442408	                mov qword [rsp + 8], rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005e05	          0x4889cf	                            mov rdi, rcx	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005e08	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005e0d	      0xe800000000	                          call 0x4005e12	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005e12	    0x488d8c24f000	                   lea rcx, [rsp + 0xf0]	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005e1a	          0x4c89ff	                            mov rdi, r15	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005e1d	          0x4989c5	                            mov r13, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005e20	          0x4889ce	                            mov rsi, rcx	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005e23	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005e28	      0xe800000000	                          call 0x4005e2d	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005e2d	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005e35	          0x4863f0	                         movsxd rsi, eax	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005e38	      0xe800000000	                          call 0x4005e3d	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005e3d	          0x4c89ee	                            mov rsi, r13	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005e40	          0x4889c2	                            mov rdx, rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005e43	      0x4889442428	             mov qword [rsp + 0x28], rax	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005e48	      0xbf00000000	                              mov edi, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005e4d	            0x31c0	                            xor eax, eax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005e4f	      0xe800000000	                          call 0x4005e54	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005e54	      0xbf00000000	                              mov edi, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005e59	          0x4889c6	                            mov rsi, rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005e5c	      0x4889442418	             mov qword [rsp + 0x18], rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005e61	            0x31c0	                            xor eax, eax	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005e63	      0xe800000000	                          call 0x4005e68	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005e68	          0x8b7314	            mov esi, dword [rbx + 0x14] 	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005e6b	      0x4889442410	             mov qword [rsp + 0x10], rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005e70	            0x85f6	                           test esi, esi	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005e72	            0x7413	                            je 0x4005e87	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005e74	      0x418d4424fc	                      lea eax, [r12 - 4]	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005e79	          0x83f801	                              cmp eax, 1	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005e7c	            0x7609	                           jbe 0x4005e87	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005e7e	          0x4585f6	                         test r14d, r14d	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x4005e81	     0xf854bf6ffff	                           jne 0x40054d2	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x4005e87	          0x4531ed	                          xor r13d, r13d	      1528	sequencer.c	FUNCTION_48	IF_5
0x4005e8a	      0xe929f3ffff	                           jmp 0x40051b8	      1528	sequencer.c	FUNCTION_48	IF_5
0x4005e8f	        0x498d7d04	                      lea rdi, [r13 + 4]	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005e93	      0xe800000000	                          call 0x4005e98	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005e98	        0x4183fc0b	                           cmp r12d, 0xb	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4005e9c	          0x4889c5	                            mov rbp, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005e9f	     0xf87920d0000	                            ja 0x4006c37	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4005ea5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4005eaa	        0x49c1e404	                              shl r12, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4005eae	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4005eb3	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4005eb5	    0x498b9c240000	                    mov rbx, qword [r12]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4005ebd	      0xe800000000	                          call 0x4005ec2	        54	gettext.h	FUNCTION_147
0x4005ec2	          0x4889ea	                            mov rdx, rbp	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005ec5	          0x4889c7	                            mov rdi, rax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005ec8	          0x4889de	                            mov rsi, rbx	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005ecb	            0x31c0	                            xor eax, eax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005ecd	      0xe800000000	                          call 0x4005ed2	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005ed2	      0xb8ffffffff	                     mov eax, 0xffffffff	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005ed7	      0xe901f5ffff	                           jmp 0x40053dd	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005edc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x4005ee1	      0xe87ac9ffff	            call sym.write_author_script	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x4005ee6	      0xe9f0f5ffff	                           jmp 0x40054db	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x4005eeb	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x4005eef	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005ef8	          0x83e012	                           and eax, 0x12	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005efb	            0x85c0	                           test eax, eax	      1213	sequencer.c	FUNCTION_38	IF_1
0x4005efd	     0xf851cf6ffff	                           jne 0x400551f	      1213	sequencer.c	FUNCTION_38	IF_1
0x4005f03	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005f08	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x4005f14	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x4005f20	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x4005f2c	          0x4885c0	                           test rax, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005f2f	     0xf84c7040000	                            je 0x40063fc	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005f35	    0x4c8da424b000	                   lea r12, [rsp + 0xb0]	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005f3d	      0xba00080000	                          mov edx, 0x800	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005f42	          0x4889c6	                            mov rsi, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005f45	          0x4c89e7	                            mov rdi, r12	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005f48	          0x4d89e5	                            mov r13, r12	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x4005f4b	      0xe800000000	                          call 0x4005f50	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005f50	          0x4885c0	                           test rax, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005f53	     0xf8825090000	                            js 0x400687e	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005f59	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4005f5e	    0x48c744247800	               mov qword [rsp + 0x78], 0	      1108	sequencer.c	FUNCTION_37
0x4005f67	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1110	sequencer.c	FUNCTION_37
0x4005f73	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	      1110	sequencer.c	FUNCTION_37
0x4005f7f	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      1110	sequencer.c	FUNCTION_37
0x4005f8b	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	      1111	sequencer.c	FUNCTION_37
0x4005f97	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	      1111	sequencer.c	FUNCTION_37
0x4005fa3	    0x48c784240001	              mov qword [rsp + 0x100], 0	      1111	sequencer.c	FUNCTION_37
0x4005faf	      0xe84cc0ffff	                     call sym.parse_head	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4005fb4	            0x85c0	                           test eax, eax	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4005fb6	     0xf85de090000	                           jne 0x400699a	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4005fbc	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1120	sequencer.c	FUNCTION_37	IF_2
0x4005fc0	          0x83e004	                              and eax, 4	      1120	sequencer.c	FUNCTION_37	IF_2
0x4005fc3	        0x89442460	             mov dword [rsp + 0x60], eax	      1120	sequencer.c	FUNCTION_37	IF_2
0x4005fc7	     0xf853f040000	                           jne 0x400640c	      1120	sequencer.c	FUNCTION_37	IF_2
0x4005fcd	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005fd2	          0x4885ff	                           test rdi, rdi	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005fd5	            0x740a	                            je 0x4005fe1	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005fd7	      0x488d742478	                   lea rsi, [rsp + 0x78]	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x4005fdc	      0xe800000000	                          call 0x4005fe1	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x4005fe1	      0x4c8b7c2440	            mov r15, qword [rsp + 0x40] 	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005fe6	    0x4c8db4245001	                  lea r14, [rsp + 0x150]	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005fee	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1113	sequencer.c	FUNCTION_37
0x4005ff7	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1112	sequencer.c	FUNCTION_37
0x4006000	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1109	sequencer.c	FUNCTION_37
0x4006009	            0x31d2	                            xor edx, edx	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x400600b	            0x31f6	                            xor esi, esi	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x400600d	          0x4c89f7	                            mov rdi, r14	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4006010	      0xe800000000	                          call 0x4006015	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4006015	            0x85c0	                           test eax, eax	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4006017	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400601c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4006021	     0xf8506030000	                           jne 0x400632d	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4006027	      0xf644245001	               test byte [rsp + 0x50], 1	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400602c	     0xf856e010000	                           jne 0x40061a0	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4006032	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4006037	      0xb800000000	                              mov eax, 0	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400603c	          0x4885ff	                           test rdi, rdi	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400603f	            0x7405	                            je 0x4006046	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4006041	      0xe800000000	                          call 0x4006046	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4006046	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_125	CALL_1
0x400604b	          0x4c89f6	                            mov rsi, r14	       975	cache.h	FUNCTION_125	CALL_1
0x400604e	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_125	CALL_1
0x4006051	      0xe800000000	                          call 0x4006056	       975	cache.h	FUNCTION_125	CALL_1
0x4006056	            0x85c0	                           test eax, eax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4006058	     0xf8542010000	                           jne 0x40061a0	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400605e	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4006066	    0x41bf01000000	                             mov r15d, 1	      1178	sequencer.c	FUNCTION_37	IF_12
0x400606c	      0x4889442458	             mov qword [rsp + 0x58], rax	      1178	sequencer.c	FUNCTION_37	IF_12
0x4006071	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1200	sequencer.c	FUNCTION_37	CALL_30
0x4006076	      0xe800000000	                          call 0x400607b	      1200	sequencer.c	FUNCTION_37	CALL_30
0x400607b	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1201	sequencer.c	FUNCTION_37	CALL_31
0x4006080	      0xe800000000	                          call 0x4006085	      1201	sequencer.c	FUNCTION_37	CALL_31
0x4006085	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1202	sequencer.c	FUNCTION_37	CALL_32
0x400608a	      0xe800000000	                          call 0x400608f	      1202	sequencer.c	FUNCTION_37	CALL_32
0x400608f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1203	sequencer.c	FUNCTION_37	CALL_33
0x4006094	      0xe800000000	                          call 0x4006099	      1203	sequencer.c	FUNCTION_37	CALL_33
0x4006099	          0x4c89e7	                            mov rdi, r12	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x400609c	      0xe800000000	                          call 0x40060a1	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40060a1	        0x4183ff01	                             cmp r15d, 1	      1234	sequencer.c	FUNCTION_38	IF_5
0x40060a5	     0xf8588f4ffff	                           jne 0x4005533	      1234	sequencer.c	FUNCTION_38	IF_5
0x40060ab	      0xe96ff4ffff	                           jmp 0x400551f	      1234	sequencer.c	FUNCTION_38	IF_5
0x40060b0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40060b5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40060ba	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40060bc	      0xe800000000	                          call 0x40060c1	        54	gettext.h	FUNCTION_147
0x40060c1	          0x4889c7	                            mov rdi, rax	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40060c4	            0x31c0	                            xor eax, eax	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40060c6	      0xe800000000	                          call 0x40060cb	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40060cb	      0xb8ffffffff	                     mov eax, 0xffffffff	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40060d0	      0xe908f3ffff	                           jmp 0x40053dd	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40060d5	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x40060da	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x40060dc	      0xe800000000	                          call 0x40060e1	        82	sequencer.c	CALL_13
0x40060e1	          0x4889c6	                            mov rsi, rax	        82	sequencer.c	CALL_13
0x40060e4	    0x488905000000	            mov qword [0x040060eb], rax 	        82	sequencer.c	CALL_13
0x40060eb	      0xe9c3f6ffff	                           jmp 0x40057b3	        82	sequencer.c	CALL_13
0x40060f0	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	        82	sequencer.c	CALL_13
0x40060f8	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_107
0x40060fb	     0xf85a4030000	                           jne 0x40064a5	       141	strbuf.h	FUNCTION_107
0x4006101	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_109	CALL_2
0x4006106	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_109	CALL_2
0x4006109	      0xe800000000	                          call 0x400610e	       228	strbuf.h	FUNCTION_109	CALL_2
0x400610e	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	       228	strbuf.h	FUNCTION_109	CALL_2
0x4006116	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_109
0x400611a	    0x488984249800	             mov qword [rsp + 0x98], rax	       229	strbuf.h	FUNCTION_109
0x4006122	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       229	strbuf.h	FUNCTION_109
0x400612a	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_109
0x400612e	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       230	strbuf.h	FUNCTION_109
0x4006136	    0x488b9424a000	            mov rdx, qword [rsp + 0xa0] 	       230	strbuf.h	FUNCTION_109
0x400613e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_109
0x4006142	      0xe986faffff	                           jmp 0x4005bcd	       230	strbuf.h	FUNCTION_109
0x4006147	    0x660f1f840000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_109
0x4006150	        0x488d7d04	                      lea rdi, [rbp + 4]	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006154	      0xe800000000	                          call 0x4006159	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006159	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400615e	          0x4889c3	                            mov rbx, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006161	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4006166	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4006168	      0xe800000000	                          call 0x400616d	        54	gettext.h	FUNCTION_147
0x400616d	          0x4489ea	                           mov edx, r13d	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006170	          0x4889c7	                            mov rdi, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006173	          0x4889de	                            mov rsi, rbx	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006176	            0x31c0	                            xor eax, eax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006178	      0xe800000000	                          call 0x400617d	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x400617d	      0xb8ffffffff	                     mov eax, 0xffffffff	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006182	      0xe956f2ffff	                           jmp 0x40053dd	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006187	    0x803d00000000	                cmp byte [0x0400618e], 0	       168	strbuf.h	FUNCTION_108	CALL_2
0x400618e	     0xf8412f4ffff	                            je 0x40055a6	       168	strbuf.h	FUNCTION_108	CALL_2
0x4006194	      0xe800000000	                          call 0x4006199	       168	strbuf.h	FUNCTION_108	CALL_2
0x4006199	     0xf1f80000000	                         nop dword [rax]	       168	strbuf.h	FUNCTION_108	CALL_2
0x40061a0	      0xbf00000000	                              mov edi, 0	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x40061a5	      0xe800000000	                          call 0x40061aa	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x40061aa	          0x4885c0	                           test rax, rax	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x40061ad	     0xf84f7000000	                            je 0x40062aa	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x40061b3	    0x4c8b15000000	            mov r10, qword [0x040061ba] 	        36	sequencer.c	CALL_1
0x40061ba	    0x48c784248000	               mov qword [rsp + 0x80], 0	       928	sequencer.c	FUNCTION_33
0x40061c6	    0xc78424880000	               mov dword [rsp + 0x88], 0	       928	sequencer.c	FUNCTION_33
0x40061d1	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	       928	sequencer.c	FUNCTION_33
0x40061dc	          0x4d85d2	                           test r10, r10	        36	sequencer.c	CALL_1
0x40061df	     0xf84d9080000	                            je 0x4006abe	        36	sequencer.c	CALL_1
0x40061e5	        0x498b7508	                mov rsi, qword [r13 + 8]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x40061e9	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x40061ed	            0x31c9	                            xor ecx, ecx	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x40061ef	          0x4c89d2	                            mov rdx, r10	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x40061f2	      0x4c89542468	             mov qword [rsp + 0x68], r10	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x40061f7	      0xe814c5ffff	                  call sym.write_message	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x40061fc	            0x85c0	                           test eax, eax	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x40061fe	     0xf853a010000	                           jne 0x400633e	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4006204	      0xe800000000	                          call 0x4006209	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006209	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006211	          0x4889c2	                            mov rdx, rax	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006214	      0xbe00000000	                              mov esi, 0	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006219	            0x31c0	                            xor eax, eax	       936	sequencer.c	FUNCTION_33	CALL_4
0x400621b	      0xe800000000	                          call 0x4006220	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006220	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       937	sequencer.c	FUNCTION_33	CALL_5
0x4006228	      0xbe00000000	                              mov esi, 0	       937	sequencer.c	FUNCTION_33	CALL_5
0x400622d	      0xe800000000	                          call 0x4006232	       937	sequencer.c	FUNCTION_33	CALL_5
0x4006232	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       938	sequencer.c	FUNCTION_33	IF_2
0x4006237	      0x4c8b542468	            mov r10, qword [rsp + 0x68] 	       938	sequencer.c	FUNCTION_33	IF_2
0x400623c	          0x4885c0	                           test rax, rax	       938	sequencer.c	FUNCTION_33	IF_2
0x400623f	     0xf84a7070000	                            je 0x40069ec	       938	sequencer.c	FUNCTION_33	IF_2
0x4006245	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x400624d	          0x4989c0	                             mov r8, rax	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4006250	          0x4531c9	                            xor r9d, r9d	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4006253	      0xb900000000	                              mov ecx, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4006258	          0x4c89d2	                            mov rdx, r10	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x400625b	      0xbe00000000	                              mov esi, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4006260	            0x31c0	                            xor eax, eax	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4006262	      0xe800000000	                          call 0x4006267	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4006267	            0x85c0	                           test eax, eax	       944	sequencer.c	FUNCTION_33	IF_3
0x4006269	     0xf856d030000	                           jne 0x40065dc	       944	sequencer.c	FUNCTION_33	IF_3
0x400626f	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       946	sequencer.c	FUNCTION_33	CALL_9
0x4006277	      0xe800000000	                          call 0x400627c	       946	sequencer.c	FUNCTION_33	CALL_9
0x400627c	    0x488b05000000	            mov rax, qword [0x04006283] 	        36	sequencer.c	CALL_1
0x4006283	          0x4885c0	                           test rax, rax	        36	sequencer.c	CALL_1
0x4006286	     0xf8455090000	                            je 0x4006be1	        36	sequencer.c	CALL_1
0x400628c	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006291	      0xba00080000	                          mov edx, 0x800	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006296	          0x4889c6	                            mov rsi, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006299	          0x4c89ef	                            mov rdi, r13	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x400629c	      0xe800000000	                          call 0x40062a1	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40062a1	          0x4885c0	                           test rax, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40062a4	     0xf8866070000	                            js 0x4006a10	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40062aa	      0xf644245008	               test byte [rsp + 0x50], 8	      1172	sequencer.c	FUNCTION_37
0x40062af	     0xf85de030000	                           jne 0x4006693	      1172	sequencer.c	FUNCTION_37
0x40062b5	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      1172	sequencer.c	FUNCTION_37
0x40062b8	          0x83f801	                              cmp eax, 1	      1175	sequencer.c	FUNCTION_37	IF_11
0x40062bb	     0xf8551090000	                           jne 0x4006c12	      1175	sequencer.c	FUNCTION_37	IF_11
0x40062c1	        0x448b4320	            mov r8d, dword [rbx + 0x20] 	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40062c5	          0x4585c0	                           test r8d, r8d	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40062c8	            0x751e	                           jne 0x40062e8	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40062ca	      0x49837d0800	                  cmp qword [r13 + 8], 0	       816	sequencer.c	FUNCTION_28	IF_1
0x40062cf	            0x7517	                           jne 0x40062e8	       816	sequencer.c	FUNCTION_28	IF_1
0x40062d1	        0x498d7510	                   lea rsi, [r13 + 0x10]	       816	sequencer.c	FUNCTION_28	IF_1
0x40062d5	        0x498d7d08	                      lea rdi, [r13 + 8]	       816	sequencer.c	FUNCTION_28	IF_1
0x40062d9	            0x31d2	                            xor edx, edx	       818	sequencer.c	FUNCTION_28	CALL_1
0x40062db	      0xe8d0a1ffff	           call sym.rest_is_empty.isra.9	       818	sequencer.c	FUNCTION_28	CALL_1
0x40062e0	            0x85c0	                           test eax, eax	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40062e2	     0xf8576fdffff	                           jne 0x400605e	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40062e8	      0xe800000000	                          call 0x40062ed	      1182	sequencer.c	FUNCTION_37	CALL_24
0x40062ed	        0x498b7508	                mov rsi, qword [r13 + 8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40062f1	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40062f5	          0x4d89f9	                             mov r9, r15	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40062f8	        0xff742420	                 push qword [rsp + 0x20]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40062fc	          0xff7330	                 push qword [rbx + 0x30]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40062ff	          0x4c89f2	                            mov rdx, r14	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006302	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400630a	    0x4c8d84244001	                   lea r8, [rsp + 0x140]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006312	      0xe800000000	                          call 0x4006317	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006317	            0x85c0	                           test eax, eax	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006319	            0x415e	                                 pop r14	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400631b	            0x415f	                                 pop r15	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400631d	     0xf849a050000	                            je 0x40068bd	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006323	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4006328	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400632d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400632f	      0xe800000000	                          call 0x4006334	        54	gettext.h	FUNCTION_147
0x4006334	          0x4889c7	                            mov rdi, rax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4006337	            0x31c0	                            xor eax, eax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4006339	      0xe800000000	                          call 0x400633e	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x400633e	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4006346	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x400634c	      0x4889442458	             mov qword [rsp + 0x58], rax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4006351	      0xe91bfdffff	                           jmp 0x4006071	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4006356	    0x488b3d000000	            mov rdi, qword [0x0400635d] 	        90	sequencer.c	CALL_14
0x400635d	          0x4885ff	                           test rdi, rdi	        90	sequencer.c	CALL_14
0x4006360	     0xf84ad070000	                            je 0x4006b13	        90	sequencer.c	CALL_14
0x4006366	      0xe800000000	                          call 0x400636b	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x400636b	            0x85c0	                           test eax, eax	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x400636d	     0xf84b5040000	                            je 0x4006828	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4006373	    0x488b05000000	            mov rax, qword [0x0400637a] 	        90	sequencer.c	CALL_14
0x400637a	      0x834c24500c	              or dword [rsp + 0x50], 0xc	      1631	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25
0x400637f	          0x4885c0	                           test rax, rax	        90	sequencer.c	CALL_14
0x4006382	      0x4889442448	             mov qword [rsp + 0x48], rax	        90	sequencer.c	CALL_14
0x4006387	     0xf8553f6ffff	                           jne 0x40059e0	        90	sequencer.c	CALL_14
0x400638d	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006392	      0xe800000000	                          call 0x4006397	        90	sequencer.c	CALL_14
0x4006397	    0x488905000000	            mov qword [0x0400639e], rax 	        90	sequencer.c	CALL_14
0x400639e	      0x4889442448	             mov qword [rsp + 0x48], rax	        90	sequencer.c	CALL_14
0x40063a3	      0xe938f6ffff	                           jmp 0x40059e0	        90	sequencer.c	CALL_14
0x40063a8	     0xf1f84000000	                   nop dword [rax + rax]	        90	sequencer.c	CALL_14
0x40063b0	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40063b5	          0x4531c9	                            xor r9d, r9d	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40063b8	            0x31c9	                            xor ecx, ecx	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40063ba	            0x31ff	                            xor edi, edi	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40063bc	    0x41b801000000	                              mov r8d, 1	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40063c2	      0xbe00000000	                              mov esi, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40063c7	      0xe800000000	                          call 0x40063cc	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40063cc	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x40063ce	     0xf8584f2ffff	                           jne 0x4005658	      1684	sequencer.c	FUNCTION_48	IF_32
0x40063d4	      0xe985f8ffff	                           jmp 0x4005c5e	      1684	sequencer.c	FUNCTION_48	IF_32
0x40063d9	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40063dd	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40063e0	     0xf85acf7ffff	                           jne 0x4005b92	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40063e6	      0xe982f7ffff	                           jmp 0x4005b6d	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40063eb	       0xf1f440000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40063f0	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40063f4	          0x83e012	                           and eax, 0x12	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40063f7	      0xe9fffaffff	                           jmp 0x4005efb	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40063fc	          0x4531ed	                          xor r13d, r13d	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40063ff	    0x4c8da424b000	                   lea r12, [rsp + 0xb0]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x4006407	      0xe94dfbffff	                           jmp 0x4005f59	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x400640c	    0x48c784245001	              mov qword [rsp + 0x150], 0	      1121	sequencer.c	FUNCTION_37	IF_2
0x4006418	    0x48c784245801	              mov qword [rsp + 0x158], 0	      1121	sequencer.c	FUNCTION_37	IF_2
0x4006424	      0xe800000000	                          call 0x4006429	      1122	sequencer.c	FUNCTION_37	IF_2	CALL_2
0x4006429	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x400642e	            0x31f6	                            xor esi, esi	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x4006430	          0x4889c2	                            mov rdx, rax	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x4006433	      0xe800000000	                          call 0x4006438	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x4006438	          0x4d85ed	                           test r13, r13	      1126	sequencer.c	FUNCTION_37	IF_2	IF_3
0x400643b	          0x4989c6	                            mov r14, rax	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x400643e	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1113	sequencer.c	FUNCTION_37
0x4006447	     0xf8409060000	                            je 0x4006a56	      1126	sequencer.c	FUNCTION_37	IF_2	IF_3
0x400644d	          0x4c89f7	                            mov rdi, r14	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x4006450	      0xe83b9fffff	                     call sym.get_author	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x4006455	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x400645a	          0x4989c7	                            mov r15, rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x400645d	          0x4c89f6	                            mov rsi, r14	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x4006460	      0xe800000000	                          call 0x4006465	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x4006465	          0x4d85ff	                           test r15, r15	      1136	sequencer.c	FUNCTION_37	IF_2	IF_4
0x4006468	     0xf8439050000	                            je 0x40069a7	      1136	sequencer.c	FUNCTION_37	IF_2	IF_4
0x400646e	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x4006473	    0x4c8db4245001	                  lea r14, [rsp + 0x150]	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x400647b	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x400647f	      0xe800000000	                          call 0x4006484	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x4006484	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006489	          0x4c89f6	                            mov rsi, r14	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x400648c	      0x4889442478	             mov qword [rsp + 0x78], rax	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x4006491	      0xe800000000	                          call 0x4006496	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006496	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x400649b	      0x4889442420	             mov qword [rsp + 0x20], rax	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x40064a0	      0xe964fbffff	                           jmp 0x4006009	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x40064a5	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	       141	strbuf.h	FUNCTION_107
0x40064ad	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40064b1	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40064b4	     0xf855cfcffff	                           jne 0x4006116	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40064ba	      0xe942fcffff	                           jmp 0x4006101	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40064bf	              0x90	                                     nop	       227	strbuf.h	FUNCTION_109	IF_1	CALL_1
0x40064c0	          0x4889ef	                            mov rdi, rbp	      1289	sequencer.c	FUNCTION_40	CALL_2
0x40064c3	      0xe8c8b0ffff	       call sym.is_original_commit_empty	      1289	sequencer.c	FUNCTION_40	CALL_2
0x40064c8	            0x85c0	                           test eax, eax	      1290	sequencer.c	FUNCTION_40	IF_5
0x40064ca	          0x4189c7	                           mov r15d, eax	      1289	sequencer.c	FUNCTION_40	CALL_2
0x40064cd	     0xf88cdeeffff	                            js 0x40053a0	      1290	sequencer.c	FUNCTION_40	IF_5
0x40064d3	     0xf85caf8ffff	                           jne 0x4005da3	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x40064d9	      0xe96beeffff	                           jmp 0x4005349	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x40064de	            0x6690	                                     nop	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x40064e0	    0x488b05000000	            mov rax, qword [0x040064e7] 	        90	sequencer.c	CALL_14
0x40064e7	          0x4885c0	                           test rax, rax	        90	sequencer.c	CALL_14
0x40064ea	     0xf843e060000	                            je 0x4006b2e	        90	sequencer.c	CALL_14
0x40064f0	          0x4889c7	                            mov rdi, rax	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_37
0x40064f3	      0xe800000000	                          call 0x40064f8	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_37
0x40064f8	     0xfbe15000000	           movsx edx, byte [0x040064ff] 	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x40064ff	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4006504	            0x31c0	                            xor eax, eax	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4006506	      0xbe00000000	                              mov esi, 0	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x400650b	      0xe800000000	                          call 0x4006510	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4006510	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006513	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4006515	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400651a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400651f	        0x448d7801	                     lea r15d, [rax + 1]	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006523	        0x44897b78	            mov dword [rbx + 0x78], r15d	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006527	      0xe800000000	                          call 0x400652c	        54	gettext.h	FUNCTION_147
0x400652c	          0x4489fa	                           mov edx, r15d	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400652f	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006534	          0x4889c6	                            mov rsi, rax	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006537	            0x31c0	                            xor eax, eax	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006539	          0x4c89ff	                            mov rdi, r15	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400653c	      0xe800000000	                          call 0x4006541	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006541	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006546	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x400654b	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x400654e	      0x4c897c2458	             mov qword [rsp + 0x58], r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006553	      0xe800000000	                          call 0x4006558	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006558	    0x4c8bbc24f000	            mov r15, qword [rsp + 0xf0] 	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_42
0x4006560	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006563	      0xe800000000	                          call 0x4006568	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006568	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x400656d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006570	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006573	      0xe800000000	                          call 0x4006578	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006578	      0xe990f3ffff	                           jmp 0x400590d	       279	strbuf.h	FUNCTION_110	CALL_2
0x400657d	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4006582	          0x4531c9	                            xor r9d, r9d	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4006585	            0x31c9	                            xor ecx, ecx	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4006587	            0x31ff	                            xor edi, edi	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4006589	    0x41b801000000	                              mov r8d, 1	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x400658f	      0xbe00000000	                              mov esi, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4006594	      0xe800000000	                          call 0x4006599	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4006599	            0x85c0	                           test eax, eax	      1680	sequencer.c	FUNCTION_48	IF_31
0x400659b	     0xf8494edffff	                            je 0x4005335	      1680	sequencer.c	FUNCTION_48	IF_31
0x40065a1	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1683	sequencer.c	FUNCTION_48	IF_31
0x40065a7	      0xe9def0ffff	                           jmp 0x400568a	      1683	sequencer.c	FUNCTION_48	IF_31
0x40065ac	          0x4c89ff	                            mov rdi, r15	      1382	sequencer.c	FUNCTION_45	IF_1
0x40065af	      0xbe0a000000	                            mov esi, 0xa	      1382	sequencer.c	FUNCTION_45	IF_1
0x40065b4	      0xe800000000	                          call 0x40065b9	      1382	sequencer.c	FUNCTION_45	IF_1
0x40065b9	          0x4989c7	                            mov r15, rax	      1382	sequencer.c	FUNCTION_45	IF_1
0x40065bc	      0xe92ef2ffff	                           jmp 0x40057ef	      1382	sequencer.c	FUNCTION_45	IF_1
0x40065c1	        0x488d7d04	                      lea rdi, [rbp + 4]	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40065c5	      0xe800000000	                          call 0x40065ca	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40065ca	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40065cf	          0x4889c3	                            mov rbx, rax	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40065d2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40065d7	      0xe93ff5ffff	                           jmp 0x4005b1b	        54	gettext.h	FUNCTION_147
0x40065dc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40065e1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40065e6	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40065e8	      0xe800000000	                          call 0x40065ed	        54	gettext.h	FUNCTION_147
0x40065ed	          0x4889c7	                            mov rdi, rax	       945	sequencer.c	FUNCTION_33	CALL_8
0x40065f0	            0x31c0	                            xor eax, eax	       945	sequencer.c	FUNCTION_33	CALL_8
0x40065f2	    0x41bfffffffff	                    mov r15d, 0xffffffff	       945	sequencer.c	FUNCTION_33	CALL_8
0x40065f8	      0xe800000000	                          call 0x40065fd	       945	sequencer.c	FUNCTION_33	CALL_8
0x40065fd	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       946	sequencer.c	FUNCTION_33	CALL_9
0x4006605	      0xe800000000	                          call 0x400660a	       946	sequencer.c	FUNCTION_33	CALL_9
0x400660a	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1200	sequencer.c	FUNCTION_37	CALL_30
0x400660f	      0xe800000000	                          call 0x4006614	      1200	sequencer.c	FUNCTION_37	CALL_30
0x4006614	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1201	sequencer.c	FUNCTION_37	CALL_31
0x400661c	      0xe800000000	                          call 0x4006621	      1201	sequencer.c	FUNCTION_37	CALL_31
0x4006621	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1202	sequencer.c	FUNCTION_37	CALL_32
0x4006626	      0xe800000000	                          call 0x400662b	      1202	sequencer.c	FUNCTION_37	CALL_32
0x400662b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1203	sequencer.c	FUNCTION_37	CALL_33
0x4006630	      0xe800000000	                          call 0x4006635	      1203	sequencer.c	FUNCTION_37	CALL_33
0x4006635	          0x4c89e7	                            mov rdi, r12	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006638	      0xe800000000	                          call 0x400663d	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x400663d	      0xe95eedffff	                           jmp 0x40053a0	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006642	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x4006647	            0x31c0	                            xor eax, eax	        95	sequencer.c	CALL_15
0x4006649	      0xe800000000	                          call 0x400664e	        95	sequencer.c	CALL_15
0x400664e	          0x4889c7	                            mov rdi, rax	        95	sequencer.c	CALL_15
0x4006651	    0x488905000000	            mov qword [0x04006658], rax 	        95	sequencer.c	CALL_15
0x4006658	      0xe929efffff	                           jmp 0x4005586	        95	sequencer.c	CALL_15
0x400665d	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006662	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x4006664	      0xe800000000	                          call 0x4006669	        82	sequencer.c	CALL_13
0x4006669	          0x4889c7	                            mov rdi, rax	        82	sequencer.c	CALL_13
0x400666c	    0x488905000000	            mov qword [0x04006673], rax 	        82	sequencer.c	CALL_13
0x4006673	      0xe9f9eeffff	                           jmp 0x4005571	        82	sequencer.c	CALL_13
0x4006678	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x400667d	            0x31c0	                            xor eax, eax	        90	sequencer.c	CALL_14
0x400667f	      0xe800000000	                          call 0x4006684	        90	sequencer.c	CALL_14
0x4006684	          0x4889c7	                            mov rdi, rax	        90	sequencer.c	CALL_14
0x4006687	    0x488905000000	            mov qword [0x0400668e], rax 	        90	sequencer.c	CALL_14
0x400668e	      0xe9c9eeffff	                           jmp 0x400555c	        90	sequencer.c	CALL_14
0x4006693	      0xbe01000000	                              mov esi, 1	      1172	sequencer.c	FUNCTION_37
0x4006698	          0x4c89ef	                            mov rdi, r13	      1176	sequencer.c	FUNCTION_37	CALL_22
0x400669b	      0xe800000000	                          call 0x40066a0	      1176	sequencer.c	FUNCTION_37	CALL_22
0x40066a0	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40066a3	            0x85c0	                           test eax, eax	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40066a5	     0xf8426fcffff	                            je 0x40062d1	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40066ab	      0xe938fcffff	                           jmp 0x40062e8	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40066b0	    0x4c8db4245001	                  lea r14, [rsp + 0x150]	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40066b8	      0xbf00000000	                              mov edi, 0	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40066bd	          0x4c89f6	                            mov rsi, r14	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40066c0	      0xe800000000	                          call 0x40066c5	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40066c5	            0x85c0	                           test eax, eax	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40066c7	     0xf8535060000	                           jne 0x4006d02	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40066cd	          0x4c89f7	                            mov rdi, r14	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40066d0	      0xe800000000	                          call 0x40066d5	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40066d5	          0x4885c0	                           test rax, rax	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40066d8	          0x4989c7	                            mov r15, rax	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40066db	     0xf8408060000	                            je 0x4006ce9	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40066e1	            0x31f6	                            xor esi, esi	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40066e3	          0x4889c7	                            mov rdi, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40066e6	      0xe800000000	                          call 0x40066eb	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40066eb	          0x4885c0	                           test rax, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40066ee	          0x4989c6	                            mov r14, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40066f1	     0xf846a050000	                            je 0x4006c61	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40066f7	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x40066fc	          0x4889c7	                            mov rdi, rax	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x40066ff	      0xe800000000	                          call 0x4006704	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x4006704	    0x488b15000000	            mov rdx, qword [0x0400670b] 	        90	sequencer.c	CALL_14
0x400670b	          0x4885d2	                           test rdx, rdx	        90	sequencer.c	CALL_14
0x400670e	     0xf8478040000	                            je 0x4006b8c	        90	sequencer.c	CALL_14
0x4006714	    0x4c8b8424f000	              mov r8, qword [rsp + 0xf0]	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400671c	      0x4889542448	             mov qword [rsp + 0x48], rdx	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006721	          0x4c89c7	                             mov rdi, r8	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006724	      0x4c89442440	              mov qword [rsp + 0x40], r8	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006729	      0xe800000000	                          call 0x400672e	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400672e	      0x4c8b442440	              mov r8, qword [rsp + 0x40]	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006733	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006738	            0x31c9	                            xor ecx, ecx	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400673a	          0x4889c6	                            mov rsi, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400673d	          0x4c89c7	                             mov rdi, r8	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006740	      0xe8cbbfffff	                  call sym.write_message	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006745	            0x85c0	                           test eax, eax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006747	     0xf8548050000	                           jne 0x4006c95	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400674d	     0xfbe15000000	           movsx edx, byte [0x04006754] 	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4006754	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x400675c	      0xbe00000000	                              mov esi, 0	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4006761	      0x4889442458	             mov qword [rsp + 0x58], rax	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4006766	          0x4889c7	                            mov rdi, rax	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4006769	            0x31c0	                            xor eax, eax	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x400676b	      0xe800000000	                          call 0x4006770	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4006770	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4006772	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4006777	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400677c	      0xe800000000	                          call 0x4006781	        54	gettext.h	FUNCTION_147
0x4006781	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4006786	          0x4889c6	                            mov rsi, rax	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4006789	      0xba02000000	                              mov edx, 2	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x400678e	            0x31c0	                            xor eax, eax	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4006790	      0xe800000000	                          call 0x4006795	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4006795	     0xfbe15000000	           movsx edx, byte [0x0400679c] 	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x400679c	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x40067a1	            0x31c0	                            xor eax, eax	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x40067a3	      0xbe00000000	                              mov esi, 0	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x40067a8	      0xe800000000	                          call 0x40067ad	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x40067ad	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40067b2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40067b7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40067b9	      0xe800000000	                          call 0x40067be	        54	gettext.h	FUNCTION_147
0x40067be	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067c1	      0x4889442440	             mov qword [rsp + 0x40], rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067c6	      0xe800000000	                          call 0x40067cb	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067cb	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067d0	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067d5	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067d8	      0xe800000000	                          call 0x40067dd	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067dd	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067e2	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067e7	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067ec	      0xe800000000	                          call 0x40067f1	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067f1	    0x488bb424f000	            mov rsi, qword [rsp + 0xf0] 	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_30
0x40067f9	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_110	CALL_2
0x40067fc	      0x4889742440	             mov qword [rsp + 0x40], rsi	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006801	      0xe800000000	                          call 0x4006806	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006806	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x400680b	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006810	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006813	      0xe800000000	                          call 0x4006818	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006818	          0x4c89f6	                            mov rsi, r14	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x400681b	          0x4c89ff	                            mov rdi, r15	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x400681e	      0xe800000000	                          call 0x4006823	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x4006823	      0xe938f0ffff	                           jmp 0x4005860	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x4006828	      0xe800000000	                          call 0x400682d	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_52
0x400682d	          0x4889c7	                            mov rdi, rax	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_53
0x4006830	      0x4889442448	             mov qword [rsp + 0x48], rax	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_52
0x4006835	      0xe800000000	                          call 0x400683a	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_53
0x400683a	    0x488b05000000	            mov rax, qword [0x04006841] 	        82	sequencer.c	CALL_13
0x4006841	          0x4885c0	                           test rax, rax	        82	sequencer.c	CALL_13
0x4006844	     0xf8481030000	                            je 0x4006bcb	        82	sequencer.c	CALL_13
0x400684a	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x400684f	      0xbab6010000	                          mov edx, 0x1b6	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4006854	          0x4889c6	                            mov rsi, rax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4006857	      0xe800000000	                          call 0x400685c	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x400685c	            0x85c0	                           test eax, eax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x400685e	     0xf8543030000	                           jne 0x4006ba7	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4006864	      0xe800000000	                          call 0x4006869	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x4006869	          0x4889c7	                            mov rdi, rax	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x400686c	      0xe800000000	                          call 0x4006871	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x4006871	    0xc74424500600	               mov dword [rsp + 0x50], 6	      1641	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x4006879	      0xe962f1ffff	                           jmp 0x40059e0	      1641	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x400687e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4006883	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4006888	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400688a	      0xe800000000	                          call 0x400688f	        54	gettext.h	FUNCTION_147
0x400688f	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006894	          0x4889c7	                            mov rdi, rax	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006897	            0x31c0	                            xor eax, eax	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006899	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x400689f	      0xe800000000	                          call 0x40068a4	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40068a4	      0xe9f7eaffff	                           jmp 0x40053a0	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40068a9	      0xe800000000	                          call 0x40068ae	       586	sequencer.c	FUNCTION_22	CALL_5
0x40068ae	          0x4889c7	                            mov rdi, rax	       586	sequencer.c	FUNCTION_22	CALL_5
0x40068b1	    0x488905000000	            mov qword [0x040068b8], rax 	       586	sequencer.c	FUNCTION_22	CALL_5
0x40068b8	      0xe971f4ffff	                           jmp 0x4005d2e	       586	sequencer.c	FUNCTION_22	CALL_5
0x40068bd	      0xbf00000000	                              mov edi, 0	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_28
0x40068c2	      0xe800000000	                          call 0x40068c7	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_28
0x40068c7	    0x488d8c24d000	                   lea rcx, [rsp + 0xd0]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40068cf	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40068d4	    0x488db4243001	                  lea rsi, [rsp + 0x130]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40068dc	          0x4889c2	                            mov rdx, rax	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40068df	      0x48894c2458	             mov qword [rsp + 0x58], rcx	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40068e4	          0x4989c8	                             mov r8, rcx	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40068e7	          0x4c89e9	                            mov rcx, r13	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40068ea	      0xe800000000	                          call 0x40068ef	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40068ef	            0x85c0	                           test eax, eax	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40068f1	     0xf85fd010000	                           jne 0x4006af4	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40068f7	      0x448b5c2460	           mov r11d, dword [rsp + 0x60] 	      1196	sequencer.c	FUNCTION_37	IF_15
0x40068fc	          0x4585db	                         test r11d, r11d	      1196	sequencer.c	FUNCTION_37	IF_15
0x40068ff	     0xf853f020000	                           jne 0x4006b44	      1196	sequencer.c	FUNCTION_37	IF_15
0x4006905	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1200	sequencer.c	FUNCTION_37	CALL_30
0x400690a	      0xe800000000	                          call 0x400690f	      1200	sequencer.c	FUNCTION_37	CALL_30
0x400690f	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1201	sequencer.c	FUNCTION_37	CALL_31
0x4006914	      0xe800000000	                          call 0x4006919	      1201	sequencer.c	FUNCTION_37	CALL_31
0x4006919	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1202	sequencer.c	FUNCTION_37	CALL_32
0x400691e	      0xe800000000	                          call 0x4006923	      1202	sequencer.c	FUNCTION_37	CALL_32
0x4006923	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1203	sequencer.c	FUNCTION_37	CALL_33
0x4006928	      0xe800000000	                          call 0x400692d	      1203	sequencer.c	FUNCTION_37	CALL_33
0x400692d	          0x4c89e7	                            mov rdi, r12	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006930	      0xe800000000	                          call 0x4006935	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006935	      0xe800000000	                          call 0x400693a	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x400693a	          0x4889c7	                            mov rdi, rax	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x400693d	      0xe800000000	                          call 0x4006942	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x4006942	      0xe800000000	                          call 0x4006947	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x4006947	          0x4889c7	                            mov rdi, rax	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x400694a	      0xe800000000	                          call 0x400694f	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x400694f	          0x833b02	                      cmp dword [rbx], 2	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4006952	     0xf8438f3ffff	                            je 0x4005c90	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4006958	    0x488db4243001	                  lea rsi, [rsp + 0x130]	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006960	            0x31ff	                            xor edi, edi	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006962	      0xba02000000	                              mov edx, 2	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006967	      0xe800000000	                          call 0x400696c	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x400696c	      0x448b542454	           mov r10d, dword [rsp + 0x54] 	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006971	          0x4585d2	                         test r10d, r10d	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006974	           0xf95c0	                                setne al	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006977	          0x4531ff	                          xor r15d, r15d	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x400697a	      0xe9c5ebffff	                           jmp 0x4005544	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x400697f	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006984	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x4006986	      0xe800000000	                          call 0x400698b	        82	sequencer.c	CALL_13
0x400698b	          0x4889c2	                            mov rdx, rax	        82	sequencer.c	CALL_13
0x400698e	    0x488905000000	            mov qword [0x04006995], rax 	        82	sequencer.c	CALL_13
0x4006995	      0xe98eefffff	                           jmp 0x4005928	        82	sequencer.c	CALL_13
0x400699a	          0x4c89e7	                            mov rdi, r12	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x400699d	      0xe800000000	                          call 0x40069a2	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40069a2	      0xe9b4f3ffff	                           jmp 0x4005d5b	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40069a7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x40069ac	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x40069b1	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x40069b3	      0xe800000000	                          call 0x40069b8	        54	gettext.h	FUNCTION_147
0x40069b8	          0x4889c7	                            mov rdi, rax	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40069bb	            0x31c0	                            xor eax, eax	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40069bd	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40069c3	      0xe800000000	                          call 0x40069c8	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40069c8	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40069d0	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1138	sequencer.c	FUNCTION_37	IF_2	IF_4
0x40069d9	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1109	sequencer.c	FUNCTION_37
0x40069e2	      0x4889442458	             mov qword [rsp + 0x58], rax	      1109	sequencer.c	FUNCTION_37
0x40069e7	      0xe985f6ffff	                           jmp 0x4006071	      1109	sequencer.c	FUNCTION_37
0x40069ec	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40069f4	          0x4531c0	                            xor r8d, r8d	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40069f7	      0xb900000000	                              mov ecx, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40069fc	          0x4c89d2	                            mov rdx, r10	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40069ff	      0xbe00000000	                              mov esi, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006a04	            0x31c0	                            xor eax, eax	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006a06	      0xe800000000	                          call 0x4006a0b	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006a0b	      0xe957f8ffff	                           jmp 0x4006267	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006a10	    0x4c8b2d000000	            mov r13, qword [0x04006a17] 	        36	sequencer.c	CALL_1
0x4006a17	          0x4d85ed	                           test r13, r13	        36	sequencer.c	CALL_1
0x4006a1a	     0xf8426020000	                            je 0x4006c46	        36	sequencer.c	CALL_1
0x4006a20	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x4006a25	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x4006a2a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x4006a2c	      0xe800000000	                          call 0x4006a31	        54	gettext.h	FUNCTION_147
0x4006a31	          0x4c89ee	                            mov rsi, r13	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006a34	          0x4889c7	                            mov rdi, rax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006a37	            0x31c0	                            xor eax, eax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006a39	      0xe800000000	                          call 0x4006a3e	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006a3e	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006a46	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006a4c	      0x4889442458	             mov qword [rsp + 0x58], rax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006a51	      0xe91bf6ffff	                           jmp 0x4006071	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006a56	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4006a5e	          0x4889c7	                            mov rdi, rax	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4006a61	    0x48c784248000	               mov qword [rsp + 0x80], 0	      1127	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4006a6d	      0xe800000000	                          call 0x4006a72	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4006a72	    0x4c8bac248000	            mov r13, qword [rsp + 0x80] 	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x4006a7a	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006a7d	      0xe800000000	                          call 0x4006a82	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006a82	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006a85	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006a8a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006a8d	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006a90	      0xe800000000	                          call 0x4006a95	       279	strbuf.h	FUNCTION_110	CALL_2
0x4006a95	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1132	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4006a9e	      0xe9aaf9ffff	                           jmp 0x400644d	      1132	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4006aa3	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x4006aa8	            0x31c0	                            xor eax, eax	        95	sequencer.c	CALL_15
0x4006aaa	      0xe800000000	                          call 0x4006aaf	        95	sequencer.c	CALL_15
0x4006aaf	          0x4889c2	                            mov rdx, rax	        95	sequencer.c	CALL_15
0x4006ab2	    0x488905000000	            mov qword [0x04006ab9], rax 	        95	sequencer.c	CALL_15
0x4006ab9	      0xe9e5eeffff	                           jmp 0x40059a3	        95	sequencer.c	CALL_15
0x4006abe	      0xbf00000000	                              mov edi, 0	        36	sequencer.c	CALL_1
0x4006ac3	            0x31c0	                            xor eax, eax	        36	sequencer.c	CALL_1
0x4006ac5	      0xe800000000	                          call 0x4006aca	        36	sequencer.c	CALL_1
0x4006aca	          0x4989c2	                            mov r10, rax	        36	sequencer.c	CALL_1
0x4006acd	    0x488905000000	            mov qword [0x04006ad4], rax 	        36	sequencer.c	CALL_1
0x4006ad4	      0xe90cf7ffff	                           jmp 0x40061e5	        36	sequencer.c	CALL_1
0x4006ad9	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006ade	      0xe800000000	                          call 0x4006ae3	        82	sequencer.c	CALL_13
0x4006ae3	    0x488905000000	            mov qword [0x04006aea], rax 	        82	sequencer.c	CALL_13
0x4006aea	      0x4889442448	             mov qword [rsp + 0x48], rax	        82	sequencer.c	CALL_13
0x4006aef	      0xe9e7eeffff	                           jmp 0x40059db	        82	sequencer.c	CALL_13
0x4006af4	    0x488bb424e000	            mov rsi, qword [rsp + 0xe0] 	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006afc	      0xbf00000000	                              mov edi, 0	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006b01	            0x31c0	                            xor eax, eax	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006b03	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006b09	      0xe800000000	                          call 0x4006b0e	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006b0e	      0xe95ef5ffff	                           jmp 0x4006071	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006b13	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006b18	            0x31c0	                            xor eax, eax	        90	sequencer.c	CALL_14
0x4006b1a	      0xe800000000	                          call 0x4006b1f	        90	sequencer.c	CALL_14
0x4006b1f	          0x4889c7	                            mov rdi, rax	        90	sequencer.c	CALL_14
0x4006b22	    0x488905000000	            mov qword [0x04006b29], rax 	        90	sequencer.c	CALL_14
0x4006b29	      0xe938f8ffff	                           jmp 0x4006366	        90	sequencer.c	CALL_14
0x4006b2e	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006b33	      0xe800000000	                          call 0x4006b38	        90	sequencer.c	CALL_14
0x4006b38	    0x488905000000	            mov qword [0x04006b3f], rax 	        90	sequencer.c	CALL_14
0x4006b3f	      0xe9acf9ffff	                           jmp 0x40064f0	        90	sequencer.c	CALL_14
0x4006b44	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006b49	    0x488db4243001	                  lea rsi, [rsp + 0x130]	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006b51	      0xe800000000	                          call 0x4006b56	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006b56	      0xe9aafdffff	                           jmp 0x4006905	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006b5b	    0x488b1d000000	            mov rbx, qword [0x04006b62] 	        82	sequencer.c	CALL_13
0x4006b62	          0x4885db	                           test rbx, rbx	        82	sequencer.c	CALL_13
0x4006b65	     0xf8463010000	                            je 0x4006cce	        82	sequencer.c	CALL_13
0x4006b6b	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006b70	      0xe8db98ffff	                       call sym._.part.6	        82	sequencer.c	CALL_13
0x4006b75	          0x4889de	                            mov rsi, rbx	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006b78	          0x4889c7	                            mov rdi, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006b7b	            0x31c0	                            xor eax, eax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006b7d	      0xe800000000	                          call 0x4006b82	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006b82	      0xe94bf3ffff	                           jmp 0x4005ed2	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006b87	      0xe800000000	                          call 0x4006b8c	      1727	sequencer.c	FUNCTION_48
0x4006b8c	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006b91	            0x31c0	                            xor eax, eax	        90	sequencer.c	CALL_14
0x4006b93	      0xe800000000	                          call 0x4006b98	        90	sequencer.c	CALL_14
0x4006b98	          0x4889c2	                            mov rdx, rax	        90	sequencer.c	CALL_14
0x4006b9b	    0x488905000000	            mov qword [0x04006ba2], rax 	        90	sequencer.c	CALL_14
0x4006ba2	      0xe96dfbffff	                           jmp 0x4006714	        90	sequencer.c	CALL_14
0x4006ba7	    0x488b1d000000	            mov rbx, qword [0x04006bae] 	        82	sequencer.c	CALL_13
0x4006bae	          0x4885db	                           test rbx, rbx	        82	sequencer.c	CALL_13
0x4006bb1	     0xf84c3000000	                            je 0x4006c7a	        82	sequencer.c	CALL_13
0x4006bb7	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006bbc	      0xe88f98ffff	                       call sym._.part.6	        82	sequencer.c	CALL_13
0x4006bc1	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4006bc6	      0xe9faf2ffff	                           jmp 0x4005ec5	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4006bcb	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006bd0	      0xe800000000	                          call 0x4006bd5	        82	sequencer.c	CALL_13
0x4006bd5	    0x488905000000	            mov qword [0x04006bdc], rax 	        82	sequencer.c	CALL_13
0x4006bdc	      0xe969fcffff	                           jmp 0x400684a	        82	sequencer.c	CALL_13
0x4006be1	      0xbf00000000	                              mov edi, 0	        36	sequencer.c	CALL_1
0x4006be6	            0x31c0	                            xor eax, eax	        36	sequencer.c	CALL_1
0x4006be8	      0xe800000000	                          call 0x4006bed	        36	sequencer.c	CALL_1
0x4006bed	    0x488905000000	            mov qword [0x04006bf4], rax 	        36	sequencer.c	CALL_1
0x4006bf4	      0xe993f6ffff	                           jmp 0x400628c	        36	sequencer.c	CALL_1
0x4006bf9	      0xbf00000000	                              mov edi, 0	        36	sequencer.c	CALL_1
0x4006bfe	      0xe84d98ffff	                       call sym._.part.6	        36	sequencer.c	CALL_1
0x4006c03	          0x4889c7	                            mov rdi, rax	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c06	            0x31c0	                            xor eax, eax	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c08	      0xe800000000	                          call 0x4006c0d	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c0d	      0xe949f1ffff	                           jmp 0x4005d5b	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c12	            0x31f6	                            xor esi, esi	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c14	          0x83f803	                              cmp eax, 3	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c17	        0x400f94c6	                                sete sil	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c1b	      0xe978faffff	                           jmp 0x4006698	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c20	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006c25	      0xe800000000	                          call 0x4006c2a	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006c2a	      0xbf00000000	                              mov edi, 0	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006c2f	          0x4889c3	                            mov rbx, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006c32	      0xe939ffffff	                           jmp 0x4006b70	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006c37	          0x4489e6	                           mov esi, r12d	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4006c3a	      0xbf00000000	                              mov edi, 0	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4006c3f	            0x31c0	                            xor eax, eax	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4006c41	      0xe800000000	                          call 0x4006c46	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4006c46	      0xbf00000000	                              mov edi, 0	        36	sequencer.c	CALL_1
0x4006c4b	            0x31c0	                            xor eax, eax	        36	sequencer.c	CALL_1
0x4006c4d	      0xe800000000	                          call 0x4006c52	        36	sequencer.c	CALL_1
0x4006c52	          0x4989c5	                            mov r13, rax	        36	sequencer.c	CALL_1
0x4006c55	    0x488905000000	            mov qword [0x04006c5c], rax 	        36	sequencer.c	CALL_1
0x4006c5c	      0xe9bffdffff	                           jmp 0x4006a20	        36	sequencer.c	CALL_1
0x4006c61	      0xbf00000000	                              mov edi, 0	        36	sequencer.c	CALL_1
0x4006c66	      0xe8e597ffff	                       call sym._.part.6	        36	sequencer.c	CALL_1
0x4006c6b	          0x4889c7	                            mov rdi, rax	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4006c6e	            0x31c0	                            xor eax, eax	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4006c70	      0xe800000000	                          call 0x4006c75	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4006c75	      0xe958f2ffff	                           jmp 0x4005ed2	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4006c7a	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006c7f	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x4006c81	      0xe800000000	                          call 0x4006c86	        82	sequencer.c	CALL_13
0x4006c86	          0x4889c3	                            mov rbx, rax	        82	sequencer.c	CALL_13
0x4006c89	    0x488905000000	            mov qword [0x04006c90], rax 	        82	sequencer.c	CALL_13
0x4006c90	      0xe922ffffff	                           jmp 0x4006bb7	        82	sequencer.c	CALL_13
0x4006c95	          0x4c89f6	                            mov rsi, r14	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4006c98	          0x4c89ff	                            mov rdi, r15	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4006c9b	      0xe800000000	                          call 0x4006ca0	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4006ca0	    0x48833d000000	               cmp qword [0x04006ca8], 0	        90	sequencer.c	CALL_14
0x4006ca8	            0x7513	                           jne 0x4006cbd	        90	sequencer.c	CALL_14
0x4006caa	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006caf	            0x31c0	                            xor eax, eax	        90	sequencer.c	CALL_14
0x4006cb1	      0xe800000000	                          call 0x4006cb6	        90	sequencer.c	CALL_14
0x4006cb6	    0x488905000000	            mov qword [0x04006cbd], rax 	        90	sequencer.c	CALL_14
0x4006cbd	    0x488b1d000000	            mov rbx, qword [0x04006cc4] 	        90	sequencer.c	CALL_14
0x4006cc4	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006cc9	      0xe9a2feffff	                           jmp 0x4006b70	        90	sequencer.c	CALL_14
0x4006cce	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006cd3	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x4006cd5	      0xe800000000	                          call 0x4006cda	        82	sequencer.c	CALL_13
0x4006cda	          0x4889c3	                            mov rbx, rax	        82	sequencer.c	CALL_13
0x4006cdd	    0x488905000000	            mov qword [0x04006ce4], rax 	        82	sequencer.c	CALL_13
0x4006ce4	      0xe982feffff	                           jmp 0x4006b6b	        82	sequencer.c	CALL_13
0x4006ce9	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006cee	      0xe85d97ffff	                       call sym._.part.6	        82	sequencer.c	CALL_13
0x4006cf3	          0x4889c7	                            mov rdi, rax	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006cf6	            0x31c0	                            xor eax, eax	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006cf8	      0xe800000000	                          call 0x4006cfd	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006cfd	      0xe9d0f1ffff	                           jmp 0x4005ed2	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006d02	      0xbf00000000	                              mov edi, 0	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006d07	      0xe84497ffff	                       call sym._.part.6	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006d0c	          0x4889c7	                            mov rdi, rax	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4006d0f	            0x31c0	                            xor eax, eax	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4006d11	      0xe800000000	                          call 0x4006d16	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4006d16	      0xe9b7f1ffff	                           jmp 0x4005ed2	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
sequencer_init_config	WHILE,0:IF,0:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,1	4
0x4003880	          0x4889fe	                            mov rsi, rdi	       187	sequencer.c	FUNCTION_2
0x4003883	    0xc74738010000	               mov dword [rdi + 0x38], 1	       188	sequencer.c	FUNCTION_2
0x400388a	      0xbf00000000	                              mov edi, 0	       189	sequencer.c	FUNCTION_2	CALL_1
0x400388f	      0xe900000000	                           jmp 0x4003894	       189	sequencer.c	FUNCTION_2	CALL_1
check_todo_list	WHILE,0:IF,8:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,2:CALL,19	241
0x400b8b0	            0x4157	                                push r15	      4091	sequencer.c	FUNCTION_101
0x400b8b2	            0x4156	                                push r14	      4091	sequencer.c	FUNCTION_101
0x400b8b4	      0xbf00000000	                              mov edi, 0	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400b8b9	            0x4155	                                push r13	      4091	sequencer.c	FUNCTION_101
0x400b8bb	            0x4154	                                push r12	      4091	sequencer.c	FUNCTION_101
0x400b8bd	          0x4531ed	                          xor r13d, r13d	      4074	sequencer.c	FUNCTION_100	IF_1
0x400b8c0	              0x55	                                push rbp	      4091	sequencer.c	FUNCTION_101
0x400b8c1	              0x53	                                push rbx	      4091	sequencer.c	FUNCTION_101
0x400b8c2	    0x4881ecb80000	                           sub rsp, 0xb8	      4091	sequencer.c	FUNCTION_101
0x400b8c9	      0x4c8d642450	                   lea r12, [rsp + 0x50]	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400b8ce	    0x64488b042528	                mov rax, qword fs:[0x28]	      4091	sequencer.c	FUNCTION_101
0x400b8d7	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      4091	sequencer.c	FUNCTION_101
0x400b8df	            0x31c0	                            xor eax, eax	      4091	sequencer.c	FUNCTION_101
0x400b8e1	          0x4c89e6	                            mov rsi, r12	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400b8e4	      0xe800000000	                          call 0x400b8e9	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400b8e9	            0x85c0	                           test eax, eax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400b8eb	            0x754b	                           jne 0x400b938	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400b8ed	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400b8f2	      0xbf00000000	                              mov edi, 0	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400b8f7	          0x4889de	                            mov rsi, rbx	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400b8fa	      0xe800000000	                          call 0x400b8ff	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400b8ff	            0x85c0	                           test eax, eax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400b901	            0x7435	                            je 0x400b938	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400b903	          0x4889de	                            mov rsi, rbx	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400b906	      0xbf00000000	                              mov edi, 0	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400b90b	    0x41bd01000000	                             mov r13d, 1	      4076	sequencer.c	FUNCTION_100	IF_2
0x400b911	      0xe800000000	                          call 0x400b916	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400b916	            0x85c0	                           test eax, eax	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400b918	            0x741e	                            je 0x400b938	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400b91a	          0x4889de	                            mov rsi, rbx	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400b91d	      0xbf00000000	                              mov edi, 0	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400b922	    0x41bd02000000	                             mov r13d, 2	      4078	sequencer.c	FUNCTION_100	IF_3
0x400b928	      0xe800000000	                          call 0x400b92d	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400b92d	            0x85c0	                           test eax, eax	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400b92f	     0xf8574030000	                           jne 0x400bca9	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400b935	           0xf1f00	                         nop dword [rax]	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400b938	    0x488b1d000000	            mov rbx, qword [0x0400b93f] 	        52	sequencer.c	CALL_8
0x400b93f	            0x31c0	                            xor eax, eax	      4094	sequencer.c	FUNCTION_101
0x400b941	      0xb90b000000	                            mov ecx, 0xb	      4094	sequencer.c	FUNCTION_101
0x400b946	          0x4c89e7	                            mov rdi, r12	      4094	sequencer.c	FUNCTION_101
0x400b949	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4093	sequencer.c	FUNCTION_101
0x400b952	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4093	sequencer.c	FUNCTION_101
0x400b95b	          0xf348ab	              rep stosq qword [rdi], rax	      4094	sequencer.c	FUNCTION_101
0x400b95e	          0x4885db	                           test rbx, rbx	        52	sequencer.c	CALL_8
0x400b961	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4093	sequencer.c	FUNCTION_101
0x400b96a	    0x48c744246000	               mov qword [rsp + 0x60], 0	      4094	sequencer.c	FUNCTION_101
0x400b973	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4095	sequencer.c	FUNCTION_101
0x400b97c	    0x48c744243800	               mov qword [rsp + 0x38], 0	      4095	sequencer.c	FUNCTION_101
0x400b985	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4095	sequencer.c	FUNCTION_101
0x400b98e	     0xf84fc020000	                            je 0x400bc90	        52	sequencer.c	CALL_8
0x400b994	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b997	      0xe800000000	                          call 0x400b99c	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b99c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b9a1	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b9a4	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b9a7	      0xe800000000	                          call 0x400b9ac	       279	strbuf.h	FUNCTION_110	CALL_2
0x400b9ac	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400b9b1	          0x4c89e7	                            mov rdi, r12	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400b9b4	      0xe8875affff	      call sym.strbuf_read_file_or_whine	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400b9b9	          0x4885c0	                           test rax, rax	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400b9bc	     0xf884e020000	                            js 0x400bc10	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400b9c2	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      4103	sequencer.c	FUNCTION_101
0x400b9c7	          0x4c89e6	                            mov rsi, r12	      4103	sequencer.c	FUNCTION_101
0x400b9ca	      0xe8f151ffff	              call sym.parse_insn_buffer	      4103	sequencer.c	FUNCTION_101
0x400b9cf	            0x85c0	                           test eax, eax	      4106	sequencer.c	FUNCTION_101	IF_2
0x400b9d1	            0x89c3	                            mov ebx, eax	      4103	sequencer.c	FUNCTION_101
0x400b9d3	     0xf8527020000	                           jne 0x400bc00	      4106	sequencer.c	FUNCTION_101	IF_2
0x400b9d9	          0x4585ed	                         test r13d, r13d	      4106	sequencer.c	FUNCTION_101	IF_2
0x400b9dc	     0xf841e020000	                            je 0x400bc00	      4106	sequencer.c	FUNCTION_101	IF_2
0x400b9e2	        0x8b542470	            mov edx, dword [rsp + 0x70] 	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b9e6	            0x85d2	                           test edx, edx	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b9e8	            0x7e37	                           jle 0x400ba21	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b9ea	          0x83ea01	                              sub edx, 1	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b9ed	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b9f2	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b9f6	        0x48c1e204	                              shl rdx, 4	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b9fa	        0x488d4108	                      lea rax, [rcx + 8]	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b9fe	      0x488d4c1138	            lea rcx, [rcx + rdx + 0x38] 	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400ba03	       0xf1f440000	                   nop dword [rax + rax]	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400ba08	          0x488b10	                    mov rdx, qword [rax]	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400ba0b	          0x4885d2	                           test rdx, rdx	      4112	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400ba0e	            0x7408	                            je 0x400ba18	      4112	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400ba10	    0x48c742180100	               mov qword [rdx + 0x18], 1	      4113	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400ba18	        0x4883c030	                           add rax, 0x30	      4113	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400ba1c	          0x4839c8	                            cmp rax, rcx	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400ba1f	            0x75e7	                           jne 0x400ba08	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400ba21	          0x4c89e7	                            mov rdi, r12	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ba24	      0xe800000000	                          call 0x400ba29	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ba29	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1792	sequencer.c	FUNCTION_51
0x400ba2e	      0xe800000000	                          call 0x400ba33	      1792	sequencer.c	FUNCTION_51
0x400ba33	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ba38	      0xba07000000	                              mov edx, 7	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ba3d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ba42	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1792	sequencer.c	FUNCTION_51
0x400ba4b	    0xc74424740000	               mov dword [rsp + 0x74], 0	      1793	sequencer.c	FUNCTION_51
0x400ba53	    0xc74424700000	               mov dword [rsp + 0x70], 0	      1793	sequencer.c	FUNCTION_51
0x400ba5b	      0xe800000000	                          call 0x400ba60	       279	strbuf.h	FUNCTION_110	CALL_2
0x400ba60	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400ba65	          0x4c89e7	                            mov rdi, r12	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400ba68	      0xe8d359ffff	      call sym.strbuf_read_file_or_whine	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400ba6d	          0x4885c0	                           test rax, rax	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400ba70	     0xf889a010000	                            js 0x400bc10	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400ba76	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4122	sequencer.c	FUNCTION_101	CALL_9
0x400ba7b	          0x4531f6	                          xor r14d, r14d	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400ba7e	      0xe800000000	                          call 0x400ba83	      4122	sequencer.c	FUNCTION_101	CALL_9
0x400ba83	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400ba88	          0x4c89e6	                            mov rsi, r12	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400ba8b	      0xe83051ffff	              call sym.parse_insn_buffer	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400ba90	            0x85c0	                           test eax, eax	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400ba92	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400ba96	        0x410f95c6	                              setne r14b	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400ba9a	          0x83e801	                              sub eax, 1	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400ba9d	            0x7846	                            js 0x400bae5	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400ba9f	          0x4863d0	                         movsxd rdx, eax	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400baa2	            0x89c0	                            mov eax, eax	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400baa4	        0x488d1c52	                  lea rbx, [rdx + rdx*2]	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400baa8	          0x4829c2	                            sub rdx, rax	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400baab	        0x4c8d0c52	                   lea r9, [rdx + rdx*2]	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400baaf	        0x48c1e304	                              shl rbx, 4	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400bab3	        0x49c1e104	                               shl r9, 4	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400bab7	        0x4d8d79d0	                    lea r15, [r9 - 0x30]	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400babb	       0xf1f440000	                   nop dword [rax + rax]	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400bac0	          0x4889d8	                            mov rax, rbx	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400bac3	      0x4803442468	             add rax, qword [rsp + 0x68]	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400bac8	        0x488b6808	                mov rbp, qword [rax + 8]	      4128	sequencer.c	FUNCTION_101	FOR_2
0x400bacc	          0x4885ed	                           test rbp, rbp	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400bacf	            0x740b	                            je 0x400badc	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400bad1	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400bad6	     0xf8464010000	                            je 0x400bc40	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400badc	        0x4883eb30	                           sub rbx, 0x30	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400bae0	          0x4939df	                            cmp r15, rbx	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400bae3	            0x75db	                           jne 0x400bac0	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400bae5	    0x48837c243800	               cmp qword [rsp + 0x38], 0	      4138	sequencer.c	FUNCTION_101	IF_6
0x400baeb	     0xf842f010000	                            je 0x400bc20	      4138	sequencer.c	FUNCTION_101	IF_6
0x400baf1	            0x31db	                            xor ebx, ebx	      4141	sequencer.c	FUNCTION_101	IF_7
0x400baf3	      0xb801000000	                              mov eax, 1	      4141	sequencer.c	FUNCTION_101	IF_7
0x400baf8	        0x4183fd02	                             cmp r13d, 2	      4141	sequencer.c	FUNCTION_101	IF_7
0x400bafc	           0xf94c3	                                 sete bl	      4141	sequencer.c	FUNCTION_101	IF_7
0x400baff	        0x440f44f0	                         cmove r14d, eax	      4141	sequencer.c	FUNCTION_101	IF_7
0x400bb03	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400bb08	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400bb0d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400bb0f	      0xe800000000	                          call 0x400bb14	        54	gettext.h	FUNCTION_147
0x400bb14	    0x488b3d000000	            mov rdi, qword [0x0400bb1b] 	        97	stdio2.h	CALL_476
0x400bb1b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_476
0x400bb1e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400bb23	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x400bb25	      0xe800000000	                          call 0x400bb2a	        97	stdio2.h	CALL_476
0x400bb2a	    0x488b35000000	            mov rsi, qword [0x0400bb31] 	      4149	sequencer.c	FUNCTION_101	CALL_14
0x400bb31	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4149	sequencer.c	FUNCTION_101	CALL_14
0x400bb36	      0xe800000000	                          call 0x400bb3b	      4149	sequencer.c	FUNCTION_101	CALL_14
0x400bb3b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4150	sequencer.c	FUNCTION_101	CALL_15
0x400bb40	      0xe800000000	                          call 0x400bb45	      4150	sequencer.c	FUNCTION_101	CALL_15
0x400bb45	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400bb4a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400bb4f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400bb51	      0xe800000000	                          call 0x400bb56	        54	gettext.h	FUNCTION_147
0x400bb56	    0x488b3d000000	            mov rdi, qword [0x0400bb5d] 	        97	stdio2.h	CALL_476
0x400bb5d	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_476
0x400bb60	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400bb65	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x400bb67	      0xe800000000	                          call 0x400bb6c	        97	stdio2.h	CALL_476
0x400bb6c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400bb71	      0xe800000000	                          call 0x400bb76	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400bb76	          0x4c89e7	                            mov rdi, r12	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400bb79	      0xe800000000	                          call 0x400bb7e	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400bb7e	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1792	sequencer.c	FUNCTION_51
0x400bb83	      0xe800000000	                          call 0x400bb88	      1792	sequencer.c	FUNCTION_51
0x400bb88	            0x85db	                           test ebx, ebx	      4162	sequencer.c	FUNCTION_101	IF_8
0x400bb8a	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1792	sequencer.c	FUNCTION_51
0x400bb93	    0xc74424740000	               mov dword [rsp + 0x74], 0	      1793	sequencer.c	FUNCTION_51
0x400bb9b	    0xc74424700000	               mov dword [rsp + 0x70], 0	      1793	sequencer.c	FUNCTION_51
0x400bba3	            0x7427	                            je 0x400bbcc	      4162	sequencer.c	FUNCTION_101	IF_8
0x400bba5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400bbaa	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400bbaf	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400bbb1	      0xe800000000	                          call 0x400bbb6	        54	gettext.h	FUNCTION_147
0x400bbb6	    0x488b3d000000	            mov rdi, qword [0x0400bbbd] 	        97	stdio2.h	CALL_476
0x400bbbd	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_476
0x400bbc0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_476
0x400bbc5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_476
0x400bbc7	      0xe800000000	                          call 0x400bbcc	        97	stdio2.h	CALL_476
0x400bbcc	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	      4170	sequencer.c	FUNCTION_101
0x400bbd4	    0x644833342528	                xor rsi, qword fs:[0x28]	      4170	sequencer.c	FUNCTION_101
0x400bbdd	          0x4489f0	                           mov eax, r14d	      4170	sequencer.c	FUNCTION_101
0x400bbe0	     0xf85e9000000	                           jne 0x400bccf	      4170	sequencer.c	FUNCTION_101
0x400bbe6	    0x4881c4b80000	                           add rsp, 0xb8	      4170	sequencer.c	FUNCTION_101
0x400bbed	              0x5b	                                 pop rbx	      4170	sequencer.c	FUNCTION_101
0x400bbee	              0x5d	                                 pop rbp	      4170	sequencer.c	FUNCTION_101
0x400bbef	            0x415c	                                 pop r12	      4170	sequencer.c	FUNCTION_101
0x400bbf1	            0x415d	                                 pop r13	      4170	sequencer.c	FUNCTION_101
0x400bbf3	            0x415e	                                 pop r14	      4170	sequencer.c	FUNCTION_101
0x400bbf5	            0x415f	                                 pop r15	      4170	sequencer.c	FUNCTION_101
0x400bbf7	              0xc3	                                     ret	      4170	sequencer.c	FUNCTION_101
0x400bbf8	     0xf1f84000000	                   nop dword [rax + rax]	      4170	sequencer.c	FUNCTION_101
0x400bc00	          0x4189de	                           mov r14d, ebx	      4103	sequencer.c	FUNCTION_101
0x400bc03	      0xe964ffffff	                           jmp 0x400bb6c	      4103	sequencer.c	FUNCTION_101
0x400bc08	     0xf1f84000000	                   nop dword [rax + rax]	      4103	sequencer.c	FUNCTION_101
0x400bc10	    0x41beffffffff	                    mov r14d, 0xffffffff	      4100	sequencer.c	FUNCTION_101	IF_1
0x400bc16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4100	sequencer.c	FUNCTION_101	IF_1
0x400bc20	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400bc25	      0xe800000000	                          call 0x400bc2a	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400bc2a	          0x4c89e7	                            mov rdi, r12	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400bc2d	      0xe800000000	                          call 0x400bc32	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400bc32	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1792	sequencer.c	FUNCTION_51
0x400bc37	      0xe800000000	                          call 0x400bc3c	      1792	sequencer.c	FUNCTION_51
0x400bc3c	            0xeb8e	                           jmp 0x400bbcc	      1792	sequencer.c	FUNCTION_51
0x400bc3e	            0x6690	                                     nop	      1792	sequencer.c	FUNCTION_51
0x400bc40	        0x4c8b4018	              mov r8, qword [rax + 0x18]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc44	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc47	        0x488d7d04	                      lea rdi, [rbp + 4]	       312	sequencer.c	FUNCTION_10	CALL_1
0x400bc4b	    0x8b3500000000	            mov esi, dword [0x0400bc51] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x400bc51	      0x4c89442408	                 mov qword [rsp + 8], r8	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc56	        0x894c2404	                mov dword [rsp + 4], ecx	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc5a	      0xe800000000	                          call 0x400bc5f	       312	sequencer.c	FUNCTION_10	CALL_1
0x400bc5f	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc64	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc68	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc6d	          0x4889c2	                            mov rdx, rax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc70	      0xbe00000000	                              mov esi, 0	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc75	            0x31c0	                            xor eax, eax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc77	      0xe800000000	                          call 0x400bc7c	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400bc7c	    0x48c745180100	               mov qword [rbp + 0x18], 1	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400bc84	      0xe953feffff	                           jmp 0x400badc	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400bc89	     0xf1f80000000	                         nop dword [rax]	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400bc90	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400bc95	      0xe800000000	                          call 0x400bc9a	        52	sequencer.c	CALL_8
0x400bc9a	          0x4889c3	                            mov rbx, rax	        52	sequencer.c	CALL_8
0x400bc9d	    0x488905000000	            mov qword [0x0400bca4], rax 	        52	sequencer.c	CALL_8
0x400bca4	      0xe9ebfcffff	                           jmp 0x400b994	        52	sequencer.c	CALL_8
0x400bca9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400bcae	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400bcb3	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400bcb5	      0xe800000000	                          call 0x400bcba	        54	gettext.h	FUNCTION_147
0x400bcba	          0x4889de	                            mov rsi, rbx	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400bcbd	          0x4889c7	                            mov rdi, rax	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400bcc0	            0x31c0	                            xor eax, eax	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400bcc2	      0xe800000000	                          call 0x400bcc7	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400bcc7	          0x4531ed	                          xor r13d, r13d	      4081	sequencer.c	FUNCTION_100
0x400bcca	      0xe969fcffff	                           jmp 0x400b938	      4081	sequencer.c	FUNCTION_100
0x400bccf	      0xe800000000	                          call 0x400bcd4	      4170	sequencer.c	FUNCTION_101
skip_unnecessary_picks	WHILE,0:IF,15:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,1:CALL,35	300
0x400bce0	            0x4157	                                push r15	      4187	sequencer.c	FUNCTION_103
0x400bce2	            0x4156	                                push r14	      4187	sequencer.c	FUNCTION_103
0x400bce4	            0x4155	                                push r13	      4187	sequencer.c	FUNCTION_103
0x400bce6	            0x4154	                                push r12	      4187	sequencer.c	FUNCTION_103
0x400bce8	              0x55	                                push rbp	      4187	sequencer.c	FUNCTION_103
0x400bce9	              0x53	                                push rbx	      4187	sequencer.c	FUNCTION_103
0x400bcea	    0x4881ecb80000	                           sub rsp, 0xb8	      4187	sequencer.c	FUNCTION_103
0x400bcf1	    0x488b1d000000	            mov rbx, qword [0x0400bcf8] 	        52	sequencer.c	CALL_8
0x400bcf8	    0x64488b042528	                mov rax, qword fs:[0x28]	      4187	sequencer.c	FUNCTION_103
0x400bd01	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      4187	sequencer.c	FUNCTION_103
0x400bd09	            0x31c0	                            xor eax, eax	      4187	sequencer.c	FUNCTION_103
0x400bd0b	          0x4885db	                           test rbx, rbx	        52	sequencer.c	CALL_8
0x400bd0e	     0xf8496030000	                            je 0x400c0aa	        52	sequencer.c	CALL_8
0x400bd14	    0x488b35000000	            mov rsi, qword [0x0400bd1b] 	       141	sequencer.c	CALL_27
0x400bd1b	      0x4c8d742430	                   lea r14, [rsp + 0x30]	      4190	sequencer.c	FUNCTION_103
0x400bd20	            0x31c0	                            xor eax, eax	      4190	sequencer.c	FUNCTION_103
0x400bd22	      0xb90b000000	                            mov ecx, 0xb	      4190	sequencer.c	FUNCTION_103
0x400bd27	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4189	sequencer.c	FUNCTION_103
0x400bd30	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4189	sequencer.c	FUNCTION_103
0x400bd39	          0x4c89f7	                            mov rdi, r14	      4190	sequencer.c	FUNCTION_103
0x400bd3c	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4189	sequencer.c	FUNCTION_103
0x400bd45	          0x4885f6	                           test rsi, rsi	       141	sequencer.c	CALL_27
0x400bd48	          0xf348ab	              rep stosq qword [rdi], rax	      4190	sequencer.c	FUNCTION_103
0x400bd4b	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4190	sequencer.c	FUNCTION_103
0x400bd54	     0xf8469030000	                            je 0x400c0c3	       141	sequencer.c	CALL_27
0x400bd5a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400bd5f	            0x31d2	                            xor edx, edx	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400bd61	      0xe80a56ffff	                  call sym.read_oneliner	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400bd66	            0x85c0	                           test eax, eax	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400bd68	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400bd6d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400bd72	     0xf8416030000	                            je 0x400c08e	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400bd78	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400bd7d	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400bd85	      0xe800000000	                          call 0x400bd8a	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400bd8a	            0x85c0	                           test eax, eax	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400bd8c	          0x4189c7	                           mov r15d, eax	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400bd8f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_6
0x400bd94	     0xf85e5020000	                           jne 0x400c07f	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400bd9a	      0xe800000000	                          call 0x400bd9f	      4200	sequencer.c	FUNCTION_103	CALL_8
0x400bd9f	          0x4889de	                            mov rsi, rbx	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400bda2	          0x4c89f7	                            mov rdi, r14	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400bda5	      0xe89656ffff	      call sym.strbuf_read_file_or_whine	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400bdaa	          0x4885c0	                           test rax, rax	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400bdad	     0xf8871030000	                            js 0x400c124	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400bdb3	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400bdb8	          0x4c89f6	                            mov rsi, r14	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400bdbb	      0xe8004effff	              call sym.parse_insn_buffer	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400bdc0	            0x85c0	                           test eax, eax	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400bdc2	     0xf8896030000	                            js 0x400c15e	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400bdc8	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400bdcc	            0x85c0	                           test eax, eax	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400bdce	     0xf8ea7030000	                           jle 0x400c17b	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400bdd4	    0x4c8dac249000	                   lea r13, [rsp + 0x90]	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400bddc	            0x31ed	                            xor ebp, ebp	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400bdde	            0x31db	                            xor ebx, ebx	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400bde0	          0x4989ec	                            mov r12, rbp	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400bde3	      0x4c03642448	             add r12, qword [rsp + 0x48]	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400bde8	        0x418b0424	                    mov eax, dword [r12]	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400bdec	          0x83f809	                              cmp eax, 9	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400bdef	            0x775b	                            ja 0x400be4c	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400bdf1	            0x85c0	                           test eax, eax	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400bdf3	     0xf85b7010000	                           jne 0x400bfb0	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400bdf9	      0x498b7c2408	                mov rdi, qword [r12 + 8]	        75	commit.h	FUNCTION_117	CALL_1
0x400bdfe	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_117	CALL_1
0x400be00	      0xe800000000	                          call 0x400be05	        75	commit.h	FUNCTION_117	CALL_1
0x400be05	            0x85c0	                           test eax, eax	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400be07	     0xf850d020000	                           jne 0x400c01a	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400be0d	      0x4d8b642408	                mov r12, qword [r12 + 8]	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400be12	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400be17	          0x4885c0	                           test rax, rax	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400be1a	     0xf8490010000	                            je 0x400bfb0	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400be20	      0x4883780800	                  cmp qword [rax + 8], 0	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400be25	     0xf8585010000	                           jne 0x400bfb0	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400be2b	          0x488b38	                    mov rdi, qword [rax]	       975	cache.h	FUNCTION_125	CALL_1
0x400be2e	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_125	CALL_1
0x400be33	          0x4c89ee	                            mov rsi, r13	       975	cache.h	FUNCTION_125	CALL_1
0x400be36	        0x4883c704	                              add rdi, 4	       975	cache.h	FUNCTION_125	CALL_1
0x400be3a	      0xe800000000	                          call 0x400be3f	       975	cache.h	FUNCTION_125	CALL_1
0x400be3f	            0x85c0	                           test eax, eax	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400be41	     0xf8569010000	                           jne 0x400bfb0	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400be47	      0x4d8d6c2404	                      lea r13, [r12 + 4]	      4228	sequencer.c	FUNCTION_103	FOR_1
0x400be4c	          0x83c301	                              add ebx, 1	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400be4f	        0x4883c530	                           add rbp, 0x30	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400be53	        0x395c2450	            cmp dword [rsp + 0x50], ebx 	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400be57	            0x7f87	                            jg 0x400bde0	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400be59	            0x85db	                           test ebx, ebx	      4230	sequencer.c	FUNCTION_103	IF_11
0x400be5b	     0xf8ee3000000	                           jle 0x400bf44	      4230	sequencer.c	FUNCTION_103	IF_11
0x400be61	      0x48636c2438	         movsxd rbp, dword [rsp + 0x38] 	      1937	sequencer.c	FUNCTION_56
0x400be66	    0x4c8b25000000	            mov r12, qword [0x0400be6d] 	        58	sequencer.c	CALL_9
0x400be6d	          0x4d85e4	                           test r12, r12	        58	sequencer.c	CALL_9
0x400be70	     0xf8466020000	                            je 0x400c0dc	        58	sequencer.c	CALL_9
0x400be76	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x400be78	      0xbab6010000	                          mov edx, 0x1b6	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x400be7d	      0xbe41040000	                          mov esi, 0x441	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x400be82	          0x4c89e7	                            mov rdi, r12	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x400be85	      0xe800000000	                          call 0x400be8a	        53	fcntl2.h	FUNCTION_241	IF_2	CALL_9
0x400be8a	            0x85c0	                           test eax, eax	      4235	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400be8c	     0xf88ae020000	                            js 0x400c140	      4235	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400be92	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400be97	          0x4889ea	                            mov rdx, rbp	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400be9a	            0x89c7	                            mov edi, eax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400be9c	          0x890424	                    mov dword [rsp], eax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400be9f	      0xe800000000	                          call 0x400bea4	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400bea4	          0x4885c0	                           test rax, rax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400bea7	          0x8b0c24	                    mov ecx, dword [rsp]	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400beaa	     0xf88d8020000	                            js 0x400c188	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400beb0	            0x89cf	                            mov edi, ecx	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_26
0x400beb2	      0xe800000000	                          call 0x400beb7	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_26
0x400beb7	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400bebc	    0x488b3d000000	            mov rdi, qword [0x0400bec3] 	        52	sequencer.c	CALL_8
0x400bec3	          0x4889ee	                            mov rsi, rbp	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400bec6	      0x4803742440	             add rsi, qword [rsp + 0x40]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400becb	          0x4829ea	                            sub rdx, rbp	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400bece	          0x4885ff	                           test rdi, rdi	        52	sequencer.c	CALL_8
0x400bed1	     0xf8420020000	                            je 0x400c0f7	        52	sequencer.c	CALL_8
0x400bed7	      0xe8f455ffff	                   call sym.rewrite_file	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400bedc	            0x85c0	                           test eax, eax	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400bede	     0xf887a020000	                            js 0x400c15e	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400bee4	        0x8b542450	            mov edx, dword [rsp + 0x50] 	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400bee8	        0x895c2458	             mov dword [rsp + 0x58], ebx	      4255	sequencer.c	FUNCTION_103	IF_11
0x400beec	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      4255	sequencer.c	FUNCTION_103	IF_11
0x400bef1	            0x39da	                            cmp edx, ebx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400bef3	            0x7e4f	                           jle 0x400bf44	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400bef5	          0x4c63c3	                          movsxd r8, ebx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bef8	        0x4b8d0440	                    lea rax, [r8 + r8*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400befc	        0x48c1e004	                              shl rax, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf00	        0x498d3c01	                     lea rdi, [r9 + rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf04	            0x8b37	                    mov esi, dword [rdi]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf06	          0x83fe09	                              cmp esi, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf09	     0xf8620020000	                           jbe 0x400c12f	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf0f	          0x8d72ff	                      lea esi, [rdx - 1]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf12	          0x4889f8	                            mov rax, rdi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf15	            0x89f2	                            mov edx, esi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf17	            0x29da	                            sub edx, ebx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf19	          0x4c01c2	                             add rdx, r8	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf1c	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf20	        0x48c1e104	                              shl rcx, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf24	          0x4c01c9	                             add rcx, r9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf27	            0xeb16	                           jmp 0x400bf3f	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf29	     0xf1f80000000	                         nop dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf30	        0x4883c030	                           add rax, 0x30	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf34	            0x8b10	                    mov edx, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf36	          0x83fa09	                              cmp edx, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf39	     0xf8691000000	                           jbe 0x400bfd0	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bf3f	          0x4839c8	                            cmp rax, rcx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400bf42	            0x75ec	                           jne 0x400bf30	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400bf44	          0x4c89f7	                            mov rdi, r14	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400bf47	      0xe800000000	                          call 0x400bf4c	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400bf4c	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1792	sequencer.c	FUNCTION_51
0x400bf51	      0xe800000000	                          call 0x400bf56	      1792	sequencer.c	FUNCTION_51
0x400bf56	          0x4c89ef	                            mov rdi, r13	      4261	sequencer.c	FUNCTION_103	CALL_35
0x400bf59	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1792	sequencer.c	FUNCTION_51
0x400bf62	    0xc74424540000	               mov dword [rsp + 0x54], 0	      1793	sequencer.c	FUNCTION_51
0x400bf6a	    0xc74424500000	               mov dword [rsp + 0x50], 0	      1793	sequencer.c	FUNCTION_51
0x400bf72	      0xe800000000	                          call 0x400bf77	      4261	sequencer.c	FUNCTION_103	CALL_35
0x400bf77	          0x4889c7	                            mov rdi, rax	       104	stdio2.h	CALL_479
0x400bf7a	      0xe800000000	                          call 0x400bf7f	       104	stdio2.h	CALL_479
0x400bf7f	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      4264	sequencer.c	FUNCTION_103
0x400bf87	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4264	sequencer.c	FUNCTION_103
0x400bf90	          0x4489f8	                           mov eax, r15d	      4264	sequencer.c	FUNCTION_103
0x400bf93	     0xf854d020000	                           jne 0x400c1e6	      4264	sequencer.c	FUNCTION_103
0x400bf99	    0x4881c4b80000	                           add rsp, 0xb8	      4264	sequencer.c	FUNCTION_103
0x400bfa0	              0x5b	                                 pop rbx	      4264	sequencer.c	FUNCTION_103
0x400bfa1	              0x5d	                                 pop rbp	      4264	sequencer.c	FUNCTION_103
0x400bfa2	            0x415c	                                 pop r12	      4264	sequencer.c	FUNCTION_103
0x400bfa4	            0x415d	                                 pop r13	      4264	sequencer.c	FUNCTION_103
0x400bfa6	            0x415e	                                 pop r14	      4264	sequencer.c	FUNCTION_103
0x400bfa8	            0x415f	                                 pop r15	      4264	sequencer.c	FUNCTION_103
0x400bfaa	              0xc3	                                     ret	      4264	sequencer.c	FUNCTION_103
0x400bfab	       0xf1f440000	                   nop dword [rax + rax]	      4264	sequencer.c	FUNCTION_103
0x400bfb0	            0x85db	                           test ebx, ebx	      4230	sequencer.c	FUNCTION_103	IF_11
0x400bfb2	            0x7e90	                           jle 0x400bf44	      4230	sequencer.c	FUNCTION_103	IF_11
0x400bfb4	        0x395c2450	            cmp dword [rsp + 0x50], ebx 	      1937	sequencer.c	FUNCTION_56
0x400bfb8	     0xf8ea3feffff	                           jle 0x400be61	      1937	sequencer.c	FUNCTION_56
0x400bfbe	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1937	sequencer.c	FUNCTION_56
0x400bfc3	      0x48636c2828	   movsxd rbp, dword [rax + rbp + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x400bfc8	      0xe999feffff	                           jmp 0x400be66	      1937	sequencer.c	FUNCTION_56
0x400bfcd	           0xf1f00	                         nop dword [rax]	      1937	sequencer.c	FUNCTION_56
0x400bfd0	          0x83ea04	                              sub edx, 4	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bfd3	          0x83fa01	                              cmp edx, 1	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bfd6	     0xf8768ffffff	                            ja 0x400bf44	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bfdc	            0x29de	                            sub esi, ebx	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bfde	          0x4889f8	                            mov rax, rdi	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bfe1	          0x4901f0	                             add r8, rsi	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bfe4	        0x4b8d1440	                    lea rdx, [r8 + r8*2]	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bfe8	        0x48c1e204	                              shl rdx, 4	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bfec	          0x4901d1	                             add r9, rdx	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bfef	            0xeb12	                           jmp 0x400c003	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bff1	     0xf1f80000000	                         nop dword [rax]	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bff8	        0x4883c030	                           add rax, 0x30	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400bffc	            0x8b30	                    mov esi, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400bffe	          0x83fe09	                              cmp esi, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400c001	            0x760a	                           jbe 0x400c00d	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400c003	          0x4c39c8	                             cmp rax, r9	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400c006	            0x75f0	                           jne 0x400bff8	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400c008	      0xbeffffffff	                     mov esi, 0xffffffff	      2910	sequencer.c	FUNCTION_84
0x400c00d	          0x4c89ef	                            mov rdi, r13	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400c010	      0xe8fb42ffff	            call sym.record_in_rewritten	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400c015	      0xe92affffff	                           jmp 0x400bf44	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400c01a	          0x4c89f7	                            mov rdi, r14	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400c01d	    0x41bfffffffff	                    mov r15d, 0xffffffff	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400c023	      0xe800000000	                          call 0x400c028	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400c028	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1792	sequencer.c	FUNCTION_51
0x400c02d	      0xe800000000	                          call 0x400c032	      1792	sequencer.c	FUNCTION_51
0x400c032	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400c037	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1792	sequencer.c	FUNCTION_51
0x400c040	    0xc74424540000	               mov dword [rsp + 0x54], 0	      1793	sequencer.c	FUNCTION_51
0x400c048	    0xc74424500000	               mov dword [rsp + 0x50], 0	      1793	sequencer.c	FUNCTION_51
0x400c050	        0x4883c704	                              add rdi, 4	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400c054	      0xe800000000	                          call 0x400c059	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400c059	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400c05e	          0x4889c3	                            mov rbx, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400c061	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400c066	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400c068	      0xe800000000	                          call 0x400c06d	        54	gettext.h	FUNCTION_147
0x400c06d	          0x4889de	                            mov rsi, rbx	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400c070	          0x4889c7	                            mov rdi, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400c073	            0x31c0	                            xor eax, eax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400c075	      0xe800000000	                          call 0x400c07a	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400c07a	      0xe900ffffff	                           jmp 0x400bf7f	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400c07f	      0xe800000000	                          call 0x400c084	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_6
0x400c084	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400c089	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400c08e	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400c090	    0x41bfffffffff	                    mov r15d, 0xffffffff	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400c096	      0xe800000000	                          call 0x400c09b	        54	gettext.h	FUNCTION_147
0x400c09b	          0x4889c7	                            mov rdi, rax	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400c09e	            0x31c0	                            xor eax, eax	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400c0a0	      0xe800000000	                          call 0x400c0a5	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400c0a5	      0xe9d5feffff	                           jmp 0x400bf7f	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400c0aa	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400c0af	      0xe800000000	                          call 0x400c0b4	        52	sequencer.c	CALL_8
0x400c0b4	          0x4889c3	                            mov rbx, rax	        52	sequencer.c	CALL_8
0x400c0b7	    0x488905000000	            mov qword [0x0400c0be], rax 	        52	sequencer.c	CALL_8
0x400c0be	      0xe951fcffff	                           jmp 0x400bd14	        52	sequencer.c	CALL_8
0x400c0c3	      0xbf00000000	                              mov edi, 0	       141	sequencer.c	CALL_27
0x400c0c8	      0xe800000000	                          call 0x400c0cd	       141	sequencer.c	CALL_27
0x400c0cd	          0x4889c6	                            mov rsi, rax	       141	sequencer.c	CALL_27
0x400c0d0	    0x488905000000	            mov qword [0x0400c0d7], rax 	       141	sequencer.c	CALL_27
0x400c0d7	      0xe97efcffff	                           jmp 0x400bd5a	       141	sequencer.c	CALL_27
0x400c0dc	      0xbf00000000	                              mov edi, 0	        58	sequencer.c	CALL_9
0x400c0e1	            0x31c0	                            xor eax, eax	        58	sequencer.c	CALL_9
0x400c0e3	      0xe800000000	                          call 0x400c0e8	        58	sequencer.c	CALL_9
0x400c0e8	          0x4989c4	                            mov r12, rax	        58	sequencer.c	CALL_9
0x400c0eb	    0x488905000000	            mov qword [0x0400c0f2], rax 	        58	sequencer.c	CALL_9
0x400c0f2	      0xe97ffdffff	                           jmp 0x400be76	        58	sequencer.c	CALL_9
0x400c0f7	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400c0fc	            0x31c0	                            xor eax, eax	        52	sequencer.c	CALL_8
0x400c0fe	      0x4889742408	                mov qword [rsp + 8], rsi	        52	sequencer.c	CALL_8
0x400c103	        0x48891424	                    mov qword [rsp], rdx	        52	sequencer.c	CALL_8
0x400c107	      0xe800000000	                          call 0x400c10c	        52	sequencer.c	CALL_8
0x400c10c	      0x488b742408	                mov rsi, qword [rsp + 8]	        52	sequencer.c	CALL_8
0x400c111	          0x4889c7	                            mov rdi, rax	        52	sequencer.c	CALL_8
0x400c114	    0x488905000000	            mov qword [0x0400c11b], rax 	        52	sequencer.c	CALL_8
0x400c11b	        0x488b1424	                    mov rdx, qword [rsp]	        52	sequencer.c	CALL_8
0x400c11f	      0xe9b3fdffff	                           jmp 0x400bed7	        52	sequencer.c	CALL_8
0x400c124	    0x41bfffffffff	                    mov r15d, 0xffffffff	      4203	sequencer.c	FUNCTION_103	IF_3
0x400c12a	      0xe950feffff	                           jmp 0x400bf7f	      4203	sequencer.c	FUNCTION_103	IF_3
0x400c12f	          0x8d46fc	                      lea eax, [rsi - 4]	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400c132	          0x83f801	                              cmp eax, 1	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400c135	     0xf8709feffff	                            ja 0x400bf44	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400c13b	      0xe9cdfeffff	                           jmp 0x400c00d	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400c140	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400c145	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400c147	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400c14c	      0xe800000000	                          call 0x400c151	        54	gettext.h	FUNCTION_147
0x400c151	          0x4c89e6	                            mov rsi, r12	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400c154	          0x4889c7	                            mov rdi, rax	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400c157	            0x31c0	                            xor eax, eax	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400c159	      0xe800000000	                          call 0x400c15e	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400c15e	          0x4c89f7	                            mov rdi, r14	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400c161	    0x41bfffffffff	                    mov r15d, 0xffffffff	      4252	sequencer.c	FUNCTION_103	IF_11	IF_14
0x400c167	      0xe800000000	                          call 0x400c16c	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400c16c	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1792	sequencer.c	FUNCTION_51
0x400c171	      0xe800000000	                          call 0x400c176	      1792	sequencer.c	FUNCTION_51
0x400c176	      0xe904feffff	                           jmp 0x400bf7f	      4252	sequencer.c	FUNCTION_103	IF_11	IF_14
0x400c17b	    0x4c8dac249000	                   lea r13, [rsp + 0x90]	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400c183	      0xe9bcfdffff	                           jmp 0x400bf44	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400c188	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_147
0x400c18d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_147
0x400c192	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_147
0x400c194	      0xe800000000	                          call 0x400c199	        54	gettext.h	FUNCTION_147
0x400c199	          0x4c89e6	                            mov rsi, r12	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400c19c	          0x4889c7	                            mov rdi, rax	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400c19f	            0x31c0	                            xor eax, eax	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400c1a1	      0xe800000000	                          call 0x400c1a6	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400c1a6	          0x4c89f7	                            mov rdi, r14	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400c1a9	    0x41bfffffffff	                    mov r15d, 0xffffffff	      4245	sequencer.c	FUNCTION_103	IF_11	IF_13
0x400c1af	      0xe800000000	                          call 0x400c1b4	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400c1b4	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1792	sequencer.c	FUNCTION_51
0x400c1b9	      0xe800000000	                          call 0x400c1be	      1792	sequencer.c	FUNCTION_51
0x400c1be	          0x8b0c24	                    mov ecx, dword [rsp]	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400c1c1	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1792	sequencer.c	FUNCTION_51
0x400c1ca	    0xc74424540000	               mov dword [rsp + 0x54], 0	      1793	sequencer.c	FUNCTION_51
0x400c1d2	    0xc74424500000	               mov dword [rsp + 0x50], 0	      1793	sequencer.c	FUNCTION_51
0x400c1da	            0x89cf	                            mov edi, ecx	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400c1dc	      0xe800000000	                          call 0x400c1e1	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400c1e1	      0xe999fdffff	                           jmp 0x400bf7f	      4245	sequencer.c	FUNCTION_103	IF_11	IF_13
0x400c1e6	      0xe800000000	                          call 0x400c1eb	      4264	sequencer.c	FUNCTION_103
subject2item_cmp	WHILE,0:IF,0:functions,0:SWITCH,0:ELSE,0:DO,0:FOR,0:CALL,0	10
0x4000070	          0x4885c9	                           test rcx, rcx	      4276	sequencer.c	FUNCTION_104
0x4000073	            0x7413	                            je 0x4000088	      4276	sequencer.c	FUNCTION_104
0x4000075	        0x488d7e14	                   lea rdi, [rsi + 0x14]	      4276	sequencer.c	FUNCTION_104
0x4000079	          0x4889ce	                            mov rsi, rcx	      4276	sequencer.c	FUNCTION_104
0x400007c	      0xe900000000	                           jmp 0x4000081	      4276	sequencer.c	FUNCTION_104
0x4000081	     0xf1f80000000	                         nop dword [rax]	      4276	sequencer.c	FUNCTION_104
0x4000088	        0x4883c214	                           add rdx, 0x14	      4276	sequencer.c	FUNCTION_104
0x400008c	        0x488d7e14	                   lea rdi, [rsi + 0x14]	      4276	sequencer.c	FUNCTION_104
0x4000090	          0x4889d6	                            mov rsi, rdx	      4276	sequencer.c	FUNCTION_104
0x4000093	      0xe900000000	                           jmp 0x4000098	      4276	sequencer.c	FUNCTION_104
