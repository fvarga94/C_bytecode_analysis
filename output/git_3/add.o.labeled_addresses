ignore_removal_cb	CALL,0:DO,0:ELSE,0:functions,0:IF,0:FOR,0:WHILE,0:SWITCH,0	7
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       286	add.c	FUNCTION_11
0x4000044	            0x85d2	                           test edx, edx	       286	add.c	FUNCTION_11
0x4000046	           0xf95c2	                                setne dl	       286	add.c	FUNCTION_11
0x4000049	           0xfb6d2	                           movzx edx, dl	       286	add.c	FUNCTION_11
0x400004c	            0x8910	                    mov dword [rax], edx	       286	add.c	FUNCTION_11
0x400004e	            0x31c0	                            xor eax, eax	       288	add.c	FUNCTION_11
0x4000050	              0xc3	                                     ret	       288	add.c	FUNCTION_11
add_files_to_cache	CALL,6:DO,0:ELSE,0:functions,0:IF,1:FOR,0:WHILE,0:SWITCH,0	42
0x4000230	              0x53	                                push rbx	       106	add.c	FUNCTION_4
0x4000231	          0x4889f3	                            mov rbx, rsi	       106	add.c	FUNCTION_4
0x4000234	          0x4889fe	                            mov rsi, rdi	       113	add.c	FUNCTION_4	CALL_2
0x4000237	    0x4881ecd00800	                          sub rsp, 0x8d0	       106	add.c	FUNCTION_4
0x400023e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       113	add.c	FUNCTION_4	CALL_2
0x4000243	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_19	CALL_6
0x400024b	          0x891424	                    mov dword [rsp], edx	       111	add.c	FUNCTION_4
0x400024e	    0x64488b042528	                mov rax, qword fs:[0x28]	       106	add.c	FUNCTION_4
0x4000257	    0x48898424c808	            mov qword [rsp + 0x8c8], rax	       106	add.c	FUNCTION_4
0x400025f	            0x31c0	                            xor eax, eax	       106	add.c	FUNCTION_4
0x4000261	      0xe800000000	                          call 0x4000266	       113	add.c	FUNCTION_4	CALL_2
0x4000266	      0x488d542410	                   lea rdx, [rsp + 0x10]	       114	add.c	FUNCTION_4	CALL_3
0x400026b	            0x31c9	                            xor ecx, ecx	       114	add.c	FUNCTION_4	CALL_3
0x400026d	            0x31f6	                            xor esi, esi	       114	add.c	FUNCTION_4	CALL_3
0x400026f	            0x31ff	                            xor edi, edi	       114	add.c	FUNCTION_4	CALL_3
0x4000271	      0xe800000000	                          call 0x4000276	       114	add.c	FUNCTION_4	CALL_3
0x4000276	          0x4885db	                           test rbx, rbx	       115	add.c	FUNCTION_4	IF_1
0x4000279	            0x740d	                            je 0x4000288	       115	add.c	FUNCTION_4	IF_1
0x400027b	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       116	add.c	FUNCTION_4	CALL_4
0x4000280	          0x4889de	                            mov rsi, rbx	       116	add.c	FUNCTION_4	CALL_4
0x4000283	      0xe800000000	                          call 0x4000288	       116	add.c	FUNCTION_4	CALL_4
0x4000288	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       122	add.c	FUNCTION_4	CALL_5
0x400028d	      0xbe02000000	                              mov esi, 2	       122	add.c	FUNCTION_4	CALL_5
0x4000292	    0x808c24430500	                or byte [rsp + 0x543], 4	       120	add.c	FUNCTION_4
0x400029a	    0xc78424680500	        mov dword [rsp + 0x568], 0x1000 	       117	add.c	FUNCTION_4
0x40002a5	    0x48c784245006	              mov qword [rsp + 0x650], 0	       118	add.c	FUNCTION_4
0x40002b1	    0x4889a4245806	            mov qword [rsp + 0x658], rsp	       119	add.c	FUNCTION_4
0x40002b9	    0xc78424dc0400	              mov dword [rsp + 0x4dc], 0	       121	add.c	FUNCTION_4
0x40002c4	      0xe800000000	                          call 0x40002c9	       122	add.c	FUNCTION_4	CALL_5
0x40002c9	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       123	add.c	FUNCTION_4	CALL_6
0x40002ce	      0xe800000000	                          call 0x40002d3	       123	add.c	FUNCTION_4	CALL_6
0x40002d3	        0x8b542404	                mov edx, dword [rsp + 4]	       124	add.c	FUNCTION_4
0x40002d7	            0x31c0	                            xor eax, eax	       124	add.c	FUNCTION_4
0x40002d9	            0x85d2	                           test edx, edx	       124	add.c	FUNCTION_4
0x40002db	           0xf95c0	                                setne al	       124	add.c	FUNCTION_4
0x40002de	    0x488b8c24c808	           mov rcx, qword [rsp + 0x8c8] 	       125	add.c	FUNCTION_4
0x40002e6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       125	add.c	FUNCTION_4
0x40002ef	            0x7509	                           jne 0x40002fa	       125	add.c	FUNCTION_4
0x40002f1	    0x4881c4d00800	                          add rsp, 0x8d0	       125	add.c	FUNCTION_4
0x40002f8	              0x5b	                                 pop rbx	       125	add.c	FUNCTION_4
0x40002f9	              0xc3	                                     ret	       125	add.c	FUNCTION_4
0x40002fa	      0xe800000000	                          call 0x40002ff	       125	add.c	FUNCTION_4
interactive_add	CALL,2:DO,0:ELSE,0:functions,0:IF,0:FOR,0:WHILE,0:SWITCH,0	26
0x40003e0	              0x53	                                push rbx	       204	add.c	FUNCTION_9
0x40003e1	          0x4989f0	                             mov r8, rsi	       204	add.c	FUNCTION_9
0x40003e4	            0x89cb	                            mov ebx, ecx	       204	add.c	FUNCTION_9
0x40003e6	            0x31f6	                            xor esi, esi	       207	add.c	FUNCTION_9	CALL_1
0x40003e8	          0x4889d1	                            mov rcx, rdx	       207	add.c	FUNCTION_9	CALL_1
0x40003eb	      0xba1a000000	                           mov edx, 0x1a	       207	add.c	FUNCTION_9	CALL_1
0x40003f0	        0x4883ec20	                           sub rsp, 0x20	       204	add.c	FUNCTION_9
0x40003f4	          0x4889e7	                            mov rdi, rsp	       207	add.c	FUNCTION_9	CALL_1
0x40003f7	    0x64488b042528	                mov rax, qword fs:[0x28]	       204	add.c	FUNCTION_9
0x4000400	      0x4889442418	             mov qword [rsp + 0x18], rax	       204	add.c	FUNCTION_9
0x4000405	            0x31c0	                            xor eax, eax	       204	add.c	FUNCTION_9
0x4000407	      0xe800000000	                          call 0x400040c	       207	add.c	FUNCTION_9	CALL_1
0x400040c	            0x85db	                           test ebx, ebx	       213	add.c	FUNCTION_9	CALL_2
0x400040e	      0xb800000000	                              mov eax, 0	       213	add.c	FUNCTION_9	CALL_2
0x4000413	      0xbe00000000	                              mov esi, 0	       213	add.c	FUNCTION_9	CALL_2
0x4000418	        0x480f45f0	                         cmovne rsi, rax	       213	add.c	FUNCTION_9	CALL_2
0x400041c	          0x4889e2	                            mov rdx, rsp	       213	add.c	FUNCTION_9	CALL_2
0x400041f	            0x31ff	                            xor edi, edi	       213	add.c	FUNCTION_9	CALL_2
0x4000421	      0xe800000000	                          call 0x4000426	       213	add.c	FUNCTION_9	CALL_2
0x4000426	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       216	add.c	FUNCTION_9
0x400042b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       216	add.c	FUNCTION_9
0x4000434	            0x7506	                           jne 0x400043c	       216	add.c	FUNCTION_9
0x4000436	        0x4883c420	                           add rsp, 0x20	       216	add.c	FUNCTION_9
0x400043a	              0x5b	                                 pop rbx	       216	add.c	FUNCTION_9
0x400043b	              0xc3	                                     ret	       216	add.c	FUNCTION_9
0x400043c	      0xe800000000	                          call 0x4000441	       216	add.c	FUNCTION_9
run_add_interactive	CALL,7:DO,0:ELSE,0:functions,0:IF,2:FOR,1:WHILE,0:SWITCH,0	59
0x4000300	            0x4154	                                push r12	       184	add.c	FUNCTION_8
0x4000302	              0x55	                                push rbp	       184	add.c	FUNCTION_8
0x4000303	          0x4889f5	                            mov rbp, rsi	       184	add.c	FUNCTION_8
0x4000306	              0x53	                                push rbx	       184	add.c	FUNCTION_8
0x4000307	      0xbe00000000	                              mov esi, 0	       188	add.c	FUNCTION_8	CALL_1
0x400030c	          0x4889fb	                            mov rbx, rdi	       184	add.c	FUNCTION_8
0x400030f	          0x4989d4	                            mov r12, rdx	       184	add.c	FUNCTION_8
0x4000312	        0x4883ec20	                           sub rsp, 0x20	       184	add.c	FUNCTION_8
0x4000316	          0x4889e7	                            mov rdi, rsp	       188	add.c	FUNCTION_8	CALL_1
0x4000319	    0x48c704240000	                      mov qword [rsp], 0	       186	add.c	FUNCTION_8
0x4000321	    0xc74424080000	                  mov dword [rsp + 8], 0	       186	add.c	FUNCTION_8
0x4000329	    0x64488b042528	                mov rax, qword fs:[0x28]	       184	add.c	FUNCTION_8
0x4000332	      0x4889442418	             mov qword [rsp + 0x18], rax	       184	add.c	FUNCTION_8
0x4000337	            0x31c0	                            xor eax, eax	       184	add.c	FUNCTION_8
0x4000339	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       186	add.c	FUNCTION_8
0x4000341	      0xe800000000	                          call 0x4000346	       188	add.c	FUNCTION_8	CALL_1
0x4000346	          0x4885ed	                           test rbp, rbp	       189	add.c	FUNCTION_8	IF_1
0x4000349	            0x740b	                            je 0x4000356	       189	add.c	FUNCTION_8	IF_1
0x400034b	          0x4889ee	                            mov rsi, rbp	       190	add.c	FUNCTION_8	CALL_2
0x400034e	          0x4889e7	                            mov rdi, rsp	       190	add.c	FUNCTION_8	CALL_2
0x4000351	      0xe800000000	                          call 0x4000356	       190	add.c	FUNCTION_8	CALL_2
0x4000356	          0x4885db	                           test rbx, rbx	       191	add.c	FUNCTION_8	IF_2
0x4000359	            0x740b	                            je 0x4000366	       191	add.c	FUNCTION_8	IF_2
0x400035b	          0x4889de	                            mov rsi, rbx	       192	add.c	FUNCTION_8	CALL_3
0x400035e	          0x4889e7	                            mov rdi, rsp	       192	add.c	FUNCTION_8	CALL_3
0x4000361	      0xe800000000	                          call 0x4000366	       192	add.c	FUNCTION_8	CALL_3
0x4000366	      0xbe00000000	                              mov esi, 0	       193	add.c	FUNCTION_8	CALL_4
0x400036b	          0x4889e7	                            mov rdi, rsp	       193	add.c	FUNCTION_8	CALL_4
0x400036e	            0x31ed	                            xor ebp, ebp	       194	add.c	FUNCTION_8	FOR_1
0x4000370	      0xe800000000	                          call 0x4000375	       193	add.c	FUNCTION_8	CALL_4
0x4000375	        0x418b0424	                    mov eax, dword [r12]	       194	add.c	FUNCTION_8	FOR_1
0x4000379	            0x31db	                            xor ebx, ebx	       194	add.c	FUNCTION_8	FOR_1
0x400037b	            0x85c0	                           test eax, eax	       194	add.c	FUNCTION_8	FOR_1
0x400037d	            0x7e20	                           jle 0x400039f	       194	add.c	FUNCTION_8	FOR_1
0x400037f	              0x90	                                     nop	       194	add.c	FUNCTION_8	FOR_1
0x4000380	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       196	add.c	FUNCTION_8	CALL_5
0x4000385	          0x4889e7	                            mov rdi, rsp	       196	add.c	FUNCTION_8	CALL_5
0x4000388	          0x83c301	                              add ebx, 1	       194	add.c	FUNCTION_8	FOR_1
0x400038b	      0x488b742808	         mov rsi, qword [rax + rbp + 8] 	       196	add.c	FUNCTION_8	CALL_5
0x4000390	        0x4883c538	                           add rbp, 0x38	       196	add.c	FUNCTION_8	CALL_5
0x4000394	      0xe800000000	                          call 0x4000399	       196	add.c	FUNCTION_8	CALL_5
0x4000399	        0x41391c24	                    cmp dword [r12], ebx	       194	add.c	FUNCTION_8	FOR_1
0x400039d	            0x7fe1	                            jg 0x4000380	       194	add.c	FUNCTION_8	FOR_1
0x400039f	        0x488b3c24	                    mov rdi, qword [rsp]	       198	add.c	FUNCTION_8	CALL_6
0x40003a3	      0xbe02000000	                              mov esi, 2	       198	add.c	FUNCTION_8	CALL_6
0x40003a8	      0xe800000000	                          call 0x40003ad	       198	add.c	FUNCTION_8	CALL_6
0x40003ad	          0x4889e7	                            mov rdi, rsp	       199	add.c	FUNCTION_8	CALL_7
0x40003b0	            0x89c3	                            mov ebx, eax	       198	add.c	FUNCTION_8	CALL_6
0x40003b2	      0xe800000000	                          call 0x40003b7	       199	add.c	FUNCTION_8	CALL_7
0x40003b7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       201	add.c	FUNCTION_8
0x40003bc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       201	add.c	FUNCTION_8
0x40003c5	            0x89d8	                            mov eax, ebx	       201	add.c	FUNCTION_8
0x40003c7	            0x7509	                           jne 0x40003d2	       201	add.c	FUNCTION_8
0x40003c9	        0x4883c420	                           add rsp, 0x20	       201	add.c	FUNCTION_8
0x40003cd	              0x5b	                                 pop rbx	       201	add.c	FUNCTION_8
0x40003ce	              0x5d	                                 pop rbp	       201	add.c	FUNCTION_8
0x40003cf	            0x415c	                                 pop r12	       201	add.c	FUNCTION_8
0x40003d1	              0xc3	                                     ret	       201	add.c	FUNCTION_8
0x40003d2	      0xe800000000	                          call 0x40003d7	       201	add.c	FUNCTION_8
update_callback	CALL,8:DO,0:ELSE,0:functions,0:IF,5:FOR,1:WHILE,0:SWITCH,1	101
0x40000d0	          0x8b470c	              mov eax, dword [rdi + 0xc]	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40000d3	            0x85c0	                           test eax, eax	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40000d5	     0xf8ea5000000	                           jle 0x4000180	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40000db	            0x4157	                                push r15	        74	add.c	ELSE_1	FUNCTION_3
0x40000dd	            0x4156	                                push r14	        74	add.c	ELSE_1	FUNCTION_3
0x40000df	          0x4989d6	                            mov r14, rdx	        74	add.c	ELSE_1	FUNCTION_3
0x40000e2	            0x4155	                                push r13	        74	add.c	ELSE_1	FUNCTION_3
0x40000e4	            0x4154	                                push r12	        74	add.c	ELSE_1	FUNCTION_3
0x40000e6	          0x4531ed	                          xor r13d, r13d	        74	add.c	ELSE_1	FUNCTION_3
0x40000e9	              0x55	                                push rbp	        74	add.c	ELSE_1	FUNCTION_3
0x40000ea	              0x53	                                push rbx	        74	add.c	ELSE_1	FUNCTION_3
0x40000eb	          0x4989fc	                            mov r12, rdi	        74	add.c	ELSE_1	FUNCTION_3
0x40000ee	            0x31ed	                            xor ebp, ebp	        74	add.c	ELSE_1	FUNCTION_3
0x40000f0	        0x4883ec08	                              sub rsp, 8	        74	add.c	ELSE_1	FUNCTION_3
0x40000f4	        0x498b0424	                    mov rax, qword [r12]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40000f8	        0x488b0428	              mov rax, qword [rax + rbp]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40000fc	         0xfb65812	           movzx ebx, byte [rax + 0x12] 	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000100	          0x488b10	                    mov rdx, qword [rax]	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000103	        0x4c8b7a18	            mov r15, qword [rdx + 0x18] 	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000107	          0x80fb55	                            cmp bl, 0x55	        54	add.c	FUNCTION_2	IF_1
0x400010a	            0x747c	                            je 0x4000188	        54	add.c	FUNCTION_2	IF_1
0x400010c	          0x80fb4d	                            cmp bl, 0x4d	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x400010f	            0x742f	                            je 0x4000140	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000111	          0x80fb54	                            cmp bl, 0x54	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000114	            0x742a	                            je 0x4000140	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000116	          0x80fb44	                            cmp bl, 0x44	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000119	     0xf84c1000000	                            je 0x40001e0	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x400011f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_33
0x4000124	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_33
0x4000126	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_33
0x400012b	      0xe800000000	                          call 0x4000130	        54	gettext.h	FUNCTION_33
0x4000130	           0xfbef3	                           movsx esi, bl	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000133	          0x4889c7	                            mov rdi, rax	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000136	            0x31c0	                            xor eax, eax	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000138	      0xe800000000	                          call 0x400013d	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x400013d	           0xf1f00	                         nop dword [rax]	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000140	          0x418b16	                    mov edx, dword [r14]	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000143	          0x4c89fe	                            mov rsi, r15	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x4000146	      0xbf00000000	                              mov edi, 0	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x400014b	      0xe800000000	                          call 0x4000150	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x4000150	            0x85c0	                           test eax, eax	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x4000152	            0x740f	                            je 0x4000163	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x4000154	        0x41f60604	                      test byte [r14], 4	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x4000158	     0xf84b4000000	                            je 0x4000212	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x400015e	      0x4183460401	                  add dword [r14 + 4], 1	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000163	        0x4183c501	                             add r13d, 1	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000167	        0x4883c508	                              add rbp, 8	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x400016b	      0x45396c240c	            cmp dword [r12 + 0xc], r13d 	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000170	            0x7f82	                            jg 0x40000f4	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000172	        0x4883c408	                              add rsp, 8	       102	add.c	ELSE_1	FUNCTION_3
0x4000176	              0x5b	                                 pop rbx	       102	add.c	ELSE_1	FUNCTION_3
0x4000177	              0x5d	                                 pop rbp	       102	add.c	ELSE_1	FUNCTION_3
0x4000178	            0x415c	                                 pop r12	       102	add.c	ELSE_1	FUNCTION_3
0x400017a	            0x415d	                                 pop r13	       102	add.c	ELSE_1	FUNCTION_3
0x400017c	            0x415e	                                 pop r14	       102	add.c	ELSE_1	FUNCTION_3
0x400017e	            0x415f	                                 pop r15	       102	add.c	ELSE_1	FUNCTION_3
0x4000180	            0xf3c3	                                     ret	       102	add.c	ELSE_1	FUNCTION_3
0x4000182	    0x660f1f440000	                    nop word [rax + rax]	       102	add.c	ELSE_1	FUNCTION_3
0x4000188	          0x418b16	                    mov edx, dword [r14]	        56	add.c	FUNCTION_2	IF_2
0x400018b	          0xf6c208	                              test dl, 8	        56	add.c	FUNCTION_2	IF_2
0x400018e	            0x75b3	                           jne 0x4000143	        56	add.c	FUNCTION_2	IF_2
0x4000190	        0x488b4008	                mov rax, qword [rax + 8]	        56	add.c	FUNCTION_2	IF_2
0x4000194	      0x6683784000	                cmp word [rax + 0x40], 0	        56	add.c	FUNCTION_2	IF_2
0x4000199	            0x75a8	                           jne 0x4000143	        56	add.c	FUNCTION_2	IF_2
0x400019b	          0xf6c202	                              test dl, 2	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x400019e	            0x7460	                            je 0x4000200	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x40001a0	          0x83e203	                              and edx, 3	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40001a3	            0x74be	                            je 0x4000163	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40001a5	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_33
0x40001a7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_33
0x40001ac	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_33
0x40001b1	      0xe800000000	                          call 0x40001b6	        54	gettext.h	FUNCTION_33
0x40001b6	          0x4c89fa	                            mov rdx, r15	       104	stdio2.h	CALL_82
0x40001b9	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_82
0x40001bc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_82
0x40001c1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_82
0x40001c3	        0x4183c501	                             add r13d, 1	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001c7	        0x4883c508	                              add rbp, 8	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001cb	      0xe800000000	                          call 0x40001d0	       104	stdio2.h	CALL_82
0x40001d0	      0x45396c240c	            cmp dword [r12 + 0xc], r13d 	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001d5	     0xf8f19ffffff	                            jg 0x40000f4	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001db	            0xeb95	                           jmp 0x4000172	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001dd	           0xf1f00	                         nop dword [rax]	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001e0	          0x418b16	                    mov edx, dword [r14]	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40001e3	          0xf6c208	                              test dl, 8	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40001e6	            0x74b3	                            je 0x400019b	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40001e8	        0x4183c501	                             add r13d, 1	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001ec	        0x4883c508	                              add rbp, 8	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001f0	      0x45396c240c	            cmp dword [r12 + 0xc], r13d 	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001f5	     0xf8ff9feffff	                            jg 0x40000f4	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001fb	      0xe972ffffff	                           jmp 0x4000172	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000200	          0x4c89fe	                            mov rsi, r15	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x4000203	      0xbf00000000	                              mov edi, 0	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x4000208	      0xe800000000	                          call 0x400020d	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x400020d	          0x418b16	                    mov edx, dword [r14]	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x4000210	            0xeb8e	                           jmp 0x40001a0	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x4000212	      0xbf00000000	                              mov edi, 0	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x4000217	      0xe844feffff	                       call sym._.part.1	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x400021c	          0x4889c7	                            mov rdi, rax	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x400021f	            0x31c0	                            xor eax, eax	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x4000221	      0xe800000000	                          call 0x4000226	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
