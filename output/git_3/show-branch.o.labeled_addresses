show_one_commit	IF,5:DO,0:functions,0:SWITCH,0:FOR,0:WHILE,0:CALL,5:ELSE,2	88
0x4000300	            0x4155	                                push r13	       271	show-branch.c	FUNCTION_10
0x4000302	            0x4154	                                push r12	       271	show-branch.c	FUNCTION_10
0x4000304	          0x4189f5	                           mov r13d, esi	       271	show-branch.c	FUNCTION_10
0x4000307	              0x55	                                push rbp	       271	show-branch.c	FUNCTION_10
0x4000308	              0x53	                                push rbx	       271	show-branch.c	FUNCTION_10
0x4000309	          0x4889fd	                            mov rbp, rdi	       271	show-branch.c	FUNCTION_10
0x400030c	      0xb900000000	                              mov ecx, 0	       271	show-branch.c	FUNCTION_10
0x4000311	        0x4883ec28	                           sub rsp, 0x28	       271	show-branch.c	FUNCTION_10
0x4000315	        0x4c8b6718	            mov r12, qword [rdi + 0x18] 	       274	show-branch.c	FUNCTION_10
0x4000319	    0x64488b042528	                mov rax, qword fs:[0x28]	       271	show-branch.c	FUNCTION_10
0x4000322	      0x4889442418	             mov qword [rsp + 0x18], rax	       271	show-branch.c	FUNCTION_10
0x4000327	            0x31c0	                            xor eax, eax	       271	show-branch.c	FUNCTION_10
0x4000329	          0xf60701	                      test byte [rdi], 1	       276	show-branch.c	FUNCTION_10	IF_1
0x400032c	    0x48c704240000	                      mov qword [rsp], 0	       272	show-branch.c	FUNCTION_10
0x4000334	    0x48c744240800	                  mov qword [rsp + 8], 0	       272	show-branch.c	FUNCTION_10
0x400033d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       272	show-branch.c	FUNCTION_10
0x4000346	     0xf85e4000000	                           jne 0x4000430	       276	show-branch.c	FUNCTION_10	IF_1
0x400034c	          0x4889cb	                            mov rbx, rcx	       273	show-branch.c	FUNCTION_10
0x400034f	      0xb800000000	                              mov eax, 0	       273	show-branch.c	FUNCTION_10
0x4000354	            0xeb1b	                           jmp 0x4000371	       273	show-branch.c	FUNCTION_10
0x4000356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       273	show-branch.c	FUNCTION_10
0x4000360	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000364	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000368	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_35	DO_1
0x400036b	     0xf85b7000000	                           jne 0x4000428	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000371	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x4000374	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x4000376	            0x75e8	                           jne 0x4000360	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x4000378	          0x4585ed	                         test r13d, r13d	       282	show-branch.c	FUNCTION_10	IF_2
0x400037b	            0x7553	                           jne 0x40003d0	       282	show-branch.c	FUNCTION_10	IF_2
0x400037d	          0x4d85e4	                           test r12, r12	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x4000380	            0x747e	                            je 0x4000400	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x4000382	        0x498b1424	                    mov rdx, qword [r12]	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x4000386	          0x4885d2	                           test rdx, rdx	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x4000389	            0x7475	                            je 0x4000400	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x400038b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_103
0x400038d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_103
0x4000392	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_103
0x4000397	      0xe800000000	                          call 0x400039c	       104	stdio2.h	CALL_103
0x400039c	      0x418b542408	                mov edx, dword [r12 + 8]	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x40003a1	            0x85d2	                           test edx, edx	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x40003a3	            0x741a	                            je 0x40003bf	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x40003a5	          0x83fa01	                              cmp edx, 1	       286	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4	IF_5
0x40003a8	     0xf849c000000	                            je 0x400044a	       286	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4	IF_5
0x40003ae	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_103
0x40003b3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_103
0x40003b8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_103
0x40003ba	      0xe800000000	                          call 0x40003bf	       104	stdio2.h	CALL_103
0x40003bf	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_103
0x40003c4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_103
0x40003c9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_103
0x40003cb	      0xe800000000	                          call 0x40003d0	       104	stdio2.h	CALL_103
0x40003d0	          0x4889df	                            mov rdi, rbx	       298	show-branch.c	FUNCTION_10	CALL_4
0x40003d3	      0xe800000000	                          call 0x40003d8	       298	show-branch.c	FUNCTION_10	CALL_4
0x40003d8	          0x4889e7	                            mov rdi, rsp	       299	show-branch.c	FUNCTION_10	CALL_5
0x40003db	      0xe800000000	                          call 0x40003e0	       299	show-branch.c	FUNCTION_10	CALL_5
0x40003e0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       300	show-branch.c	FUNCTION_10
0x40003e5	    0x644833042528	                xor rax, qword fs:[0x28]	       300	show-branch.c	FUNCTION_10
0x40003ee	            0x7569	                           jne 0x4000459	       300	show-branch.c	FUNCTION_10
0x40003f0	        0x4883c428	                           add rsp, 0x28	       300	show-branch.c	FUNCTION_10
0x40003f4	              0x5b	                                 pop rbx	       300	show-branch.c	FUNCTION_10
0x40003f5	              0x5d	                                 pop rbp	       300	show-branch.c	FUNCTION_10
0x40003f6	            0x415c	                                 pop r12	       300	show-branch.c	FUNCTION_10
0x40003f8	            0x415d	                                 pop r13	       300	show-branch.c	FUNCTION_10
0x40003fa	              0xc3	                                     ret	       300	show-branch.c	FUNCTION_10
0x40003fb	       0xf1f440000	                   nop dword [rax + rax]	       300	show-branch.c	FUNCTION_10
0x4000400	    0x8b3500000000	            mov esi, dword [0x04000406] 	       294	show-branch.c	FUNCTION_10	IF_2	ELSE_2
0x4000406	        0x488d7d04	                      lea rdi, [rbp + 4]	       295	show-branch.c	FUNCTION_10	IF_2	ELSE_2	CALL_3
0x400040a	      0xe800000000	                          call 0x400040f	       294	show-branch.c	FUNCTION_10	IF_2	ELSE_2
0x400040f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_103
0x4000414	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_103
0x4000417	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_103
0x400041c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_103
0x400041e	      0xe800000000	                          call 0x4000423	       104	stdio2.h	CALL_103
0x4000423	            0xebab	                           jmp 0x40003d0	       104	stdio2.h	CALL_103
0x4000425	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_103
0x4000428	          0x4889cb	                            mov rbx, rcx	       488	git-compat-util.h	FUNCTION_35	DO_1
0x400042b	      0xe948ffffff	                           jmp 0x4000378	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000430	          0x4889fe	                            mov rsi, rdi	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x4000433	          0x4889e2	                            mov rdx, rsp	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x4000436	      0xbf05000000	                              mov edi, 5	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x400043b	      0xe800000000	                          call 0x4000440	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x4000440	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       278	show-branch.c	FUNCTION_10	IF_1
0x4000445	      0xe902ffffff	                           jmp 0x400034c	       278	show-branch.c	FUNCTION_10	IF_1
0x400044a	      0xbf5e000000	                           mov edi, 0x5e	       104	stdio2.h	CALL_103
0x400044f	      0xe800000000	                          call 0x4000454	       104	stdio2.h	CALL_103
0x4000454	      0xe966ffffff	                           jmp 0x40003bf	       104	stdio2.h	CALL_103
0x4000459	      0xe800000000	                          call 0x400045e	       300	show-branch.c	FUNCTION_10
append_one_rev	IF,3:DO,0:functions,0:SWITCH,0:FOR,0:WHILE,0:CALL,10:ELSE,0	77
0x40008c0	              0x55	                                push rbp	       515	show-branch.c	FUNCTION_24
0x40008c1	              0x53	                                push rbx	       515	show-branch.c	FUNCTION_24
0x40008c2	          0x4889fb	                            mov rbx, rdi	       515	show-branch.c	FUNCTION_24
0x40008c5	        0x4883ec28	                           sub rsp, 0x28	       515	show-branch.c	FUNCTION_24
0x40008c9	          0x4889e6	                            mov rsi, rsp	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x40008cc	    0x64488b042528	                mov rax, qword fs:[0x28]	       515	show-branch.c	FUNCTION_24
0x40008d5	      0x4889442418	             mov qword [rsp + 0x18], rax	       515	show-branch.c	FUNCTION_24
0x40008da	            0x31c0	                            xor eax, eax	       515	show-branch.c	FUNCTION_24
0x40008dc	      0xe800000000	                          call 0x40008e1	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x40008e1	            0x85c0	                           test eax, eax	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x40008e3	     0xf84cf000000	                            je 0x40009b8	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x40008e9	      0xbe2a000000	                           mov esi, 0x2a	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40008ee	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40008f1	      0xe800000000	                          call 0x40008f6	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40008f6	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40008f9	            0x747d	                            je 0x4000978	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40008fb	          0x4889df	                            mov rdi, rbx	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40008fe	    0x48632d000000	         movsxd rbp, dword [0x04000905] 	       523	show-branch.c	FUNCTION_24	IF_2
0x4000905	    0x48891d000000	            mov qword [0x0400090c], rbx 	       525	show-branch.c	FUNCTION_24	IF_2
0x400090c	      0xe800000000	                          call 0x4000911	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x4000911	            0x31f6	                            xor esi, esi	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x4000913	      0xbf00000000	                              mov edi, 0	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x4000918	    0x890500000000	            mov dword [0x0400091e], eax 	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x400091e	      0xe800000000	                          call 0x4000923	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x4000923	    0x8b3500000000	            mov esi, dword [0x04000929] 	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x4000929	            0x39f5	                            cmp ebp, esi	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x400092b	            0x7509	                           jne 0x4000936	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x400092d	          0x83fe18	                           cmp esi, 0x18	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x4000930	     0xf8e9a000000	                           jle 0x40009d0	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x4000936	            0x29ee	                            sub esi, ebp	       357	show-branch.c	FUNCTION_14
0x4000938	          0x4863f6	                         movsxd rsi, esi	       357	show-branch.c	FUNCTION_14
0x400093b	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_53	IF_1
0x400093f	            0x7617	                           jbe 0x4000958	      1048	git-compat-util.h	FUNCTION_53	IF_1
0x4000941	    0x488d3ced0000	                        lea rdi, [rbp*8]	      1049	git-compat-util.h	FUNCTION_53	IF_1
0x4000949	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_53	IF_1
0x400094e	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_53	IF_1
0x4000953	      0xe800000000	                          call 0x4000958	      1049	git-compat-util.h	FUNCTION_53	IF_1
0x4000958	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       535	show-branch.c	FUNCTION_24
0x400095d	    0x644833042528	                xor rax, qword fs:[0x28]	       535	show-branch.c	FUNCTION_24
0x4000966	     0xf858d000000	                           jne 0x40009f9	       535	show-branch.c	FUNCTION_24
0x400096c	        0x4883c428	                           add rsp, 0x28	       535	show-branch.c	FUNCTION_24
0x4000970	              0x5b	                                 pop rbx	       535	show-branch.c	FUNCTION_24
0x4000971	              0x5d	                                 pop rbp	       535	show-branch.c	FUNCTION_24
0x4000972	              0xc3	                                     ret	       535	show-branch.c	FUNCTION_24
0x4000973	       0xf1f440000	                   nop dword [rax + rax]	       535	show-branch.c	FUNCTION_24
0x4000978	      0xbe3f000000	                           mov esi, 0x3f	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400097d	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000980	      0xe800000000	                          call 0x4000985	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000985	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000988	     0xf856dffffff	                           jne 0x40008fb	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400098e	      0xbe5b000000	                           mov esi, 0x5b	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000993	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000996	      0xe800000000	                          call 0x400099b	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400099b	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400099e	     0xf8557ffffff	                           jne 0x40008fb	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40009a4	          0x4889de	                            mov rsi, rbx	       534	show-branch.c	FUNCTION_24	CALL_10
0x40009a7	      0xbf00000000	                              mov edi, 0	       534	show-branch.c	FUNCTION_24	CALL_10
0x40009ac	            0x31c0	                            xor eax, eax	       534	show-branch.c	FUNCTION_24	CALL_10
0x40009ae	      0xe800000000	                          call 0x40009b3	       534	show-branch.c	FUNCTION_24	CALL_10
0x40009b3	       0xf1f440000	                   nop dword [rax + rax]	       534	show-branch.c	FUNCTION_24	CALL_10
0x40009b8	            0x31d2	                            xor edx, edx	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x40009ba	          0x4889e6	                            mov rsi, rsp	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x40009bd	          0x4889df	                            mov rdi, rbx	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x40009c0	      0xe85bfbffff	                     call sym.append_ref	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x40009c5	            0xeb91	                           jmp 0x4000958	       519	show-branch.c	FUNCTION_24	IF_1
0x40009c7	    0x660f1f840000	                    nop word [rax + rax]	       519	show-branch.c	FUNCTION_24	IF_1
0x40009d0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_75
0x40009d5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_75
0x40009da	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_75
0x40009dc	      0xe800000000	                          call 0x40009e1	        54	gettext.h	FUNCTION_75
0x40009e1	          0x4889de	                            mov rsi, rbx	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40009e4	          0x4889c7	                            mov rdi, rax	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40009e7	            0x31c0	                            xor eax, eax	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40009e9	      0xe800000000	                          call 0x40009ee	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40009ee	    0x8b3500000000	            mov esi, dword [0x040009f4] 	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40009f4	      0xe93dffffff	                           jmp 0x4000936	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40009f9	      0xe800000000	                          call 0x40009fe	       535	show-branch.c	FUNCTION_24
rev_is_head	IF,2:DO,0:functions,0:SWITCH,0:FOR,0:WHILE,0:CALL,5:ELSE,0	72
0x4000210	          0x4885ff	                           test rdi, rdi	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000213	     0xf84d7000000	                            je 0x40002f0	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000219	              0x55	                                push rbp	       468	show-branch.c	FUNCTION_21
0x400021a	              0x53	                                push rbx	       468	show-branch.c	FUNCTION_21
0x400021b	          0x4889d0	                            mov rax, rdx	       468	show-branch.c	FUNCTION_21
0x400021e	          0x4889f5	                            mov rbp, rsi	       468	show-branch.c	FUNCTION_21
0x4000221	          0x4889fb	                            mov rbx, rdi	       468	show-branch.c	FUNCTION_21
0x4000224	        0x4883ec08	                              sub rsp, 8	       468	show-branch.c	FUNCTION_21
0x4000228	          0x4885d2	                           test rdx, rdx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x400022b	            0x741d	                            je 0x400024a	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x400022d	          0x4885c9	                           test rcx, rcx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000230	            0x7418	                            je 0x400024a	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000232	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_96	CALL_1
0x4000237	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_96	CALL_1
0x400023a	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_96	CALL_1
0x400023d	      0xe800000000	                          call 0x4000242	       975	cache.h	FUNCTION_96	CALL_1
0x4000242	            0x89c2	                            mov edx, eax	       975	cache.h	FUNCTION_96	CALL_1
0x4000244	            0x31c0	                            xor eax, eax	       470	show-branch.c	FUNCTION_21	IF_1
0x4000246	            0x85d2	                           test edx, edx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000248	            0x7557	                           jne 0x40002a1	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x400024a	          0x4889df	                            mov rdi, rbx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x400024d	      0xb800000000	                              mov eax, 0	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000252	            0xeb11	                           jmp 0x4000265	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000254	         0xf1f4000	                         nop dword [rax]	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000258	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_35	DO_1
0x400025c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000260	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000263	            0x757b	                           jne 0x40002e0	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000265	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x4000268	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x400026a	            0x75ec	                           jne 0x4000258	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x400026c	          0x4889ee	                            mov rsi, rbp	       488	git-compat-util.h	FUNCTION_35	DO_1
0x400026f	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000274	            0xeb17	                           jmp 0x400028d	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000276	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000280	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000284	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_35	DO_1
0x4000288	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_35	DO_1
0x400028b	            0x7523	                           jne 0x40002b0	       488	git-compat-util.h	FUNCTION_35	DO_1
0x400028d	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x4000290	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x4000292	            0x75ec	                           jne 0x4000280	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x4000294	      0xe800000000	                          call 0x4000299	       474	show-branch.c	FUNCTION_21	CALL_5
0x4000299	            0x85c0	                           test eax, eax	       474	show-branch.c	FUNCTION_21	CALL_5
0x400029b	           0xf94c0	                                 sete al	       474	show-branch.c	FUNCTION_21	CALL_5
0x400029e	           0xfb6c0	                           movzx eax, al	       474	show-branch.c	FUNCTION_21	CALL_5
0x40002a1	        0x4883c408	                              add rsp, 8	       475	show-branch.c	FUNCTION_21
0x40002a5	              0x5b	                                 pop rbx	       475	show-branch.c	FUNCTION_21
0x40002a6	              0x5d	                                 pop rbp	       475	show-branch.c	FUNCTION_21
0x40002a7	              0xc3	                                     ret	       475	show-branch.c	FUNCTION_21
0x40002a8	     0xf1f84000000	                   nop dword [rax + rax]	       475	show-branch.c	FUNCTION_21
0x40002b0	          0x4889ee	                            mov rsi, rbp	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002b3	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002b8	            0xeb13	                           jmp 0x40002cd	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002ba	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002c0	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002c4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002c8	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002cb	            0x751b	                           jne 0x40002e8	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002cd	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x40002d0	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x40002d2	            0x75ec	                           jne 0x40002c0	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x40002d4	            0xebbe	                           jmp 0x4000294	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x40002d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       484	git-compat-util.h	FUNCTION_35	DO_1	IF_1
0x40002e0	          0x4889df	                            mov rdi, rbx	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002e3	            0xeb87	                           jmp 0x400026c	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002e5	           0xf1f00	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002e8	          0x4889ee	                            mov rsi, rbp	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002eb	            0xeba7	                           jmp 0x4000294	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002ed	           0xf1f00	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_35	DO_1
0x40002f0	            0x31c0	                            xor eax, eax	       470	show-branch.c	FUNCTION_21	IF_1
0x40002f2	              0xc3	                                     ret	       470	show-branch.c	FUNCTION_21	IF_1
name_first_parent_chain	IF,3:DO,0:functions,0:SWITCH,0:FOR,0:WHILE,1:CALL,1:ELSE,1	45
0x4000840	            0x4155	                                push r13	        93	show-branch.c	FUNCTION_6
0x4000842	            0x4154	                                push r12	        93	show-branch.c	FUNCTION_6
0x4000844	              0x55	                                push rbp	        93	show-branch.c	FUNCTION_6
0x4000845	              0x53	                                push rbx	        93	show-branch.c	FUNCTION_6
0x4000846	        0x4883ec08	                              sub rsp, 8	        93	show-branch.c	FUNCTION_6
0x400084a	          0x4885ff	                           test rdi, rdi	        95	show-branch.c	FUNCTION_6	WHILE_1
0x400084d	            0x746c	                            je 0x40008bb	        95	show-branch.c	FUNCTION_6	WHILE_1
0x400084f	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x4000853	          0x4885c0	                           test rax, rax	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x4000856	            0x7463	                            je 0x40008bb	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x4000858	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x400085c	          0x4885d2	                           test rdx, rdx	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x400085f	            0x745a	                            je 0x40008bb	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x4000861	          0x488b1a	                    mov rbx, qword [rdx]	       101	show-branch.c	FUNCTION_6	WHILE_1
0x4000864	          0x4531e4	                          xor r12d, r12d	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x4000867	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x400086c	            0x7415	                            je 0x4000883	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x400086e	            0xeb3d	                           jmp 0x40008ad	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x4000870	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x4000874	          0x4885d2	                           test rdx, rdx	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x4000877	            0x7434	                            je 0x40008ad	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x4000879	          0x488b1a	                    mov rbx, qword [rdx]	       101	show-branch.c	FUNCTION_6	WHILE_1
0x400087c	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x4000881	            0x752a	                           jne 0x40008ad	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x4000883	          0x8b4808	                mov ecx, dword [rax + 8]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x4000886	          0x4c8b28	                    mov r13, qword [rax]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x4000889	      0xbf10000000	                           mov edi, 0x10	        69	show-branch.c	FUNCTION_4	CALL_1
0x400088e	        0x4183c401	                             add r12d, 1	       104	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x4000892	          0x8d6901	                      lea ebp, [rcx + 1]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x4000895	      0xe800000000	                          call 0x400089a	        69	show-branch.c	FUNCTION_4	CALL_1
0x400089a	        0x48894318	             mov qword [rbx + 0x18], rax	        69	show-branch.c	FUNCTION_4	CALL_1
0x400089e	          0x4c8928	                    mov qword [rax], r13	        71	show-branch.c	FUNCTION_4
0x40008a1	          0x896808	                mov dword [rax + 8], ebp	        72	show-branch.c	FUNCTION_4
0x40008a4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40008a8	          0x4885c0	                           test rax, rax	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40008ab	            0x75c3	                           jne 0x4000870	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40008ad	        0x4883c408	                              add rsp, 8	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008b1	          0x4489e0	                           mov eax, r12d	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008b4	              0x5b	                                 pop rbx	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008b5	              0x5d	                                 pop rbp	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008b6	            0x415c	                                 pop r12	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008b8	            0x415d	                                 pop r13	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008ba	              0xc3	                                     ret	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008bb	          0x4531e4	                          xor r12d, r12d	        94	show-branch.c	FUNCTION_6
0x40008be	            0xebed	                           jmp 0x40008ad	        94	show-branch.c	FUNCTION_6
compare_ref_name	IF,0:DO,0:functions,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:ELSE,0	79
0x4000040	          0x488b36	                    mov rsi, qword [rsi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000043	          0x488b3f	                    mov rdi, qword [rdi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000046	           0xfbe16	                   movsx edx, byte [rsi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000049	           0xfbe0f	                   movsx ecx, byte [rdi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x400004c	          0x8d41d0	                   lea eax, [rcx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400004f	            0x3c09	                               cmp al, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000051	     0xf87d4000000	                            ja 0x400012b	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000057	            0x31c0	                            xor eax, eax	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000059	     0xf1f80000000	                         nop dword [rax]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000060	          0x8d0480	                  lea eax, [rax + rax*4]	       314	show-branch.c	FUNCTION_11	FOR_1
0x4000063	        0x4883c701	                              add rdi, 1	       313	show-branch.c	FUNCTION_11	FOR_1
0x4000067	        0x8d4441d0	           lea eax, [rcx + rax*2 - 0x30]	       314	show-branch.c	FUNCTION_11	FOR_1
0x400006b	           0xfbe0f	                   movsx ecx, byte [rdi]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400006e	        0x448d41d0	                   lea r8d, [rcx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000072	        0x4180f809	                              cmp r8b, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000076	            0x76e8	                           jbe 0x4000060	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000078	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400007b	          0x80f909	                               cmp cl, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x400007e	     0xf87bc000000	                            ja 0x4000140	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000084	            0x31c9	                            xor ecx, ecx	       311	show-branch.c	FUNCTION_11	FOR_1
0x4000086	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       311	show-branch.c	FUNCTION_11	FOR_1
0x4000090	          0x8d0c89	                  lea ecx, [rcx + rcx*4]	       314	show-branch.c	FUNCTION_11	FOR_1
0x4000093	        0x4883c601	                              add rsi, 1	       313	show-branch.c	FUNCTION_11	FOR_1
0x4000097	        0x8d4c4ad0	           lea ecx, [rdx + rcx*2 - 0x30]	       314	show-branch.c	FUNCTION_11	FOR_1
0x400009b	           0xfbe16	                   movsx edx, byte [rsi]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400009e	        0x448d42d0	                   lea r8d, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40000a2	        0x4180f809	                              cmp r8b, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40000a6	            0x76e8	                           jbe 0x4000090	       312	show-branch.c	FUNCTION_11	FOR_1
0x40000a8	            0x39c1	                            cmp ecx, eax	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40000aa	            0x757c	                           jne 0x4000128	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40000ac	           0xfbe0f	                   movsx ecx, byte [rdi]	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40000af	           0xfbe16	                   movsx edx, byte [rsi]	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40000b2	        0x440fbec1	                           movsx r8d, cl	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000b6	        0x440fbeca	                           movsx r9d, dl	       332	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000ba	        0x418d40d0	                    lea eax, [r8 - 0x30]	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000be	          0x83f809	                              cmp eax, 9	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000c1	        0x418d41d0	                    lea eax, [r9 - 0x30]	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000c5	            0x7629	                           jbe 0x40000f0	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000c7	          0x83f809	                              cmp eax, 9	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000ca	          0x4489c0	                            mov eax, r8d	       331	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000cd	            0x7639	                           jbe 0x4000108	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000cf	          0x4539c8	                            cmp r8d, r9d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x40000d2	            0x753c	                           jne 0x4000110	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x40000d4	          0x4585c0	                           test r8d, r8d	       339	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_5
0x40000d7	            0x741c	                            je 0x40000f5	       339	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_5
0x40000d9	        0x4883c701	                              add rdi, 1	       341	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000dd	        0x4883c601	                              add rsi, 1	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e1	           0xfbe0f	                   movsx ecx, byte [rdi]	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e4	           0xfbe16	                   movsx edx, byte [rsi]	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e7	            0xebc9	                           jmp 0x40000b2	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e9	     0xf1f80000000	                         nop dword [rax]	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000f0	          0x83f809	                              cmp eax, 9	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000f3	            0x7723	                            ja 0x4000118	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000f5	            0x89c8	                            mov eax, ecx	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x40000f7	             0x8d0	                               or al, dl	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x40000f9	     0xf854dffffff	                           jne 0x400004c	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x40000ff	            0x31c0	                            xor eax, eax	       345	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x4000101	              0xc3	                                     ret	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000102	    0x660f1f440000	                    nop word [rax + rax]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000108	          0x4585c0	                           test r8d, r8d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400010b	            0x74e8	                            je 0x40000f5	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400010d	          0x4531c9	                            xor r9d, r9d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000110	          0x4429c8	                            sub eax, r9d	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000113	              0xc3	                                     ret	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000114	         0xf1f4000	                         nop dword [rax]	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000118	          0x4585c9	                           test r9d, r9d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400011b	            0x74d8	                            je 0x40000f5	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400011d	            0x31c0	                            xor eax, eax	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x400011f	            0xebef	                           jmp 0x4000110	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000121	     0xf1f80000000	                         nop dword [rax]	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000128	            0x29c8	                            sub eax, ecx	       328	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x400012a	              0xc3	                                     ret	       328	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x400012b	        0x448d42d0	                   lea r8d, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400012f	            0x31c0	                            xor eax, eax	       311	show-branch.c	FUNCTION_11	FOR_1
0x4000131	        0x4180f809	                              cmp r8b, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000135	     0xf8649ffffff	                           jbe 0x4000084	       312	show-branch.c	FUNCTION_11	FOR_1
0x400013b	      0xe972ffffff	                           jmp 0x40000b2	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000140	            0x31c9	                            xor ecx, ecx	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000142	      0xe961ffffff	                           jmp 0x40000a8	       312	show-branch.c	FUNCTION_11	FOR_1
parse_reflog_param	IF,4:DO,0:functions,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:ELSE,2	47
0x4000150	              0x55	                                push rbp	       585	show-branch.c	FUNCTION_27
0x4000151	              0x53	                                push rbx	       585	show-branch.c	FUNCTION_27
0x4000152	          0x4889f3	                            mov rbx, rsi	       585	show-branch.c	FUNCTION_27
0x4000155	      0xba0a000000	                            mov edx, 0xa	       590	show-branch.c	FUNCTION_27	CALL_1
0x400015a	        0x4883ec18	                           sub rsp, 0x18	       585	show-branch.c	FUNCTION_27
0x400015e	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	       587	show-branch.c	FUNCTION_27
0x4000162	    0x64488b042528	                mov rax, qword fs:[0x28]	       585	show-branch.c	FUNCTION_27
0x400016b	      0x4889442408	                mov qword [rsp + 8], rax	       585	show-branch.c	FUNCTION_27
0x4000170	            0x31c0	                            xor eax, eax	       585	show-branch.c	FUNCTION_27
0x4000172	          0x4885f6	                           test rsi, rsi	       589	show-branch.c	FUNCTION_27	IF_1
0x4000175	      0xb800000000	                              mov eax, 0	       589	show-branch.c	FUNCTION_27	IF_1
0x400017a	          0x4889e6	                            mov rsi, rsp	       590	show-branch.c	FUNCTION_27	CALL_1
0x400017d	        0x480f44d8	                          cmove rbx, rax	       589	show-branch.c	FUNCTION_27	IF_1
0x4000181	          0x4889df	                            mov rdi, rbx	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000184	      0xe800000000	                          call 0x4000189	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000189	          0x4889c2	                            mov rdx, rax	       590	show-branch.c	FUNCTION_27	CALL_1
0x400018c	    0x890500000000	            mov dword [0x04000192], eax 	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000192	        0x488b0424	                    mov rax, qword [rsp]	       591	show-branch.c	FUNCTION_27	IF_2
0x4000196	           0xfb608	                   movzx ecx, byte [rax]	       591	show-branch.c	FUNCTION_27	IF_2
0x4000199	          0x80f92c	                            cmp cl, 0x2c	       591	show-branch.c	FUNCTION_27	IF_2
0x400019c	            0x743a	                            je 0x40001d8	       591	show-branch.c	FUNCTION_27	IF_2
0x400019e	            0x84c9	                             test cl, cl	       593	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001a0	            0x7546	                           jne 0x40001e8	       593	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001a2	    0x48c745000000	                      mov qword [rbp], 0	       596	show-branch.c	FUNCTION_27	ELSE_2
0x40001aa	            0x31c0	                            xor eax, eax	       599	show-branch.c	FUNCTION_27
0x40001ac	            0x85d2	                           test edx, edx	       597	show-branch.c	FUNCTION_27	IF_4
0x40001ae	            0x7f0a	                            jg 0x40001ba	       597	show-branch.c	FUNCTION_27	IF_4
0x40001b0	    0xc70500000000	               mov dword [0x040001ba], 4	       598	show-branch.c	FUNCTION_27	IF_4
0x40001ba	      0x488b742408	                mov rsi, qword [rsp + 8]	       600	show-branch.c	FUNCTION_27
0x40001bf	    0x644833342528	                xor rsi, qword fs:[0x28]	       600	show-branch.c	FUNCTION_27
0x40001c8	            0x7534	                           jne 0x40001fe	       600	show-branch.c	FUNCTION_27
0x40001ca	        0x4883c418	                           add rsp, 0x18	       600	show-branch.c	FUNCTION_27
0x40001ce	              0x5b	                                 pop rbx	       600	show-branch.c	FUNCTION_27
0x40001cf	              0x5d	                                 pop rbp	       600	show-branch.c	FUNCTION_27
0x40001d0	              0xc3	                                     ret	       600	show-branch.c	FUNCTION_27
0x40001d1	     0xf1f80000000	                         nop dword [rax]	       600	show-branch.c	FUNCTION_27
0x40001d8	        0x4883c001	                              add rax, 1	       592	show-branch.c	FUNCTION_27	IF_2
0x40001dc	        0x48894500	                    mov qword [rbp], rax	       592	show-branch.c	FUNCTION_27	IF_2
0x40001e0	            0xebc8	                           jmp 0x40001aa	       592	show-branch.c	FUNCTION_27	IF_2
0x40001e2	    0x660f1f440000	                    nop word [rax + rax]	       592	show-branch.c	FUNCTION_27	IF_2
0x40001e8	          0x4889de	                            mov rsi, rbx	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001eb	      0xbf00000000	                              mov edi, 0	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001f0	            0x31c0	                            xor eax, eax	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001f2	      0xe800000000	                          call 0x40001f7	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001f7	      0xb8ffffffff	                     mov eax, 0xffffffff	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001fc	            0xebbc	                           jmp 0x40001ba	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001fe	      0xe800000000	                          call 0x4000203	       600	show-branch.c	FUNCTION_27
