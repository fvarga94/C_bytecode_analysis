color_print_strbuf	CALL,0:DO,0:SWITCH,0:FOR,0:WHILE,0:ELSE,0:IF,2:functions,0	32
0x4000a70	              0x55	                                push rbp	       376	color.c	FUNCTION_14
0x4000a71	              0x53	                                push rbx	       376	color.c	FUNCTION_14
0x4000a72	          0x4889fd	                            mov rbp, rdi	       376	color.c	FUNCTION_14
0x4000a75	          0x4889f3	                            mov rbx, rsi	       376	color.c	FUNCTION_14
0x4000a78	        0x4883ec18	                           sub rsp, 0x18	       376	color.c	FUNCTION_14
0x4000a7c	          0x803e00	                       cmp byte [rsi], 0	       377	color.c	FUNCTION_14	IF_1
0x4000a7f	            0x753f	                           jne 0x4000ac0	       377	color.c	FUNCTION_14	IF_1
0x4000a81	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	        97	stdio2.h	CALL_9
0x4000a85	          0x4889ee	                            mov rsi, rbp	        97	stdio2.h	CALL_9
0x4000a88	      0xe800000000	                          call 0x4000a8d	        97	stdio2.h	CALL_9
0x4000a8d	          0x803b00	                       cmp byte [rbx], 0	       380	color.c	FUNCTION_14	IF_2
0x4000a90	            0x750e	                           jne 0x4000aa0	       380	color.c	FUNCTION_14	IF_2
0x4000a92	        0x4883c418	                           add rsp, 0x18	       382	color.c	FUNCTION_14
0x4000a96	              0x5b	                                 pop rbx	       382	color.c	FUNCTION_14
0x4000a97	              0x5d	                                 pop rbp	       382	color.c	FUNCTION_14
0x4000a98	              0xc3	                                     ret	       382	color.c	FUNCTION_14
0x4000a99	     0xf1f80000000	                         nop dword [rax]	       382	color.c	FUNCTION_14
0x4000aa0	        0x4883c418	                           add rsp, 0x18	       382	color.c	FUNCTION_14
0x4000aa4	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_9
0x4000aa7	      0xba03000000	                              mov edx, 3	        97	stdio2.h	CALL_9
0x4000aac	              0x5b	                                 pop rbx	       382	color.c	FUNCTION_14
0x4000aad	              0x5d	                                 pop rbp	       382	color.c	FUNCTION_14
0x4000aae	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000ab3	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_9
0x4000ab8	      0xe900000000	                           jmp 0x4000abd	        97	stdio2.h	CALL_9
0x4000abd	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	CALL_9
0x4000ac0	          0x4889fe	                            mov rsi, rdi	        97	stdio2.h	CALL_9
0x4000ac3	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_9
0x4000ac6	      0x4889542408	                mov qword [rsp + 8], rdx	        97	stdio2.h	CALL_9
0x4000acb	      0xe800000000	                          call 0x4000ad0	        97	stdio2.h	CALL_9
0x4000ad0	      0x488b542408	                mov rdx, qword [rsp + 8]	        97	stdio2.h	CALL_9
0x4000ad5	            0xebaa	                           jmp 0x4000a81	        97	stdio2.h	CALL_9
color_fprintf	CALL,3:DO,0:SWITCH,0:FOR,0:WHILE,0:ELSE,0:IF,0:functions,0	32
0x4000ae0	    0x4881ecd80000	                           sub rsp, 0xd8	       400	color.c	FUNCTION_16
0x4000ae7	            0x84c0	                             test al, al	       400	color.c	FUNCTION_16
0x4000ae9	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       400	color.c	FUNCTION_16
0x4000aee	      0x4c89442440	              mov qword [rsp + 0x40], r8	       400	color.c	FUNCTION_16
0x4000af3	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       400	color.c	FUNCTION_16
0x4000af8	            0x7437	                            je 0x4000b31	       400	color.c	FUNCTION_16
0x4000afa	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       400	color.c	FUNCTION_16
0x4000aff	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       400	color.c	FUNCTION_16
0x4000b04	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       400	color.c	FUNCTION_16
0x4000b09	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       400	color.c	FUNCTION_16
0x4000b11	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       400	color.c	FUNCTION_16
0x4000b19	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       400	color.c	FUNCTION_16
0x4000b21	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       400	color.c	FUNCTION_16
0x4000b29	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       400	color.c	FUNCTION_16
0x4000b31	    0x64488b042528	                mov rax, qword fs:[0x28]	       400	color.c	FUNCTION_16
0x4000b3a	      0x4889442418	             mov qword [rsp + 0x18], rax	       400	color.c	FUNCTION_16
0x4000b3f	            0x31c0	                            xor eax, eax	       400	color.c	FUNCTION_16
0x4000b41	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       403	color.c	FUNCTION_16	CALL_1
0x4000b49	          0x4531c0	                            xor r8d, r8d	       404	color.c	FUNCTION_16	CALL_2
0x4000b4c	          0x4889e1	                            mov rcx, rsp	       404	color.c	FUNCTION_16	CALL_2
0x4000b4f	      0x4889442408	                mov qword [rsp + 8], rax	       403	color.c	FUNCTION_16	CALL_1
0x4000b54	      0x488d442420	                   lea rax, [rsp + 0x20]	       403	color.c	FUNCTION_16	CALL_1
0x4000b59	    0xc70424180000	                   mov dword [rsp], 0x18	       403	color.c	FUNCTION_16	CALL_1
0x4000b60	    0xc74424043000	               mov dword [rsp + 4], 0x30	       403	color.c	FUNCTION_16	CALL_1
0x4000b68	      0x4889442410	             mov qword [rsp + 0x10], rax	       403	color.c	FUNCTION_16	CALL_1
0x4000b6d	      0xe8cef4ffff	                 call sym.color_vfprintf	       404	color.c	FUNCTION_16	CALL_2
0x4000b72	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       407	color.c	FUNCTION_16
0x4000b77	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       407	color.c	FUNCTION_16
0x4000b80	            0x7508	                           jne 0x4000b8a	       407	color.c	FUNCTION_16
0x4000b82	    0x4881c4d80000	                           add rsp, 0xd8	       407	color.c	FUNCTION_16
0x4000b89	              0xc3	                                     ret	       407	color.c	FUNCTION_16
0x4000b8a	      0xe800000000	                          call 0x4000b8f	       407	color.c	FUNCTION_16
color_vfprintf	CALL,1:DO,0:SWITCH,0:FOR,0:WHILE,0:ELSE,0:IF,3:functions,0	58
0x4000040	            0x4157	                                push r15	       386	color.c	FUNCTION_15
0x4000042	            0x4156	                                push r14	       386	color.c	FUNCTION_15
0x4000044	          0x4989cf	                            mov r15, rcx	       386	color.c	FUNCTION_15
0x4000047	            0x4155	                                push r13	       386	color.c	FUNCTION_15
0x4000049	            0x4154	                                push r12	       386	color.c	FUNCTION_15
0x400004b	          0x4989d6	                            mov r14, rdx	       386	color.c	FUNCTION_15
0x400004e	              0x55	                                push rbp	       386	color.c	FUNCTION_15
0x400004f	              0x53	                                push rbx	       386	color.c	FUNCTION_15
0x4000050	            0x31db	                            xor ebx, ebx	       386	color.c	FUNCTION_15
0x4000052	          0x4889fd	                            mov rbp, rdi	       386	color.c	FUNCTION_15
0x4000055	          0x4989f4	                            mov r12, rsi	       386	color.c	FUNCTION_15
0x4000058	          0x4d89c5	                             mov r13, r8	       386	color.c	FUNCTION_15
0x400005b	        0x4883ec08	                              sub rsp, 8	       386	color.c	FUNCTION_15
0x400005f	          0x803e00	                       cmp byte [rsi], 0	       389	color.c	FUNCTION_15	IF_1
0x4000062	            0x754c	                           jne 0x40000b0	       389	color.c	FUNCTION_15	IF_1
0x4000064	          0x4c89f9	                            mov rcx, r15	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000067	          0x4c89f2	                            mov rdx, r14	       127	stdio2.h	FUNCTION_24	CALL_1
0x400006a	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_24	CALL_1
0x400006f	          0x4889ef	                            mov rdi, rbp	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000072	      0xe800000000	                          call 0x4000077	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000077	             0x1c3	                            add ebx, eax	       391	color.c	FUNCTION_15	CALL_1
0x4000079	      0x41803c2400	                       cmp byte [r12], 0	       392	color.c	FUNCTION_15	IF_2
0x400007e	            0x7550	                           jne 0x40000d0	       392	color.c	FUNCTION_15	IF_2
0x4000080	          0x4d85ed	                           test r13, r13	       394	color.c	FUNCTION_15	IF_3
0x4000083	            0x7419	                            je 0x400009e	       394	color.c	FUNCTION_15	IF_3
0x4000085	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_9
0x4000088	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x400008d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000092	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_9
0x4000095	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000097	      0xe800000000	                          call 0x400009c	        97	stdio2.h	CALL_9
0x400009c	             0x1c3	                            add ebx, eax	       395	color.c	FUNCTION_15	IF_3
0x400009e	        0x4883c408	                              add rsp, 8	       397	color.c	FUNCTION_15
0x40000a2	            0x89d8	                            mov eax, ebx	       397	color.c	FUNCTION_15
0x40000a4	              0x5b	                                 pop rbx	       397	color.c	FUNCTION_15
0x40000a5	              0x5d	                                 pop rbp	       397	color.c	FUNCTION_15
0x40000a6	            0x415c	                                 pop r12	       397	color.c	FUNCTION_15
0x40000a8	            0x415d	                                 pop r13	       397	color.c	FUNCTION_15
0x40000aa	            0x415e	                                 pop r14	       397	color.c	FUNCTION_15
0x40000ac	            0x415f	                                 pop r15	       397	color.c	FUNCTION_15
0x40000ae	              0xc3	                                     ret	       397	color.c	FUNCTION_15
0x40000af	              0x90	                                     nop	       397	color.c	FUNCTION_15
0x40000b0	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_9
0x40000b3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40000b8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40000bd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x40000bf	      0xe800000000	                          call 0x40000c4	        97	stdio2.h	CALL_9
0x40000c4	            0x89c3	                            mov ebx, eax	        97	stdio2.h	CALL_9
0x40000c6	            0xeb9c	                           jmp 0x4000064	        97	stdio2.h	CALL_9
0x40000c8	     0xf1f84000000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_9
0x40000d0	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_9
0x40000d5	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40000da	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40000df	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_9
0x40000e2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x40000e4	      0xe800000000	                          call 0x40000e9	        97	stdio2.h	CALL_9
0x40000e9	             0x1c3	                            add ebx, eax	       393	color.c	FUNCTION_15	IF_2
0x40000eb	            0xeb93	                           jmp 0x4000080	       393	color.c	FUNCTION_15	IF_2
want_color_fd	CALL,1:DO,0:SWITCH,0:FOR,0:WHILE,0:ELSE,0:IF,3:functions,0	57
0x4000920	            0x4155	                                push r13	       336	color.c	FUNCTION_11
0x4000922	            0x4154	                                push r12	       336	color.c	FUNCTION_11
0x4000924	              0x55	                                push rbp	       336	color.c	FUNCTION_11
0x4000925	              0x53	                                push rbx	       336	color.c	FUNCTION_11
0x4000926	        0x4883ec08	                              sub rsp, 8	       336	color.c	FUNCTION_11
0x400092a	            0x85f6	                           test esi, esi	       347	color.c	FUNCTION_11	IF_1
0x400092c	     0xf4835000000	           cmovs esi, dword [0x04000933]	       347	color.c	FUNCTION_11	IF_1
0x4000933	          0x83fe02	                              cmp esi, 2	       349	color.c	FUNCTION_11	IF_2
0x4000936	          0x4189f5	                           mov r13d, esi	       349	color.c	FUNCTION_11	IF_2
0x4000939	            0x7415	                            je 0x4000950	       349	color.c	FUNCTION_11	IF_2
0x400093b	        0x4883c408	                              add rsp, 8	       355	color.c	FUNCTION_11
0x400093f	          0x4489e8	                           mov eax, r13d	       355	color.c	FUNCTION_11
0x4000942	              0x5b	                                 pop rbx	       355	color.c	FUNCTION_11
0x4000943	              0x5d	                                 pop rbp	       355	color.c	FUNCTION_11
0x4000944	            0x415c	                                 pop r12	       355	color.c	FUNCTION_11
0x4000946	            0x415d	                                 pop r13	       355	color.c	FUNCTION_11
0x4000948	              0xc3	                                     ret	       355	color.c	FUNCTION_11
0x4000949	     0xf1f80000000	                         nop dword [rax]	       355	color.c	FUNCTION_11
0x4000950	          0x4863ef	                         movsxd rbp, edi	       350	color.c	FUNCTION_11	IF_2	IF_3
0x4000953	            0x89fb	                            mov ebx, edi	       350	color.c	FUNCTION_11	IF_2	IF_3
0x4000955	    0x448b2cad0000	                 mov r13d, dword [rbp*4]	       350	color.c	FUNCTION_11	IF_2	IF_3
0x400095d	          0x4585ed	                         test r13d, r13d	       350	color.c	FUNCTION_11	IF_2	IF_3
0x4000960	            0x79d9	                           jns 0x400093b	       350	color.c	FUNCTION_11	IF_2	IF_3
0x4000962	          0x83ff01	                              cmp edi, 1	       325	color.c	FUNCTION_10
0x4000965	    0x8b0500000000	            mov eax, dword [0x0400096b] 	       325	color.c	FUNCTION_10
0x400096b	    0x41bc00000000	                             mov r12d, 0	       325	color.c	FUNCTION_10
0x4000971	            0x744d	                            je 0x40009c0	       325	color.c	FUNCTION_10
0x4000973	            0x85c0	                           test eax, eax	       326	color.c	FUNCTION_10	IF_1
0x4000975	            0x7857	                            js 0x40009ce	       326	color.c	FUNCTION_10	IF_1
0x4000977	        0x458b2c24	                   mov r13d, dword [r12]	       326	color.c	FUNCTION_10	IF_1
0x400097b	          0x4585ed	                         test r13d, r13d	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x400097e	            0x7528	                           jne 0x40009a8	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000980	          0x83fb01	                              cmp ebx, 1	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000983	            0x740a	                            je 0x400098f	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000985	    0x44892cad0000	                 mov dword [rbp*4], r13d	       351	color.c	FUNCTION_11	IF_2	CALL_1
0x400098d	            0xebac	                           jmp 0x400093b	       352	color.c	FUNCTION_11	IF_2
0x400098f	      0xe800000000	                          call 0x4000994	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000994	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000996	            0x74ed	                            je 0x4000985	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000998	    0x8b0500000000	            mov eax, dword [0x0400099e] 	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x400099e	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40009a0	            0x74e3	                            je 0x4000985	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40009a2	    0x660f1f440000	                    nop word [rax + rax]	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40009a8	          0x4531ed	                          xor r13d, r13d	       332	color.c	FUNCTION_10
0x40009ab	      0xe800000000	                          call 0x40009b0	       329	color.c	FUNCTION_10	IF_2	IF_3	CALL_3
0x40009b0	            0x85c0	                           test eax, eax	       332	color.c	FUNCTION_10
0x40009b2	        0x410f94c5	                               sete r13b	       332	color.c	FUNCTION_10
0x40009b6	            0xebcd	                           jmp 0x4000985	       332	color.c	FUNCTION_10
0x40009b8	     0xf1f84000000	                   nop dword [rax + rax]	       332	color.c	FUNCTION_10
0x40009c0	    0x8b0500000000	            mov eax, dword [0x040009c6] 	       325	color.c	FUNCTION_10
0x40009c6	    0x41bc00000000	                             mov r12d, 0	       325	color.c	FUNCTION_10
0x40009cc	            0xeba5	                           jmp 0x4000973	       325	color.c	FUNCTION_10
0x40009ce	            0x89df	                            mov edi, ebx	       327	color.c	FUNCTION_10	CALL_1
0x40009d0	      0xe800000000	                          call 0x40009d5	       327	color.c	FUNCTION_10	CALL_1
0x40009d5	          0x4189c5	                           mov r13d, eax	       327	color.c	FUNCTION_10	CALL_1
0x40009d8	        0x41890424	                    mov dword [r12], eax	       327	color.c	FUNCTION_10	CALL_1
0x40009dc	            0xeb9d	                           jmp 0x400097b	       327	color.c	FUNCTION_10	CALL_1
git_color_default_config	CALL,2:DO,0:SWITCH,0:FOR,0:WHILE,0:ELSE,0:IF,1:functions,0	22
0x4000a20	              0x55	                                push rbp	       368	color.c	FUNCTION_13
0x4000a21	              0x53	                                push rbx	       368	color.c	FUNCTION_13
0x4000a22	          0x4889fb	                            mov rbx, rdi	       368	color.c	FUNCTION_13
0x4000a25	          0x4889f5	                            mov rbp, rsi	       368	color.c	FUNCTION_13
0x4000a28	      0xbf00000000	                              mov edi, 0	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000a2d	      0xb909000000	                              mov ecx, 9	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000a32	        0x4883ec18	                           sub rsp, 0x18	       368	color.c	FUNCTION_13
0x4000a36	          0x4889de	                            mov rsi, rbx	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000a39	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000a3b	            0x751b	                           jne 0x4000a58	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000a3d	          0x4889ee	                            mov rsi, rbp	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x4000a40	          0x4889df	                            mov rdi, rbx	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x4000a43	      0x4889542408	                mov qword [rsp + 8], rdx	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x4000a48	      0xe800000000	                          call 0x4000a4d	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x4000a4d	      0x488b542408	                mov rdx, qword [rsp + 8]	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x4000a52	    0x890500000000	            mov dword [0x04000a58], eax 	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x4000a58	        0x4883c418	                           add rsp, 0x18	       373	color.c	FUNCTION_13
0x4000a5c	          0x4889ee	                            mov rsi, rbp	       372	color.c	FUNCTION_13	CALL_2
0x4000a5f	          0x4889df	                            mov rdi, rbx	       372	color.c	FUNCTION_13	CALL_2
0x4000a62	              0x5b	                                 pop rbx	       373	color.c	FUNCTION_13
0x4000a63	              0x5d	                                 pop rbp	       373	color.c	FUNCTION_13
0x4000a64	      0xe900000000	                           jmp 0x4000a69	       372	color.c	FUNCTION_13	CALL_2
color_parse_mem	CALL,12:DO,0:SWITCH,0:FOR,1:WHILE,4:ELSE,1:IF,13:functions,0	419
0x40001a0	            0x4157	                                push r15	       198	color.c	FUNCTION_8
0x40001a2	            0x4156	                                push r14	       198	color.c	FUNCTION_8
0x40001a4	          0x4889d0	                            mov rax, rdx	       198	color.c	FUNCTION_8
0x40001a7	            0x4155	                                push r13	       198	color.c	FUNCTION_8
0x40001a9	            0x4154	                                push r12	       198	color.c	FUNCTION_8
0x40001ab	        0x4883c04b	                           add rax, 0x4b	       201	color.c	FUNCTION_8
0x40001af	              0x55	                                push rbp	       198	color.c	FUNCTION_8
0x40001b0	              0x53	                                push rbx	       198	color.c	FUNCTION_8
0x40001b1	        0x4883ec68	                           sub rsp, 0x68	       198	color.c	FUNCTION_8
0x40001b5	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       198	color.c	FUNCTION_8
0x40001be	      0x48894c2458	             mov qword [rsp + 0x58], rcx	       198	color.c	FUNCTION_8
0x40001c3	            0x31c9	                            xor ecx, ecx	       198	color.c	FUNCTION_8
0x40001c5	          0x83fe00	                              cmp esi, 0	       206	color.c	FUNCTION_8	WHILE_1
0x40001c8	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       198	color.c	FUNCTION_8
0x40001cd	        0x89742420	             mov dword [rsp + 0x20], esi	       198	color.c	FUNCTION_8
0x40001d1	      0x4889542428	             mov qword [rsp + 0x28], rdx	       198	color.c	FUNCTION_8
0x40001d6	      0x4889442410	             mov qword [rsp + 0x10], rax	       201	color.c	FUNCTION_8
0x40001db	    0x48c744243000	               mov qword [rsp + 0x30], 0	       203	color.c	FUNCTION_8
0x40001e4	    0x48c744244000	               mov qword [rsp + 0x40], 0	       204	color.c	FUNCTION_8
0x40001ed	     0xf8ee4050000	                           jle 0x40007d7	       206	color.c	FUNCTION_8	WHILE_1
0x40001f3	           0xfb607	                   movzx eax, byte [rdi]	       206	color.c	FUNCTION_8	WHILE_1
0x40001f6	          0x4989ff	                            mov r15, rdi	       206	color.c	FUNCTION_8	WHILE_1
0x40001f9	            0x89f5	                            mov ebp, esi	       206	color.c	FUNCTION_8	WHILE_1
0x40001fb	    0xf68000000000	                      test byte [rax], 1	       206	color.c	FUNCTION_8	WHILE_1
0x4000202	            0x7519	                           jne 0x400021d	       206	color.c	FUNCTION_8	WHILE_1
0x4000204	            0xeb4d	                           jmp 0x4000253	       206	color.c	FUNCTION_8	WHILE_1
0x4000206	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       206	color.c	FUNCTION_8	WHILE_1
0x4000210	        0x410fb607	                   movzx eax, byte [r15]	       206	color.c	FUNCTION_8	WHILE_1
0x4000214	    0xf68000000000	                      test byte [rax], 1	       206	color.c	FUNCTION_8	WHILE_1
0x400021b	            0x743f	                            je 0x400025c	       206	color.c	FUNCTION_8	WHILE_1
0x400021d	        0x4983c701	                              add r15, 1	       207	color.c	FUNCTION_8	WHILE_1
0x4000221	          0x83ed01	                              sub ebp, 1	       206	color.c	FUNCTION_8	WHILE_1
0x4000224	            0x75ea	                           jne 0x4000210	       206	color.c	FUNCTION_8	WHILE_1
0x4000226	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       212	color.c	FUNCTION_8	IF_1
0x400022b	          0xc60000	                       mov byte [rax], 0	       212	color.c	FUNCTION_8	IF_1
0x400022e	            0x31c0	                            xor eax, eax	       213	color.c	FUNCTION_8	IF_1
0x4000230	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       298	color.c	FUNCTION_8
0x4000235	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       298	color.c	FUNCTION_8
0x400023e	     0xf85dc050000	                           jne 0x4000820	       298	color.c	FUNCTION_8
0x4000244	        0x4883c468	                           add rsp, 0x68	       298	color.c	FUNCTION_8
0x4000248	              0x5b	                                 pop rbx	       298	color.c	FUNCTION_8
0x4000249	              0x5d	                                 pop rbp	       298	color.c	FUNCTION_8
0x400024a	            0x415c	                                 pop r12	       298	color.c	FUNCTION_8
0x400024c	            0x415d	                                 pop r13	       298	color.c	FUNCTION_8
0x400024e	            0x415e	                                 pop r14	       298	color.c	FUNCTION_8
0x4000250	            0x415f	                                 pop r15	       298	color.c	FUNCTION_8
0x4000252	              0xc3	                                     ret	       298	color.c	FUNCTION_8
0x4000253	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	       206	color.c	FUNCTION_8	WHILE_1
0x4000257	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       206	color.c	FUNCTION_8	WHILE_1
0x400025c	          0x4863d5	                         movsxd rdx, ebp	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400025f	      0xbe00000000	                              mov esi, 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000264	          0x4c89ff	                            mov rdi, r15	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000267	      0xe800000000	                          call 0x400026c	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400026c	            0x85c0	                           test eax, eax	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400026e	     0xf8483050000	                            je 0x40007f7	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000274	    0xc74424240000	               mov dword [rsp + 0x24], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400027c	          0x4d89fd	                            mov r13, r15	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400027f	              0x90	                                     nop	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000280	          0x4c89eb	                            mov rbx, r13	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000283	          0x4531e4	                          xor r12d, r12d	       225	color.c	FUNCTION_8	WHILE_2
0x4000286	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       225	color.c	FUNCTION_8	WHILE_2
0x4000290	           0xfb603	                   movzx eax, byte [rbx]	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000293	          0x4989df	                            mov r15, rbx	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000296	          0x4d29ef	                            sub r15, r13	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000299	    0xf68000000000	                      test byte [rax], 1	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002a0	     0xf858e000000	                           jne 0x4000334	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002a6	        0x4183c401	                             add r12d, 1	       228	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002aa	        0x4883c301	                              add rbx, 1	       228	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002ae	          0x83ed01	                              sub ebp, 1	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002b1	            0x75dd	                           jne 0x4000290	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002b3	          0x4d63fc	                        movsxd r15, r12d	       232	color.c	FUNCTION_8	WHILE_2
0x40002b6	      0x4b8d5c3d00	                    lea rbx, [r13 + r15]	       232	color.c	FUNCTION_8	WHILE_2
0x40002bb	          0x4c89fa	                            mov rdx, r15	        51	color.c	FUNCTION_1	CALL_1
0x40002be	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x40002c3	          0x4c89ef	                            mov rdi, r13	        51	color.c	FUNCTION_1	CALL_1
0x40002c6	      0xe800000000	                          call 0x40002cb	        51	color.c	FUNCTION_1	CALL_1
0x40002cb	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x40002cd	            0x7579	                           jne 0x4000348	        51	color.c	FUNCTION_1	CALL_1
0x40002cf	    0x4180bf000000	                       cmp byte [r15], 0	        51	color.c	FUNCTION_1	CALL_1
0x40002d7	            0x756f	                           jne 0x4000348	        51	color.c	FUNCTION_1	CALL_1
0x40002d9	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x40002db	        0xc6042400	                       mov byte [rsp], 0	       224	color.c	FUNCTION_8	WHILE_2
0x40002df	      0xc644240800	                   mov byte [rsp + 8], 0	       224	color.c	FUNCTION_8	WHILE_2
0x40002e4	            0x31c0	                            xor eax, eax	       224	color.c	FUNCTION_8	WHILE_2
0x40002e6	      0xb901000000	                              mov ecx, 1	        77	color.c	FUNCTION_3	IF_1
0x40002eb	        0x8b742430	            mov esi, dword [rsp + 0x30] 	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x40002ef	            0x85f6	                           test esi, esi	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x40002f1	     0xf8529010000	                           jne 0x4000420	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x40002f7	        0x88442434	               mov byte [rsp + 0x34], al	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x40002fb	       0xfb6442408	               movzx eax, byte [rsp + 8]	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000300	        0x894c2430	             mov dword [rsp + 0x30], ecx	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000304	        0x88542437	               mov byte [rsp + 0x37], dl	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000308	        0x88442435	               mov byte [rsp + 0x35], al	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x400030c	         0xfb60424	                   movzx eax, byte [rsp]	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000310	        0x88442436	               mov byte [rsp + 0x36], al	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000314	            0x85ed	                           test ebp, ebp	       222	color.c	FUNCTION_8	WHILE_2
0x4000316	     0xf8437010000	                            je 0x4000453	       222	color.c	FUNCTION_8	WHILE_2
0x400031c	          0x4989dd	                            mov r13, rbx	       222	color.c	FUNCTION_8	WHILE_2
0x400031f	      0xe95cffffff	                           jmp 0x4000280	       222	color.c	FUNCTION_8	WHILE_2
0x4000324	         0xf1f4000	                         nop dword [rax]	       222	color.c	FUNCTION_8	WHILE_2
0x4000328	           0xfb603	                   movzx eax, byte [rbx]	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x400032b	    0xf68000000000	                      test byte [rax], 1	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000332	            0x7487	                            je 0x40002bb	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000334	        0x4883c301	                              add rbx, 1	       234	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000338	          0x83ed01	                              sub ebp, 1	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x400033b	            0x75eb	                           jne 0x4000328	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x400033d	      0xe979ffffff	                           jmp 0x40002bb	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000342	    0x660f1f440000	                    nop word [rax + rax]	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000348	        0x4183fc07	                             cmp r12d, 7	        82	color.c	FUNCTION_3	IF_2
0x400034c	        0xc6042400	                       mov byte [rsp], 0	       224	color.c	FUNCTION_8	WHILE_2
0x4000350	      0xc644240800	                   mov byte [rsp + 8], 0	       224	color.c	FUNCTION_8	WHILE_2
0x4000355	     0xf84b5020000	                            je 0x4000610	        82	color.c	FUNCTION_3	IF_2
0x400035b	    0x41be00000000	                             mov r14d, 0	       225	color.c	FUNCTION_8	WHILE_2
0x4000361	          0x4531c9	                            xor r9d, r9d	       225	color.c	FUNCTION_8	WHILE_2
0x4000364	      0x448964240c	             mov dword [rsp + 0xc], r12d	       225	color.c	FUNCTION_8	WHILE_2
0x4000369	          0x4d89f4	                            mov r12, r14	       225	color.c	FUNCTION_8	WHILE_2
0x400036c	          0x4d89ce	                             mov r14, r9	       225	color.c	FUNCTION_8	WHILE_2
0x400036f	            0xeb0f	                           jmp 0x4000380	       225	color.c	FUNCTION_8	WHILE_2
0x4000371	     0xf1f80000000	                         nop dword [rax]	       225	color.c	FUNCTION_8	WHILE_2
0x4000378	    0x4e8b24f50000	                  mov r12, qword [r14*8]	       225	color.c	FUNCTION_8	WHILE_2
0x4000380	          0x4c89fa	                            mov rdx, r15	        51	color.c	FUNCTION_1	CALL_1
0x4000383	          0x4c89e6	                            mov rsi, r12	        51	color.c	FUNCTION_1	CALL_1
0x4000386	          0x4c89ef	                            mov rdi, r13	        51	color.c	FUNCTION_1	CALL_1
0x4000389	      0xe800000000	                          call 0x400038e	        51	color.c	FUNCTION_1	CALL_1
0x400038e	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x4000390	            0x750b	                           jne 0x400039d	        51	color.c	FUNCTION_1	CALL_1
0x4000392	      0x43803c3c00	                 cmp byte [r12 + r15], 0	        51	color.c	FUNCTION_1	CALL_1
0x4000397	     0xf8413030000	                            je 0x40006b0	        51	color.c	FUNCTION_1	CALL_1
0x400039d	        0x4983c601	                              add r14, 1	        51	color.c	FUNCTION_1	CALL_1
0x40003a1	        0x4983fe08	                              cmp r14, 8	        92	color.c	FUNCTION_3	FOR_1
0x40003a5	            0x75d1	                           jne 0x4000378	        92	color.c	FUNCTION_3	FOR_1
0x40003a7	      0x488d742450	                   lea rsi, [rsp + 0x50]	       101	color.c	FUNCTION_3	CALL_6
0x40003ac	      0xba0a000000	                            mov edx, 0xa	       101	color.c	FUNCTION_3	CALL_6
0x40003b1	          0x4c89ef	                            mov rdi, r13	       101	color.c	FUNCTION_3	CALL_6
0x40003b4	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	       101	color.c	FUNCTION_3	CALL_6
0x40003b9	      0xe800000000	                          call 0x40003be	       101	color.c	FUNCTION_3	CALL_6
0x40003be	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003c3	          0x4963f4	                        movsxd rsi, r12d	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003c6	          0x4c29ea	                            sub rdx, r13	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003c9	          0x4839f2	                            cmp rdx, rsi	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003cc	     0xf8524010000	                           jne 0x40004f6	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003d2	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003d6	     0xf8c1a010000	                            jl 0x40004f6	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003dc	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       109	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x40003e0	     0xf84e7020000	                            je 0x40006cd	       109	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x40003e6	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x40003e8	        0x4883f807	                              cmp rax, 7	       113	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40003ec	      0xb902000000	                              mov ecx, 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40003f1	     0xf8ef4feffff	                           jle 0x40002eb	       113	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40003f7	    0x483dff000000	                           cmp rax, 0xff	       117	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x40003fd	     0xf8ff3000000	                            jg 0x40004f6	       117	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x4000403	        0x8b742430	            mov esi, dword [rsp + 0x30] 	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000407	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x4000409	      0xb903000000	                              mov ecx, 3	       118	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x400040e	            0x85f6	                           test esi, esi	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000410	     0xf84e1feffff	                            je 0x40002f7	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000416	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000420	      0x448b4c2440	            mov r9d, dword [rsp + 0x40] 	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x4000425	          0x4585c9	                           test r9d, r9d	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x4000428	     0xf85b2010000	                           jne 0x40005e0	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x400042e	        0x88442444	               mov byte [rsp + 0x44], al	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x4000432	       0xfb6442408	               movzx eax, byte [rsp + 8]	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x4000437	            0x85ed	                           test ebp, ebp	       222	color.c	FUNCTION_8	WHILE_2
0x4000439	        0x894c2440	             mov dword [rsp + 0x40], ecx	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x400043d	        0x88542447	               mov byte [rsp + 0x47], dl	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x4000441	        0x88442445	               mov byte [rsp + 0x45], al	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x4000445	         0xfb60424	                   movzx eax, byte [rsp]	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x4000449	        0x88442446	               mov byte [rsp + 0x46], al	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x400044d	     0xf85c9feffff	                           jne 0x400031c	       222	color.c	FUNCTION_8	WHILE_2
0x4000453	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x4000457	            0x85ff	                           test edi, edi	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x4000459	     0xf8437030000	                            je 0x4000796	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x400045f	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000464	      0x448b642424	           mov r12d, dword [rsp + 0x24] 	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000469	          0x4531ed	                          xor r13d, r13d	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x400046c	            0x31f6	                            xor esi, esi	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x400046e	      0xbb01000000	                              mov ebx, 1	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000473	          0x4889c8	                            mov rax, rcx	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000476	          0xc6011b	                    mov byte [rcx], 0x1b	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000479	        0xc641015b	                mov byte [rcx + 1], 0x5b	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x400047d	        0x4883c002	                              add rax, 2	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000481	     0xf1f80000000	                         nop dword [rax]	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000488	            0x89da	                            mov edx, ebx	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x400048a	          0x4489e9	                           mov ecx, r13d	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x400048d	            0xd3e2	                             shl edx, cl	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x400048f	          0x4485e2	                          test edx, r12d	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x4000492	            0x745c	                            je 0x40004f0	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x4000494	            0xf7d2	                                 not edx	       274	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000496	          0x8d6e01	                      lea ebp, [rsi + 1]	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000499	          0x4121d4	                           and r12d, edx	       274	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x400049c	            0x85f6	                           test esi, esi	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x400049e	     0xf844a020000	                            je 0x40006ee	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40004a4	      0x4839442410	            cmp qword [rsp + 0x10], rax 	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40004a9	     0xf8476030000	                            je 0x4000825	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40004af	        0x4c8d7001	                      lea r14, [rax + 1]	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40004b3	          0xc6003b	                    mov byte [rax], 0x3b	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40004b6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40004bb	          0x4489e9	                           mov ecx, r13d	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40004be	            0x31c0	                            xor eax, eax	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40004c0	      0xba00000000	                              mov edx, 0	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40004c5	          0x4c89f7	                            mov rdi, r14	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40004c8	        0x4183c501	                             add r13d, 1	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40004cc	          0x4c29f6	                            sub rsi, r14	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40004cf	      0xe800000000	                          call 0x40004d4	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40004d4	            0x4898	                                    cdqe	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40004d6	          0x4c01f0	                            add rax, r14	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40004d9	          0x4585e4	                         test r12d, r12d	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40004dc	     0xf8414020000	                            je 0x40006f6	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40004e2	            0x89da	                            mov edx, ebx	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40004e4	          0x4489e9	                           mov ecx, r13d	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40004e7	            0x89ee	                            mov esi, ebp	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40004e9	            0xd3e2	                             shl edx, cl	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40004eb	          0x4485e2	                          test edx, r12d	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x40004ee	            0x75a4	                           jne 0x4000494	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x40004f0	        0x4183c501	                             add r13d, 1	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40004f4	            0xeb92	                           jmp 0x4000488	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40004f6	        0x4183fc01	                             cmp r12d, 1	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x40004fa	     0xf8ec0010000	                           jle 0x40006c0	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000500	      0xba02000000	                              mov edx, 2	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000505	      0xbe00000000	                              mov esi, 0	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400050a	          0x4c89ef	                            mov rdi, r13	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400050d	      0xe800000000	                          call 0x4000512	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000512	            0x85c0	                           test eax, eax	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000514	    0xc74424080000	                  mov dword [rsp + 8], 0	       144	color.c	FUNCTION_4
0x400051c	            0x7532	                           jne 0x4000550	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400051e	          0x4c89fa	                            mov rdx, r15	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000521	        0x498d4502	                      lea rax, [r13 + 2]	       525	git-compat-util.h	FUNCTION_44	IF_1
0x4000525	        0x4883ea02	                              sub rdx, 2	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000529	     0xf84ac010000	                            je 0x40006db	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400052f	      0x41807d022d	                cmp byte [r13 + 2], 0x2d	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000534	     0xf858a020000	                           jne 0x40007c4	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400053a	        0x4983c503	                              add r13, 3	       525	git-compat-util.h	FUNCTION_44	IF_1
0x400053e	        0x4983ef03	                              sub r15, 3	       526	git-compat-util.h	FUNCTION_44	IF_1
0x4000542	    0xc74424080100	                  mov dword [rsp + 8], 1	       149	color.c	FUNCTION_4	IF_1
0x400054a	    0x660f1f440000	                    nop word [rax + rax]	       149	color.c	FUNCTION_4	IF_1
0x4000550	            0x31c9	                            xor ecx, ecx	       225	color.c	FUNCTION_8	WHILE_2
0x4000552	        0x48891c24	                    mov qword [rsp], rbx	       225	color.c	FUNCTION_8	WHILE_2
0x4000556	    0x41be00000000	                             mov r14d, 0	       225	color.c	FUNCTION_8	WHILE_2
0x400055c	          0x4c89fb	                            mov rbx, r15	       225	color.c	FUNCTION_8	WHILE_2
0x400055f	    0x41bc00000000	                             mov r12d, 0	       225	color.c	FUNCTION_8	WHILE_2
0x4000565	          0x4d89ef	                            mov r15, r13	       225	color.c	FUNCTION_8	WHILE_2
0x4000568	      0xb804000000	                              mov eax, 4	       225	color.c	FUNCTION_8	WHILE_2
0x400056d	          0x4189cd	                           mov r13d, ecx	       225	color.c	FUNCTION_8	WHILE_2
0x4000570	            0xeb16	                           jmp 0x4000588	       225	color.c	FUNCTION_8	WHILE_2
0x4000572	    0x660f1f440000	                    nop word [rax + rax]	       225	color.c	FUNCTION_8	WHILE_2
0x4000578	        0x4183c501	                             add r13d, 1	       152	color.c	FUNCTION_4	FOR_1
0x400057c	          0x4d39f4	                            cmp r12, r14	       152	color.c	FUNCTION_4	FOR_1
0x400057f	            0x745f	                            je 0x40005e0	       152	color.c	FUNCTION_4	FOR_1
0x4000581	          0x498b06	                    mov rax, qword [r14]	       152	color.c	FUNCTION_4	FOR_1
0x4000584	        0x4983c618	                           add r14, 0x18	       152	color.c	FUNCTION_4	FOR_1
0x4000588	          0x4839c3	                            cmp rbx, rax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400058b	            0x75eb	                           jne 0x4000578	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400058d	        0x498b7ee0	             mov rdi, qword [r14 - 0x20]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000591	          0x4889da	                            mov rdx, rbx	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000594	          0x4c89fe	                            mov rsi, r15	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000597	      0xe800000000	                          call 0x400059c	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400059c	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400059e	            0x75d8	                           jne 0x4000578	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40005a0	          0x4d63fd	                        movsxd r15, r13d	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40005a3	      0x448b442408	                mov r8d, dword [rsp + 8]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40005a8	        0x488b1c24	                    mov rbx, qword [rsp]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40005ac	        0x4b8d047f	                  lea rax, [r15 + r15*2]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40005b0	    0x488d04c50000	                        lea rax, [rax*8]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40005b8	          0x4585c0	                           test r8d, r8d	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40005bb	          0x8b4814	            mov ecx, dword [rax + 0x14] 	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40005be	         0xf444810	           cmove ecx, dword [rax + 0x10]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40005c2	            0x85c9	                           test ecx, ecx	       250	color.c	FUNCTION_8	WHILE_2	IF_6
0x40005c4	            0x781a	                            js 0x40005e0	       250	color.c	FUNCTION_8	WHILE_2	IF_6
0x40005c6	      0xb801000000	                              mov eax, 1	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x40005cb	            0xd3e0	                             shl eax, cl	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x40005cd	         0x9442424	              or dword [rsp + 0x24], eax	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x40005d1	      0xe93efdffff	                           jmp 0x4000314	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x40005d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x40005e0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_65
0x40005e5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_65
0x40005ea	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_65
0x40005ec	      0xe800000000	                          call 0x40005f1	        54	gettext.h	FUNCTION_65
0x40005f1	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       296	color.c	FUNCTION_8	CALL_12
0x40005f6	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       296	color.c	FUNCTION_8	CALL_12
0x40005fa	          0x4889c7	                            mov rdi, rax	       296	color.c	FUNCTION_8	CALL_12
0x40005fd	            0x31c0	                            xor eax, eax	       296	color.c	FUNCTION_8	CALL_12
0x40005ff	      0xe800000000	                          call 0x4000604	       296	color.c	FUNCTION_8	CALL_12
0x4000604	      0xb8ffffffff	                     mov eax, 0xffffffff	       296	color.c	FUNCTION_8	CALL_12
0x4000609	      0xe922fcffff	                           jmp 0x4000230	       296	color.c	FUNCTION_8	CALL_12
0x400060e	            0x6690	                                     nop	       296	color.c	FUNCTION_8	CALL_12
0x4000610	      0x41807d0023	                    cmp byte [r13], 0x23	        82	color.c	FUNCTION_3	IF_2
0x4000615	     0xf8540fdffff	                           jne 0x400035b	        82	color.c	FUNCTION_3	IF_2
0x400061b	      0x410fb64501	               movzx eax, byte [r13 + 1]	      1273	cache.h	FUNCTION_90
0x4000620	     0xfbe80000000	                   movsx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x4000627	          0xc1e004	                              shl eax, 4	        57	color.c	FUNCTION_2	CALL_2
0x400062a	            0x89c2	                            mov edx, eax	        57	color.c	FUNCTION_2	CALL_2
0x400062c	      0x410fb64502	               movzx eax, byte [r13 + 2]	      1273	cache.h	FUNCTION_90
0x4000631	     0xfbe80000000	                   movsx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x4000638	             0x9d0	                             or eax, edx	        57	color.c	FUNCTION_2	CALL_2
0x400063a	      0xa900ffffff	                    test eax, 0xffffff00	        58	color.c	FUNCTION_2	IF_1
0x400063f	     0xf8516fdffff	                           jne 0x400035b	        58	color.c	FUNCTION_2	IF_1
0x4000645	        0x88442408	                  mov byte [rsp + 8], al	        60	color.c	FUNCTION_2
0x4000649	      0x410fb64503	               movzx eax, byte [r13 + 3]	      1273	cache.h	FUNCTION_90
0x400064e	     0xfbe80000000	                   movsx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x4000655	          0xc1e004	                              shl eax, 4	        57	color.c	FUNCTION_2	CALL_2
0x4000658	            0x89c2	                            mov edx, eax	        57	color.c	FUNCTION_2	CALL_2
0x400065a	      0x410fb64504	               movzx eax, byte [r13 + 4]	      1273	cache.h	FUNCTION_90
0x400065f	     0xfbe80000000	                   movsx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x4000666	             0x9d0	                             or eax, edx	        57	color.c	FUNCTION_2	CALL_2
0x4000668	      0xa900ffffff	                    test eax, 0xffffff00	        58	color.c	FUNCTION_2	IF_1
0x400066d	     0xf85e8fcffff	                           jne 0x400035b	        58	color.c	FUNCTION_2	IF_1
0x4000673	          0x880424	                      mov byte [rsp], al	        60	color.c	FUNCTION_2
0x4000676	      0x410fb64505	               movzx eax, byte [r13 + 5]	      1273	cache.h	FUNCTION_90
0x400067b	     0xfbe90000000	                   movsx edx, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x4000682	      0x410fb64506	               movzx eax, byte [r13 + 6]	      1273	cache.h	FUNCTION_90
0x4000687	     0xfbe80000000	                   movsx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x400068e	          0xc1e204	                              shl edx, 4	        57	color.c	FUNCTION_2	CALL_2
0x4000691	             0x9c2	                             or edx, eax	        57	color.c	FUNCTION_2	CALL_2
0x4000693	    0xf7c200ffffff	                    test edx, 0xffffff00	        58	color.c	FUNCTION_2	IF_1
0x4000699	     0xf85bcfcffff	                           jne 0x400035b	        58	color.c	FUNCTION_2	IF_1
0x400069f	            0x31c0	                            xor eax, eax	       224	color.c	FUNCTION_8	WHILE_2
0x40006a1	      0xb904000000	                              mov ecx, 4	        86	color.c	FUNCTION_3	IF_2	IF_3
0x40006a6	      0xe940fcffff	                           jmp 0x40002eb	        86	color.c	FUNCTION_3	IF_2	IF_3
0x40006ab	       0xf1f440000	                   nop dword [rax + rax]	        86	color.c	FUNCTION_3	IF_2	IF_3
0x40006b0	          0x4489f0	                           mov eax, r14d	        95	color.c	FUNCTION_3	FOR_1	IF_4
0x40006b3	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x40006b5	      0xb902000000	                              mov ecx, 2	        94	color.c	FUNCTION_3	FOR_1	IF_4
0x40006ba	      0xe92cfcffff	                           jmp 0x40002eb	        94	color.c	FUNCTION_3	FOR_1	IF_4
0x40006bf	              0x90	                                     nop	        94	color.c	FUNCTION_3	FOR_1	IF_4
0x40006c0	    0xc74424080000	                  mov dword [rsp + 8], 0	       144	color.c	FUNCTION_4
0x40006c8	      0xe983feffff	                           jmp 0x4000550	       144	color.c	FUNCTION_4
0x40006cd	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x40006cf	            0x31c0	                            xor eax, eax	       224	color.c	FUNCTION_8	WHILE_2
0x40006d1	      0xb901000000	                              mov ecx, 1	       110	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x40006d6	      0xe910fcffff	                           jmp 0x40002eb	       110	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x40006db	          0x4531ff	                          xor r15d, r15d	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x40006de	          0x4989c5	                            mov r13, rax	       525	git-compat-util.h	FUNCTION_44	IF_1
0x40006e1	    0xc74424080100	                  mov dword [rsp + 8], 1	       149	color.c	FUNCTION_4	IF_1
0x40006e9	      0xe962feffff	                           jmp 0x4000550	       149	color.c	FUNCTION_4	IF_1
0x40006ee	          0x4989c6	                            mov r14, rax	       149	color.c	FUNCTION_4	IF_1
0x40006f1	      0xe9c0fdffff	                           jmp 0x40004b6	       149	color.c	FUNCTION_4	IF_1
0x40006f6	      0x837c243001	               cmp dword [rsp + 0x30], 1	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x40006fb	     0xf8630010000	                           jbe 0x4000831	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x4000701	            0x85ed	                           test ebp, ebp	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x4000703	     0xf8443010000	                            je 0x400084c	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x4000709	      0x4839442410	            cmp qword [rsp + 0x10], rax 	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x400070e	     0xf8411010000	                            je 0x4000825	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x4000714	        0x488d7801	                      lea rdi, [rax + 1]	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x4000718	          0xc6003b	                    mov byte [rax], 0x3b	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x400071b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x4000720	      0x488d542430	                   lea rdx, [rsp + 0x30]	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x4000725	      0xb933000000	                           mov ecx, 0x33	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x400072a	          0x4829fe	                            sub rsi, rdi	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x400072d	      0xe8bef9ffff	                   call sym.color_output	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x4000732	      0x837c244001	               cmp dword [rsp + 0x40], 1	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000737	            0x7629	                           jbe 0x4000762	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000739	      0x4839442410	            cmp qword [rsp + 0x10], rax 	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400073e	     0xf84e1000000	                            je 0x4000825	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000744	        0x488d7801	                      lea rdi, [rax + 1]	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000748	          0xc6003b	                    mov byte [rax], 0x3b	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400074b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x4000750	      0x488d542440	                   lea rdx, [rsp + 0x40]	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x4000755	      0xb934000000	                           mov ecx, 0x34	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x400075a	          0x4829fe	                            sub rsi, rdi	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x400075d	      0xe88ef9ffff	                   call sym.color_output	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x4000762	      0x483b442410	            cmp rax, qword [rsp + 0x10] 	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000767	     0xf84b8000000	                            je 0x4000825	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x400076d	        0x488d4801	                      lea rcx, [rax + 1]	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000771	          0xc6006d	                    mov byte [rax], 0x6d	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000774	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000779	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       293	color.c	FUNCTION_8
0x400077e	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       293	color.c	FUNCTION_8
0x4000783	          0x4839c8	                            cmp rax, rcx	       293	color.c	FUNCTION_8
0x4000786	     0xf8499000000	                            je 0x4000825	       293	color.c	FUNCTION_8
0x400078c	          0xc60000	                       mov byte [rax], 0	       293	color.c	FUNCTION_8
0x400078f	            0x31c0	                            xor eax, eax	       294	color.c	FUNCTION_8
0x4000791	      0xe99afaffff	                           jmp 0x4000230	       294	color.c	FUNCTION_8
0x4000796	        0x8b542430	            mov edx, dword [rsp + 0x30] 	       294	color.c	FUNCTION_8
0x400079a	          0x83fa01	                              cmp edx, 1	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x400079d	            0x7675	                           jbe 0x4000814	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x400079f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x40007a4	          0x83fa01	                              cmp edx, 1	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x40007a7	          0xc6001b	                    mov byte [rax], 0x1b	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x40007aa	        0x488d7802	                      lea rdi, [rax + 2]	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40007ae	        0xc640015b	                mov byte [rax + 1], 0x5b	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40007b2	     0xf8763ffffff	                            ja 0x400071b	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x40007b8	      0x837c244001	               cmp dword [rsp + 0x40], 1	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x40007bd	          0x4889f8	                            mov rax, rdi	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40007c0	            0x7789	                            ja 0x400074b	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x40007c2	            0xeb9e	                           jmp 0x4000762	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x40007c4	          0x4989d7	                            mov r15, rdx	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x40007c7	          0x4989c5	                            mov r13, rax	       525	git-compat-util.h	FUNCTION_44	IF_1
0x40007ca	    0xc74424080100	                  mov dword [rsp + 8], 1	       149	color.c	FUNCTION_4	IF_1
0x40007d2	      0xe979fdffff	                           jmp 0x4000550	       149	color.c	FUNCTION_4	IF_1
0x40007d7	     0xf8449faffff	                            je 0x4000226	       211	color.c	FUNCTION_8	IF_1
0x40007dd	      0x4863542420	         movsxd rdx, dword [rsp + 0x20] 	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40007e2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40007e7	      0xbe00000000	                              mov esi, 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40007ec	      0xe800000000	                          call 0x40007f1	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40007f1	            0x31d2	                            xor edx, edx	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40007f3	            0x85c0	                           test eax, eax	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40007f5	            0x751d	                           jne 0x4000814	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40007f7	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x40007fc	      0xba00000000	                              mov edx, 0	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x4000801	      0xbe4b000000	                           mov esi, 0x4b	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x4000806	            0x31c0	                            xor eax, eax	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x4000808	      0xe800000000	                          call 0x400080d	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x400080d	            0x31c0	                            xor eax, eax	       218	color.c	FUNCTION_8	IF_2
0x400080f	      0xe91cfaffff	                           jmp 0x4000230	       218	color.c	FUNCTION_8	IF_2
0x4000814	      0x837c244001	               cmp dword [rsp + 0x40], 1	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x4000819	            0x7784	                            ja 0x400079f	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x400081b	      0xe959ffffff	                           jmp 0x4000779	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x4000820	      0xe800000000	                          call 0x4000825	       298	color.c	FUNCTION_8
0x4000825	      0xbf00000000	                              mov edi, 0	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x400082a	            0x31c0	                            xor eax, eax	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x400082c	      0xe800000000	                          call 0x4000831	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000831	      0x837c244001	               cmp dword [rsp + 0x40], 1	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000836	     0xf8626ffffff	                           jbe 0x4000762	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x400083c	            0x85ed	                           test ebp, ebp	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400083e	     0xf85f5feffff	                           jne 0x4000739	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000844	          0x4889c7	                            mov rdi, rax	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000847	      0xe9fffeffff	                           jmp 0x400074b	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400084c	          0x4889c7	                            mov rdi, rax	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400084f	      0xe9c7feffff	                           jmp 0x400071b	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
color_is_nil	CALL,1:DO,0:SWITCH,0:FOR,0:WHILE,0:ELSE,0:IF,0:functions,0	18
0x4000c50	           0xfb617	                   movzx edx, byte [rdi]	       421	color.c	FUNCTION_18	CALL_1
0x4000c53	      0xb84e000000	                           mov eax, 0x4e	       421	color.c	FUNCTION_18	CALL_1
0x4000c58	            0x29d0	                            sub eax, edx	       421	color.c	FUNCTION_18	CALL_1
0x4000c5a	            0x7520	                           jne 0x4000c7c	       421	color.c	FUNCTION_18	CALL_1
0x4000c5c	         0xfb65701	               movzx edx, byte [rdi + 1]	       421	color.c	FUNCTION_18	CALL_1
0x4000c60	      0xb849000000	                           mov eax, 0x49	       421	color.c	FUNCTION_18	CALL_1
0x4000c65	            0x29d0	                            sub eax, edx	       421	color.c	FUNCTION_18	CALL_1
0x4000c67	            0x7513	                           jne 0x4000c7c	       421	color.c	FUNCTION_18	CALL_1
0x4000c69	         0xfb65702	               movzx edx, byte [rdi + 2]	       421	color.c	FUNCTION_18	CALL_1
0x4000c6d	      0xb84c000000	                           mov eax, 0x4c	       421	color.c	FUNCTION_18	CALL_1
0x4000c72	            0x29d0	                            sub eax, edx	       421	color.c	FUNCTION_18	CALL_1
0x4000c74	            0x7506	                           jne 0x4000c7c	       421	color.c	FUNCTION_18	CALL_1
0x4000c76	         0xfb64703	               movzx eax, byte [rdi + 3]	       421	color.c	FUNCTION_18	CALL_1
0x4000c7a	            0xf7d8	                                 neg eax	       421	color.c	FUNCTION_18	CALL_1
0x4000c7c	            0x85c0	                           test eax, eax	       421	color.c	FUNCTION_18	CALL_1
0x4000c7e	           0xf94c0	                                 sete al	       421	color.c	FUNCTION_18	CALL_1
0x4000c81	           0xfb6c0	                           movzx eax, al	       421	color.c	FUNCTION_18	CALL_1
0x4000c84	              0xc3	                                     ret	       422	color.c	FUNCTION_18
color_fprintf_ln	CALL,3:DO,0:SWITCH,0:FOR,0:WHILE,0:ELSE,0:IF,0:functions,0	32
0x4000b90	    0x4881ecd80000	                           sub rsp, 0xd8	       410	color.c	FUNCTION_17
0x4000b97	            0x84c0	                             test al, al	       410	color.c	FUNCTION_17
0x4000b99	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       410	color.c	FUNCTION_17
0x4000b9e	      0x4c89442440	              mov qword [rsp + 0x40], r8	       410	color.c	FUNCTION_17
0x4000ba3	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       410	color.c	FUNCTION_17
0x4000ba8	            0x7437	                            je 0x4000be1	       410	color.c	FUNCTION_17
0x4000baa	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       410	color.c	FUNCTION_17
0x4000baf	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       410	color.c	FUNCTION_17
0x4000bb4	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       410	color.c	FUNCTION_17
0x4000bb9	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       410	color.c	FUNCTION_17
0x4000bc1	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       410	color.c	FUNCTION_17
0x4000bc9	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       410	color.c	FUNCTION_17
0x4000bd1	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       410	color.c	FUNCTION_17
0x4000bd9	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       410	color.c	FUNCTION_17
0x4000be1	    0x64488b042528	                mov rax, qword fs:[0x28]	       410	color.c	FUNCTION_17
0x4000bea	      0x4889442418	             mov qword [rsp + 0x18], rax	       410	color.c	FUNCTION_17
0x4000bef	            0x31c0	                            xor eax, eax	       410	color.c	FUNCTION_17
0x4000bf1	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       413	color.c	FUNCTION_17	CALL_1
0x4000bf9	          0x4889e1	                            mov rcx, rsp	       414	color.c	FUNCTION_17	CALL_2
0x4000bfc	    0x41b800000000	                              mov r8d, 0	       414	color.c	FUNCTION_17	CALL_2
0x4000c02	      0x4889442408	                mov qword [rsp + 8], rax	       413	color.c	FUNCTION_17	CALL_1
0x4000c07	      0x488d442420	                   lea rax, [rsp + 0x20]	       413	color.c	FUNCTION_17	CALL_1
0x4000c0c	    0xc70424180000	                   mov dword [rsp], 0x18	       413	color.c	FUNCTION_17	CALL_1
0x4000c13	    0xc74424043000	               mov dword [rsp + 4], 0x30	       413	color.c	FUNCTION_17	CALL_1
0x4000c1b	      0x4889442410	             mov qword [rsp + 0x10], rax	       413	color.c	FUNCTION_17	CALL_1
0x4000c20	      0xe81bf4ffff	                 call sym.color_vfprintf	       414	color.c	FUNCTION_17	CALL_2
0x4000c25	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       417	color.c	FUNCTION_17
0x4000c2a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       417	color.c	FUNCTION_17
0x4000c33	            0x7508	                           jne 0x4000c3d	       417	color.c	FUNCTION_17
0x4000c35	    0x4881c4d80000	                           add rsp, 0xd8	       417	color.c	FUNCTION_17
0x4000c3c	              0xc3	                                     ret	       417	color.c	FUNCTION_17
0x4000c3d	      0xe800000000	                          call 0x4000c42	       417	color.c	FUNCTION_17
color_parse	CALL,2:DO,0:SWITCH,0:FOR,0:WHILE,0:ELSE,0:IF,0:functions,0	13
0x4000860	              0x55	                                push rbp	       160	color.c	FUNCTION_5
0x4000861	              0x53	                                push rbx	       160	color.c	FUNCTION_5
0x4000862	          0x4889f5	                            mov rbp, rsi	       160	color.c	FUNCTION_5
0x4000865	          0x4889fb	                            mov rbx, rdi	       160	color.c	FUNCTION_5
0x4000868	        0x4883ec08	                              sub rsp, 8	       160	color.c	FUNCTION_5
0x400086c	      0xe800000000	                          call 0x4000871	       161	color.c	FUNCTION_5	CALL_2
0x4000871	        0x4883c408	                              add rsp, 8	       162	color.c	FUNCTION_5
0x4000875	          0x4889ea	                            mov rdx, rbp	       161	color.c	FUNCTION_5	CALL_2
0x4000878	          0x4889df	                            mov rdi, rbx	       161	color.c	FUNCTION_5	CALL_2
0x400087b	              0x5b	                                 pop rbx	       162	color.c	FUNCTION_5
0x400087c	              0x5d	                                 pop rbp	       162	color.c	FUNCTION_5
0x400087d	            0x89c6	                            mov esi, eax	       161	color.c	FUNCTION_5	CALL_2
0x400087f	      0xe91cf9ffff	                 jmp sym.color_parse_mem	       161	color.c	FUNCTION_5	CALL_2
