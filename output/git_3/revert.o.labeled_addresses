option_parse_x	IF,1:ELSE,0:functions,0:FOR,0:CALL,2:SWITCH,0:DO,0:WHILE,0	51
0x4000040	            0x85d2	                           test edx, edx	        50	revert.c	FUNCTION_3	IF_1
0x4000042	            0x757c	                           jne 0x40000c0	        50	revert.c	FUNCTION_3	IF_1
0x4000044	              0x55	                                push rbp	        46	revert.c	FUNCTION_3
0x4000045	              0x53	                                push rbx	        46	revert.c	FUNCTION_3
0x4000046	          0x4889f5	                            mov rbp, rsi	        46	revert.c	FUNCTION_3
0x4000049	        0x4883ec08	                              sub rsp, 8	        46	revert.c	FUNCTION_3
0x400004d	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        48	revert.c	FUNCTION_3
0x4000051	          0x488b18	                    mov rbx, qword [rax]	        48	revert.c	FUNCTION_3
0x4000054	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	        53	revert.c	FUNCTION_3	CALL_1
0x4000058	        0x488b4358	            mov rax, qword [rbx + 0x58] 	        53	revert.c	FUNCTION_3	CALL_1
0x400005c	        0x488d5101	                      lea rdx, [rcx + 1]	        53	revert.c	FUNCTION_3	CALL_1
0x4000060	          0x4839c2	                            cmp rdx, rax	        53	revert.c	FUNCTION_3	CALL_1
0x4000063	            0x7673	                           jbe 0x40000d8	        53	revert.c	FUNCTION_3	CALL_1
0x4000065	      0x488d444030	          lea rax, [rax + rax*2 + 0x30] 	        53	revert.c	FUNCTION_3	CALL_1
0x400006a	          0x48d1e8	                              shr rax, 1	        53	revert.c	FUNCTION_3	CALL_1
0x400006d	          0x4839c2	                            cmp rdx, rax	        53	revert.c	FUNCTION_3	CALL_1
0x4000070	            0x7656	                           jbe 0x40000c8	        53	revert.c	FUNCTION_3	CALL_1
0x4000072	        0x48895358	             mov qword [rbx + 0x58], rdx	        53	revert.c	FUNCTION_3	CALL_1
0x4000076	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_23	IF_1
0x4000080	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_23	IF_1
0x4000083	            0x7759	                            ja 0x40000de	       795	git-compat-util.h	FUNCTION_23	IF_1
0x4000085	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	        53	revert.c	FUNCTION_3	CALL_1
0x4000089	    0x488d34d50000	                        lea rsi, [rdx*8]	        53	revert.c	FUNCTION_3	CALL_1
0x4000091	      0xe800000000	                          call 0x4000096	        53	revert.c	FUNCTION_3	CALL_1
0x4000096	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	        53	revert.c	FUNCTION_3	CALL_1
0x400009a	        0x48894348	             mov qword [rbx + 0x48], rax	        53	revert.c	FUNCTION_3	CALL_1
0x400009e	        0x488d5101	                      lea rdx, [rcx + 1]	        53	revert.c	FUNCTION_3	CALL_1
0x40000a2	        0x48895350	             mov qword [rbx + 0x50], rdx	        54	revert.c	FUNCTION_3	CALL_2
0x40000a6	        0x488d1cc8	                  lea rbx, [rax + rcx*8]	        54	revert.c	FUNCTION_3	CALL_2
0x40000aa	          0x4889ef	                            mov rdi, rbp	        54	revert.c	FUNCTION_3	CALL_2
0x40000ad	      0xe800000000	                          call 0x40000b2	        54	revert.c	FUNCTION_3	CALL_2
0x40000b2	          0x488903	                    mov qword [rbx], rax	        54	revert.c	FUNCTION_3	CALL_2
0x40000b5	        0x4883c408	                              add rsp, 8	        56	revert.c	FUNCTION_3
0x40000b9	            0x31c0	                            xor eax, eax	        56	revert.c	FUNCTION_3
0x40000bb	              0x5b	                                 pop rbx	        56	revert.c	FUNCTION_3
0x40000bc	              0x5d	                                 pop rbp	        56	revert.c	FUNCTION_3
0x40000bd	              0xc3	                                     ret	        56	revert.c	FUNCTION_3
0x40000be	            0x6690	                                     nop	        56	revert.c	FUNCTION_3
0x40000c0	            0x31c0	                            xor eax, eax	        56	revert.c	FUNCTION_3
0x40000c2	              0xc3	                                     ret	        56	revert.c	FUNCTION_3
0x40000c3	       0xf1f440000	                   nop dword [rax + rax]	        56	revert.c	FUNCTION_3
0x40000c8	        0x48894358	             mov qword [rbx + 0x58], rax	        53	revert.c	FUNCTION_3	CALL_1
0x40000cc	          0x4889c2	                            mov rdx, rax	        53	revert.c	FUNCTION_3	CALL_1
0x40000cf	            0xeba5	                           jmp 0x4000076	        53	revert.c	FUNCTION_3	CALL_1
0x40000d1	     0xf1f80000000	                         nop dword [rax]	        53	revert.c	FUNCTION_3	CALL_1
0x40000d8	        0x488b4348	            mov rax, qword [rbx + 0x48] 	        53	revert.c	FUNCTION_3	CALL_1
0x40000dc	            0xebc4	                           jmp 0x40000a2	        53	revert.c	FUNCTION_3	CALL_1
0x40000de	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_23	IF_1	CALL_1
0x40000e3	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_23	IF_1	CALL_1
0x40000e8	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_23	IF_1	CALL_1
0x40000ea	      0xe800000000	                          call 0x40000ef	       796	git-compat-util.h	FUNCTION_23	IF_1	CALL_1
verify_opt_compatible	IF,2:ELSE,0:functions,0:FOR,0:CALL,6:SWITCH,0:DO,0:WHILE,1	75
0x4000170	            0x4154	                                push r12	        78	revert.c	FUNCTION_5
0x4000172	              0x55	                                push rbp	        78	revert.c	FUNCTION_5
0x4000173	          0x4989f4	                            mov r12, rsi	        78	revert.c	FUNCTION_5
0x4000176	              0x53	                                push rbx	        78	revert.c	FUNCTION_5
0x4000177	          0x4889fd	                            mov rbp, rdi	        78	revert.c	FUNCTION_5
0x400017a	            0x31f6	                            xor esi, esi	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x400017c	        0x4883ec50	                           sub rsp, 0x50	        78	revert.c	FUNCTION_5
0x4000180	    0x64488b042528	                mov rax, qword fs:[0x28]	        78	revert.c	FUNCTION_5
0x4000189	      0x4889442418	             mov qword [rsp + 0x18], rax	        78	revert.c	FUNCTION_5
0x400018e	            0x31c0	                            xor eax, eax	        78	revert.c	FUNCTION_5
0x4000190	      0x488d442470	                   lea rax, [rsp + 0x70]	        82	revert.c	FUNCTION_5	CALL_1
0x4000195	      0x4889542430	             mov qword [rsp + 0x30], rdx	        78	revert.c	FUNCTION_5
0x400019a	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        78	revert.c	FUNCTION_5
0x400019f	      0x4c89442440	              mov qword [rsp + 0x40], r8	        78	revert.c	FUNCTION_5
0x40001a4	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        78	revert.c	FUNCTION_5
0x40001a9	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	        78	revert.c	FUNCTION_5
0x40001ae	      0x4889442408	                mov qword [rsp + 8], rax	        82	revert.c	FUNCTION_5	CALL_1
0x40001b3	      0x488d442420	                   lea rax, [rsp + 0x20]	        82	revert.c	FUNCTION_5	CALL_1
0x40001b8	    0xc70424100000	                   mov dword [rsp], 0x10	        82	revert.c	FUNCTION_5	CALL_1
0x40001bf	      0xba10000000	                           mov edx, 0x10	        82	revert.c	FUNCTION_5	CALL_1
0x40001c4	      0x4889442410	             mov qword [rsp + 0x10], rax	        82	revert.c	FUNCTION_5	CALL_1
0x40001c9	            0xeb2f	                           jmp 0x40001fa	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001cb	       0xf1f440000	                   nop dword [rax + rax]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001d0	            0x89d6	                            mov esi, edx	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001d2	          0x8d4208	                      lea eax, [rdx + 8]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001d5	      0x488b5c3420	      mov rbx, qword [rsp + rsi + 0x20] 	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001da	          0x4885db	                           test rbx, rbx	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001dd	            0x7461	                            je 0x4000240	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001df	          0x83f82f	                           cmp eax, 0x2f	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001e2	            0x777a	                            ja 0x400025e	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001e4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001e9	          0x83c210	                           add edx, 0x10	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001ec	      0xbe01000000	                              mov esi, 1	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001f1	          0x4801f8	                            add rax, rdi	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001f4	            0x8b00	                    mov eax, dword [rax]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001f6	            0x85c0	                           test eax, eax	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001f8	            0x751b	                           jne 0x4000215	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001fa	          0x83fa2f	                           cmp edx, 0x2f	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001fd	            0x76d1	                           jbe 0x40001d0	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001ff	          0x488b19	                    mov rbx, qword [rcx]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000202	        0x488d4108	                      lea rax, [rcx + 8]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000206	          0x4885db	                           test rbx, rbx	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000209	            0x7435	                            je 0x4000240	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x400020b	        0x488d4808	                      lea rcx, [rax + 8]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x400020f	            0x8b00	                    mov eax, dword [rax]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x4000211	            0x85c0	                           test eax, eax	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x4000213	            0x74e5	                            je 0x40001fa	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x4000215	          0x4084f6	                           test sil, sil	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x4000218	            0x753f	                           jne 0x4000259	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x400021a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_38
0x400021f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_38
0x4000224	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_38
0x4000226	      0xe800000000	                          call 0x400022b	        54	gettext.h	FUNCTION_38
0x400022b	          0x4c89e1	                            mov rcx, r12	        90	revert.c	FUNCTION_5	CALL_6
0x400022e	          0x4889c7	                            mov rdi, rax	        90	revert.c	FUNCTION_5	CALL_6
0x4000231	          0x4889da	                            mov rdx, rbx	        90	revert.c	FUNCTION_5	CALL_6
0x4000234	          0x4889ee	                            mov rsi, rbp	        90	revert.c	FUNCTION_5	CALL_6
0x4000237	            0x31c0	                            xor eax, eax	        90	revert.c	FUNCTION_5	CALL_6
0x4000239	      0xe800000000	                          call 0x400023e	        90	revert.c	FUNCTION_5	CALL_6
0x400023e	            0x6690	                                     nop	        90	revert.c	FUNCTION_5	CALL_6
0x4000240	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        91	revert.c	FUNCTION_5
0x4000245	    0x644833042528	                xor rax, qword fs:[0x28]	        91	revert.c	FUNCTION_5
0x400024e	            0x751a	                           jne 0x400026a	        91	revert.c	FUNCTION_5
0x4000250	        0x4883c450	                           add rsp, 0x50	        91	revert.c	FUNCTION_5
0x4000254	              0x5b	                                 pop rbx	        91	revert.c	FUNCTION_5
0x4000255	              0x5d	                                 pop rbp	        91	revert.c	FUNCTION_5
0x4000256	            0x415c	                                 pop r12	        91	revert.c	FUNCTION_5
0x4000258	              0xc3	                                     ret	        91	revert.c	FUNCTION_5
0x4000259	          0x891424	                    mov dword [rsp], edx	        91	revert.c	FUNCTION_5
0x400025c	            0xebbc	                           jmp 0x400021a	        91	revert.c	FUNCTION_5
0x400025e	            0x89c2	                            mov edx, eax	        91	revert.c	FUNCTION_5
0x4000260	      0xbe01000000	                              mov esi, 1	        91	revert.c	FUNCTION_5
0x4000265	          0x4889c8	                            mov rax, rcx	        91	revert.c	FUNCTION_5
0x4000268	            0xeba1	                           jmp 0x400020b	        91	revert.c	FUNCTION_5
0x400026a	      0xe800000000	                          call 0x400026f	        91	revert.c	FUNCTION_5
cmd_cherry_pick	IF,1:ELSE,0:functions,0:FOR,0:CALL,4:SWITCH,0:DO,0:WHILE,0	36
0x4000bb0	              0x55	                                push rbp	       219	revert.c	FUNCTION_8
0x4000bb1	              0x53	                                push rbx	       219	revert.c	FUNCTION_8
0x4000bb2	      0xb911000000	                           mov ecx, 0x11	       220	revert.c	FUNCTION_8
0x4000bb7	            0x89fb	                            mov ebx, edi	       219	revert.c	FUNCTION_8
0x4000bb9	          0x4889f5	                            mov rbp, rsi	       219	revert.c	FUNCTION_8
0x4000bbc	    0x4881ec980000	                           sub rsp, 0x98	       219	revert.c	FUNCTION_8
0x4000bc3	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	revert.c	FUNCTION_8
0x4000bcc	    0x488984248800	             mov qword [rsp + 0x88], rax	       219	revert.c	FUNCTION_8
0x4000bd4	            0x31c0	                            xor eax, eax	       219	revert.c	FUNCTION_8
0x4000bd6	          0x4889e7	                            mov rdi, rsp	       220	revert.c	FUNCTION_8
0x4000bd9	          0xf348ab	              rep stosq qword [rdi], rax	       220	revert.c	FUNCTION_8
0x4000bdc	          0x4889e7	                            mov rdi, rsp	       224	revert.c	FUNCTION_8	CALL_1
0x4000bdf	    0x48c744247000	               mov qword [rsp + 0x70], 0	       220	revert.c	FUNCTION_8
0x4000be8	    0xc70424010000	                      mov dword [rsp], 1	       223	revert.c	FUNCTION_8
0x4000bef	      0xe800000000	                          call 0x4000bf4	       224	revert.c	FUNCTION_8	CALL_1
0x4000bf4	          0x4889e2	                            mov rdx, rsp	       225	revert.c	FUNCTION_8	CALL_2
0x4000bf7	          0x4889ee	                            mov rsi, rbp	       225	revert.c	FUNCTION_8	CALL_2
0x4000bfa	            0x89df	                            mov edi, ebx	       225	revert.c	FUNCTION_8	CALL_2
0x4000bfc	      0xe86ff6ffff	                  call sym.run_sequencer	       225	revert.c	FUNCTION_8	CALL_2
0x4000c01	            0x85c0	                           test eax, eax	       226	revert.c	FUNCTION_8	IF_1
0x4000c03	            0x781d	                            js 0x4000c22	       226	revert.c	FUNCTION_8	IF_1
0x4000c05	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	       229	revert.c	FUNCTION_8
0x4000c0d	    0x644833142528	                xor rdx, qword fs:[0x28]	       229	revert.c	FUNCTION_8
0x4000c16	            0x7525	                           jne 0x4000c3d	       229	revert.c	FUNCTION_8
0x4000c18	    0x4881c4980000	                           add rsp, 0x98	       229	revert.c	FUNCTION_8
0x4000c1f	              0x5b	                                 pop rbx	       229	revert.c	FUNCTION_8
0x4000c20	              0x5d	                                 pop rbp	       229	revert.c	FUNCTION_8
0x4000c21	              0xc3	                                     ret	       229	revert.c	FUNCTION_8
0x4000c22	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_38
0x4000c24	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_38
0x4000c29	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_38
0x4000c2e	      0xe800000000	                          call 0x4000c33	        54	gettext.h	FUNCTION_38
0x4000c33	          0x4889c7	                            mov rdi, rax	       227	revert.c	FUNCTION_8	CALL_4
0x4000c36	            0x31c0	                            xor eax, eax	       227	revert.c	FUNCTION_8	CALL_4
0x4000c38	      0xe800000000	                          call 0x4000c3d	       227	revert.c	FUNCTION_8	CALL_4
0x4000c3d	      0xe800000000	     call str.size_t_overflow:__lu____lu	       229	revert.c	FUNCTION_8
cmd_revert	IF,2:ELSE,0:functions,0:FOR,0:CALL,5:SWITCH,0:DO,0:WHILE,0	45
0x4000af0	            0x4154	                                push r12	       204	revert.c	FUNCTION_7
0x4000af2	              0x55	                                push rbp	       204	revert.c	FUNCTION_7
0x4000af3	      0xb911000000	                           mov ecx, 0x11	       205	revert.c	FUNCTION_7
0x4000af8	              0x53	                                push rbx	       204	revert.c	FUNCTION_7
0x4000af9	            0x89fd	                            mov ebp, edi	       204	revert.c	FUNCTION_7
0x4000afb	          0x4989f4	                            mov r12, rsi	       204	revert.c	FUNCTION_7
0x4000afe	    0x4881ec900000	                           sub rsp, 0x90	       204	revert.c	FUNCTION_7
0x4000b05	    0x64488b042528	                mov rax, qword fs:[0x28]	       204	revert.c	FUNCTION_7
0x4000b0e	    0x488984248800	             mov qword [rsp + 0x88], rax	       204	revert.c	FUNCTION_7
0x4000b16	            0x31c0	                            xor eax, eax	       204	revert.c	FUNCTION_7
0x4000b18	          0x4889e7	                            mov rdi, rsp	       205	revert.c	FUNCTION_7
0x4000b1b	          0x4889e3	                            mov rbx, rsp	       205	revert.c	FUNCTION_7
0x4000b1e	          0xf348ab	              rep stosq qword [rdi], rax	       205	revert.c	FUNCTION_7
0x4000b21	            0x31ff	                            xor edi, edi	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0x4000b23	    0xc70424ffffff	            mov dword [rsp], 0xffffffff 	       205	revert.c	FUNCTION_7
0x4000b2a	    0x48c744247000	               mov qword [rsp + 0x70], 0	       205	revert.c	FUNCTION_7
0x4000b33	      0xe800000000	                          call 0x4000b38	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0x4000b38	            0x85c0	                           test eax, eax	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0x4000b3a	            0x7408	                            je 0x4000b44	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0x4000b3c	    0xc74424040100	                  mov dword [rsp + 4], 1	       209	revert.c	FUNCTION_7	IF_1
0x4000b44	          0x4889df	                            mov rdi, rbx	       211	revert.c	FUNCTION_7	CALL_2
0x4000b47	    0xc70424000000	                      mov dword [rsp], 0	       210	revert.c	FUNCTION_7
0x4000b4e	      0xe800000000	                          call 0x4000b53	       211	revert.c	FUNCTION_7	CALL_2
0x4000b53	          0x4889da	                            mov rdx, rbx	       212	revert.c	FUNCTION_7	CALL_3
0x4000b56	          0x4c89e6	                            mov rsi, r12	       212	revert.c	FUNCTION_7	CALL_3
0x4000b59	            0x89ef	                            mov edi, ebp	       212	revert.c	FUNCTION_7	CALL_3
0x4000b5b	      0xe810f7ffff	                  call sym.run_sequencer	       212	revert.c	FUNCTION_7	CALL_3
0x4000b60	            0x85c0	                           test eax, eax	       213	revert.c	FUNCTION_7	IF_2
0x4000b62	            0x781f	                            js 0x4000b83	       213	revert.c	FUNCTION_7	IF_2
0x4000b64	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	       216	revert.c	FUNCTION_7
0x4000b6c	    0x644833142528	                xor rdx, qword fs:[0x28]	       216	revert.c	FUNCTION_7
0x4000b75	            0x7527	                           jne 0x4000b9e	       216	revert.c	FUNCTION_7
0x4000b77	    0x4881c4900000	                           add rsp, 0x90	       216	revert.c	FUNCTION_7
0x4000b7e	              0x5b	                                 pop rbx	       216	revert.c	FUNCTION_7
0x4000b7f	              0x5d	                                 pop rbp	       216	revert.c	FUNCTION_7
0x4000b80	            0x415c	                                 pop r12	       216	revert.c	FUNCTION_7
0x4000b82	              0xc3	                                     ret	       216	revert.c	FUNCTION_7
0x4000b83	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_38
0x4000b85	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_38
0x4000b8a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_38
0x4000b8f	      0xe800000000	                          call 0x4000b94	        54	gettext.h	FUNCTION_38
0x4000b94	          0x4889c7	                            mov rdi, rax	       214	revert.c	FUNCTION_7	CALL_5
0x4000b97	            0x31c0	                            xor eax, eax	       214	revert.c	FUNCTION_7	CALL_5
0x4000b99	      0xe800000000	                          call 0x4000b9e	       214	revert.c	FUNCTION_7	CALL_5
0x4000b9e	      0xe800000000	                          call 0x4000ba3	       216	revert.c	FUNCTION_7
run_sequencer	IF,13:ELSE,3:functions,0:FOR,0:CALL,38:SWITCH,0:DO,0:WHILE,0	348
0x4000270	            0x4157	                                push r15	        94	revert.c	FUNCTION_6
0x4000272	            0x4156	                                push r14	        94	revert.c	FUNCTION_6
0x4000274	          0x4989f6	                            mov r14, rsi	        94	revert.c	FUNCTION_6
0x4000277	            0x4155	                                push r13	        94	revert.c	FUNCTION_6
0x4000279	            0x4154	                                push r12	        94	revert.c	FUNCTION_6
0x400027b	      0xb800000000	                              mov eax, 0	        41	revert.c	FUNCTION_2
0x4000280	              0x55	                                push rbp	        94	revert.c	FUNCTION_6
0x4000281	              0x53	                                push rbx	        94	revert.c	FUNCTION_6
0x4000282	    0x41bc00000000	                             mov r12d, 0	        41	revert.c	FUNCTION_2
0x4000288	    0x41bd00000000	                             mov r13d, 0	        41	revert.c	FUNCTION_2
0x400028e	            0x89fb	                            mov ebx, edi	        94	revert.c	FUNCTION_6
0x4000290	      0xb968000000	                           mov ecx, 0x68	        98	revert.c	FUNCTION_6
0x4000295	    0x4881ec180500	                          sub rsp, 0x518	        94	revert.c	FUNCTION_6
0x400029c	    0x64488b342528	                mov rsi, qword fs:[0x28]	        94	revert.c	FUNCTION_6
0x40002a5	    0x4889b4240805	            mov qword [rsp + 0x508], rsi	        94	revert.c	FUNCTION_6
0x40002ad	            0x31f6	                            xor esi, esi	        94	revert.c	FUNCTION_6
0x40002af	            0x8b32	                    mov esi, dword [rdx]	        94	revert.c	FUNCTION_6
0x40002b1	    0x488dac24c001	                  lea rbp, [rsp + 0x1c0]	        98	revert.c	FUNCTION_6
0x40002b9	      0x4889542408	                mov qword [rsp + 8], rdx	        94	revert.c	FUNCTION_6
0x40002be	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	        97	revert.c	FUNCTION_6
0x40002c6	          0x4889ef	                            mov rdi, rbp	        98	revert.c	FUNCTION_6
0x40002c9	            0x85f6	                           test esi, esi	        41	revert.c	FUNCTION_2
0x40002cb	        0x4c0f45e0	                         cmovne r12, rax	        41	revert.c	FUNCTION_2
0x40002cf	      0xb800000000	                              mov eax, 0	        41	revert.c	FUNCTION_2
0x40002d4	        0x4c0f45e8	                         cmovne r13, rax	        41	revert.c	FUNCTION_2
0x40002d8	            0x31c0	                            xor eax, eax	        98	revert.c	FUNCTION_6
0x40002da	          0x83fe01	                              cmp esi, 1	       118	revert.c	FUNCTION_6	IF_1
0x40002dd	          0xf348ab	              rep stosq qword [rdi], rax	        98	revert.c	FUNCTION_6
0x40002e0	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	        98	revert.c	FUNCTION_6
0x40002e5	    0xc78424c00100	              mov dword [rsp + 0x1c0], 8	        98	revert.c	FUNCTION_6
0x40002f0	    0x48c78424c801	              mov qword [rsp + 0x1c8], 0	        98	revert.c	FUNCTION_6
0x40002fc	    0x48c78424e001	              mov qword [rsp + 0x1e0], 0	        98	revert.c	FUNCTION_6
0x4000308	    0xc78424e80100	              mov dword [rsp + 0x1e8], 6	        98	revert.c	FUNCTION_6
0x4000313	    0x48898c24d001	            mov qword [rsp + 0x1d0], rcx	        98	revert.c	FUNCTION_6
0x400031b	    0x48898c241002	            mov qword [rsp + 0x210], rcx	        98	revert.c	FUNCTION_6
0x4000323	    0x48898c245002	            mov qword [rsp + 0x250], rcx	        98	revert.c	FUNCTION_6
0x400032b	        0x488d4a0c	                    lea rcx, [rdx + 0xc]	       102	revert.c	FUNCTION_6	CALL_6
0x400032f	    0x48c78424f801	          mov qword [rsp + 0x1f8], 0x71 	        98	revert.c	FUNCTION_6
0x400033b	    0xc78424000200	              mov dword [rsp + 0x200], 8	        98	revert.c	FUNCTION_6
0x4000346	    0x48c784240802	              mov qword [rsp + 0x208], 0	        98	revert.c	FUNCTION_6
0x4000352	    0x48c784242002	              mov qword [rsp + 0x220], 0	        98	revert.c	FUNCTION_6
0x400035e	    0xc78424280200	              mov dword [rsp + 0x228], 6	        98	revert.c	FUNCTION_6
0x4000369	    0x48c784243802	          mov qword [rsp + 0x238], 0x63 	        98	revert.c	FUNCTION_6
0x4000375	    0xc78424400200	              mov dword [rsp + 0x240], 8	        98	revert.c	FUNCTION_6
0x4000380	    0x48c784244802	              mov qword [rsp + 0x248], 0	        98	revert.c	FUNCTION_6
0x400038c	    0x48c784246002	              mov qword [rsp + 0x260], 0	        98	revert.c	FUNCTION_6
0x4000398	    0xc78424680200	              mov dword [rsp + 0x268], 6	        98	revert.c	FUNCTION_6
0x40003a3	    0x48c784247802	          mov qword [rsp + 0x278], 0x61 	        98	revert.c	FUNCTION_6
0x40003af	    0xc78424800200	              mov dword [rsp + 0x280], 7	        98	revert.c	FUNCTION_6
0x40003ba	    0xc78424840200	          mov dword [rsp + 0x284], 0x6e 	        98	revert.c	FUNCTION_6
0x40003c5	    0x48c784248802	              mov qword [rsp + 0x288], 0	        98	revert.c	FUNCTION_6
0x40003d1	    0x48898c249002	            mov qword [rsp + 0x290], rcx	       102	revert.c	FUNCTION_6	CALL_6
0x40003d9	        0x488d4a04	                      lea rcx, [rdx + 4]	       103	revert.c	FUNCTION_6	CALL_7
0x40003dd	    0x48c78424a002	              mov qword [rsp + 0x2a0], 0	        98	revert.c	FUNCTION_6
0x40003e9	    0xc78424a80200	              mov dword [rsp + 0x2a8], 2	        98	revert.c	FUNCTION_6
0x40003f4	    0x48898c24d002	            mov qword [rsp + 0x2d0], rcx	       103	revert.c	FUNCTION_6	CALL_7
0x40003fc	        0x488d4a10	                   lea rcx, [rdx + 0x10]	       105	revert.c	FUNCTION_6	CALL_9
0x4000400	    0x48c78424b802	              mov qword [rsp + 0x2b8], 1	        98	revert.c	FUNCTION_6
0x400040c	    0xc78424c00200	              mov dword [rsp + 0x2c0], 7	        98	revert.c	FUNCTION_6
0x4000417	    0xc78424c40200	          mov dword [rsp + 0x2c4], 0x65 	        98	revert.c	FUNCTION_6
0x4000422	    0x48898c245003	            mov qword [rsp + 0x350], rcx	       105	revert.c	FUNCTION_6	CALL_9
0x400042a	        0x488d4a18	                   lea rcx, [rdx + 0x18]	       108	revert.c	FUNCTION_6	CALL_11
0x400042e	    0x48c78424c802	              mov qword [rsp + 0x2c8], 0	        98	revert.c	FUNCTION_6
0x400043a	    0x48c78424e002	              mov qword [rsp + 0x2e0], 0	        98	revert.c	FUNCTION_6
0x4000446	    0xc78424e80200	              mov dword [rsp + 0x2e8], 2	        98	revert.c	FUNCTION_6
0x4000451	    0x48c78424f802	              mov qword [rsp + 0x2f8], 1	        98	revert.c	FUNCTION_6
0x400045d	    0xc78424000300	           mov dword [rsp + 0x300], 0xc 	        98	revert.c	FUNCTION_6
0x4000468	    0xc78424040300	          mov dword [rsp + 0x304], 0x72 	        98	revert.c	FUNCTION_6
0x4000473	    0x48c784242003	              mov qword [rsp + 0x320], 0	        98	revert.c	FUNCTION_6
0x400047f	    0xc78424280300	            mov dword [rsp + 0x328], 0xa	        98	revert.c	FUNCTION_6
0x400048a	    0x48c784243003	              mov qword [rsp + 0x330], 0	        98	revert.c	FUNCTION_6
0x4000496	    0xc78424400300	              mov dword [rsp + 0x340], 7	        98	revert.c	FUNCTION_6
0x40004a1	    0xc78424440300	          mov dword [rsp + 0x344], 0x73 	        98	revert.c	FUNCTION_6
0x40004ac	    0x48c784244803	              mov qword [rsp + 0x348], 0	        98	revert.c	FUNCTION_6
0x40004b8	    0x48c784246003	              mov qword [rsp + 0x360], 0	        98	revert.c	FUNCTION_6
0x40004c4	    0xc78424680300	              mov dword [rsp + 0x368], 2	        98	revert.c	FUNCTION_6
0x40004cf	    0x48c784247803	              mov qword [rsp + 0x378], 1	        98	revert.c	FUNCTION_6
0x40004db	    0xc78424800300	           mov dword [rsp + 0x380], 0xc 	        98	revert.c	FUNCTION_6
0x40004e6	    0xc78424840300	          mov dword [rsp + 0x384], 0x6d 	        98	revert.c	FUNCTION_6
0x40004f1	    0x48c784248803	              mov qword [rsp + 0x388], 0	        98	revert.c	FUNCTION_6
0x40004fd	    0x488994249003	            mov qword [rsp + 0x390], rdx	        98	revert.c	FUNCTION_6
0x4000505	    0x48c784249803	              mov qword [rsp + 0x398], 0	        98	revert.c	FUNCTION_6
0x4000511	    0x48c78424a003	              mov qword [rsp + 0x3a0], 0	        98	revert.c	FUNCTION_6
0x400051d	    0x48c78424b003	              mov qword [rsp + 0x3b0], 0	        98	revert.c	FUNCTION_6
0x4000529	    0xc78424c00300	           mov dword [rsp + 0x3c0], 0xc 	        98	revert.c	FUNCTION_6
0x4000534	    0x48c78424c803	              mov qword [rsp + 0x3c8], 0	        98	revert.c	FUNCTION_6
0x4000540	    0x48898c24d003	            mov qword [rsp + 0x3d0], rcx	       108	revert.c	FUNCTION_6	CALL_11
0x4000548	        0x488d4a40	                   lea rcx, [rdx + 0x40]	       109	revert.c	FUNCTION_6	CALL_12
0x400054c	    0x48c78424e003	              mov qword [rsp + 0x3e0], 0	        98	revert.c	FUNCTION_6
0x4000558	    0xc78424e80300	              mov dword [rsp + 0x3e8], 2	        98	revert.c	FUNCTION_6
0x4000563	    0x48898c241004	            mov qword [rsp + 0x410], rcx	       109	revert.c	FUNCTION_6	CALL_12
0x400056b	      0x488d4c2408	                      lea rcx, [rsp + 8]	        98	revert.c	FUNCTION_6
0x4000570	    0x48c78424f003	              mov qword [rsp + 0x3f0], 0	        98	revert.c	FUNCTION_6
0x400057c	    0xc78424000400	              mov dword [rsp + 0x400], 9	        98	revert.c	FUNCTION_6
0x4000587	    0x48c784240804	              mov qword [rsp + 0x408], 0	        98	revert.c	FUNCTION_6
0x4000593	    0x48898c245004	            mov qword [rsp + 0x450], rcx	        98	revert.c	FUNCTION_6
0x400059b	        0x488d4a30	                   lea rcx, [rdx + 0x30]	       112	revert.c	FUNCTION_6
0x400059f	    0x48c784241804	              mov qword [rsp + 0x418], 0	        98	revert.c	FUNCTION_6
0x40005ab	    0x48c784242004	              mov qword [rsp + 0x420], 0	        98	revert.c	FUNCTION_6
0x40005b7	    0xc78424400400	           mov dword [rsp + 0x440], 0xc 	        98	revert.c	FUNCTION_6
0x40005c2	    0xc78424440400	          mov dword [rsp + 0x444], 0x58 	        98	revert.c	FUNCTION_6
0x40005cd	    0x48c784244804	              mov qword [rsp + 0x448], 0	        98	revert.c	FUNCTION_6
0x40005d9	    0x48c784245804	              mov qword [rsp + 0x458], 0	        98	revert.c	FUNCTION_6
0x40005e5	    0x48c784246004	              mov qword [rsp + 0x460], 0	        98	revert.c	FUNCTION_6
0x40005f1	    0x48c784247004	              mov qword [rsp + 0x470], 0	        98	revert.c	FUNCTION_6
0x40005fd	    0xc78424800400	              mov dword [rsp + 0x480], 9	        98	revert.c	FUNCTION_6
0x4000608	    0xc78424840400	          mov dword [rsp + 0x484], 0x53 	        98	revert.c	FUNCTION_6
0x4000613	    0x48c784248804	              mov qword [rsp + 0x488], 0	        98	revert.c	FUNCTION_6
0x400061f	    0x48898c249004	            mov qword [rsp + 0x490], rcx	       112	revert.c	FUNCTION_6
0x4000627	    0x48c784249804	              mov qword [rsp + 0x498], 0	        98	revert.c	FUNCTION_6
0x4000633	    0x48c78424a004	              mov qword [rsp + 0x4a0], 0	        98	revert.c	FUNCTION_6
0x400063f	    0xc78424a80400	              mov dword [rsp + 0x4a8], 1	        98	revert.c	FUNCTION_6
0x400064a	    0x48c78424b804	              mov qword [rsp + 0x4b8], 0	        98	revert.c	FUNCTION_6
0x4000656	     0xf84c4020000	                            je 0x4000920	       118	revert.c	FUNCTION_6	IF_1
0x400065c	            0x31d2	                            xor edx, edx	       130	revert.c	FUNCTION_6	CALL_22
0x400065e	          0x4c89f6	                            mov rsi, r14	       130	revert.c	FUNCTION_6	CALL_22
0x4000661	            0x89df	                            mov edi, ebx	       130	revert.c	FUNCTION_6	CALL_22
0x4000663	    0x41b90c000000	                            mov r9d, 0xc	       130	revert.c	FUNCTION_6	CALL_22
0x4000669	          0x4d89e0	                             mov r8, r12	       130	revert.c	FUNCTION_6	CALL_22
0x400066c	          0x4889e9	                            mov rcx, rbp	       130	revert.c	FUNCTION_6	CALL_22
0x400066f	      0xe800000000	                          call 0x4000674	       130	revert.c	FUNCTION_6	CALL_22
0x4000674	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       135	revert.c	FUNCTION_6	IF_2
0x4000679	          0x4189c7	                           mov r15d, eax	       130	revert.c	FUNCTION_6	CALL_22
0x400067c	          0x8b7324	            mov esi, dword [rbx + 0x24] 	       135	revert.c	FUNCTION_6	IF_2
0x400067f	            0x85f6	                           test esi, esi	       135	revert.c	FUNCTION_6	IF_2
0x4000681	            0x7407	                            je 0x400068a	       135	revert.c	FUNCTION_6	IF_2
0x4000683	    0xc7431c010000	               mov dword [rbx + 0x1c], 1	       136	revert.c	FUNCTION_6	IF_2
0x400068a	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       139	revert.c	FUNCTION_6	IF_3
0x400068e	            0x85c0	                           test eax, eax	       139	revert.c	FUNCTION_6	IF_3
0x4000690	     0xf846a010000	                            je 0x4000800	       139	revert.c	FUNCTION_6	IF_3
0x4000696	          0x83f871	                           cmp eax, 0x71	       141	revert.c	FUNCTION_6	IF_3	IF_4
0x4000699	     0xf8461020000	                            je 0x4000900	       141	revert.c	FUNCTION_6	IF_3	IF_4
0x400069f	          0x83f863	                           cmp eax, 0x63	       143	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0x40006a2	     0xf84e8030000	                            je 0x4000a90	       143	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0x40006a8	          0x83f861	                           cmp eax, 0x61	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_23
0x40006ab	     0xf8519040000	                           jne 0x4000aca	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_23
0x40006b1	      0xbe00000000	                              mov esi, 0	       147	revert.c	FUNCTION_6	IF_3	ELSE_2
0x40006b6	          0x8b4318	            mov eax, dword [rbx + 0x18] 	       159	revert.c	FUNCTION_6	IF_3
0x40006b9	        0x4883ec08	                              sub rsp, 8	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006bd	            0x31d2	                            xor edx, edx	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006bf	          0x8b4b0c	              mov ecx, dword [rbx + 0xc]	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006c2	            0x6a00	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006c4	    0x41b800000000	                              mov r8d, 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006ca	          0x4c89ef	                            mov rdi, r13	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006cd	          0x83f802	                              cmp eax, 2	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006d0	           0xf94c2	                                 sete dl	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006d3	          0x83f801	                              cmp eax, 1	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006d6	           0xf94c0	                                 sete al	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006d9	              0x52	                                push rdx	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006da	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006df	           0xfb6c0	                           movzx eax, al	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006e2	      0xba00000000	                              mov edx, 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006e7	              0x50	                                push rax	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006e8	          0x8b4314	            mov eax, dword [rbx + 0x14] 	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006eb	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006f0	              0x50	                                push rax	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006f1	          0x8b4308	                mov eax, dword [rbx + 8]	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006f4	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006f9	              0x50	                                push rax	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006fa	            0x31c0	                            xor eax, eax	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x40006fc	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000701	      0x48837b4800	               cmp qword [rbx + 0x48], 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000706	           0xf95c0	                                setne al	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000709	              0x50	                                push rax	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x400070a	            0x31c0	                            xor eax, eax	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x400070c	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000711	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000716	           0xf95c0	                                setne al	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000719	              0x50	                                push rax	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x400071a	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x400071d	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000722	              0x50	                                push rax	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000723	        0x448b4b10	            mov r9d, dword [rbx + 0x10] 	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000727	            0x31c0	                            xor eax, eax	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000729	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x400072e	      0xe83dfaffff	          call sym.verify_opt_compatible	       150	revert.c	FUNCTION_6	IF_3	CALL_24
0x4000733	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	       163	revert.c	FUNCTION_6	IF_6
0x400073b	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       163	revert.c	FUNCTION_6	IF_6
0x400073f	          0x8b4b14	            mov ecx, dword [rbx + 0x14] 	       163	revert.c	FUNCTION_6	IF_6
0x4000742	            0x85c9	                           test ecx, ecx	       163	revert.c	FUNCTION_6	IF_6
0x4000744	     0xf856e010000	                           jne 0x40008b8	       163	revert.c	FUNCTION_6	IF_6
0x400074a	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	       171	revert.c	FUNCTION_6	IF_7
0x400074e	            0x85d2	                           test edx, edx	       171	revert.c	FUNCTION_6	IF_7
0x4000750	     0xf84b5000000	                            je 0x400080b	       171	revert.c	FUNCTION_6	IF_7
0x4000756	    0x48c783800000	               mov qword [rbx + 0x80], 0	       172	revert.c	FUNCTION_6	IF_7
0x4000761	        0x4183ff01	                             cmp r15d, 1	       187	revert.c	FUNCTION_6	IF_10
0x4000765	     0xf8f4f030000	                            jg 0x4000aba	       187	revert.c	FUNCTION_6	IF_10
0x400076b	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       191	revert.c	FUNCTION_6	CALL_33
0x4000770	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       191	revert.c	FUNCTION_6	CALL_33
0x4000774	          0x4889eb	                            mov rbx, rbp	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x4000777	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x400077a	            0x740d	                            je 0x4000789	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x400077c	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x400077f	      0xe800000000	                          call 0x4000784	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x4000784	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x4000789	        0x48894530	            mov qword [rbp + 0x30], rax 	       191	revert.c	FUNCTION_6	CALL_33
0x400078d	        0x488b4340	            mov rax, qword [rbx + 0x40] 	       192	revert.c	FUNCTION_6	CALL_34
0x4000791	          0x4889df	                            mov rdi, rbx	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x4000794	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x4000797	            0x740d	                            je 0x40007a6	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x4000799	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x400079c	      0xe800000000	                          call 0x40007a1	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x40007a1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       924	git-compat-util.h	FUNCTION_27	CALL_1
0x40007a6	        0x48894340	             mov qword [rbx + 0x40], rax	       192	revert.c	FUNCTION_6	CALL_34
0x40007aa	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       194	revert.c	FUNCTION_6	IF_11
0x40007ae	          0x83f871	                           cmp eax, 0x71	       194	revert.c	FUNCTION_6	IF_11
0x40007b1	     0xf84e9020000	                            je 0x4000aa0	       194	revert.c	FUNCTION_6	IF_11
0x40007b7	          0x83f863	                           cmp eax, 0x63	       196	revert.c	FUNCTION_6	IF_12
0x40007ba	     0xf84f0020000	                            je 0x4000ab0	       196	revert.c	FUNCTION_6	IF_12
0x40007c0	          0x83f861	                           cmp eax, 0x61	       198	revert.c	FUNCTION_6	IF_13
0x40007c3	     0xf8447010000	                            je 0x4000910	       198	revert.c	FUNCTION_6	IF_13
0x40007c9	      0xe800000000	                          call 0x40007ce	       200	revert.c	FUNCTION_6	CALL_38
0x40007ce	    0x488bb4240805	           mov rsi, qword [rsp + 0x508] 	       201	revert.c	FUNCTION_6
0x40007d6	    0x644833342528	                xor rsi, qword fs:[0x28]	       201	revert.c	FUNCTION_6
0x40007df	     0xf85e0020000	                           jne 0x4000ac5	       201	revert.c	FUNCTION_6
0x40007e5	    0x4881c4180500	                          add rsp, 0x518	       201	revert.c	FUNCTION_6
0x40007ec	              0x5b	                                 pop rbx	       201	revert.c	FUNCTION_6
0x40007ed	              0x5d	                                 pop rbp	       201	revert.c	FUNCTION_6
0x40007ee	            0x415c	                                 pop r12	       201	revert.c	FUNCTION_6
0x40007f0	            0x415d	                                 pop r13	       201	revert.c	FUNCTION_6
0x40007f2	            0x415e	                                 pop r14	       201	revert.c	FUNCTION_6
0x40007f4	            0x415f	                                 pop r15	       201	revert.c	FUNCTION_6
0x40007f6	              0xc3	                                     ret	       201	revert.c	FUNCTION_6
0x40007f7	    0x660f1f840000	                    nop word [rax + rax]	       201	revert.c	FUNCTION_6
0x4000800	          0x8b4314	            mov eax, dword [rbx + 0x14] 	       163	revert.c	FUNCTION_6	IF_6
0x4000803	            0x85c0	                           test eax, eax	       163	revert.c	FUNCTION_6	IF_6
0x4000805	     0xf85ad000000	                           jne 0x40008b8	       163	revert.c	FUNCTION_6	IF_6
0x400080b	      0xbfb0080000	                          mov edi, 0x8b0	       175	revert.c	FUNCTION_6	ELSE_3	CALL_26
0x4000810	      0xe800000000	                          call 0x4000815	       175	revert.c	FUNCTION_6	ELSE_3	CALL_26
0x4000815	    0x488983800000	             mov qword [rbx + 0x80], rax	       175	revert.c	FUNCTION_6	ELSE_3	CALL_26
0x400081c	      0x488b442408	                mov rax, qword [rsp + 8]	       176	revert.c	FUNCTION_6	ELSE_3	CALL_27
0x4000821	            0x31f6	                            xor esi, esi	       176	revert.c	FUNCTION_6	ELSE_3	CALL_27
0x4000823	    0x488bb8800000	            mov rdi, qword [rax + 0x80] 	       176	revert.c	FUNCTION_6	ELSE_3	CALL_27
0x400082a	      0xe800000000	                          call 0x400082f	       176	revert.c	FUNCTION_6	ELSE_3	CALL_27
0x400082f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       177	revert.c	FUNCTION_6	ELSE_3
0x4000834	    0x488b91800000	            mov rdx, qword [rcx + 0x80] 	       177	revert.c	FUNCTION_6	ELSE_3
0x400083b	         0xfb64274	           movzx eax, byte [rdx + 0x74] 	       177	revert.c	FUNCTION_6	ELSE_3
0x400083f	          0x83e0cf	                     and eax, 0xffffffcf	       177	revert.c	FUNCTION_6	ELSE_3
0x4000842	          0x83c820	                            or eax, 0x20	       177	revert.c	FUNCTION_6	ELSE_3
0x4000845	        0x4183ff01	                             cmp r15d, 1	       178	revert.c	FUNCTION_6	ELSE_3	IF_8
0x4000849	          0x884274	               mov byte [rdx + 0x74], al	       177	revert.c	FUNCTION_6	ELSE_3
0x400084c	     0xf8e68020000	                           jle 0x4000aba	       178	revert.c	FUNCTION_6	ELSE_3	IF_8
0x4000852	        0x498b4608	                mov rax, qword [r14 + 8]	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_29
0x4000856	          0x80382d	                    cmp byte [rax], 0x2d	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_29
0x4000859	            0x750e	                           jne 0x4000869	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_29
0x400085b	        0x80780100	                   cmp byte [rax + 1], 0	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_29
0x400085f	            0x7508	                           jne 0x4000869	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_29
0x4000861	    0x49c746080000	                  mov qword [r14 + 8], 0	       181	revert.c	FUNCTION_6	ELSE_3	IF_9
0x4000869	    0x488b91800000	            mov rdx, qword [rcx + 0x80] 	       184	revert.c	FUNCTION_6	ELSE_3	CALL_31
0x4000870	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	       184	revert.c	FUNCTION_6	ELSE_3	CALL_31
0x4000875	          0x4489ff	                           mov edi, r15d	       184	revert.c	FUNCTION_6	ELSE_3	CALL_31
0x4000878	          0x4c89f6	                            mov rsi, r14	       184	revert.c	FUNCTION_6	ELSE_3	CALL_31
0x400087b	    0x48c744243800	               mov qword [rsp + 0x38], 0	        90	string3.h	FUNCTION_43	CALL_6
0x4000884	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_43	CALL_6
0x400088d	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_43	CALL_6
0x4000896	    0x48c744243000	               mov qword [rsp + 0x30], 0	        90	string3.h	FUNCTION_43	CALL_6
0x400089f	    0xc74424380100	               mov dword [rsp + 0x38], 1	       183	revert.c	FUNCTION_6	ELSE_3
0x40008a7	      0xe800000000	                          call 0x40008ac	       184	revert.c	FUNCTION_6	ELSE_3	CALL_31
0x40008ac	          0x4189c7	                           mov r15d, eax	       184	revert.c	FUNCTION_6	ELSE_3	CALL_31
0x40008af	      0xe9adfeffff	                           jmp 0x4000761	       184	revert.c	FUNCTION_6	ELSE_3	CALL_31
0x40008b4	         0xf1f4000	                         nop dword [rax]	       184	revert.c	FUNCTION_6	ELSE_3	CALL_31
0x40008b8	          0x8b4304	                mov eax, dword [rbx + 4]	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008bb	        0x4883ec08	                              sub rsp, 8	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008bf	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008c2	            0x6a00	                                  push 0	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008c4	    0x41b800000000	                              mov r8d, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008ca	      0xba00000000	                              mov edx, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008cf	      0xbe00000000	                              mov esi, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008d4	          0x4c89ef	                            mov rdi, r13	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008d7	              0x50	                                push rax	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008d8	          0x8b4308	                mov eax, dword [rbx + 8]	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008db	      0x6800000000	                                  push 0	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008e0	              0x50	                                push rax	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008e1	        0x448b4b0c	              mov r9d, dword [rbx + 0xc]	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008e5	            0x31c0	                            xor eax, eax	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008e7	      0x6800000000	                                  push 0	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008ec	      0xe87ff8ffff	          call sym.verify_opt_compatible	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008f1	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008f6	        0x4883c430	                           add rsp, 0x30	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008fa	      0xe94bfeffff	                           jmp 0x400074a	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x40008ff	              0x90	                                     nop	       164	revert.c	FUNCTION_6	IF_6	CALL_25
0x4000900	      0xbe00000000	                              mov esi, 0	       142	revert.c	FUNCTION_6	IF_3	IF_4
0x4000905	      0xe9acfdffff	                           jmp 0x40006b6	       142	revert.c	FUNCTION_6	IF_3	IF_4
0x400090a	    0x660f1f440000	                    nop word [rax + rax]	       142	revert.c	FUNCTION_6	IF_3	IF_4
0x4000910	      0xe800000000	                          call 0x4000915	       199	revert.c	FUNCTION_6	CALL_37
0x4000915	      0xe9b4feffff	                           jmp 0x40007ce	       199	revert.c	FUNCTION_6	CALL_37
0x400091a	    0x660f1f440000	                    nop word [rax + rax]	       199	revert.c	FUNCTION_6	CALL_37
0x4000920	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       119	revert.c	FUNCTION_6	IF_1
0x4000925	      0xb930000000	                           mov ecx, 0x30	       119	revert.c	FUNCTION_6	IF_1
0x400092a	      0x488d742440	                   lea rsi, [rsp + 0x40]	       127	revert.c	FUNCTION_6	IF_1	CALL_21
0x400092f	          0xf348ab	              rep stosq qword [rdi], rax	       119	revert.c	FUNCTION_6	IF_1
0x4000932	        0x488d4208	                      lea rax, [rdx + 8]	       120	revert.c	FUNCTION_6	IF_1	CALL_15
0x4000936	          0x4889ef	                            mov rdi, rbp	       127	revert.c	FUNCTION_6	IF_1	CALL_21
0x4000939	    0xc74424400700	               mov dword [rsp + 0x40], 7	       119	revert.c	FUNCTION_6	IF_1
0x4000941	    0xc74424447800	           mov dword [rsp + 0x44], 0x78 	       119	revert.c	FUNCTION_6	IF_1
0x4000949	    0x48c744246000	               mov qword [rsp + 0x60], 0	       119	revert.c	FUNCTION_6	IF_1
0x4000952	      0x4889442450	             mov qword [rsp + 0x50], rax	       120	revert.c	FUNCTION_6	IF_1	CALL_15
0x4000957	        0x488d4214	                   lea rax, [rdx + 0x14]	       121	revert.c	FUNCTION_6	IF_1	CALL_16
0x400095b	    0xc74424680200	               mov dword [rsp + 0x68], 2	       119	revert.c	FUNCTION_6	IF_1
0x4000963	    0x48c744247801	               mov qword [rsp + 0x78], 1	       119	revert.c	FUNCTION_6	IF_1
0x400096c	    0xc78424800000	               mov dword [rsp + 0x80], 7	       119	revert.c	FUNCTION_6	IF_1
0x4000977	    0x488984249000	             mov qword [rsp + 0x90], rax	       121	revert.c	FUNCTION_6	IF_1	CALL_16
0x400097f	        0x488d421c	                   lea rax, [rdx + 0x1c]	       122	revert.c	FUNCTION_6	IF_1	CALL_17
0x4000983	    0x48c784248800	               mov qword [rsp + 0x88], 0	       119	revert.c	FUNCTION_6	IF_1
0x400098f	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       119	revert.c	FUNCTION_6	IF_1
0x400099b	    0xc78424a80000	               mov dword [rsp + 0xa8], 2	       119	revert.c	FUNCTION_6	IF_1
0x40009a6	    0x48898424d000	             mov qword [rsp + 0xd0], rax	       122	revert.c	FUNCTION_6	IF_1	CALL_17
0x40009ae	        0x488d4220	                   lea rax, [rdx + 0x20]	       123	revert.c	FUNCTION_6	IF_1	CALL_18
0x40009b2	        0x4883c224	                           add rdx, 0x24	       124	revert.c	FUNCTION_6	IF_1	CALL_19
0x40009b6	    0x48c78424b800	               mov qword [rsp + 0xb8], 1	       119	revert.c	FUNCTION_6	IF_1
0x40009c2	    0xc78424c00000	               mov dword [rsp + 0xc0], 7	       119	revert.c	FUNCTION_6	IF_1
0x40009cd	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       119	revert.c	FUNCTION_6	IF_1
0x40009d9	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	       119	revert.c	FUNCTION_6	IF_1
0x40009e5	    0xc78424e80000	               mov dword [rsp + 0xe8], 2	       119	revert.c	FUNCTION_6	IF_1
0x40009f0	    0x48c78424f800	               mov qword [rsp + 0xf8], 1	       119	revert.c	FUNCTION_6	IF_1
0x40009fc	    0xc78424000100	              mov dword [rsp + 0x100], 7	       119	revert.c	FUNCTION_6	IF_1
0x4000a07	    0x48c784240801	              mov qword [rsp + 0x108], 0	       119	revert.c	FUNCTION_6	IF_1
0x4000a13	    0x488984241001	            mov qword [rsp + 0x110], rax	       123	revert.c	FUNCTION_6	IF_1	CALL_18
0x4000a1b	    0x48c784242001	              mov qword [rsp + 0x120], 0	       119	revert.c	FUNCTION_6	IF_1
0x4000a27	    0xc78424280100	              mov dword [rsp + 0x128], 2	       119	revert.c	FUNCTION_6	IF_1
0x4000a32	    0x48c784243801	              mov qword [rsp + 0x138], 1	       119	revert.c	FUNCTION_6	IF_1
0x4000a3e	    0xc78424400100	              mov dword [rsp + 0x140], 7	       119	revert.c	FUNCTION_6	IF_1
0x4000a49	    0x48c784244801	              mov qword [rsp + 0x148], 0	       119	revert.c	FUNCTION_6	IF_1
0x4000a55	    0x488994245001	            mov qword [rsp + 0x150], rdx	       124	revert.c	FUNCTION_6	IF_1	CALL_19
0x4000a5d	    0x48c784246001	              mov qword [rsp + 0x160], 0	       119	revert.c	FUNCTION_6	IF_1
0x4000a69	    0xc78424680100	              mov dword [rsp + 0x168], 2	       119	revert.c	FUNCTION_6	IF_1
0x4000a74	    0x48c784247801	              mov qword [rsp + 0x178], 1	       119	revert.c	FUNCTION_6	IF_1
0x4000a80	      0xe800000000	                          call 0x4000a85	       127	revert.c	FUNCTION_6	IF_1	CALL_21
0x4000a85	          0x4889c5	                            mov rbp, rax	       127	revert.c	FUNCTION_6	IF_1	CALL_21
0x4000a88	      0xe9cffbffff	                           jmp 0x400065c	       127	revert.c	FUNCTION_6	IF_1	CALL_21
0x4000a8d	           0xf1f00	                         nop dword [rax]	       127	revert.c	FUNCTION_6	IF_1	CALL_21
0x4000a90	      0xbe00000000	                              mov esi, 0	       144	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0x4000a95	      0xe91cfcffff	                           jmp 0x40006b6	       144	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0x4000a9a	    0x660f1f440000	                    nop word [rax + rax]	       144	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0x4000aa0	      0xe800000000	                          call 0x4000aa5	       195	revert.c	FUNCTION_6	CALL_35
0x4000aa5	      0xe924fdffff	                           jmp 0x40007ce	       195	revert.c	FUNCTION_6	CALL_35
0x4000aaa	    0x660f1f440000	                    nop word [rax + rax]	       195	revert.c	FUNCTION_6	CALL_35
0x4000ab0	      0xe800000000	                          call 0x4000ab5	       197	revert.c	FUNCTION_6	CALL_36
0x4000ab5	      0xe914fdffff	                           jmp 0x40007ce	       197	revert.c	FUNCTION_6	CALL_36
0x4000aba	          0x4889ee	                            mov rsi, rbp	       188	revert.c	FUNCTION_6	CALL_32
0x4000abd	          0x4c89e7	                            mov rdi, r12	       188	revert.c	FUNCTION_6	CALL_32
0x4000ac0	      0xe800000000	                          call 0x4000ac5	       188	revert.c	FUNCTION_6	CALL_32
0x4000ac5	      0xe800000000	                          call 0x4000aca	       201	revert.c	FUNCTION_6
0x4000aca	      0xb900000000	                              mov ecx, 0	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_23
0x4000acf	      0xba92000000	                           mov edx, 0x92	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_23
0x4000ad4	      0xbe00000000	                              mov esi, 0	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_23
0x4000ad9	      0xbf00000000	                              mov edi, 0	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_23
0x4000ade	      0xe800000000	                          call 0x4000ae3	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_23
