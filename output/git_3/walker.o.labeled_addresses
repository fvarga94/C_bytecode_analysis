mark_complete	IF,1:functions,0:SWITCH,0:ELSE,0:FOR,0:DO,0:WHILE,0:CALL,2	13
0x4000040	        0x4883ec08	                              sub rsp, 8	       205	walker.c	FUNCTION_10
0x4000044	          0x4889f7	                            mov rdi, rsi	       205	walker.c	FUNCTION_10
0x4000047	      0xbe01000000	                              mov esi, 1	       206	walker.c	FUNCTION_10	CALL_1
0x400004c	      0xe800000000	                          call 0x4000051	       206	walker.c	FUNCTION_10	CALL_1
0x4000051	          0x4885c0	                           test rax, rax	       208	walker.c	FUNCTION_10	IF_1
0x4000054	            0x7410	                            je 0x4000066	       208	walker.c	FUNCTION_10	IF_1
0x4000056	          0x830810	                    or dword [rax], 0x10	       209	walker.c	FUNCTION_10	IF_1
0x4000059	      0xbe00000000	                              mov esi, 0	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0x400005e	          0x4889c7	                            mov rdi, rax	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0x4000061	      0xe800000000	                          call 0x4000066	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0x4000066	            0x31c0	                            xor eax, eax	       213	walker.c	FUNCTION_10
0x4000068	        0x4883c408	                              add rsp, 8	       213	walker.c	FUNCTION_10
0x400006c	              0xc3	                                     ret	       213	walker.c	FUNCTION_10
walker_say	IF,1:functions,0:SWITCH,0:ELSE,0:FOR,0:DO,0:WHILE,0:CALL,3	38
0x4000110	    0x4881ecd80000	                           sub rsp, 0xd8	        13	walker.c	FUNCTION_1
0x4000117	            0x84c0	                             test al, al	        13	walker.c	FUNCTION_1
0x4000119	      0x4889542430	             mov qword [rsp + 0x30], rdx	        13	walker.c	FUNCTION_1
0x400011e	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        13	walker.c	FUNCTION_1
0x4000123	      0x4c89442440	              mov qword [rsp + 0x40], r8	        13	walker.c	FUNCTION_1
0x4000128	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        13	walker.c	FUNCTION_1
0x400012d	            0x7437	                            je 0x4000166	        13	walker.c	FUNCTION_1
0x400012f	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	        13	walker.c	FUNCTION_1
0x4000134	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	        13	walker.c	FUNCTION_1
0x4000139	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	        13	walker.c	FUNCTION_1
0x400013e	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	        13	walker.c	FUNCTION_1
0x4000146	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	        13	walker.c	FUNCTION_1
0x400014e	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	        13	walker.c	FUNCTION_1
0x4000156	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	        13	walker.c	FUNCTION_1
0x400015e	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	        13	walker.c	FUNCTION_1
0x4000166	    0x64488b042528	                mov rax, qword fs:[0x28]	        13	walker.c	FUNCTION_1
0x400016f	      0x4889442418	             mov qword [rsp + 0x18], rax	        13	walker.c	FUNCTION_1
0x4000174	            0x31c0	                            xor eax, eax	        13	walker.c	FUNCTION_1
0x4000176	          0x8b4728	            mov eax, dword [rdi + 0x28] 	        14	walker.c	FUNCTION_1	IF_1
0x4000179	            0x85c0	                           test eax, eax	        14	walker.c	FUNCTION_1	IF_1
0x400017b	            0x743d	                            je 0x40001ba	        14	walker.c	FUNCTION_1	IF_1
0x400017d	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x4000185	    0x488b3d000000	            mov rdi, qword [0x0400018c] 	       127	stdio2.h	FUNCTION_20	CALL_1
0x400018c	          0x4889f2	                            mov rdx, rsi	       127	stdio2.h	FUNCTION_20	CALL_1
0x400018f	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_20	CALL_1
0x4000192	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_20	CALL_1
0x4000197	    0xc70424100000	                   mov dword [rsp], 0x10	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x400019e	      0x4889442408	                mov qword [rsp + 8], rax	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x40001a3	      0x488d442420	                   lea rax, [rsp + 0x20]	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x40001a8	    0xc74424043000	               mov dword [rsp + 4], 0x30	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x40001b0	      0x4889442410	             mov qword [rsp + 0x10], rax	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x40001b5	      0xe800000000	                          call 0x40001ba	       127	stdio2.h	FUNCTION_20	CALL_1
0x40001ba	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        20	walker.c	FUNCTION_1
0x40001bf	    0x644833042528	                xor rax, qword fs:[0x28]	        20	walker.c	FUNCTION_1
0x40001c8	            0x7508	                           jne 0x40001d2	        20	walker.c	FUNCTION_1
0x40001ca	    0x4881c4d80000	                           add rsp, 0xd8	        20	walker.c	FUNCTION_1
0x40001d1	              0xc3	                                     ret	        20	walker.c	FUNCTION_1
0x40001d2	      0xe800000000	                          call 0x40001d7	        20	walker.c	FUNCTION_1
walker_targets_free	IF,1:functions,0:SWITCH,0:ELSE,0:FOR,0:DO,0:WHILE,1:CALL,2	31
0x4000380	            0x4156	                                push r14	       245	walker.c	FUNCTION_12
0x4000382	            0x4155	                                push r13	       245	walker.c	FUNCTION_12
0x4000384	          0x4989d5	                            mov r13, rdx	       245	walker.c	FUNCTION_12
0x4000387	            0x4154	                                push r12	       245	walker.c	FUNCTION_12
0x4000389	          0x4c63e7	                         movsxd r12, edi	       245	walker.c	FUNCTION_12
0x400038c	              0x55	                                push rbp	       245	walker.c	FUNCTION_12
0x400038d	            0x89fd	                            mov ebp, edi	       245	walker.c	FUNCTION_12
0x400038f	        0x49c1e403	                              shl r12, 3	       245	walker.c	FUNCTION_12
0x4000393	              0x53	                                push rbx	       245	walker.c	FUNCTION_12
0x4000394	          0x48f7dd	                                 neg rbp	       245	walker.c	FUNCTION_12
0x4000397	        0x4e8d3426	                    lea r14, [rsi + r12]	       245	walker.c	FUNCTION_12
0x400039b	            0x31db	                            xor ebx, ebx	       246	walker.c	FUNCTION_12	WHILE_1
0x400039d	        0x48c1e503	                              shl rbp, 3	       246	walker.c	FUNCTION_12	WHILE_1
0x40003a1	          0x4901d4	                            add r12, rdx	       246	walker.c	FUNCTION_12	WHILE_1
0x40003a4	            0xeb27	                           jmp 0x40003cd	       246	walker.c	FUNCTION_12	WHILE_1
0x40003a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       246	walker.c	FUNCTION_12	WHILE_1
0x40003b0	      0x498b7c1ef8	          mov rdi, qword [r14 + rbx - 8]	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x40003b5	      0xe800000000	                          call 0x40003ba	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x40003ba	          0x4d85ed	                           test r13, r13	       248	walker.c	FUNCTION_12	WHILE_1	IF_1
0x40003bd	            0x740a	                            je 0x40003c9	       248	walker.c	FUNCTION_12	WHILE_1	IF_1
0x40003bf	      0x498b7c1cf8	          mov rdi, qword [r12 + rbx - 8]	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x40003c4	      0xe800000000	                          call 0x40003c9	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x40003c9	        0x4883eb08	                              sub rbx, 8	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x40003cd	          0x4839eb	                            cmp rbx, rbp	       246	walker.c	FUNCTION_12	WHILE_1
0x40003d0	            0x75de	                           jne 0x40003b0	       246	walker.c	FUNCTION_12	WHILE_1
0x40003d2	              0x5b	                                 pop rbx	       251	walker.c	FUNCTION_12
0x40003d3	              0x5d	                                 pop rbp	       251	walker.c	FUNCTION_12
0x40003d4	            0x415c	                                 pop r12	       251	walker.c	FUNCTION_12
0x40003d6	            0x415d	                                 pop r13	       251	walker.c	FUNCTION_12
0x40003d8	            0x415e	                                 pop r14	       251	walker.c	FUNCTION_12
0x40003da	              0xc3	                                     ret	       251	walker.c	FUNCTION_12
walker_free	IF,0:functions,0:SWITCH,0:ELSE,0:FOR,0:DO,0:WHILE,0:CALL,2	6
0x4000b30	              0x53	                                push rbx	       328	walker.c	FUNCTION_14
0x4000b31	          0x4889fb	                            mov rbx, rdi	       328	walker.c	FUNCTION_14
0x4000b34	          0xff5720	                 call qword [rdi + 0x20]	       329	walker.c	FUNCTION_14	CALL_1
0x4000b37	          0x4889df	                            mov rdi, rbx	       330	walker.c	FUNCTION_14	CALL_2
0x4000b3a	              0x5b	                                 pop rbx	       331	walker.c	FUNCTION_14
0x4000b3b	      0xe900000000	               jmp obj.process_queue_end	       330	walker.c	FUNCTION_14	CALL_2
walker_fetch	IF,11:functions,0:SWITCH,0:ELSE,1:FOR,2:DO,0:WHILE,0:CALL,17	438
0x40003e0	          0x4863c6	                         movsxd rax, esi	       255	walker.c	FUNCTION_13
0x40003e3	            0x4157	                                push r15	       255	walker.c	FUNCTION_13
0x40003e5	            0x4156	                                push r14	       255	walker.c	FUNCTION_13
0x40003e7	            0x4155	                                push r13	       255	walker.c	FUNCTION_13
0x40003e9	            0x4154	                                push r12	       255	walker.c	FUNCTION_13
0x40003eb	          0x4989fc	                            mov r12, rdi	       255	walker.c	FUNCTION_13
0x40003ee	              0x55	                                push rbp	       255	walker.c	FUNCTION_13
0x40003ef	        0x488d3c80	                  lea rdi, [rax + rax*4]	       259	walker.c	FUNCTION_13	CALL_1
0x40003f3	              0x53	                                push rbx	       255	walker.c	FUNCTION_13
0x40003f4	          0x4889cb	                            mov rbx, rcx	       255	walker.c	FUNCTION_13
0x40003f7	          0x4889d5	                            mov rbp, rdx	       255	walker.c	FUNCTION_13
0x40003fa	    0x4881ecc80000	                           sub rsp, 0xc8	       255	walker.c	FUNCTION_13
0x4000401	        0x48c1e702	                              shl rdi, 2	       259	walker.c	FUNCTION_13	CALL_1
0x4000405	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       255	walker.c	FUNCTION_13
0x400040a	        0x89442408	                mov dword [rsp + 8], eax	       255	walker.c	FUNCTION_13
0x400040e	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       255	walker.c	FUNCTION_13
0x4000417	    0x48898c24b800	             mov qword [rsp + 0xb8], rcx	       255	walker.c	FUNCTION_13
0x400041f	            0x31c9	                            xor ecx, ecx	       255	walker.c	FUNCTION_13
0x4000421	      0x4c89442420	              mov qword [rsp + 0x20], r8	       255	walker.c	FUNCTION_13
0x4000426	    0x48c744243000	               mov qword [rsp + 0x30], 0	       256	walker.c	FUNCTION_13
0x400042f	    0x48c744243800	               mov qword [rsp + 0x38], 0	       256	walker.c	FUNCTION_13
0x4000438	    0x48c744244000	               mov qword [rsp + 0x40], 0	       256	walker.c	FUNCTION_13
0x4000441	    0x48c744245000	               mov qword [rsp + 0x50], 0	       257	walker.c	FUNCTION_13
0x400044a	    0x48c744245800	               mov qword [rsp + 0x58], 0	       257	walker.c	FUNCTION_13
0x4000453	    0x48c744246000	               mov qword [rsp + 0x60], 0	       257	walker.c	FUNCTION_13
0x400045c	      0xe800000000	                          call 0x4000461	       259	walker.c	FUNCTION_13	CALL_1
0x4000461	          0x4885db	                           test rbx, rbx	       265	walker.c	FUNCTION_13	IF_1
0x4000464	      0x4889442410	             mov qword [rsp + 0x10], rax	       259	walker.c	FUNCTION_13	CALL_1
0x4000469	    0xc70500000000	               mov dword [0x04000473], 0	       263	walker.c	FUNCTION_13
0x4000473	     0xf8477050000	                            je 0x40009f0	       265	walker.c	FUNCTION_13	IF_1
0x4000479	      0x4c8d742450	                   lea r14, [rsp + 0x50]	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x400047e	          0x4c89f7	                            mov rdi, r14	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x4000481	      0xe800000000	                          call 0x4000486	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x4000486	          0x4885c0	                           test rax, rax	       267	walker.c	FUNCTION_13	IF_1	IF_2
0x4000489	          0x4989c7	                            mov r15, rax	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x400048c	     0xf8461060000	                            je 0x4000af3	       267	walker.c	FUNCTION_13	IF_1	IF_2
0x4000492	      0x458b44242c	            mov r8d, dword [r12 + 0x2c] 	       273	walker.c	FUNCTION_13	IF_3
0x4000497	          0x4585c0	                           test r8d, r8d	       273	walker.c	FUNCTION_13	IF_3
0x400049a	     0xf8461050000	                            je 0x4000a01	       273	walker.c	FUNCTION_13	IF_3
0x40004a0	        0x8b7c2408	                mov edi, dword [rsp + 8]	       278	walker.c	FUNCTION_13	FOR_1
0x40004a4	            0x85ff	                           test edi, edi	       278	walker.c	FUNCTION_13	FOR_1
0x40004a6	     0xf8eb4000000	                           jle 0x4000560	       278	walker.c	FUNCTION_13	FOR_1
0x40004ac	        0x8b442408	                mov eax, dword [rsp + 8]	       278	walker.c	FUNCTION_13	FOR_1
0x40004b0	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       278	walker.c	FUNCTION_13	FOR_1
0x40004b5	          0x83e801	                              sub eax, 1	       278	walker.c	FUNCTION_13	FOR_1
0x40004b8	      0x4c8d74c508	              lea r14, [rbp + rax*8 + 8]	       278	walker.c	FUNCTION_13	FOR_1
0x40004bd	            0xeb29	                           jmp 0x40004e8	       278	walker.c	FUNCTION_13	FOR_1
0x40004bf	              0x90	                                     nop	       278	walker.c	FUNCTION_13	FOR_1
0x40004c0	          0x4889df	                            mov rdi, rbx	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x40004c3	      0xe800000000	                          call 0x40004c8	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x40004c8	          0x4c89e7	                            mov rdi, r12	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x40004cb	          0x4889c6	                            mov rsi, rax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x40004ce	      0xe89dfbffff	                        call sym.process	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x40004d3	            0x85c0	                           test eax, eax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x40004d5	     0xf8505010000	                           jne 0x40005e0	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x40004db	        0x4883c508	                              add rbp, 8	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x40004df	        0x4883c314	                           add rbx, 0x14	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x40004e3	          0x4c39f5	                            cmp rbp, r14	       278	walker.c	FUNCTION_13	FOR_1
0x40004e6	            0x7478	                            je 0x4000560	       278	walker.c	FUNCTION_13	FOR_1
0x40004e8	        0x4c8b6d00	                    mov r13, qword [rbp]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x40004ec	          0x4889de	                            mov rsi, rbx	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40004ef	          0x4c89ef	                            mov rdi, r13	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40004f2	      0xe800000000	                          call 0x40004f7	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40004f7	            0x85c0	                           test eax, eax	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40004f9	            0x74c5	                            je 0x40004c0	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40004fb	            0x31f6	                            xor esi, esi	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40004fd	          0x4c89ef	                            mov rdi, r13	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x4000500	      0xe800000000	                          call 0x4000505	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x4000505	            0x85c0	                           test eax, eax	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x4000507	     0xf859b030000	                           jne 0x40008a8	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x400050d	          0x4c89ef	                            mov rdi, r13	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x4000510	      0xe800000000	                          call 0x4000515	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x4000515	          0x4c89e7	                            mov rdi, r12	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x4000518	          0x4989c5	                            mov r13, rax	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x400051b	          0x4889c6	                            mov rsi, rax	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x400051e	      0x41ff542408	                    call qword [r12 + 8]	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x4000523	            0x85c0	                           test eax, eax	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x4000525	     0xf8575030000	                           jne 0x40008a0	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x400052b	        0x498b5508	                mov rdx, qword [r13 + 8]	        53	string3.h	FUNCTION_32	CALL_3
0x400052f	          0x4c89ef	                            mov rdi, r13	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x4000532	          0x488913	                    mov qword [rbx], rdx	        53	string3.h	FUNCTION_32	CALL_3
0x4000535	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	        53	string3.h	FUNCTION_32	CALL_3
0x4000539	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_32	CALL_3
0x400053d	        0x418b4518	            mov eax, dword [r13 + 0x18] 	        53	string3.h	FUNCTION_32	CALL_3
0x4000541	          0x894310	             mov dword [rbx + 0x10], eax	        53	string3.h	FUNCTION_32	CALL_3
0x4000544	      0xe800000000	                          call 0x4000549	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x4000549	      0xe972ffffff	                           jmp 0x40004c0	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x400054e	            0x6690	                                     nop	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x4000550	          0x4889df	                            mov rdi, rbx	        62	walker.c	FUNCTION_3	CALL_8
0x4000553	      0xe800000000	                          call 0x4000558	        62	walker.c	FUNCTION_3	CALL_8
0x4000558	     0xf1f84000000	                   nop dword [rax + rax]	        62	walker.c	FUNCTION_3	CALL_8
0x4000560	    0x488b3d000000	            mov rdi, qword [0x04000567] 	       162	walker.c	FUNCTION_8	WHILE_1
0x4000567	          0x4885ff	                           test rdi, rdi	       162	walker.c	FUNCTION_8	WHILE_1
0x400056a	     0xf8468030000	                            je 0x40008d8	       162	walker.c	FUNCTION_8	WHILE_1
0x4000570	        0x488b4708	                mov rax, qword [rdi + 8]	       165	walker.c	FUNCTION_8	WHILE_1
0x4000574	          0x488b1f	                    mov rbx, qword [rdi]	       163	walker.c	FUNCTION_8	WHILE_1
0x4000577	    0x488905000000	            mov qword [0x0400057e], rax 	       165	walker.c	FUNCTION_8	WHILE_1
0x400057e	      0xe800000000	                          call 0x4000583	       166	walker.c	FUNCTION_8	WHILE_1	CALL_1
0x4000583	    0x48833d000000	               cmp qword [0x0400058b], 0	       167	walker.c	FUNCTION_8	WHILE_1	IF_1
0x400058b	     0xf845f020000	                            je 0x40007f0	       167	walker.c	FUNCTION_8	WHILE_1	IF_1
0x4000591	          0xf60340	                   test byte [rbx], 0x40	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x4000594	     0xf84b6000000	                            je 0x4000650	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x400059a	           0xfb603	                   movzx eax, byte [rbx]	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x400059d	          0x83e00e	                            and eax, 0xe	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x40005a0	     0xf8442010000	                            je 0x40006e8	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x40005a6	            0x3c02	                               cmp al, 2	       114	walker.c	FUNCTION_6	IF_1
0x40005a8	     0xf8451010000	                            je 0x40006ff	       114	walker.c	FUNCTION_6	IF_1
0x40005ae	            0x3c04	                               cmp al, 4	       119	walker.c	FUNCTION_6	IF_3
0x40005b0	     0xf844a020000	                            je 0x4000800	       119	walker.c	FUNCTION_6	IF_3
0x40005b6	            0x3c06	                               cmp al, 6	       124	walker.c	FUNCTION_6	IF_5
0x40005b8	            0x74a6	                            je 0x4000560	       124	walker.c	FUNCTION_6	IF_5
0x40005ba	            0x3c08	                               cmp al, 8	       127	walker.c	FUNCTION_6	IF_6
0x40005bc	     0xf855e040000	                           jne 0x4000a20	       127	walker.c	FUNCTION_6	IF_6
0x40005c2	          0x4889df	                            mov rdi, rbx	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x40005c5	      0xe800000000	                          call 0x40005ca	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x40005ca	            0x85c0	                           test eax, eax	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x40005cc	            0x7512	                           jne 0x40005e0	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x40005ce	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       106	walker.c	FUNCTION_5	CALL_2
0x40005d2	          0x4c89e7	                            mov rdi, r12	       106	walker.c	FUNCTION_5	CALL_2
0x40005d5	      0xe896faffff	                        call sym.process	       106	walker.c	FUNCTION_5	CALL_2
0x40005da	            0x85c0	                           test eax, eax	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x40005dc	            0x7482	                            je 0x4000560	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x40005de	            0x6690	                                     nop	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x40005e0	      0x4c8d742450	                   lea r14, [rsp + 0x50]	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x40005e5	      0x4c8d642430	                   lea r12, [rsp + 0x30]	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x40005ea	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x40005ef	    0x48c744241800	               mov qword [rsp + 0x18], 0	       260	walker.c	FUNCTION_13
0x40005f8	          0x4c89ff	                            mov rdi, r15	       319	walker.c	FUNCTION_13	CALL_13
0x40005fb	      0xe800000000	                          call 0x4000600	       319	walker.c	FUNCTION_13	CALL_13
0x4000600	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       320	walker.c	FUNCTION_13	CALL_14
0x4000605	      0xe800000000	                          call 0x400060a	       320	walker.c	FUNCTION_13	CALL_14
0x400060a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       321	walker.c	FUNCTION_13	CALL_15
0x400060f	      0xe800000000	                          call 0x4000614	       321	walker.c	FUNCTION_13	CALL_15
0x4000614	          0x4c89f7	                            mov rdi, r14	       322	walker.c	FUNCTION_13	CALL_16
0x4000617	      0xe800000000	                          call 0x400061c	       322	walker.c	FUNCTION_13	CALL_16
0x400061c	          0x4c89e7	                            mov rdi, r12	       323	walker.c	FUNCTION_13	CALL_17
0x400061f	      0xe800000000	                          call 0x4000624	       323	walker.c	FUNCTION_13	CALL_17
0x4000624	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	       325	walker.c	FUNCTION_13
0x400062c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       325	walker.c	FUNCTION_13
0x4000635	            0x89d8	                            mov eax, ebx	       325	walker.c	FUNCTION_13
0x4000637	     0xf85df040000	                           jne 0x4000b1c	       325	walker.c	FUNCTION_13
0x400063d	    0x4881c4c80000	                           add rsp, 0xc8	       325	walker.c	FUNCTION_13
0x4000644	              0x5b	                                 pop rbx	       325	walker.c	FUNCTION_13
0x4000645	              0x5d	                                 pop rbp	       325	walker.c	FUNCTION_13
0x4000646	            0x415c	                                 pop r12	       325	walker.c	FUNCTION_13
0x4000648	            0x415d	                                 pop r13	       325	walker.c	FUNCTION_13
0x400064a	            0x415e	                                 pop r14	       325	walker.c	FUNCTION_13
0x400064c	            0x415f	                                 pop r15	       325	walker.c	FUNCTION_13
0x400064e	              0xc3	                                     ret	       325	walker.c	FUNCTION_13
0x400064f	              0x90	                                     nop	       325	walker.c	FUNCTION_13
0x4000650	        0x488d6b04	                      lea rbp, [rbx + 4]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000654	          0x4c89e7	                            mov rdi, r12	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000657	          0x4889ee	                            mov rsi, rbp	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x400065a	      0x41ff542418	                 call qword [r12 + 0x18]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x400065f	            0x85c0	                           test eax, eax	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000661	     0xf8433ffffff	                            je 0x400059a	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000667	          0x4889ef	                            mov rdi, rbp	        24	walker.c	FUNCTION_2
0x400066a	      0xe800000000	                          call 0x400066f	        24	walker.c	FUNCTION_2
0x400066f	           0xfb613	                   movzx edx, byte [rbx]	        24	walker.c	FUNCTION_2
0x4000672	          0x4989c0	                             mov r8, rax	        24	walker.c	FUNCTION_2
0x4000675	      0xb900000000	                              mov ecx, 0	        24	walker.c	FUNCTION_2
0x400067a	          0xf6c20e	                            test dl, 0xe	        24	walker.c	FUNCTION_2
0x400067d	     0xf8532040000	                           jne 0x4000ab5	        24	walker.c	FUNCTION_2
0x4000683	    0x488b3d000000	            mov rdi, qword [0x0400068a] 	        97	stdio2.h	CALL_10
0x400068a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_10
0x400068f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x4000694	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_10
0x4000696	      0xe800000000	                          call 0x400069b	        97	stdio2.h	CALL_10
0x400069b	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_51	CALL_1
0x40006a0	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_51	CALL_1
0x40006a5	      0xbf00000000	                              mov edi, 0	       975	cache.h	FUNCTION_51	CALL_1
0x40006aa	      0xe800000000	                          call 0x40006af	       975	cache.h	FUNCTION_51	CALL_1
0x40006af	            0x85c0	                           test eax, eax	        27	walker.c	FUNCTION_2	IF_1	CALL_3
0x40006b1	     0xf8429ffffff	                            je 0x40005e0	        27	walker.c	FUNCTION_2	IF_1	CALL_3
0x40006b7	      0xbf00000000	                              mov edi, 0	        28	walker.c	FUNCTION_2	IF_1
0x40006bc	      0xe800000000	                          call 0x40006c1	        28	walker.c	FUNCTION_2	IF_1
0x40006c1	    0x488b3d000000	            mov rdi, qword [0x040006c8] 	        97	stdio2.h	CALL_10
0x40006c8	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_10
0x40006cb	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_10
0x40006d0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x40006d5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_10
0x40006d7	      0xe800000000	                          call 0x40006dc	        97	stdio2.h	CALL_10
0x40006dc	      0xe9fffeffff	                           jmp 0x40005e0	        97	stdio2.h	CALL_10
0x40006e1	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_10
0x40006e8	        0x488d7b04	                      lea rdi, [rbx + 4]	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x40006ec	      0xe800000000	                          call 0x40006f1	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x40006f1	           0xfb603	                   movzx eax, byte [rbx]	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x40006f4	          0x83e00e	                            and eax, 0xe	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x40006f7	            0x3c02	                               cmp al, 2	       114	walker.c	FUNCTION_6	IF_1
0x40006f9	     0xf85affeffff	                           jne 0x40005ae	       114	walker.c	FUNCTION_6	IF_1
0x40006ff	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_71	CALL_1
0x4000701	          0x4889df	                            mov rdi, rbx	        75	commit.h	FUNCTION_71	CALL_1
0x4000704	      0xe800000000	                          call 0x4000709	        75	commit.h	FUNCTION_71	CALL_1
0x4000709	            0x85c0	                           test eax, eax	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x400070b	     0xf85cffeffff	                           jne 0x40005e0	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x4000711	    0x488b05000000	            mov rax, qword [0x04000718] 	        80	walker.c	FUNCTION_4	WHILE_1
0x4000718	          0x4885c0	                           test rax, rax	        80	walker.c	FUNCTION_4	WHILE_1
0x400071b	            0x743b	                            je 0x4000758	        80	walker.c	FUNCTION_4	WHILE_1
0x400071d	          0x488b00	                    mov rax, qword [rax]	        80	walker.c	FUNCTION_4	WHILE_1
0x4000720	        0x488b4028	            mov rax, qword [rax + 0x28] 	        80	walker.c	FUNCTION_4	WHILE_1
0x4000724	        0x48394328	            cmp qword [rbx + 0x28], rax 	        80	walker.c	FUNCTION_4	WHILE_1
0x4000728	            0x7613	                           jbe 0x400073d	        80	walker.c	FUNCTION_4	WHILE_1
0x400072a	            0xeb2c	                           jmp 0x4000758	        80	walker.c	FUNCTION_4	WHILE_1
0x400072c	         0xf1f4000	                         nop dword [rax]	        80	walker.c	FUNCTION_4	WHILE_1
0x4000730	          0x488b00	                    mov rax, qword [rax]	        80	walker.c	FUNCTION_4	WHILE_1
0x4000733	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	        80	walker.c	FUNCTION_4	WHILE_1
0x4000737	        0x48394828	            cmp qword [rax + 0x28], rcx 	        80	walker.c	FUNCTION_4	WHILE_1
0x400073b	            0x721b	                            jb 0x4000758	        80	walker.c	FUNCTION_4	WHILE_1
0x400073d	      0xbe01000000	                              mov esi, 1	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x4000742	      0xbf00000000	                              mov edi, 0	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x4000747	      0xe800000000	                          call 0x400074c	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x400074c	    0x488b05000000	            mov rax, qword [0x04000753] 	        80	walker.c	FUNCTION_4	WHILE_1
0x4000753	          0x4885c0	                           test rax, rax	        80	walker.c	FUNCTION_4	WHILE_1
0x4000756	            0x75d8	                           jne 0x4000730	        80	walker.c	FUNCTION_4	WHILE_1
0x4000758	          0xf60310	                   test byte [rbx], 0x10	        84	walker.c	FUNCTION_4	IF_2
0x400075b	     0xf85fffdffff	                           jne 0x4000560	        84	walker.c	FUNCTION_4	IF_2
0x4000761	        0x488b4304	                mov rax, qword [rbx + 4]	        53	string3.h	FUNCTION_32	CALL_3
0x4000765	        0x488d7b04	                      lea rdi, [rbx + 4]	        89	walker.c	FUNCTION_4	CALL_5
0x4000769	    0x488905000000	            mov qword [0x04000770], rax 	        53	string3.h	FUNCTION_32	CALL_3
0x4000770	        0x488b430c	              mov rax, qword [rbx + 0xc]	        53	string3.h	FUNCTION_32	CALL_3
0x4000774	    0x488905000000	            mov qword [0x0400077b], rax 	        53	string3.h	FUNCTION_32	CALL_3
0x400077b	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        53	string3.h	FUNCTION_32	CALL_3
0x400077e	    0x890500000000	            mov dword [0x04000784], eax 	        53	string3.h	FUNCTION_32	CALL_3
0x4000784	      0xe800000000	                          call 0x4000789	        89	walker.c	FUNCTION_4	CALL_5
0x4000789	      0xbe00000000	                              mov esi, 0	        89	walker.c	FUNCTION_4	CALL_5
0x400078e	          0x4889c2	                            mov rdx, rax	        89	walker.c	FUNCTION_4	CALL_5
0x4000791	          0x4c89e7	                            mov rdi, r12	        89	walker.c	FUNCTION_4	CALL_5
0x4000794	            0x31c0	                            xor eax, eax	        89	walker.c	FUNCTION_4	CALL_5
0x4000796	      0xe800000000	                          call 0x400079b	        89	walker.c	FUNCTION_4	CALL_5
0x400079b	          0x4889df	                            mov rdi, rbx	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x400079e	      0xe800000000	                          call 0x40007a3	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40007a3	          0x4c89e7	                            mov rdi, r12	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40007a6	          0x4889c6	                            mov rsi, rax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40007a9	      0xe8c2f8ffff	                        call sym.process	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40007ae	            0x85c0	                           test eax, eax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40007b0	     0xf852afeffff	                           jne 0x40005e0	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40007b6	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	        94	walker.c	FUNCTION_4	FOR_1
0x40007ba	          0x4885db	                           test rbx, rbx	        94	walker.c	FUNCTION_4	FOR_1
0x40007bd	            0x7516	                           jne 0x40007d5	        94	walker.c	FUNCTION_4	FOR_1
0x40007bf	      0xe99cfdffff	                           jmp 0x4000560	        94	walker.c	FUNCTION_4	FOR_1
0x40007c4	         0xf1f4000	                         nop dword [rax]	        94	walker.c	FUNCTION_4	FOR_1
0x40007c8	        0x488b5b08	                mov rbx, qword [rbx + 8]	        94	walker.c	FUNCTION_4	FOR_1
0x40007cc	          0x4885db	                           test rbx, rbx	        94	walker.c	FUNCTION_4	FOR_1
0x40007cf	     0xf848bfdffff	                            je 0x4000560	        94	walker.c	FUNCTION_4	FOR_1
0x40007d5	          0x488b33	                    mov rsi, qword [rbx]	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40007d8	          0x4c89e7	                            mov rdi, r12	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40007db	      0xe890f8ffff	                        call sym.process	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40007e0	            0x85c0	                           test eax, eax	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40007e2	            0x74e4	                            je 0x40007c8	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40007e4	      0xe9f7fdffff	                           jmp 0x40005e0	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40007e9	     0xf1f80000000	                         nop dword [rax]	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40007f0	    0x48c705000000	               mov qword [0x040007fb], 0	       168	walker.c	FUNCTION_8	WHILE_1	IF_1
0x40007fb	      0xe991fdffff	                           jmp 0x4000591	       168	walker.c	FUNCTION_8	WHILE_1	IF_1
0x4000800	            0x31f6	                            xor esi, esi	        22	tree.h	FUNCTION_72	CALL_1
0x4000802	          0x4889df	                            mov rdi, rbx	        22	tree.h	FUNCTION_72	CALL_1
0x4000805	      0xe800000000	                          call 0x400080a	        22	tree.h	FUNCTION_72	CALL_1
0x400080a	            0x85c0	                           test eax, eax	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x400080c	     0xf85cefdffff	                           jne 0x40005e0	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x4000812	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	        42	walker.c	FUNCTION_3	CALL_2
0x4000816	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	        42	walker.c	FUNCTION_3	CALL_2
0x400081a	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	        42	walker.c	FUNCTION_3	CALL_2
0x4000822	      0xe800000000	                          call 0x4000827	        42	walker.c	FUNCTION_3	CALL_2
0x4000827	    0x660f1f840000	                    nop word [rax + rax]	        42	walker.c	FUNCTION_3	CALL_2
0x4000830	      0x488d742470	                   lea rsi, [rsp + 0x70]	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x4000835	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x400083d	      0xe800000000	                          call 0x4000842	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x4000842	            0x85c0	                           test eax, eax	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x4000844	     0xf8406fdffff	                            je 0x4000550	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x400084a	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	        47	walker.c	FUNCTION_3	WHILE_1	IF_2
0x4000851	      0x2500f00000	                         and eax, 0xf000	        47	walker.c	FUNCTION_3	WHILE_1	IF_2
0x4000856	      0x3d00e00000	                         cmp eax, 0xe000	        47	walker.c	FUNCTION_3	WHILE_1	IF_2
0x400085b	            0x74d3	                            je 0x4000830	        47	walker.c	FUNCTION_3	WHILE_1	IF_2
0x400085d	      0x3d00400000	                         cmp eax, 0x4000	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x4000862	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x4000867	            0x7427	                            je 0x4000890	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x4000869	      0xe800000000	                          call 0x400086e	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_6
0x400086e	          0x4885c0	                           test rax, rax	        56	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x4000871	     0xf8469fdffff	                            je 0x40005e0	        56	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x4000877	          0x4889c6	                            mov rsi, rax	        57	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x400087a	          0x4c89e7	                            mov rdi, r12	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x400087d	      0xe8eef7ffff	                        call sym.process	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x4000882	            0x85c0	                           test eax, eax	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x4000884	            0x74aa	                            je 0x4000830	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x4000886	      0xe955fdffff	                           jmp 0x40005e0	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x400088b	       0xf1f440000	                   nop dword [rax + rax]	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x4000890	      0xe800000000	                          call 0x4000895	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x4000895	          0x4885c0	                           test rax, rax	        51	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x4000898	            0x75dd	                           jne 0x4000877	        51	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x400089a	      0xe941fdffff	                           jmp 0x40005e0	        51	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x400089f	              0x90	                                     nop	        51	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40008a0	          0x4c89ef	                            mov rdi, r13	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x40008a3	      0xe800000000	                          call 0x40008a8	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x40008a8	        0x488b7500	                    mov rsi, qword [rbp]	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x40008ac	      0xbf00000000	                              mov edi, 0	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x40008b1	            0x31c0	                            xor eax, eax	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x40008b3	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x40008b8	      0x4c8d742450	                   lea r14, [rsp + 0x50]	       261	walker.c	FUNCTION_13
0x40008bd	      0x4c8d642430	                   lea r12, [rsp + 0x30]	       261	walker.c	FUNCTION_13
0x40008c2	      0xe800000000	                          call 0x40008c7	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x40008c7	    0x48c744241800	               mov qword [rsp + 0x18], 0	       260	walker.c	FUNCTION_13
0x40008d0	      0xe923fdffff	                           jmp 0x40005f8	       260	walker.c	FUNCTION_13
0x40008d5	           0xf1f00	                         nop dword [rax]	       260	walker.c	FUNCTION_13
0x40008d8	    0x48837c242800	               cmp qword [rsp + 0x28], 0	       289	walker.c	FUNCTION_13	IF_7
0x40008de	     0xf84b7010000	                            je 0x4000a9b	       289	walker.c	FUNCTION_13	IF_7
0x40008e4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       293	walker.c	FUNCTION_13	IF_8
0x40008e9	    0x48c744241800	               mov qword [rsp + 0x18], 0	       296	walker.c	FUNCTION_13	ELSE_1
0x40008f2	          0x4885c0	                           test rax, rax	       293	walker.c	FUNCTION_13	IF_8
0x40008f5	            0x7414	                            je 0x400090b	       293	walker.c	FUNCTION_13	IF_8
0x40008f7	          0x4889c6	                            mov rsi, rax	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x40008fa	      0xbf00000000	                              mov edi, 0	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x40008ff	            0x31c0	                            xor eax, eax	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x4000901	      0xe800000000	                          call 0x4000906	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x4000906	      0x4889442418	             mov qword [rsp + 0x18], rax	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x400090b	        0x8b742408	                mov esi, dword [rsp + 8]	       298	walker.c	FUNCTION_13	FOR_2
0x400090f	            0x85f6	                           test esi, esi	       298	walker.c	FUNCTION_13	FOR_2
0x4000911	     0xf8e41010000	                           jle 0x4000a58	       298	walker.c	FUNCTION_13	FOR_2
0x4000917	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       298	walker.c	FUNCTION_13	FOR_2
0x400091c	    0x41be00000000	                             mov r14d, 0	       298	walker.c	FUNCTION_13	FOR_2
0x4000922	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	       298	walker.c	FUNCTION_13	FOR_2
0x4000927	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       298	walker.c	FUNCTION_13	FOR_2
0x400092c	          0x4885c0	                           test rax, rax	       298	walker.c	FUNCTION_13	FOR_2
0x400092f	        0x4c0f45f0	                         cmovne r14, rax	       298	walker.c	FUNCTION_13	FOR_2
0x4000933	        0x8b442408	                mov eax, dword [rsp + 8]	       298	walker.c	FUNCTION_13	FOR_2
0x4000937	      0x4c89742420	             mov qword [rsp + 0x20], r14	       298	walker.c	FUNCTION_13	FOR_2
0x400093c	          0x83e801	                              sub eax, 1	       298	walker.c	FUNCTION_13	FOR_2
0x400093f	      0x4c8d6cc508	              lea r13, [rbp + rax*8 + 8]	       298	walker.c	FUNCTION_13	FOR_2
0x4000944	            0xeb65	                           jmp 0x40009ab	       298	walker.c	FUNCTION_13	FOR_2
0x4000946	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       298	walker.c	FUNCTION_13	FOR_2
0x4000950	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_75	IF_2
0x4000953	        0x488b5500	                    mov rdx, qword [rbp]	       166	strbuf.h	FUNCTION_75	IF_2
0x4000957	      0x4c8d642430	                   lea r12, [rsp + 0x30]	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x400095c	            0x31c0	                            xor eax, eax	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x400095e	      0xbe00000000	                              mov esi, 0	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000963	          0x4c89e7	                            mov rdi, r12	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000966	      0xe800000000	                          call 0x400096b	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x400096b	        0x4883ec08	                              sub rsp, 8	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x400096f	            0x31c9	                            xor ecx, ecx	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000971	          0x4531c0	                            xor r8d, r8d	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000974	      0x4c8d742458	                   lea r14, [rsp + 0x58]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000979	          0x4889da	                            mov rdx, rbx	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x400097c	          0x4c89ff	                            mov rdi, r15	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x400097f	            0x4156	                                push r14	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000981	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000986	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x400098b	      0xe800000000	                          call 0x4000990	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000990	            0x85c0	                           test eax, eax	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000992	              0x5a	                                 pop rdx	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000993	              0x59	                                 pop rcx	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000994	     0xf85e6000000	                           jne 0x4000a80	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x400099a	        0x4883c508	                              add rbp, 8	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x400099e	        0x4883c314	                           add rbx, 0x14	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x40009a2	          0x4939ed	                            cmp r13, rbp	       298	walker.c	FUNCTION_13	FOR_2
0x40009a5	     0xf84ad000000	                            je 0x4000a58	       298	walker.c	FUNCTION_13	FOR_2
0x40009ab	        0x488b5500	                    mov rdx, qword [rbp]	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x40009af	          0x4885d2	                           test rdx, rdx	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x40009b2	            0x74e6	                            je 0x400099a	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x40009b4	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       165	strbuf.h	FUNCTION_75	IF_2
0x40009b9	    0x48c744243800	               mov qword [rsp + 0x38], 0	       164	strbuf.h	FUNCTION_75
0x40009c2	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_75	IF_2
0x40009c8	            0x7586	                           jne 0x4000950	       165	strbuf.h	FUNCTION_75	IF_2
0x40009ca	    0x803d00000000	                cmp byte [0x040009d1], 0	       168	strbuf.h	FUNCTION_75	CALL_2
0x40009d1	            0x7484	                            je 0x4000957	       168	strbuf.h	FUNCTION_75	CALL_2
0x40009d3	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_75	CALL_2
0x40009d8	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_75	CALL_2
0x40009dd	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_75	CALL_2
0x40009e2	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_75	CALL_2
0x40009e7	      0xe800000000	                          call 0x40009ec	       168	strbuf.h	FUNCTION_75	CALL_2
0x40009ec	         0xf1f4000	                         nop dword [rax]	       168	strbuf.h	FUNCTION_75	CALL_2
0x40009f0	      0x458b44242c	            mov r8d, dword [r12 + 0x2c] 	       273	walker.c	FUNCTION_13	IF_3
0x40009f5	          0x4531ff	                          xor r15d, r15d	       258	walker.c	FUNCTION_13
0x40009f8	          0x4585c0	                           test r8d, r8d	       273	walker.c	FUNCTION_13	IF_3
0x40009fb	     0xf859ffaffff	                           jne 0x40004a0	       273	walker.c	FUNCTION_13	IF_3
0x4000a01	            0x31f6	                            xor esi, esi	       274	walker.c	FUNCTION_13	IF_3	CALL_3
0x4000a03	      0xbf00000000	                              mov edi, 0	       274	walker.c	FUNCTION_13	IF_3	CALL_3
0x4000a08	      0xe800000000	                          call 0x4000a0d	       274	walker.c	FUNCTION_13	IF_3	CALL_3
0x4000a0d	      0xbf00000000	                              mov edi, 0	       275	walker.c	FUNCTION_13	IF_3	CALL_4
0x4000a12	      0xe800000000	                          call 0x4000a17	       275	walker.c	FUNCTION_13	IF_3	CALL_4
0x4000a17	      0xe984faffff	                           jmp 0x40004a0	       275	walker.c	FUNCTION_13	IF_3	CALL_4
0x4000a1c	         0xf1f4000	                         nop dword [rax]	       275	walker.c	FUNCTION_13	IF_3	CALL_4
0x4000a20	        0x488d7b04	                      lea rdi, [rbx + 4]	       132	walker.c	FUNCTION_6
0x4000a24	      0xe800000000	                          call 0x4000a29	       132	walker.c	FUNCTION_6
0x4000a29	           0xfb63b	                   movzx edi, byte [rbx]	       132	walker.c	FUNCTION_6
0x4000a2c	          0x4889c5	                            mov rbp, rax	       132	walker.c	FUNCTION_6
0x4000a2f	          0x40d0ef	                              shr dil, 1	       132	walker.c	FUNCTION_6
0x4000a32	          0x83e707	                              and edi, 7	       132	walker.c	FUNCTION_6
0x4000a35	      0xe800000000	                          call 0x4000a3a	       132	walker.c	FUNCTION_6
0x4000a3a	          0x4889ea	                            mov rdx, rbp	       132	walker.c	FUNCTION_6
0x4000a3d	          0x4889c6	                            mov rsi, rax	       132	walker.c	FUNCTION_6
0x4000a40	      0xbf00000000	                              mov edi, 0	       132	walker.c	FUNCTION_6
0x4000a45	            0x31c0	                            xor eax, eax	       132	walker.c	FUNCTION_6
0x4000a47	      0xe800000000	                          call 0x4000a4c	       132	walker.c	FUNCTION_6
0x4000a4c	      0xe98ffbffff	                           jmp 0x40005e0	       132	walker.c	FUNCTION_6
0x4000a51	     0xf1f80000000	                         nop dword [rax]	       132	walker.c	FUNCTION_6
0x4000a58	      0x4c8d742450	                   lea r14, [rsp + 0x50]	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000a5d	          0x4c89ff	                            mov rdi, r15	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000a60	          0x4c89f6	                            mov rsi, r14	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000a63	      0xe800000000	                          call 0x4000a68	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000a68	            0x85c0	                           test eax, eax	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000a6a	            0x7567	                           jne 0x4000ad3	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000a6c	            0x31db	                            xor ebx, ebx	       316	walker.c	FUNCTION_13
0x4000a6e	      0x4c8d642430	                   lea r12, [rsp + 0x30]	       316	walker.c	FUNCTION_13
0x4000a73	      0xe980fbffff	                           jmp 0x40005f8	       316	walker.c	FUNCTION_13
0x4000a78	     0xf1f84000000	                   nop dword [rax + rax]	       316	walker.c	FUNCTION_13
0x4000a80	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000a85	      0xbf00000000	                              mov edi, 0	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000a8a	            0x31c0	                            xor eax, eax	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000a8c	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x4000a91	      0xe800000000	                          call 0x4000a96	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000a96	      0xe95dfbffff	                           jmp 0x40005f8	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000a9b	            0x31db	                            xor ebx, ebx	       290	walker.c	FUNCTION_13	IF_7
0x4000a9d	    0x48c744241800	               mov qword [rsp + 0x18], 0	       260	walker.c	FUNCTION_13
0x4000aa6	      0x4c8d742450	                   lea r14, [rsp + 0x50]	       260	walker.c	FUNCTION_13
0x4000aab	      0x4c8d642430	                   lea r12, [rsp + 0x30]	       260	walker.c	FUNCTION_13
0x4000ab0	      0xe943fbffff	                           jmp 0x40005f8	       260	walker.c	FUNCTION_13
0x4000ab5	            0xd0ea	                               shr dl, 1	        25	walker.c	FUNCTION_2	CALL_1
0x4000ab7	      0x4889442408	                mov qword [rsp + 8], rax	        25	walker.c	FUNCTION_2	CALL_1
0x4000abc	            0x89d7	                            mov edi, edx	        24	walker.c	FUNCTION_2
0x4000abe	          0x83e707	                              and edi, 7	        24	walker.c	FUNCTION_2
0x4000ac1	      0xe800000000	                          call 0x4000ac6	        24	walker.c	FUNCTION_2
0x4000ac6	      0x4c8b442408	                 mov r8, qword [rsp + 8]	        24	walker.c	FUNCTION_2
0x4000acb	          0x4889c1	                            mov rcx, rax	        24	walker.c	FUNCTION_2
0x4000ace	      0xe9b0fbffff	                           jmp 0x4000683	        24	walker.c	FUNCTION_2
0x4000ad3	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       312	walker.c	FUNCTION_13	IF_11
0x4000ad8	      0xbf00000000	                              mov edi, 0	       312	walker.c	FUNCTION_13	IF_11
0x4000add	            0x31c0	                            xor eax, eax	       312	walker.c	FUNCTION_13	IF_11
0x4000adf	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x4000ae4	      0x4c8d642430	                   lea r12, [rsp + 0x30]	       261	walker.c	FUNCTION_13
0x4000ae9	      0xe800000000	                          call 0x4000aee	       312	walker.c	FUNCTION_13	IF_11
0x4000aee	      0xe905fbffff	                           jmp 0x40005f8	       312	walker.c	FUNCTION_13	IF_11
0x4000af3	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       268	walker.c	FUNCTION_13	IF_1	IF_2
0x4000af8	      0xbf00000000	                              mov edi, 0	       268	walker.c	FUNCTION_13	IF_1	IF_2
0x4000afd	            0x31c0	                            xor eax, eax	       268	walker.c	FUNCTION_13	IF_1	IF_2
0x4000aff	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x4000b04	      0x4c8d642430	                   lea r12, [rsp + 0x30]	       261	walker.c	FUNCTION_13
0x4000b09	      0xe800000000	                          call 0x4000b0e	       268	walker.c	FUNCTION_13	IF_1	IF_2
0x4000b0e	    0x48c744241800	               mov qword [rsp + 0x18], 0	       260	walker.c	FUNCTION_13
0x4000b17	      0xe9dcfaffff	                           jmp 0x40005f8	       260	walker.c	FUNCTION_13
0x4000b1c	      0xe800000000	                          call 0x4000b21	       325	walker.c	FUNCTION_13
walker_targets_stdin	IF,3:functions,0:SWITCH,0:ELSE,0:FOR,0:DO,0:WHILE,1:CALL,5	105
0x40001e0	            0x4157	                                push r15	       216	walker.c	FUNCTION_11
0x40001e2	            0x4156	                                push r14	       216	walker.c	FUNCTION_11
0x40001e4	          0x4989ff	                            mov r15, rdi	       216	walker.c	FUNCTION_11
0x40001e7	            0x4155	                                push r13	       216	walker.c	FUNCTION_11
0x40001e9	            0x4154	                                push r12	       216	walker.c	FUNCTION_11
0x40001eb	          0x4989f6	                            mov r14, rsi	       216	walker.c	FUNCTION_11
0x40001ee	              0x55	                                push rbp	       216	walker.c	FUNCTION_11
0x40001ef	              0x53	                                push rbx	       216	walker.c	FUNCTION_11
0x40001f0	            0x31ed	                            xor ebp, ebp	       217	walker.c	FUNCTION_11
0x40001f2	            0x31db	                            xor ebx, ebx	       219	walker.c	FUNCTION_11
0x40001f4	        0x4883ec38	                           sub rsp, 0x38	       216	walker.c	FUNCTION_11
0x40001f8	    0x48c707000000	                      mov qword [rdi], 0	       219	walker.c	FUNCTION_11
0x40001ff	    0x48c706000000	                      mov qword [rsi], 0	       219	walker.c	FUNCTION_11
0x4000206	    0x64488b042528	                mov rax, qword fs:[0x28]	       216	walker.c	FUNCTION_11
0x400020f	      0x4889442428	             mov qword [rsp + 0x28], rax	       216	walker.c	FUNCTION_11
0x4000214	            0x31c0	                            xor eax, eax	       216	walker.c	FUNCTION_11
0x4000216	    0x48c744241000	               mov qword [rsp + 0x10], 0	       218	walker.c	FUNCTION_11
0x400021f	    0x48c744241800	               mov qword [rsp + 0x18], 0	       218	walker.c	FUNCTION_11
0x4000228	    0x48c744242000	               mov qword [rsp + 0x20], 0	       218	walker.c	FUNCTION_11
0x4000231	    0xc74424040000	                  mov dword [rsp + 4], 0	       217	walker.c	FUNCTION_11
0x4000239	            0xeb71	                           jmp 0x40002ac	       217	walker.c	FUNCTION_11
0x400023b	       0xf1f440000	                   nop dword [rax + rax]	       217	walker.c	FUNCTION_11
0x4000240	             0x1ed	                            add ebp, ebp	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000242	          0x498b3f	                    mov rdi, qword [r15]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000245	          0x4863d5	                         movsxd rdx, ebp	       798	git-compat-util.h	FUNCTION_98
0x4000248	        0x48c1e203	                              shl rdx, 3	       798	git-compat-util.h	FUNCTION_98
0x400024c	          0x4889d6	                            mov rsi, rdx	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x400024f	      0x4889542408	                mov qword [rsp + 8], rdx	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000254	      0xe800000000	                          call 0x4000259	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000259	      0x488b542408	                mov rdx, qword [rsp + 8]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x400025e	          0x498907	                    mov qword [r15], rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000261	          0x498b3e	                    mov rdi, qword [r14]	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000264	          0x4889d6	                            mov rsi, rdx	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000267	      0xe800000000	                          call 0x400026c	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x400026c	          0x498906	                    mov qword [r14], rax	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x400026f	          0x4889da	                            mov rdx, rbx	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000272	          0x490317	                    add rdx, qword [r15]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000275	          0x4c89e7	                            mov rdi, r12	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000278	          0x4989dc	                            mov r12, rbx	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x400027b	      0x4889542408	                mov qword [rsp + 8], rdx	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000280	      0xe800000000	                          call 0x4000285	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000285	      0x488b542408	                mov rdx, qword [rsp + 8]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x400028a	          0x488902	                    mov qword [rdx], rax	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x400028d	            0x31c0	                            xor eax, eax	       924	git-compat-util.h	FUNCTION_102	CALL_1
0x400028f	          0x4d0326	                    add r12, qword [r14]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000292	          0x4d85ed	                           test r13, r13	       924	git-compat-util.h	FUNCTION_102	CALL_1
0x4000295	            0x7408	                            je 0x400029f	       924	git-compat-util.h	FUNCTION_102	CALL_1
0x4000297	          0x4c89ef	                            mov rdi, r13	       924	git-compat-util.h	FUNCTION_102	CALL_1
0x400029a	      0xe800000000	                          call 0x400029f	       924	git-compat-util.h	FUNCTION_102	CALL_1
0x400029f	      0x8344240401	                  add dword [rsp + 4], 1	       238	walker.c	FUNCTION_11	WHILE_1
0x40002a4	        0x49890424	                    mov qword [r12], rax	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x40002a8	        0x4883c308	                              add rbx, 8	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x40002ac	    0x488b35000000	            mov rsi, qword [0x040002b3] 	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x40002b3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x40002b8	      0xe800000000	                          call 0x40002bd	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x40002bd	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x40002c0	            0x747e	                            je 0x4000340	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x40002c2	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       226	walker.c	FUNCTION_11	WHILE_1
0x40002c7	      0xbe09000000	                              mov esi, 9	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x40002cc	          0x4c89e7	                            mov rdi, r12	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x40002cf	      0xe800000000	                          call 0x40002d4	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x40002d4	          0x4885c0	                           test rax, rax	       228	walker.c	FUNCTION_11	WHILE_1	IF_2
0x40002d7	            0x7437	                            je 0x4000310	       228	walker.c	FUNCTION_11	WHILE_1	IF_2
0x40002d9	        0x396c2404	                cmp dword [rsp + 4], ebp	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x40002dd	        0x4c8d6801	                      lea r13, [rax + 1]	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0x40002e1	          0xc60000	                       mov byte [rax], 0	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0x40002e4	            0x7c89	                            jl 0x400026f	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x40002e6	            0x85ed	                           test ebp, ebp	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x40002e8	     0xf8552ffffff	                           jne 0x4000240	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x40002ee	          0x498b3f	                    mov rdi, qword [r15]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x40002f1	      0xbe00020000	                          mov esi, 0x200	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x40002f6	      0xbd40000000	                           mov ebp, 0x40	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x40002fb	      0xe800000000	                          call 0x4000300	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000300	      0xba00020000	                          mov edx, 0x200	       798	git-compat-util.h	FUNCTION_98
0x4000305	          0x498907	                    mov qword [r15], rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000308	      0xe954ffffff	                           jmp 0x4000261	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x400030d	           0xf1f00	                         nop dword [rax]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000310	          0x4531ed	                          xor r13d, r13d	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000313	        0x396c2404	                cmp dword [rsp + 4], ebp	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000317	            0x7dcd	                           jge 0x40002e6	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000319	          0x4989dd	                            mov r13, rbx	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x400031c	          0x4d032f	                    add r13, qword [r15]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x400031f	          0x4c89e7	                            mov rdi, r12	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000322	      0xe800000000	                          call 0x4000327	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000327	          0x4989dc	                            mov r12, rbx	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x400032a	        0x49894500	                    mov qword [r13], rax	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x400032e	            0x31c0	                            xor eax, eax	       924	git-compat-util.h	FUNCTION_102	CALL_1
0x4000330	          0x4d0326	                    add r12, qword [r14]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000333	      0xe967ffffff	                           jmp 0x400029f	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000338	     0xf1f84000000	                   nop dword [rax + rax]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000340	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       240	walker.c	FUNCTION_11	CALL_5
0x4000345	      0xe800000000	                          call 0x400034a	       240	walker.c	FUNCTION_11	CALL_5
0x400034a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       242	walker.c	FUNCTION_11
0x400034f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       242	walker.c	FUNCTION_11
0x4000358	        0x8b442404	                mov eax, dword [rsp + 4]	       242	walker.c	FUNCTION_11
0x400035c	            0x750f	                           jne 0x400036d	       242	walker.c	FUNCTION_11
0x400035e	        0x4883c438	                           add rsp, 0x38	       242	walker.c	FUNCTION_11
0x4000362	              0x5b	                                 pop rbx	       242	walker.c	FUNCTION_11
0x4000363	              0x5d	                                 pop rbp	       242	walker.c	FUNCTION_11
0x4000364	            0x415c	                                 pop r12	       242	walker.c	FUNCTION_11
0x4000366	            0x415d	                                 pop r13	       242	walker.c	FUNCTION_11
0x4000368	            0x415e	                                 pop r14	       242	walker.c	FUNCTION_11
0x400036a	            0x415f	                                 pop r15	       242	walker.c	FUNCTION_11
0x400036c	              0xc3	                                     ret	       242	walker.c	FUNCTION_11
0x400036d	      0xe800000000	                          call 0x4000372	       242	walker.c	FUNCTION_11
