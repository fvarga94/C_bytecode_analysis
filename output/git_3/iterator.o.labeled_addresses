prefix_ref_iterator_advance	SWITCH,0:CALL,6:functions,0:FOR,0:ELSE,2:DO,0:IF,6:WHILE,1	75
0x40002e0	            0x4155	                                push r13	       305	iterator.c	FUNCTION_18
0x40002e2	            0x4154	                                push r12	       305	iterator.c	FUNCTION_18
0x40002e4	          0x4989fc	                            mov r12, rdi	       305	iterator.c	FUNCTION_18
0x40002e7	              0x55	                                push rbp	       305	iterator.c	FUNCTION_18
0x40002e8	              0x53	                                push rbx	       305	iterator.c	FUNCTION_18
0x40002e9	        0x4883ec08	                              sub rsp, 8	       305	iterator.c	FUNCTION_18
0x40002ed	        0x488b6f28	            mov rbp, qword [rdi + 0x28] 	       305	iterator.c	FUNCTION_18
0x40002f1	        0x488b4500	                    mov rax, qword [rbp]	        13	iterator.c	FUNCTION_1	CALL_1
0x40002f5	          0x4889ef	                            mov rdi, rbp	        13	iterator.c	FUNCTION_1	CALL_1
0x40002f8	            0xff10	                        call qword [rax]	        13	iterator.c	FUNCTION_1	CALL_1
0x40002fa	            0x85c0	                           test eax, eax	       310	iterator.c	FUNCTION_18	WHILE_1	CALL_1
0x40002fc	            0x89c3	                            mov ebx, eax	        13	iterator.c	FUNCTION_1	CALL_1
0x40002fe	     0xf8592000000	                           jne 0x4000396	       310	iterator.c	FUNCTION_18	WHILE_1	CALL_1
0x4000304	      0x498b742430	            mov rsi, qword [r12 + 0x30] 	       311	iterator.c	FUNCTION_18	WHILE_1	CALL_2
0x4000309	      0x498b6c2428	            mov rbp, qword [r12 + 0x28] 	       311	iterator.c	FUNCTION_18	WHILE_1	CALL_2
0x400030e	           0xfb616	                   movzx edx, byte [rsi]	       293	iterator.c	FUNCTION_17	WHILE_1
0x4000311	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	       311	iterator.c	FUNCTION_18	WHILE_1	CALL_2
0x4000315	            0x84d2	                             test dl, dl	       293	iterator.c	FUNCTION_17	WHILE_1
0x4000317	            0x7424	                            je 0x400033d	       293	iterator.c	FUNCTION_17	WHILE_1
0x4000319	           0xfb60b	                   movzx ecx, byte [rbx]	       294	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x400031c	            0x38ca	                              cmp dl, cl	       294	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x400031e	            0x7558	                           jne 0x4000378	       294	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x4000320	            0x31c0	                            xor eax, eax	       294	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x4000322	            0xeb10	                           jmp 0x4000334	       294	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x4000324	         0xf1f4000	                         nop dword [rax]	       294	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x4000328	        0x4883c001	                              add rax, 1	       294	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x400032c	         0xfb60c03	             movzx ecx, byte [rbx + rax]	       294	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x4000330	            0x38d1	                              cmp cl, dl	       294	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x4000332	            0x7544	                           jne 0x4000378	       294	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x4000334	       0xfb6540601	        movzx edx, byte [rsi + rax + 1] 	       293	iterator.c	FUNCTION_17	WHILE_1
0x4000339	            0x84d2	                             test dl, dl	       293	iterator.c	FUNCTION_17	WHILE_1
0x400033b	            0x75eb	                           jne 0x4000328	       293	iterator.c	FUNCTION_17	WHILE_1
0x400033d	      0x4d636c2438	         movsxd r13, dword [r12 + 0x38] 	       330	iterator.c	FUNCTION_18	WHILE_1	IF_4
0x4000342	          0x4585ed	                         test r13d, r13d	       330	iterator.c	FUNCTION_18	WHILE_1	IF_4
0x4000345	            0x7479	                            je 0x40003c0	       330	iterator.c	FUNCTION_18	WHILE_1	IF_4
0x4000347	          0x4889df	                            mov rdi, rbx	       340	iterator.c	FUNCTION_18	WHILE_1	IF_4	IF_5	CALL_4
0x400034a	      0xe800000000	                          call 0x400034f	       340	iterator.c	FUNCTION_18	WHILE_1	IF_4	IF_5	CALL_4
0x400034f	          0x4c39e8	                            cmp rax, r13	       340	iterator.c	FUNCTION_18	WHILE_1	IF_4	IF_5	CALL_4
0x4000352	            0x7673	                           jbe 0x40003c7	       340	iterator.c	FUNCTION_18	WHILE_1	IF_4	IF_5	CALL_4
0x4000354	          0x4901dd	                            add r13, rbx	       342	iterator.c	FUNCTION_18	WHILE_1	IF_4
0x4000357	      0x4d896c2410	             mov qword [r12 + 0x10], r13	       342	iterator.c	FUNCTION_18	WHILE_1	IF_4
0x400035c	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       347	iterator.c	FUNCTION_18	WHILE_1
0x4000360	      0x4989442418	             mov qword [r12 + 0x18], rax	       347	iterator.c	FUNCTION_18	WHILE_1
0x4000365	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       348	iterator.c	FUNCTION_18	WHILE_1
0x4000368	      0x4189442420	             mov dword [r12 + 0x20], eax	       348	iterator.c	FUNCTION_18	WHILE_1
0x400036d	            0x31c0	                            xor eax, eax	       349	iterator.c	FUNCTION_18	WHILE_1
0x400036f	            0xeb43	                           jmp 0x40003b4	       349	iterator.c	FUNCTION_18	WHILE_1
0x4000371	     0xf1f80000000	                         nop dword [rax]	       349	iterator.c	FUNCTION_18	WHILE_1
0x4000378	            0x38d1	                              cmp cl, dl	       295	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x400037a	     0xf8271ffffff	                            jb 0x40002f1	       295	iterator.c	FUNCTION_17	WHILE_1	IF_1
0x4000380	        0xf6450801	                  test byte [rbp + 8], 1	       322	iterator.c	FUNCTION_18	WHILE_1	IF_2	IF_3
0x4000384	     0xf8467ffffff	                            je 0x40002f1	       322	iterator.c	FUNCTION_18	WHILE_1	IF_2	IF_3
0x400038a	        0x488b4500	                    mov rax, qword [rbp]	        24	iterator.c	FUNCTION_3	CALL_1
0x400038e	          0x4889ef	                            mov rdi, rbp	        24	iterator.c	FUNCTION_3	CALL_1
0x4000391	          0xff5010	                 call qword [rax + 0x10]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000394	            0x89c3	                            mov ebx, eax	        24	iterator.c	FUNCTION_3	CALL_1
0x4000396	        0x498b0424	                    mov rax, qword [r12]	        24	iterator.c	FUNCTION_3	CALL_1
0x400039a	    0x49c744242800	               mov qword [r12 + 0x28], 0	       352	iterator.c	FUNCTION_18
0x40003a3	          0x4c89e7	                            mov rdi, r12	        24	iterator.c	FUNCTION_3	CALL_1
0x40003a6	          0xff5010	                 call qword [rax + 0x10]	        24	iterator.c	FUNCTION_3	CALL_1
0x40003a9	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       354	iterator.c	FUNCTION_18	IF_6
0x40003ac	      0xb8feffffff	                     mov eax, 0xfffffffe	       354	iterator.c	FUNCTION_18	IF_6
0x40003b1	           0xf44c3	                          cmove eax, ebx	       354	iterator.c	FUNCTION_18	IF_6
0x40003b4	        0x4883c408	                              add rsp, 8	       356	iterator.c	FUNCTION_18
0x40003b8	              0x5b	                                 pop rbx	       356	iterator.c	FUNCTION_18
0x40003b9	              0x5d	                                 pop rbp	       356	iterator.c	FUNCTION_18
0x40003ba	            0x415c	                                 pop r12	       356	iterator.c	FUNCTION_18
0x40003bc	            0x415d	                                 pop r13	       356	iterator.c	FUNCTION_18
0x40003be	              0xc3	                                     ret	       356	iterator.c	FUNCTION_18
0x40003bf	              0x90	                                     nop	       356	iterator.c	FUNCTION_18
0x40003c0	      0x49895c2410	             mov qword [r12 + 0x10], rbx	       344	iterator.c	FUNCTION_18	WHILE_1	ELSE_2
0x40003c5	            0xeb95	                           jmp 0x400035c	       344	iterator.c	FUNCTION_18	WHILE_1	ELSE_2
0x40003c7	      0xbf00000000	                              mov edi, 0	       341	iterator.c	FUNCTION_18	WHILE_1	IF_4	CALL_5
0x40003cc	            0x31c0	                            xor eax, eax	       341	iterator.c	FUNCTION_18	WHILE_1	IF_4	CALL_5
0x40003ce	      0xe800000000	                          call 0x40003d3	       341	iterator.c	FUNCTION_18	WHILE_1	IF_4	CALL_5
merge_ref_iterator_abort	SWITCH,0:CALL,3:functions,0:FOR,0:ELSE,0:DO,0:IF,4:WHILE,0	30
0x4000210	              0x55	                                push rbp	       186	iterator.c	FUNCTION_13
0x4000211	              0x53	                                push rbx	       186	iterator.c	FUNCTION_13
0x4000212	          0x4889fb	                            mov rbx, rdi	       186	iterator.c	FUNCTION_13
0x4000215	        0x4883ec08	                              sub rsp, 8	       186	iterator.c	FUNCTION_13
0x4000219	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	       191	iterator.c	FUNCTION_13	IF_1
0x400021d	          0x4885ff	                           test rdi, rdi	       191	iterator.c	FUNCTION_13	IF_1
0x4000220	            0x743e	                            je 0x4000260	       191	iterator.c	FUNCTION_13	IF_1
0x4000222	          0x488b07	                    mov rax, qword [rdi]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000225	          0xff5010	                 call qword [rax + 0x10]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000228	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       192	iterator.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x400022b	            0x7433	                            je 0x4000260	       192	iterator.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x400022d	      0xbdfeffffff	                     mov ebp, 0xfffffffe	       193	iterator.c	FUNCTION_13	IF_1	IF_2
0x4000232	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       195	iterator.c	FUNCTION_13	IF_3
0x4000236	          0x4885ff	                           test rdi, rdi	       195	iterator.c	FUNCTION_13	IF_3
0x4000239	            0x7411	                            je 0x400024c	       195	iterator.c	FUNCTION_13	IF_3
0x400023b	          0x488b07	                    mov rax, qword [rdi]	        24	iterator.c	FUNCTION_3	CALL_1
0x400023e	          0xff5010	                 call qword [rax + 0x10]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000241	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       197	iterator.c	FUNCTION_13	IF_3	IF_4
0x4000244	      0xb8feffffff	                     mov eax, 0xfffffffe	       197	iterator.c	FUNCTION_13	IF_3	IF_4
0x4000249	           0xf45e8	                         cmovne ebp, eax	       197	iterator.c	FUNCTION_13	IF_3	IF_4
0x400024c	          0x4889df	                            mov rdi, rbx	        42	iterator.c	FUNCTION_5	CALL_1
0x400024f	      0xe800000000	                          call 0x4000254	        42	iterator.c	FUNCTION_5	CALL_1
0x4000254	        0x4883c408	                              add rsp, 8	       201	iterator.c	FUNCTION_13
0x4000258	            0x89e8	                            mov eax, ebp	       201	iterator.c	FUNCTION_13
0x400025a	              0x5b	                                 pop rbx	       201	iterator.c	FUNCTION_13
0x400025b	              0x5d	                                 pop rbp	       201	iterator.c	FUNCTION_13
0x400025c	              0xc3	                                     ret	       201	iterator.c	FUNCTION_13
0x400025d	           0xf1f00	                         nop dword [rax]	       201	iterator.c	FUNCTION_13
0x4000260	      0xbdffffffff	                     mov ebp, 0xffffffff	       189	iterator.c	FUNCTION_13
0x4000265	            0xebcb	                           jmp 0x4000232	       189	iterator.c	FUNCTION_13
empty_ref_iterator_advance	SWITCH,0:CALL,1:functions,0:FOR,0:ELSE,0:DO,0:IF,0:WHILE,0	3
0x4000040	          0x488b07	                    mov rax, qword [rdi]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000043	        0x488b4010	            mov rax, qword [rax + 0x10] 	        24	iterator.c	FUNCTION_3	CALL_1
0x4000047	            0xffe0	                                 jmp rax	        24	iterator.c	FUNCTION_3	CALL_1
merge_ref_iterator_advance	SWITCH,0:CALL,8:functions,0:FOR,0:ELSE,3:DO,0:IF,14:WHILE,1	116
0x4000050	            0x4155	                                push r13	       102	iterator.c	FUNCTION_11
0x4000052	            0x4154	                                push r12	       102	iterator.c	FUNCTION_11
0x4000054	              0x55	                                push rbp	       102	iterator.c	FUNCTION_11
0x4000055	              0x53	                                push rbx	       102	iterator.c	FUNCTION_11
0x4000056	          0x4889fb	                            mov rbx, rdi	       102	iterator.c	FUNCTION_11
0x4000059	        0x4883ec08	                              sub rsp, 8	       102	iterator.c	FUNCTION_11
0x400005d	        0x488b4748	            mov rax, qword [rdi + 0x48] 	       107	iterator.c	FUNCTION_11	IF_1
0x4000061	          0x4885c0	                           test rax, rax	       107	iterator.c	FUNCTION_11	IF_1
0x4000064	     0xf8426010000	                            je 0x4000190	       107	iterator.c	FUNCTION_11	IF_1
0x400006a	          0x488b38	                    mov rdi, qword [rax]	       124	iterator.c	FUNCTION_11	ELSE_1	IF_6	CALL_3
0x400006d	          0x488b07	                    mov rax, qword [rdi]	        13	iterator.c	FUNCTION_1	CALL_1
0x4000070	            0xff10	                        call qword [rax]	        13	iterator.c	FUNCTION_1	CALL_1
0x4000072	            0x85c0	                           test eax, eax	       124	iterator.c	FUNCTION_11	ELSE_1	IF_6	CALL_3
0x4000074	     0xf8586000000	                           jne 0x4000100	       124	iterator.c	FUNCTION_11	ELSE_1	IF_6	CALL_3
0x400007a	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       124	iterator.c	FUNCTION_11	ELSE_1	IF_6	CALL_3
0x400007e	        0x4c8d6b30	                   lea r13, [rbx + 0x30]	       148	iterator.c	FUNCTION_11	WHILE_1	ELSE_3
0x4000082	            0xeb22	                           jmp 0x40000a6	       148	iterator.c	FUNCTION_11	WHILE_1	ELSE_3
0x4000084	         0xf1f4000	                         nop dword [rax]	       148	iterator.c	FUNCTION_11	WHILE_1	ELSE_3
0x4000088	        0x488d4328	                   lea rax, [rbx + 0x28]	       145	iterator.c	FUNCTION_11	WHILE_1	IF_10
0x400008c	        0x40f6c504	                             test bpl, 4	       152	iterator.c	FUNCTION_11	WHILE_1	IF_11
0x4000090	          0x4d89ec	                            mov r12, r13	       146	iterator.c	FUNCTION_11	WHILE_1	IF_10
0x4000093	        0x48894348	             mov qword [rbx + 0x48], rax	       145	iterator.c	FUNCTION_11	WHILE_1	IF_10
0x4000097	            0x753a	                           jne 0x40000d3	       152	iterator.c	FUNCTION_11	WHILE_1	IF_11
0x4000099	          0x83e502	                              and ebp, 2	       160	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x400009c	     0xf85be000000	                           jne 0x4000160	       160	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x40000a2	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       160	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x40000a6	        0x488b5340	            mov rdx, qword [rbx + 0x40] 	       134	iterator.c	FUNCTION_11	WHILE_1
0x40000aa	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       134	iterator.c	FUNCTION_11	WHILE_1
0x40000ae	          0xff5338	                 call qword [rbx + 0x38]	       134	iterator.c	FUNCTION_11	WHILE_1
0x40000b1	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       137	iterator.c	FUNCTION_11	WHILE_1	IF_8
0x40000b4	            0x89c5	                            mov ebp, eax	       134	iterator.c	FUNCTION_11	WHILE_1
0x40000b6	            0x7468	                            je 0x4000120	       137	iterator.c	FUNCTION_11	WHILE_1	IF_8
0x40000b8	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       139	iterator.c	FUNCTION_11	WHILE_1	ELSE_2	IF_9
0x40000bb	     0xf847f000000	                            je 0x4000140	       139	iterator.c	FUNCTION_11	WHILE_1	ELSE_2	IF_9
0x40000c1	            0xa801	                              test al, 1	       144	iterator.c	FUNCTION_11	WHILE_1	IF_10
0x40000c3	            0x74c3	                            je 0x4000088	       144	iterator.c	FUNCTION_11	WHILE_1	IF_10
0x40000c5	        0x40f6c504	                             test bpl, 4	       152	iterator.c	FUNCTION_11	WHILE_1	IF_11
0x40000c9	        0x4c896b48	             mov qword [rbx + 0x48], r13	       148	iterator.c	FUNCTION_11	WHILE_1	ELSE_3
0x40000cd	        0x4c8d6328	                   lea r12, [rbx + 0x28]	       149	iterator.c	FUNCTION_11	WHILE_1	ELSE_3
0x40000d1	            0x74c6	                            je 0x4000099	       152	iterator.c	FUNCTION_11	WHILE_1	IF_11
0x40000d3	        0x498b3c24	                    mov rdi, qword [r12]	       153	iterator.c	FUNCTION_11	WHILE_1	IF_11	IF_12	CALL_7
0x40000d7	          0x488b07	                    mov rax, qword [rdi]	        13	iterator.c	FUNCTION_1	CALL_1
0x40000da	            0xff10	                        call qword [rax]	        13	iterator.c	FUNCTION_1	CALL_1
0x40000dc	            0x85c0	                           test eax, eax	       153	iterator.c	FUNCTION_11	WHILE_1	IF_11	IF_12	CALL_7
0x40000de	            0x74b9	                            je 0x4000099	       153	iterator.c	FUNCTION_11	WHILE_1	IF_11	IF_12	CALL_7
0x40000e0	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       155	iterator.c	FUNCTION_11	WHILE_1	IF_11	IF_12	IF_13
0x40000e3	    0x49c704240000	                      mov qword [r12], 0	       154	iterator.c	FUNCTION_11	WHILE_1	IF_11	IF_12
0x40000eb	            0x75ac	                           jne 0x4000099	       155	iterator.c	FUNCTION_11	WHILE_1	IF_11	IF_12	IF_13
0x40000ed	          0x488b03	                    mov rax, qword [rbx]	        24	iterator.c	FUNCTION_3	CALL_1
0x40000f0	          0x4889df	                            mov rdi, rbx	        24	iterator.c	FUNCTION_3	CALL_1
0x40000f3	          0xff5010	                 call qword [rax + 0x10]	        24	iterator.c	FUNCTION_3	CALL_1
0x40000f6	      0xb8feffffff	                     mov eax, 0xfffffffe	       170	iterator.c	FUNCTION_11
0x40000fb	            0xeb4e	                           jmp 0x400014b	       170	iterator.c	FUNCTION_11
0x40000fd	           0xf1f00	                         nop dword [rax]	       170	iterator.c	FUNCTION_11
0x4000100	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	       125	iterator.c	FUNCTION_11	ELSE_1	IF_6
0x4000104	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       126	iterator.c	FUNCTION_11	ELSE_1	IF_6	IF_7
0x4000107	    0x48c702000000	                      mov qword [rdx], 0	       125	iterator.c	FUNCTION_11	ELSE_1	IF_6
0x400010e	     0xf8566ffffff	                           jne 0x400007a	       126	iterator.c	FUNCTION_11	ELSE_1	IF_6	IF_7
0x4000114	            0xebd7	                           jmp 0x40000ed	       126	iterator.c	FUNCTION_11	ELSE_1	IF_6	IF_7
0x4000116	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       126	iterator.c	FUNCTION_11	ELSE_1	IF_6	IF_7
0x4000120	          0x488b03	                    mov rax, qword [rbx]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000123	          0x4889df	                            mov rdi, rbx	        24	iterator.c	FUNCTION_3	CALL_1
0x4000126	        0x488b4010	            mov rax, qword [rax + 0x10] 	        24	iterator.c	FUNCTION_3	CALL_1
0x400012a	        0x4883c408	                              add rsp, 8	       171	iterator.c	FUNCTION_11
0x400012e	              0x5b	                                 pop rbx	       171	iterator.c	FUNCTION_11
0x400012f	              0x5d	                                 pop rbp	       171	iterator.c	FUNCTION_11
0x4000130	            0x415c	                                 pop r12	       171	iterator.c	FUNCTION_11
0x4000132	            0x415d	                                 pop r13	       171	iterator.c	FUNCTION_11
0x4000134	            0xffe0	                                 jmp rax	        24	iterator.c	FUNCTION_3	CALL_1
0x4000136	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000140	          0x488b03	                    mov rax, qword [rbx]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000143	          0x4889df	                            mov rdi, rbx	        24	iterator.c	FUNCTION_3	CALL_1
0x4000146	          0xff5010	                 call qword [rax + 0x10]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000149	            0x89e8	                            mov eax, ebp	       141	iterator.c	FUNCTION_11	WHILE_1	ELSE_2	IF_9
0x400014b	        0x4883c408	                              add rsp, 8	       171	iterator.c	FUNCTION_11
0x400014f	              0x5b	                                 pop rbx	       171	iterator.c	FUNCTION_11
0x4000150	              0x5d	                                 pop rbp	       171	iterator.c	FUNCTION_11
0x4000151	            0x415c	                                 pop r12	       171	iterator.c	FUNCTION_11
0x4000153	            0x415d	                                 pop r13	       171	iterator.c	FUNCTION_11
0x4000155	              0xc3	                                     ret	       171	iterator.c	FUNCTION_11
0x4000156	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       171	iterator.c	FUNCTION_11
0x4000160	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       161	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x4000164	          0x488b10	                    mov rdx, qword [rax]	       161	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x4000167	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       161	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x400016b	        0x48895310	             mov qword [rbx + 0x10], rdx	       161	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x400016f	          0x488b10	                    mov rdx, qword [rax]	       162	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x4000172	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       162	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x4000176	        0x48895318	             mov qword [rbx + 0x18], rdx	       162	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x400017a	          0x488b00	                    mov rax, qword [rax]	       163	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x400017d	          0x8b4020	            mov eax, dword [rax + 0x20] 	       163	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x4000180	          0x894320	             mov dword [rbx + 0x20], eax	       163	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x4000183	        0x4883c408	                              add rsp, 8	       171	iterator.c	FUNCTION_11
0x4000187	            0x31c0	                            xor eax, eax	       164	iterator.c	FUNCTION_11	WHILE_1	IF_14
0x4000189	              0x5b	                                 pop rbx	       171	iterator.c	FUNCTION_11
0x400018a	              0x5d	                                 pop rbp	       171	iterator.c	FUNCTION_11
0x400018b	            0x415c	                                 pop r12	       171	iterator.c	FUNCTION_11
0x400018d	            0x415d	                                 pop r13	       171	iterator.c	FUNCTION_11
0x400018f	              0xc3	                                     ret	       171	iterator.c	FUNCTION_11
0x4000190	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	       109	iterator.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x4000194	          0x488b07	                    mov rax, qword [rdi]	        13	iterator.c	FUNCTION_1	CALL_1
0x4000197	            0xff10	                        call qword [rax]	        13	iterator.c	FUNCTION_1	CALL_1
0x4000199	            0x85c0	                           test eax, eax	       109	iterator.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x400019b	            0x7411	                            je 0x40001ae	       109	iterator.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x400019d	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       111	iterator.c	FUNCTION_11	IF_1	IF_2	IF_3
0x40001a0	    0x48c743280000	               mov qword [rbx + 0x28], 0	       110	iterator.c	FUNCTION_11	IF_1	IF_2
0x40001a8	     0xf843fffffff	                            je 0x40000ed	       111	iterator.c	FUNCTION_11	IF_1	IF_2	IF_3
0x40001ae	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       114	iterator.c	FUNCTION_11	IF_1	IF_4	CALL_2
0x40001b2	          0x488b07	                    mov rax, qword [rdi]	        13	iterator.c	FUNCTION_1	CALL_1
0x40001b5	            0xff10	                        call qword [rax]	        13	iterator.c	FUNCTION_1	CALL_1
0x40001b7	            0x85c0	                           test eax, eax	       114	iterator.c	FUNCTION_11	IF_1	IF_4	CALL_2
0x40001b9	     0xf84bbfeffff	                            je 0x400007a	       114	iterator.c	FUNCTION_11	IF_1	IF_4	CALL_2
0x40001bf	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       116	iterator.c	FUNCTION_11	IF_1	IF_4	IF_5
0x40001c2	    0x48c743300000	               mov qword [rbx + 0x30], 0	       115	iterator.c	FUNCTION_11	IF_1	IF_4
0x40001ca	     0xf841dffffff	                            je 0x40000ed	       116	iterator.c	FUNCTION_11	IF_1	IF_4	IF_5
0x40001d0	            0x31f6	                            xor esi, esi	       116	iterator.c	FUNCTION_11	IF_1	IF_4	IF_5
0x40001d2	      0xe9a7feffff	                           jmp 0x400007e	       116	iterator.c	FUNCTION_11	IF_1	IF_4	IF_5
merge_ref_iterator_peel	SWITCH,0:CALL,2:functions,0:FOR,0:ELSE,0:DO,0:IF,1:WHILE,0	10
0x40002c0	        0x488b4748	            mov rax, qword [rdi + 0x48] 	       179	iterator.c	FUNCTION_12	IF_1
0x40002c4	          0x4885c0	                           test rax, rax	       179	iterator.c	FUNCTION_12	IF_1
0x40002c7	            0x740c	                            je 0x40002d5	       179	iterator.c	FUNCTION_12	IF_1
0x40002c9	          0x488b38	                    mov rdi, qword [rax]	       182	iterator.c	FUNCTION_12	CALL_2
0x40002cc	          0x488b07	                    mov rax, qword [rdi]	        19	iterator.c	FUNCTION_2	CALL_1
0x40002cf	        0x488b4008	                mov rax, qword [rax + 8]	        19	iterator.c	FUNCTION_2	CALL_1
0x40002d3	            0xffe0	                                 jmp rax	        19	iterator.c	FUNCTION_2	CALL_1
0x40002d5	              0x52	                                push rdx	       175	iterator.c	FUNCTION_12
0x40002d6	      0xbf00000000	                              mov edi, 0	       180	iterator.c	FUNCTION_12	IF_1	CALL_1
0x40002db	      0xe800000000	    call sym.prefix_ref_iterator_advance	       180	iterator.c	FUNCTION_12	IF_1	CALL_1
empty_ref_iterator_begin	SWITCH,0:CALL,2:functions,0:FOR,0:ELSE,0:DO,0:IF,0:WHILE,0	11
0x40004a0	        0x4883ec08	                              sub rsp, 8	        73	iterator.c	FUNCTION_9
0x40004a4	      0xbe28000000	                           mov esi, 0x28	        74	iterator.c	FUNCTION_9	CALL_1
0x40004a9	      0xbf01000000	                              mov edi, 1	        74	iterator.c	FUNCTION_9	CALL_1
0x40004ae	      0xe800000000	                          call 0x40004b3	        74	iterator.c	FUNCTION_9	CALL_1
0x40004b3	    0x48c700000000	                      mov qword [rax], 0	        31	iterator.c	FUNCTION_4
0x40004ba	        0x80480801	                    or byte [rax + 8], 1	        32	iterator.c	FUNCTION_4
0x40004be	    0x48c740100000	               mov qword [rax + 0x10], 0	        33	iterator.c	FUNCTION_4
0x40004c6	    0x48c740180000	               mov qword [rax + 0x18], 0	        34	iterator.c	FUNCTION_4
0x40004ce	    0xc74020000000	               mov dword [rax + 0x20], 0	        35	iterator.c	FUNCTION_4
0x40004d5	        0x4883c408	                              add rsp, 8	        79	iterator.c	FUNCTION_9
0x40004d9	              0xc3	                                     ret	        79	iterator.c	FUNCTION_9
prefix_ref_iterator_abort	SWITCH,0:CALL,3:functions,0:FOR,0:ELSE,0:DO,0:IF,1:WHILE,0	22
0x4000270	              0x55	                                push rbp	       368	iterator.c	FUNCTION_20
0x4000271	              0x53	                                push rbx	       368	iterator.c	FUNCTION_20
0x4000272	          0x4889fb	                            mov rbx, rdi	       368	iterator.c	FUNCTION_20
0x4000275	        0x4883ec08	                              sub rsp, 8	       368	iterator.c	FUNCTION_20
0x4000279	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	       373	iterator.c	FUNCTION_20	IF_1
0x400027d	          0x4885ff	                           test rdi, rdi	       373	iterator.c	FUNCTION_20	IF_1
0x4000280	            0x7426	                            je 0x40002a8	       373	iterator.c	FUNCTION_20	IF_1
0x4000282	          0x488b07	                    mov rax, qword [rdi]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000285	          0xff5010	                 call qword [rax + 0x10]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000288	            0x89c5	                            mov ebp, eax	        24	iterator.c	FUNCTION_3	CALL_1
0x400028a	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       375	iterator.c	FUNCTION_20	CALL_2
0x400028e	      0xe800000000	                          call 0x4000293	       375	iterator.c	FUNCTION_20	CALL_2
0x4000293	          0x4889df	                            mov rdi, rbx	        42	iterator.c	FUNCTION_5	CALL_1
0x4000296	      0xe800000000	                          call 0x400029b	        42	iterator.c	FUNCTION_5	CALL_1
0x400029b	        0x4883c408	                              add rsp, 8	       378	iterator.c	FUNCTION_20
0x400029f	            0x89e8	                            mov eax, ebp	       378	iterator.c	FUNCTION_20
0x40002a1	              0x5b	                                 pop rbx	       378	iterator.c	FUNCTION_20
0x40002a2	              0x5d	                                 pop rbp	       378	iterator.c	FUNCTION_20
0x40002a3	              0xc3	                                     ret	       378	iterator.c	FUNCTION_20
0x40002a4	         0xf1f4000	                         nop dword [rax]	       378	iterator.c	FUNCTION_20
0x40002a8	      0xbdffffffff	                     mov ebp, 0xffffffff	       371	iterator.c	FUNCTION_20
0x40002ad	            0xebdb	                           jmp 0x400028a	       371	iterator.c	FUNCTION_20
prefix_ref_iterator_begin	SWITCH,0:CALL,3:functions,0:FOR,0:ELSE,0:DO,0:IF,1:WHILE,0	46
0x4000640	            0x4155	                                push r13	       389	iterator.c	FUNCTION_21
0x4000642	            0x4154	                                push r12	       389	iterator.c	FUNCTION_21
0x4000644	              0x55	                                push rbp	       389	iterator.c	FUNCTION_21
0x4000645	              0x53	                                push rbx	       389	iterator.c	FUNCTION_21
0x4000646	        0x4883ec08	                              sub rsp, 8	       389	iterator.c	FUNCTION_21
0x400064a	          0x803e00	                       cmp byte [rsi], 0	       393	iterator.c	FUNCTION_21	IF_1
0x400064d	            0x7519	                           jne 0x4000668	       393	iterator.c	FUNCTION_21	IF_1
0x400064f	            0x85d2	                           test edx, edx	       393	iterator.c	FUNCTION_21	IF_1
0x4000651	          0x4889f8	                            mov rax, rdi	       393	iterator.c	FUNCTION_21	IF_1
0x4000654	            0x7512	                           jne 0x4000668	       393	iterator.c	FUNCTION_21	IF_1
0x4000656	        0x4883c408	                              add rsp, 8	       406	iterator.c	FUNCTION_21
0x400065a	              0x5b	                                 pop rbx	       406	iterator.c	FUNCTION_21
0x400065b	              0x5d	                                 pop rbp	       406	iterator.c	FUNCTION_21
0x400065c	            0x415c	                                 pop r12	       406	iterator.c	FUNCTION_21
0x400065e	            0x415d	                                 pop r13	       406	iterator.c	FUNCTION_21
0x4000660	              0xc3	                                     ret	       406	iterator.c	FUNCTION_21
0x4000661	     0xf1f80000000	                         nop dword [rax]	       406	iterator.c	FUNCTION_21
0x4000668	          0x4889fd	                            mov rbp, rdi	       406	iterator.c	FUNCTION_21
0x400066b	          0x4989f4	                            mov r12, rsi	       406	iterator.c	FUNCTION_21
0x400066e	      0xbf01000000	                              mov edi, 1	       396	iterator.c	FUNCTION_21	CALL_1
0x4000673	      0xbe40000000	                           mov esi, 0x40	       396	iterator.c	FUNCTION_21	CALL_1
0x4000678	          0x4189d5	                           mov r13d, edx	       396	iterator.c	FUNCTION_21	CALL_1
0x400067b	      0xe800000000	                          call 0x4000680	       396	iterator.c	FUNCTION_21	CALL_1
0x4000680	          0x4889c3	                            mov rbx, rax	       396	iterator.c	FUNCTION_21	CALL_1
0x4000683	         0xfb64508	               movzx eax, byte [rbp + 8]	       399	iterator.c	FUNCTION_21	CALL_2
0x4000687	          0x4c89e7	                            mov rdi, r12	       402	iterator.c	FUNCTION_21	CALL_3
0x400068a	         0xfb65308	               movzx edx, byte [rbx + 8]	        32	iterator.c	FUNCTION_4
0x400068e	        0x48896b28	             mov qword [rbx + 0x28], rbp	       401	iterator.c	FUNCTION_21
0x4000692	    0x48c703000000	                      mov qword [rbx], 0	        31	iterator.c	FUNCTION_4
0x4000699	    0x48c743100000	               mov qword [rbx + 0x10], 0	        33	iterator.c	FUNCTION_4
0x40006a1	    0x48c743180000	               mov qword [rbx + 0x18], 0	        34	iterator.c	FUNCTION_4
0x40006a9	    0xc74320000000	               mov dword [rbx + 0x20], 0	        35	iterator.c	FUNCTION_4
0x40006b0	          0x83e001	                              and eax, 1	       399	iterator.c	FUNCTION_21	CALL_2
0x40006b3	          0x83e2fe	                     and edx, 0xfffffffe	        32	iterator.c	FUNCTION_4
0x40006b6	             0x9d0	                             or eax, edx	        32	iterator.c	FUNCTION_4
0x40006b8	          0x884308	                  mov byte [rbx + 8], al	        32	iterator.c	FUNCTION_4
0x40006bb	      0xe800000000	                          call 0x40006c0	       402	iterator.c	FUNCTION_21	CALL_3
0x40006c0	        0x44896b38	            mov dword [rbx + 0x38], r13d	       403	iterator.c	FUNCTION_21
0x40006c4	        0x48894330	             mov qword [rbx + 0x30], rax	       402	iterator.c	FUNCTION_21	CALL_3
0x40006c8	        0x4883c408	                              add rsp, 8	       406	iterator.c	FUNCTION_21
0x40006cc	          0x4889d8	                            mov rax, rbx	       405	iterator.c	FUNCTION_21
0x40006cf	              0x5b	                                 pop rbx	       406	iterator.c	FUNCTION_21
0x40006d0	              0x5d	                                 pop rbp	       406	iterator.c	FUNCTION_21
0x40006d1	            0x415c	                                 pop r12	       406	iterator.c	FUNCTION_21
0x40006d3	            0x415d	                                 pop r13	       406	iterator.c	FUNCTION_21
0x40006d5	              0xc3	                                     ret	       406	iterator.c	FUNCTION_21
empty_ref_iterator_abort	SWITCH,0:CALL,1:functions,0:FOR,0:ELSE,0:DO,0:IF,0:WHILE,0	5
0x40001f0	        0x4883ec08	                              sub rsp, 8	        61	iterator.c	FUNCTION_8
0x40001f4	      0xe800000000	                          call 0x40001f9	        42	iterator.c	FUNCTION_5	CALL_1
0x40001f9	      0xb8ffffffff	                     mov eax, 0xffffffff	        64	iterator.c	FUNCTION_8
0x40001fe	        0x4883c408	                              add rsp, 8	        64	iterator.c	FUNCTION_8
0x4000202	              0xc3	                                     ret	        64	iterator.c	FUNCTION_8
empty_ref_iterator_peel	SWITCH,0:CALL,1:functions,0:FOR,0:ELSE,0:DO,0:IF,0:WHILE,0	4
0x40002b0	        0x4883ec08	                              sub rsp, 8	        56	iterator.c	FUNCTION_7
0x40002b4	      0xbf00000000	                              mov edi, 0	        57	iterator.c	FUNCTION_7	CALL_1
0x40002b9	            0x31c0	                            xor eax, eax	        57	iterator.c	FUNCTION_7	CALL_1
0x40002bb	      0xe800000000	        call sym.merge_ref_iterator_peel	        57	iterator.c	FUNCTION_7	CALL_1
prefix_ref_iterator_peel	SWITCH,0:CALL,1:functions,0:FOR,0:ELSE,0:DO,0:IF,0:WHILE,0	4
0x40001e0	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	       364	iterator.c	FUNCTION_19	CALL_1
0x40001e4	          0x488b07	                    mov rax, qword [rdi]	        19	iterator.c	FUNCTION_2	CALL_1
0x40001e7	        0x488b4008	                mov rax, qword [rax + 8]	        19	iterator.c	FUNCTION_2	CALL_1
0x40001eb	            0xffe0	                                 jmp rax	        19	iterator.c	FUNCTION_2	CALL_1
overlay_ref_iterator_begin	SWITCH,0:CALL,6:functions,0:FOR,0:ELSE,2:DO,0:IF,3:WHILE,0	44
0x4000570	              0x55	                                push rbp	       262	iterator.c	ELSE_3	FUNCTION_16
0x4000571	              0x53	                                push rbx	       262	iterator.c	ELSE_3	FUNCTION_16
0x4000572	          0x4889f5	                            mov rbp, rsi	       262	iterator.c	ELSE_3	FUNCTION_16
0x4000575	          0x4889fb	                            mov rbx, rdi	       262	iterator.c	ELSE_3	FUNCTION_16
0x4000578	        0x4883ec08	                              sub rsp, 8	       262	iterator.c	ELSE_3	FUNCTION_16
0x400057c	    0x48813f000000	                      cmp qword [rdi], 0	       268	iterator.c	ELSE_3	FUNCTION_16	IF_1	CALL_1
0x4000583	            0x747b	                            je 0x4000600	       268	iterator.c	ELSE_3	FUNCTION_16	IF_1	CALL_1
0x4000585	    0x48813e000000	                      cmp qword [rsi], 0	       271	iterator.c	ELSE_3	FUNCTION_16	ELSE_1	IF_2	CALL_3
0x400058c	     0xf847e000000	                            je 0x4000610	       271	iterator.c	ELSE_3	FUNCTION_16	ELSE_1	IF_2	CALL_3
0x4000592	        0xf6470801	                  test byte [rdi + 8], 1	       274	iterator.c	ELSE_3	FUNCTION_16	ELSE_2	IF_3
0x4000596	     0xf8482000000	                            je 0x400061e	       274	iterator.c	ELSE_3	FUNCTION_16	ELSE_2	IF_3
0x400059c	        0xf6460801	                  test byte [rsi + 8], 1	       274	iterator.c	ELSE_3	FUNCTION_16	ELSE_2	IF_3
0x40005a0	            0x747c	                            je 0x400061e	       274	iterator.c	ELSE_3	FUNCTION_16	ELSE_2	IF_3
0x40005a2	      0xbe50000000	                           mov esi, 0x50	       214	iterator.c	FUNCTION_14	CALL_1
0x40005a7	      0xbf01000000	                              mov edi, 1	       214	iterator.c	FUNCTION_14	CALL_1
0x40005ac	      0xe800000000	                          call 0x40005b1	       214	iterator.c	FUNCTION_14	CALL_1
0x40005b1	        0x80480801	                    or byte [rax + 8], 1	        32	iterator.c	FUNCTION_4
0x40005b5	    0x48c700000000	                      mov qword [rax], 0	        31	iterator.c	FUNCTION_4
0x40005bc	    0x48c740100000	               mov qword [rax + 0x10], 0	        33	iterator.c	FUNCTION_4
0x40005c4	    0x48c740180000	               mov qword [rax + 0x18], 0	        34	iterator.c	FUNCTION_4
0x40005cc	    0xc74020000000	               mov dword [rax + 0x20], 0	        35	iterator.c	FUNCTION_4
0x40005d3	        0x48895828	             mov qword [rax + 0x28], rbx	       226	iterator.c	FUNCTION_14
0x40005d7	        0x48896830	             mov qword [rax + 0x30], rbp	       227	iterator.c	FUNCTION_14
0x40005db	    0x48c740380000	               mov qword [rax + 0x38], 0	       228	iterator.c	FUNCTION_14
0x40005e3	    0x48c740400000	               mov qword [rax + 0x40], 0	       229	iterator.c	FUNCTION_14
0x40005eb	    0x48c740480000	               mov qword [rax + 0x48], 0	       230	iterator.c	FUNCTION_14
0x40005f3	        0x4883c408	                              add rsp, 8	       280	iterator.c	ELSE_3	FUNCTION_16
0x40005f7	              0x5b	                                 pop rbx	       280	iterator.c	ELSE_3	FUNCTION_16
0x40005f8	              0x5d	                                 pop rbp	       280	iterator.c	ELSE_3	FUNCTION_16
0x40005f9	              0xc3	                                     ret	       280	iterator.c	ELSE_3	FUNCTION_16
0x40005fa	    0x660f1f440000	                    nop word [rax + rax]	       280	iterator.c	ELSE_3	FUNCTION_16
0x4000600	    0xff1500000000	                 call qword [0x04000606]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000606	          0x4889e8	                            mov rax, rbp	       270	iterator.c	ELSE_3	FUNCTION_16	IF_1
0x4000609	            0xebe8	                           jmp 0x40005f3	       270	iterator.c	ELSE_3	FUNCTION_16	IF_1
0x400060b	       0xf1f440000	                   nop dword [rax + rax]	       270	iterator.c	ELSE_3	FUNCTION_16	IF_1
0x4000610	          0x4889f7	                            mov rdi, rsi	        24	iterator.c	FUNCTION_3	CALL_1
0x4000613	    0xff1500000000	                 call qword [0x04000619]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000619	          0x4889d8	                            mov rax, rbx	       273	iterator.c	ELSE_3	FUNCTION_16	ELSE_1	IF_2
0x400061c	            0xebd5	                           jmp 0x40005f3	       273	iterator.c	ELSE_3	FUNCTION_16	ELSE_1	IF_2
0x400061e	      0xba00000000	                              mov edx, 0	       275	iterator.c	ELSE_3	FUNCTION_16	ELSE_2	IF_3	CALL_5
0x4000623	      0xbe13010000	                          mov esi, 0x113	       275	iterator.c	ELSE_3	FUNCTION_16	ELSE_2	IF_3	CALL_5
0x4000628	      0xbf00000000	                              mov edi, 0	       275	iterator.c	ELSE_3	FUNCTION_16	ELSE_2	IF_3	CALL_5
0x400062d	            0x31c0	                            xor eax, eax	       275	iterator.c	ELSE_3	FUNCTION_16	ELSE_2	IF_3	CALL_5
0x400062f	      0xe800000000	                          call 0x4000634	       275	iterator.c	ELSE_3	FUNCTION_16	ELSE_2	IF_3	CALL_5
do_for_each_ref_iterator	SWITCH,0:CALL,3:functions,0:FOR,0:ELSE,0:DO,0:IF,2:WHILE,1	48
0x40006e0	            0x4156	                                push r14	       412	iterator.c	FUNCTION_22
0x40006e2	    0x4c8b35000000	            mov r14, qword [0x040006e9] 	       414	iterator.c	FUNCTION_22
0x40006e9	            0x4155	                                push r13	       412	iterator.c	FUNCTION_22
0x40006eb	    0x48893d000000	            mov qword [0x040006f2], rdi 	       416	iterator.c	FUNCTION_22
0x40006f2	          0x4989f5	                            mov r13, rsi	       412	iterator.c	FUNCTION_22
0x40006f5	            0x4154	                                push r12	       412	iterator.c	FUNCTION_22
0x40006f7	          0x4989d4	                            mov r12, rdx	       412	iterator.c	FUNCTION_22
0x40006fa	              0x55	                                push rbp	       412	iterator.c	FUNCTION_22
0x40006fb	              0x53	                                push rbx	       412	iterator.c	FUNCTION_22
0x40006fc	          0x4889fb	                            mov rbx, rdi	       412	iterator.c	FUNCTION_22
0x40006ff	            0xeb1e	                           jmp 0x400071f	       417	iterator.c	FUNCTION_22	WHILE_1	CALL_1
0x4000701	     0xf1f80000000	                         nop dword [rax]	       417	iterator.c	FUNCTION_22	WHILE_1	CALL_1
0x4000708	          0x8b5320	            mov edx, dword [rbx + 0x20] 	       418	iterator.c	FUNCTION_22	WHILE_1	CALL_2
0x400070b	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       418	iterator.c	FUNCTION_22	WHILE_1	CALL_2
0x400070f	          0x4c89e1	                            mov rcx, r12	       418	iterator.c	FUNCTION_22	WHILE_1	CALL_2
0x4000712	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       418	iterator.c	FUNCTION_22	WHILE_1	CALL_2
0x4000716	          0x41ffd5	                                call r13	       418	iterator.c	FUNCTION_22	WHILE_1	CALL_2
0x4000719	            0x85c0	                           test eax, eax	       419	iterator.c	FUNCTION_22	WHILE_1	IF_1
0x400071b	            0x89c5	                            mov ebp, eax	       418	iterator.c	FUNCTION_22	WHILE_1	CALL_2
0x400071d	            0x7531	                           jne 0x4000750	       419	iterator.c	FUNCTION_22	WHILE_1	IF_1
0x400071f	          0x488b03	                    mov rax, qword [rbx]	        13	iterator.c	FUNCTION_1	CALL_1
0x4000722	          0x4889df	                            mov rdi, rbx	        13	iterator.c	FUNCTION_1	CALL_1
0x4000725	            0xff10	                        call qword [rax]	        13	iterator.c	FUNCTION_1	CALL_1
0x4000727	            0x85c0	                           test eax, eax	       417	iterator.c	FUNCTION_22	WHILE_1	CALL_1
0x4000729	            0x74dd	                            je 0x4000708	       417	iterator.c	FUNCTION_22	WHILE_1	CALL_1
0x400072b	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       432	iterator.c	FUNCTION_22	IF_2
0x400072e	    0x4c8935000000	            mov qword [0x04000735], r14 	       431	iterator.c	FUNCTION_22
0x4000735	           0xf94c0	                                 sete al	       432	iterator.c	FUNCTION_22	IF_2
0x4000738	           0xfb6c0	                           movzx eax, al	       432	iterator.c	FUNCTION_22	IF_2
0x400073b	              0x5b	                                 pop rbx	       435	iterator.c	FUNCTION_22
0x400073c	            0xf7d8	                                 neg eax	       432	iterator.c	FUNCTION_22	IF_2
0x400073e	              0x5d	                                 pop rbp	       435	iterator.c	FUNCTION_22
0x400073f	            0x415c	                                 pop r12	       435	iterator.c	FUNCTION_22
0x4000741	            0x415d	                                 pop r13	       435	iterator.c	FUNCTION_22
0x4000743	            0x415e	                                 pop r14	       435	iterator.c	FUNCTION_22
0x4000745	              0xc3	                                     ret	       435	iterator.c	FUNCTION_22
0x4000746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       435	iterator.c	FUNCTION_22
0x4000750	          0x488b03	                    mov rax, qword [rbx]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000753	          0x4889df	                            mov rdi, rbx	        24	iterator.c	FUNCTION_3	CALL_1
0x4000756	          0xff5010	                 call qword [rax + 0x10]	        24	iterator.c	FUNCTION_3	CALL_1
0x4000759	              0x5b	                                 pop rbx	       435	iterator.c	FUNCTION_22
0x400075a	            0x89e8	                            mov eax, ebp	       418	iterator.c	FUNCTION_22	WHILE_1	CALL_2
0x400075c	    0x4c8935000000	            mov qword [0x04000763], r14 	       431	iterator.c	FUNCTION_22
0x4000763	              0x5d	                                 pop rbp	       435	iterator.c	FUNCTION_22
0x4000764	            0x415c	                                 pop r12	       435	iterator.c	FUNCTION_22
0x4000766	            0x415d	                                 pop r13	       435	iterator.c	FUNCTION_22
0x4000768	            0x415e	                                 pop r14	       435	iterator.c	FUNCTION_22
0x400076a	              0xc3	                                     ret	       435	iterator.c	FUNCTION_22
