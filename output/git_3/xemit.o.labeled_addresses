xdl_emit_diff	WHILE,3:IF,19:DO,0:ELSE,0:functions,0:SWITCH,0:FOR,7:CALL,20	373
0x40003d0	            0x4157	                                push r15	       168	xemit.c	FUNCTION_9
0x40003d2	            0x4156	                                push r14	       168	xemit.c	FUNCTION_9
0x40003d4	          0x4989cf	                            mov r15, rcx	       168	xemit.c	FUNCTION_9
0x40003d7	            0x4155	                                push r13	       168	xemit.c	FUNCTION_9
0x40003d9	            0x4154	                                push r12	       168	xemit.c	FUNCTION_9
0x40003db	      0xb90b000000	                            mov ecx, 0xb	       172	xemit.c	FUNCTION_9
0x40003e0	              0x55	                                push rbp	       168	xemit.c	FUNCTION_9
0x40003e1	              0x53	                                push rbx	       168	xemit.c	FUNCTION_9
0x40003e2	          0x4889fd	                            mov rbp, rdi	       168	xemit.c	FUNCTION_9
0x40003e5	    0x4881ecc80000	                           sub rsp, 0xc8	       168	xemit.c	FUNCTION_9
0x40003ec	    0x64488b042528	                mov rax, qword fs:[0x28]	       168	xemit.c	FUNCTION_9
0x40003f5	    0x48898424b800	             mov qword [rsp + 0xb8], rax	       168	xemit.c	FUNCTION_9
0x40003fd	            0x31c0	                            xor eax, eax	       168	xemit.c	FUNCTION_9
0x40003ff	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       172	xemit.c	FUNCTION_9
0x4000404	          0x4885f6	                           test rsi, rsi	       174	xemit.c	FUNCTION_9	FOR_1
0x4000407	      0x4889542408	                mov qword [rsp + 8], rdx	       168	xemit.c	FUNCTION_9
0x400040c	      0x4889742448	             mov qword [rsp + 0x48], rsi	       174	xemit.c	FUNCTION_9	FOR_1
0x4000411	          0xf348ab	              rep stosq qword [rdi], rax	       172	xemit.c	FUNCTION_9
0x4000414	     0xf840c050000	                            je 0x4000926	       174	xemit.c	FUNCTION_9	FOR_1
0x400041a	        0x498d4720	                   lea rax, [r15 + 0x20]	       174	xemit.c	FUNCTION_9	FOR_1
0x400041e	    0x48c7442438ff	mov qword [rsp + 0x38], 0xffffffffffffffff	       174	xemit.c	FUNCTION_9	FOR_1
0x4000427	      0x4889442430	             mov qword [rsp + 0x30], rax	       174	xemit.c	FUNCTION_9	FOR_1
0x400042c	    0x488d85880000	                   lea rax, [rbp + 0x88]	       174	xemit.c	FUNCTION_9	FOR_1
0x4000433	      0x4889442420	             mov qword [rsp + 0x20], rax	       174	xemit.c	FUNCTION_9	FOR_1
0x4000438	      0x488d442458	                   lea rax, [rsp + 0x58]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x400043d	      0x4889442428	             mov qword [rsp + 0x28], rax	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000442	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x4000447	          0x4c89fe	                            mov rsi, r15	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x400044a	      0xe800000000	                          call 0x400044f	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x400044f	          0x4989c4	                            mov r12, rax	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x4000452	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       176	xemit.c	FUNCTION_9	FOR_1	IF_1
0x4000457	          0x4885c0	                           test rax, rax	       176	xemit.c	FUNCTION_9	FOR_1	IF_1
0x400045a	     0xf84c6040000	                            je 0x4000926	       176	xemit.c	FUNCTION_9	FOR_1	IF_1
0x4000460	        0x488b4808	                mov rcx, qword [rax + 8]	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000464	          0x498b3f	                    mov rdi, qword [r15]	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000467	            0x31d2	                            xor edx, edx	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000469	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x400046d	          0x4889ce	                            mov rsi, rcx	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000470	          0x4829fe	                            sub rsi, rdi	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000473	          0x4c89e8	                            mov rax, r13	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x4000476	        0x480f48f2	                          cmovs rsi, rdx	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x400047a	          0x4829f8	                            sub rax, rdi	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x400047d	      0x4889742418	             mov qword [rsp + 0x18], rsi	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000482	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x4000486	        0x480f49d0	                         cmovns rdx, rax	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x400048a	      0x4889542410	             mov qword [rsp + 0x10], rdx	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x400048f	          0x4989f1	                             mov r9, rsi	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x4000492	        0x4183e104	                              and r9d, 4	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x4000496	            0x746c	                            je 0x4000504	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x4000498	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       186	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x400049c	          0x4839c1	                            cmp rcx, rax	       186	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x400049f	     0xf8c70030000	                            jl 0x4000815	       186	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x40004a5	    0x4c3badc00000	            cmp r13, qword [rbp + 0xc0] 	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004ac	     0xf8d5f030000	                           jge 0x4000811	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004b2	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004b7	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004bc	            0xeb13	                           jmp 0x40004d1	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004be	            0x6690	                                     nop	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004c0	        0x4983c501	                              add r13, 1	       196	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004c4	    0x4c39adc00000	            cmp qword [rbp + 0xc0], r13 	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004cb	     0xf8e3c030000	                           jle 0x400080d	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004d1	        0x498b7718	            mov rsi, qword [r15 + 0x18] 	       127	xemit.c	FUNCTION_6	CALL_1
0x40004d5	    0x4c8d8424b700	                    lea r8, [rsp + 0xb7]	       127	xemit.c	FUNCTION_6	CALL_1
0x40004dd	    0x41b901000000	                              mov r9d, 1	       127	xemit.c	FUNCTION_6	CALL_1
0x40004e3	          0x4c89e9	                            mov rcx, r13	       127	xemit.c	FUNCTION_6	CALL_1
0x40004e6	          0x4889da	                            mov rdx, rbx	       127	xemit.c	FUNCTION_6	CALL_1
0x40004e9	          0x4c89f7	                            mov rdi, r14	       127	xemit.c	FUNCTION_6	CALL_1
0x40004ec	      0xe8effbffff	          call sym.match_func_rec.isra.2	       127	xemit.c	FUNCTION_6	CALL_1
0x40004f1	          0x4885c0	                           test rax, rax	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x40004f4	            0x78ca	                            js 0x40004c0	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x40004f6	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x40004fa	          0x498b3f	                    mov rdi, qword [r15]	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x40004fd	          0x4989f1	                             mov r9, rsi	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x4000500	        0x4183e104	                              and r9d, 4	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x4000504	        0x4c8b4538	              mov r8, qword [rbp + 0x38]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000508	      0x498b4c2418	            mov rcx, qword [r12 + 0x18] 	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x400050d	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000512	      0x49034c2408	                add rcx, qword [r12 + 8]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000517	      0x49035c2410	             add rbx, qword [r12 + 0x10]	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400051c	    0x488b95c00000	            mov rdx, qword [rbp + 0xc0] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000523	          0x4c89c0	                             mov rax, r8	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000526	          0x4829c8	                            sub rax, rcx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000529	          0x4829da	                            sub rdx, rbx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400052c	          0x4839c2	                            cmp rdx, rax	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400052f	        0x480f4ec2	                         cmovle rax, rdx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000533	          0x4839f8	                            cmp rax, rdi	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000536	        0x480f4fc7	                          cmovg rax, rdi	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400053a	        0x4c8d2c08	                    lea r13, [rax + rcx]	       223	xemit.c	FUNCTION_9	FOR_1
0x400053e	          0x4801d8	                            add rax, rbx	       224	xemit.c	FUNCTION_9	FOR_1
0x4000541	          0x4d85c9	                             test r9, r9	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000544	        0x48890424	                    mov qword [rsp], rax	       224	xemit.c	FUNCTION_9	FOR_1
0x4000548	     0xf84cd000000	                            je 0x400061b	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x400054e	            0x6690	                                     nop	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000550	            0x31d2	                            xor edx, edx	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000552	          0x4c89fe	                            mov rsi, r15	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000555	          0x4889ef	                            mov rdi, rbp	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000558	      0xe853fcffff	                  call sym.get_func_line	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x400055d	        0x4883f800	                              cmp rax, 0	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000561	          0x4889c3	                            mov rbx, rax	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000564	            0x7f12	                            jg 0x4000578	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000566	      0xe9af010000	                           jmp 0x400071a	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x400056b	       0xf1f440000	                   nop dword [rax + rax]	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000570	          0x4d85f6	                           test r14, r14	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000573	          0x4c89f3	                            mov rbx, r14	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000576	            0x7413	                            je 0x400058b	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000578	        0x4c8d73ff	                      lea r14, [rbx - 1]	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x400057c	          0x4889ef	                            mov rdi, rbp	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x400057f	          0x4c89f6	                            mov rsi, r14	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000582	      0xe8b9faffff	                   call sym.is_empty_rec	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000587	            0x85c0	                           test eax, eax	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000589	            0x75e5	                           jne 0x4000570	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x400058b	          0x4c39eb	                            cmp rbx, r13	       234	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x400058e	            0x7e0d	                           jle 0x400059d	       234	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000590	          0x4889d8	                            mov rax, rbx	       235	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000593	          0x4c29e8	                            sub rax, r13	       235	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000596	        0x48010424	                    add qword [rsp], rax	       235	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x400059a	          0x4989dd	                            mov r13, rbx	       235	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x400059d	        0x498b3c24	                    mov rdi, qword [r12]	       244	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10
0x40005a1	          0x4885ff	                           test rdi, rdi	       244	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10
0x40005a4	     0xf847f010000	                            je 0x4000729	       244	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10
0x40005aa	        0x4c8b4538	              mov r8, qword [rbp + 0x38]	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x40005ae	        0x488b5708	                mov rdx, qword [rdi + 8]	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x40005b2	          0x498b37	                    mov rsi, qword [r15]	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x40005b5	        0x498d40ff	                       lea rax, [r8 - 1]	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x40005b9	          0x4839d0	                            cmp rax, rdx	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x40005bc	        0x480f4fc2	                          cmovg rax, rdx	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x40005c0	          0x4889c1	                            mov rcx, rax	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x40005c3	          0x4829f0	                            sub rax, rsi	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x40005c6	          0x4939c5	                            cmp r13, rax	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x40005c9	     0xf8c21010000	                            jl 0x40006f0	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x40005cf	          0x4989fc	                            mov r12, rdi	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x40005d2	          0x4889d1	                            mov rcx, rdx	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x40005d5	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x40005da	      0x4903542410	             add rdx, qword [r12 + 0x10]	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x40005df	    0x488b85c00000	            mov rax, qword [rbp + 0xc0] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x40005e6	      0x49034c2418	             add rcx, qword [r12 + 0x18]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x40005eb	          0x4d89c6	                             mov r14, r8	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x40005ee	          0x4829d0	                            sub rax, rdx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x40005f1	          0x4839f0	                            cmp rax, rsi	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x40005f4	        0x480f4fc6	                          cmovg rax, rsi	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x40005f8	          0x4929ce	                            sub r14, rcx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x40005fb	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x40005ff	          0x4c39f0	                            cmp rax, r14	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000602	        0x490f4fc6	                          cmovg rax, r14	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000606	        0x4c8d2c01	                    lea r13, [rcx + rax]	       223	xemit.c	FUNCTION_9	FOR_1
0x400060a	          0x4801d0	                            add rax, rdx	       224	xemit.c	FUNCTION_9	FOR_1
0x400060d	        0x40f6c604	                             test sil, 4	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000611	        0x48890424	                    mov qword [rsp], rax	       224	xemit.c	FUNCTION_9	FOR_1
0x4000615	     0xf8535ffffff	                           jne 0x4000550	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x400061b	          0x83e601	                              and esi, 1	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x400061e	     0xf8512010000	                           jne 0x4000736	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000624	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000629	        0x488b0c24	                    mov rcx, qword [rsp]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x400062d	        0x4883ec08	                              sub rsp, 8	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000631	          0x4c89ee	                            mov rsi, r13	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000634	          0x4829c1	                            sub rcx, rax	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000637	        0x488d5001	                      lea rdx, [rax + 1]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x400063b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000640	        0xff742410	                 push qword [rsp + 0x10]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000644	      0x4c8b4c2460	              mov r9, qword [rsp + 0x60]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000649	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x400064e	        0x488d7801	                      lea rdi, [rax + 1]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000652	          0x4829c6	                            sub rsi, rax	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000655	      0xe800000000	                          call 0x400065a	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x400065a	            0x85c0	                           test eax, eax	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x400065c	              0x5a	                                 pop rdx	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x400065d	              0x59	                                 pop rcx	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x400065e	            0x785d	                            js 0x40006bd	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000660	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000665	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x400066a	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x400066e	          0x4c39e9	                            cmp rcx, r13	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000671	     0xf8ded000000	                           jge 0x4000764	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000677	          0x4889cb	                            mov rbx, rcx	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x400067a	      0x4c8b742408	                mov r14, qword [rsp + 8]	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x400067f	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000684	            0xeb20	                           jmp 0x40006a6	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000686	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000690	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000695	        0x4883c301	                              add rbx, 1	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000699	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x400069d	          0x4839da	                            cmp rdx, rbx	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x40006a0	     0xf8ebb000000	                           jle 0x4000761	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x40006a6	          0x4c89f1	                            mov rcx, r14	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x40006a9	      0xba00000000	                              mov edx, 0	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x40006ae	          0x4889de	                            mov rsi, rbx	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x40006b1	          0x4c89ef	                            mov rdi, r13	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x40006b4	      0xe8d7f9ffff	                call sym.xdl_emit_record	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x40006b9	            0x85c0	                           test eax, eax	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x40006bb	            0x79d3	                           jns 0x4000690	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x40006bd	      0xb8ffffffff	                     mov eax, 0xffffffff	       266	xemit.c	FUNCTION_9	FOR_1	IF_13
0x40006c2	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	       312	xemit.c	FUNCTION_9
0x40006ca	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       312	xemit.c	FUNCTION_9
0x40006d3	     0xf85a1020000	                           jne 0x400097a	       312	xemit.c	FUNCTION_9
0x40006d9	    0x4881c4c80000	                           add rsp, 0xc8	       312	xemit.c	FUNCTION_9
0x40006e0	              0x5b	                                 pop rbx	       312	xemit.c	FUNCTION_9
0x40006e1	              0x5d	                                 pop rbp	       312	xemit.c	FUNCTION_9
0x40006e2	            0x415c	                                 pop r12	       312	xemit.c	FUNCTION_9
0x40006e4	            0x415d	                                 pop r13	       312	xemit.c	FUNCTION_9
0x40006e6	            0x415e	                                 pop r14	       312	xemit.c	FUNCTION_9
0x40006e8	            0x415f	                                 pop r15	       312	xemit.c	FUNCTION_9
0x40006ea	              0xc3	                                     ret	       312	xemit.c	FUNCTION_9
0x40006eb	       0xf1f440000	                   nop dword [rax + rax]	       312	xemit.c	FUNCTION_9
0x40006f0	            0x31d2	                            xor edx, edx	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x40006f2	          0x4d89e8	                             mov r8, r13	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x40006f5	          0x4c89fe	                            mov rsi, r15	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x40006f8	          0x4889ef	                            mov rdi, rbp	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x40006fb	      0xe8b0faffff	                  call sym.get_func_line	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000700	          0x4885c0	                           test rax, rax	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000703	            0x7924	                           jns 0x4000729	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000705	        0x4d8b2424	                    mov r12, qword [r12]	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000709	          0x498b37	                    mov rsi, qword [r15]	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x400070c	        0x4c8b4538	              mov r8, qword [rbp + 0x38]	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000710	      0x498b542408	                mov rdx, qword [r12 + 8]	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000715	      0xe9b8feffff	                           jmp 0x40005d2	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x400071a	     0xf846bfeffff	                            je 0x400058b	       232	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x4000720	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	       233	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x4000724	      0xe962feffff	                           jmp 0x400058b	       233	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x4000729	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	       233	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x400072d	          0x83e601	                              and esi, 1	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000730	     0xf84eefeffff	                            je 0x4000624	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000736	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x400073b	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000740	      0x488d542450	                   lea rdx, [rsp + 0x50]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000745	          0x4c89fe	                            mov rsi, r15	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000748	          0x4889ef	                            mov rdi, rbp	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x400074b	        0x4c8d48ff	                       lea r9, [rax - 1]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x400074f	          0x4c89c9	                             mov rcx, r9	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000752	      0x4c894c2438	              mov qword [rsp + 0x38], r9	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000757	      0xe854faffff	                  call sym.get_func_line	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x400075c	      0xe9c3feffff	                           jmp 0x4000624	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000761	          0x4989d5	                            mov r13, rdx	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000764	        0x4c8b4008	                 mov r8, qword [rax + 8]	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000768	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x400076d	          0x4d89e9	                             mov r9, r13	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000770	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000775	        0x4c8b6808	                mov r13, qword [rax + 8]	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000779	          0x4d39e8	                             cmp r8, r13	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x400077c	            0x7c48	                            jl 0x40007c6	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x400077e	          0x4c89ea	                            mov rdx, r13	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000781	        0x48035018	             add rdx, qword [rax + 0x18]	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000785	          0x4939d5	                            cmp r13, rdx	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000788	            0x7c20	                            jl 0x40007aa	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x400078a	      0xe921010000	                           jmp 0x40008b0	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x400078f	              0x90	                                     nop	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000790	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000795	        0x4983c501	                              add r13, 1	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000799	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x400079d	        0x48035008	                add rdx, qword [rax + 8]	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007a1	          0x4c39ea	                            cmp rdx, r13	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007a4	     0xf8e06010000	                           jle 0x40008b0	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007aa	          0x4889d9	                            mov rcx, rbx	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007ad	      0xba00000000	                              mov edx, 0	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007b2	          0x4c89ee	                            mov rsi, r13	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007b5	          0x4889ef	                            mov rdi, rbp	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007b8	      0xe8d3f8ffff	                call sym.xdl_emit_record	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007bd	            0x85c0	                           test eax, eax	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007bf	            0x79cf	                           jns 0x4000790	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007c1	      0xe9f7feffff	                           jmp 0x40006bd	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007c6	        0x4c3b4810	              cmp r9, qword [rax + 0x10]	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x40007ca	            0x7db2	                           jge 0x400077e	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x40007cc	          0x4889d9	                            mov rcx, rbx	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x40007cf	      0xba00000000	                              mov edx, 0	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x40007d4	          0x4c89ce	                             mov rsi, r9	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x40007d7	          0x4c89f7	                            mov rdi, r14	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x40007da	      0x4c89442418	              mov qword [rsp + 0x18], r8	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x40007df	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x40007e4	      0xe8a7f8ffff	                call sym.xdl_emit_record	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x40007e9	            0x85c0	                           test eax, eax	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x40007eb	     0xf88ccfeffff	                            js 0x40006bd	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x40007f1	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x40007f6	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x40007fb	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000800	        0x4983c001	                               add r8, 1	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000804	        0x4983c101	                               add r9, 1	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000808	      0xe968ffffff	                           jmp 0x4000775	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x400080d	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000811	        0x488d48ff	                      lea rcx, [rax - 1]	       203	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x4000815	            0x31d2	                            xor edx, edx	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000817	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x400081e	          0x4c89fe	                            mov rsi, r15	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000821	          0x4889ef	                            mov rdi, rbp	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000824	      0xe887f9ffff	                  call sym.get_func_line	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000829	        0x4883f800	                              cmp rax, 0	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x400082d	          0x4989c5	                            mov r13, rax	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000830	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000835	            0x7f36	                            jg 0x400086d	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000837	      0xe9f1000000	                           jmp 0x400092d	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x400083c	         0xf1f4000	                         nop dword [rax]	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000840	        0x498b7718	            mov rsi, qword [r15 + 0x18] 	       127	xemit.c	FUNCTION_6	CALL_1
0x4000844	    0x4c8d8424b700	                    lea r8, [rsp + 0xb7]	       127	xemit.c	FUNCTION_6	CALL_1
0x400084c	    0x41b901000000	                              mov r9d, 1	       127	xemit.c	FUNCTION_6	CALL_1
0x4000852	          0x4889d9	                            mov rcx, rbx	       127	xemit.c	FUNCTION_6	CALL_1
0x4000855	          0x4c89f2	                            mov rdx, r14	       127	xemit.c	FUNCTION_6	CALL_1
0x4000858	          0x4889ef	                            mov rdi, rbp	       127	xemit.c	FUNCTION_6	CALL_1
0x400085b	      0xe880f8ffff	          call sym.match_func_rec.isra.2	       127	xemit.c	FUNCTION_6	CALL_1
0x4000860	          0x4885c0	                           test rax, rax	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000863	            0x791b	                           jns 0x4000880	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000865	          0x4885db	                           test rbx, rbx	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000868	          0x4989dd	                            mov r13, rbx	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x400086b	            0x7413	                            je 0x4000880	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x400086d	        0x498d5dff	                      lea rbx, [r13 - 1]	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000871	          0x4889ef	                            mov rdi, rbp	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000874	          0x4889de	                            mov rsi, rbx	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000877	      0xe8c4f7ffff	                   call sym.is_empty_rec	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x400087c	            0x85c0	                           test eax, eax	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x400087e	            0x74c0	                            je 0x4000840	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000880	      0x4c3b6c2418	            cmp r13, qword [rsp + 0x18] 	       212	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000885	     0xf8d6bfcffff	                           jge 0x40004f6	       212	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x400088b	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	       212	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x400088f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000894	          0x498b3f	                    mov rdi, qword [r15]	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000897	      0x4c896c2418	             mov qword [rsp + 0x18], r13	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x400089c	          0x4989f1	                             mov r9, rsi	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x400089f	          0x4c29e8	                            sub rax, r13	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x40008a2	      0x4829442410	             sub qword [rsp + 0x10], rax	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x40008a7	        0x4183e104	                              and r9d, 4	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x40008ab	      0xe954fcffff	                           jmp 0x4000504	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x40008b0	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008b4	          0x4d89e9	                             mov r9, r13	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008b7	        0x4c034820	              add r9, qword [rax + 0x20]	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008bb	          0x4d39e9	                             cmp r9, r13	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008be	            0x7f1e	                            jg 0x40008de	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008c0	            0xeb38	                           jmp 0x40008fa	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008c2	    0x660f1f440000	                    nop word [rax + rax]	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008c8	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008cd	        0x4983c501	                              add r13, 1	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008d1	        0x4c8b4820	              mov r9, qword [rax + 0x20]	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008d5	        0x4c034810	              add r9, qword [rax + 0x10]	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008d9	          0x4d39e9	                             cmp r9, r13	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008dc	            0x7e1c	                           jle 0x40008fa	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40008de	          0x4889d9	                            mov rcx, rbx	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x40008e1	      0xba00000000	                              mov edx, 0	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x40008e6	          0x4c89ee	                            mov rsi, r13	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x40008e9	          0x4c89f7	                            mov rdi, r14	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x40008ec	      0xe89ff7ffff	                call sym.xdl_emit_record	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x40008f1	            0x85c0	                           test eax, eax	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x40008f3	            0x79d3	                           jns 0x40008c8	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x40008f5	      0xe9c3fdffff	                           jmp 0x40006bd	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x40008fa	          0x4939c4	                            cmp r12, rax	       297	xemit.c	FUNCTION_9	FOR_1	FOR_3	IF_18
0x40008fd	            0x743c	                            je 0x400093b	       297	xemit.c	FUNCTION_9	FOR_1	FOR_3	IF_18
0x40008ff	        0x4c8b4018	              mov r8, qword [rax + 0x18]	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000903	        0x4c034008	                 add r8, qword [rax + 8]	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000907	          0x488b00	                    mov rax, qword [rax]	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x400090a	      0x4889442448	             mov qword [rsp + 0x48], rax	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x400090f	      0xe961feffff	                           jmp 0x4000775	       301	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000914	        0x498b0424	                    mov rax, qword [r12]	       174	xemit.c	FUNCTION_9	FOR_1
0x4000918	          0x4885c0	                           test rax, rax	       174	xemit.c	FUNCTION_9	FOR_1
0x400091b	      0x4889442448	             mov qword [rsp + 0x48], rax	       174	xemit.c	FUNCTION_9	FOR_1
0x4000920	     0xf851cfbffff	                           jne 0x4000442	       174	xemit.c	FUNCTION_9	FOR_1
0x4000926	            0x31c0	                            xor eax, eax	       311	xemit.c	FUNCTION_9
0x4000928	      0xe995fdffff	                           jmp 0x40006c2	       311	xemit.c	FUNCTION_9
0x400092d	      0xb800000000	                              mov eax, 0	       211	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_5
0x4000932	        0x4c0f45e8	                         cmovne r13, rax	       211	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_5
0x4000936	      0xe945ffffff	                           jmp 0x4000880	       211	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_5
0x400093b	      0x4d8b6c2420	            mov r13, qword [r12 + 0x20] 	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000940	      0x4d036c2410	             add r13, qword [r12 + 0x10]	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000945	        0x4c392c24	                    cmp qword [rsp], r13	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000949	            0x7f0f	                            jg 0x400095a	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x400094b	            0xebc7	                           jmp 0x4000914	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x400094d	           0xf1f00	                         nop dword [rax]	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000950	        0x4983c501	                              add r13, 1	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000954	        0x4c392c24	                    cmp qword [rsp], r13	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000958	            0x74ba	                            je 0x4000914	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x400095a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x400095f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000964	      0xba00000000	                              mov edx, 0	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000969	          0x4c89ee	                            mov rsi, r13	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x400096c	      0xe81ff7ffff	                call sym.xdl_emit_record	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000971	            0x85c0	                           test eax, eax	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000973	            0x79db	                           jns 0x4000950	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000975	      0xe943fdffff	                           jmp 0x40006bd	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x400097a	      0xe800000000	                          call 0x400097f	       312	xemit.c	FUNCTION_9
is_empty_rec	WHILE,1:IF,0:DO,0:ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2	26
0x4000040	              0x55	                                push rbp	       156	xemit.c	FUNCTION_8
0x4000041	              0x53	                                push rbx	       156	xemit.c	FUNCTION_8
0x4000042	        0x4883ec08	                              sub rsp, 8	       156	xemit.c	FUNCTION_8
0x4000046	        0x488b4760	            mov rax, qword [rdi + 0x60] 	        27	xemit.c	FUNCTION_1
0x400004a	        0x488b04f0	            mov rax, qword [rax + rsi*8]	        27	xemit.c	FUNCTION_1
0x400004e	        0x488b5810	            mov rbx, qword [rax + 0x10] 	        29	xemit.c	FUNCTION_1
0x4000052	        0x488b6808	                mov rbp, qword [rax + 8]	        27	xemit.c	FUNCTION_1
0x4000056	          0x4885db	                           test rbx, rbx	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000059	            0x7e22	                           jle 0x400007d	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400005b	      0xe800000000	                          call 0x4000060	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000060	          0x488b10	                    mov rdx, qword [rax]	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000063	            0xeb0d	                           jmp 0x4000072	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000065	           0xf1f00	                         nop dword [rax]	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000068	        0x4883c501	                              add rbp, 1	       161	xemit.c	FUNCTION_8	WHILE_1
0x400006c	        0x4883eb01	                              sub rbx, 1	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000070	            0x740b	                            je 0x400007d	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000072	         0xfb64500	                   movzx eax, byte [rbp]	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000076	      0xf644420120	      test byte [rdx + rax*2 + 1], 0x20 	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400007b	            0x75eb	                           jne 0x4000068	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400007d	            0x31c0	                            xor eax, eax	       164	xemit.c	FUNCTION_8
0x400007f	          0x4885db	                           test rbx, rbx	       164	xemit.c	FUNCTION_8
0x4000082	           0xf94c0	                                 sete al	       164	xemit.c	FUNCTION_8
0x4000085	        0x4883c408	                              add rsp, 8	       165	xemit.c	FUNCTION_8
0x4000089	              0x5b	                                 pop rbx	       165	xemit.c	FUNCTION_8
0x400008a	              0x5d	                                 pop rbp	       165	xemit.c	FUNCTION_8
0x400008b	              0xc3	                                     ret	       165	xemit.c	FUNCTION_8
xdl_emit_record	WHILE,0:IF,1:DO,0:ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,3	26
0x4000090	            0x4155	                                push r13	        33	xemit.c	FUNCTION_2
0x4000092	            0x4154	                                push r12	        33	xemit.c	FUNCTION_2
0x4000094	          0x4989fd	                            mov r13, rdi	        33	xemit.c	FUNCTION_2
0x4000097	              0x55	                                push rbp	        33	xemit.c	FUNCTION_2
0x4000098	              0x53	                                push rbx	        33	xemit.c	FUNCTION_2
0x4000099	          0x4889d7	                            mov rdi, rdx	        34	xemit.c	FUNCTION_2	CALL_1
0x400009c	          0x4989f4	                            mov r12, rsi	        33	xemit.c	FUNCTION_2
0x400009f	          0x4889d3	                            mov rbx, rdx	        33	xemit.c	FUNCTION_2
0x40000a2	          0x4889cd	                            mov rbp, rcx	        33	xemit.c	FUNCTION_2
0x40000a5	        0x4883ec08	                              sub rsp, 8	        33	xemit.c	FUNCTION_2
0x40000a9	      0xe800000000	                          call 0x40000ae	        34	xemit.c	FUNCTION_2	CALL_1
0x40000ae	        0x498b5560	            mov rdx, qword [r13 + 0x60] 	        27	xemit.c	FUNCTION_1
0x40000b2	          0x4989e8	                             mov r8, rbp	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000b5	          0x4889c1	                            mov rcx, rax	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000b8	        0x4a8b14e2	            mov rdx, qword [rdx + r12*8]	        27	xemit.c	FUNCTION_1
0x40000bc	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000c0	        0x488b7a08	                mov rdi, qword [rdx + 8]	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000c4	          0x4889da	                            mov rdx, rbx	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000c7	      0xe800000000	                          call 0x40000cc	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000cc	        0x4883c408	                              add rsp, 8	        44	xemit.c	FUNCTION_2
0x40000d0	          0xc1f81f	                           sar eax, 0x1f	        44	xemit.c	FUNCTION_2
0x40000d3	              0x5b	                                 pop rbx	        44	xemit.c	FUNCTION_2
0x40000d4	              0x5d	                                 pop rbp	        44	xemit.c	FUNCTION_2
0x40000d5	            0x415c	                                 pop r12	        44	xemit.c	FUNCTION_2
0x40000d7	            0x415d	                                 pop r13	        44	xemit.c	FUNCTION_2
0x40000d9	              0xc3	                                     ret	        44	xemit.c	FUNCTION_2
get_func_line	WHILE,0:IF,2:DO,0:ELSE,0:functions,0:SWITCH,0:FOR,1:CALL,1	76
0x40001b0	            0x4157	                                push r15	       137	xemit.c	FUNCTION_7
0x40001b2	            0x4156	                                push r14	       137	xemit.c	FUNCTION_7
0x40001b4	          0x4889d0	                            mov rax, rdx	       137	xemit.c	FUNCTION_7
0x40001b7	            0x4155	                                push r13	       137	xemit.c	FUNCTION_7
0x40001b9	            0x4154	                                push r12	       137	xemit.c	FUNCTION_7
0x40001bb	          0x4989f5	                            mov r13, rsi	       137	xemit.c	FUNCTION_7
0x40001be	              0x55	                                push rbp	       137	xemit.c	FUNCTION_7
0x40001bf	              0x53	                                push rbx	       137	xemit.c	FUNCTION_7
0x40001c0	            0x31ed	                            xor ebp, ebp	       138	xemit.c	FUNCTION_7
0x40001c2	          0x4889fb	                            mov rbx, rdi	       137	xemit.c	FUNCTION_7
0x40001c5	          0x4989cf	                            mov r15, rcx	       137	xemit.c	FUNCTION_7
0x40001c8	          0x4d89c4	                             mov r12, r8	       137	xemit.c	FUNCTION_7
0x40001cb	        0x4883ec38	                           sub rsp, 0x38	       137	xemit.c	FUNCTION_7
0x40001cf	      0x4889542418	             mov qword [rsp + 0x18], rdx	       137	xemit.c	FUNCTION_7
0x40001d4	    0x64488b142528	                mov rdx, qword fs:[0x28]	       137	xemit.c	FUNCTION_7
0x40001dd	      0x4889542428	             mov qword [rsp + 0x28], rdx	       137	xemit.c	FUNCTION_7
0x40001e2	            0x31d2	                            xor edx, edx	       137	xemit.c	FUNCTION_7
0x40001e4	          0x4c39c1	                             cmp rcx, r8	       138	xemit.c	FUNCTION_7
0x40001e7	        0x400f9ec5	                               setle bpl	       138	xemit.c	FUNCTION_7
0x40001eb	          0x4885c0	                           test rax, rax	       141	xemit.c	FUNCTION_7
0x40001ee	      0x488d6c2dff	                lea rbp, [rbp + rbp - 1]	       138	xemit.c	FUNCTION_7
0x40001f3	     0xf84a7000000	                            je 0x40002a0	       141	xemit.c	FUNCTION_7
0x40001f9	        0x4c8d7008	                      lea r14, [rax + 8]	       141	xemit.c	FUNCTION_7
0x40001fd	    0x48c744240850	               mov qword [rsp + 8], 0x50	       142	xemit.c	FUNCTION_7
0x4000206	          0x4d39e7	                            cmp r15, r12	       144	xemit.c	FUNCTION_7	FOR_1
0x4000209	            0x7465	                            je 0x4000270	       144	xemit.c	FUNCTION_7	FOR_1
0x400020b	          0x4d85ff	                           test r15, r15	       144	xemit.c	FUNCTION_7	FOR_1
0x400020e	            0x7860	                            js 0x4000270	       144	xemit.c	FUNCTION_7	FOR_1
0x4000210	        0x4c3b7b38	            cmp r15, qword [rbx + 0x38] 	       144	xemit.c	FUNCTION_7	FOR_1
0x4000214	            0x7d5a	                           jge 0x4000270	       144	xemit.c	FUNCTION_7	FOR_1
0x4000216	        0x498d4520	                   lea rax, [r13 + 0x20]	       144	xemit.c	FUNCTION_7	FOR_1
0x400021a	      0x4889442410	             mov qword [rsp + 0x10], rax	       144	xemit.c	FUNCTION_7	FOR_1
0x400021f	            0xeb1a	                           jmp 0x400023b	       144	xemit.c	FUNCTION_7	FOR_1
0x4000221	     0xf1f80000000	                         nop dword [rax]	       144	xemit.c	FUNCTION_7	FOR_1
0x4000228	          0x4901ef	                            add r15, rbp	       144	xemit.c	FUNCTION_7	FOR_1
0x400022b	          0x4d39fc	                            cmp r12, r15	       144	xemit.c	FUNCTION_7	FOR_1
0x400022e	            0x7440	                            je 0x4000270	       144	xemit.c	FUNCTION_7	FOR_1
0x4000230	          0x4d85ff	                           test r15, r15	       144	xemit.c	FUNCTION_7	FOR_1
0x4000233	            0x783b	                            js 0x4000270	       144	xemit.c	FUNCTION_7	FOR_1
0x4000235	        0x4c397b38	            cmp qword [rbx + 0x38], r15 	       144	xemit.c	FUNCTION_7	FOR_1
0x4000239	            0x7e35	                           jle 0x4000270	       144	xemit.c	FUNCTION_7	FOR_1
0x400023b	        0x498b7518	            mov rsi, qword [r13 + 0x18] 	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x400023f	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x4000244	          0x4d89f0	                             mov r8, r14	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x4000247	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x400024c	          0x4c89f9	                            mov rcx, r15	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x400024f	          0x4889df	                            mov rdi, rbx	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x4000252	      0xe889feffff	          call sym.match_func_rec.isra.2	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x4000257	          0x4885c0	                           test rax, rax	       146	xemit.c	FUNCTION_7	FOR_1	IF_1
0x400025a	            0x78cc	                            js 0x4000228	       146	xemit.c	FUNCTION_7	FOR_1	IF_1
0x400025c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       147	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x4000261	          0x4885ff	                           test rdi, rdi	       147	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x4000264	            0x744d	                            je 0x40002b3	       147	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x4000266	          0x488907	                    mov qword [rdi], rax	       148	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x4000269	          0x4c89f8	                            mov rax, r15	       148	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x400026c	            0xeb09	                           jmp 0x4000277	       148	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x400026e	            0x6690	                                     nop	       148	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x4000270	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       152	xemit.c	FUNCTION_7
0x4000277	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       153	xemit.c	FUNCTION_7
0x400027c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       153	xemit.c	FUNCTION_7
0x4000285	            0x7531	                           jne 0x40002b8	       153	xemit.c	FUNCTION_7
0x4000287	        0x4883c438	                           add rsp, 0x38	       153	xemit.c	FUNCTION_7
0x400028b	              0x5b	                                 pop rbx	       153	xemit.c	FUNCTION_7
0x400028c	              0x5d	                                 pop rbp	       153	xemit.c	FUNCTION_7
0x400028d	            0x415c	                                 pop r12	       153	xemit.c	FUNCTION_7
0x400028f	            0x415d	                                 pop r13	       153	xemit.c	FUNCTION_7
0x4000291	            0x415e	                                 pop r14	       153	xemit.c	FUNCTION_7
0x4000293	            0x415f	                                 pop r15	       153	xemit.c	FUNCTION_7
0x4000295	              0xc3	                                     ret	       153	xemit.c	FUNCTION_7
0x4000296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       153	xemit.c	FUNCTION_7
0x40002a0	      0x4c8d742427	                   lea r14, [rsp + 0x27]	       141	xemit.c	FUNCTION_7
0x40002a5	    0x48c744240801	                  mov qword [rsp + 8], 1	       142	xemit.c	FUNCTION_7
0x40002ae	      0xe953ffffff	                           jmp 0x4000206	       142	xemit.c	FUNCTION_7
0x40002b3	          0x4c89f8	                            mov rax, r15	       142	xemit.c	FUNCTION_7
0x40002b6	            0xebbf	                           jmp 0x4000277	       142	xemit.c	FUNCTION_7
0x40002b8	      0xe800000000	                          call 0x40002bd	       153	xemit.c	FUNCTION_7
xdl_get_hunk	WHILE,0:IF,7:DO,0:ELSE,4:functions,0:SWITCH,0:FOR,2:CALL,0	84
0x40002c0	          0x488b17	                    mov rdx, qword [rdi]	        60	xemit.c	FUNCTION_3	FOR_1
0x40002c3	          0x4c8b06	                     mov r8, qword [rsi]	        55	xemit.c	FUNCTION_3
0x40002c6	        0x488b4608	                mov rax, qword [rsi + 8]	        55	xemit.c	FUNCTION_3
0x40002ca	          0x4885d2	                           test rdx, rdx	        60	xemit.c	FUNCTION_3	FOR_1
0x40002cd	        0x4e8d0c40	                    lea r9, [rax + r8*2]	        55	xemit.c	FUNCTION_3
0x40002d1	     0xf84e9000000	                            je 0x40003c0	        60	xemit.c	FUNCTION_3	FOR_1
0x40002d7	        0x448b5a28	           mov r11d, dword [rdx + 0x28] 	        60	xemit.c	FUNCTION_3	FOR_1
0x40002db	          0x4585db	                         test r11d, r11d	        60	xemit.c	FUNCTION_3	FOR_1
0x40002de	            0x7518	                           jne 0x40002f8	        60	xemit.c	FUNCTION_3	FOR_1
0x40002e0	      0xe9de000000	                           jmp 0x40003c3	        60	xemit.c	FUNCTION_3	FOR_1
0x40002e5	           0xf1f00	                         nop dword [rax]	        60	xemit.c	FUNCTION_3	FOR_1
0x40002e8	          0x4889c2	                            mov rdx, rax	        60	xemit.c	FUNCTION_3	FOR_1
0x40002eb	        0x448b5228	           mov r10d, dword [rdx + 0x28] 	        60	xemit.c	FUNCTION_3	FOR_1
0x40002ef	          0x4585d2	                         test r10d, r10d	        60	xemit.c	FUNCTION_3	FOR_1
0x40002f2	     0xf84c0000000	                            je 0x40003b8	        60	xemit.c	FUNCTION_3	FOR_1
0x40002f8	          0x488b02	                    mov rax, qword [rdx]	        61	xemit.c	FUNCTION_3	FOR_1
0x40002fb	          0x4885c0	                           test rax, rax	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40002fe	            0x7414	                            je 0x4000314	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000300	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000304	        0x48034a08	                add rcx, qword [rdx + 8]	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000308	        0x488b7008	                mov rsi, qword [rax + 8]	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x400030c	          0x4829ce	                            sub rsi, rcx	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x400030f	          0x4939f0	                             cmp r8, rsi	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000312	            0x7fd4	                            jg 0x40002e8	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000314	          0x488907	                    mov qword [rdi], rax	        65	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000317	          0x488b12	                    mov rdx, qword [rdx]	        60	xemit.c	FUNCTION_3	FOR_1
0x400031a	          0x4885d2	                           test rdx, rdx	        60	xemit.c	FUNCTION_3	FOR_1
0x400031d	            0x75cc	                           jne 0x40002eb	        60	xemit.c	FUNCTION_3	FOR_1
0x400031f	          0x4885c0	                           test rax, rax	        68	xemit.c	FUNCTION_3	IF_2
0x4000322	     0xf8498000000	                            je 0x40003c0	        68	xemit.c	FUNCTION_3	IF_2
0x4000328	          0x488b10	                    mov rdx, qword [rax]	        73	xemit.c	FUNCTION_3	FOR_2
0x400032b	          0x4885d2	                           test rdx, rdx	        73	xemit.c	FUNCTION_3	FOR_2
0x400032e	     0xf847d000000	                            je 0x40003b1	        73	xemit.c	FUNCTION_3	FOR_2
0x4000334	        0x488b7208	                mov rsi, qword [rdx + 8]	        74	xemit.c	FUNCTION_3	FOR_2
0x4000338	          0x4889f1	                            mov rcx, rsi	        74	xemit.c	FUNCTION_3	FOR_2
0x400033b	        0x482b4818	             sub rcx, qword [rax + 0x18]	        74	xemit.c	FUNCTION_3	FOR_2
0x400033f	        0x482b4808	                sub rcx, qword [rax + 8]	        74	xemit.c	FUNCTION_3	FOR_2
0x4000343	          0x4939c9	                             cmp r9, rcx	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x4000346	            0x7c69	                            jl 0x40003b1	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x4000348	          0x4989c2	                            mov r10, rax	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x400034b	          0x4531db	                          xor r11d, r11d	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x400034e	            0xeb42	                           jmp 0x4000392	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x4000350	          0x4c39d0	                            cmp rax, r10	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000353	            0x7410	                            je 0x4000365	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000355	        0x482b7018	             sub rsi, qword [rax + 0x18]	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000359	        0x482b7008	                sub rsi, qword [rax + 8]	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x400035d	          0x4c01de	                            add rsi, r11	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000360	          0x4c39ce	                             cmp rsi, r9	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000363	            0x774c	                            ja 0x40003b1	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000365	          0x8b4a28	            mov ecx, dword [rdx + 0x28] 	        86	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x4000368	            0x85c9	                           test ecx, ecx	        86	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x400036a	            0x7437	                            je 0x40003a3	        86	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x400036c	          0x488b3a	                    mov rdi, qword [rdx]	        73	xemit.c	FUNCTION_3	FOR_2
0x400036f	        0x4c035a20	             add r11, qword [rdx + 0x20]	        90	xemit.c	FUNCTION_3	FOR_2	ELSE_4
0x4000373	          0x4885ff	                           test rdi, rdi	        73	xemit.c	FUNCTION_3	FOR_2
0x4000376	            0x7439	                            je 0x40003b1	        73	xemit.c	FUNCTION_3	FOR_2
0x4000378	        0x488b7708	                mov rsi, qword [rdi + 8]	        74	xemit.c	FUNCTION_3	FOR_2
0x400037c	          0x4989d2	                            mov r10, rdx	        74	xemit.c	FUNCTION_3	FOR_2
0x400037f	          0x4889f1	                            mov rcx, rsi	        74	xemit.c	FUNCTION_3	FOR_2
0x4000382	        0x482b4a18	             sub rcx, qword [rdx + 0x18]	        74	xemit.c	FUNCTION_3	FOR_2
0x4000386	        0x482b4a08	                sub rcx, qword [rdx + 8]	        74	xemit.c	FUNCTION_3	FOR_2
0x400038a	          0x4939c9	                             cmp r9, rcx	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x400038d	            0x7c22	                            jl 0x40003b1	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x400038f	          0x4889fa	                            mov rdx, rdi	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x4000392	          0x4939c8	                             cmp r8, rcx	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000395	            0x7eb9	                           jle 0x4000350	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000397	          0x8b7228	            mov esi, dword [rdx + 0x28] 	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400039a	            0x85f6	                           test esi, esi	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400039c	            0x7405	                            je 0x40003a3	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400039e	          0x4c39d0	                            cmp rax, r10	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x40003a1	            0x75c9	                           jne 0x400036c	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x40003a3	          0x488b3a	                    mov rdi, qword [rdx]	        73	xemit.c	FUNCTION_3	FOR_2
0x40003a6	          0x4531db	                          xor r11d, r11d	        88	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40003a9	          0x4889d0	                            mov rax, rdx	        88	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40003ac	          0x4885ff	                           test rdi, rdi	        73	xemit.c	FUNCTION_3	FOR_2
0x40003af	            0x75c7	                           jne 0x4000378	        73	xemit.c	FUNCTION_3	FOR_2
0x40003b1	            0xf3c3	                                     ret	        95	xemit.c	FUNCTION_3
0x40003b3	       0xf1f440000	                   nop dword [rax + rax]	        95	xemit.c	FUNCTION_3
0x40003b8	          0x488b07	                    mov rax, qword [rdi]	        95	xemit.c	FUNCTION_3
0x40003bb	      0xe95fffffff	                           jmp 0x400031f	        95	xemit.c	FUNCTION_3
0x40003c0	            0x31c0	                            xor eax, eax	        69	xemit.c	FUNCTION_3	IF_2
0x40003c2	              0xc3	                                     ret	        69	xemit.c	FUNCTION_3	IF_2
0x40003c3	          0x4889d0	                            mov rax, rdx	        60	xemit.c	FUNCTION_3	FOR_1
0x40003c6	      0xe95dffffff	                           jmp 0x4000328	        60	xemit.c	FUNCTION_3	FOR_1
