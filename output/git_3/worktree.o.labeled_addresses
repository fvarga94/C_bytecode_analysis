worktree_basename	DO,0:ELSE,0:FOR,1:functions,0:IF,1:WHILE,1:SWITCH,0:CALL,1	49
0x4000040	              0x55	                                push rbp	       196	worktree.c	FUNCTION_7
0x4000041	              0x53	                                push rbx	       196	worktree.c	FUNCTION_7
0x4000042	          0x4889f5	                            mov rbp, rsi	       196	worktree.c	FUNCTION_7
0x4000045	          0x4889fb	                            mov rbx, rdi	       196	worktree.c	FUNCTION_7
0x4000048	        0x4883ec08	                              sub rsp, 8	       196	worktree.c	FUNCTION_7
0x400004c	      0xe800000000	                          call 0x4000051	       200	worktree.c	FUNCTION_7	CALL_1
0x4000051	            0x85c0	                           test eax, eax	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000053	            0x742d	                            je 0x4000082	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000055	            0x89c1	                            mov ecx, eax	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000057	            0x4898	                                    cdqe	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000059	      0x488d5403ff	                lea rdx, [rbx + rax - 1]	       201	worktree.c	FUNCTION_7	WHILE_1
0x400005e	          0x803a2f	                    cmp byte [rdx], 0x2f	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000061	            0x7532	                           jne 0x4000095	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000063	      0x488d5403fe	                lea rdx, [rbx + rax - 2]	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000068	            0xeb13	                           jmp 0x400007d	       201	worktree.c	FUNCTION_7	WHILE_1
0x400006a	    0x660f1f440000	                    nop word [rax + rax]	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000070	          0x4889d0	                            mov rax, rdx	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000073	        0x4883ea01	                              sub rdx, 1	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000077	        0x807a012f	                cmp byte [rdx + 1], 0x2f	       201	worktree.c	FUNCTION_7	WHILE_1
0x400007b	            0x7523	                           jne 0x40000a0	       201	worktree.c	FUNCTION_7	WHILE_1
0x400007d	          0x83e901	                              sub ecx, 1	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000080	            0x75ee	                           jne 0x4000070	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000082	        0x4883eb01	                              sub rbx, 1	       204	worktree.c	FUNCTION_7	FOR_1
0x4000086	            0x31c9	                            xor ecx, ecx	       204	worktree.c	FUNCTION_7	FOR_1
0x4000088	          0x894d00	                    mov dword [rbp], ecx	       210	worktree.c	FUNCTION_7
0x400008b	        0x4883c408	                              add rsp, 8	       212	worktree.c	FUNCTION_7
0x400008f	          0x4889d8	                            mov rax, rbx	       212	worktree.c	FUNCTION_7
0x4000092	              0x5b	                                 pop rbx	       212	worktree.c	FUNCTION_7
0x4000093	              0x5d	                                 pop rbp	       212	worktree.c	FUNCTION_7
0x4000094	              0xc3	                                     ret	       212	worktree.c	FUNCTION_7
0x4000095	          0x4889d0	                            mov rax, rdx	       201	worktree.c	FUNCTION_7	WHILE_1
0x4000098	     0xf1f84000000	                   nop dword [rax + rax]	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000a0	          0x4839c3	                            cmp rbx, rax	       204	worktree.c	FUNCTION_7	FOR_1
0x40000a3	            0x720e	                            jb 0x40000b3	       204	worktree.c	FUNCTION_7	FOR_1
0x40000a5	            0xeb1b	                           jmp 0x40000c2	       204	worktree.c	FUNCTION_7	FOR_1
0x40000a7	    0x660f1f840000	                    nop word [rax + rax]	       204	worktree.c	FUNCTION_7	FOR_1
0x40000b0	          0x4889d0	                            mov rax, rdx	       204	worktree.c	FUNCTION_7	FOR_1
0x40000b3	        0x488d50ff	                      lea rdx, [rax - 1]	       204	worktree.c	FUNCTION_7	FOR_1
0x40000b7	          0x4839d3	                            cmp rbx, rdx	       204	worktree.c	FUNCTION_7	FOR_1
0x40000ba	            0x74cc	                            je 0x4000088	       204	worktree.c	FUNCTION_7	FOR_1
0x40000bc	        0x8078ff2f	                cmp byte [rax - 1], 0x2f	       205	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000c0	            0x75ee	                           jne 0x40000b0	       205	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000c2	          0x894d00	                    mov dword [rbp], ecx	       210	worktree.c	FUNCTION_7
0x40000c5	          0x4889c3	                            mov rbx, rax	       204	worktree.c	FUNCTION_7	FOR_1
0x40000c8	        0x4883c408	                              add rsp, 8	       212	worktree.c	FUNCTION_7
0x40000cc	          0x4889d8	                            mov rax, rbx	       212	worktree.c	FUNCTION_7
0x40000cf	              0x5b	                                 pop rbx	       212	worktree.c	FUNCTION_7
0x40000d0	              0x5d	                                 pop rbp	       212	worktree.c	FUNCTION_7
0x40000d1	              0xc3	                                     ret	       212	worktree.c	FUNCTION_7
remove_junk	DO,0:ELSE,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0:CALL,6	62
0x4000140	              0x55	                                push rbp	       172	worktree.c	FUNCTION_5
0x4000141	              0x53	                                push rbx	       172	worktree.c	FUNCTION_5
0x4000142	        0x4883ec28	                           sub rsp, 0x28	       172	worktree.c	FUNCTION_5
0x4000146	    0x64488b042528	                mov rax, qword fs:[0x28]	       172	worktree.c	FUNCTION_5
0x400014f	      0x4889442418	             mov qword [rsp + 0x18], rax	       172	worktree.c	FUNCTION_5
0x4000154	            0x31c0	                            xor eax, eax	       172	worktree.c	FUNCTION_5
0x4000156	    0x8b0500000000	            mov eax, dword [0x0400015c] 	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x400015c	    0x48c704240000	                      mov qword [rsp], 0	       173	worktree.c	FUNCTION_5
0x4000164	    0x48c744240800	                  mov qword [rsp + 8], 0	       173	worktree.c	FUNCTION_5
0x400016d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       173	worktree.c	FUNCTION_5
0x4000176	            0x85c0	                           test eax, eax	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x4000178	            0x751e	                           jne 0x4000198	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x400017a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       186	worktree.c	FUNCTION_5
0x400017f	    0x644833042528	                xor rax, qword fs:[0x28]	       186	worktree.c	FUNCTION_5
0x4000188	     0xf85b0000000	                           jne 0x400023e	       186	worktree.c	FUNCTION_5
0x400018e	        0x4883c428	                           add rsp, 0x28	       186	worktree.c	FUNCTION_5
0x4000192	              0x5b	                                 pop rbx	       186	worktree.c	FUNCTION_5
0x4000193	              0x5d	                                 pop rbp	       186	worktree.c	FUNCTION_5
0x4000194	              0xc3	                                     ret	       186	worktree.c	FUNCTION_5
0x4000195	           0xf1f00	                         nop dword [rax]	       186	worktree.c	FUNCTION_5
0x4000198	      0xe800000000	                          call 0x400019d	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x400019d	    0x3b0500000000	            cmp eax, dword [0x040001a3] 	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x40001a3	            0x75d5	                           jne 0x400017a	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x40001a5	    0x488b2d000000	            mov rbp, qword [0x040001ac] 	       176	worktree.c	FUNCTION_5	IF_2
0x40001ac	          0x4889e3	                            mov rbx, rsp	       176	worktree.c	FUNCTION_5	IF_2
0x40001af	          0x4885ed	                           test rbp, rbp	       176	worktree.c	FUNCTION_5	IF_2
0x40001b2	            0x743c	                            je 0x40001f0	       176	worktree.c	FUNCTION_5	IF_2
0x40001b4	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001b7	          0x4889e3	                            mov rbx, rsp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001ba	      0xe800000000	                          call 0x40001bf	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001bf	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001c2	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001c5	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001c8	      0xe800000000	                          call 0x40001cd	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001cd	            0x31f6	                            xor esi, esi	       178	worktree.c	FUNCTION_5	IF_2	CALL_3
0x40001cf	          0x4889e7	                            mov rdi, rsp	       178	worktree.c	FUNCTION_5	IF_2	CALL_3
0x40001d2	      0xe800000000	                          call 0x40001d7	       178	worktree.c	FUNCTION_5	IF_2	CALL_3
0x40001d7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_27	IF_2
0x40001dc	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_27
0x40001e5	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_27	IF_2
0x40001eb	            0x7443	                            je 0x4000230	       165	strbuf.h	FUNCTION_27	IF_2
0x40001ed	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_27	IF_2
0x40001f0	    0x488b2d000000	            mov rbp, qword [0x040001f7] 	       181	worktree.c	FUNCTION_5	IF_3
0x40001f7	          0x4885ed	                           test rbp, rbp	       181	worktree.c	FUNCTION_5	IF_3
0x40001fa	            0x7420	                            je 0x400021c	       181	worktree.c	FUNCTION_5	IF_3
0x40001fc	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001ff	      0xe800000000	                          call 0x4000204	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000204	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000207	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_29	CALL_2
0x400020a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_29	CALL_2
0x400020d	      0xe800000000	                          call 0x4000212	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000212	            0x31f6	                            xor esi, esi	       183	worktree.c	FUNCTION_5	IF_3	CALL_5
0x4000214	          0x4889df	                            mov rdi, rbx	       183	worktree.c	FUNCTION_5	IF_3	CALL_5
0x4000217	      0xe800000000	                          call 0x400021c	       183	worktree.c	FUNCTION_5	IF_3	CALL_5
0x400021c	          0x4889df	                            mov rdi, rbx	       185	worktree.c	FUNCTION_5	CALL_6
0x400021f	      0xe800000000	                          call 0x4000224	       185	worktree.c	FUNCTION_5	CALL_6
0x4000224	      0xe951ffffff	                           jmp 0x400017a	       185	worktree.c	FUNCTION_5	CALL_6
0x4000229	     0xf1f80000000	                         nop dword [rax]	       185	worktree.c	FUNCTION_5	CALL_6
0x4000230	    0x803d00000000	                cmp byte [0x04000237], 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x4000237	            0x74b7	                            je 0x40001f0	       168	strbuf.h	FUNCTION_27	CALL_2
0x4000239	      0xe800000000	                          call 0x400023e	       168	strbuf.h	FUNCTION_27	CALL_2
0x400023e	      0xe800000000	                          call 0x4000243	       186	worktree.c	FUNCTION_5
remove_junk_on_signal	DO,0:ELSE,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0:CALL,3	8
0x4000250	              0x53	                                push rbx	       189	worktree.c	FUNCTION_6
0x4000251	            0x89fb	                            mov ebx, edi	       189	worktree.c	FUNCTION_6
0x4000253	      0xe8e8feffff	                    call sym.remove_junk	       190	worktree.c	FUNCTION_6	CALL_1
0x4000258	            0x89df	                            mov edi, ebx	       191	worktree.c	FUNCTION_6	CALL_2
0x400025a	      0xe800000000	                          call 0x400025f	       191	worktree.c	FUNCTION_6	CALL_2
0x400025f	            0x89df	                            mov edi, ebx	       192	worktree.c	FUNCTION_6	CALL_3
0x4000261	              0x5b	                                 pop rbx	       193	worktree.c	FUNCTION_6
0x4000262	      0xe900000000	                           jmp 0x4000267	       192	worktree.c	FUNCTION_6	CALL_3
