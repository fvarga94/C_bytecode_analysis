update_ref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	32
0x40035b0	            0x4157	                                push r15	      1117	refs.c	FUNCTION_60
0x40035b2	            0x4156	                                push r14	      1117	refs.c	FUNCTION_60
0x40035b4	          0x4589cf	                           mov r15d, r9d	      1117	refs.c	FUNCTION_60
0x40035b7	            0x4155	                                push r13	      1117	refs.c	FUNCTION_60
0x40035b9	            0x4154	                                push r12	      1117	refs.c	FUNCTION_60
0x40035bb	          0x4989cd	                            mov r13, rcx	      1117	refs.c	FUNCTION_60
0x40035be	              0x55	                                push rbp	      1117	refs.c	FUNCTION_60
0x40035bf	              0x53	                                push rbx	      1117	refs.c	FUNCTION_60
0x40035c0	          0x4889fb	                            mov rbx, rdi	      1117	refs.c	FUNCTION_60
0x40035c3	          0x4889f5	                            mov rbp, rsi	      1117	refs.c	FUNCTION_60
0x40035c6	          0x4989d4	                            mov r12, rdx	      1117	refs.c	FUNCTION_60
0x40035c9	          0x4589c6	                           mov r14d, r8d	      1117	refs.c	FUNCTION_60
0x40035cc	        0x4883ec08	                              sub rsp, 8	      1117	refs.c	FUNCTION_60
0x40035d0	    0x488b3d000000	            mov rdi, qword [0x040035d7] 	      1118	refs.c	FUNCTION_60	CALL_2
0x40035d7	      0xe800000000	                          call 0x40035dc	      1118	refs.c	FUNCTION_60	CALL_2
0x40035dc	        0x4883ec08	                              sub rsp, 8	      1118	refs.c	FUNCTION_60	CALL_2
0x40035e0	          0x4589f1	                           mov r9d, r14d	      1118	refs.c	FUNCTION_60	CALL_2
0x40035e3	          0x4d89e8	                             mov r8, r13	      1118	refs.c	FUNCTION_60	CALL_2
0x40035e6	            0x4157	                                push r15	      1118	refs.c	FUNCTION_60	CALL_2
0x40035e8	          0x4c89e1	                            mov rcx, r12	      1118	refs.c	FUNCTION_60	CALL_2
0x40035eb	          0x4889ea	                            mov rdx, rbp	      1118	refs.c	FUNCTION_60	CALL_2
0x40035ee	          0x4889de	                            mov rsi, rbx	      1118	refs.c	FUNCTION_60	CALL_2
0x40035f1	          0x4889c7	                            mov rdi, rax	      1118	refs.c	FUNCTION_60	CALL_2
0x40035f4	      0xe800000000	                          call 0x40035f9	      1118	refs.c	FUNCTION_60	CALL_2
0x40035f9	        0x4883c418	                           add rsp, 0x18	      1120	refs.c	FUNCTION_60
0x40035fd	              0x5b	                                 pop rbx	      1120	refs.c	FUNCTION_60
0x40035fe	              0x5d	                                 pop rbp	      1120	refs.c	FUNCTION_60
0x40035ff	            0x415c	                                 pop r12	      1120	refs.c	FUNCTION_60
0x4003601	            0x415d	                                 pop r13	      1120	refs.c	FUNCTION_60
0x4003603	            0x415e	                                 pop r14	      1120	refs.c	FUNCTION_60
0x4003605	            0x415f	                                 pop r15	      1120	refs.c	FUNCTION_60
0x4003607	              0xc3	                                     ret	      1120	refs.c	FUNCTION_60
reflog_exists	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	10
0x4003c10	              0x53	                                push rbx	      2063	refs.c	FUNCTION_111
0x4003c11	          0x4889fb	                            mov rbx, rdi	      2063	refs.c	FUNCTION_111
0x4003c14	    0x488b3d000000	            mov rdi, qword [0x04003c1b] 	      2064	refs.c	FUNCTION_111	CALL_2
0x4003c1b	      0xe800000000	                          call 0x4003c20	      2064	refs.c	FUNCTION_111	CALL_2
0x4003c20	          0x488b10	                    mov rdx, qword [rax]	      2059	refs.c	FUNCTION_110	CALL_1
0x4003c23	          0x4889de	                            mov rsi, rbx	      2059	refs.c	FUNCTION_110	CALL_1
0x4003c26	          0x4889c7	                            mov rdi, rax	      2059	refs.c	FUNCTION_110	CALL_1
0x4003c29	              0x5b	                                 pop rbx	      2065	refs.c	FUNCTION_111
0x4003c2a	    0x488b92900000	            mov rdx, qword [rdx + 0x90] 	      2059	refs.c	FUNCTION_110	CALL_1
0x4003c31	            0xffe2	                                 jmp rdx	      2059	refs.c	FUNCTION_110	CALL_1
read_ref_at_ent_oldest	CALL,4:IF,5:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	60
0x40000b0	            0x4157	                                push r15	       884	refs.c	FUNCTION_49
0x40000b2	            0x4156	                                push r14	       884	refs.c	FUNCTION_49
0x40000b4	          0x4989cf	                            mov r15, rcx	       884	refs.c	FUNCTION_49
0x40000b7	            0x4155	                                push r13	       884	refs.c	FUNCTION_49
0x40000b9	            0x4154	                                push r12	       884	refs.c	FUNCTION_49
0x40000bb	          0x4589c6	                           mov r14d, r8d	       884	refs.c	FUNCTION_49
0x40000be	              0x55	                                push rbp	       884	refs.c	FUNCTION_49
0x40000bf	              0x53	                                push rbx	       884	refs.c	FUNCTION_49
0x40000c0	          0x4889fd	                            mov rbp, rdi	       884	refs.c	FUNCTION_49
0x40000c3	          0x4989f4	                            mov r12, rsi	       884	refs.c	FUNCTION_49
0x40000c6	        0x4883ec08	                              sub rsp, 8	       884	refs.c	FUNCTION_49
0x40000ca	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       884	refs.c	FUNCTION_49
0x40000cf	        0x4c8b6b58	            mov r13, qword [rbx + 0x58] 	       887	refs.c	FUNCTION_49	IF_1
0x40000d3	          0x4d85ed	                           test r13, r13	       887	refs.c	FUNCTION_49	IF_1
0x40000d6	            0x740c	                            je 0x40000e4	       887	refs.c	FUNCTION_49	IF_1
0x40000d8	          0x4c89cf	                             mov rdi, r9	       888	refs.c	FUNCTION_49	CALL_1
0x40000db	      0xe800000000	                          call 0x40000e0	       888	refs.c	FUNCTION_49	CALL_1
0x40000e0	        0x49894500	                    mov qword [r13], rax	       888	refs.c	FUNCTION_49	CALL_1
0x40000e4	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       889	refs.c	FUNCTION_49	IF_2
0x40000e8	          0x4885c0	                           test rax, rax	       889	refs.c	FUNCTION_49	IF_2
0x40000eb	            0x7403	                            je 0x40000f0	       889	refs.c	FUNCTION_49	IF_2
0x40000ed	          0x4c8938	                    mov qword [rax], r15	       890	refs.c	FUNCTION_49	IF_2
0x40000f0	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       891	refs.c	FUNCTION_49	IF_3
0x40000f4	          0x4885c0	                           test rax, rax	       891	refs.c	FUNCTION_49	IF_3
0x40000f7	            0x7403	                            je 0x40000fc	       891	refs.c	FUNCTION_49	IF_3
0x40000f9	          0x448930	                   mov dword [rax], r14d	       892	refs.c	FUNCTION_49	IF_3
0x40000fc	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       893	refs.c	FUNCTION_49	IF_4
0x4000100	          0x4885c0	                           test rax, rax	       893	refs.c	FUNCTION_49	IF_4
0x4000103	            0x7405	                            je 0x400010a	       893	refs.c	FUNCTION_49	IF_4
0x4000105	          0x8b5314	            mov edx, dword [rbx + 0x14] 	       894	refs.c	FUNCTION_49	IF_4
0x4000108	            0x8910	                    mov dword [rax], edx	       894	refs.c	FUNCTION_49	IF_4
0x400010a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_125	CALL_3
0x400010e	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_125	CALL_3
0x4000112	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_144	CALL_1
0x4000117	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x400011a	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x400011e	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x4000122	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x4000125	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_125	CALL_3
0x4000128	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	       990	cache.h	FUNCTION_147	CALL_1
0x400012c	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x4000131	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_144	CALL_1
0x4000134	      0xe800000000	                          call 0x4000139	       975	cache.h	FUNCTION_144	CALL_1
0x4000139	            0x85c0	                           test eax, eax	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x400013b	            0x7518	                           jne 0x4000155	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x400013d	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_125	CALL_3
0x4000141	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_125	CALL_3
0x4000144	      0x498b442408	                mov rax, qword [r12 + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x4000149	        0x48894308	                mov qword [rbx + 8], rax	        53	string3.h	FUNCTION_125	CALL_3
0x400014d	      0x418b442410	            mov eax, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x4000152	          0x894310	             mov dword [rbx + 0x10], eax	        53	string3.h	FUNCTION_125	CALL_3
0x4000155	        0x4883c408	                              add rsp, 8	       900	refs.c	FUNCTION_49
0x4000159	      0xb801000000	                              mov eax, 1	       900	refs.c	FUNCTION_49
0x400015e	              0x5b	                                 pop rbx	       900	refs.c	FUNCTION_49
0x400015f	              0x5d	                                 pop rbp	       900	refs.c	FUNCTION_49
0x4000160	            0x415c	                                 pop r12	       900	refs.c	FUNCTION_49
0x4000162	            0x415d	                                 pop r13	       900	refs.c	FUNCTION_49
0x4000164	            0x415e	                                 pop r14	       900	refs.c	FUNCTION_49
0x4000166	            0x415f	                                 pop r15	       900	refs.c	FUNCTION_49
0x4000168	              0xc3	                                     ret	       900	refs.c	FUNCTION_49
lookup_ref_store_map	CALL,2:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	33
0x4000420	              0x55	                                push rbp	      1638	refs.c	FUNCTION_87
0x4000421	              0x53	                                push rbx	      1638	refs.c	FUNCTION_87
0x4000422	        0x4883ec28	                           sub rsp, 0x28	      1638	refs.c	FUNCTION_87
0x4000426	    0x64488b042528	                mov rax, qword fs:[0x28]	      1638	refs.c	FUNCTION_87
0x400042f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1638	refs.c	FUNCTION_87
0x4000434	            0x31c0	                            xor eax, eax	      1638	refs.c	FUNCTION_87
0x4000436	          0x8b471c	            mov eax, dword [rdi + 0x1c] 	      1641	refs.c	FUNCTION_87	IF_1
0x4000439	            0x85c0	                           test eax, eax	      1641	refs.c	FUNCTION_87	IF_1
0x400043b	            0x744b	                            je 0x4000488	      1641	refs.c	FUNCTION_87	IF_1
0x400043d	          0x4889f5	                            mov rbp, rsi	      1641	refs.c	FUNCTION_87	IF_1
0x4000440	          0x4889fb	                            mov rbx, rdi	      1641	refs.c	FUNCTION_87	IF_1
0x4000443	          0x4889f7	                            mov rdi, rsi	      1645	refs.c	FUNCTION_87	CALL_2
0x4000446	      0xe800000000	                          call 0x400044b	      1645	refs.c	FUNCTION_87	CALL_2
0x400044b	          0x4889ea	                            mov rdx, rbp	       308	hashmap.h	FUNCTION_167	CALL_2
0x400044e	          0x4889e6	                            mov rsi, rsp	       308	hashmap.h	FUNCTION_167	CALL_2
0x4000451	          0x4889df	                            mov rdi, rbx	       308	hashmap.h	FUNCTION_167	CALL_2
0x4000454	        0x89442408	                mov dword [rsp + 8], eax	       248	hashmap.h	FUNCTION_165
0x4000458	    0x48c704240000	                      mov qword [rsp], 0	       249	hashmap.h	FUNCTION_165
0x4000460	      0xe800000000	                          call 0x4000465	       308	hashmap.h	FUNCTION_167	CALL_2
0x4000465	          0x4885c0	                           test rax, rax	      1646	refs.c	FUNCTION_87
0x4000468	            0x741e	                            je 0x4000488	      1646	refs.c	FUNCTION_87
0x400046a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1646	refs.c	FUNCTION_87
0x400046e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1647	refs.c	FUNCTION_87
0x4000473	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1647	refs.c	FUNCTION_87
0x400047c	            0x750e	                           jne 0x400048c	      1647	refs.c	FUNCTION_87
0x400047e	        0x4883c428	                           add rsp, 0x28	      1647	refs.c	FUNCTION_87
0x4000482	              0x5b	                                 pop rbx	      1647	refs.c	FUNCTION_87
0x4000483	              0x5d	                                 pop rbp	      1647	refs.c	FUNCTION_87
0x4000484	              0xc3	                                     ret	      1647	refs.c	FUNCTION_87
0x4000485	           0xf1f00	                         nop dword [rax]	      1647	refs.c	FUNCTION_87
0x4000488	            0x31c0	                            xor eax, eax	      1643	refs.c	FUNCTION_87	IF_1
0x400048a	            0xebe2	                           jmp 0x400046e	      1643	refs.c	FUNCTION_87	IF_1
0x400048c	      0xe800000000	                          call 0x4000491	      1647	refs.c	FUNCTION_87
parse_hide_refs_config	CALL,6:IF,3:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0	79
0x40014a0	              0x55	                                push rbp	      1222	refs.c	FUNCTION_62
0x40014a1	              0x53	                                push rbx	      1222	refs.c	FUNCTION_62
0x40014a2	      0xb912000000	                           mov ecx, 0x12	      1224	refs.c	FUNCTION_62	IF_1
0x40014a7	          0x4889f3	                            mov rbx, rsi	      1222	refs.c	FUNCTION_62
0x40014aa	      0xbe00000000	                              mov esi, 0	      1224	refs.c	FUNCTION_62	IF_1
0x40014af	          0x4889fd	                            mov rbp, rdi	      1222	refs.c	FUNCTION_62
0x40014b2	        0x4883ec18	                           sub rsp, 0x18	      1222	refs.c	FUNCTION_62
0x40014b6	          0x4989d1	                             mov r9, rdx	      1222	refs.c	FUNCTION_62
0x40014b9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1222	refs.c	FUNCTION_62
0x40014c2	      0x4889442408	                mov qword [rsp + 8], rax	      1222	refs.c	FUNCTION_62
0x40014c7	            0x31c0	                            xor eax, eax	      1222	refs.c	FUNCTION_62
0x40014c9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1224	refs.c	FUNCTION_62	IF_1
0x40014cb	     0xf857f000000	                           jne 0x4001550	      1224	refs.c	FUNCTION_62	IF_1
0x40014d1	          0x4885db	                           test rbx, rbx	      1230	refs.c	FUNCTION_62	IF_1	IF_2
0x40014d4	     0xf84c9000000	                            je 0x40015a3	      1230	refs.c	FUNCTION_62	IF_1	IF_2
0x40014da	          0x4889df	                            mov rdi, rbx	      1232	refs.c	FUNCTION_62	IF_1	CALL_3
0x40014dd	      0xe800000000	                          call 0x40014e2	      1232	refs.c	FUNCTION_62	IF_1	CALL_3
0x40014e2	          0x4889c7	                            mov rdi, rax	      1233	refs.c	FUNCTION_62	IF_1	CALL_4
0x40014e5	          0x4889c3	                            mov rbx, rax	      1232	refs.c	FUNCTION_62	IF_1	CALL_3
0x40014e8	      0xe800000000	                          call 0x40014ed	      1233	refs.c	FUNCTION_62	IF_1	CALL_4
0x40014ed	            0x85c0	                           test eax, eax	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40014ef	            0x7432	                            je 0x4001523	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40014f1	          0x4863c8	                         movsxd rcx, eax	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40014f4	      0x807c0bff2f	         cmp byte [rbx + rcx - 1], 0x2f 	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40014f9	            0x7528	                           jne 0x4001523	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40014fb	          0x83e801	                              sub eax, 1	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40014fe	        0x488d140b	                    lea rdx, [rbx + rcx]	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001502	          0x4829c1	                            sub rcx, rax	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001505	        0x488d040b	                    lea rax, [rbx + rcx]	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001509	            0xeb0f	                           jmp 0x400151a	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x400150b	       0xf1f440000	                   nop dword [rax + rax]	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001510	        0x4883ea01	                              sub rdx, 1	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001514	        0x807aff2f	                cmp byte [rdx - 1], 0x2f	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001518	            0x7509	                           jne 0x4001523	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x400151a	          0x4839c2	                            cmp rdx, rax	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x400151d	        0xc642ff00	                   mov byte [rdx - 1], 0	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001521	            0x75ed	                           jne 0x4001510	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001523	    0x488b3d000000	            mov rdi, qword [0x0400152a] 	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x400152a	          0x4885ff	                           test rdi, rdi	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x400152d	            0x7455	                            je 0x4001584	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x400152f	          0x4889de	                            mov rsi, rbx	      1240	refs.c	FUNCTION_62	IF_1	CALL_6
0x4001532	      0xe800000000	                          call 0x4001537	      1240	refs.c	FUNCTION_62	IF_1	CALL_6
0x4001537	            0x31c0	                            xor eax, eax	      1242	refs.c	FUNCTION_62
0x4001539	      0x488b742408	                mov rsi, qword [rsp + 8]	      1243	refs.c	FUNCTION_62
0x400153e	    0x644833342528	                xor rsi, qword fs:[0x28]	      1243	refs.c	FUNCTION_62
0x4001547	            0x7569	                           jne 0x40015b2	      1243	refs.c	FUNCTION_62
0x4001549	        0x4883c418	                           add rsp, 0x18	      1243	refs.c	FUNCTION_62
0x400154d	              0x5b	                                 pop rbx	      1243	refs.c	FUNCTION_62
0x400154e	              0x5d	                                 pop rbp	      1243	refs.c	FUNCTION_62
0x400154f	              0xc3	                                     ret	      1243	refs.c	FUNCTION_62
0x4001550	            0x31c9	                            xor ecx, ecx	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4001552	            0x31d2	                            xor edx, edx	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4001554	          0x4989e0	                             mov r8, rsp	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4001557	          0x4c89ce	                             mov rsi, r9	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x400155a	          0x4889ef	                            mov rdi, rbp	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x400155d	      0xe800000000	                          call 0x4001562	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4001562	            0x85c0	                           test eax, eax	      1224	refs.c	FUNCTION_62	IF_1
0x4001564	            0x751a	                           jne 0x4001580	      1224	refs.c	FUNCTION_62	IF_1
0x4001566	        0x488b3424	                    mov rsi, qword [rsp]	      1226	refs.c	FUNCTION_62	IF_1
0x400156a	      0xbf00000000	                              mov edi, 0	      1226	refs.c	FUNCTION_62	IF_1
0x400156f	      0xb909000000	                              mov ecx, 9	      1226	refs.c	FUNCTION_62	IF_1
0x4001574	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4001576	     0xf8455ffffff	                            je 0x40014d1	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x400157c	            0xebbb	                           jmp 0x4001539	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x400157e	            0x6690	                                     nop	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4001580	            0x31c0	                            xor eax, eax	      1242	refs.c	FUNCTION_62
0x4001582	            0xebb5	                           jmp 0x4001539	      1242	refs.c	FUNCTION_62
0x4001584	      0xbf01000000	                              mov edi, 1	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_5
0x4001589	      0xbe20000000	                           mov esi, 0x20	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_5
0x400158e	      0xe800000000	                          call 0x4001593	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_5
0x4001593	    0x488905000000	            mov qword [0x0400159a], rax 	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_5
0x400159a	        0x80481001	                 or byte [rax + 0x10], 1	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x400159e	          0x4889c7	                            mov rdi, rax	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x40015a1	            0xeb8c	                           jmp 0x400152f	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x40015a3	          0x4889ef	                            mov rdi, rbp	      1231	refs.c	FUNCTION_62	IF_1	CALL_2
0x40015a6	      0xe800000000	                          call 0x40015ab	      1231	refs.c	FUNCTION_62	IF_1	CALL_2
0x40015ab	      0xb8ffffffff	                     mov eax, 0xffffffff	      1231	refs.c	FUNCTION_62	IF_1	CALL_2
0x40015b0	            0xeb87	                           jmp 0x4001539	      1231	refs.c	FUNCTION_62	IF_1	CALL_2
0x40015b2	      0xe800000000	                          call 0x40015b7	      1243	refs.c	FUNCTION_62
refs_delete_ref	CALL,11:IF,2:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	153
0x4002fd0	            0x4157	                                push r15	       744	refs.c	FUNCTION_43
0x4002fd2	            0x4156	                                push r14	       744	refs.c	FUNCTION_43
0x4002fd4	          0x4989f7	                            mov r15, rsi	       744	refs.c	FUNCTION_43
0x4002fd7	            0x4155	                                push r13	       744	refs.c	FUNCTION_43
0x4002fd9	            0x4154	                                push r12	       744	refs.c	FUNCTION_43
0x4002fdb	          0x4989fd	                            mov r13, rdi	       744	refs.c	FUNCTION_43
0x4002fde	              0x55	                                push rbp	       744	refs.c	FUNCTION_43
0x4002fdf	              0x53	                                push rbx	       744	refs.c	FUNCTION_43
0x4002fe0	          0x4889d7	                            mov rdi, rdx	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4002fe3	          0x4889d3	                            mov rbx, rdx	       744	refs.c	FUNCTION_43
0x4002fe6	          0x4989cc	                            mov r12, rcx	       744	refs.c	FUNCTION_43
0x4002fe9	          0x4589c6	                           mov r14d, r8d	       744	refs.c	FUNCTION_43
0x4002fec	        0x4883ec48	                           sub rsp, 0x48	       744	refs.c	FUNCTION_43
0x4002ff0	    0x64488b042528	                mov rax, qword fs:[0x28]	       744	refs.c	FUNCTION_43
0x4002ff9	      0x4889442438	             mov qword [rsp + 0x38], rax	       744	refs.c	FUNCTION_43
0x4002ffe	            0x31c0	                            xor eax, eax	       744	refs.c	FUNCTION_43
0x4003000	    0x48c704240000	                      mov qword [rsp], 0	       746	refs.c	FUNCTION_43
0x4003008	    0x48c744240800	                  mov qword [rsp + 8], 0	       746	refs.c	FUNCTION_43
0x4003011	    0x48c744241000	               mov qword [rsp + 0x10], 0	       746	refs.c	FUNCTION_43
0x400301a	      0xe800000000	                          call 0x400301f	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x400301f	          0x83f801	                              cmp eax, 1	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4003022	     0xf84a8000000	                            je 0x40030d0	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4003028	      0xbe30000000	                           mov esi, 0x30	       940	refs.c	FUNCTION_51	CALL_2
0x400302d	      0xbf01000000	                              mov edi, 1	       940	refs.c	FUNCTION_51	CALL_2
0x4003032	      0xe800000000	                          call 0x4003037	       940	refs.c	FUNCTION_51	CALL_2
0x4003037	          0x4989e1	                             mov r9, rsp	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x400303a	          0x4c8928	                    mov qword [rax], r13	       941	refs.c	FUNCTION_51
0x400303d	          0x4d89f8	                             mov r8, r15	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4003040	          0x4489f1	                           mov ecx, r14d	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4003043	          0x4c89e2	                            mov rdx, r12	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4003046	          0x4889de	                            mov rsi, rbx	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4003049	          0x4889c7	                            mov rdi, rax	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x400304c	          0x4889c5	                            mov rbp, rax	       940	refs.c	FUNCTION_51	CALL_2
0x400304f	      0xe800000000	                          call 0x4003054	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4003054	            0x85c0	                           test eax, eax	       754	refs.c	FUNCTION_43	IF_2
0x4003056	            0x7450	                            je 0x40030a8	       754	refs.c	FUNCTION_43	IF_2
0x4003058	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       758	refs.c	FUNCTION_43	IF_2
0x400305d	      0xbf00000000	                              mov edi, 0	       758	refs.c	FUNCTION_43	IF_2
0x4003062	            0x31c0	                            xor eax, eax	       758	refs.c	FUNCTION_43	IF_2
0x4003064	    0x41bc01000000	                             mov r12d, 1	       761	refs.c	FUNCTION_43	IF_2
0x400306a	      0xe800000000	                          call 0x400306f	       758	refs.c	FUNCTION_43	IF_2
0x400306f	          0x4889ef	                            mov rdi, rbp	       759	refs.c	FUNCTION_43	IF_2	CALL_8
0x4003072	      0xe800000000	                          call 0x4003077	       759	refs.c	FUNCTION_43	IF_2	CALL_8
0x4003077	          0x4889e7	                            mov rdi, rsp	       760	refs.c	FUNCTION_43	IF_2	CALL_9
0x400307a	      0xe800000000	                          call 0x400307f	       760	refs.c	FUNCTION_43	IF_2	CALL_9
0x400307f	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       766	refs.c	FUNCTION_43
0x4003084	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       766	refs.c	FUNCTION_43
0x400308d	          0x4489e0	                           mov eax, r12d	       766	refs.c	FUNCTION_43
0x4003090	     0xf855c010000	                           jne 0x40031f2	       766	refs.c	FUNCTION_43
0x4003096	        0x4883c448	                           add rsp, 0x48	       766	refs.c	FUNCTION_43
0x400309a	              0x5b	                                 pop rbx	       766	refs.c	FUNCTION_43
0x400309b	              0x5d	                                 pop rbp	       766	refs.c	FUNCTION_43
0x400309c	            0x415c	                                 pop r12	       766	refs.c	FUNCTION_43
0x400309e	            0x415d	                                 pop r13	       766	refs.c	FUNCTION_43
0x40030a0	            0x415e	                                 pop r14	       766	refs.c	FUNCTION_43
0x40030a2	            0x415f	                                 pop r15	       766	refs.c	FUNCTION_43
0x40030a4	              0xc3	                                     ret	       766	refs.c	FUNCTION_43
0x40030a5	           0xf1f00	                         nop dword [rax]	       766	refs.c	FUNCTION_43
0x40030a8	          0x4889e6	                            mov rsi, rsp	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x40030ab	          0x4889ef	                            mov rdi, rbp	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x40030ae	      0xe800000000	                          call 0x40030b3	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x40030b3	            0x85c0	                           test eax, eax	       756	refs.c	FUNCTION_43	IF_2
0x40030b5	          0x4189c4	                           mov r12d, eax	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x40030b8	            0x759e	                           jne 0x4003058	       756	refs.c	FUNCTION_43	IF_2
0x40030ba	          0x4889ef	                            mov rdi, rbp	       763	refs.c	FUNCTION_43	CALL_10
0x40030bd	      0xe800000000	                          call 0x40030c2	       763	refs.c	FUNCTION_43	CALL_10
0x40030c2	          0x4889e7	                            mov rdi, rsp	       764	refs.c	FUNCTION_43	CALL_11
0x40030c5	      0xe800000000	                          call 0x40030ca	       764	refs.c	FUNCTION_43	CALL_11
0x40030ca	            0xebb3	                           jmp 0x400307f	       765	refs.c	FUNCTION_43
0x40030cc	         0xf1f4000	                         nop dword [rax]	       765	refs.c	FUNCTION_43
0x40030d0	    0x488b3d000000	            mov rdi, qword [0x040030d7] 	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x40030d7	      0xe800000000	                          call 0x40030dc	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x40030dc	          0x4c39e8	                            cmp rax, r13	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x40030df	     0xf8512010000	                           jne 0x40031f7	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x40030e5	            0x31c0	                            xor eax, eax	       712	refs.c	FUNCTION_42	CALL_1
0x40030e7	          0x4889de	                            mov rsi, rbx	       712	refs.c	FUNCTION_42	CALL_1
0x40030ea	      0xbf00000000	                              mov edi, 0	       712	refs.c	FUNCTION_42	CALL_1
0x40030ef	      0xe800000000	                          call 0x40030f4	       712	refs.c	FUNCTION_42	CALL_1
0x40030f4	          0x4d85e4	                           test r12, r12	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x40030f7	          0x4889c5	                            mov rbp, rax	       712	refs.c	FUNCTION_42	CALL_1
0x40030fa	     0xf8498000000	                            je 0x4003198	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4003100	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x4003105	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_144	CALL_1
0x400310a	          0x4c89e7	                            mov rdi, r12	       975	cache.h	FUNCTION_144	CALL_1
0x400310d	      0xe800000000	                          call 0x4003112	       975	cache.h	FUNCTION_144	CALL_1
0x4003112	            0x85c0	                           test eax, eax	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4003114	     0xf847e000000	                            je 0x4003198	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x400311a	    0x8b0500000000	            mov eax, dword [0x04003120] 	       650	refs.c	FUNCTION_40	IF_1
0x4003120	            0x85c0	                           test eax, eax	       650	refs.c	FUNCTION_40	IF_1
0x4003122	     0xf8488000000	                            je 0x40031b0	       650	refs.c	FUNCTION_40	IF_1
0x4003128	    0x48630d000000	         movsxd rcx, dword [0x0400312f] 	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x400312f	      0xba01000000	                              mov edx, 1	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4003134	          0x4889ee	                            mov rsi, rbp	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4003137	      0xbf00000000	                              mov edi, 0	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x400313c	      0xe800000000	                          call 0x4003141	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4003141	            0x85c0	                           test eax, eax	       721	refs.c	FUNCTION_42	IF_1	IF_2
0x4003143	     0xf88d6000000	                            js 0x400321f	       721	refs.c	FUNCTION_42	IF_1	IF_2
0x4003149	      0x488d542420	                   lea rdx, [rsp + 0x20]	       239	refs.c	FUNCTION_11	CALL_1
0x400314e	            0x31c9	                            xor ecx, ecx	       239	refs.c	FUNCTION_11	CALL_1
0x4003150	      0xbe01000000	                              mov esi, 1	       239	refs.c	FUNCTION_11	CALL_1
0x4003155	          0x4889df	                            mov rdi, rbx	       239	refs.c	FUNCTION_11	CALL_1
0x4003158	      0xe800000000	                          call 0x400315d	       239	refs.c	FUNCTION_11	CALL_1
0x400315d	            0x85c0	                           test eax, eax	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x400315f	     0xf85ab000000	                           jne 0x4003210	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4003165	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       975	cache.h	FUNCTION_144	CALL_1
0x400316a	          0x4c89e6	                            mov rsi, r12	       975	cache.h	FUNCTION_144	CALL_1
0x400316d	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x4003172	      0xe800000000	                          call 0x4003177	       975	cache.h	FUNCTION_144	CALL_1
0x4003177	            0x85c0	                           test eax, eax	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4003179	          0x4189c4	                           mov r12d, eax	       975	cache.h	FUNCTION_144	CALL_1
0x400317c	            0x7550	                           jne 0x40031ce	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x400317e	          0x4889ef	                            mov rdi, rbp	       731	refs.c	FUNCTION_42	IF_1	CALL_12
0x4003181	      0xe800000000	                          call 0x4003186	       731	refs.c	FUNCTION_42	IF_1	CALL_12
0x4003186	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_181	CALL_1
0x400318b	      0xe800000000	                          call 0x4003190	       304	lockfile.h	FUNCTION_181	CALL_1
0x4003190	      0xe9eafeffff	                           jmp 0x400307f	       304	lockfile.h	FUNCTION_181	CALL_1
0x4003195	           0xf1f00	                         nop dword [rax]	       304	lockfile.h	FUNCTION_181	CALL_1
0x4003198	          0x4889ef	                            mov rdi, rbp	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x400319b	          0x4531e4	                          xor r12d, r12d	       737	refs.c	FUNCTION_42
0x400319e	      0xe800000000	                          call 0x40031a3	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x40031a3	      0xe9d7feffff	                           jmp 0x400307f	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x40031a8	     0xf1f84000000	                   nop dword [rax + rax]	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x40031b0	      0xbe00000000	                              mov esi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x40031b5	      0xbf00000000	                              mov edi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x40031ba	      0xe800000000	                          call 0x40031bf	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x40031bf	    0xc70500000000	               mov dword [0x040031c9], 1	       652	refs.c	FUNCTION_40	IF_1
0x40031c9	      0xe95affffff	                           jmp 0x4003128	       652	refs.c	FUNCTION_40	IF_1
0x40031ce	          0x4889de	                            mov rsi, rbx	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x40031d1	      0xbf00000000	                              mov edi, 0	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x40031d6	            0x31c0	                            xor eax, eax	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x40031d8	      0xe800000000	                          call 0x40031dd	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x40031dd	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_181	CALL_1
0x40031e2	    0x41bcffffffff	                    mov r12d, 0xffffffff	       728	refs.c	FUNCTION_42	IF_1	IF_4
0x40031e8	      0xe800000000	                          call 0x40031ed	       304	lockfile.h	FUNCTION_181	CALL_1
0x40031ed	      0xe98dfeffff	                           jmp 0x400307f	       304	lockfile.h	FUNCTION_181	CALL_1
0x40031f2	      0xe800000000	                          call 0x40031f7	       766	refs.c	FUNCTION_43
0x40031f7	      0xb900000000	                              mov ecx, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x40031fc	      0xbaed020000	                          mov edx, 0x2ed	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4003201	      0xbe00000000	                              mov esi, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4003206	      0xbf00000000	                              mov edi, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x400320b	      0xe800000000	                          call 0x4003210	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4003210	          0x4889de	                            mov rsi, rbx	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4003213	      0xbf00000000	                              mov edi, 0	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4003218	            0x31c0	                            xor eax, eax	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x400321a	      0xe800000000	                          call 0x400321f	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x400321f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_184
0x4003224	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_184
0x4003226	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_184
0x400322b	      0xe800000000	                          call 0x4003230	        54	gettext.h	FUNCTION_184
0x4003230	          0x4889ee	                            mov rsi, rbp	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4003233	          0x4889c7	                            mov rdi, rax	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4003236	            0x31c0	                            xor eax, eax	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4003238	      0xe800000000	                          call 0x400323d	       722	refs.c	FUNCTION_42	IF_1	CALL_6
read_ref_full	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	27
0x4001c20	            0x4155	                                push r13	       232	refs.c	FUNCTION_10
0x4001c22	            0x4154	                                push r12	       232	refs.c	FUNCTION_10
0x4001c24	          0x4989cd	                            mov r13, rcx	       232	refs.c	FUNCTION_10
0x4001c27	              0x55	                                push rbp	       232	refs.c	FUNCTION_10
0x4001c28	              0x53	                                push rbx	       232	refs.c	FUNCTION_10
0x4001c29	          0x4889fb	                            mov rbx, rdi	       232	refs.c	FUNCTION_10
0x4001c2c	            0x89f5	                            mov ebp, esi	       232	refs.c	FUNCTION_10
0x4001c2e	          0x4989d4	                            mov r12, rdx	       232	refs.c	FUNCTION_10
0x4001c31	        0x4883ec08	                              sub rsp, 8	       232	refs.c	FUNCTION_10
0x4001c35	    0x488b3d000000	            mov rdi, qword [0x04001c3c] 	       233	refs.c	FUNCTION_10	CALL_2
0x4001c3c	      0xe800000000	                          call 0x4001c41	       233	refs.c	FUNCTION_10	CALL_2
0x4001c41	          0x4d89e8	                             mov r8, r13	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001c44	          0x4c89e1	                            mov rcx, r12	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001c47	            0x89ea	                            mov edx, ebp	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001c49	          0x4889de	                            mov rsi, rbx	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001c4c	          0x4889c7	                            mov rdi, rax	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001c4f	      0xe800000000	                          call 0x4001c54	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001c54	          0x4885c0	                           test rax, rax	       233	refs.c	FUNCTION_10	CALL_2
0x4001c57	           0xf94c0	                                 sete al	       233	refs.c	FUNCTION_10	CALL_2
0x4001c5a	        0x4883c408	                              add rsp, 8	       235	refs.c	FUNCTION_10
0x4001c5e	           0xfb6c0	                           movzx eax, al	       233	refs.c	FUNCTION_10	CALL_2
0x4001c61	              0x5b	                                 pop rbx	       235	refs.c	FUNCTION_10
0x4001c62	            0xf7d8	                                 neg eax	       233	refs.c	FUNCTION_10	CALL_2
0x4001c64	              0x5d	                                 pop rbp	       235	refs.c	FUNCTION_10
0x4001c65	            0x415c	                                 pop r12	       235	refs.c	FUNCTION_10
0x4001c67	            0x415d	                                 pop r13	       235	refs.c	FUNCTION_10
0x4001c69	              0xc3	                                     ret	       235	refs.c	FUNCTION_10
refs_for_each_ref_in	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	23
0x4001810	            0x4155	                                push r13	      1403	refs.c	FUNCTION_72
0x4001812	            0x4154	                                push r12	      1403	refs.c	FUNCTION_72
0x4001814	          0x4989cd	                            mov r13, rcx	      1403	refs.c	FUNCTION_72
0x4001817	              0x55	                                push rbp	      1403	refs.c	FUNCTION_72
0x4001818	              0x53	                                push rbx	      1403	refs.c	FUNCTION_72
0x4001819	          0x4889fd	                            mov rbp, rdi	      1403	refs.c	FUNCTION_72
0x400181c	          0x4889f7	                            mov rdi, rsi	      1404	refs.c	FUNCTION_72	CALL_2
0x400181f	          0x4889f3	                            mov rbx, rsi	      1403	refs.c	FUNCTION_72
0x4001822	          0x4989d4	                            mov r12, rdx	      1403	refs.c	FUNCTION_72
0x4001825	        0x4883ec08	                              sub rsp, 8	      1403	refs.c	FUNCTION_72
0x4001829	      0xe800000000	                          call 0x400182e	      1404	refs.c	FUNCTION_72	CALL_2
0x400182e	        0x4883c408	                              add rsp, 8	      1405	refs.c	FUNCTION_72
0x4001832	          0x4d89e9	                             mov r9, r13	      1404	refs.c	FUNCTION_72	CALL_2
0x4001835	          0x4c89e2	                            mov rdx, r12	      1404	refs.c	FUNCTION_72	CALL_2
0x4001838	          0x4889de	                            mov rsi, rbx	      1404	refs.c	FUNCTION_72	CALL_2
0x400183b	          0x4889ef	                            mov rdi, rbp	      1404	refs.c	FUNCTION_72	CALL_2
0x400183e	          0x4531c0	                            xor r8d, r8d	      1404	refs.c	FUNCTION_72	CALL_2
0x4001841	              0x5b	                                 pop rbx	      1405	refs.c	FUNCTION_72
0x4001842	              0x5d	                                 pop rbp	      1405	refs.c	FUNCTION_72
0x4001843	            0x415c	                                 pop r12	      1405	refs.c	FUNCTION_72
0x4001845	            0x415d	                                 pop r13	      1405	refs.c	FUNCTION_72
0x4001847	            0x89c1	                            mov ecx, eax	      1404	refs.c	FUNCTION_72	CALL_2
0x4001849	      0xe962ffffff	                 jmp sym.do_for_each_ref	      1404	refs.c	FUNCTION_72	CALL_2
for_each_replace_ref	CALL,3:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	26
0x4002150	            0x4156	                                push r14	      1434	refs.c	FUNCTION_76
0x4002152	            0x4155	                                push r13	      1434	refs.c	FUNCTION_76
0x4002154	          0x4989fe	                            mov r14, rdi	      1434	refs.c	FUNCTION_76
0x4002157	            0x4154	                                push r12	      1434	refs.c	FUNCTION_76
0x4002159	              0x55	                                push rbp	      1434	refs.c	FUNCTION_76
0x400215a	          0x4989d5	                            mov r13, rdx	      1434	refs.c	FUNCTION_76
0x400215d	              0x53	                                push rbx	      1434	refs.c	FUNCTION_76
0x400215e	    0x488b1d000000	            mov rbx, qword [0x04002165] 	      1437	refs.c	FUNCTION_76	CALL_3
0x4002165	          0x4889f5	                            mov rbp, rsi	      1434	refs.c	FUNCTION_76
0x4002168	          0x4889df	                            mov rdi, rbx	      1437	refs.c	FUNCTION_76	CALL_3
0x400216b	      0xe800000000	                          call 0x4002170	      1437	refs.c	FUNCTION_76	CALL_3
0x4002170	          0x4c89f7	                            mov rdi, r14	      1435	refs.c	FUNCTION_76	CALL_2
0x4002173	          0x4989c4	                            mov r12, rax	      1437	refs.c	FUNCTION_76	CALL_3
0x4002176	      0xe800000000	                          call 0x400217b	      1435	refs.c	FUNCTION_76	CALL_2
0x400217b	          0x4d89e9	                             mov r9, r13	      1435	refs.c	FUNCTION_76	CALL_2
0x400217e	          0x4489e1	                           mov ecx, r12d	      1435	refs.c	FUNCTION_76	CALL_2
0x4002181	          0x4889ea	                            mov rdx, rbp	      1435	refs.c	FUNCTION_76	CALL_2
0x4002184	          0x4889de	                            mov rsi, rbx	      1435	refs.c	FUNCTION_76	CALL_2
0x4002187	    0x41b801000000	                              mov r8d, 1	      1435	refs.c	FUNCTION_76	CALL_2
0x400218d	          0x4889c7	                            mov rdi, rax	      1435	refs.c	FUNCTION_76	CALL_2
0x4002190	              0x5b	                                 pop rbx	      1439	refs.c	FUNCTION_76
0x4002191	              0x5d	                                 pop rbp	      1439	refs.c	FUNCTION_76
0x4002192	            0x415c	                                 pop r12	      1439	refs.c	FUNCTION_76
0x4002194	            0x415d	                                 pop r13	      1439	refs.c	FUNCTION_76
0x4002196	            0x415e	                                 pop r14	      1439	refs.c	FUNCTION_76
0x4002198	      0xe913f6ffff	                 jmp sym.do_for_each_ref	      1435	refs.c	FUNCTION_76	CALL_2
dwim_ref	CALL,3:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	26
0x4002950	            0x4154	                                push r12	       540	refs.c	FUNCTION_34
0x4002952	              0x55	                                push rbp	       540	refs.c	FUNCTION_34
0x4002953	          0x4989cc	                            mov r12, rcx	       540	refs.c	FUNCTION_34
0x4002956	              0x53	                                push rbx	       540	refs.c	FUNCTION_34
0x4002957	          0x4889d3	                            mov rbx, rdx	       540	refs.c	FUNCTION_34
0x400295a	        0x4883ec10	                           sub rsp, 0x10	       540	refs.c	FUNCTION_34
0x400295e	      0x48897c2408	                mov qword [rsp + 8], rdi	       540	refs.c	FUNCTION_34
0x4002963	        0x89742404	                mov dword [rsp + 4], esi	       540	refs.c	FUNCTION_34
0x4002967	      0x488d7c2408	                      lea rdi, [rsp + 8]	       541	refs.c	FUNCTION_34	CALL_1
0x400296c	      0x488d742404	                      lea rsi, [rsp + 4]	       541	refs.c	FUNCTION_34	CALL_1
0x4002971	      0xe8fad7ffff	         call sym.substitute_branch_name	       541	refs.c	FUNCTION_34	CALL_1
0x4002976	        0x8b742404	                mov esi, dword [rsp + 4]	       542	refs.c	FUNCTION_34	CALL_2
0x400297a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       542	refs.c	FUNCTION_34	CALL_2
0x400297f	          0x4889c5	                            mov rbp, rax	       541	refs.c	FUNCTION_34	CALL_1
0x4002982	          0x4c89e1	                            mov rcx, r12	       542	refs.c	FUNCTION_34	CALL_2
0x4002985	          0x4889da	                            mov rdx, rbx	       542	refs.c	FUNCTION_34	CALL_2
0x4002988	      0xe800000000	                          call 0x400298d	       542	refs.c	FUNCTION_34	CALL_2
0x400298d	          0x4889ef	                            mov rdi, rbp	       543	refs.c	FUNCTION_34	CALL_3
0x4002990	            0x89c3	                            mov ebx, eax	       542	refs.c	FUNCTION_34	CALL_2
0x4002992	      0xe800000000	                          call 0x4002997	       543	refs.c	FUNCTION_34	CALL_3
0x4002997	        0x4883c410	                           add rsp, 0x10	       545	refs.c	FUNCTION_34
0x400299b	            0x89d8	                            mov eax, ebx	       545	refs.c	FUNCTION_34
0x400299d	              0x5b	                                 pop rbx	       545	refs.c	FUNCTION_34
0x400299e	              0x5d	                                 pop rbp	       545	refs.c	FUNCTION_34
0x400299f	            0x415c	                                 pop r12	       545	refs.c	FUNCTION_34
0x40029a1	              0xc3	                                     ret	       545	refs.c	FUNCTION_34
create_symref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	18
0x4002d50	            0x4154	                                push r12	      1816	refs.c	FUNCTION_98
0x4002d52	              0x55	                                push rbp	      1816	refs.c	FUNCTION_98
0x4002d53	          0x4989d4	                            mov r12, rdx	      1816	refs.c	FUNCTION_98
0x4002d56	              0x53	                                push rbx	      1816	refs.c	FUNCTION_98
0x4002d57	          0x4889fb	                            mov rbx, rdi	      1816	refs.c	FUNCTION_98
0x4002d5a	    0x488b3d000000	            mov rdi, qword [0x04002d61] 	      1817	refs.c	FUNCTION_98	CALL_2
0x4002d61	          0x4889f5	                            mov rbp, rsi	      1816	refs.c	FUNCTION_98
0x4002d64	      0xe800000000	                          call 0x4002d69	      1817	refs.c	FUNCTION_98	CALL_2
0x4002d69	          0x488b10	                    mov rdx, qword [rax]	      1809	refs.c	FUNCTION_97	CALL_1
0x4002d6c	          0x4c89e1	                            mov rcx, r12	      1809	refs.c	FUNCTION_97	CALL_1
0x4002d6f	          0x4889de	                            mov rsi, rbx	      1809	refs.c	FUNCTION_97	CALL_1
0x4002d72	              0x5b	                                 pop rbx	      1819	refs.c	FUNCTION_98
0x4002d73	          0x4889c7	                            mov rdi, rax	      1809	refs.c	FUNCTION_97	CALL_1
0x4002d76	        0x4c8b4248	              mov r8, qword [rdx + 0x48]	      1809	refs.c	FUNCTION_97	CALL_1
0x4002d7a	          0x4889ea	                            mov rdx, rbp	      1809	refs.c	FUNCTION_97	CALL_1
0x4002d7d	              0x5d	                                 pop rbp	      1819	refs.c	FUNCTION_98
0x4002d7e	            0x415c	                                 pop r12	      1819	refs.c	FUNCTION_98
0x4002d80	          0x41ffe0	                                  jmp r8	      1809	refs.c	FUNCTION_97	CALL_1
dwim_log	CALL,9:IF,5:FOR,1:DO,0:SWITCH,0:ELSE,2:WHILE,0:functions,0	118
0x4003c40	            0x4157	                                push r15	       580	refs.c	FUNCTION_36
0x4003c42	            0x4156	                                push r14	       580	refs.c	FUNCTION_36
0x4003c44	            0x4155	                                push r13	       580	refs.c	FUNCTION_36
0x4003c46	            0x4154	                                push r12	       580	refs.c	FUNCTION_36
0x4003c48	          0x4989d5	                            mov r13, rdx	       580	refs.c	FUNCTION_36
0x4003c4b	              0x55	                                push rbp	       580	refs.c	FUNCTION_36
0x4003c4c	              0x53	                                push rbx	       580	refs.c	FUNCTION_36
0x4003c4d	          0x4889cb	                            mov rbx, rcx	       580	refs.c	FUNCTION_36
0x4003c50	        0x4883ec68	                           sub rsp, 0x68	       580	refs.c	FUNCTION_36
0x4003c54	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       580	refs.c	FUNCTION_36
0x4003c59	        0x89742414	             mov dword [rsp + 0x14], esi	       580	refs.c	FUNCTION_36
0x4003c5d	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       581	refs.c	FUNCTION_36	CALL_1
0x4003c62	      0x488d742414	                   lea rsi, [rsp + 0x14]	       581	refs.c	FUNCTION_36	CALL_1
0x4003c67	        0x48890c24	                    mov qword [rsp], rcx	       580	refs.c	FUNCTION_36
0x4003c6b	    0x64488b042528	                mov rax, qword fs:[0x28]	       580	refs.c	FUNCTION_36
0x4003c74	      0x4889442458	             mov qword [rsp + 0x58], rax	       580	refs.c	FUNCTION_36
0x4003c79	            0x31c0	                            xor eax, eax	       580	refs.c	FUNCTION_36
0x4003c7b	      0xe8f0c4ffff	         call sym.substitute_branch_name	       581	refs.c	FUNCTION_36	CALL_1
0x4003c80	    0x48c703000000	                      mov qword [rbx], 0	       586	refs.c	FUNCTION_36
0x4003c87	    0x48833d000000	               cmp qword [0x04003c8f], 0	       587	refs.c	FUNCTION_36	FOR_1
0x4003c8f	      0x4889442408	                mov qword [rsp + 8], rax	       581	refs.c	FUNCTION_36	CALL_1
0x4003c94	    0x48c744242000	               mov qword [rsp + 0x20], 0	       584	refs.c	FUNCTION_36
0x4003c9d	    0x48c744242800	               mov qword [rsp + 0x28], 0	       584	refs.c	FUNCTION_36
0x4003ca6	    0x48c744243000	               mov qword [rsp + 0x30], 0	       584	refs.c	FUNCTION_36
0x4003caf	     0xf8473010000	                            je 0x4003e28	       587	refs.c	FUNCTION_36	FOR_1
0x4003cb5	      0xb800000000	                              mov eax, 0	       587	refs.c	FUNCTION_36	FOR_1
0x4003cba	            0x31ed	                            xor ebp, ebp	       587	refs.c	FUNCTION_36	FOR_1
0x4003cbc	      0xbb00000000	                              mov ebx, 0	       587	refs.c	FUNCTION_36	FOR_1
0x4003cc1	            0xeb3a	                           jmp 0x4003cfd	       587	refs.c	FUNCTION_36	FOR_1
0x4003cc3	       0xf1f440000	                   nop dword [rax + rax]	       587	refs.c	FUNCTION_36	FOR_1
0x4003cc8	            0x85ed	                           test ebp, ebp	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x4003cca	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	       598	refs.c	FUNCTION_36	FOR_1	IF_2
0x4003ccf	        0x448d7d01	                     lea r15d, [rbp + 1]	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x4003cd3	     0xf84bf000000	                            je 0x4003d98	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x4003cd9	    0x8b0500000000	            mov eax, dword [0x04003cdf] 	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x4003cdf	          0x4489fd	                           mov ebp, r15d	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x4003ce2	            0x85c0	                           test eax, eax	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x4003ce4	     0xf84ee000000	                            je 0x4003dd8	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x4003cea	        0x4883c308	                              add rbx, 8	       587	refs.c	FUNCTION_36	FOR_1
0x4003cee	        0x48833b00	                      cmp qword [rbx], 0	       587	refs.c	FUNCTION_36	FOR_1
0x4003cf2	     0xf84e0000000	                            je 0x4003dd8	       587	refs.c	FUNCTION_36	FOR_1
0x4003cf8	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       587	refs.c	FUNCTION_36	FOR_1
0x4003cfd	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_188	IF_2
0x4003d03	    0x48c744242800	               mov qword [rsp + 0x28], 0	       164	strbuf.h	FUNCTION_188
0x4003d0c	     0xf84fe000000	                            je 0x4003e10	       165	strbuf.h	FUNCTION_188	IF_2
0x4003d12	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_188	IF_2
0x4003d15	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4003d1a	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4003d1e	      0x4c8d642420	                   lea r12, [rsp + 0x20]	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4003d23	          0x488b33	                    mov rsi, qword [rbx]	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4003d26	            0x31c0	                            xor eax, eax	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4003d28	          0x4c89e7	                            mov rdi, r12	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4003d2b	      0xe800000000	                          call 0x4003d30	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4003d30	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003d35	      0x488d542440	                   lea rdx, [rsp + 0x40]	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003d3a	            0x31c9	                            xor ecx, ecx	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003d3c	      0xbe01000000	                              mov esi, 1	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003d41	      0xe800000000	                          call 0x4003d46	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003d46	          0x4885c0	                           test rax, rax	       595	refs.c	FUNCTION_36	FOR_1	IF_1
0x4003d49	          0x4989c6	                            mov r14, rax	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003d4c	            0x749c	                            je 0x4003cea	       595	refs.c	FUNCTION_36	FOR_1	IF_1
0x4003d4e	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x4003d53	      0xe800000000	                          call 0x4003d58	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x4003d58	            0x85c0	                           test eax, eax	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x4003d5a	     0xf8568ffffff	                           jne 0x4003cc8	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x4003d60	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4003d65	          0x4c89f7	                            mov rdi, r14	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4003d68	      0xe800000000	                          call 0x4003d6d	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4003d6d	            0x85c0	                           test eax, eax	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4003d6f	     0xf8475ffffff	                            je 0x4003cea	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4003d75	          0x4c89f7	                            mov rdi, r14	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4003d78	      0xe800000000	                          call 0x4003d7d	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4003d7d	            0x85c0	                           test eax, eax	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4003d7f	     0xf8465ffffff	                            je 0x4003cea	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4003d85	            0x85ed	                           test ebp, ebp	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x4003d87	        0x448d7d01	                     lea r15d, [rbp + 1]	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x4003d8b	     0xf8548ffffff	                           jne 0x4003cd9	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x4003d91	     0xf1f80000000	                         nop dword [rax]	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x4003d98	          0x4c89f7	                            mov rdi, r14	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_6
0x4003d9b	          0x4489fd	                           mov ebp, r15d	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x4003d9e	      0xe800000000	                          call 0x4003da3	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_6
0x4003da3	        0x488b0c24	                    mov rcx, qword [rsp]	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_6
0x4003da7	          0x488901	                    mov qword [rcx], rax	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_6
0x4003daa	      0x488b442440	            mov rax, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_125	CALL_3
0x4003daf	        0x49894500	                    mov qword [r13], rax	        53	string3.h	FUNCTION_125	CALL_3
0x4003db3	      0x488b442448	            mov rax, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_125	CALL_3
0x4003db8	        0x49894508	                mov qword [r13 + 8], rax	        53	string3.h	FUNCTION_125	CALL_3
0x4003dbc	        0x8b442450	            mov eax, dword [rsp + 0x50] 	        53	string3.h	FUNCTION_125	CALL_3
0x4003dc0	        0x41894510	             mov dword [r13 + 0x10], eax	        53	string3.h	FUNCTION_125	CALL_3
0x4003dc4	    0x8b0500000000	            mov eax, dword [0x04003dca] 	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x4003dca	            0x85c0	                           test eax, eax	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x4003dcc	     0xf8518ffffff	                           jne 0x4003cea	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x4003dd2	    0x660f1f440000	                    nop word [rax + rax]	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x4003dd8	          0x4c89e7	                            mov rdi, r12	       610	refs.c	FUNCTION_36	CALL_8
0x4003ddb	      0xe800000000	                          call 0x4003de0	       610	refs.c	FUNCTION_36	CALL_8
0x4003de0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       611	refs.c	FUNCTION_36	CALL_9
0x4003de5	      0xe800000000	                          call 0x4003dea	       611	refs.c	FUNCTION_36	CALL_9
0x4003dea	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       613	refs.c	FUNCTION_36
0x4003def	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       613	refs.c	FUNCTION_36
0x4003df8	            0x89e8	                            mov eax, ebp	       613	refs.c	FUNCTION_36
0x4003dfa	            0x7535	                           jne 0x4003e31	       613	refs.c	FUNCTION_36
0x4003dfc	        0x4883c468	                           add rsp, 0x68	       613	refs.c	FUNCTION_36
0x4003e00	              0x5b	                                 pop rbx	       613	refs.c	FUNCTION_36
0x4003e01	              0x5d	                                 pop rbp	       613	refs.c	FUNCTION_36
0x4003e02	            0x415c	                                 pop r12	       613	refs.c	FUNCTION_36
0x4003e04	            0x415d	                                 pop r13	       613	refs.c	FUNCTION_36
0x4003e06	            0x415e	                                 pop r14	       613	refs.c	FUNCTION_36
0x4003e08	            0x415f	                                 pop r15	       613	refs.c	FUNCTION_36
0x4003e0a	              0xc3	                                     ret	       613	refs.c	FUNCTION_36
0x4003e0b	       0xf1f440000	                   nop dword [rax + rax]	       613	refs.c	FUNCTION_36
0x4003e10	    0x803d00000000	                cmp byte [0x04003e17], 0	       168	strbuf.h	FUNCTION_188	CALL_2
0x4003e17	     0xf84f8feffff	                            je 0x4003d15	       168	strbuf.h	FUNCTION_188	CALL_2
0x4003e1d	      0xe800000000	                          call 0x4003e22	       168	strbuf.h	FUNCTION_188	CALL_2
0x4003e22	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_188	CALL_2
0x4003e28	            0x31ed	                            xor ebp, ebp	       583	refs.c	FUNCTION_36
0x4003e2a	      0x4c8d642420	                   lea r12, [rsp + 0x20]	       583	refs.c	FUNCTION_36
0x4003e2f	            0xeba7	                           jmp 0x4003dd8	       583	refs.c	FUNCTION_36
0x4003e31	      0xe800000000	                          call 0x4003e36	       613	refs.c	FUNCTION_36
ref_update_reject_duplicates	CALL,3:IF,2:FOR,1:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0	54
0x4002d90	          0x4885f6	                           test rsi, rsi	      1826	refs.c	FUNCTION_99	CALL_1
0x4002d93	            0x4156	                                push r14	      1823	refs.c	FUNCTION_99
0x4002d95	            0x4155	                                push r13	      1823	refs.c	FUNCTION_99
0x4002d97	            0x4154	                                push r12	      1823	refs.c	FUNCTION_99
0x4002d99	              0x55	                                push rbp	      1823	refs.c	FUNCTION_99
0x4002d9a	              0x53	                                push rbx	      1823	refs.c	FUNCTION_99
0x4002d9b	        0x448b6f08	               mov r13d, dword [rdi + 8]	      1824	refs.c	FUNCTION_99
0x4002d9f	            0x747e	                            je 0x4002e1f	      1826	refs.c	FUNCTION_99	CALL_1
0x4002da1	        0x4983fd01	                              cmp r13, 1	      1828	refs.c	FUNCTION_99	FOR_1
0x4002da5	            0x7661	                           jbe 0x4002e08	      1828	refs.c	FUNCTION_99	FOR_1
0x4002da7	          0x488b1f	                    mov rbx, qword [rdi]	      1828	refs.c	FUNCTION_99	FOR_1
0x4002daa	          0x4989f6	                            mov r14, rsi	      1828	refs.c	FUNCTION_99	FOR_1
0x4002dad	      0xbd01000000	                              mov ebp, 1	      1828	refs.c	FUNCTION_99	FOR_1
0x4002db2	        0x4883c310	                           add rbx, 0x10	      1828	refs.c	FUNCTION_99	FOR_1
0x4002db6	            0xeb17	                           jmp 0x4002dcf	      1828	refs.c	FUNCTION_99	FOR_1
0x4002db8	     0xf1f84000000	                   nop dword [rax + rax]	      1828	refs.c	FUNCTION_99	FOR_1
0x4002dc0	            0x7f51	                            jg 0x4002e13	      1837	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2
0x4002dc2	        0x4883c501	                              add rbp, 1	      1828	refs.c	FUNCTION_99	FOR_1
0x4002dc6	        0x4883c310	                           add rbx, 0x10	      1828	refs.c	FUNCTION_99	FOR_1
0x4002dca	          0x4939ed	                            cmp r13, rbp	      1828	refs.c	FUNCTION_99	FOR_1
0x4002dcd	            0x7439	                            je 0x4002e08	      1828	refs.c	FUNCTION_99	FOR_1
0x4002dcf	          0x4c8b23	                    mov r12, qword [rbx]	      1829	refs.c	FUNCTION_99	FOR_1
0x4002dd2	        0x488b7bf0	             mov rdi, qword [rbx - 0x10]	      1829	refs.c	FUNCTION_99	FOR_1
0x4002dd6	          0x4c89e6	                            mov rsi, r12	      1829	refs.c	FUNCTION_99	FOR_1
0x4002dd9	      0xe800000000	                          call 0x4002dde	      1829	refs.c	FUNCTION_99	FOR_1
0x4002dde	          0x83f800	                              cmp eax, 0	      1832	refs.c	FUNCTION_99	FOR_1	IF_1
0x4002de1	            0x75dd	                           jne 0x4002dc0	      1832	refs.c	FUNCTION_99	FOR_1	IF_1
0x4002de3	          0x4c89e2	                            mov rdx, r12	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_2
0x4002de6	          0x4c89f7	                            mov rdi, r14	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_2
0x4002de9	      0xbe00000000	                              mov esi, 0	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_2
0x4002dee	      0xe800000000	                          call 0x4002df3	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_2
0x4002df3	              0x5b	                                 pop rbx	      1842	refs.c	FUNCTION_99
0x4002df4	      0xb801000000	                              mov eax, 1	      1836	refs.c	FUNCTION_99	FOR_1	IF_1
0x4002df9	              0x5d	                                 pop rbp	      1842	refs.c	FUNCTION_99
0x4002dfa	            0x415c	                                 pop r12	      1842	refs.c	FUNCTION_99
0x4002dfc	            0x415d	                                 pop r13	      1842	refs.c	FUNCTION_99
0x4002dfe	            0x415e	                                 pop r14	      1842	refs.c	FUNCTION_99
0x4002e00	              0xc3	                                     ret	      1842	refs.c	FUNCTION_99
0x4002e01	     0xf1f80000000	                         nop dword [rax]	      1842	refs.c	FUNCTION_99
0x4002e08	              0x5b	                                 pop rbx	      1842	refs.c	FUNCTION_99
0x4002e09	            0x31c0	                            xor eax, eax	      1841	refs.c	FUNCTION_99
0x4002e0b	              0x5d	                                 pop rbp	      1842	refs.c	FUNCTION_99
0x4002e0c	            0x415c	                                 pop r12	      1842	refs.c	FUNCTION_99
0x4002e0e	            0x415d	                                 pop r13	      1842	refs.c	FUNCTION_99
0x4002e10	            0x415e	                                 pop r14	      1842	refs.c	FUNCTION_99
0x4002e12	              0xc3	                                     ret	      1842	refs.c	FUNCTION_99
0x4002e13	      0xbf00000000	                              mov edi, 0	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_3
0x4002e18	            0x31c0	                            xor eax, eax	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_3
0x4002e1a	      0xe800000000	                          call 0x4002e1f	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_3
0x4002e1f	      0xb900000000	                              mov ecx, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x4002e24	      0xba22070000	                          mov edx, 0x722	      1826	refs.c	FUNCTION_99	CALL_1
0x4002e29	      0xbe00000000	                              mov esi, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x4002e2e	      0xbf00000000	                              mov edi, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x4002e33	      0xe800000000	                          call 0x4002e38	      1826	refs.c	FUNCTION_99	CALL_1
copy_reflog_msg	CALL,0:IF,2:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,2:functions,0	47
0x4000e70	        0x488d4701	                      lea rax, [rdi + 1]	       781	refs.c	FUNCTION_45
0x4000e74	          0xc60709	                       mov byte [rdi], 9	       781	refs.c	FUNCTION_45
0x4000e77	    0x41b801000000	                              mov r8d, 1	       779	refs.c	FUNCTION_45
0x4000e7d	    0x41b920000000	                           mov r9d, 0x20	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4000e83	        0x4883c601	                              add rsi, 1	       782	refs.c	FUNCTION_45	WHILE_1
0x4000e87	         0xfb656ff	               movzx edx, byte [rsi - 1]	       782	refs.c	FUNCTION_45	WHILE_1
0x4000e8b	            0x84d2	                             test dl, dl	       782	refs.c	FUNCTION_45	WHILE_1
0x4000e8d	            0x7426	                            je 0x4000eb5	       782	refs.c	FUNCTION_45	WHILE_1
0x4000e8f	          0x4585c0	                           test r8d, r8d	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4000e92	           0xfb6ca	                           movzx ecx, dl	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4000e95	            0x7451	                            je 0x4000ee8	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4000e97	    0xf68100000000	                      test byte [rcx], 1	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4000e9e	            0x75e3	                           jne 0x4000e83	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4000ea0	          0x4531c0	                            xor r8d, r8d	       785	refs.c	FUNCTION_45	WHILE_1
0x4000ea3	        0x4883c601	                              add rsi, 1	       782	refs.c	FUNCTION_45	WHILE_1
0x4000ea7	            0x8810	                      mov byte [rax], dl	       788	refs.c	FUNCTION_45	WHILE_1
0x4000ea9	        0x4883c001	                              add rax, 1	       788	refs.c	FUNCTION_45	WHILE_1
0x4000ead	         0xfb656ff	               movzx edx, byte [rsi - 1]	       782	refs.c	FUNCTION_45	WHILE_1
0x4000eb1	            0x84d2	                             test dl, dl	       782	refs.c	FUNCTION_45	WHILE_1
0x4000eb3	            0x75da	                           jne 0x4000e8f	       782	refs.c	FUNCTION_45	WHILE_1
0x4000eb5	          0x4839f8	                            cmp rax, rdi	       790	refs.c	FUNCTION_45	WHILE_2
0x4000eb8	            0x770f	                            ja 0x4000ec9	       790	refs.c	FUNCTION_45	WHILE_2
0x4000eba	            0xeb1a	                           jmp 0x4000ed6	       790	refs.c	FUNCTION_45	WHILE_2
0x4000ebc	         0xf1f4000	                         nop dword [rax]	       790	refs.c	FUNCTION_45	WHILE_2
0x4000ec0	        0x4883e801	                              sub rax, 1	       791	refs.c	FUNCTION_45	WHILE_2
0x4000ec4	          0x4839c7	                            cmp rdi, rax	       790	refs.c	FUNCTION_45	WHILE_2
0x4000ec7	            0x7437	                            je 0x4000f00	       790	refs.c	FUNCTION_45	WHILE_2
0x4000ec9	         0xfb650ff	               movzx edx, byte [rax - 1]	       790	refs.c	FUNCTION_45	WHILE_2
0x4000ecd	    0xf68200000000	                      test byte [rdx], 1	       790	refs.c	FUNCTION_45	WHILE_2
0x4000ed4	            0x75ea	                           jne 0x4000ec0	       790	refs.c	FUNCTION_45	WHILE_2
0x4000ed6	          0xc6000a	                     mov byte [rax], 0xa	       792	refs.c	FUNCTION_45
0x4000ed9	        0x4883c001	                              add rax, 1	       793	refs.c	FUNCTION_45
0x4000edd	          0x4829f8	                            sub rax, rdi	       793	refs.c	FUNCTION_45
0x4000ee0	              0xc3	                                     ret	       794	refs.c	FUNCTION_45
0x4000ee1	     0xf1f80000000	                         nop dword [rax]	       794	refs.c	FUNCTION_45
0x4000ee8	     0xfb689000000	                   movzx ecx, byte [rcx]	       794	refs.c	FUNCTION_45
0x4000eef	          0x83e101	                              and ecx, 1	       794	refs.c	FUNCTION_45
0x4000ef2	            0x84c9	                             test cl, cl	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4000ef4	        0x440fb6c1	                           movzx r8d, cl	       785	refs.c	FUNCTION_45	WHILE_1
0x4000ef8	        0x410f45d1	                         cmovne edx, r9d	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4000efc	            0xeba5	                           jmp 0x4000ea3	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4000efe	            0x6690	                                     nop	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4000f00	          0x4889f8	                            mov rax, rdi	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4000f03	          0xc6000a	                     mov byte [rax], 0xa	       792	refs.c	FUNCTION_45
0x4000f06	        0x4883c001	                              add rax, 1	       793	refs.c	FUNCTION_45
0x4000f0a	          0x4829f8	                            sub rax, rdi	       793	refs.c	FUNCTION_45
0x4000f0d	              0xc3	                                     ret	       794	refs.c	FUNCTION_45
refs_head_ref	CALL,2:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	28
0x4001b30	              0x55	                                push rbp	      1326	refs.c	FUNCTION_66
0x4001b31	              0x53	                                push rbx	      1326	refs.c	FUNCTION_66
0x4001b32	          0x4889d5	                            mov rbp, rdx	      1326	refs.c	FUNCTION_66
0x4001b35	          0x4889f3	                            mov rbx, rsi	      1326	refs.c	FUNCTION_66
0x4001b38	      0xba01000000	                              mov edx, 1	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001b3d	      0xbe00000000	                              mov esi, 0	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001b42	        0x4883ec38	                           sub rsp, 0x38	      1326	refs.c	FUNCTION_66
0x4001b46	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001b4b	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001b50	    0x64488b042528	                mov rax, qword fs:[0x28]	      1326	refs.c	FUNCTION_66
0x4001b59	      0x4889442428	             mov qword [rsp + 0x28], rax	      1326	refs.c	FUNCTION_66
0x4001b5e	            0x31c0	                            xor eax, eax	      1326	refs.c	FUNCTION_66
0x4001b60	      0xe800000000	                          call 0x4001b65	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001b65	          0x4885c0	                           test rax, rax	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001b68	            0x7413	                            je 0x4001b7d	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001b6a	          0x4889e9	                            mov rcx, rbp	      1332	refs.c	FUNCTION_66	CALL_2
0x4001b6d	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1332	refs.c	FUNCTION_66	CALL_2
0x4001b71	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1332	refs.c	FUNCTION_66	CALL_2
0x4001b76	      0xbf00000000	                              mov edi, 0	      1332	refs.c	FUNCTION_66	CALL_2
0x4001b7b	            0xffd3	                                call rbx	      1332	refs.c	FUNCTION_66	CALL_2
0x4001b7d	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1335	refs.c	FUNCTION_66
0x4001b82	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1335	refs.c	FUNCTION_66
0x4001b8b	            0x7507	                           jne 0x4001b94	      1335	refs.c	FUNCTION_66
0x4001b8d	        0x4883c438	                           add rsp, 0x38	      1335	refs.c	FUNCTION_66
0x4001b91	              0x5b	                                 pop rbx	      1335	refs.c	FUNCTION_66
0x4001b92	              0x5d	                                 pop rbp	      1335	refs.c	FUNCTION_66
0x4001b93	              0xc3	                                     ret	      1335	refs.c	FUNCTION_66
0x4001b94	      0xe800000000	                          call 0x4001b99	      1335	refs.c	FUNCTION_66
for_each_glob_ref	CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	3
0x40020c0	          0x4889d1	                            mov rcx, rdx	       470	refs.c	FUNCTION_29	CALL_1
0x40020c3	            0x31d2	                            xor edx, edx	       470	refs.c	FUNCTION_29	CALL_1
0x40020c5	      0xe9d6fdffff	            jmp sym.for_each_glob_ref_in	       470	refs.c	FUNCTION_29	CALL_1
for_each_glob_ref_in	CALL,9:IF,3:FOR,0:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0	132
0x4001ea0	            0x4156	                                push r14	       441	refs.c	FUNCTION_28
0x4001ea2	            0x4155	                                push r13	       441	refs.c	FUNCTION_28
0x4001ea4	          0x4989cd	                            mov r13, rcx	       441	refs.c	FUNCTION_28
0x4001ea7	            0x4154	                                push r12	       441	refs.c	FUNCTION_28
0x4001ea9	              0x55	                                push rbp	       441	refs.c	FUNCTION_28
0x4001eaa	          0x4989fc	                            mov r12, rdi	       441	refs.c	FUNCTION_28
0x4001ead	              0x53	                                push rbx	       441	refs.c	FUNCTION_28
0x4001eae	          0x4889f3	                            mov rbx, rsi	       441	refs.c	FUNCTION_28
0x4001eb1	        0x4883ec40	                           sub rsp, 0x40	       441	refs.c	FUNCTION_28
0x4001eb5	    0x64488b042528	                mov rax, qword fs:[0x28]	       441	refs.c	FUNCTION_28
0x4001ebe	      0x4889442438	             mov qword [rsp + 0x38], rax	       441	refs.c	FUNCTION_28
0x4001ec3	            0x31c0	                            xor eax, eax	       441	refs.c	FUNCTION_28
0x4001ec5	          0x4885d2	                           test rdx, rdx	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001ec8	    0x48c704240000	                      mov qword [rsp], 0	       442	refs.c	FUNCTION_28
0x4001ed0	    0x48c744240800	                  mov qword [rsp + 8], 0	       442	refs.c	FUNCTION_28
0x4001ed9	    0x48c744241000	               mov qword [rsp + 0x10], 0	       442	refs.c	FUNCTION_28
0x4001ee2	     0xf847d010000	                            je 0x4002065	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001ee8	          0x4989d6	                            mov r14, rdx	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001eeb	          0x4889d7	                            mov rdi, rdx	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001eee	          0x4889e5	                            mov rbp, rsp	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001ef1	      0xe800000000	                          call 0x4001ef6	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001ef6	          0x4c89f6	                            mov rsi, r14	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001ef9	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001efc	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001eff	      0xe800000000	                          call 0x4001f04	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001f04	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001f07	      0xe800000000	                          call 0x4001f0c	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001f0c	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001f0f	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001f12	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001f15	      0xe800000000	                          call 0x4001f1a	       279	strbuf.h	FUNCTION_190	CALL_2
0x4001f1a	           0xfb603	                   movzx eax, byte [rbx]	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f1d	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f1f	     0xf84ab000000	                            je 0x4001fd0	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f25	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f28	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f2a	     0xf8680000000	                           jbe 0x4001fb0	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f30	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_210	WHILE_1
0x4001f3a	    0x660f1f440000	                    nop word [rax + rax]	      1115	string2.h	FUNCTION_210	WHILE_1
0x4001f40	        0x4883c301	                              add rbx, 1	      1116	string2.h	FUNCTION_210	WHILE_1
0x4001f44	           0xfb603	                   movzx eax, byte [rbx]	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f47	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f49	     0xf8481000000	                            je 0x4001fd0	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f4f	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f52	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f54	            0x77ea	                            ja 0x4001f40	      1114	string2.h	FUNCTION_210	WHILE_1
0x4001f56	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_210	WHILE_1
0x4001f5a	            0x73e4	                           jae 0x4001f40	      1115	string2.h	FUNCTION_210	WHILE_1
0x4001f5c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       459	refs.c	FUNCTION_28
0x4001f61	      0x488d742420	                   lea rsi, [rsp + 0x20]	       462	refs.c	FUNCTION_28	CALL_8
0x4001f66	      0xbf00000000	                              mov edi, 0	       462	refs.c	FUNCTION_28	CALL_8
0x4001f6b	      0x4c89642428	             mov qword [rsp + 0x28], r12	       460	refs.c	FUNCTION_28
0x4001f70	      0x4c896c2430	             mov qword [rsp + 0x30], r13	       461	refs.c	FUNCTION_28
0x4001f75	      0x4889442420	             mov qword [rsp + 0x20], rax	       459	refs.c	FUNCTION_28
0x4001f7a	      0xe800000000	                          call 0x4001f7f	       462	refs.c	FUNCTION_28	CALL_8
0x4001f7f	          0x4889ef	                            mov rdi, rbp	       464	refs.c	FUNCTION_28	CALL_9
0x4001f82	            0x89c3	                            mov ebx, eax	       462	refs.c	FUNCTION_28	CALL_8
0x4001f84	      0xe800000000	                          call 0x4001f89	       464	refs.c	FUNCTION_28	CALL_9
0x4001f89	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       466	refs.c	FUNCTION_28
0x4001f8e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       466	refs.c	FUNCTION_28
0x4001f97	            0x89d8	                            mov eax, ebx	       466	refs.c	FUNCTION_28
0x4001f99	     0xf851b010000	                           jne 0x40020ba	       466	refs.c	FUNCTION_28
0x4001f9f	        0x4883c440	                           add rsp, 0x40	       466	refs.c	FUNCTION_28
0x4001fa3	              0x5b	                                 pop rbx	       466	refs.c	FUNCTION_28
0x4001fa4	              0x5d	                                 pop rbp	       466	refs.c	FUNCTION_28
0x4001fa5	            0x415c	                                 pop r12	       466	refs.c	FUNCTION_28
0x4001fa7	            0x415d	                                 pop r13	       466	refs.c	FUNCTION_28
0x4001fa9	            0x415e	                                 pop r14	       466	refs.c	FUNCTION_28
0x4001fab	              0xc3	                                     ret	       466	refs.c	FUNCTION_28
0x4001fac	         0xf1f4000	                         nop dword [rax]	       466	refs.c	FUNCTION_28
0x4001fb0	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_210	WHILE_1
0x4001fba	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_210	WHILE_1
0x4001fbe	     0xf836cffffff	                           jae 0x4001f30	      1115	string2.h	FUNCTION_210	WHILE_1
0x4001fc4	            0xeb96	                           jmp 0x4001f5c	      1115	string2.h	FUNCTION_210	WHILE_1
0x4001fc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1115	string2.h	FUNCTION_210	WHILE_1
0x4001fd0	      0x488b442408	                mov rax, qword [rsp + 8]	       595	strbuf.h	FUNCTION_195	IF_1
0x4001fd5	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_195	IF_1
0x4001fd8	            0x744b	                            je 0x4002025	       595	strbuf.h	FUNCTION_195	IF_1
0x4001fda	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       595	strbuf.h	FUNCTION_195	IF_1
0x4001fdf	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	       595	strbuf.h	FUNCTION_195	IF_1
0x4001fe4	            0x743f	                            je 0x4002025	       595	strbuf.h	FUNCTION_195	IF_1
0x4001fe6	        0x488b0c24	                    mov rcx, qword [rsp]	       595	strbuf.h	FUNCTION_195	IF_1
0x4001fea	          0x4885c9	                           test rcx, rcx	       141	strbuf.h	FUNCTION_187
0x4001fed	     0xf85b5000000	                           jne 0x40020a8	       141	strbuf.h	FUNCTION_187
0x4001ff3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_189	CALL_2
0x4001ff8	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_189	CALL_2
0x4001ffb	      0xe800000000	                          call 0x4002000	       228	strbuf.h	FUNCTION_189	CALL_2
0x4002000	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       228	strbuf.h	FUNCTION_189	CALL_2
0x4002005	      0x488b442408	                mov rax, qword [rsp + 8]	       228	strbuf.h	FUNCTION_189	CALL_2
0x400200a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_189
0x400200e	      0x48894c2408	                mov qword [rsp + 8], rcx	       229	strbuf.h	FUNCTION_189
0x4002013	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_189
0x4002017	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_189
0x400201c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_189
0x4002021	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_189
0x4002025	        0x488b0424	                    mov rax, qword [rsp]	       230	strbuf.h	FUNCTION_189
0x4002029	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_187
0x400202c	            0x7566	                           jne 0x4002094	       141	strbuf.h	FUNCTION_187
0x400202e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_189	CALL_2
0x4002033	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_189	CALL_2
0x4002036	      0xe800000000	                          call 0x400203b	       228	strbuf.h	FUNCTION_189	CALL_2
0x400203b	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_189	CALL_2
0x4002040	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_189
0x4002044	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_189
0x4002049	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_189
0x400204e	        0xc604102a	              mov byte [rax + rdx], 0x2a	       229	strbuf.h	FUNCTION_189
0x4002052	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_189
0x4002057	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_189
0x400205c	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_189
0x4002060	      0xe9f7feffff	                           jmp 0x4001f5c	       230	strbuf.h	FUNCTION_189
0x4002065	      0xbe00000000	                              mov esi, 0	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x400206a	          0x4889df	                            mov rdi, rbx	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x400206d	          0x4889e5	                            mov rbp, rsp	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4002070	      0xe800000000	                          call 0x4002075	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4002075	            0x85c0	                           test eax, eax	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4002077	     0xf8587feffff	                           jne 0x4001f04	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x400207d	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_190	CALL_2
0x4002082	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_190	CALL_2
0x4002087	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_190	CALL_2
0x400208a	      0xe800000000	                          call 0x400208f	       279	strbuf.h	FUNCTION_190	CALL_2
0x400208f	      0xe970feffff	                           jmp 0x4001f04	       279	strbuf.h	FUNCTION_190	CALL_2
0x4002094	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_187
0x4002099	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x400209d	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x40020a0	            0x759e	                           jne 0x4002040	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x40020a2	            0xeb8a	                           jmp 0x400202e	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x40020a4	         0xf1f4000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x40020a8	        0x4883e901	                              sub rcx, 1	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x40020ac	          0x4839c8	                            cmp rax, rcx	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x40020af	     0xf8555ffffff	                           jne 0x400200a	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x40020b5	      0xe939ffffff	                           jmp 0x4001ff3	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x40020ba	      0xe800000000	                          call 0x40020bf	       466	refs.c	FUNCTION_28
safe_create_reflog	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	18
0x4003e50	            0x4154	                                push r12	      2075	refs.c	FUNCTION_113
0x4003e52	              0x55	                                push rbp	      2075	refs.c	FUNCTION_113
0x4003e53	          0x4989d4	                            mov r12, rdx	      2075	refs.c	FUNCTION_113
0x4003e56	              0x53	                                push rbx	      2075	refs.c	FUNCTION_113
0x4003e57	          0x4889fb	                            mov rbx, rdi	      2075	refs.c	FUNCTION_113
0x4003e5a	    0x488b3d000000	            mov rdi, qword [0x04003e61] 	      2076	refs.c	FUNCTION_113	CALL_2
0x4003e61	            0x89f5	                            mov ebp, esi	      2075	refs.c	FUNCTION_113
0x4003e63	      0xe800000000	                          call 0x4003e68	      2076	refs.c	FUNCTION_113	CALL_2
0x4003e68	          0x488b10	                    mov rdx, qword [rax]	      2070	refs.c	FUNCTION_112	CALL_1
0x4003e6b	          0x4c89e1	                            mov rcx, r12	      2070	refs.c	FUNCTION_112	CALL_1
0x4003e6e	          0x4889de	                            mov rsi, rbx	      2070	refs.c	FUNCTION_112	CALL_1
0x4003e71	              0x5b	                                 pop rbx	      2078	refs.c	FUNCTION_113
0x4003e72	          0x4889c7	                            mov rdi, rax	      2070	refs.c	FUNCTION_112	CALL_1
0x4003e75	    0x4c8b82980000	              mov r8, qword [rdx + 0x98]	      2070	refs.c	FUNCTION_112	CALL_1
0x4003e7c	            0x89ea	                            mov edx, ebp	      2070	refs.c	FUNCTION_112	CALL_1
0x4003e7e	              0x5d	                                 pop rbp	      2078	refs.c	FUNCTION_113
0x4003e7f	            0x415c	                                 pop r12	      2078	refs.c	FUNCTION_113
0x4003e81	          0x41ffe0	                                  jmp r8	      2070	refs.c	FUNCTION_112	CALL_1
refname_match	CALL,2:IF,1:FOR,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	43
0x4000cb0	            0x4155	                                push r13	       493	refs.c	FUNCTION_31
0x4000cb2	            0x4154	                                push r12	       493	refs.c	FUNCTION_31
0x4000cb4	          0x4989f5	                            mov r13, rsi	       493	refs.c	FUNCTION_31
0x4000cb7	              0x55	                                push rbp	       493	refs.c	FUNCTION_31
0x4000cb8	              0x53	                                push rbx	       493	refs.c	FUNCTION_31
0x4000cb9	          0x4989fc	                            mov r12, rdi	       493	refs.c	FUNCTION_31
0x4000cbc	      0xbb00000000	                              mov ebx, 0	       493	refs.c	FUNCTION_31
0x4000cc1	        0x4883ec08	                              sub rsp, 8	       493	refs.c	FUNCTION_31
0x4000cc5	      0xe800000000	                          call 0x4000cca	       495	refs.c	FUNCTION_31	CALL_1
0x4000cca	    0x488b3d000000	            mov rdi, qword [0x04000cd1] 	       497	refs.c	FUNCTION_31	FOR_1
0x4000cd1	            0x89c5	                            mov ebp, eax	       497	refs.c	FUNCTION_31	FOR_1
0x4000cd3	          0x4885ff	                           test rdi, rdi	       497	refs.c	FUNCTION_31	FOR_1
0x4000cd6	            0x7514	                           jne 0x4000cec	       497	refs.c	FUNCTION_31	FOR_1
0x4000cd8	            0xeb46	                           jmp 0x4000d20	       497	refs.c	FUNCTION_31	FOR_1
0x4000cda	    0x660f1f440000	                    nop word [rax + rax]	       497	refs.c	FUNCTION_31	FOR_1
0x4000ce0	        0x4883c308	                              add rbx, 8	       497	refs.c	FUNCTION_31	FOR_1
0x4000ce4	          0x488b3b	                    mov rdi, qword [rbx]	       497	refs.c	FUNCTION_31	FOR_1
0x4000ce7	          0x4885ff	                           test rdi, rdi	       497	refs.c	FUNCTION_31	FOR_1
0x4000cea	            0x7434	                            je 0x4000d20	       497	refs.c	FUNCTION_31	FOR_1
0x4000cec	          0x4c89e2	                            mov rdx, r12	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000cef	            0x89ee	                            mov esi, ebp	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000cf1	            0x31c0	                            xor eax, eax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000cf3	      0xe800000000	                          call 0x4000cf8	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000cf8	          0x4c89ef	                            mov rdi, r13	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000cfb	          0x4889c6	                            mov rsi, rax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000cfe	      0xe800000000	                          call 0x4000d03	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000d03	            0x85c0	                           test eax, eax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000d05	            0x75d9	                           jne 0x4000ce0	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000d07	        0x4883c408	                              add rsp, 8	       504	refs.c	FUNCTION_31
0x4000d0b	      0xb801000000	                              mov eax, 1	       499	refs.c	FUNCTION_31	FOR_1	IF_1
0x4000d10	              0x5b	                                 pop rbx	       504	refs.c	FUNCTION_31
0x4000d11	              0x5d	                                 pop rbp	       504	refs.c	FUNCTION_31
0x4000d12	            0x415c	                                 pop r12	       504	refs.c	FUNCTION_31
0x4000d14	            0x415d	                                 pop r13	       504	refs.c	FUNCTION_31
0x4000d16	              0xc3	                                     ret	       504	refs.c	FUNCTION_31
0x4000d17	    0x660f1f840000	                    nop word [rax + rax]	       504	refs.c	FUNCTION_31
0x4000d20	        0x4883c408	                              add rsp, 8	       504	refs.c	FUNCTION_31
0x4000d24	            0x31c0	                            xor eax, eax	       503	refs.c	FUNCTION_31
0x4000d26	              0x5b	                                 pop rbx	       504	refs.c	FUNCTION_31
0x4000d27	              0x5d	                                 pop rbp	       504	refs.c	FUNCTION_31
0x4000d28	            0x415c	                                 pop r12	       504	refs.c	FUNCTION_31
0x4000d2a	            0x415d	                                 pop r13	       504	refs.c	FUNCTION_31
0x4000d2c	              0xc3	                                     ret	       504	refs.c	FUNCTION_31
for_each_reflog_ent_reverse	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	18
0x4003a80	            0x4154	                                push r12	      2039	refs.c	FUNCTION_107
0x4003a82	              0x55	                                push rbp	      2039	refs.c	FUNCTION_107
0x4003a83	          0x4989d4	                            mov r12, rdx	      2039	refs.c	FUNCTION_107
0x4003a86	              0x53	                                push rbx	      2039	refs.c	FUNCTION_107
0x4003a87	          0x4889fb	                            mov rbx, rdi	      2039	refs.c	FUNCTION_107
0x4003a8a	    0x488b3d000000	            mov rdi, qword [0x04003a91] 	      2040	refs.c	FUNCTION_107	CALL_2
0x4003a91	          0x4889f5	                            mov rbp, rsi	      2039	refs.c	FUNCTION_107
0x4003a94	      0xe800000000	                          call 0x4003a99	      2040	refs.c	FUNCTION_107	CALL_2
0x4003a99	          0x488b10	                    mov rdx, qword [rax]	      2033	refs.c	FUNCTION_106	CALL_1
0x4003a9c	          0x4c89e1	                            mov rcx, r12	      2033	refs.c	FUNCTION_106	CALL_1
0x4003a9f	          0x4889de	                            mov rsi, rbx	      2033	refs.c	FUNCTION_106	CALL_1
0x4003aa2	              0x5b	                                 pop rbx	      2042	refs.c	FUNCTION_107
0x4003aa3	          0x4889c7	                            mov rdi, rax	      2033	refs.c	FUNCTION_106	CALL_1
0x4003aa6	    0x4c8b82880000	              mov r8, qword [rdx + 0x88]	      2033	refs.c	FUNCTION_106	CALL_1
0x4003aad	          0x4889ea	                            mov rdx, rbp	      2033	refs.c	FUNCTION_106	CALL_1
0x4003ab0	              0x5d	                                 pop rbp	      2042	refs.c	FUNCTION_107
0x4003ab1	            0x415c	                                 pop r12	      2042	refs.c	FUNCTION_107
0x4003ab3	          0x41ffe0	                                  jmp r8	      2033	refs.c	FUNCTION_106	CALL_1
is_branch	CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	18
0x4000f90	          0x4889fa	                            mov rdx, rdi	       812	refs.c	FUNCTION_47
0x4000f93	      0xb905000000	                              mov ecx, 5	       813	refs.c	FUNCTION_47	CALL_1
0x4000f98	      0xbf00000000	                              mov edi, 0	       813	refs.c	FUNCTION_47	CALL_1
0x4000f9d	          0x4889d6	                            mov rsi, rdx	       813	refs.c	FUNCTION_47	CALL_1
0x4000fa0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       813	refs.c	FUNCTION_47	CALL_1
0x4000fa2	            0x750c	                           jne 0x4000fb0	       813	refs.c	FUNCTION_47	CALL_1
0x4000fa4	      0xb801000000	                              mov eax, 1	       813	refs.c	FUNCTION_47	CALL_1
0x4000fa9	              0xc3	                                     ret	       813	refs.c	FUNCTION_47	CALL_1
0x4000faa	    0x660f1f440000	                    nop word [rax + rax]	       813	refs.c	FUNCTION_47	CALL_1
0x4000fb0	        0x4883ec08	                              sub rsp, 8	       812	refs.c	FUNCTION_47
0x4000fb4	          0x4889d7	                            mov rdi, rdx	       812	refs.c	FUNCTION_47
0x4000fb7	      0xbe00000000	                              mov esi, 0	       813	refs.c	FUNCTION_47	CALL_1
0x4000fbc	      0xe800000000	                          call 0x4000fc1	       813	refs.c	FUNCTION_47	CALL_1
0x4000fc1	            0x85c0	                           test eax, eax	       813	refs.c	FUNCTION_47	CALL_1
0x4000fc3	           0xf95c0	                                setne al	       813	refs.c	FUNCTION_47	CALL_1
0x4000fc6	        0x4883c408	                              add rsp, 8	       814	refs.c	FUNCTION_47
0x4000fca	           0xfb6c0	                           movzx eax, al	       813	refs.c	FUNCTION_47	CALL_1
0x4000fcd	              0xc3	                                     ret	       814	refs.c	FUNCTION_47
find_descendant_ref	CALL,3:IF,3:FOR,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	62
0x4001660	          0x4885f6	                           test rsi, rsi	      1284	refs.c	FUNCTION_64	IF_1
0x4001663	     0xf8499000000	                            je 0x4001702	      1284	refs.c	FUNCTION_64	IF_1
0x4001669	            0x4157	                                push r15	      1281	refs.c	FUNCTION_64
0x400166b	            0x4156	                                push r14	      1281	refs.c	FUNCTION_64
0x400166d	          0x4989ff	                            mov r15, rdi	      1281	refs.c	FUNCTION_64
0x4001670	            0x4155	                                push r13	      1281	refs.c	FUNCTION_64
0x4001672	            0x4154	                                push r12	      1281	refs.c	FUNCTION_64
0x4001674	          0x4989f5	                            mov r13, rsi	      1281	refs.c	FUNCTION_64
0x4001677	              0x55	                                push rbp	      1281	refs.c	FUNCTION_64
0x4001678	              0x53	                                push rbx	      1281	refs.c	FUNCTION_64
0x4001679	          0x4889fe	                            mov rsi, rdi	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x400167c	          0x4989d6	                            mov r14, rdx	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x400167f	          0x4c89ef	                            mov rdi, r13	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001682	            0x31d2	                            xor edx, edx	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001684	        0x4883ec08	                              sub rsp, 8	      1281	refs.c	FUNCTION_64
0x4001688	      0xe800000000	                          call 0x400168d	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x400168d	        0x41394508	                cmp dword [r13 + 8], eax	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001691	          0x4189c4	                           mov r12d, eax	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001694	            0x7643	                           jbe 0x40016d9	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001696	          0x4863e8	                         movsxd rbp, eax	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001699	        0x48c1e504	                              shl rbp, 4	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x400169d	            0xeb23	                           jmp 0x40016c2	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x400169f	              0x90	                                     nop	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x40016a0	          0x4d85f6	                           test r14, r14	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40016a3	            0x744b	                            je 0x40016f0	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40016a5	          0x4889de	                            mov rsi, rbx	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40016a8	          0x4c89f7	                            mov rdi, r14	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40016ab	      0xe800000000	                          call 0x40016b0	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40016b0	            0x85c0	                           test eax, eax	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40016b2	            0x743c	                            je 0x40016f0	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40016b4	        0x4183c401	                             add r12d, 1	      1294	refs.c	FUNCTION_64	FOR_1
0x40016b8	        0x4883c510	                           add rbp, 0x10	      1294	refs.c	FUNCTION_64	FOR_1
0x40016bc	        0x45396508	               cmp dword [r13 + 8], r12d	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x40016c0	            0x7617	                           jbe 0x40016d9	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x40016c2	        0x498b4500	                    mov rax, qword [r13]	      1295	refs.c	FUNCTION_64	FOR_1
0x40016c6	          0x4c89fe	                            mov rsi, r15	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40016c9	        0x488b1c28	              mov rbx, qword [rax + rbp]	      1295	refs.c	FUNCTION_64	FOR_1
0x40016cd	          0x4889df	                            mov rdi, rbx	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40016d0	      0xe800000000	                          call 0x40016d5	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40016d5	            0x85c0	                           test eax, eax	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40016d7	            0x75c7	                           jne 0x40016a0	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40016d9	        0x4883c408	                              add rsp, 8	      1304	refs.c	FUNCTION_64
0x40016dd	            0x31c0	                            xor eax, eax	      1285	refs.c	FUNCTION_64	IF_1
0x40016df	              0x5b	                                 pop rbx	      1304	refs.c	FUNCTION_64
0x40016e0	              0x5d	                                 pop rbp	      1304	refs.c	FUNCTION_64
0x40016e1	            0x415c	                                 pop r12	      1304	refs.c	FUNCTION_64
0x40016e3	            0x415d	                                 pop r13	      1304	refs.c	FUNCTION_64
0x40016e5	            0x415e	                                 pop r14	      1304	refs.c	FUNCTION_64
0x40016e7	            0x415f	                                 pop r15	      1304	refs.c	FUNCTION_64
0x40016e9	              0xc3	                                     ret	      1304	refs.c	FUNCTION_64
0x40016ea	    0x660f1f440000	                    nop word [rax + rax]	      1304	refs.c	FUNCTION_64
0x40016f0	        0x4883c408	                              add rsp, 8	      1304	refs.c	FUNCTION_64
0x40016f4	          0x4889d8	                            mov rax, rbx	      1295	refs.c	FUNCTION_64	FOR_1
0x40016f7	              0x5b	                                 pop rbx	      1304	refs.c	FUNCTION_64
0x40016f8	              0x5d	                                 pop rbp	      1304	refs.c	FUNCTION_64
0x40016f9	            0x415c	                                 pop r12	      1304	refs.c	FUNCTION_64
0x40016fb	            0x415d	                                 pop r13	      1304	refs.c	FUNCTION_64
0x40016fd	            0x415e	                                 pop r14	      1304	refs.c	FUNCTION_64
0x40016ff	            0x415f	                                 pop r15	      1304	refs.c	FUNCTION_64
0x4001701	              0xc3	                                     ret	      1304	refs.c	FUNCTION_64
0x4001702	            0x31c0	                            xor eax, eax	      1285	refs.c	FUNCTION_64	IF_1
0x4001704	              0xc3	                                     ret	      1304	refs.c	FUNCTION_64
refs_peel_ref	CALL,4:IF,3:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	43
0x4002c60	              0x53	                                push rbx	      1779	refs.c	FUNCTION_95
0x4002c61	          0x4889d3	                            mov rbx, rdx	      1779	refs.c	FUNCTION_95
0x4002c64	        0x4883ec30	                           sub rsp, 0x30	      1779	refs.c	FUNCTION_95
0x4002c68	    0x64488b042528	                mov rax, qword fs:[0x28]	      1779	refs.c	FUNCTION_95
0x4002c71	      0x4889442428	             mov qword [rsp + 0x28], rax	      1779	refs.c	FUNCTION_95
0x4002c76	            0x31c0	                            xor eax, eax	      1779	refs.c	FUNCTION_95
0x4002c78	    0x488b05000000	            mov rax, qword [0x04002c7f] 	      1783	refs.c	FUNCTION_95	IF_1
0x4002c7f	          0x4885c0	                           test rax, rax	      1783	refs.c	FUNCTION_95	IF_1
0x4002c82	            0x7406	                            je 0x4002c8a	      1783	refs.c	FUNCTION_95	IF_1
0x4002c84	        0x48397010	            cmp qword [rax + 0x10], rsi 	      1783	refs.c	FUNCTION_95	IF_1
0x4002c88	            0x7446	                            je 0x4002cd0	      1783	refs.c	FUNCTION_95	IF_1
0x4002c8a	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4002c8f	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4002c94	      0xba01000000	                              mov edx, 1	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4002c99	      0xe800000000	                          call 0x4002c9e	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4002c9e	          0x4885c0	                           test rax, rax	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4002ca1	            0x743e	                            je 0x4002ce1	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4002ca3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1796	refs.c	FUNCTION_95	CALL_4
0x4002ca8	          0x4889de	                            mov rsi, rbx	      1796	refs.c	FUNCTION_95	CALL_4
0x4002cab	      0xe800000000	                          call 0x4002cb0	      1796	refs.c	FUNCTION_95	CALL_4
0x4002cb0	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1797	refs.c	FUNCTION_95
0x4002cb5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1797	refs.c	FUNCTION_95
0x4002cbe	            0x754a	                           jne 0x4002d0a	      1797	refs.c	FUNCTION_95
0x4002cc0	        0x4883c430	                           add rsp, 0x30	      1797	refs.c	FUNCTION_95
0x4002cc4	              0x5b	                                 pop rbx	      1797	refs.c	FUNCTION_95
0x4002cc5	              0xc3	                                     ret	      1797	refs.c	FUNCTION_95
0x4002cc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1797	refs.c	FUNCTION_95
0x4002cd0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4002cd5	          0x4889c7	                            mov rdi, rax	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4002cd8	      0xe800000000	                          call 0x4002cdd	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4002cdd	            0x85c0	                           test eax, eax	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4002cdf	            0x740f	                            je 0x4002cf0	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4002ce1	      0xb8ffffffff	                     mov eax, 0xffffffff	      1794	refs.c	FUNCTION_95	IF_3
0x4002ce6	            0xebc8	                           jmp 0x4002cb0	      1794	refs.c	FUNCTION_95	IF_3
0x4002ce8	     0xf1f84000000	                   nop dword [rax + rax]	      1794	refs.c	FUNCTION_95	IF_3
0x4002cf0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x4002cf5	          0x488913	                    mov qword [rbx], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x4002cf8	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_125	CALL_3
0x4002cfd	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x4002d01	        0x8b542420	            mov edx, dword [rsp + 0x20] 	        53	string3.h	FUNCTION_125	CALL_3
0x4002d05	          0x895310	             mov dword [rbx + 0x10], edx	        53	string3.h	FUNCTION_125	CALL_3
0x4002d08	            0xeba6	                           jmp 0x4002cb0	      1789	refs.c	FUNCTION_95	IF_1
0x4002d0a	      0xe800000000	                          call 0x4002d0f	      1797	refs.c	FUNCTION_95
check_refname_format	CALL,1:IF,5:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0	83
0x40006b0	            0x4155	                                push r13	       120	refs.c	FUNCTION_4
0x40006b2	            0x4154	                                push r12	       120	refs.c	FUNCTION_4
0x40006b4	          0x4189f5	                           mov r13d, esi	       120	refs.c	FUNCTION_4
0x40006b7	              0x55	                                push rbp	       120	refs.c	FUNCTION_4
0x40006b8	              0x53	                                push rbx	       120	refs.c	FUNCTION_4
0x40006b9	          0x4889fb	                            mov rbx, rdi	       120	refs.c	FUNCTION_4
0x40006bc	        0x4883ec08	                              sub rsp, 8	       120	refs.c	FUNCTION_4
0x40006c0	          0x803f40	                    cmp byte [rdi], 0x40	       123	refs.c	FUNCTION_4	IF_1
0x40006c3	            0x750b	                           jne 0x40006d0	       123	refs.c	FUNCTION_4	IF_1
0x40006c5	        0x807f0100	                   cmp byte [rdi + 1], 0	       123	refs.c	FUNCTION_4	IF_1
0x40006c9	      0xb8ffffffff	                     mov eax, 0xffffffff	       125	refs.c	FUNCTION_4	IF_1
0x40006ce	            0x743d	                            je 0x400070d	       123	refs.c	FUNCTION_4	IF_1
0x40006d0	          0x4531e4	                          xor r12d, r12d	       123	refs.c	FUNCTION_4	IF_1
0x40006d3	       0xf1f440000	                   nop dword [rax + rax]	       123	refs.c	FUNCTION_4	IF_1
0x40006d8	          0x4889df	                            mov rdi, rbx	       123	refs.c	FUNCTION_4	IF_1
0x40006db	            0x31c9	                            xor ecx, ecx	        77	refs.c	FUNCTION_3
0x40006dd	           0xfb607	                   movzx eax, byte [rdi]	        80	refs.c	FUNCTION_3	FOR_1
0x40006e0	    0x80b800000000	                       cmp byte [rax], 5	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x40006e7	          0x4889c2	                            mov rdx, rax	        80	refs.c	FUNCTION_3	FOR_1
0x40006ea	            0x7739	                            ja 0x4000725	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x40006ec	     0xfb680000000	                   movzx eax, byte [rax]	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x40006f3	    0xff24c5000000	                       jmp qword [rax*8]	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x40006fa	    0x660f1f440000	                    nop word [rax + rax]	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000700	          0x80f92e	                            cmp cl, 0x2e	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000703	            0x7520	                           jne 0x4000725	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000705	           0xf1f00	                         nop dword [rax]	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000708	      0xb8ffffffff	                     mov eax, 0xffffffff	       125	refs.c	FUNCTION_4	IF_1
0x400070d	        0x4883c408	                              add rsp, 8	       145	refs.c	FUNCTION_4
0x4000711	              0x5b	                                 pop rbx	       145	refs.c	FUNCTION_4
0x4000712	              0x5d	                                 pop rbp	       145	refs.c	FUNCTION_4
0x4000713	            0x415c	                                 pop r12	       145	refs.c	FUNCTION_4
0x4000715	            0x415d	                                 pop r13	       145	refs.c	FUNCTION_4
0x4000717	              0xc3	                                     ret	       145	refs.c	FUNCTION_4
0x4000718	     0xf1f84000000	                   nop dword [rax + rax]	       145	refs.c	FUNCTION_4
0x4000720	          0x80f940	                            cmp cl, 0x40	        90	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x4000723	            0x74e3	                            je 0x4000708	        90	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x4000725	        0x4883c701	                              add rdi, 1	        79	refs.c	FUNCTION_3	FOR_1
0x4000729	            0x89d1	                            mov ecx, edx	       106	refs.c	FUNCTION_3	FOR_1
0x400072b	            0xebb0	                           jmp 0x40006dd	       106	refs.c	FUNCTION_3	FOR_1
0x400072d	           0xf1f00	                         nop dword [rax]	       106	refs.c	FUNCTION_3	FOR_1
0x4000730	          0x4839fb	                            cmp rbx, rdi	       109	refs.c	FUNCTION_3	IF_4
0x4000733	            0x74d3	                            je 0x4000708	       109	refs.c	FUNCTION_3	IF_4
0x4000735	          0x803b2e	                    cmp byte [rbx], 0x2e	       111	refs.c	FUNCTION_3	IF_5
0x4000738	            0x74ce	                            je 0x4000708	       111	refs.c	FUNCTION_3	IF_5
0x400073a	          0x4889fd	                            mov rbp, rdi	       113	refs.c	FUNCTION_3	IF_6
0x400073d	          0x4829dd	                            sub rbp, rbx	       113	refs.c	FUNCTION_3	IF_6
0x4000740	        0x4883fd04	                              cmp rbp, 4	       113	refs.c	FUNCTION_3	IF_6
0x4000744	            0x7e17	                           jle 0x400075d	       113	refs.c	FUNCTION_3	IF_6
0x4000746	        0x4883ef05	                              sub rdi, 5	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x400074a	      0xba05000000	                              mov edx, 5	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x400074f	      0xbe00000000	                              mov esi, 0	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x4000754	      0xe800000000	                          call 0x4000759	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x4000759	            0x85c0	                           test eax, eax	       113	refs.c	FUNCTION_3	IF_6
0x400075b	            0x74ab	                            je 0x4000708	       113	refs.c	FUNCTION_3	IF_6
0x400075d	            0x85ed	                           test ebp, ebp	       130	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400075f	            0x7ea7	                           jle 0x4000708	       130	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000761	          0x4863c5	                         movsxd rax, ebp	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x4000764	        0x4183c401	                             add r12d, 1	       133	refs.c	FUNCTION_4	WHILE_1
0x4000768	        0x803c0300	                 cmp byte [rbx + rax], 0	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x400076c	            0x7422	                            je 0x4000790	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x400076e	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	       137	refs.c	FUNCTION_4	WHILE_1
0x4000773	      0xe960ffffff	                           jmp 0x40006d8	       138	refs.c	FUNCTION_4	WHILE_1
0x4000778	     0xf1f84000000	                   nop dword [rax + rax]	       138	refs.c	FUNCTION_4	WHILE_1
0x4000780	        0x41f6c502	                            test r13b, 2	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000784	            0x7482	                            je 0x4000708	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000786	        0x4183e5fd	                    and r13d, 0xfffffffd	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400078a	            0xeb99	                           jmp 0x4000725	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400078c	         0xf1f4000	                         nop dword [rax]	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000790	      0x807c03ff2e	         cmp byte [rbx + rax - 1], 0x2e 	       140	refs.c	FUNCTION_4	IF_4
0x4000795	     0xf846dffffff	                            je 0x4000708	       140	refs.c	FUNCTION_4	IF_4
0x400079b	        0x4183e501	                             and r13d, 1	       142	refs.c	FUNCTION_4	IF_5
0x400079f	        0x4183f501	                             xor r13d, 1	       142	refs.c	FUNCTION_4	IF_5
0x40007a3	        0x4183fc01	                             cmp r12d, 1	       142	refs.c	FUNCTION_4	IF_5
0x40007a7	           0xf94c0	                                 sete al	       142	refs.c	FUNCTION_4	IF_5
0x40007aa	        0x4883c408	                              add rsp, 8	       145	refs.c	FUNCTION_4
0x40007ae	          0x4121c5	                           and r13d, eax	       142	refs.c	FUNCTION_4	IF_5
0x40007b1	          0x4489e8	                           mov eax, r13d	       142	refs.c	FUNCTION_4	IF_5
0x40007b4	              0x5b	                                 pop rbx	       145	refs.c	FUNCTION_4
0x40007b5	            0xf7d8	                                 neg eax	       142	refs.c	FUNCTION_4	IF_5
0x40007b7	              0x5d	                                 pop rbp	       145	refs.c	FUNCTION_4
0x40007b8	            0x415c	                                 pop r12	       145	refs.c	FUNCTION_4
0x40007ba	            0x415d	                                 pop r13	       145	refs.c	FUNCTION_4
0x40007bc	              0xc3	                                     ret	       145	refs.c	FUNCTION_4
base_ref_store_init	CALL,0:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	2
0x4002c40	          0x488937	                    mov qword [rdi], rsi	      1768	refs.c	FUNCTION_93
0x4002c43	              0xc3	                                     ret	      1768	refs.c	FUNCTION_93
refs_init_db	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	10
0x4002340	              0x53	                                push rbx	      1565	refs.c	FUNCTION_82
0x4002341	          0x4889fb	                            mov rbx, rdi	      1565	refs.c	FUNCTION_82
0x4002344	    0x488b3d000000	            mov rdi, qword [0x0400234b] 	      1566	refs.c	FUNCTION_82	CALL_1
0x400234b	      0xe800000000	                          call 0x4002350	      1566	refs.c	FUNCTION_82	CALL_1
0x4002350	          0x488b10	                    mov rdx, qword [rax]	      1568	refs.c	FUNCTION_82	CALL_2
0x4002353	          0x4889de	                            mov rsi, rbx	      1568	refs.c	FUNCTION_82	CALL_2
0x4002356	          0x4889c7	                            mov rdi, rax	      1568	refs.c	FUNCTION_82	CALL_2
0x4002359	              0x5b	                                 pop rbx	      1569	refs.c	FUNCTION_82
0x400235a	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1568	refs.c	FUNCTION_82	CALL_2
0x400235e	            0xffe2	                                 jmp rdx	      1568	refs.c	FUNCTION_82	CALL_2
resolve_gitlink_ref	CALL,3:IF,2:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	38
0x4002af0	              0x55	                                push rbp	      1580	refs.c	FUNCTION_84
0x4002af1	              0x53	                                push rbx	      1580	refs.c	FUNCTION_84
0x4002af2	          0x4889f5	                            mov rbp, rsi	      1580	refs.c	FUNCTION_84
0x4002af5	          0x4889d3	                            mov rbx, rdx	      1580	refs.c	FUNCTION_84
0x4002af8	        0x4883ec18	                           sub rsp, 0x18	      1580	refs.c	FUNCTION_84
0x4002afc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1580	refs.c	FUNCTION_84
0x4002b05	      0x4889442408	                mov qword [rsp + 8], rax	      1580	refs.c	FUNCTION_84
0x4002b0a	            0x31c0	                            xor eax, eax	      1580	refs.c	FUNCTION_84
0x4002b0c	      0xe800000000	                          call 0x4002b11	      1584	refs.c	FUNCTION_84	CALL_1
0x4002b11	          0x4885c0	                           test rax, rax	      1586	refs.c	FUNCTION_84	IF_1
0x4002b14	            0x7452	                            je 0x4002b68	      1586	refs.c	FUNCTION_84	IF_1
0x4002b16	      0x4c8d442404	                       lea r8, [rsp + 4]	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b1b	            0x31d2	                            xor edx, edx	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b1d	          0x4889d9	                            mov rcx, rbx	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b20	          0x4889ee	                            mov rsi, rbp	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b23	          0x4889c7	                            mov rdi, rax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b26	      0xe800000000	                          call 0x4002b2b	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b2b	          0x4885c0	                           test rax, rax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b2e	            0x7438	                            je 0x4002b68	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b30	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x4002b35	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_144	CALL_1
0x4002b3a	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_144	CALL_1
0x4002b3d	      0xe800000000	                          call 0x4002b42	       975	cache.h	FUNCTION_144	CALL_1
0x4002b42	            0x85c0	                           test eax, eax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b44	           0xf94c0	                                 sete al	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b47	           0xfb6c0	                           movzx eax, al	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b4a	            0xf7d8	                                 neg eax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002b4c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1593	refs.c	FUNCTION_84
0x4002b51	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1593	refs.c	FUNCTION_84
0x4002b5a	            0x7513	                           jne 0x4002b6f	      1593	refs.c	FUNCTION_84
0x4002b5c	        0x4883c418	                           add rsp, 0x18	      1593	refs.c	FUNCTION_84
0x4002b60	              0x5b	                                 pop rbx	      1593	refs.c	FUNCTION_84
0x4002b61	              0x5d	                                 pop rbp	      1593	refs.c	FUNCTION_84
0x4002b62	              0xc3	                                     ret	      1593	refs.c	FUNCTION_84
0x4002b63	       0xf1f440000	                   nop dword [rax + rax]	      1593	refs.c	FUNCTION_84
0x4002b68	      0xb8ffffffff	                     mov eax, 0xffffffff	      1587	refs.c	FUNCTION_84	IF_1
0x4002b6d	            0xebdd	                           jmp 0x4002b4c	      1587	refs.c	FUNCTION_84	IF_1
0x4002b6f	      0xe800000000	                          call 0x4002b74	      1593	refs.c	FUNCTION_84
for_each_fullref_in	CALL,2:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	25
0x4002100	            0x4155	                                push r13	      1413	refs.c	FUNCTION_74
0x4002102	            0x4154	                                push r12	      1413	refs.c	FUNCTION_74
0x4002104	          0x4189cd	                           mov r13d, ecx	      1413	refs.c	FUNCTION_74
0x4002107	              0x55	                                push rbp	      1413	refs.c	FUNCTION_74
0x4002108	              0x53	                                push rbx	      1413	refs.c	FUNCTION_74
0x4002109	          0x4889fb	                            mov rbx, rdi	      1413	refs.c	FUNCTION_74
0x400210c	          0x4889f5	                            mov rbp, rsi	      1413	refs.c	FUNCTION_74
0x400210f	          0x4989d4	                            mov r12, rdx	      1413	refs.c	FUNCTION_74
0x4002112	        0x4883ec08	                              sub rsp, 8	      1413	refs.c	FUNCTION_74
0x4002116	    0x488b3d000000	            mov rdi, qword [0x0400211d] 	      1418	refs.c	FUNCTION_74	CALL_2
0x400211d	      0xe800000000	                          call 0x4002122	      1418	refs.c	FUNCTION_74	CALL_2
0x4002122	          0x4585ed	                         test r13d, r13d	      1418	refs.c	FUNCTION_74	CALL_2
0x4002125	          0x4d89e1	                             mov r9, r12	      1418	refs.c	FUNCTION_74	CALL_2
0x4002128	          0x4889ea	                            mov rdx, rbp	      1418	refs.c	FUNCTION_74	CALL_2
0x400212b	        0x410f95c0	                               setne r8b	      1418	refs.c	FUNCTION_74	CALL_2
0x400212f	        0x4883c408	                              add rsp, 8	      1420	refs.c	FUNCTION_74
0x4002133	          0x4889de	                            mov rsi, rbx	      1418	refs.c	FUNCTION_74	CALL_2
0x4002136	              0x5b	                                 pop rbx	      1420	refs.c	FUNCTION_74
0x4002137	              0x5d	                                 pop rbp	      1420	refs.c	FUNCTION_74
0x4002138	            0x415c	                                 pop r12	      1420	refs.c	FUNCTION_74
0x400213a	            0x415d	                                 pop r13	      1420	refs.c	FUNCTION_74
0x400213c	        0x450fb6c0	                          movzx r8d, r8b	      1418	refs.c	FUNCTION_74	CALL_2
0x4002140	            0x31c9	                            xor ecx, ecx	      1418	refs.c	FUNCTION_74	CALL_2
0x4002142	          0x4889c7	                            mov rdi, rax	      1418	refs.c	FUNCTION_74	CALL_2
0x4002145	      0xe966f6ffff	                 jmp sym.do_for_each_ref	      1418	refs.c	FUNCTION_74	CALL_2
substitute_branch_name	CALL,2:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	35
0x4000170	              0x55	                                push rbp	       525	refs.c	FUNCTION_33
0x4000171	              0x53	                                push rbx	       525	refs.c	FUNCTION_33
0x4000172	          0x4889fd	                            mov rbp, rdi	       525	refs.c	FUNCTION_33
0x4000175	          0x4889f3	                            mov rbx, rsi	       525	refs.c	FUNCTION_33
0x4000178	            0x31c9	                            xor ecx, ecx	       527	refs.c	FUNCTION_33	CALL_1
0x400017a	        0x4883ec38	                           sub rsp, 0x38	       525	refs.c	FUNCTION_33
0x400017e	            0x8b36	                    mov esi, dword [rsi]	       527	refs.c	FUNCTION_33	CALL_1
0x4000180	          0x488b3f	                    mov rdi, qword [rdi]	       527	refs.c	FUNCTION_33	CALL_1
0x4000183	      0x488d542410	                   lea rdx, [rsp + 0x10]	       527	refs.c	FUNCTION_33	CALL_1
0x4000188	    0x48c744241000	               mov qword [rsp + 0x10], 0	       526	refs.c	FUNCTION_33
0x4000191	    0x48c744241800	               mov qword [rsp + 0x18], 0	       526	refs.c	FUNCTION_33
0x400019a	    0x64488b042528	                mov rax, qword fs:[0x28]	       525	refs.c	FUNCTION_33
0x40001a3	      0x4889442428	             mov qword [rsp + 0x28], rax	       525	refs.c	FUNCTION_33
0x40001a8	            0x31c0	                            xor eax, eax	       525	refs.c	FUNCTION_33
0x40001aa	    0x48c744242000	               mov qword [rsp + 0x20], 0	       526	refs.c	FUNCTION_33
0x40001b3	      0xe800000000	                          call 0x40001b8	       527	refs.c	FUNCTION_33	CALL_1
0x40001b8	            0x31d2	                            xor edx, edx	       527	refs.c	FUNCTION_33	CALL_1
0x40001ba	            0x3b03	                    cmp eax, dword [rbx]	       529	refs.c	FUNCTION_33	IF_1
0x40001bc	            0x751d	                           jne 0x40001db	       529	refs.c	FUNCTION_33	IF_1
0x40001be	      0x488d742408	                      lea rsi, [rsp + 8]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x40001c3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x40001c8	      0xe800000000	                          call 0x40001cd	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x40001cd	        0x48894500	                    mov qword [rbp], rax	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x40001d1	          0x4889c2	                            mov rdx, rax	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x40001d4	      0x488b442408	                mov rax, qword [rsp + 8]	       532	refs.c	FUNCTION_33	IF_1
0x40001d9	            0x8903	                    mov dword [rbx], eax	       532	refs.c	FUNCTION_33	IF_1
0x40001db	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       537	refs.c	FUNCTION_33
0x40001e0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       537	refs.c	FUNCTION_33
0x40001e9	          0x4889d0	                            mov rax, rdx	       537	refs.c	FUNCTION_33
0x40001ec	            0x7507	                           jne 0x40001f5	       537	refs.c	FUNCTION_33
0x40001ee	        0x4883c438	                           add rsp, 0x38	       537	refs.c	FUNCTION_33
0x40001f2	              0x5b	                                 pop rbx	       537	refs.c	FUNCTION_33
0x40001f3	              0x5d	                                 pop rbp	       537	refs.c	FUNCTION_33
0x40001f4	              0xc3	                                     ret	       537	refs.c	FUNCTION_33
0x40001f5	      0xe800000000	                          call 0x40001fa	       537	refs.c	FUNCTION_33
for_each_remote_ref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	15
0x4001db0	              0x55	                                push rbp	       399	refs.c	FUNCTION_25
0x4001db1	              0x53	                                push rbx	       399	refs.c	FUNCTION_25
0x4001db2	          0x4889fb	                            mov rbx, rdi	       399	refs.c	FUNCTION_25
0x4001db5	          0x4889f5	                            mov rbp, rsi	       399	refs.c	FUNCTION_25
0x4001db8	        0x4883ec08	                              sub rsp, 8	       399	refs.c	FUNCTION_25
0x4001dbc	    0x488b3d000000	            mov rdi, qword [0x04001dc3] 	       400	refs.c	FUNCTION_25	CALL_2
0x4001dc3	      0xe800000000	                          call 0x4001dc8	       400	refs.c	FUNCTION_25	CALL_2
0x4001dc8	        0x4883c408	                              add rsp, 8	       401	refs.c	FUNCTION_25
0x4001dcc	          0x4889e9	                            mov rcx, rbp	       395	refs.c	FUNCTION_24	CALL_1
0x4001dcf	          0x4889da	                            mov rdx, rbx	       395	refs.c	FUNCTION_24	CALL_1
0x4001dd2	              0x5b	                                 pop rbx	       401	refs.c	FUNCTION_25
0x4001dd3	              0x5d	                                 pop rbp	       401	refs.c	FUNCTION_25
0x4001dd4	      0xbe00000000	                              mov esi, 0	       395	refs.c	FUNCTION_24	CALL_1
0x4001dd9	          0x4889c7	                            mov rdi, rax	       395	refs.c	FUNCTION_24	CALL_1
0x4001ddc	      0xe92ffaffff	            jmp sym.refs_for_each_ref_in	       395	refs.c	FUNCTION_24	CALL_1
ref_transaction_add_update	CALL,4:IF,3:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	112
0x40010a0	            0x4157	                                push r15	       984	refs.c	FUNCTION_54
0x40010a2	            0x4156	                                push r14	       984	refs.c	FUNCTION_54
0x40010a4	            0x4155	                                push r13	       984	refs.c	FUNCTION_54
0x40010a6	            0x4154	                                push r12	       984	refs.c	FUNCTION_54
0x40010a8	              0x55	                                push rbp	       984	refs.c	FUNCTION_54
0x40010a9	              0x53	                                push rbx	       984	refs.c	FUNCTION_54
0x40010aa	        0x4883ec18	                           sub rsp, 0x18	       984	refs.c	FUNCTION_54
0x40010ae	          0x8b4720	            mov eax, dword [rdi + 0x20] 	       987	refs.c	FUNCTION_54	IF_1
0x40010b1	        0x48893424	                    mov qword [rsp], rsi	       984	refs.c	FUNCTION_54
0x40010b5	            0x85c0	                           test eax, eax	       987	refs.c	FUNCTION_54	IF_1
0x40010b7	     0xf8575010000	                           jne 0x4001232	       987	refs.c	FUNCTION_54	IF_1
0x40010bd	          0x4889fb	                            mov rbx, rdi	       987	refs.c	FUNCTION_54	IF_1
0x40010c0	        0x488b3c24	                    mov rdi, qword [rsp]	       990	refs.c	FUNCTION_54
0x40010c4	            0x89d5	                            mov ebp, edx	       990	refs.c	FUNCTION_54
0x40010c6	          0x4989cf	                            mov r15, rcx	       990	refs.c	FUNCTION_54
0x40010c9	          0x4d89c6	                             mov r14, r8	       990	refs.c	FUNCTION_54
0x40010cc	          0x4d89cd	                             mov r13, r9	       990	refs.c	FUNCTION_54
0x40010cf	      0xe800000000	                          call 0x40010d4	       990	refs.c	FUNCTION_54
0x40010d4	        0x4883f8af	             cmp rax, 0xffffffffffffffaf	       785	git-compat-util.h	FUNCTION_228	IF_1
0x40010d8	          0x4889c2	                            mov rdx, rax	       990	refs.c	FUNCTION_54
0x40010db	     0xf8740010000	                            ja 0x4001221	       785	git-compat-util.h	FUNCTION_228	IF_1
0x40010e1	     0xf8425010000	                            je 0x400120c	       785	git-compat-util.h	FUNCTION_228	IF_1
0x40010e7	        0x488d7051	                   lea rsi, [rax + 0x51]	       990	refs.c	FUNCTION_54
0x40010eb	      0xbf01000000	                              mov edi, 1	       990	refs.c	FUNCTION_54
0x40010f0	      0x4889442408	                mov qword [rsp + 8], rax	       990	refs.c	FUNCTION_54
0x40010f5	      0xe800000000	                          call 0x40010fa	       990	refs.c	FUNCTION_54
0x40010fa	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x40010ff	        0x488b3424	                    mov rsi, qword [rsp]	        53	string3.h	FUNCTION_125	CALL_3
0x4001103	        0x488d7850	                   lea rdi, [rax + 0x50]	        53	string3.h	FUNCTION_125	CALL_3
0x4001107	          0x4989c4	                            mov r12, rax	       990	refs.c	FUNCTION_54
0x400110a	      0xe800000000	                          call 0x400110f	        53	string3.h	FUNCTION_125	CALL_3
0x400110f	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       991	refs.c	FUNCTION_54
0x4001113	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       991	refs.c	FUNCTION_54
0x4001117	        0x488d7201	                      lea rsi, [rdx + 1]	       991	refs.c	FUNCTION_54
0x400111b	          0x4839c6	                            cmp rsi, rax	       991	refs.c	FUNCTION_54
0x400111e	            0x7750	                            ja 0x4001170	       991	refs.c	FUNCTION_54
0x4001120	        0x488b4308	                mov rax, qword [rbx + 8]	       991	refs.c	FUNCTION_54
0x4001124	        0x40f6c504	                             test bpl, 4	       996	refs.c	FUNCTION_54	IF_2
0x4001128	        0x48897318	             mov qword [rbx + 0x18], rsi	       992	refs.c	FUNCTION_54
0x400112c	        0x4c8924d0	            mov qword [rax + rdx*8], r12	       992	refs.c	FUNCTION_54
0x4001130	      0x41896c2428	             mov dword [r12 + 0x28], ebp	       994	refs.c	FUNCTION_54
0x4001135	     0xf85a5000000	                           jne 0x40011e0	       996	refs.c	FUNCTION_54	IF_2
0x400113b	          0x83e508	                              and ebp, 8	       998	refs.c	FUNCTION_54	IF_3
0x400113e	     0xf857c000000	                           jne 0x40011c0	       998	refs.c	FUNCTION_54	IF_3
0x4001144	            0x31c0	                            xor eax, eax	       924	git-compat-util.h	FUNCTION_233	CALL_1
0x4001146	          0x4d85ed	                           test r13, r13	       924	git-compat-util.h	FUNCTION_233	CALL_1
0x4001149	            0x7408	                            je 0x4001153	       924	git-compat-util.h	FUNCTION_233	CALL_1
0x400114b	          0x4c89ef	                            mov rdi, r13	       924	git-compat-util.h	FUNCTION_233	CALL_1
0x400114e	      0xe800000000	                          call 0x4001153	       924	git-compat-util.h	FUNCTION_233	CALL_1
0x4001153	      0x4989442440	             mov qword [r12 + 0x40], rax	      1000	refs.c	FUNCTION_54	CALL_4
0x4001158	        0x4883c418	                           add rsp, 0x18	      1002	refs.c	FUNCTION_54
0x400115c	          0x4c89e0	                            mov rax, r12	      1002	refs.c	FUNCTION_54
0x400115f	              0x5b	                                 pop rbx	      1002	refs.c	FUNCTION_54
0x4001160	              0x5d	                                 pop rbp	      1002	refs.c	FUNCTION_54
0x4001161	            0x415c	                                 pop r12	      1002	refs.c	FUNCTION_54
0x4001163	            0x415d	                                 pop r13	      1002	refs.c	FUNCTION_54
0x4001165	            0x415e	                                 pop r14	      1002	refs.c	FUNCTION_54
0x4001167	            0x415f	                                 pop r15	      1002	refs.c	FUNCTION_54
0x4001169	              0xc3	                                     ret	      1002	refs.c	FUNCTION_54
0x400116a	    0x660f1f440000	                    nop word [rax + rax]	      1002	refs.c	FUNCTION_54
0x4001170	      0x488d444030	          lea rax, [rax + rax*2 + 0x30] 	       991	refs.c	FUNCTION_54
0x4001175	          0x48d1e8	                              shr rax, 1	       991	refs.c	FUNCTION_54
0x4001178	          0x4839c6	                            cmp rsi, rax	       991	refs.c	FUNCTION_54
0x400117b	     0xf867f000000	                           jbe 0x4001200	       991	refs.c	FUNCTION_54
0x4001181	        0x48897310	             mov qword [rbx + 0x10], rsi	       991	refs.c	FUNCTION_54
0x4001185	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_229	IF_1
0x400118f	          0x4839c6	                            cmp rsi, rax	       795	git-compat-util.h	FUNCTION_229	IF_1
0x4001192	     0xf87a6000000	                            ja 0x400123e	       795	git-compat-util.h	FUNCTION_229	IF_1
0x4001198	        0x488b7b08	                mov rdi, qword [rbx + 8]	       991	refs.c	FUNCTION_54
0x400119c	        0x48c1e603	                              shl rsi, 3	       991	refs.c	FUNCTION_54
0x40011a0	      0xe800000000	                          call 0x40011a5	       991	refs.c	FUNCTION_54
0x40011a5	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       991	refs.c	FUNCTION_54
0x40011a9	        0x48894308	                mov qword [rbx + 8], rax	       991	refs.c	FUNCTION_54
0x40011ad	        0x488d7201	                      lea rsi, [rdx + 1]	       991	refs.c	FUNCTION_54
0x40011b1	      0xe96effffff	                           jmp 0x4001124	       991	refs.c	FUNCTION_54
0x40011b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       991	refs.c	FUNCTION_54
0x40011c0	          0x498b16	                    mov rdx, qword [r14]	        53	string3.h	FUNCTION_125	CALL_3
0x40011c3	      0x4989542414	             mov qword [r12 + 0x14], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x40011c8	        0x498b5608	                mov rdx, qword [r14 + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x40011cc	      0x498954241c	             mov qword [r12 + 0x1c], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x40011d1	        0x418b5610	            mov edx, dword [r14 + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x40011d5	      0x4189542424	             mov dword [r12 + 0x24], edx	        53	string3.h	FUNCTION_125	CALL_3
0x40011da	      0xe965ffffff	                           jmp 0x4001144	        53	string3.h	FUNCTION_125	CALL_3
0x40011df	              0x90	                                     nop	        53	string3.h	FUNCTION_125	CALL_3
0x40011e0	          0x498b07	                    mov rax, qword [r15]	        53	string3.h	FUNCTION_125	CALL_3
0x40011e3	        0x49890424	                    mov qword [r12], rax	        53	string3.h	FUNCTION_125	CALL_3
0x40011e7	        0x498b4708	                mov rax, qword [r15 + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x40011eb	      0x4989442408	                mov qword [r12 + 8], rax	        53	string3.h	FUNCTION_125	CALL_3
0x40011f0	        0x418b4710	            mov eax, dword [r15 + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x40011f4	      0x4189442410	             mov dword [r12 + 0x10], eax	        53	string3.h	FUNCTION_125	CALL_3
0x40011f9	      0xe93dffffff	                           jmp 0x400113b	        53	string3.h	FUNCTION_125	CALL_3
0x40011fe	            0x6690	                                     nop	        53	string3.h	FUNCTION_125	CALL_3
0x4001200	        0x48894310	             mov qword [rbx + 0x10], rax	       991	refs.c	FUNCTION_54
0x4001204	          0x4889c6	                            mov rsi, rax	       991	refs.c	FUNCTION_54
0x4001207	      0xe979ffffff	                           jmp 0x4001185	       991	refs.c	FUNCTION_54
0x400120c	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4001211	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4001215	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x400121a	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x400121c	      0xe800000000	                          call 0x4001221	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4001221	      0xbe50000000	                           mov esi, 0x50	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4001226	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x400122b	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x400122d	      0xe800000000	                          call 0x4001232	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4001232	      0xbf00000000	                              mov edi, 0	       988	refs.c	FUNCTION_54	CALL_1
0x4001237	            0x31c0	                            xor eax, eax	       988	refs.c	FUNCTION_54	CALL_1
0x4001239	      0xe800000000	                          call 0x400123e	       988	refs.c	FUNCTION_54	CALL_1
0x400123e	          0x4889f2	                            mov rdx, rsi	       796	git-compat-util.h	FUNCTION_229	IF_1	CALL_1
0x4001241	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_229	IF_1	CALL_1
0x4001246	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_229	IF_1	CALL_1
0x400124b	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_229	IF_1	CALL_1
0x400124d	      0xe800000000	                          call 0x4001252	       796	git-compat-util.h	FUNCTION_229	IF_1	CALL_1
do_for_each_ref	CALL,2:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	21
0x40017b0	          0x4885ff	                           test rdi, rdi	      1383	refs.c	FUNCTION_69	IF_1
0x40017b3	            0x7433	                            je 0x40017e8	      1383	refs.c	FUNCTION_69	IF_1
0x40017b5	              0x55	                                push rbp	      1380	refs.c	FUNCTION_69
0x40017b6	              0x53	                                push rbx	      1380	refs.c	FUNCTION_69
0x40017b7	            0x89c8	                            mov eax, ecx	      1380	refs.c	FUNCTION_69
0x40017b9	          0x4889d3	                            mov rbx, rdx	      1380	refs.c	FUNCTION_69
0x40017bc	          0x4489c1	                            mov ecx, r8d	      1380	refs.c	FUNCTION_69
0x40017bf	            0x89c2	                            mov edx, eax	      1386	refs.c	FUNCTION_69	CALL_1
0x40017c1	        0x4883ec08	                              sub rsp, 8	      1380	refs.c	FUNCTION_69
0x40017c5	          0x4c89cd	                             mov rbp, r9	      1380	refs.c	FUNCTION_69
0x40017c8	      0xe800000000	                          call 0x40017cd	      1386	refs.c	FUNCTION_69	CALL_1
0x40017cd	        0x4883c408	                              add rsp, 8	      1389	refs.c	FUNCTION_69
0x40017d1	          0x4889ea	                            mov rdx, rbp	      1388	refs.c	FUNCTION_69	CALL_2
0x40017d4	          0x4889de	                            mov rsi, rbx	      1388	refs.c	FUNCTION_69	CALL_2
0x40017d7	              0x5b	                                 pop rbx	      1389	refs.c	FUNCTION_69
0x40017d8	              0x5d	                                 pop rbp	      1389	refs.c	FUNCTION_69
0x40017d9	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x40017dc	      0xe900000000	                           jmp 0x40017e1	      1388	refs.c	FUNCTION_69	CALL_2
0x40017e1	     0xf1f80000000	                         nop dword [rax]	      1388	refs.c	FUNCTION_69	CALL_2
0x40017e8	            0x31c0	                            xor eax, eax	      1389	refs.c	FUNCTION_69
0x40017ea	              0xc3	                                     ret	      1389	refs.c	FUNCTION_69
refs_resolve_ref_unsafe	CALL,8:IF,13:FOR,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	134
0x40018d0	            0x4157	                                push r15	      1475	refs.c	FUNCTION_81
0x40018d2	            0x4156	                                push r14	      1475	refs.c	FUNCTION_81
0x40018d4	          0x4989fe	                            mov r14, rdi	      1475	refs.c	FUNCTION_81
0x40018d7	            0x4155	                                push r13	      1475	refs.c	FUNCTION_81
0x40018d9	            0x4154	                                push r12	      1475	refs.c	FUNCTION_81
0x40018db	          0x4989cd	                            mov r13, rcx	      1475	refs.c	FUNCTION_81
0x40018de	              0x55	                                push rbp	      1475	refs.c	FUNCTION_81
0x40018df	              0x53	                                push rbx	      1475	refs.c	FUNCTION_81
0x40018e0	          0x4c89c3	                             mov rbx, r8	      1475	refs.c	FUNCTION_81
0x40018e3	          0x4889f5	                            mov rbp, rsi	      1475	refs.c	FUNCTION_81
0x40018e6	      0xbe01000000	                              mov esi, 1	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40018eb	          0x4189d7	                           mov r15d, edx	      1475	refs.c	FUNCTION_81
0x40018ee	        0x4883ec48	                           sub rsp, 0x48	      1475	refs.c	FUNCTION_81
0x40018f2	          0x4889ef	                            mov rdi, rbp	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40018f5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1475	refs.c	FUNCTION_81
0x40018fe	      0x4889442438	             mov qword [rsp + 0x38], rax	      1475	refs.c	FUNCTION_81
0x4001903	            0x31c0	                            xor eax, eax	      1475	refs.c	FUNCTION_81
0x4001905	      0x488d442420	                   lea rax, [rsp + 0x20]	      1482	refs.c	FUNCTION_81	IF_1
0x400190a	          0x4885c9	                           test rcx, rcx	      1482	refs.c	FUNCTION_81	IF_1
0x400190d	        0x8954240c	              mov dword [rsp + 0xc], edx	      1475	refs.c	FUNCTION_81
0x4001911	        0x4c0f44e8	                          cmove r13, rax	      1482	refs.c	FUNCTION_81	IF_1
0x4001915	      0x488d442418	                   lea rax, [rsp + 0x18]	      1484	refs.c	FUNCTION_81	IF_2
0x400191a	          0x4d85c0	                             test r8, r8	      1484	refs.c	FUNCTION_81	IF_2
0x400191d	        0x480f44d8	                          cmove rbx, rax	      1484	refs.c	FUNCTION_81	IF_2
0x4001921	    0xc70300000000	                      mov dword [rbx], 0	      1486	refs.c	FUNCTION_81
0x4001927	      0xe800000000	                          call 0x400192c	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400192c	            0x85c0	                           test eax, eax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400192e	            0x741e	                            je 0x400194e	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4001930	          0x4489f8	                           mov eax, r15d	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x4001933	            0xa804	                              test al, 4	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x4001935	     0xf84dd000000	                            je 0x4001a18	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x400193b	          0x4889ef	                            mov rdi, rbp	      1490	refs.c	FUNCTION_81	IF_3	IF_4	CALL_2
0x400193e	      0xe800000000	                          call 0x4001943	      1490	refs.c	FUNCTION_81	IF_3	IF_4	CALL_2
0x4001943	            0x85c0	                           test eax, eax	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x4001945	     0xf84cd000000	                            je 0x4001a18	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x400194b	          0x830b08	                       or dword [rbx], 8	      1503	refs.c	FUNCTION_81	IF_3
0x400194e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x4001952	    0x41bc05000000	                             mov r12d, 5	      1484	refs.c	FUNCTION_81	IF_2
0x4001958	          0x4189c7	                           mov r15d, eax	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x400195b	          0x83e004	                              and eax, 4	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x400195e	        0x4183e702	                             and r15d, 2	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x4001962	        0x89442408	                mov dword [rsp + 8], eax	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001966	          0x498b06	                    mov rax, qword [r14]	      1467	refs.c	FUNCTION_80	CALL_1
0x4001969	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1507	refs.c	FUNCTION_81	FOR_1
0x4001971	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1467	refs.c	FUNCTION_80	CALL_1
0x4001976	      0xb900000000	                              mov ecx, 0	      1467	refs.c	FUNCTION_80	CALL_1
0x400197b	          0x4c89ea	                            mov rdx, r13	      1467	refs.c	FUNCTION_80	CALL_1
0x400197e	          0x4889ee	                            mov rsi, rbp	      1467	refs.c	FUNCTION_80	CALL_1
0x4001981	          0x4c89f7	                            mov rdi, r14	      1467	refs.c	FUNCTION_80	CALL_1
0x4001984	          0xff5070	                 call qword [rax + 0x70]	      1467	refs.c	FUNCTION_80	CALL_1
0x4001987	            0x85c0	                           test eax, eax	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4001989	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x400198d	     0xf859d000000	                           jne 0x4001a30	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4001993	            0x8b13	                    mov edx, dword [rbx]	      1533	refs.c	FUNCTION_81	FOR_1
0x4001995	             0x9c2	                             or edx, eax	      1533	refs.c	FUNCTION_81	FOR_1
0x4001997	            0xa801	                              test al, 1	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x4001999	            0x8913	                    mov dword [rbx], edx	      1533	refs.c	FUNCTION_81	FOR_1
0x400199b	     0xf84df000000	                            je 0x4001a80	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x40019a1	          0x4585ff	                         test r15d, r15d	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x40019a4	    0x488b2d000000	            mov rbp, qword [0x040019ab] 	      1543	refs.c	FUNCTION_81	FOR_1
0x40019ab	     0xf85ff000000	                           jne 0x4001ab0	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x40019b1	      0xbe01000000	                              mov esi, 1	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40019b6	          0x4889ef	                            mov rdi, rbp	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40019b9	      0xe800000000	                          call 0x40019be	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40019be	            0x85c0	                           test eax, eax	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40019c0	            0x7417	                            je 0x40019d9	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40019c2	        0x8b442408	                mov eax, dword [rsp + 8]	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40019c6	            0x85c0	                           test eax, eax	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40019c8	            0x744e	                            je 0x4001a18	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40019ca	          0x4889ef	                            mov rdi, rbp	      1550	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13	CALL_8
0x40019cd	      0xe800000000	                          call 0x40019d2	      1550	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13	CALL_8
0x40019d2	            0x85c0	                           test eax, eax	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40019d4	            0x7442	                            je 0x4001a18	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40019d6	          0x830b0c	                     or dword [rbx], 0xc	      1555	refs.c	FUNCTION_81	FOR_1	IF_12
0x40019d9	        0x4183ec01	                             sub r12d, 1	      1506	refs.c	FUNCTION_81	FOR_1
0x40019dd	            0x7587	                           jne 0x4001966	      1506	refs.c	FUNCTION_81	FOR_1
0x40019df	      0xe800000000	                          call 0x40019e4	      1559	refs.c	FUNCTION_81
0x40019e4	          0x4531e4	                          xor r12d, r12d	      1560	refs.c	FUNCTION_81
0x40019e7	    0xc70028000000	                   mov dword [rax], 0x28	      1559	refs.c	FUNCTION_81
0x40019ed	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1561	refs.c	FUNCTION_81
0x40019f2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1561	refs.c	FUNCTION_81
0x40019fb	          0x4c89e0	                            mov rax, r12	      1561	refs.c	FUNCTION_81
0x40019fe	     0xf85cc000000	                           jne 0x4001ad0	      1561	refs.c	FUNCTION_81
0x4001a04	        0x4883c448	                           add rsp, 0x48	      1561	refs.c	FUNCTION_81
0x4001a08	              0x5b	                                 pop rbx	      1561	refs.c	FUNCTION_81
0x4001a09	              0x5d	                                 pop rbp	      1561	refs.c	FUNCTION_81
0x4001a0a	            0x415c	                                 pop r12	      1561	refs.c	FUNCTION_81
0x4001a0c	            0x415d	                                 pop r13	      1561	refs.c	FUNCTION_81
0x4001a0e	            0x415e	                                 pop r14	      1561	refs.c	FUNCTION_81
0x4001a10	            0x415f	                                 pop r15	      1561	refs.c	FUNCTION_81
0x4001a12	              0xc3	                                     ret	      1561	refs.c	FUNCTION_81
0x4001a13	       0xf1f440000	                   nop dword [rax + rax]	      1561	refs.c	FUNCTION_81
0x4001a18	      0xe800000000	                          call 0x4001a1d	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001a1d	          0x4531e4	                          xor r12d, r12d	      1552	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001a20	    0xc70016000000	                   mov dword [rax], 0x16	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001a26	            0xebc5	                           jmp 0x40019ed	      1552	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001a28	     0xf1f84000000	                   nop dword [rax + rax]	      1552	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001a30	             0x903	                     or dword [rbx], eax	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4001a32	          0x4531e4	                          xor r12d, r12d	      1515	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4001a35	      0xf644240c01	                test byte [rsp + 0xc], 1	      1514	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4001a3a	            0x75b1	                           jne 0x40019ed	      1514	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4001a3c	      0xe800000000	                          call 0x4001a41	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4001a41	            0x8b00	                    mov eax, dword [rax]	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4001a43	          0x8d50ec	                   lea edx, [rax - 0x14]	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4001a46	          0x83fa01	                              cmp edx, 1	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4001a49	            0x7605	                           jbe 0x4001a50	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4001a4b	          0x83f802	                              cmp eax, 2	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4001a4e	            0x759d	                           jne 0x40019ed	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4001a50	    0x49c745000000	                      mov qword [r13], 0	        90	string3.h	FUNCTION_128	CALL_5
0x4001a58	    0x49c745080000	                  mov qword [r13 + 8], 0	        90	string3.h	FUNCTION_128	CALL_5
0x4001a60	          0x4989ec	                            mov r12, rbp	        90	string3.h	FUNCTION_128	CALL_5
0x4001a63	    0x41c745100000	               mov dword [r13 + 0x10], 0	        90	string3.h	FUNCTION_128	CALL_5
0x4001a6b	            0x8b03	                    mov eax, dword [rbx]	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4001a6d	            0xa808	                              test al, 8	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4001a6f	     0xf8478ffffff	                            je 0x40019ed	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4001a75	          0x83c804	                               or eax, 4	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4001a78	            0x8903	                    mov dword [rbx], eax	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4001a7a	      0xe96effffff	                           jmp 0x40019ed	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4001a7f	              0x90	                                     nop	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4001a80	          0x83e208	                              and edx, 8	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4001a83	          0x4989ec	                            mov r12, rbp	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4001a86	     0xf8461ffffff	                            je 0x40019ed	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4001a8c	    0x49c745000000	                      mov qword [r13], 0	        90	string3.h	FUNCTION_128	CALL_5
0x4001a94	    0x49c745080000	                  mov qword [r13 + 8], 0	        90	string3.h	FUNCTION_128	CALL_5
0x4001a9c	    0x41c745100000	               mov dword [r13 + 0x10], 0	        90	string3.h	FUNCTION_128	CALL_5
0x4001aa4	          0x830b04	                       or dword [rbx], 4	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4001aa7	      0xe941ffffff	                           jmp 0x40019ed	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4001aac	         0xf1f4000	                         nop dword [rax]	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4001ab0	    0x49c745000000	                      mov qword [r13], 0	        90	string3.h	FUNCTION_128	CALL_5
0x4001ab8	    0x49c745080000	                  mov qword [r13 + 8], 0	        90	string3.h	FUNCTION_128	CALL_5
0x4001ac0	          0x4989ec	                            mov r12, rbp	      1543	refs.c	FUNCTION_81	FOR_1
0x4001ac3	    0x41c745100000	               mov dword [r13 + 0x10], 0	        90	string3.h	FUNCTION_128	CALL_5
0x4001acb	      0xe91dffffff	                           jmp 0x40019ed	      1546	refs.c	FUNCTION_81	FOR_1	IF_11
0x4001ad0	      0xe800000000	                          call 0x4001ad5	      1561	refs.c	FUNCTION_81
refname_is_safe	CALL,5:IF,3:FOR,0:DO,1:SWITCH,0:ELSE,0:WHILE,0:functions,0	71
0x40007c0	            0x4154	                                push r12	       148	refs.c	FUNCTION_5
0x40007c2	      0xb800000000	                              mov eax, 0	       148	refs.c	FUNCTION_5
0x40007c7	              0x55	                                push rbp	       148	refs.c	FUNCTION_5
0x40007c8	              0x53	                                push rbx	       148	refs.c	FUNCTION_5
0x40007c9	          0x4889fb	                            mov rbx, rdi	       148	refs.c	FUNCTION_5
0x40007cc	            0xeb0f	                           jmp 0x40007dd	       148	refs.c	FUNCTION_5
0x40007ce	            0x6690	                                     nop	       148	refs.c	FUNCTION_5
0x40007d0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_221	DO_1
0x40007d4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_221	DO_1
0x40007d8	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_221	DO_1
0x40007db	            0x7563	                           jne 0x4000840	       488	git-compat-util.h	FUNCTION_221	DO_1
0x40007dd	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x40007e0	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x40007e2	            0x75ec	                           jne 0x40007d0	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x40007e4	          0x4889df	                            mov rdi, rbx	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x40007e7	      0xe800000000	                          call 0x40007ec	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x40007ec	          0x4889c7	                            mov rdi, rax	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x40007ef	            0x31c0	                            xor eax, eax	       158	refs.c	FUNCTION_5	IF_1	IF_2
0x40007f1	          0x4885ff	                           test rdi, rdi	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x40007f4	            0x7442	                            je 0x4000838	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x40007f6	          0x803b2f	                    cmp byte [rbx], 0x2f	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x40007f9	            0x743d	                            je 0x4000838	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x40007fb	      0x807c3bff2f	         cmp byte [rbx + rdi - 1], 0x2f 	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000800	            0x7436	                            je 0x4000838	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000802	      0xe800000000	                          call 0x4000807	       165	refs.c	FUNCTION_5	IF_1	CALL_3
0x4000807	          0x4889de	                            mov rsi, rbx	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400080a	          0x4889c7	                            mov rdi, rax	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400080d	          0x4989c4	                            mov r12, rax	       165	refs.c	FUNCTION_5	IF_1	CALL_3
0x4000810	            0x31ed	                            xor ebp, ebp	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000812	      0xe800000000	                          call 0x4000817	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000817	            0x85c0	                           test eax, eax	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000819	            0x7513	                           jne 0x400082e	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400081b	          0x4889de	                            mov rsi, rbx	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400081e	          0x4c89e7	                            mov rdi, r12	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000821	            0x31ed	                            xor ebp, ebp	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000823	      0xe800000000	                          call 0x4000828	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000828	            0x85c0	                           test eax, eax	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400082a	        0x400f94c5	                                sete bpl	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400082e	          0x4c89e7	                            mov rdi, r12	       167	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000831	      0xe800000000	                          call 0x4000836	       167	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000836	            0x89e8	                            mov eax, ebp	       168	refs.c	FUNCTION_5	IF_1
0x4000838	              0x5b	                                 pop rbx	       177	refs.c	FUNCTION_5
0x4000839	              0x5d	                                 pop rbp	       177	refs.c	FUNCTION_5
0x400083a	            0x415c	                                 pop r12	       177	refs.c	FUNCTION_5
0x400083c	              0xc3	                                     ret	       177	refs.c	FUNCTION_5
0x400083d	           0xf1f00	                         nop dword [rax]	       177	refs.c	FUNCTION_5
0x4000840	           0xfb607	                   movzx eax, byte [rdi]	       177	refs.c	FUNCTION_5
0x4000843	            0xeb12	                           jmp 0x4000857	       177	refs.c	FUNCTION_5
0x4000845	           0xf1f00	                         nop dword [rax]	       177	refs.c	FUNCTION_5
0x4000848	            0xa820	                           test al, 0x20	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x400084a	            0x7517	                           jne 0x4000863	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x400084c	        0x4883c701	                              add rdi, 1	       174	refs.c	FUNCTION_5	DO_1
0x4000850	           0xfb607	                   movzx eax, byte [rdi]	       175	refs.c	FUNCTION_5	DO_1
0x4000853	            0x84c0	                             test al, al	       175	refs.c	FUNCTION_5	DO_1
0x4000855	            0x7419	                            je 0x4000870	       175	refs.c	FUNCTION_5	DO_1
0x4000857	           0xfb6d0	                           movzx edx, al	      1000	git-compat-util.h	FUNCTION_236	IF_1
0x400085a	    0xf68200000000	                      test byte [rdx], 4	      1000	git-compat-util.h	FUNCTION_236	IF_1
0x4000861	            0x75e5	                           jne 0x4000848	      1000	git-compat-util.h	FUNCTION_236	IF_1
0x4000863	            0x3c5f	                            cmp al, 0x5f	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x4000865	            0x74e5	                            je 0x400084c	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x4000867	              0x5b	                                 pop rbx	       177	refs.c	FUNCTION_5
0x4000868	            0x31c0	                            xor eax, eax	       158	refs.c	FUNCTION_5	IF_1	IF_2
0x400086a	              0x5d	                                 pop rbp	       177	refs.c	FUNCTION_5
0x400086b	            0x415c	                                 pop r12	       177	refs.c	FUNCTION_5
0x400086d	              0xc3	                                     ret	       177	refs.c	FUNCTION_5
0x400086e	            0x6690	                                     nop	       177	refs.c	FUNCTION_5
0x4000870	              0x5b	                                 pop rbx	       177	refs.c	FUNCTION_5
0x4000871	      0xb801000000	                              mov eax, 1	       176	refs.c	FUNCTION_5
0x4000876	              0x5d	                                 pop rbp	       177	refs.c	FUNCTION_5
0x4000877	            0x415c	                                 pop r12	       177	refs.c	FUNCTION_5
0x4000879	              0xc3	                                     ret	       177	refs.c	FUNCTION_5
expand_ref_prefix	CALL,2:IF,0:FOR,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	30
0x4000d30	            0x4155	                                push r13	       511	refs.c	FUNCTION_32
0x4000d32	            0x4154	                                push r12	       511	refs.c	FUNCTION_32
0x4000d34	          0x4989fd	                            mov r13, rdi	       511	refs.c	FUNCTION_32
0x4000d37	              0x55	                                push rbp	       511	refs.c	FUNCTION_32
0x4000d38	              0x53	                                push rbx	       511	refs.c	FUNCTION_32
0x4000d39	          0x4889f7	                            mov rdi, rsi	       513	refs.c	FUNCTION_32	CALL_1
0x4000d3c	          0x4989f4	                            mov r12, rsi	       511	refs.c	FUNCTION_32
0x4000d3f	        0x4883ec08	                              sub rsp, 8	       511	refs.c	FUNCTION_32
0x4000d43	      0xe800000000	                          call 0x4000d48	       513	refs.c	FUNCTION_32	CALL_1
0x4000d48	    0x488b35000000	            mov rsi, qword [0x04000d4f] 	       515	refs.c	FUNCTION_32	FOR_1
0x4000d4f	          0x4885f6	                           test rsi, rsi	       515	refs.c	FUNCTION_32	FOR_1
0x4000d52	            0x7427	                            je 0x4000d7b	       515	refs.c	FUNCTION_32	FOR_1
0x4000d54	            0x89c5	                            mov ebp, eax	       515	refs.c	FUNCTION_32	FOR_1
0x4000d56	      0xbb00000000	                              mov ebx, 0	       515	refs.c	FUNCTION_32	FOR_1
0x4000d5b	       0xf1f440000	                   nop dword [rax + rax]	       515	refs.c	FUNCTION_32	FOR_1
0x4000d60	            0x31c0	                            xor eax, eax	       516	refs.c	FUNCTION_32	CALL_2
0x4000d62	        0x4883c308	                              add rbx, 8	       515	refs.c	FUNCTION_32	FOR_1
0x4000d66	          0x4c89e1	                            mov rcx, r12	       516	refs.c	FUNCTION_32	CALL_2
0x4000d69	            0x89ea	                            mov edx, ebp	       516	refs.c	FUNCTION_32	CALL_2
0x4000d6b	          0x4c89ef	                            mov rdi, r13	       516	refs.c	FUNCTION_32	CALL_2
0x4000d6e	      0xe800000000	                          call 0x4000d73	       516	refs.c	FUNCTION_32	CALL_2
0x4000d73	          0x488b33	                    mov rsi, qword [rbx]	       515	refs.c	FUNCTION_32	FOR_1
0x4000d76	          0x4885f6	                           test rsi, rsi	       515	refs.c	FUNCTION_32	FOR_1
0x4000d79	            0x75e5	                           jne 0x4000d60	       515	refs.c	FUNCTION_32	FOR_1
0x4000d7b	        0x4883c408	                              add rsp, 8	       517	refs.c	FUNCTION_32
0x4000d7f	              0x5b	                                 pop rbx	       517	refs.c	FUNCTION_32
0x4000d80	              0x5d	                                 pop rbp	       517	refs.c	FUNCTION_32
0x4000d81	            0x415c	                                 pop r12	       517	refs.c	FUNCTION_32
0x4000d83	            0x415d	                                 pop r13	       517	refs.c	FUNCTION_32
0x4000d85	              0xc3	                                     ret	       517	refs.c	FUNCTION_32
get_submodule_ref_store	CALL,10:IF,6:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,1:functions,0	85
0x40029b0	            0x4154	                                push r12	      1696	refs.c	FUNCTION_91
0x40029b2	              0x55	                                push rbp	      1696	refs.c	FUNCTION_91
0x40029b3	              0x53	                                push rbx	      1696	refs.c	FUNCTION_91
0x40029b4	        0x4883ec20	                           sub rsp, 0x20	      1696	refs.c	FUNCTION_91
0x40029b8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1696	refs.c	FUNCTION_91
0x40029c1	      0x4889442418	             mov qword [rsp + 0x18], rax	      1696	refs.c	FUNCTION_91
0x40029c6	            0x31c0	                            xor eax, eax	      1696	refs.c	FUNCTION_91
0x40029c8	          0x4885ff	                           test rdi, rdi	      1702	refs.c	FUNCTION_91	IF_1
0x40029cb	    0x48c704240000	                      mov qword [rsp], 0	      1697	refs.c	FUNCTION_91
0x40029d3	    0x48c744240800	                  mov qword [rsp + 8], 0	      1697	refs.c	FUNCTION_91
0x40029dc	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1697	refs.c	FUNCTION_91
0x40029e5	            0x7434	                            je 0x4002a1b	      1702	refs.c	FUNCTION_91	IF_1
0x40029e7	          0x4889fb	                            mov rbx, rdi	      1702	refs.c	FUNCTION_91	IF_1
0x40029ea	      0xe800000000	                          call 0x40029ef	      1705	refs.c	FUNCTION_91	CALL_1
0x40029ef	          0x4885c0	                           test rax, rax	      1706	refs.c	FUNCTION_91	WHILE_1
0x40029f2	            0x7427	                            je 0x4002a1b	      1706	refs.c	FUNCTION_91	WHILE_1
0x40029f4	      0x807c03ff2f	         cmp byte [rbx + rax - 1], 0x2f 	      1706	refs.c	FUNCTION_91	WHILE_1
0x40029f9	        0x488d70ff	                      lea rsi, [rax - 1]	      1706	refs.c	FUNCTION_91	WHILE_1
0x40029fd	            0x7417	                            je 0x4002a16	      1706	refs.c	FUNCTION_91	WHILE_1
0x40029ff	            0xeb39	                           jmp 0x4002a3a	      1706	refs.c	FUNCTION_91	WHILE_1
0x4002a01	     0xf1f80000000	                         nop dword [rax]	      1706	refs.c	FUNCTION_91	WHILE_1
0x4002a08	      0x807c33ff2f	         cmp byte [rbx + rsi - 1], 0x2f 	      1706	refs.c	FUNCTION_91	WHILE_1
0x4002a0d	        0x488d46ff	                      lea rax, [rsi - 1]	      1706	refs.c	FUNCTION_91	WHILE_1
0x4002a11	            0x752d	                           jne 0x4002a40	      1706	refs.c	FUNCTION_91	WHILE_1
0x4002a13	          0x4889c6	                            mov rsi, rax	      1706	refs.c	FUNCTION_91	WHILE_1
0x4002a16	          0x4885f6	                           test rsi, rsi	      1706	refs.c	FUNCTION_91	WHILE_1
0x4002a19	            0x75ed	                           jne 0x4002a08	      1706	refs.c	FUNCTION_91	WHILE_1
0x4002a1b	            0x31c0	                            xor eax, eax	      1703	refs.c	FUNCTION_91	IF_1
0x4002a1d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1737	refs.c	FUNCTION_91
0x4002a22	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1737	refs.c	FUNCTION_91
0x4002a2b	     0xf85b4000000	                           jne 0x4002ae5	      1737	refs.c	FUNCTION_91
0x4002a31	        0x4883c420	                           add rsp, 0x20	      1737	refs.c	FUNCTION_91
0x4002a35	              0x5b	                                 pop rbx	      1737	refs.c	FUNCTION_91
0x4002a36	              0x5d	                                 pop rbp	      1737	refs.c	FUNCTION_91
0x4002a37	            0x415c	                                 pop r12	      1737	refs.c	FUNCTION_91
0x4002a39	              0xc3	                                     ret	      1737	refs.c	FUNCTION_91
0x4002a3a	          0x4889c6	                            mov rsi, rax	      1706	refs.c	FUNCTION_91	WHILE_1
0x4002a3d	           0xf1f00	                         nop dword [rax]	      1706	refs.c	FUNCTION_91	WHILE_1
0x4002a40	          0x4531e4	                          xor r12d, r12d	      1699	refs.c	FUNCTION_91
0x4002a43	        0x803c3300	                 cmp byte [rbx + rsi], 0	      1711	refs.c	FUNCTION_91	IF_3
0x4002a47	            0x752f	                           jne 0x4002a78	      1711	refs.c	FUNCTION_91	IF_3
0x4002a49	          0x4889de	                            mov rsi, rbx	      1715	refs.c	FUNCTION_91	CALL_3
0x4002a4c	      0xbf00000000	                              mov edi, 0	      1715	refs.c	FUNCTION_91	CALL_3
0x4002a51	      0xe8cad9ffff	           call sym.lookup_ref_store_map	      1715	refs.c	FUNCTION_91	CALL_3
0x4002a56	          0x4885c0	                           test rax, rax	      1716	refs.c	FUNCTION_91	IF_4
0x4002a59	          0x4889c5	                            mov rbp, rax	      1715	refs.c	FUNCTION_91	CALL_3
0x4002a5c	            0x742a	                            je 0x4002a88	      1716	refs.c	FUNCTION_91	IF_4
0x4002a5e	          0x4889e7	                            mov rdi, rsp	      1733	refs.c	FUNCTION_91	CALL_9
0x4002a61	      0xe800000000	                          call 0x4002a66	      1733	refs.c	FUNCTION_91	CALL_9
0x4002a66	          0x4c89e7	                            mov rdi, r12	      1734	refs.c	FUNCTION_91	CALL_10
0x4002a69	      0xe800000000	                          call 0x4002a6e	      1734	refs.c	FUNCTION_91	CALL_10
0x4002a6e	          0x4889e8	                            mov rax, rbp	      1736	refs.c	FUNCTION_91
0x4002a71	            0xebaa	                           jmp 0x4002a1d	      1736	refs.c	FUNCTION_91
0x4002a73	       0xf1f440000	                   nop dword [rax + rax]	      1736	refs.c	FUNCTION_91
0x4002a78	          0x4889df	                            mov rdi, rbx	      1713	refs.c	FUNCTION_91	CALL_2
0x4002a7b	      0xe800000000	                          call 0x4002a80	      1713	refs.c	FUNCTION_91	CALL_2
0x4002a80	          0x4889c3	                            mov rbx, rax	      1713	refs.c	FUNCTION_91	CALL_2
0x4002a83	          0x4989c4	                            mov r12, rax	      1713	refs.c	FUNCTION_91	CALL_2
0x4002a86	            0xebc1	                           jmp 0x4002a49	      1713	refs.c	FUNCTION_91	CALL_2
0x4002a88	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_190	CALL_2
0x4002a8b	      0xe800000000	                          call 0x4002a90	       279	strbuf.h	FUNCTION_190	CALL_2
0x4002a90	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_190	CALL_2
0x4002a93	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_190	CALL_2
0x4002a96	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_190	CALL_2
0x4002a99	      0xe800000000	                          call 0x4002a9e	       279	strbuf.h	FUNCTION_190	CALL_2
0x4002a9e	          0x4889e7	                            mov rdi, rsp	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4002aa1	      0xe800000000	                          call 0x4002aa6	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4002aa6	            0x85c0	                           test eax, eax	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4002aa8	            0x74b4	                            je 0x4002a5e	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4002aaa	          0x4889de	                            mov rsi, rbx	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4002aad	          0x4889e7	                            mov rdi, rsp	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4002ab0	      0xe800000000	                          call 0x4002ab5	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4002ab5	            0x85c0	                           test eax, eax	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4002ab7	            0x75a5	                           jne 0x4002a5e	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4002ab9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1727	refs.c	FUNCTION_91	CALL_7
0x4002abe	      0xbe05000000	                              mov esi, 5	      1727	refs.c	FUNCTION_91	CALL_7
0x4002ac3	      0xe888dbffff	                 call sym.ref_store_init	      1727	refs.c	FUNCTION_91	CALL_7
0x4002ac8	          0x4889d9	                            mov rcx, rbx	      1729	refs.c	FUNCTION_91	CALL_8
0x4002acb	          0x4889c2	                            mov rdx, rax	      1729	refs.c	FUNCTION_91	CALL_8
0x4002ace	      0xbe00000000	                              mov esi, 0	      1729	refs.c	FUNCTION_91	CALL_8
0x4002ad3	      0xbf00000000	                              mov edi, 0	      1729	refs.c	FUNCTION_91	CALL_8
0x4002ad8	          0x4889c5	                            mov rbp, rax	      1727	refs.c	FUNCTION_91	CALL_7
0x4002adb	      0xe8c0d9ffff	         call sym.register_ref_store_map	      1729	refs.c	FUNCTION_91	CALL_8
0x4002ae0	      0xe979ffffff	                           jmp 0x4002a5e	      1729	refs.c	FUNCTION_91	CALL_8
0x4002ae5	      0xe800000000	                          call 0x4002aea	      1737	refs.c	FUNCTION_91
register_ref_store_map	CALL,4:IF,2:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	67
0x40004a0	            0x4157	                                push r15	      1687	refs.c	FUNCTION_90
0x40004a2	            0x4156	                                push r14	      1687	refs.c	FUNCTION_90
0x40004a4	          0x4989f7	                            mov r15, rsi	      1687	refs.c	FUNCTION_90
0x40004a7	            0x4155	                                push r13	      1687	refs.c	FUNCTION_90
0x40004a9	            0x4154	                                push r12	      1687	refs.c	FUNCTION_90
0x40004ab	          0x4989fd	                            mov r13, rdi	      1687	refs.c	FUNCTION_90
0x40004ae	              0x55	                                push rbp	      1687	refs.c	FUNCTION_90
0x40004af	              0x53	                                push rbx	      1687	refs.c	FUNCTION_90
0x40004b0	          0x4989d6	                            mov r14, rdx	      1687	refs.c	FUNCTION_90
0x40004b3	          0x4889cd	                            mov rbp, rcx	      1687	refs.c	FUNCTION_90
0x40004b6	        0x4883ec08	                              sub rsp, 8	      1687	refs.c	FUNCTION_90
0x40004ba	          0x8b471c	            mov eax, dword [rdi + 0x1c] 	      1688	refs.c	FUNCTION_90	IF_1
0x40004bd	            0x85c0	                           test eax, eax	      1688	refs.c	FUNCTION_90	IF_1
0x40004bf	            0x746f	                            je 0x4000530	      1688	refs.c	FUNCTION_90	IF_1
0x40004c1	          0x4889ef	                            mov rdi, rbp	      1620	refs.c	FUNCTION_86
0x40004c4	      0xe800000000	                          call 0x40004c9	      1620	refs.c	FUNCTION_86
0x40004c9	        0x4883f8e7	             cmp rax, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_228	IF_1
0x40004cd	          0x4989c4	                            mov r12, rax	      1620	refs.c	FUNCTION_86
0x40004d0	     0xf8791000000	                            ja 0x4000567	       785	git-compat-util.h	FUNCTION_228	IF_1
0x40004d6	            0x747a	                            je 0x4000552	       785	git-compat-util.h	FUNCTION_228	IF_1
0x40004d8	        0x488d7019	                   lea rsi, [rax + 0x19]	      1620	refs.c	FUNCTION_86
0x40004dc	      0xbf01000000	                              mov edi, 1	      1620	refs.c	FUNCTION_86
0x40004e1	      0xe800000000	                          call 0x40004e6	      1620	refs.c	FUNCTION_86
0x40004e6	        0x488d7818	                   lea rdi, [rax + 0x18]	        53	string3.h	FUNCTION_125	CALL_3
0x40004ea	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_125	CALL_3
0x40004ed	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_125	CALL_3
0x40004f0	          0x4889c3	                            mov rbx, rax	      1620	refs.c	FUNCTION_86
0x40004f3	      0xe800000000	                          call 0x40004f8	        53	string3.h	FUNCTION_125	CALL_3
0x40004f8	          0x4889ef	                            mov rdi, rbp	      1621	refs.c	FUNCTION_86	CALL_2
0x40004fb	      0xe800000000	                          call 0x4000500	      1621	refs.c	FUNCTION_86	CALL_2
0x4000500	    0x48c703000000	                      mov qword [rbx], 0	       249	hashmap.h	FUNCTION_165
0x4000507	          0x894308	                mov dword [rbx + 8], eax	       248	hashmap.h	FUNCTION_165
0x400050a	          0x4889de	                            mov rsi, rbx	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x400050d	        0x4c897310	             mov qword [rbx + 0x10], r14	      1622	refs.c	FUNCTION_86
0x4000511	          0x4c89ef	                            mov rdi, r13	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4000514	      0xe800000000	                          call 0x4000519	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4000519	          0x4885c0	                           test rax, rax	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x400051c	            0x7522	                           jne 0x4000540	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x400051e	        0x4883c408	                              add rsp, 8	      1693	refs.c	FUNCTION_90
0x4000522	              0x5b	                                 pop rbx	      1693	refs.c	FUNCTION_90
0x4000523	              0x5d	                                 pop rbp	      1693	refs.c	FUNCTION_90
0x4000524	            0x415c	                                 pop r12	      1693	refs.c	FUNCTION_90
0x4000526	            0x415d	                                 pop r13	      1693	refs.c	FUNCTION_90
0x4000528	            0x415e	                                 pop r14	      1693	refs.c	FUNCTION_90
0x400052a	            0x415f	                                 pop r15	      1693	refs.c	FUNCTION_90
0x400052c	              0xc3	                                     ret	      1693	refs.c	FUNCTION_90
0x400052d	           0xf1f00	                         nop dword [rax]	      1693	refs.c	FUNCTION_90
0x4000530	            0x31c9	                            xor ecx, ecx	      1689	refs.c	FUNCTION_90	CALL_1
0x4000532	            0x31d2	                            xor edx, edx	      1689	refs.c	FUNCTION_90	CALL_1
0x4000534	      0xbe00000000	                              mov esi, 0	      1689	refs.c	FUNCTION_90	CALL_1
0x4000539	      0xe800000000	                          call 0x400053e	      1689	refs.c	FUNCTION_90	CALL_1
0x400053e	            0xeb81	                           jmp 0x40004c1	      1689	refs.c	FUNCTION_90	CALL_1
0x4000540	          0x4889ea	                            mov rdx, rbp	      1692	refs.c	FUNCTION_90	CALL_4
0x4000543	          0x4c89fe	                            mov rsi, r15	      1692	refs.c	FUNCTION_90	CALL_4
0x4000546	      0xbf00000000	                              mov edi, 0	      1692	refs.c	FUNCTION_90	CALL_4
0x400054b	            0x31c0	                            xor eax, eax	      1692	refs.c	FUNCTION_90	CALL_4
0x400054d	      0xe800000000	                          call 0x4000552	      1692	refs.c	FUNCTION_90	CALL_4
0x4000552	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4000557	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x400055b	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4000560	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4000562	      0xe800000000	                          call 0x4000567	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4000567	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x400056a	      0xbe18000000	                           mov esi, 0x18	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x400056f	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4000574	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x4000576	      0xe800000000	                          call 0x400057b	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
shorten_unambiguous_ref	CALL,15:IF,7:FOR,4:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	188
0x40023c0	            0x4157	                                push r15	      1123	refs.c	FUNCTION_61
0x40023c2	            0x4156	                                push r14	      1123	refs.c	FUNCTION_61
0x40023c4	            0x4155	                                push r13	      1123	refs.c	FUNCTION_61
0x40023c6	            0x4154	                                push r12	      1123	refs.c	FUNCTION_61
0x40023c8	              0x55	                                push rbp	      1123	refs.c	FUNCTION_61
0x40023c9	              0x53	                                push rbx	      1123	refs.c	FUNCTION_61
0x40023ca	        0x4883ec38	                           sub rsp, 0x38	      1123	refs.c	FUNCTION_61
0x40023ce	        0x48893c24	                    mov qword [rsp], rdi	      1123	refs.c	FUNCTION_61
0x40023d2	    0x8b3d00000000	            mov edi, dword [0x040023d8] 	      1130	refs.c	FUNCTION_61	IF_1
0x40023d8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1123	refs.c	FUNCTION_61
0x40023e1	      0x4889442428	             mov qword [rsp + 0x28], rax	      1123	refs.c	FUNCTION_61
0x40023e6	            0x31c0	                            xor eax, eax	      1123	refs.c	FUNCTION_61
0x40023e8	        0x8974240c	              mov dword [rsp + 0xc], esi	      1123	refs.c	FUNCTION_61
0x40023ec	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1128	refs.c	FUNCTION_61
0x40023f5	            0x85ff	                           test edi, edi	      1130	refs.c	FUNCTION_61	IF_1
0x40023f7	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1128	refs.c	FUNCTION_61
0x4002400	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1128	refs.c	FUNCTION_61
0x4002409	     0xf8531010000	                           jne 0x4002540	      1130	refs.c	FUNCTION_61	IF_1
0x400240f	    0x488b3d000000	            mov rdi, qword [0x04002416] 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002416	          0x4885ff	                           test rdi, rdi	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002419	     0xf8448020000	                            je 0x4002667	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400241f	      0xbd00000000	                              mov ebp, 0	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002424	      0xbb01000000	                              mov ebx, 1	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002429	          0x4531e4	                          xor r12d, r12d	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400242c	         0xf1f4000	                         nop dword [rax]	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002430	      0xe800000000	                          call 0x4002435	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002435	        0x488b7d00	                    mov rdi, qword [rbp]	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002439	      0x4d8d6404ff	                lea r12, [r12 + rax - 1]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x400243e	    0x891d00000000	            mov dword [0x04002444], ebx 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002444	          0x4863c3	                         movsxd rax, ebx	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002447	        0x4883c508	                              add rbp, 8	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400244b	          0x83c301	                              add ebx, 1	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400244e	          0x4885ff	                           test rdi, rdi	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002451	            0x75dd	                           jne 0x4002430	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002453	    0x488d34c50000	                        lea rsi, [rax*8]	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400245b	          0x4889f0	                            mov rax, rsi	       785	git-compat-util.h	FUNCTION_228	IF_1
0x400245e	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_228	IF_1
0x4002461	          0x4939c4	                            cmp r12, rax	       785	git-compat-util.h	FUNCTION_228	IF_1
0x4002464	     0xf8758020000	                            ja 0x40026c2	       785	git-compat-util.h	FUNCTION_228	IF_1
0x400246a	        0x4a8d3c26	                    lea rdi, [rsi + r12]	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x400246e	      0xe800000000	                          call 0x4002473	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002473	    0x486315000000	         movsxd rdx, dword [0x0400247a] 	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x400247a	    0x488905000000	            mov qword [0x04002481], rax 	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002481	            0x85d2	                           test edx, edx	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002483	     0xf8e7f000000	                           jle 0x4002508	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002489	          0x4d85e4	                           test r12, r12	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x400248c	     0xf84f1010000	                            je 0x4002683	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002492	            0x31ed	                            xor ebp, ebp	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002494	            0x31db	                            xor ebx, ebx	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002496	          0x4531ed	                          xor r13d, r13d	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002499	            0xeb19	                           jmp 0x40024b4	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x400249b	       0xf1f440000	                   nop dword [rax + rax]	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40024a0	        0x4883c508	                              add rbp, 8	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40024a4	          0x4939dc	                            cmp r12, rbx	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40024a7	     0xf86d6010000	                           jbe 0x4002683	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40024ad	    0x488b05000000	            mov rax, qword [0x040024b4] 	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40024b4	        0x488d3cd3	                  lea rdi, [rbx + rdx*8]	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x40024b8	        0x4883ec08	                              sub rsp, 8	        64	stdio2.h	FUNCTION_244	CALL_1
0x40024bc	          0x4c89e6	                            mov rsi, r12	        64	stdio2.h	FUNCTION_244	CALL_1
0x40024bf	          0x4829de	                            sub rsi, rbx	        64	stdio2.h	FUNCTION_244	CALL_1
0x40024c2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        64	stdio2.h	FUNCTION_244	CALL_1
0x40024c9	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_244	CALL_1
0x40024ce	          0x4801c7	                            add rdi, rax	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x40024d1	    0x41b902000000	                              mov r9d, 2	        64	stdio2.h	FUNCTION_244	CALL_1
0x40024d7	        0x4183c501	                             add r13d, 1	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x40024db	        0x48893c28	              mov qword [rax + rbp], rdi	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x40024df	    0x4c8b85000000	                     mov r8, qword [rbp]	        64	stdio2.h	FUNCTION_244	CALL_1
0x40024e6	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_244	CALL_1
0x40024e8	      0x6800000000	                                  push 0	        64	stdio2.h	FUNCTION_244	CALL_1
0x40024ed	      0xe800000000	                          call 0x40024f2	        64	stdio2.h	FUNCTION_244	CALL_1
0x40024f2	    0x486315000000	         movsxd rdx, dword [0x040024f9] 	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x40024f9	          0x83c001	                              add eax, 1	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x40024fc	            0x4898	                                    cdqe	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x40024fe	          0x4801c3	                            add rbx, rax	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002501	              0x59	                                 pop rcx	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002502	          0x4439ea	                           cmp edx, r13d	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002505	              0x5e	                                 pop rsi	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002506	            0x7f98	                            jg 0x40024a0	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002508	            0x85d2	                           test edx, edx	      1157	refs.c	FUNCTION_61	IF_2
0x400250a	            0x7534	                           jne 0x4002540	      1157	refs.c	FUNCTION_61	IF_2
0x400250c	        0x488b3c24	                    mov rdi, qword [rsp]	      1216	refs.c	FUNCTION_61	CALL_15
0x4002510	      0xe800000000	                          call 0x4002515	      1216	refs.c	FUNCTION_61	CALL_15
0x4002515	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1217	refs.c	FUNCTION_61
0x400251a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1217	refs.c	FUNCTION_61
0x4002523	     0xf85a8010000	                           jne 0x40026d1	      1217	refs.c	FUNCTION_61
0x4002529	        0x4883c438	                           add rsp, 0x38	      1217	refs.c	FUNCTION_61
0x400252d	              0x5b	                                 pop rbx	      1217	refs.c	FUNCTION_61
0x400252e	              0x5d	                                 pop rbp	      1217	refs.c	FUNCTION_61
0x400252f	            0x415c	                                 pop r12	      1217	refs.c	FUNCTION_61
0x4002531	            0x415d	                                 pop r13	      1217	refs.c	FUNCTION_61
0x4002533	            0x415e	                                 pop r14	      1217	refs.c	FUNCTION_61
0x4002535	            0x415f	                                 pop r15	      1217	refs.c	FUNCTION_61
0x4002537	              0xc3	                                     ret	      1217	refs.c	FUNCTION_61
0x4002538	     0xf1f84000000	                   nop dword [rax + rax]	      1217	refs.c	FUNCTION_61
0x4002540	        0x488b3c24	                    mov rdi, qword [rsp]	      1161	refs.c	FUNCTION_61	CALL_7
0x4002544	      0xe800000000	                          call 0x4002549	      1161	refs.c	FUNCTION_61	CALL_7
0x4002549	          0x4989c4	                            mov r12, rax	      1161	refs.c	FUNCTION_61	CALL_7
0x400254c	    0x8b0500000000	            mov eax, dword [0x04002552] 	      1164	refs.c	FUNCTION_61	FOR_3
0x4002552	          0x8d58ff	                      lea ebx, [rax - 1]	      1164	refs.c	FUNCTION_61	FOR_3
0x4002555	          0x4c63eb	                         movsxd r13, ebx	      1164	refs.c	FUNCTION_61	FOR_3
0x4002558	        0x49c1e503	                              shl r13, 3	      1164	refs.c	FUNCTION_61	FOR_3
0x400255c	            0x85db	                           test ebx, ebx	      1164	refs.c	FUNCTION_61	FOR_3
0x400255e	            0x7f15	                            jg 0x4002575	      1164	refs.c	FUNCTION_61	FOR_3
0x4002560	      0xe9eb000000	                           jmp 0x4002650	      1164	refs.c	FUNCTION_61	FOR_3
0x4002565	           0xf1f00	                         nop dword [rax]	      1164	refs.c	FUNCTION_61	FOR_3
0x4002568	        0x4983ed08	                              sub r13, 8	      1164	refs.c	FUNCTION_61	FOR_3
0x400256c	          0x83eb01	                              sub ebx, 1	      1164	refs.c	FUNCTION_61	FOR_3
0x400256f	     0xf84db000000	                            je 0x4002650	      1164	refs.c	FUNCTION_61	FOR_3
0x4002575	    0x488b05000000	            mov rax, qword [0x0400257c] 	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x400257c	        0x488b3c24	                    mov rdi, qword [rsp]	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x4002580	          0x4c89e2	                            mov rdx, r12	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x4002583	        0x4a8b3428	              mov rsi, qword [rax + r13]	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x4002587	            0x31c0	                            xor eax, eax	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x4002589	      0xe800000000	                          call 0x400258e	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x400258e	          0x83f801	                              cmp eax, 1	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x4002591	            0x75d5	                           jne 0x4002568	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x4002593	          0x4c89e7	                            mov rdi, r12	      1172	refs.c	FUNCTION_61	FOR_3	CALL_9
0x4002596	      0xe800000000	                          call 0x400259b	      1172	refs.c	FUNCTION_61	FOR_3	CALL_9
0x400259b	        0x89442408	                mov dword [rsp + 8], eax	      1172	refs.c	FUNCTION_61	FOR_3	CALL_9
0x400259f	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1178	refs.c	FUNCTION_61	FOR_3	IF_4
0x40025a3	            0x85c0	                           test eax, eax	      1178	refs.c	FUNCTION_61	FOR_3	IF_4
0x40025a5	     0xf8495000000	                            je 0x4002640	      1178	refs.c	FUNCTION_61	FOR_3	IF_4
0x40025ab	    0x8b2d00000000	            mov ebp, dword [0x040025b1] 	      1179	refs.c	FUNCTION_61	FOR_3	IF_4
0x40025b1	          0x83fd00	                              cmp ebp, 0	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x40025b4	     0xf8ee6000000	                           jle 0x40026a0	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x40025ba	    0x41be00000000	                             mov r14d, 0	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x40025c0	          0x4531ff	                          xor r15d, r15d	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x40025c3	            0xeb46	                           jmp 0x400260b	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x40025c5	           0xf1f00	                         nop dword [rax]	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x40025c8	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_188	IF_2
0x40025cb	        0x8b542408	                mov edx, dword [rsp + 8]	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x40025cf	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x40025d4	            0x31c0	                            xor eax, eax	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x40025d6	          0x4c89e1	                            mov rcx, r12	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x40025d9	      0xe800000000	                          call 0x40025de	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x40025de	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       244	refs.c	FUNCTION_12	CALL_1
0x40025e3	            0x31c9	                            xor ecx, ecx	       244	refs.c	FUNCTION_12	CALL_1
0x40025e5	            0x31d2	                            xor edx, edx	       244	refs.c	FUNCTION_12	CALL_1
0x40025e7	      0xbe01000000	                              mov esi, 1	       244	refs.c	FUNCTION_12	CALL_1
0x40025ec	      0xe800000000	                          call 0x40025f1	       244	refs.c	FUNCTION_12	CALL_1
0x40025f1	          0x4885c0	                           test rax, rax	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x40025f4	     0xf856effffff	                           jne 0x4002568	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x40025fa	        0x4183c701	                             add r15d, 1	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x40025fe	        0x4983c608	                              add r14, 8	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4002602	          0x4439fd	                           cmp ebp, r15d	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4002605	     0xf84a5000000	                            je 0x40026b0	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x400260b	          0x4139df	                           cmp r15d, ebx	      1189	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_5
0x400260e	            0x74ea	                            je 0x40025fa	      1189	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_5
0x4002610	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_188	IF_2
0x4002615	          0x498b36	                    mov rsi, qword [r14]	      1186	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4002618	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_188
0x4002621	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_188	IF_2
0x4002627	            0x759f	                           jne 0x40025c8	       165	strbuf.h	FUNCTION_188	IF_2
0x4002629	    0x803d00000000	                cmp byte [0x04002630], 0	       168	strbuf.h	FUNCTION_188	CALL_2
0x4002630	            0x7499	                            je 0x40025cb	       168	strbuf.h	FUNCTION_188	CALL_2
0x4002632	      0xe800000000	                          call 0x4002637	       168	strbuf.h	FUNCTION_188	CALL_2
0x4002637	    0x660f1f840000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_188	CALL_2
0x4002640	            0x89dd	                            mov ebp, ebx	       168	strbuf.h	FUNCTION_188	CALL_2
0x4002642	      0xe973ffffff	                           jmp 0x40025ba	       168	strbuf.h	FUNCTION_188	CALL_2
0x4002647	    0x660f1f840000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_188	CALL_2
0x4002650	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1214	refs.c	FUNCTION_61	CALL_13
0x4002655	      0xe800000000	                          call 0x400265a	      1214	refs.c	FUNCTION_61	CALL_13
0x400265a	          0x4c89e7	                            mov rdi, r12	      1215	refs.c	FUNCTION_61	CALL_14
0x400265d	      0xe800000000	                          call 0x4002662	      1215	refs.c	FUNCTION_61	CALL_14
0x4002662	      0xe9a5feffff	                           jmp 0x400250c	      1215	refs.c	FUNCTION_61	CALL_14
0x4002667	            0x31ff	                            xor edi, edi	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002669	      0xe800000000	                          call 0x400266e	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x400266e	    0x8b1500000000	            mov edx, dword [0x04002674] 	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002674	    0x488905000000	            mov qword [0x0400267b], rax 	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x400267b	            0x85d2	                           test edx, edx	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x400267d	     0xf8e85feffff	                           jle 0x4002508	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002683	      0xb900000000	                              mov ecx, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002688	      0xba7d040000	                          mov edx, 0x47d	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x400268d	      0xbe00000000	                              mov esi, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002692	      0xbf00000000	                              mov edi, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002697	      0xe800000000	                          call 0x400269c	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x400269c	         0xf1f4000	                         nop dword [rax]	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40026a0	     0xf85c2feffff	                           jne 0x4002568	      1208	refs.c	FUNCTION_61	FOR_3	IF_7
0x40026a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1208	refs.c	FUNCTION_61	FOR_3	IF_7
0x40026b0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1209	refs.c	FUNCTION_61	FOR_3	IF_7	CALL_12
0x40026b5	      0xe800000000	                          call 0x40026ba	      1209	refs.c	FUNCTION_61	FOR_3	IF_7	CALL_12
0x40026ba	          0x4c89e0	                            mov rax, r12	      1210	refs.c	FUNCTION_61	FOR_3	IF_7
0x40026bd	      0xe953feffff	                           jmp 0x4002515	      1210	refs.c	FUNCTION_61	FOR_3	IF_7
0x40026c2	          0x4c89e2	                            mov rdx, r12	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x40026c5	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x40026ca	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x40026cc	      0xe800000000	                          call 0x40026d1	       786	git-compat-util.h	FUNCTION_228	IF_1	CALL_1
0x40026d1	      0xe800000000	                          call 0x40026d6	      1217	refs.c	FUNCTION_61
peel_object	CALL,5:IF,4:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	48
0x40009b0	            0x4154	                                push r12	       302	refs.c	FUNCTION_16
0x40009b2	              0x55	                                push rbp	       302	refs.c	FUNCTION_16
0x40009b3	          0x4989fc	                            mov r12, rdi	       302	refs.c	FUNCTION_16
0x40009b6	              0x53	                                push rbx	       302	refs.c	FUNCTION_16
0x40009b7	          0x4889f5	                            mov rbp, rsi	       302	refs.c	FUNCTION_16
0x40009ba	      0xe800000000	                          call 0x40009bf	       303	refs.c	FUNCTION_16	CALL_1
0x40009bf	           0xfb610	                   movzx edx, byte [rax]	       305	refs.c	FUNCTION_16	IF_1
0x40009c2	          0x4889c3	                            mov rbx, rax	       303	refs.c	FUNCTION_16	CALL_1
0x40009c5	          0x83e20e	                            and edx, 0xe	       305	refs.c	FUNCTION_16	IF_1
0x40009c8	            0x743e	                            je 0x4000a08	       305	refs.c	FUNCTION_16	IF_1
0x40009ca	          0x80fa08	                               cmp dl, 8	       311	refs.c	FUNCTION_16	IF_3
0x40009cd	      0xb8feffffff	                     mov eax, 0xfffffffe	       312	refs.c	FUNCTION_16	IF_3
0x40009d2	            0x7529	                           jne 0x40009fd	       311	refs.c	FUNCTION_16	IF_3
0x40009d4	          0x4889df	                            mov rdi, rbx	       314	refs.c	FUNCTION_16	CALL_4
0x40009d7	      0xe800000000	                          call 0x40009dc	       314	refs.c	FUNCTION_16	CALL_4
0x40009dc	          0x4885c0	                           test rax, rax	       315	refs.c	FUNCTION_16	IF_4
0x40009df	            0x745f	                            je 0x4000a40	       315	refs.c	FUNCTION_16	IF_4
0x40009e1	        0x488d5004	                      lea rdx, [rax + 4]	        53	string3.h	FUNCTION_125	CALL_3
0x40009e5	        0x488b4004	                mov rax, qword [rax + 4]	        53	string3.h	FUNCTION_125	CALL_3
0x40009e9	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_125	CALL_3
0x40009ed	        0x488b4208	                mov rax, qword [rdx + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x40009f1	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_125	CALL_3
0x40009f5	          0x8b4210	            mov eax, dword [rdx + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x40009f8	          0x894510	            mov dword [rbp + 0x10], eax 	        53	string3.h	FUNCTION_125	CALL_3
0x40009fb	            0x31c0	                            xor eax, eax	       319	refs.c	FUNCTION_16
0x40009fd	              0x5b	                                 pop rbx	       320	refs.c	FUNCTION_16
0x40009fe	              0x5d	                                 pop rbp	       320	refs.c	FUNCTION_16
0x40009ff	            0x415c	                                 pop r12	       320	refs.c	FUNCTION_16
0x4000a01	              0xc3	                                     ret	       320	refs.c	FUNCTION_16
0x4000a02	    0x660f1f440000	                    nop word [rax + rax]	       320	refs.c	FUNCTION_16
0x4000a08	    0x488b3d000000	            mov rdi, qword [0x04000a0f] 	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000a0f	            0x31d2	                            xor edx, edx	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000a11	          0x4c89e6	                            mov rsi, r12	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000a14	      0xe800000000	                          call 0x4000a19	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000a19	            0x85c0	                           test eax, eax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a1b	            0x7823	                            js 0x4000a40	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a1d	            0x31d2	                            xor edx, edx	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a1f	            0x89c6	                            mov esi, eax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a21	          0x4889df	                            mov rdi, rbx	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a24	      0xe800000000	                          call 0x4000a29	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a29	          0x4885c0	                           test rax, rax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a2c	            0x7412	                            je 0x4000a40	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a2e	           0xfb613	                   movzx edx, byte [rbx]	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a31	          0x83e20e	                            and edx, 0xe	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a34	            0xeb94	                           jmp 0x40009ca	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000a40	      0xb8ffffffff	                     mov eax, 0xffffffff	       308	refs.c	FUNCTION_16	IF_1	IF_2
0x4000a45	            0xebb6	                           jmp 0x40009fd	       308	refs.c	FUNCTION_16	IF_1	IF_2
read_ref_at	CALL,4:IF,3:FOR,0:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0	61
0x4003b10	            0x4154	                                push r12	       905	refs.c	FUNCTION_50
0x4003b12	              0x55	                                push rbp	       905	refs.c	FUNCTION_50
0x4003b13	          0x4189f4	                           mov r12d, esi	       905	refs.c	FUNCTION_50
0x4003b16	              0x53	                                push rbx	       905	refs.c	FUNCTION_50
0x4003b17	          0x4889fd	                            mov rbp, rdi	       905	refs.c	FUNCTION_50
0x4003b1a	            0x89ce	                            mov esi, ecx	       905	refs.c	FUNCTION_50
0x4003b1c	      0xb90f000000	                            mov ecx, 0xf	        90	string3.h	FUNCTION_128	CALL_5
0x4003b21	        0x4883c480	             add rsp, 0xffffffffffffff80	       905	refs.c	FUNCTION_50
0x4003b25	    0x64488b042528	                mov rax, qword fs:[0x28]	       905	refs.c	FUNCTION_50
0x4003b2e	      0x4889442478	             mov qword [rsp + 0x78], rax	       905	refs.c	FUNCTION_50
0x4003b33	            0x31c0	                            xor eax, eax	       905	refs.c	FUNCTION_50
0x4003b35	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_128	CALL_5
0x4003b38	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_128	CALL_5
0x4003b3b	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       913	refs.c	FUNCTION_50
0x4003b43	      0x4889542408	                mov qword [rsp + 8], rdx	       910	refs.c	FUNCTION_50
0x4003b48	          0x4889ef	                            mov rdi, rbp	       918	refs.c	FUNCTION_50	CALL_1
0x4003b4b	        0x89742410	             mov dword [rsp + 0x10], esi	       911	refs.c	FUNCTION_50
0x4003b4f	          0x4889e2	                            mov rdx, rsp	       918	refs.c	FUNCTION_50	CALL_1
0x4003b52	      0xbe00000000	                              mov esi, 0	       918	refs.c	FUNCTION_50	CALL_1
0x4003b57	        0x48892c24	                    mov qword [rsp], rbp	       909	refs.c	FUNCTION_50
0x4003b5b	      0x4c894c2458	              mov qword [rsp + 0x58], r9	       912	refs.c	FUNCTION_50
0x4003b60	      0x4889442460	             mov qword [rsp + 0x60], rax	       913	refs.c	FUNCTION_50
0x4003b65	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       914	refs.c	FUNCTION_50
0x4003b6d	      0x4c89442418	              mov qword [rsp + 0x18], r8	       916	refs.c	FUNCTION_50
0x4003b72	      0x4889442468	             mov qword [rsp + 0x68], rax	       914	refs.c	FUNCTION_50
0x4003b77	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       915	refs.c	FUNCTION_50
0x4003b7f	      0x4889442470	             mov qword [rsp + 0x70], rax	       915	refs.c	FUNCTION_50
0x4003b84	      0xe800000000	                          call 0x4003b89	       918	refs.c	FUNCTION_50	CALL_1
0x4003b89	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       920	refs.c	FUNCTION_50	IF_1
0x4003b8d	            0x85c9	                           test ecx, ecx	       920	refs.c	FUNCTION_50	IF_1
0x4003b8f	            0x7517	                           jne 0x4003ba8	       920	refs.c	FUNCTION_50	IF_1
0x4003b91	        0x4183e401	                             and r12d, 1	       921	refs.c	FUNCTION_50	IF_1	IF_2
0x4003b95	            0x7439	                            je 0x4003bd0	       921	refs.c	FUNCTION_50	IF_1	IF_2
0x4003b97	      0xbf80000000	                           mov edi, 0x80	       922	refs.c	FUNCTION_50	IF_1	CALL_2
0x4003b9c	      0xe800000000	                          call 0x4003ba1	       922	refs.c	FUNCTION_50	IF_1	CALL_2
0x4003ba1	     0xf1f80000000	                         nop dword [rax]	       922	refs.c	FUNCTION_50	IF_1	CALL_2
0x4003ba8	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       926	refs.c	FUNCTION_50	IF_3
0x4003bac	            0x31c0	                            xor eax, eax	       927	refs.c	FUNCTION_50	IF_3
0x4003bae	            0x85d2	                           test edx, edx	       926	refs.c	FUNCTION_50	IF_3
0x4003bb0	            0x742e	                            je 0x4003be0	       926	refs.c	FUNCTION_50	IF_3
0x4003bb2	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       932	refs.c	FUNCTION_50
0x4003bb7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       932	refs.c	FUNCTION_50
0x4003bc0	            0x7535	                           jne 0x4003bf7	       932	refs.c	FUNCTION_50
0x4003bc2	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       932	refs.c	FUNCTION_50
0x4003bc6	              0x5b	                                 pop rbx	       932	refs.c	FUNCTION_50
0x4003bc7	              0x5d	                                 pop rbp	       932	refs.c	FUNCTION_50
0x4003bc8	            0x415c	                                 pop r12	       932	refs.c	FUNCTION_50
0x4003bca	              0xc3	                                     ret	       932	refs.c	FUNCTION_50
0x4003bcb	       0xf1f440000	                   nop dword [rax + rax]	       932	refs.c	FUNCTION_50
0x4003bd0	          0x4889ee	                            mov rsi, rbp	       924	refs.c	FUNCTION_50	IF_1	CALL_3
0x4003bd3	      0xbf00000000	                              mov edi, 0	       924	refs.c	FUNCTION_50	IF_1	CALL_3
0x4003bd8	            0x31c0	                            xor eax, eax	       924	refs.c	FUNCTION_50	IF_1	CALL_3
0x4003bda	      0xe800000000	                          call 0x4003bdf	       924	refs.c	FUNCTION_50	IF_1	CALL_3
0x4003bdf	              0x90	                                     nop	       924	refs.c	FUNCTION_50	IF_1	CALL_3
0x4003be0	          0x4889e2	                            mov rdx, rsp	       929	refs.c	FUNCTION_50	CALL_4
0x4003be3	      0xbe00000000	                              mov esi, 0	       929	refs.c	FUNCTION_50	CALL_4
0x4003be8	          0x4889ef	                            mov rdi, rbp	       929	refs.c	FUNCTION_50	CALL_4
0x4003beb	      0xe800000000	                          call 0x4003bf0	       929	refs.c	FUNCTION_50	CALL_4
0x4003bf0	      0xb801000000	                              mov eax, 1	       931	refs.c	FUNCTION_50
0x4003bf5	            0xebbb	                           jmp 0x4003bb2	       931	refs.c	FUNCTION_50
0x4003bf7	      0xe800000000	                          call 0x4003bfc	       932	refs.c	FUNCTION_50
reflog_expire	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	33
0x4003ee0	            0x4157	                                push r15	      2109	refs.c	FUNCTION_117
0x4003ee2	            0x4156	                                push r14	      2109	refs.c	FUNCTION_117
0x4003ee4	          0x4d89cf	                             mov r15, r9	      2109	refs.c	FUNCTION_117
0x4003ee7	            0x4155	                                push r13	      2109	refs.c	FUNCTION_117
0x4003ee9	            0x4154	                                push r12	      2109	refs.c	FUNCTION_117
0x4003eeb	          0x4989cd	                            mov r13, rcx	      2109	refs.c	FUNCTION_117
0x4003eee	              0x55	                                push rbp	      2109	refs.c	FUNCTION_117
0x4003eef	              0x53	                                push rbx	      2109	refs.c	FUNCTION_117
0x4003ef0	          0x4889fb	                            mov rbx, rdi	      2109	refs.c	FUNCTION_117
0x4003ef3	          0x4889f5	                            mov rbp, rsi	      2109	refs.c	FUNCTION_117
0x4003ef6	          0x4189d4	                           mov r12d, edx	      2109	refs.c	FUNCTION_117
0x4003ef9	          0x4d89c6	                             mov r14, r8	      2109	refs.c	FUNCTION_117
0x4003efc	        0x4883ec08	                              sub rsp, 8	      2109	refs.c	FUNCTION_117
0x4003f00	    0x488b3d000000	            mov rdi, qword [0x04003f07] 	      2110	refs.c	FUNCTION_117	CALL_2
0x4003f07	      0xe800000000	                          call 0x4003f0c	      2110	refs.c	FUNCTION_117	CALL_2
0x4003f0c	          0x4c8b10	                    mov r10, qword [rax]	      2098	refs.c	FUNCTION_116	CALL_1
0x4003f0f	        0xff742440	                 push qword [rsp + 0x40]	      2098	refs.c	FUNCTION_116	CALL_1
0x4003f13	          0x4d89f1	                             mov r9, r14	      2098	refs.c	FUNCTION_116	CALL_1
0x4003f16	            0x4157	                                push r15	      2098	refs.c	FUNCTION_116	CALL_1
0x4003f18	          0x4d89e8	                             mov r8, r13	      2098	refs.c	FUNCTION_116	CALL_1
0x4003f1b	          0x4489e1	                           mov ecx, r12d	      2098	refs.c	FUNCTION_116	CALL_1
0x4003f1e	          0x4889ea	                            mov rdx, rbp	      2098	refs.c	FUNCTION_116	CALL_1
0x4003f21	          0x4889de	                            mov rsi, rbx	      2098	refs.c	FUNCTION_116	CALL_1
0x4003f24	          0x4889c7	                            mov rdi, rax	      2098	refs.c	FUNCTION_116	CALL_1
0x4003f27	    0x41ff92a80000	                 call qword [r10 + 0xa8]	      2098	refs.c	FUNCTION_116	CALL_1
0x4003f2e	        0x4883c418	                           add rsp, 0x18	      2114	refs.c	FUNCTION_117
0x4003f32	              0x5b	                                 pop rbx	      2114	refs.c	FUNCTION_117
0x4003f33	              0x5d	                                 pop rbp	      2114	refs.c	FUNCTION_117
0x4003f34	            0x415c	                                 pop r12	      2114	refs.c	FUNCTION_117
0x4003f36	            0x415d	                                 pop r13	      2114	refs.c	FUNCTION_117
0x4003f38	            0x415e	                                 pop r14	      2114	refs.c	FUNCTION_117
0x4003f3a	            0x415f	                                 pop r15	      2114	refs.c	FUNCTION_117
0x4003f3c	              0xc3	                                     ret	      2114	refs.c	FUNCTION_117
ref_transaction_abort	CALL,4:IF,0:FOR,0:DO,0:SWITCH,1:ELSE,0:WHILE,0:functions,0	34
0x4002ef0	              0x55	                                push rbp	      1875	refs.c	FUNCTION_101
0x4002ef1	              0x53	                                push rbx	      1875	refs.c	FUNCTION_101
0x4002ef2	          0x4889fb	                            mov rbx, rdi	      1875	refs.c	FUNCTION_101
0x4002ef5	        0x4883ec08	                              sub rsp, 8	      1875	refs.c	FUNCTION_101
0x4002ef9	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002efc	          0x83f801	                              cmp eax, 1	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002eff	            0x743f	                            je 0x4002f40	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002f01	            0x7225	                            jb 0x4002f28	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002f03	          0x83f802	                              cmp eax, 2	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002f06	            0x7510	                           jne 0x4002f18	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002f08	      0xbf00000000	                              mov edi, 0	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x4002f0d	            0x31c0	                            xor eax, eax	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x4002f0f	      0xe800000000	                          call 0x4002f14	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x4002f14	         0xf1f4000	                         nop dword [rax]	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x4002f18	      0xbf00000000	                              mov edi, 0	      1890	refs.c	FUNCTION_101	SWITCH_1	CALL_3
0x4002f1d	            0x31c0	                            xor eax, eax	      1890	refs.c	FUNCTION_101	SWITCH_1	CALL_3
0x4002f1f	      0xe800000000	                          call 0x4002f24	      1890	refs.c	FUNCTION_101	SWITCH_1	CALL_3
0x4002f24	         0xf1f4000	                         nop dword [rax]	      1890	refs.c	FUNCTION_101	SWITCH_1	CALL_3
0x4002f28	            0x31ed	                            xor ebp, ebp	      1877	refs.c	FUNCTION_101
0x4002f2a	          0x4889df	                            mov rdi, rbx	      1894	refs.c	FUNCTION_101	CALL_4
0x4002f2d	      0xe800000000	                          call 0x4002f32	      1894	refs.c	FUNCTION_101	CALL_4
0x4002f32	        0x4883c408	                              add rsp, 8	      1896	refs.c	FUNCTION_101
0x4002f36	            0x89e8	                            mov eax, ebp	      1896	refs.c	FUNCTION_101
0x4002f38	              0x5b	                                 pop rbx	      1896	refs.c	FUNCTION_101
0x4002f39	              0x5d	                                 pop rbp	      1896	refs.c	FUNCTION_101
0x4002f3a	              0xc3	                                     ret	      1896	refs.c	FUNCTION_101
0x4002f3b	       0xf1f440000	                   nop dword [rax + rax]	      1896	refs.c	FUNCTION_101
0x4002f40	          0x488b3f	                    mov rdi, qword [rdi]	      1876	refs.c	FUNCTION_101
0x4002f43	          0x4889f2	                            mov rdx, rsi	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4002f46	          0x4889de	                            mov rsi, rbx	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4002f49	          0x488b07	                    mov rax, qword [rdi]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4002f4c	          0xff5030	                 call qword [rax + 0x30]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4002f4f	            0x89c5	                            mov ebp, eax	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4002f51	            0xebd7	                           jmp 0x4002f2a	      1885	refs.c	FUNCTION_101	SWITCH_1
for_each_rawref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	17
0x4002240	              0x55	                                push rbp	      1459	refs.c	FUNCTION_79
0x4002241	              0x53	                                push rbx	      1459	refs.c	FUNCTION_79
0x4002242	          0x4889fb	                            mov rbx, rdi	      1459	refs.c	FUNCTION_79
0x4002245	          0x4889f5	                            mov rbp, rsi	      1459	refs.c	FUNCTION_79
0x4002248	        0x4883ec08	                              sub rsp, 8	      1459	refs.c	FUNCTION_79
0x400224c	    0x488b3d000000	            mov rdi, qword [0x04002253] 	      1460	refs.c	FUNCTION_79	CALL_2
0x4002253	      0xe800000000	                          call 0x4002258	      1460	refs.c	FUNCTION_79	CALL_2
0x4002258	        0x4883c408	                              add rsp, 8	      1461	refs.c	FUNCTION_79
0x400225c	          0x4989e9	                             mov r9, rbp	      1454	refs.c	FUNCTION_78	CALL_1
0x400225f	          0x4889da	                            mov rdx, rbx	      1454	refs.c	FUNCTION_78	CALL_1
0x4002262	              0x5b	                                 pop rbx	      1461	refs.c	FUNCTION_79
0x4002263	              0x5d	                                 pop rbp	      1461	refs.c	FUNCTION_79
0x4002264	    0x41b801000000	                              mov r8d, 1	      1454	refs.c	FUNCTION_78	CALL_1
0x400226a	            0x31c9	                            xor ecx, ecx	      1454	refs.c	FUNCTION_78	CALL_1
0x400226c	      0xbe00000000	                              mov esi, 0	      1454	refs.c	FUNCTION_78	CALL_1
0x4002271	          0x4889c7	                            mov rdi, rax	      1454	refs.c	FUNCTION_78	CALL_1
0x4002274	      0xe937f5ffff	                 jmp sym.do_for_each_ref	      1454	refs.c	FUNCTION_78	CALL_1
refs_pack_refs	CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	3
0x4002c50	          0x488b07	                    mov rax, qword [rdi]	      1774	refs.c	FUNCTION_94	CALL_1
0x4002c53	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1774	refs.c	FUNCTION_94	CALL_1
0x4002c57	            0xffe0	                                 jmp rax	      1774	refs.c	FUNCTION_94	CALL_1
refs_for_each_fullref_in	CALL,1:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	6
0x4001880	          0x4585c0	                           test r8d, r8d	      1430	refs.c	FUNCTION_75	CALL_1
0x4001883	          0x4989c9	                             mov r9, rcx	      1425	refs.c	FUNCTION_75
0x4001886	        0x410f95c0	                               setne r8b	      1430	refs.c	FUNCTION_75	CALL_1
0x400188a	            0x31c9	                            xor ecx, ecx	      1430	refs.c	FUNCTION_75	CALL_1
0x400188c	        0x450fb6c0	                          movzx r8d, r8b	      1430	refs.c	FUNCTION_75	CALL_1
0x4001890	      0xe91bffffff	                 jmp sym.do_for_each_ref	      1430	refs.c	FUNCTION_75	CALL_1
ref_transaction_verify	CALL,2:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	15
0x4001470	        0x4883ec08	                              sub rsp, 8	      1061	refs.c	FUNCTION_58
0x4001474	          0x4885d2	                           test rdx, rdx	      1062	refs.c	FUNCTION_58	IF_1
0x4001477	            0x741b	                            je 0x4001494	      1062	refs.c	FUNCTION_58	IF_1
0x4001479	        0x4883ec08	                              sub rsp, 8	      1064	refs.c	FUNCTION_58	CALL_2
0x400147d	          0x4531c9	                            xor r9d, r9d	      1064	refs.c	FUNCTION_58	CALL_2
0x4001480	            0x4150	                                 push r8	      1064	refs.c	FUNCTION_58	CALL_2
0x4001482	          0x4189c8	                            mov r8d, ecx	      1064	refs.c	FUNCTION_58	CALL_2
0x4001485	          0x4889d1	                            mov rcx, rdx	      1064	refs.c	FUNCTION_58	CALL_2
0x4001488	            0x31d2	                            xor edx, edx	      1064	refs.c	FUNCTION_58	CALL_2
0x400148a	      0xe800000000	                          call 0x400148f	      1064	refs.c	FUNCTION_58	CALL_2
0x400148f	        0x4883c418	                           add rsp, 0x18	      1067	refs.c	FUNCTION_58
0x4001493	              0xc3	                                     ret	      1067	refs.c	FUNCTION_58
0x4001494	      0xbf00000000	                              mov edi, 0	      1063	refs.c	FUNCTION_58	CALL_1
0x4001499	            0x31c0	                            xor eax, eax	      1063	refs.c	FUNCTION_58	CALL_1
0x400149b	      0xe800000000	         call sym.parse_hide_refs_config	      1063	refs.c	FUNCTION_58	CALL_1
ref_transaction_update	CALL,6:IF,2:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	83
0x4001260	            0x4157	                                push r15	      1010	refs.c	FUNCTION_55
0x4001262	            0x4156	                                push r14	      1010	refs.c	FUNCTION_55
0x4001264	            0x4155	                                push r13	      1010	refs.c	FUNCTION_55
0x4001266	            0x4154	                                push r12	      1010	refs.c	FUNCTION_55
0x4001268	              0x55	                                push rbp	      1010	refs.c	FUNCTION_55
0x4001269	              0x53	                                push rbx	      1010	refs.c	FUNCTION_55
0x400126a	        0x4883ec08	                              sub rsp, 8	      1010	refs.c	FUNCTION_55
0x400126e	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      1011	refs.c	FUNCTION_55	CALL_1
0x4001274	     0xf84c1000000	                            je 0x400133b	      1011	refs.c	FUNCTION_55	CALL_1
0x400127a	          0x4885d2	                           test rdx, rdx	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x400127d	          0x4989fd	                            mov r13, rdi	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4001280	          0x4889f5	                            mov rbp, rsi	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4001283	          0x4989d7	                            mov r15, rdx	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4001286	          0x4989cc	                            mov r12, rcx	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4001289	          0x4489c3	                            mov ebx, r8d	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x400128c	          0x4d89ce	                             mov r14, r9	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x400128f	            0x7416	                            je 0x40012a7	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4001291	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x4001296	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_144	CALL_1
0x400129b	          0x4c89ff	                            mov rdi, r15	       975	cache.h	FUNCTION_144	CALL_1
0x400129e	      0xe800000000	                          call 0x40012a3	       975	cache.h	FUNCTION_144	CALL_1
0x40012a3	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40012a5	            0x7561	                           jne 0x4001308	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40012a7	          0x4889ef	                            mov rdi, rbp	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x40012aa	      0xe800000000	                          call 0x40012af	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x40012af	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40012b1	           0xf94c0	                                 sete al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40012b4	            0x84c0	                             test al, al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40012b6	            0x7568	                           jne 0x4001320	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40012b8	    0xf7c3fcffffff	                    test ebx, 0xfffffffc	      1021	refs.c	FUNCTION_55	IF_2
0x40012be	     0xf8590000000	                           jne 0x4001354	      1021	refs.c	FUNCTION_55	IF_2
0x40012c4	        0x4983ff01	                              cmp r15, 1	      1024	refs.c	FUNCTION_55
0x40012c8	          0x4d89f1	                             mov r9, r14	      1026	refs.c	FUNCTION_55	CALL_6
0x40012cb	          0x4d89e0	                             mov r8, r12	      1026	refs.c	FUNCTION_55	CALL_6
0x40012ce	            0x19d2	                            sbb edx, edx	      1024	refs.c	FUNCTION_55
0x40012d0	          0x4889ee	                            mov rsi, rbp	      1026	refs.c	FUNCTION_55	CALL_6
0x40012d3	          0x4c89ef	                            mov rdi, r13	      1026	refs.c	FUNCTION_55	CALL_6
0x40012d6	            0xf7d2	                                 not edx	      1024	refs.c	FUNCTION_55
0x40012d8	          0x83e204	                              and edx, 4	      1024	refs.c	FUNCTION_55
0x40012db	        0x4983fc01	                              cmp r12, 1	      1024	refs.c	FUNCTION_55
0x40012df	            0x19c9	                            sbb ecx, ecx	      1024	refs.c	FUNCTION_55
0x40012e1	            0xf7d1	                                 not ecx	      1024	refs.c	FUNCTION_55
0x40012e3	          0x83e108	                              and ecx, 8	      1024	refs.c	FUNCTION_55
0x40012e6	             0x9d1	                             or ecx, edx	      1026	refs.c	FUNCTION_55	CALL_6
0x40012e8	             0x9d9	                             or ecx, ebx	      1026	refs.c	FUNCTION_55	CALL_6
0x40012ea	            0x89ca	                            mov edx, ecx	      1026	refs.c	FUNCTION_55	CALL_6
0x40012ec	          0x4c89f9	                            mov rcx, r15	      1026	refs.c	FUNCTION_55	CALL_6
0x40012ef	      0xe800000000	                          call 0x40012f4	      1026	refs.c	FUNCTION_55	CALL_6
0x40012f4	            0x31c0	                            xor eax, eax	      1028	refs.c	FUNCTION_55
0x40012f6	        0x4883c408	                              add rsp, 8	      1029	refs.c	FUNCTION_55
0x40012fa	              0x5b	                                 pop rbx	      1029	refs.c	FUNCTION_55
0x40012fb	              0x5d	                                 pop rbp	      1029	refs.c	FUNCTION_55
0x40012fc	            0x415c	                                 pop r12	      1029	refs.c	FUNCTION_55
0x40012fe	            0x415d	                                 pop r13	      1029	refs.c	FUNCTION_55
0x4001300	            0x415e	                                 pop r14	      1029	refs.c	FUNCTION_55
0x4001302	            0x415f	                                 pop r15	      1029	refs.c	FUNCTION_55
0x4001304	              0xc3	                                     ret	      1029	refs.c	FUNCTION_55
0x4001305	           0xf1f00	                         nop dword [rax]	      1029	refs.c	FUNCTION_55
0x4001308	      0xbe01000000	                              mov esi, 1	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x400130d	          0x4889ef	                            mov rdi, rbp	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4001310	      0xe800000000	                          call 0x4001315	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4001315	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4001317	           0xf95c0	                                setne al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x400131a	            0xeb98	                           jmp 0x40012b4	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x400131c	         0xf1f4000	                         nop dword [rax]	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4001320	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4001325	            0x31c0	                            xor eax, eax	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4001327	          0x4889ea	                            mov rdx, rbp	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x400132a	      0xbe00000000	                              mov esi, 0	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x400132f	      0xe800000000	                          call 0x4001334	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4001334	      0xb8ffffffff	                     mov eax, 0xffffffff	      1018	refs.c	FUNCTION_55	IF_1
0x4001339	            0xebbb	                           jmp 0x40012f6	      1018	refs.c	FUNCTION_55	IF_1
0x400133b	      0xb900000000	                              mov ecx, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x4001340	      0xbaf3030000	                          mov edx, 0x3f3	      1011	refs.c	FUNCTION_55	CALL_1
0x4001345	      0xbe00000000	                              mov esi, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x400134a	      0xbf00000000	                              mov edi, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x400134f	      0xe800000000	                          call 0x4001354	      1011	refs.c	FUNCTION_55	CALL_1
0x4001354	            0x89d9	                            mov ecx, ebx	      1022	refs.c	FUNCTION_55	IF_2
0x4001356	      0xba00000000	                              mov edx, 0	      1022	refs.c	FUNCTION_55	IF_2
0x400135b	      0xbefe030000	                          mov esi, 0x3fe	      1022	refs.c	FUNCTION_55	IF_2
0x4001360	      0xbf00000000	                              mov edi, 0	      1022	refs.c	FUNCTION_55	IF_2
0x4001365	            0x31c0	                            xor eax, eax	      1022	refs.c	FUNCTION_55	IF_2
0x4001367	      0xe800000000	                          call 0x400136c	      1022	refs.c	FUNCTION_55	IF_2
rename_ref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	18
0x4003fc0	            0x4154	                                push r12	      2143	refs.c	FUNCTION_122
0x4003fc2	              0x55	                                push rbp	      2143	refs.c	FUNCTION_122
0x4003fc3	          0x4989d4	                            mov r12, rdx	      2143	refs.c	FUNCTION_122
0x4003fc6	              0x53	                                push rbx	      2143	refs.c	FUNCTION_122
0x4003fc7	          0x4889fb	                            mov rbx, rdi	      2143	refs.c	FUNCTION_122
0x4003fca	    0x488b3d000000	            mov rdi, qword [0x04003fd1] 	      2144	refs.c	FUNCTION_122	CALL_2
0x4003fd1	          0x4889f5	                            mov rbp, rsi	      2143	refs.c	FUNCTION_122
0x4003fd4	      0xe800000000	                          call 0x4003fd9	      2144	refs.c	FUNCTION_122	CALL_2
0x4003fd9	          0x488b10	                    mov rdx, qword [rax]	      2139	refs.c	FUNCTION_121	CALL_1
0x4003fdc	          0x4c89e1	                            mov rcx, r12	      2139	refs.c	FUNCTION_121	CALL_1
0x4003fdf	          0x4889de	                            mov rsi, rbx	      2139	refs.c	FUNCTION_121	CALL_1
0x4003fe2	              0x5b	                                 pop rbx	      2145	refs.c	FUNCTION_122
0x4003fe3	          0x4889c7	                            mov rdi, rax	      2139	refs.c	FUNCTION_121	CALL_1
0x4003fe6	        0x4c8b4258	              mov r8, qword [rdx + 0x58]	      2139	refs.c	FUNCTION_121	CALL_1
0x4003fea	          0x4889ea	                            mov rdx, rbp	      2139	refs.c	FUNCTION_121	CALL_1
0x4003fed	              0x5d	                                 pop rbp	      2145	refs.c	FUNCTION_122
0x4003fee	            0x415c	                                 pop r12	      2145	refs.c	FUNCTION_122
0x4003ff0	          0x41ffe0	                                  jmp r8	      2139	refs.c	FUNCTION_121	CALL_1
for_each_ref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	17
0x4001e60	              0x55	                                push rbp	      1397	refs.c	FUNCTION_71
0x4001e61	              0x53	                                push rbx	      1397	refs.c	FUNCTION_71
0x4001e62	          0x4889fb	                            mov rbx, rdi	      1397	refs.c	FUNCTION_71
0x4001e65	          0x4889f5	                            mov rbp, rsi	      1397	refs.c	FUNCTION_71
0x4001e68	        0x4883ec08	                              sub rsp, 8	      1397	refs.c	FUNCTION_71
0x4001e6c	    0x488b3d000000	            mov rdi, qword [0x04001e73] 	      1398	refs.c	FUNCTION_71	CALL_2
0x4001e73	      0xe800000000	                          call 0x4001e78	      1398	refs.c	FUNCTION_71	CALL_2
0x4001e78	        0x4883c408	                              add rsp, 8	      1399	refs.c	FUNCTION_71
0x4001e7c	          0x4989e9	                             mov r9, rbp	      1393	refs.c	FUNCTION_70	CALL_1
0x4001e7f	          0x4889da	                            mov rdx, rbx	      1393	refs.c	FUNCTION_70	CALL_1
0x4001e82	              0x5b	                                 pop rbx	      1399	refs.c	FUNCTION_71
0x4001e83	              0x5d	                                 pop rbp	      1399	refs.c	FUNCTION_71
0x4001e84	          0x4531c0	                            xor r8d, r8d	      1393	refs.c	FUNCTION_70	CALL_1
0x4001e87	            0x31c9	                            xor ecx, ecx	      1393	refs.c	FUNCTION_70	CALL_1
0x4001e89	      0xbe00000000	                              mov esi, 0	      1393	refs.c	FUNCTION_70	CALL_1
0x4001e8e	          0x4889c7	                            mov rdi, rax	      1393	refs.c	FUNCTION_70	CALL_1
0x4001e91	      0xe91af9ffff	                 jmp sym.do_for_each_ref	      1393	refs.c	FUNCTION_70	CALL_1
for_each_reflog_ent	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	18
0x4003ad0	            0x4154	                                push r12	      2052	refs.c	FUNCTION_109
0x4003ad2	              0x55	                                push rbp	      2052	refs.c	FUNCTION_109
0x4003ad3	          0x4989d4	                            mov r12, rdx	      2052	refs.c	FUNCTION_109
0x4003ad6	              0x53	                                push rbx	      2052	refs.c	FUNCTION_109
0x4003ad7	          0x4889fb	                            mov rbx, rdi	      2052	refs.c	FUNCTION_109
0x4003ada	    0x488b3d000000	            mov rdi, qword [0x04003ae1] 	      2053	refs.c	FUNCTION_109	CALL_2
0x4003ae1	          0x4889f5	                            mov rbp, rsi	      2052	refs.c	FUNCTION_109
0x4003ae4	      0xe800000000	                          call 0x4003ae9	      2053	refs.c	FUNCTION_109	CALL_2
0x4003ae9	          0x488b10	                    mov rdx, qword [rax]	      2047	refs.c	FUNCTION_108	CALL_1
0x4003aec	          0x4c89e1	                            mov rcx, r12	      2047	refs.c	FUNCTION_108	CALL_1
0x4003aef	          0x4889de	                            mov rsi, rbx	      2047	refs.c	FUNCTION_108	CALL_1
0x4003af2	              0x5b	                                 pop rbx	      2055	refs.c	FUNCTION_109
0x4003af3	          0x4889c7	                            mov rdi, rax	      2047	refs.c	FUNCTION_108	CALL_1
0x4003af6	    0x4c8b82800000	              mov r8, qword [rdx + 0x80]	      2047	refs.c	FUNCTION_108	CALL_1
0x4003afd	          0x4889ea	                            mov rdx, rbp	      2047	refs.c	FUNCTION_108	CALL_1
0x4003b00	              0x5d	                                 pop rbp	      2055	refs.c	FUNCTION_109
0x4003b01	            0x415c	                                 pop r12	      2055	refs.c	FUNCTION_109
0x4003b03	          0x41ffe0	                                  jmp r8	      2047	refs.c	FUNCTION_108	CALL_1
head_ref_namespaced	CALL,5:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	44
0x4001c80	            0x4154	                                push r12	       404	refs.c	FUNCTION_26
0x4001c82	              0x55	                                push rbp	       404	refs.c	FUNCTION_26
0x4001c83	          0x4989f4	                            mov r12, rsi	       404	refs.c	FUNCTION_26
0x4001c86	              0x53	                                push rbx	       404	refs.c	FUNCTION_26
0x4001c87	          0x4889fd	                            mov rbp, rdi	       404	refs.c	FUNCTION_26
0x4001c8a	            0x31db	                            xor ebx, ebx	       404	refs.c	FUNCTION_26
0x4001c8c	        0x4883ec50	                           sub rsp, 0x50	       404	refs.c	FUNCTION_26
0x4001c90	    0x64488b042528	                mov rax, qword fs:[0x28]	       404	refs.c	FUNCTION_26
0x4001c99	      0x4889442448	             mov qword [rsp + 0x48], rax	       404	refs.c	FUNCTION_26
0x4001c9e	            0x31c0	                            xor eax, eax	       404	refs.c	FUNCTION_26
0x4001ca0	    0x48c744241000	               mov qword [rsp + 0x10], 0	       405	refs.c	FUNCTION_26
0x4001ca9	    0x48c744241800	               mov qword [rsp + 0x18], 0	       405	refs.c	FUNCTION_26
0x4001cb2	    0x48c744242000	               mov qword [rsp + 0x20], 0	       405	refs.c	FUNCTION_26
0x4001cbb	      0xe800000000	                          call 0x4001cc0	       410	refs.c	FUNCTION_26	CALL_2
0x4001cc0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       410	refs.c	FUNCTION_26	CALL_2
0x4001cc5	          0x4889c2	                            mov rdx, rax	       410	refs.c	FUNCTION_26	CALL_2
0x4001cc8	      0xbe00000000	                              mov esi, 0	       410	refs.c	FUNCTION_26	CALL_2
0x4001ccd	            0x31c0	                            xor eax, eax	       410	refs.c	FUNCTION_26	CALL_2
0x4001ccf	      0xe800000000	                          call 0x4001cd4	       410	refs.c	FUNCTION_26	CALL_2
0x4001cd4	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001cd9	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001cde	      0x488d542430	                   lea rdx, [rsp + 0x30]	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001ce3	      0xbe01000000	                              mov esi, 1	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001ce8	      0xe800000000	                          call 0x4001ced	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001ced	            0x85c0	                           test eax, eax	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001cef	            0x7515	                           jne 0x4001d06	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001cf1	          0x4c89e1	                            mov rcx, r12	       412	refs.c	FUNCTION_26	CALL_4
0x4001cf4	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       412	refs.c	FUNCTION_26	CALL_4
0x4001cf8	      0x488d742430	                   lea rsi, [rsp + 0x30]	       412	refs.c	FUNCTION_26	CALL_4
0x4001cfd	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       412	refs.c	FUNCTION_26	CALL_4
0x4001d02	            0xffd5	                                call rbp	       412	refs.c	FUNCTION_26	CALL_4
0x4001d04	            0x89c3	                            mov ebx, eax	       412	refs.c	FUNCTION_26	CALL_4
0x4001d06	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       413	refs.c	FUNCTION_26	CALL_5
0x4001d0b	      0xe800000000	                          call 0x4001d10	       413	refs.c	FUNCTION_26	CALL_5
0x4001d10	            0x89d8	                            mov eax, ebx	       416	refs.c	FUNCTION_26
0x4001d12	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	       416	refs.c	FUNCTION_26
0x4001d17	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       416	refs.c	FUNCTION_26
0x4001d20	            0x7509	                           jne 0x4001d2b	       416	refs.c	FUNCTION_26
0x4001d22	        0x4883c450	                           add rsp, 0x50	       416	refs.c	FUNCTION_26
0x4001d26	              0x5b	                                 pop rbx	       416	refs.c	FUNCTION_26
0x4001d27	              0x5d	                                 pop rbp	       416	refs.c	FUNCTION_26
0x4001d28	            0x415c	                                 pop r12	       416	refs.c	FUNCTION_26
0x4001d2a	              0xc3	                                     ret	       416	refs.c	FUNCTION_26
0x4001d2b	      0xe800000000	               call sym.for_each_tag_ref	       416	refs.c	FUNCTION_26
read_ref_at_ent	CALL,14:IF,10:FOR,0:DO,0:SWITCH,0:ELSE,2:WHILE,0:functions,0	155
0x4000200	            0x4157	                                push r15	       837	refs.c	FUNCTION_48
0x4000202	            0x4156	                                push r14	       837	refs.c	FUNCTION_48
0x4000204	            0x4155	                                push r13	       837	refs.c	FUNCTION_48
0x4000206	            0x4154	                                push r12	       837	refs.c	FUNCTION_48
0x4000208	              0x55	                                push rbp	       837	refs.c	FUNCTION_48
0x4000209	              0x53	                                push rbx	       837	refs.c	FUNCTION_48
0x400020a	        0x4883ec08	                              sub rsp, 8	       837	refs.c	FUNCTION_48
0x400020e	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       837	refs.c	FUNCTION_48
0x4000213	        0x83431401	               add dword [rbx + 0x14], 1	       840	refs.c	FUNCTION_48
0x4000217	        0x483b4b08	                cmp rcx, qword [rbx + 8]	       844	refs.c	FUNCTION_48	IF_1
0x400021b	        0x4489434c	             mov dword [rbx + 0x4c], r8d	       841	refs.c	FUNCTION_48
0x400021f	        0x48894b50	             mov qword [rbx + 0x50], rcx	       842	refs.c	FUNCTION_48
0x4000223	            0x760b	                           jbe 0x4000230	       844	refs.c	FUNCTION_48	IF_1
0x4000225	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       844	refs.c	FUNCTION_48	IF_1
0x4000228	            0x85c0	                           test eax, eax	       844	refs.c	FUNCTION_48	IF_1
0x400022a	     0xf8570010000	                           jne 0x40003a0	       844	refs.c	FUNCTION_48	IF_1
0x4000230	        0x4c8b7b58	            mov r15, qword [rbx + 0x58] 	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000234	          0x4589c6	                           mov r14d, r8d	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000237	          0x4989cd	                            mov r13, rcx	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x400023a	          0x4889f5	                            mov rbp, rsi	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x400023d	          0x4989fc	                            mov r12, rdi	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000240	          0x4d85ff	                           test r15, r15	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000243	            0x740b	                            je 0x4000250	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000245	          0x4c89cf	                             mov rdi, r9	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4000248	      0xe800000000	                          call 0x400024d	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x400024d	          0x498907	                    mov qword [r15], rax	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4000250	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x4000254	          0x4885c0	                           test rax, rax	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x4000257	            0x7403	                            je 0x400025c	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x4000259	          0x4c8928	                    mov qword [rax], r13	       848	refs.c	FUNCTION_48	IF_1	IF_3
0x400025c	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x4000260	          0x4885c0	                           test rax, rax	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x4000263	            0x7403	                            je 0x4000268	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x4000265	          0x448930	                   mov dword [rax], r14d	       850	refs.c	FUNCTION_48	IF_1	IF_4
0x4000268	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x400026c	          0x4885d2	                           test rdx, rdx	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x400026f	            0x7408	                            je 0x4000279	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x4000271	          0x8b4314	            mov eax, dword [rbx + 0x14] 	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x4000274	          0x83e801	                              sub eax, 1	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x4000277	            0x8902	                    mov dword [rdx], eax	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x4000279	        0x4c8d6b24	                   lea r13, [rbx + 0x24]	       990	cache.h	FUNCTION_147	CALL_1
0x400027d	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x4000282	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_144	CALL_1
0x4000287	          0x4c89ef	                            mov rdi, r13	       975	cache.h	FUNCTION_144	CALL_1
0x400028a	      0xe800000000	                          call 0x400028f	       975	cache.h	FUNCTION_144	CALL_1
0x400028f	            0x85c0	                           test eax, eax	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x4000291	     0xf85a1000000	                           jne 0x4000338	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x4000297	        0x488b4308	                mov rax, qword [rbx + 8]	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x400029b	        0x48394350	            cmp qword [rbx + 0x50], rax 	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x400029f	     0xf8443010000	                            je 0x40003e8	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40002a5	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       975	cache.h	FUNCTION_144	CALL_1
0x40002a9	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x40002ae	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_144	CALL_1
0x40002b1	      0xe800000000	                          call 0x40002b6	       975	cache.h	FUNCTION_144	CALL_1
0x40002b6	            0x85c0	                           test eax, eax	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40002b8	            0x754e	                           jne 0x4000308	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40002ba	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_125	CALL_3
0x40002be	        0x48894324	             mov qword [rbx + 0x24], rax	        53	string3.h	FUNCTION_125	CALL_3
0x40002c2	      0x498b442408	                mov rax, qword [r12 + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x40002c7	        0x49894508	                mov qword [r13 + 8], rax	        53	string3.h	FUNCTION_125	CALL_3
0x40002cb	      0x418b442410	            mov eax, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x40002d0	        0x41894510	             mov dword [r13 + 0x10], eax	        53	string3.h	FUNCTION_125	CALL_3
0x40002d4	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_125	CALL_3
0x40002d8	      0xb801000000	                              mov eax, 1	       872	refs.c	FUNCTION_48	IF_1
0x40002dd	        0x48895338	             mov qword [rbx + 0x38], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x40002e1	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x40002e5	        0x48895340	             mov qword [rbx + 0x40], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x40002e9	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x40002ec	    0xc74320010000	               mov dword [rbx + 0x20], 1	       871	refs.c	FUNCTION_48	IF_1
0x40002f3	          0x895348	             mov dword [rbx + 0x48], edx	        53	string3.h	FUNCTION_125	CALL_3
0x40002f6	        0x4883c408	                              add rsp, 8	       879	refs.c	FUNCTION_48
0x40002fa	              0x5b	                                 pop rbx	       879	refs.c	FUNCTION_48
0x40002fb	              0x5d	                                 pop rbp	       879	refs.c	FUNCTION_48
0x40002fc	            0x415c	                                 pop r12	       879	refs.c	FUNCTION_48
0x40002fe	            0x415d	                                 pop r13	       879	refs.c	FUNCTION_48
0x4000300	            0x415e	                                 pop r14	       879	refs.c	FUNCTION_48
0x4000302	            0x415f	                                 pop r15	       879	refs.c	FUNCTION_48
0x4000304	              0xc3	                                     ret	       879	refs.c	FUNCTION_48
0x4000305	           0xf1f00	                         nop dword [rax]	       879	refs.c	FUNCTION_48
0x4000308	      0xbf05000000	                              mov edi, 5	       868	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9
0x400030d	      0xe800000000	                          call 0x4000312	       868	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9
0x4000312	          0x8b734c	            mov esi, dword [rbx + 0x4c] 	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000315	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000319	          0x4889c2	                            mov rdx, rax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x400031c	      0xe800000000	                          call 0x4000321	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000321	          0x488b33	                    mov rsi, qword [rbx]	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000324	          0x4889c2	                            mov rdx, rax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000327	      0xbf00000000	                              mov edi, 0	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x400032c	            0x31c0	                            xor eax, eax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x400032e	      0xe800000000	                          call 0x4000333	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000333	            0xeb85	                           jmp 0x40002ba	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000335	           0xf1f00	                         nop dword [rax]	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000338	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_125	CALL_3
0x400033c	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_125	CALL_3
0x4000340	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_144	CALL_1
0x4000343	          0x4c89ef	                            mov rdi, r13	       975	cache.h	FUNCTION_144	CALL_1
0x4000346	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x4000349	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x400034d	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x4000351	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x4000354	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_125	CALL_3
0x4000357	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x400035c	      0xe800000000	                          call 0x4000361	       975	cache.h	FUNCTION_144	CALL_1
0x4000361	            0x85c0	                           test eax, eax	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x4000363	     0xf8451ffffff	                            je 0x40002ba	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x4000369	      0xbf05000000	                              mov edi, 5	       861	refs.c	FUNCTION_48	IF_1	IF_6	CALL_6
0x400036e	      0xe800000000	                          call 0x4000373	       861	refs.c	FUNCTION_48	IF_1	IF_6	CALL_6
0x4000373	          0x8b734c	            mov esi, dword [rbx + 0x4c] 	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4000376	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400037a	          0x4889c2	                            mov rdx, rax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400037d	      0xe800000000	                          call 0x4000382	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4000382	          0x488b33	                    mov rsi, qword [rbx]	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4000385	          0x4889c2	                            mov rdx, rax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4000388	      0xbf00000000	                              mov edi, 0	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400038d	            0x31c0	                            xor eax, eax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400038f	      0xe800000000	                          call 0x4000394	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4000394	      0xe921ffffff	                           jmp 0x40002ba	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4000399	     0xf1f80000000	                         nop dword [rax]	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40003a0	          0x488b0f	                    mov rcx, qword [rdi]	        53	string3.h	FUNCTION_125	CALL_3
0x40003a3	            0x85c0	                           test eax, eax	       876	refs.c	FUNCTION_48	IF_10
0x40003a5	        0x48894b24	             mov qword [rbx + 0x24], rcx	        53	string3.h	FUNCTION_125	CALL_3
0x40003a9	        0x488b4f08	                mov rcx, qword [rdi + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x40003ad	        0x48894b2c	             mov qword [rbx + 0x2c], rcx	        53	string3.h	FUNCTION_125	CALL_3
0x40003b1	          0x8b4f10	            mov ecx, dword [rdi + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x40003b4	          0x894b34	             mov dword [rbx + 0x34], ecx	        53	string3.h	FUNCTION_125	CALL_3
0x40003b7	          0x488b0e	                    mov rcx, qword [rsi]	        53	string3.h	FUNCTION_125	CALL_3
0x40003ba	        0x48894b38	             mov qword [rbx + 0x38], rcx	        53	string3.h	FUNCTION_125	CALL_3
0x40003be	        0x488b4e08	                mov rcx, qword [rsi + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x40003c2	        0x48894b40	             mov qword [rbx + 0x40], rcx	        53	string3.h	FUNCTION_125	CALL_3
0x40003c6	          0x8b4e10	            mov ecx, dword [rsi + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x40003c9	          0x894b48	             mov dword [rbx + 0x48], ecx	        53	string3.h	FUNCTION_125	CALL_3
0x40003cc	            0x7e42	                           jle 0x4000410	       876	refs.c	FUNCTION_48	IF_10
0x40003ce	          0x83e801	                              sub eax, 1	       877	refs.c	FUNCTION_48	IF_10
0x40003d1	          0x894310	             mov dword [rbx + 0x10], eax	       877	refs.c	FUNCTION_48	IF_10
0x40003d4	        0x4883c408	                              add rsp, 8	       879	refs.c	FUNCTION_48
0x40003d8	            0x31c0	                            xor eax, eax	       878	refs.c	FUNCTION_48
0x40003da	              0x5b	                                 pop rbx	       879	refs.c	FUNCTION_48
0x40003db	              0x5d	                                 pop rbp	       879	refs.c	FUNCTION_48
0x40003dc	            0x415c	                                 pop r12	       879	refs.c	FUNCTION_48
0x40003de	            0x415d	                                 pop r13	       879	refs.c	FUNCTION_48
0x40003e0	            0x415e	                                 pop r14	       879	refs.c	FUNCTION_48
0x40003e2	            0x415f	                                 pop r15	       879	refs.c	FUNCTION_48
0x40003e4	              0xc3	                                     ret	       879	refs.c	FUNCTION_48
0x40003e5	           0xf1f00	                         nop dword [rax]	       879	refs.c	FUNCTION_48
0x40003e8	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_125	CALL_3
0x40003ec	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_125	CALL_3
0x40003f0	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x40003f3	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_125	CALL_3
0x40003f7	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_125	CALL_3
0x40003fb	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_125	CALL_3
0x40003fe	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_125	CALL_3
0x4000401	      0xe9b4feffff	                           jmp 0x40002ba	        53	string3.h	FUNCTION_125	CALL_3
0x4000406	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        53	string3.h	FUNCTION_125	CALL_3
0x4000410	            0x31c0	                            xor eax, eax	       878	refs.c	FUNCTION_48
0x4000412	      0xe9dffeffff	                           jmp 0x40002f6	       878	refs.c	FUNCTION_48
delete_ref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	22
0x4003240	            0x4155	                                push r13	       770	refs.c	FUNCTION_44
0x4003242	            0x4154	                                push r12	       770	refs.c	FUNCTION_44
0x4003244	          0x4189cd	                           mov r13d, ecx	       770	refs.c	FUNCTION_44
0x4003247	              0x55	                                push rbp	       770	refs.c	FUNCTION_44
0x4003248	              0x53	                                push rbx	       770	refs.c	FUNCTION_44
0x4003249	          0x4889fb	                            mov rbx, rdi	       770	refs.c	FUNCTION_44
0x400324c	          0x4889f5	                            mov rbp, rsi	       770	refs.c	FUNCTION_44
0x400324f	          0x4989d4	                            mov r12, rdx	       770	refs.c	FUNCTION_44
0x4003252	        0x4883ec08	                              sub rsp, 8	       770	refs.c	FUNCTION_44
0x4003256	    0x488b3d000000	            mov rdi, qword [0x0400325d] 	       771	refs.c	FUNCTION_44	CALL_2
0x400325d	      0xe800000000	                          call 0x4003262	       771	refs.c	FUNCTION_44	CALL_2
0x4003262	        0x4883c408	                              add rsp, 8	       773	refs.c	FUNCTION_44
0x4003266	          0x4589e8	                           mov r8d, r13d	       771	refs.c	FUNCTION_44	CALL_2
0x4003269	          0x4c89e1	                            mov rcx, r12	       771	refs.c	FUNCTION_44	CALL_2
0x400326c	          0x4889ea	                            mov rdx, rbp	       771	refs.c	FUNCTION_44	CALL_2
0x400326f	          0x4889de	                            mov rsi, rbx	       771	refs.c	FUNCTION_44	CALL_2
0x4003272	          0x4889c7	                            mov rdi, rax	       771	refs.c	FUNCTION_44	CALL_2
0x4003275	              0x5b	                                 pop rbx	       773	refs.c	FUNCTION_44
0x4003276	              0x5d	                                 pop rbp	       773	refs.c	FUNCTION_44
0x4003277	            0x415c	                                 pop r12	       773	refs.c	FUNCTION_44
0x4003279	            0x415d	                                 pop r13	       773	refs.c	FUNCTION_44
0x400327b	      0xe950fdffff	                 jmp sym.refs_delete_ref	       771	refs.c	FUNCTION_44	CALL_2
ref_resolves_to_object	CALL,1:IF,2:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	36
0x4000880	              0x55	                                push rbp	       187	refs.c	FUNCTION_6
0x4000881	              0x53	                                push rbx	       187	refs.c	FUNCTION_6
0x4000882	            0x31db	                            xor ebx, ebx	       189	refs.c	FUNCTION_6	IF_1
0x4000884	        0x4883ec08	                              sub rsp, 8	       187	refs.c	FUNCTION_6
0x4000888	          0x83e204	                              and edx, 4	       188	refs.c	FUNCTION_6	IF_1
0x400088b	            0x7413	                            je 0x40008a0	       188	refs.c	FUNCTION_6	IF_1
0x400088d	        0x4883c408	                              add rsp, 8	       195	refs.c	FUNCTION_6
0x4000891	            0x89d8	                            mov eax, ebx	       195	refs.c	FUNCTION_6
0x4000893	              0x5b	                                 pop rbx	       195	refs.c	FUNCTION_6
0x4000894	              0x5d	                                 pop rbp	       195	refs.c	FUNCTION_6
0x4000895	              0xc3	                                     ret	       195	refs.c	FUNCTION_6
0x4000896	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       195	refs.c	FUNCTION_6
0x40008a0	          0x4889f0	                            mov rax, rsi	       195	refs.c	FUNCTION_6
0x40008a3	          0x4889fd	                            mov rbp, rdi	       195	refs.c	FUNCTION_6
0x40008a6	            0x31f6	                            xor esi, esi	      1251	cache.h	FUNCTION_159	CALL_1
0x40008a8	          0x4889c7	                            mov rdi, rax	      1251	cache.h	FUNCTION_159	CALL_1
0x40008ab	      0xe800000000	                          call 0x40008b0	      1251	cache.h	FUNCTION_159	CALL_1
0x40008b0	            0x85c0	                           test eax, eax	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x40008b2	            0x89c3	                            mov ebx, eax	      1251	cache.h	FUNCTION_159	CALL_1
0x40008b4	            0x7412	                            je 0x40008c8	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x40008b6	      0xbb01000000	                              mov ebx, 1	       194	refs.c	FUNCTION_6
0x40008bb	        0x4883c408	                              add rsp, 8	       195	refs.c	FUNCTION_6
0x40008bf	            0x89d8	                            mov eax, ebx	       195	refs.c	FUNCTION_6
0x40008c1	              0x5b	                                 pop rbx	       195	refs.c	FUNCTION_6
0x40008c2	              0x5d	                                 pop rbp	       195	refs.c	FUNCTION_6
0x40008c3	              0xc3	                                     ret	       195	refs.c	FUNCTION_6
0x40008c4	         0xf1f4000	                         nop dword [rax]	       195	refs.c	FUNCTION_6
0x40008c8	          0x4889ee	                            mov rsi, rbp	       191	refs.c	FUNCTION_6	IF_2
0x40008cb	      0xbf00000000	                              mov edi, 0	       191	refs.c	FUNCTION_6	IF_2
0x40008d0	            0x31c0	                            xor eax, eax	       191	refs.c	FUNCTION_6	IF_2
0x40008d2	      0xe800000000	                          call 0x40008d7	       191	refs.c	FUNCTION_6	IF_2
0x40008d7	        0x4883c408	                              add rsp, 8	       195	refs.c	FUNCTION_6
0x40008db	            0x89d8	                            mov eax, ebx	       195	refs.c	FUNCTION_6
0x40008dd	              0x5b	                                 pop rbx	       195	refs.c	FUNCTION_6
0x40008de	              0x5d	                                 pop rbp	       195	refs.c	FUNCTION_6
0x40008df	              0xc3	                                     ret	       195	refs.c	FUNCTION_6
normalize_glob_ref	CALL,8:IF,3:FOR,0:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0	110
0x4000a50	            0x4155	                                push r13	       420	refs.c	FUNCTION_27
0x4000a52	            0x4154	                                push r12	       420	refs.c	FUNCTION_27
0x4000a54	              0x55	                                push rbp	       420	refs.c	FUNCTION_27
0x4000a55	              0x53	                                push rbx	       420	refs.c	FUNCTION_27
0x4000a56	        0x4883ec28	                           sub rsp, 0x28	       420	refs.c	FUNCTION_27
0x4000a5a	    0x64488b042528	                mov rax, qword fs:[0x28]	       420	refs.c	FUNCTION_27
0x4000a63	      0x4889442418	             mov qword [rsp + 0x18], rax	       420	refs.c	FUNCTION_27
0x4000a68	            0x31c0	                            xor eax, eax	       420	refs.c	FUNCTION_27
0x4000a6a	          0x803a2f	                    cmp byte [rdx], 0x2f	       423	refs.c	FUNCTION_27	IF_1
0x4000a6d	    0x48c704240000	                      mov qword [rsp], 0	       421	refs.c	FUNCTION_27
0x4000a75	    0x48c744240800	                  mov qword [rsp + 8], 0	       421	refs.c	FUNCTION_27
0x4000a7e	    0x48c744241000	               mov qword [rsp + 0x10], 0	       421	refs.c	FUNCTION_27
0x4000a87	     0xf8454010000	                            je 0x4000be1	       423	refs.c	FUNCTION_27	IF_1
0x4000a8d	          0x4885f6	                           test rsi, rsi	       426	refs.c	FUNCTION_27	IF_2
0x4000a90	          0x4989fc	                            mov r12, rdi	       426	refs.c	FUNCTION_27	IF_2
0x4000a93	          0x4989f5	                            mov r13, rsi	       426	refs.c	FUNCTION_27	IF_2
0x4000a96	          0x4889d3	                            mov rbx, rdx	       426	refs.c	FUNCTION_27	IF_2
0x4000a99	     0xf8401010000	                            je 0x4000ba0	       426	refs.c	FUNCTION_27	IF_2
0x4000a9f	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000aa2	          0x4889e5	                            mov rbp, rsp	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000aa5	      0xe800000000	                          call 0x4000aaa	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000aaa	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000aad	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000ab0	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000ab3	      0xe800000000	                          call 0x4000ab8	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000ab8	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000abb	      0xe800000000	                          call 0x4000ac0	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000ac0	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000ac3	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000ac6	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000ac9	      0xe800000000	                          call 0x4000ace	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000ace	      0x488b442408	                mov rax, qword [rsp + 8]	       540	git-compat-util.h	FUNCTION_224	IF_1	CALL_2
0x4000ad3	          0x4885c0	                           test rax, rax	       540	git-compat-util.h	FUNCTION_224	IF_1	CALL_2
0x4000ad6	            0x743c	                            je 0x4000b14	       540	git-compat-util.h	FUNCTION_224	IF_1	CALL_2
0x4000ad8	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       496	strbuf.h	FUNCTION_191	IF_1	CALL_1
0x4000add	        0x4883e801	                              sub rax, 1	       540	git-compat-util.h	FUNCTION_224	IF_1	CALL_2
0x4000ae1	        0x488d3401	                    lea rsi, [rcx + rax]	       540	git-compat-util.h	FUNCTION_224	IF_1	CALL_2
0x4000ae5	          0x803e2f	                    cmp byte [rsi], 0x2f	       540	git-compat-util.h	FUNCTION_224	IF_1	CALL_2
0x4000ae8	            0x752a	                           jne 0x4000b14	       540	git-compat-util.h	FUNCTION_224	IF_1	CALL_2
0x4000aea	        0x488b1424	                    mov rdx, qword [rsp]	       162	strbuf.h	FUNCTION_188	IF_1
0x4000aee	      0x4889442408	                mov qword [rsp + 8], rax	       542	git-compat-util.h	FUNCTION_224
0x4000af3	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_188	IF_1
0x4000af7	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_188	IF_1
0x4000afb	          0x4839d0	                            cmp rax, rdx	       162	strbuf.h	FUNCTION_188	IF_1
0x4000afe	     0xf87f6000000	                            ja 0x4000bfa	       162	strbuf.h	FUNCTION_188	IF_1
0x4000b04	    0x4881f9000000	                              cmp rcx, 0	       165	strbuf.h	FUNCTION_188	IF_2
0x4000b0b	     0xf84be000000	                            je 0x4000bcf	       165	strbuf.h	FUNCTION_188	IF_2
0x4000b11	          0xc60600	                       mov byte [rsi], 0	       166	strbuf.h	FUNCTION_188	IF_2
0x4000b14	            0x31f6	                            xor esi, esi	       434	refs.c	FUNCTION_27	CALL_6
0x4000b16	          0x4889ef	                            mov rdi, rbp	       434	refs.c	FUNCTION_27	CALL_6
0x4000b19	      0xe800000000	                          call 0x4000b1e	       434	refs.c	FUNCTION_27	CALL_6
0x4000b1e	        0x49890424	                    mov qword [r12], rax	       434	refs.c	FUNCTION_27	CALL_6
0x4000b22	           0xfb613	                   movzx edx, byte [rbx]	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b25	            0x84d2	                             test dl, dl	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b27	            0x7432	                            je 0x4000b5b	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b29	          0x83ea2a	                           sub edx, 0x2a	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b2c	          0x80fa31	                            cmp dl, 0x31	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b2f	            0x7657	                           jbe 0x4000b88	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b31	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_210	WHILE_1
0x4000b3b	       0xf1f440000	                   nop dword [rax + rax]	      1115	string2.h	FUNCTION_210	WHILE_1
0x4000b40	        0x4883c301	                              add rbx, 1	      1116	string2.h	FUNCTION_210	WHILE_1
0x4000b44	           0xfb613	                   movzx edx, byte [rbx]	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b47	            0x84d2	                             test dl, dl	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b49	            0x7410	                            je 0x4000b5b	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b4b	          0x83ea2a	                           sub edx, 0x2a	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b4e	          0x80fa31	                            cmp dl, 0x31	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b51	            0x77ed	                            ja 0x4000b40	      1114	string2.h	FUNCTION_210	WHILE_1
0x4000b53	        0x480fa3d1	                             bt rcx, rdx	      1115	string2.h	FUNCTION_210	WHILE_1
0x4000b57	            0x73e7	                           jae 0x4000b40	      1115	string2.h	FUNCTION_210	WHILE_1
0x4000b59	            0x31c0	                            xor eax, eax	       435	refs.c	FUNCTION_27	CALL_7
0x4000b5b	      0x4989442408	                mov qword [r12 + 8], rax	       435	refs.c	FUNCTION_27	CALL_7
0x4000b60	          0x4889ef	                            mov rdi, rbp	       436	refs.c	FUNCTION_27	CALL_8
0x4000b63	      0xe800000000	                          call 0x4000b68	       436	refs.c	FUNCTION_27	CALL_8
0x4000b68	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       437	refs.c	FUNCTION_27
0x4000b6d	    0x644833042528	                xor rax, qword fs:[0x28]	       437	refs.c	FUNCTION_27
0x4000b76	            0x757d	                           jne 0x4000bf5	       437	refs.c	FUNCTION_27
0x4000b78	        0x4883c428	                           add rsp, 0x28	       437	refs.c	FUNCTION_27
0x4000b7c	              0x5b	                                 pop rbx	       437	refs.c	FUNCTION_27
0x4000b7d	              0x5d	                                 pop rbp	       437	refs.c	FUNCTION_27
0x4000b7e	            0x415c	                                 pop r12	       437	refs.c	FUNCTION_27
0x4000b80	            0x415d	                                 pop r13	       437	refs.c	FUNCTION_27
0x4000b82	              0xc3	                                     ret	       437	refs.c	FUNCTION_27
0x4000b83	       0xf1f440000	                   nop dword [rax + rax]	       437	refs.c	FUNCTION_27
0x4000b88	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_210	WHILE_1
0x4000b92	        0x480fa3d1	                             bt rcx, rdx	      1115	string2.h	FUNCTION_210	WHILE_1
0x4000b96	            0x7399	                           jae 0x4000b31	      1115	string2.h	FUNCTION_210	WHILE_1
0x4000b98	            0xebbf	                           jmp 0x4000b59	      1115	string2.h	FUNCTION_210	WHILE_1
0x4000b9a	    0x660f1f440000	                    nop word [rax + rax]	      1115	string2.h	FUNCTION_210	WHILE_1
0x4000ba0	      0xbe00000000	                              mov esi, 0	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4000ba5	          0x4889d7	                            mov rdi, rdx	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4000ba8	          0x4889e5	                            mov rbp, rsp	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4000bab	      0xe800000000	                          call 0x4000bb0	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4000bb0	            0x85c0	                           test eax, eax	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4000bb2	     0xf8500ffffff	                           jne 0x4000ab8	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4000bb8	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000bbd	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000bc2	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000bc5	      0xe800000000	                          call 0x4000bca	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000bca	      0xe9e9feffff	                           jmp 0x4000ab8	       279	strbuf.h	FUNCTION_190	CALL_2
0x4000bcf	    0x803d00000000	                cmp byte [0x04000bd6], 0	       168	strbuf.h	FUNCTION_188	CALL_2
0x4000bd6	     0xf8438ffffff	                            je 0x4000b14	       168	strbuf.h	FUNCTION_188	CALL_2
0x4000bdc	      0xe800000000	                          call 0x4000be1	       168	strbuf.h	FUNCTION_188	CALL_2
0x4000be1	      0xba00000000	                              mov edx, 0	       424	refs.c	FUNCTION_27	IF_1
0x4000be6	      0xbea8010000	                          mov esi, 0x1a8	       424	refs.c	FUNCTION_27	IF_1
0x4000beb	      0xbf00000000	                              mov edi, 0	       424	refs.c	FUNCTION_27	IF_1
0x4000bf0	      0xe800000000	                          call 0x4000bf5	       424	refs.c	FUNCTION_27	IF_1
0x4000bf5	      0xe800000000	                          call 0x4000bfa	       437	refs.c	FUNCTION_27
0x4000bfa	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_188	CALL_1
0x4000bff	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_188	CALL_1
0x4000c01	      0xe800000000	                          call 0x4000c06	       163	strbuf.h	FUNCTION_188	CALL_1
ref_transaction_begin	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	18
0x4001df0	              0x55	                                push rbp	       946	refs.c	FUNCTION_52
0x4001df1	              0x53	                                push rbx	       946	refs.c	FUNCTION_52
0x4001df2	          0x4889fb	                            mov rbx, rdi	       946	refs.c	FUNCTION_52
0x4001df5	        0x4883ec08	                              sub rsp, 8	       946	refs.c	FUNCTION_52
0x4001df9	    0x488b3d000000	            mov rdi, qword [0x04001e00] 	       947	refs.c	FUNCTION_52	CALL_2
0x4001e00	      0xe800000000	                          call 0x4001e05	       947	refs.c	FUNCTION_52	CALL_2
0x4001e05	          0x4885db	                           test rbx, rbx	       938	refs.c	FUNCTION_51	CALL_1
0x4001e08	            0x741c	                            je 0x4001e26	       938	refs.c	FUNCTION_51	CALL_1
0x4001e0a	          0x4889c5	                            mov rbp, rax	       938	refs.c	FUNCTION_51	CALL_1
0x4001e0d	      0xbe30000000	                           mov esi, 0x30	       940	refs.c	FUNCTION_51	CALL_2
0x4001e12	      0xbf01000000	                              mov edi, 1	       940	refs.c	FUNCTION_51	CALL_2
0x4001e17	      0xe800000000	                          call 0x4001e1c	       940	refs.c	FUNCTION_51	CALL_2
0x4001e1c	          0x488928	                    mov qword [rax], rbp	       941	refs.c	FUNCTION_51
0x4001e1f	        0x4883c408	                              add rsp, 8	       948	refs.c	FUNCTION_52
0x4001e23	              0x5b	                                 pop rbx	       948	refs.c	FUNCTION_52
0x4001e24	              0x5d	                                 pop rbp	       948	refs.c	FUNCTION_52
0x4001e25	              0xc3	                                     ret	       948	refs.c	FUNCTION_52
0x4001e26	      0xe800000000	                          call 0x4001e2b	       948	refs.c	FUNCTION_52
ref_storage_backend_exists	CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	7
0x4000690	        0x4883ec08	                              sub rsp, 8	        34	refs.c	FUNCTION_2
0x4000694	      0xe8a7f9ffff	       call sym.find_ref_storage_backend	        35	refs.c	FUNCTION_2	CALL_1
0x4000699	          0x4885c0	                           test rax, rax	        35	refs.c	FUNCTION_2	CALL_1
0x400069c	           0xf95c0	                                setne al	        35	refs.c	FUNCTION_2	CALL_1
0x400069f	        0x4883c408	                              add rsp, 8	        36	refs.c	FUNCTION_2
0x40006a3	           0xfb6c0	                           movzx eax, al	        35	refs.c	FUNCTION_2	CALL_1
0x40006a6	              0xc3	                                     ret	        36	refs.c	FUNCTION_2
warn_dangling_symrefs	CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	17
0x40022e0	        0x4883ec38	                           sub rsp, 0x38	       363	refs.c	FUNCTION_19
0x40022e4	        0x48893c24	                    mov qword [rsp], rdi	       366	refs.c	FUNCTION_19
0x40022e8	      0x4889742418	             mov qword [rsp + 0x18], rsi	       369	refs.c	FUNCTION_19
0x40022ed	      0xbf00000000	                              mov edi, 0	       370	refs.c	FUNCTION_19	CALL_1
0x40022f2	          0x4889e6	                            mov rsi, rsp	       370	refs.c	FUNCTION_19	CALL_1
0x40022f5	    0x48c744240800	                  mov qword [rsp + 8], 0	       367	refs.c	FUNCTION_19
0x40022fe	      0x4889542410	             mov qword [rsp + 0x10], rdx	       368	refs.c	FUNCTION_19
0x4002303	    0x64488b042528	                mov rax, qword fs:[0x28]	       363	refs.c	FUNCTION_19
0x400230c	      0x4889442428	             mov qword [rsp + 0x28], rax	       363	refs.c	FUNCTION_19
0x4002311	            0x31c0	                            xor eax, eax	       363	refs.c	FUNCTION_19
0x4002313	      0xe800000000	                          call 0x4002318	       370	refs.c	FUNCTION_19	CALL_1
0x4002318	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       371	refs.c	FUNCTION_19
0x400231d	    0x644833042528	                xor rax, qword fs:[0x28]	       371	refs.c	FUNCTION_19
0x4002326	            0x7505	                           jne 0x400232d	       371	refs.c	FUNCTION_19
0x4002328	        0x4883c438	                           add rsp, 0x38	       371	refs.c	FUNCTION_19
0x400232c	              0xc3	                                     ret	       371	refs.c	FUNCTION_19
0x400232d	      0xe800000000	                          call 0x4002332	       371	refs.c	FUNCTION_19
should_autocreate_reflog	CALL,3:IF,0:FOR,0:DO,0:SWITCH,1:ELSE,0:WHILE,0:functions,0	36
0x4000f10	    0x8b0500000000	            mov eax, dword [0x04000f16] 	       798	refs.c	FUNCTION_46	SWITCH_1
0x4000f16	          0x83f801	                              cmp eax, 1	       798	refs.c	FUNCTION_46	SWITCH_1
0x4000f19	            0x740d	                            je 0x4000f28	       798	refs.c	FUNCTION_46	SWITCH_1
0x4000f1b	          0x83f802	                              cmp eax, 2	       807	refs.c	FUNCTION_46	SWITCH_1
0x4000f1e	           0xf94c0	                                 sete al	       807	refs.c	FUNCTION_46	SWITCH_1
0x4000f21	           0xfb6c0	                           movzx eax, al	       807	refs.c	FUNCTION_46	SWITCH_1
0x4000f24	              0xc3	                                     ret	       809	refs.c	FUNCTION_46
0x4000f25	           0xf1f00	                         nop dword [rax]	       809	refs.c	FUNCTION_46
0x4000f28	              0x53	                                push rbx	       797	refs.c	FUNCTION_46
0x4000f29	      0xbe00000000	                              mov esi, 0	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4000f2e	          0x4889fb	                            mov rbx, rdi	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4000f31	      0xe800000000	                          call 0x4000f36	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4000f36	            0x85c0	                           test eax, eax	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000f38	            0x740e	                            je 0x4000f48	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000f3a	      0xb801000000	                              mov eax, 1	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000f3f	              0x5b	                                 pop rbx	       809	refs.c	FUNCTION_46
0x4000f40	              0xc3	                                     ret	       809	refs.c	FUNCTION_46
0x4000f41	     0xf1f80000000	                         nop dword [rax]	       809	refs.c	FUNCTION_46
0x4000f48	      0xbe00000000	                              mov esi, 0	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000f4d	          0x4889df	                            mov rdi, rbx	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000f50	      0xe800000000	                          call 0x4000f55	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000f55	            0x85c0	                           test eax, eax	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4000f57	            0x75e1	                           jne 0x4000f3a	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4000f59	      0xbe00000000	                              mov esi, 0	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000f5e	          0x4889df	                            mov rdi, rbx	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000f61	      0xe800000000	                          call 0x4000f66	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000f66	            0x85c0	                           test eax, eax	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000f68	            0x75d0	                           jne 0x4000f3a	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000f6a	          0x4889de	                            mov rsi, rbx	       805	refs.c	FUNCTION_46	SWITCH_1
0x4000f6d	      0xbf00000000	                              mov edi, 0	       805	refs.c	FUNCTION_46	SWITCH_1
0x4000f72	      0xb905000000	                              mov ecx, 5	       805	refs.c	FUNCTION_46	SWITCH_1
0x4000f77	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       800	refs.c	FUNCTION_46	SWITCH_1
0x4000f79	              0x5b	                                 pop rbx	       809	refs.c	FUNCTION_46
0x4000f7a	           0xf94c0	                                 sete al	       800	refs.c	FUNCTION_46	SWITCH_1
0x4000f7d	           0xfb6c0	                           movzx eax, al	       800	refs.c	FUNCTION_46	SWITCH_1
0x4000f80	              0xc3	                                     ret	       809	refs.c	FUNCTION_46
refs_resolve_refdup	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	11
0x4001ae0	        0x4883ec08	                              sub rsp, 8	       200	refs.c	FUNCTION_7
0x4001ae4	      0xe800000000	                          call 0x4001ae9	       203	refs.c	FUNCTION_7	CALL_1
0x4001ae9	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_233	CALL_1
0x4001aec	            0x7412	                            je 0x4001b00	       924	git-compat-util.h	FUNCTION_233	CALL_1
0x4001aee	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_233	CALL_1
0x4001af1	        0x4883c408	                              add rsp, 8	       206	refs.c	FUNCTION_7
0x4001af5	      0xe900000000	                           jmp 0x4001afa	       924	git-compat-util.h	FUNCTION_233	CALL_1
0x4001afa	    0x660f1f440000	                    nop word [rax + rax]	       924	git-compat-util.h	FUNCTION_233	CALL_1
0x4001b00	            0x31c0	                            xor eax, eax	       206	refs.c	FUNCTION_7
0x4001b02	        0x4883c408	                              add rsp, 8	       206	refs.c	FUNCTION_7
0x4001b06	              0xc3	                                     ret	       206	refs.c	FUNCTION_7
resolve_refdup	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	22
0x4001be0	            0x4155	                                push r13	       210	refs.c	FUNCTION_8
0x4001be2	            0x4154	                                push r12	       210	refs.c	FUNCTION_8
0x4001be4	          0x4989cd	                            mov r13, rcx	       210	refs.c	FUNCTION_8
0x4001be7	              0x55	                                push rbp	       210	refs.c	FUNCTION_8
0x4001be8	              0x53	                                push rbx	       210	refs.c	FUNCTION_8
0x4001be9	          0x4889fb	                            mov rbx, rdi	       210	refs.c	FUNCTION_8
0x4001bec	            0x89f5	                            mov ebp, esi	       210	refs.c	FUNCTION_8
0x4001bee	          0x4989d4	                            mov r12, rdx	       210	refs.c	FUNCTION_8
0x4001bf1	        0x4883ec08	                              sub rsp, 8	       210	refs.c	FUNCTION_8
0x4001bf5	    0x488b3d000000	            mov rdi, qword [0x04001bfc] 	       211	refs.c	FUNCTION_8	CALL_2
0x4001bfc	      0xe800000000	                          call 0x4001c01	       211	refs.c	FUNCTION_8	CALL_2
0x4001c01	        0x4883c408	                              add rsp, 8	       214	refs.c	FUNCTION_8
0x4001c05	          0x4d89e8	                             mov r8, r13	       211	refs.c	FUNCTION_8	CALL_2
0x4001c08	          0x4c89e1	                            mov rcx, r12	       211	refs.c	FUNCTION_8	CALL_2
0x4001c0b	            0x89ea	                            mov edx, ebp	       211	refs.c	FUNCTION_8	CALL_2
0x4001c0d	          0x4889de	                            mov rsi, rbx	       211	refs.c	FUNCTION_8	CALL_2
0x4001c10	          0x4889c7	                            mov rdi, rax	       211	refs.c	FUNCTION_8	CALL_2
0x4001c13	              0x5b	                                 pop rbx	       214	refs.c	FUNCTION_8
0x4001c14	              0x5d	                                 pop rbp	       214	refs.c	FUNCTION_8
0x4001c15	            0x415c	                                 pop r12	       214	refs.c	FUNCTION_8
0x4001c17	            0x415d	                                 pop r13	       214	refs.c	FUNCTION_8
0x4001c19	      0xe9c2feffff	             jmp sym.refs_resolve_refdup	       211	refs.c	FUNCTION_8	CALL_2
expand_ref	CALL,6:IF,5:FOR,1:DO,0:SWITCH,0:ELSE,2:WHILE,0:functions,0	120
0x4002770	            0x4157	                                push r15	       548	refs.c	FUNCTION_35
0x4002772	            0x4156	                                push r14	       548	refs.c	FUNCTION_35
0x4002774	            0x4155	                                push r13	       548	refs.c	FUNCTION_35
0x4002776	            0x4154	                                push r12	       548	refs.c	FUNCTION_35
0x4002778	          0x4189f5	                           mov r13d, esi	       548	refs.c	FUNCTION_35
0x400277b	              0x55	                                push rbp	       548	refs.c	FUNCTION_35
0x400277c	              0x53	                                push rbx	       548	refs.c	FUNCTION_35
0x400277d	        0x4883ec68	                           sub rsp, 0x68	       548	refs.c	FUNCTION_35
0x4002781	    0x48c701000000	                      mov qword [rcx], 0	       553	refs.c	FUNCTION_35
0x4002788	    0x64488b342528	                mov rsi, qword fs:[0x28]	       548	refs.c	FUNCTION_35
0x4002791	      0x4889742458	             mov qword [rsp + 0x58], rsi	       548	refs.c	FUNCTION_35
0x4002796	            0x31f6	                            xor esi, esi	       548	refs.c	FUNCTION_35
0x4002798	    0x48833d000000	               cmp qword [0x040027a0], 0	       554	refs.c	FUNCTION_35	FOR_1
0x40027a0	        0x48891424	                    mov qword [rsp], rdx	       548	refs.c	FUNCTION_35
0x40027a4	      0x48894c2408	                mov qword [rsp + 8], rcx	       548	refs.c	FUNCTION_35
0x40027a9	    0x48c744242000	               mov qword [rsp + 0x20], 0	       551	refs.c	FUNCTION_35
0x40027b2	    0x48c744242800	               mov qword [rsp + 0x28], 0	       551	refs.c	FUNCTION_35
0x40027bb	    0x48c744243000	               mov qword [rsp + 0x30], 0	       551	refs.c	FUNCTION_35
0x40027c4	     0xf8467010000	                            je 0x4002931	       554	refs.c	FUNCTION_35	FOR_1
0x40027ca	          0x4989fc	                            mov r12, rdi	       554	refs.c	FUNCTION_35	FOR_1
0x40027cd	          0x4889d3	                            mov rbx, rdx	       554	refs.c	FUNCTION_35	FOR_1
0x40027d0	      0xb800000000	                              mov eax, 0	       554	refs.c	FUNCTION_35	FOR_1
0x40027d5	    0x41be00000000	                             mov r14d, 0	       554	refs.c	FUNCTION_35	FOR_1
0x40027db	          0x4531ff	                          xor r15d, r15d	       554	refs.c	FUNCTION_35	FOR_1
0x40027de	            0xeb0d	                           jmp 0x40027ed	       554	refs.c	FUNCTION_35	FOR_1
0x40027e0	          0x4189df	                           mov r15d, ebx	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x40027e3	      0x488d5c2440	                   lea rbx, [rsp + 0x40]	       559	refs.c	FUNCTION_35	FOR_1
0x40027e8	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       559	refs.c	FUNCTION_35	FOR_1
0x40027ed	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_188	IF_2
0x40027f3	    0x48c744242800	               mov qword [rsp + 0x28], 0	       164	strbuf.h	FUNCTION_188
0x40027fc	     0xf849e000000	                            je 0x40028a0	       165	strbuf.h	FUNCTION_188	IF_2
0x4002802	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_188	IF_2
0x4002805	          0x498b36	                    mov rsi, qword [r14]	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4002808	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x400280d	            0x31c0	                            xor eax, eax	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x400280f	          0x4c89e1	                            mov rcx, r12	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4002812	          0x4489ea	                           mov edx, r13d	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4002815	          0x4889ef	                            mov rdi, rbp	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4002818	      0xe800000000	                          call 0x400281d	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x400281d	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x4002822	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x4002827	          0x4889da	                            mov rdx, rbx	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x400282a	      0xbe01000000	                              mov esi, 1	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x400282f	      0xe800000000	                          call 0x4002834	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x4002834	          0x4885c0	                           test rax, rax	       564	refs.c	FUNCTION_35	FOR_1	IF_1
0x4002837	            0x747f	                            je 0x40028b8	       564	refs.c	FUNCTION_35	FOR_1	IF_1
0x4002839	          0x4585ff	                         test r15d, r15d	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x400283c	        0x418d5f01	                      lea ebx, [r15 + 1]	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4002840	            0x7446	                            je 0x4002888	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4002842	    0x8b0500000000	            mov eax, dword [0x04002848] 	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x4002848	            0x85c0	                           test eax, eax	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x400284a	            0x740a	                            je 0x4002856	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x400284c	        0x4983c608	                              add r14, 8	       554	refs.c	FUNCTION_35	FOR_1
0x4002850	        0x49833e00	                      cmp qword [r14], 0	       554	refs.c	FUNCTION_35	FOR_1
0x4002854	            0x758a	                           jne 0x40027e0	       554	refs.c	FUNCTION_35	FOR_1
0x4002856	          0x4889ef	                            mov rdi, rbp	       575	refs.c	FUNCTION_35	CALL_6
0x4002859	      0xe800000000	                          call 0x400285e	       575	refs.c	FUNCTION_35	CALL_6
0x400285e	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	       577	refs.c	FUNCTION_35
0x4002863	    0x644833342528	                xor rsi, qword fs:[0x28]	       577	refs.c	FUNCTION_35
0x400286c	            0x89d8	                            mov eax, ebx	       577	refs.c	FUNCTION_35
0x400286e	     0xf85d1000000	                           jne 0x4002945	       577	refs.c	FUNCTION_35
0x4002874	        0x4883c468	                           add rsp, 0x68	       577	refs.c	FUNCTION_35
0x4002878	              0x5b	                                 pop rbx	       577	refs.c	FUNCTION_35
0x4002879	              0x5d	                                 pop rbp	       577	refs.c	FUNCTION_35
0x400287a	            0x415c	                                 pop r12	       577	refs.c	FUNCTION_35
0x400287c	            0x415d	                                 pop r13	       577	refs.c	FUNCTION_35
0x400287e	            0x415e	                                 pop r14	       577	refs.c	FUNCTION_35
0x4002880	            0x415f	                                 pop r15	       577	refs.c	FUNCTION_35
0x4002882	              0xc3	                                     ret	       577	refs.c	FUNCTION_35
0x4002883	       0xf1f440000	                   nop dword [rax + rax]	       577	refs.c	FUNCTION_35
0x4002888	          0x4889c7	                            mov rdi, rax	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x400288b	      0xe800000000	                          call 0x4002890	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x4002890	      0x488b542408	                mov rdx, qword [rsp + 8]	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x4002895	          0x488902	                    mov qword [rdx], rax	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x4002898	            0xeba8	                           jmp 0x4002842	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x400289a	    0x660f1f440000	                    nop word [rax + rax]	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40028a0	    0x803d00000000	                cmp byte [0x040028a7], 0	       168	strbuf.h	FUNCTION_188	CALL_2
0x40028a7	     0xf8458ffffff	                            je 0x4002805	       168	strbuf.h	FUNCTION_188	CALL_2
0x40028ad	      0xe800000000	                          call 0x40028b2	       168	strbuf.h	FUNCTION_188	CALL_2
0x40028b2	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_188	CALL_2
0x40028b8	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x40028bc	            0xa801	                              test al, 1	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x40028be	            0x7416	                            je 0x40028d6	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x40028c0	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x40028c5	      0xbf00000000	                              mov edi, 0	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x40028ca	      0xb905000000	                              mov ecx, 5	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x40028cf	          0x4889d6	                            mov rsi, rdx	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x40028d2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x40028d4	            0x754a	                           jne 0x4002920	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x40028d6	            0xa804	                              test al, 4	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40028d8	            0x7426	                            je 0x4002900	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40028da	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40028df	      0xbe2f000000	                           mov esi, 0x2f	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40028e4	          0x4889df	                            mov rdi, rbx	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40028e7	      0xe800000000	                          call 0x40028ec	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40028ec	          0x4885c0	                           test rax, rax	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40028ef	            0x740f	                            je 0x4002900	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40028f1	          0x4889de	                            mov rsi, rbx	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_5
0x40028f4	      0xbf00000000	                              mov edi, 0	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_5
0x40028f9	            0x31c0	                            xor eax, eax	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_5
0x40028fb	      0xe800000000	                          call 0x4002900	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_5
0x4002900	        0x4983c608	                              add r14, 8	       554	refs.c	FUNCTION_35	FOR_1
0x4002904	        0x49833e00	                      cmp qword [r14], 0	       554	refs.c	FUNCTION_35	FOR_1
0x4002908	            0x7433	                            je 0x400293d	       554	refs.c	FUNCTION_35	FOR_1
0x400290a	          0x4585ff	                         test r15d, r15d	       559	refs.c	FUNCTION_35	FOR_1
0x400290d	     0xf85d0feffff	                           jne 0x40027e3	       559	refs.c	FUNCTION_35	FOR_1
0x4002913	        0x488b1c24	                    mov rbx, qword [rsp]	       559	refs.c	FUNCTION_35	FOR_1
0x4002917	      0xe9ccfeffff	                           jmp 0x40027e8	       559	refs.c	FUNCTION_35	FOR_1
0x400291c	         0xf1f4000	                         nop dword [rax]	       559	refs.c	FUNCTION_35	FOR_1
0x4002920	          0x4889d6	                            mov rsi, rdx	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x4002923	      0xbf00000000	                              mov edi, 0	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x4002928	            0x31c0	                            xor eax, eax	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x400292a	      0xe800000000	                          call 0x400292f	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x400292f	            0xebcf	                           jmp 0x4002900	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x4002931	            0x31db	                            xor ebx, ebx	       550	refs.c	FUNCTION_35
0x4002933	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	       550	refs.c	FUNCTION_35
0x4002938	      0xe919ffffff	                           jmp 0x4002856	       550	refs.c	FUNCTION_35
0x400293d	          0x4489fb	                           mov ebx, r15d	       550	refs.c	FUNCTION_35
0x4002940	      0xe911ffffff	                           jmp 0x4002856	       550	refs.c	FUNCTION_35
0x4002945	      0xe800000000	                          call 0x400294a	       577	refs.c	FUNCTION_35
ref_store_hash_cmp	CALL,0:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	6
0x4000090	        0x4883c218	                           add rdx, 0x18	      1610	refs.c	FUNCTION_85
0x4000094	          0x4885c9	                           test rcx, rcx	      1610	refs.c	FUNCTION_85
0x4000097	        0x488d7e18	                   lea rdi, [rsi + 0x18]	      1612	refs.c	FUNCTION_85
0x400009b	        0x480f44ca	                          cmove rcx, rdx	      1610	refs.c	FUNCTION_85
0x400009f	          0x4889ce	                            mov rsi, rcx	      1612	refs.c	FUNCTION_85
0x40000a2	      0xe900000000	                           jmp 0x40000a7	      1612	refs.c	FUNCTION_85
refs_rename_ref_available	CALL,4:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	46
0x4003930	              0x55	                                push rbp	      1309	refs.c	FUNCTION_65
0x4003931	              0x53	                                push rbx	      1309	refs.c	FUNCTION_65
0x4003932	          0x4889fb	                            mov rbx, rdi	      1309	refs.c	FUNCTION_65
0x4003935	          0x4889d5	                            mov rbp, rdx	      1309	refs.c	FUNCTION_65
0x4003938	        0x4883ec58	                           sub rsp, 0x58	      1309	refs.c	FUNCTION_65
0x400393c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1314	refs.c	FUNCTION_65	CALL_1
0x4003941	      0x80642430fe	             and byte [rsp + 0x30], 0xfe	      1310	refs.c	FUNCTION_65
0x4003946	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1310	refs.c	FUNCTION_65
0x400394f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1309	refs.c	FUNCTION_65
0x4003958	      0x4889442448	             mov qword [rsp + 0x48], rax	      1309	refs.c	FUNCTION_65
0x400395d	            0x31c0	                            xor eax, eax	      1309	refs.c	FUNCTION_65
0x400395f	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1310	refs.c	FUNCTION_65
0x4003967	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1310	refs.c	FUNCTION_65
0x400396f	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1310	refs.c	FUNCTION_65
0x4003978	    0x48c704240000	                      mov qword [rsp], 0	      1311	refs.c	FUNCTION_65
0x4003980	    0x48c744240800	                  mov qword [rsp + 8], 0	      1311	refs.c	FUNCTION_65
0x4003989	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1311	refs.c	FUNCTION_65
0x4003992	      0xe800000000	                          call 0x4003997	      1314	refs.c	FUNCTION_65	CALL_1
0x4003997	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1315	refs.c	FUNCTION_65	CALL_2
0x400399c	            0x31d2	                            xor edx, edx	      1315	refs.c	FUNCTION_65	CALL_2
0x400399e	          0x4889df	                            mov rdi, rbx	      1315	refs.c	FUNCTION_65	CALL_2
0x40039a1	          0x4989e0	                             mov r8, rsp	      1315	refs.c	FUNCTION_65	CALL_2
0x40039a4	          0x4889ee	                            mov rsi, rbp	      1315	refs.c	FUNCTION_65	CALL_2
0x40039a7	            0x31db	                            xor ebx, ebx	      1315	refs.c	FUNCTION_65	CALL_2
0x40039a9	      0xe800000000	                          call 0x40039ae	      1315	refs.c	FUNCTION_65	CALL_2
0x40039ae	            0x85c0	                           test eax, eax	      1315	refs.c	FUNCTION_65	CALL_2
0x40039b0	           0xf94c3	                                 sete bl	      1315	refs.c	FUNCTION_65	CALL_2
0x40039b3	            0x7411	                            je 0x40039c6	      1317	refs.c	FUNCTION_65	IF_1
0x40039b5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1318	refs.c	FUNCTION_65	IF_1
0x40039ba	      0xbf00000000	                              mov edi, 0	      1318	refs.c	FUNCTION_65	IF_1
0x40039bf	            0x31c0	                            xor eax, eax	      1318	refs.c	FUNCTION_65	IF_1
0x40039c1	      0xe800000000	                          call 0x40039c6	      1318	refs.c	FUNCTION_65	IF_1
0x40039c6	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1320	refs.c	FUNCTION_65	CALL_3
0x40039cb	            0x31f6	                            xor esi, esi	      1320	refs.c	FUNCTION_65	CALL_3
0x40039cd	      0xe800000000	                          call 0x40039d2	      1320	refs.c	FUNCTION_65	CALL_3
0x40039d2	          0x4889e7	                            mov rdi, rsp	      1321	refs.c	FUNCTION_65	CALL_4
0x40039d5	      0xe800000000	                          call 0x40039da	      1321	refs.c	FUNCTION_65	CALL_4
0x40039da	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      1323	refs.c	FUNCTION_65
0x40039df	    0x644833142528	                xor rdx, qword fs:[0x28]	      1323	refs.c	FUNCTION_65
0x40039e8	            0x89d8	                            mov eax, ebx	      1323	refs.c	FUNCTION_65
0x40039ea	            0x7507	                           jne 0x40039f3	      1323	refs.c	FUNCTION_65
0x40039ec	        0x4883c458	                           add rsp, 0x58	      1323	refs.c	FUNCTION_65
0x40039f0	              0x5b	                                 pop rbx	      1323	refs.c	FUNCTION_65
0x40039f1	              0x5d	                                 pop rbp	      1323	refs.c	FUNCTION_65
0x40039f2	              0xc3	                                     ret	      1323	refs.c	FUNCTION_65
0x40039f3	      0xe800000000	                          call 0x40039f8	      1323	refs.c	FUNCTION_65
ref_transaction_delete	CALL,3:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	40
0x40013f0	            0x4157	                                push r15	      1048	refs.c	FUNCTION_57
0x40013f2	            0x4156	                                push r14	      1048	refs.c	FUNCTION_57
0x40013f4	          0x4d89cf	                             mov r15, r9	      1048	refs.c	FUNCTION_57
0x40013f7	            0x4155	                                push r13	      1048	refs.c	FUNCTION_57
0x40013f9	            0x4154	                                push r12	      1048	refs.c	FUNCTION_57
0x40013fb	          0x4189cd	                           mov r13d, ecx	      1048	refs.c	FUNCTION_57
0x40013fe	              0x55	                                push rbp	      1048	refs.c	FUNCTION_57
0x40013ff	              0x53	                                push rbx	      1048	refs.c	FUNCTION_57
0x4001400	          0x4889fd	                            mov rbp, rdi	      1048	refs.c	FUNCTION_57
0x4001403	          0x4989f4	                            mov r12, rsi	      1048	refs.c	FUNCTION_57
0x4001406	          0x4889d3	                            mov rbx, rdx	      1048	refs.c	FUNCTION_57
0x4001409	          0x4d89c6	                             mov r14, r8	      1048	refs.c	FUNCTION_57
0x400140c	        0x4883ec08	                              sub rsp, 8	      1048	refs.c	FUNCTION_57
0x4001410	          0x4885d2	                           test rdx, rdx	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4001413	            0x7416	                            je 0x400142b	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4001415	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x400141a	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_144	CALL_1
0x400141f	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_144	CALL_1
0x4001422	      0xe800000000	                          call 0x4001427	       975	cache.h	FUNCTION_144	CALL_1
0x4001427	            0x85c0	                           test eax, eax	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4001429	            0x742e	                            je 0x4001459	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x400142b	        0x4883ec08	                              sub rsp, 8	      1051	refs.c	FUNCTION_57	CALL_3
0x400142f	          0x4d89f1	                             mov r9, r14	      1051	refs.c	FUNCTION_57	CALL_3
0x4001432	          0x4589e8	                           mov r8d, r13d	      1051	refs.c	FUNCTION_57	CALL_3
0x4001435	            0x4157	                                push r15	      1051	refs.c	FUNCTION_57	CALL_3
0x4001437	          0x4889d9	                            mov rcx, rbx	      1051	refs.c	FUNCTION_57	CALL_3
0x400143a	          0x4c89e6	                            mov rsi, r12	      1051	refs.c	FUNCTION_57	CALL_3
0x400143d	          0x4889ef	                            mov rdi, rbp	      1051	refs.c	FUNCTION_57	CALL_3
0x4001440	      0xba00000000	                              mov edx, 0	      1051	refs.c	FUNCTION_57	CALL_3
0x4001445	      0xe800000000	                          call 0x400144a	      1051	refs.c	FUNCTION_57	CALL_3
0x400144a	        0x4883c418	                           add rsp, 0x18	      1054	refs.c	FUNCTION_57
0x400144e	              0x5b	                                 pop rbx	      1054	refs.c	FUNCTION_57
0x400144f	              0x5d	                                 pop rbp	      1054	refs.c	FUNCTION_57
0x4001450	            0x415c	                                 pop r12	      1054	refs.c	FUNCTION_57
0x4001452	            0x415d	                                 pop r13	      1054	refs.c	FUNCTION_57
0x4001454	            0x415e	                                 pop r14	      1054	refs.c	FUNCTION_57
0x4001456	            0x415f	                                 pop r15	      1054	refs.c	FUNCTION_57
0x4001458	              0xc3	                                     ret	      1054	refs.c	FUNCTION_57
0x4001459	      0xbf00000000	                              mov edi, 0	      1050	refs.c	FUNCTION_57	CALL_2
0x400145e	      0xe800000000	                          call 0x4001463	      1050	refs.c	FUNCTION_57	CALL_2
get_worktree_ref_store	CALL,7:IF,4:FOR,0:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0	53
0x4002b80	          0x8b473c	            mov eax, dword [rdi + 0x3c] 	      1744	refs.c	FUNCTION_92	IF_1
0x4002b83	            0x85c0	                           test eax, eax	      1744	refs.c	FUNCTION_92	IF_1
0x4002b85	            0x7539	                           jne 0x4002bc0	      1744	refs.c	FUNCTION_92	IF_1
0x4002b87	              0x55	                                push rbp	      1740	refs.c	FUNCTION_92
0x4002b88	              0x53	                                push rbx	      1740	refs.c	FUNCTION_92
0x4002b89	      0xb800000000	                              mov eax, 0	      1747	refs.c	FUNCTION_92
0x4002b8e	          0x4889fb	                            mov rbx, rdi	      1747	refs.c	FUNCTION_92
0x4002b91	        0x4883ec08	                              sub rsp, 8	      1740	refs.c	FUNCTION_92
0x4002b95	        0x488b6f08	                mov rbp, qword [rdi + 8]	      1747	refs.c	FUNCTION_92
0x4002b99	      0xbf00000000	                              mov edi, 0	      1748	refs.c	FUNCTION_92	CALL_2
0x4002b9e	          0x4885ed	                           test rbp, rbp	      1747	refs.c	FUNCTION_92
0x4002ba1	        0x480f44e8	                          cmove rbp, rax	      1747	refs.c	FUNCTION_92
0x4002ba5	          0x4889ee	                            mov rsi, rbp	      1748	refs.c	FUNCTION_92	CALL_2
0x4002ba8	      0xe873d8ffff	           call sym.lookup_ref_store_map	      1748	refs.c	FUNCTION_92	CALL_2
0x4002bad	          0x4885c0	                           test rax, rax	      1749	refs.c	FUNCTION_92	IF_2
0x4002bb0	            0x741e	                            je 0x4002bd0	      1749	refs.c	FUNCTION_92	IF_2
0x4002bb2	        0x4883c408	                              add rsp, 8	      1763	refs.c	FUNCTION_92
0x4002bb6	              0x5b	                                 pop rbx	      1763	refs.c	FUNCTION_92
0x4002bb7	              0x5d	                                 pop rbp	      1763	refs.c	FUNCTION_92
0x4002bb8	              0xc3	                                     ret	      1763	refs.c	FUNCTION_92
0x4002bb9	     0xf1f80000000	                         nop dword [rax]	      1763	refs.c	FUNCTION_92
0x4002bc0	    0x488b3d000000	            mov rdi, qword [0x04002bc7] 	      1745	refs.c	FUNCTION_92	CALL_1
0x4002bc7	      0xe9d4efffff	              jmp sym.get_main_ref_store	      1745	refs.c	FUNCTION_92	CALL_1
0x4002bcc	         0xf1f4000	                         nop dword [rax]	      1745	refs.c	FUNCTION_92	CALL_1
0x4002bd0	        0x488b7308	                mov rsi, qword [rbx + 8]	      1752	refs.c	FUNCTION_92	IF_3
0x4002bd4	          0x4885f6	                           test rsi, rsi	      1752	refs.c	FUNCTION_92	IF_3
0x4002bd7	            0x7447	                            je 0x4002c20	      1752	refs.c	FUNCTION_92	IF_3
0x4002bd9	      0xbf00000000	                              mov edi, 0	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4002bde	      0xe800000000	                          call 0x4002be3	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4002be3	      0xbe0f000000	                            mov esi, 0xf	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4002be8	          0x4889c7	                            mov rdi, rax	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4002beb	      0xe860daffff	                 call sym.ref_store_init	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4002bf0	          0x4889c3	                            mov rbx, rax	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4002bf3	            0x31c0	                            xor eax, eax	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4002bf5	          0x4885db	                           test rbx, rbx	      1759	refs.c	FUNCTION_92	IF_4
0x4002bf8	            0x74b8	                            je 0x4002bb2	      1759	refs.c	FUNCTION_92	IF_4
0x4002bfa	          0x4889e9	                            mov rcx, rbp	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002bfd	          0x4889da	                            mov rdx, rbx	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002c00	      0xbe00000000	                              mov esi, 0	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002c05	      0xbf00000000	                              mov edi, 0	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002c0a	      0xe891d8ffff	         call sym.register_ref_store_map	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002c0f	        0x4883c408	                              add rsp, 8	      1763	refs.c	FUNCTION_92
0x4002c13	          0x4889d8	                            mov rax, rbx	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002c16	              0x5b	                                 pop rbx	      1763	refs.c	FUNCTION_92
0x4002c17	              0x5d	                                 pop rbp	      1763	refs.c	FUNCTION_92
0x4002c18	              0xc3	                                     ret	      1763	refs.c	FUNCTION_92
0x4002c19	     0xf1f80000000	                         nop dword [rax]	      1763	refs.c	FUNCTION_92
0x4002c20	      0xe800000000	                          call 0x4002c25	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x4002c25	      0xbe0f000000	                            mov esi, 0xf	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x4002c2a	          0x4889c7	                            mov rdi, rax	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x4002c2d	      0xe81edaffff	                 call sym.ref_store_init	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x4002c32	          0x4889c3	                            mov rbx, rax	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x4002c35	            0xebbc	                           jmp 0x4002bf3	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
find_ref_storage_backend	CALL,0:IF,1:FOR,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	25
0x4000040	              0x55	                                push rbp	        25	refs.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        25	refs.c	FUNCTION_1
0x4000042	          0x4889fd	                            mov rbp, rdi	        25	refs.c	FUNCTION_1
0x4000045	      0xbb00000000	                              mov ebx, 0	        27	refs.c	FUNCTION_1	FOR_1
0x400004a	        0x4883ec08	                              sub rsp, 8	        25	refs.c	FUNCTION_1
0x400004e	            0x6690	                                     nop	        25	refs.c	FUNCTION_1
0x4000050	        0x488b7b08	                mov rdi, qword [rbx + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000054	          0x4889ee	                            mov rsi, rbp	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000057	      0xe800000000	                          call 0x400005c	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400005c	            0x85c0	                           test eax, eax	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400005e	            0x7418	                            je 0x4000078	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000060	          0x488b1b	                    mov rbx, qword [rbx]	        27	refs.c	FUNCTION_1	FOR_1
0x4000063	          0x4885db	                           test rbx, rbx	        27	refs.c	FUNCTION_1	FOR_1
0x4000066	            0x75e8	                           jne 0x4000050	        27	refs.c	FUNCTION_1	FOR_1
0x4000068	        0x4883c408	                              add rsp, 8	        31	refs.c	FUNCTION_1
0x400006c	            0x31c0	                            xor eax, eax	        30	refs.c	FUNCTION_1
0x400006e	              0x5b	                                 pop rbx	        31	refs.c	FUNCTION_1
0x400006f	              0x5d	                                 pop rbp	        31	refs.c	FUNCTION_1
0x4000070	              0xc3	                                     ret	        31	refs.c	FUNCTION_1
0x4000071	     0xf1f80000000	                         nop dword [rax]	        31	refs.c	FUNCTION_1
0x4000078	        0x4883c408	                              add rsp, 8	        31	refs.c	FUNCTION_1
0x400007c	          0x4889d8	                            mov rax, rbx	        31	refs.c	FUNCTION_1
0x400007f	              0x5b	                                 pop rbx	        31	refs.c	FUNCTION_1
0x4000080	              0x5d	                                 pop rbp	        31	refs.c	FUNCTION_1
0x4000081	              0xc3	                                     ret	        31	refs.c	FUNCTION_1
for_each_branch_ref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	15
0x4001d70	              0x55	                                push rbp	       389	refs.c	FUNCTION_23
0x4001d71	              0x53	                                push rbx	       389	refs.c	FUNCTION_23
0x4001d72	          0x4889fb	                            mov rbx, rdi	       389	refs.c	FUNCTION_23
0x4001d75	          0x4889f5	                            mov rbp, rsi	       389	refs.c	FUNCTION_23
0x4001d78	        0x4883ec08	                              sub rsp, 8	       389	refs.c	FUNCTION_23
0x4001d7c	    0x488b3d000000	            mov rdi, qword [0x04001d83] 	       390	refs.c	FUNCTION_23	CALL_2
0x4001d83	      0xe800000000	                          call 0x4001d88	       390	refs.c	FUNCTION_23	CALL_2
0x4001d88	        0x4883c408	                              add rsp, 8	       391	refs.c	FUNCTION_23
0x4001d8c	          0x4889e9	                            mov rcx, rbp	       385	refs.c	FUNCTION_22	CALL_1
0x4001d8f	          0x4889da	                            mov rdx, rbx	       385	refs.c	FUNCTION_22	CALL_1
0x4001d92	              0x5b	                                 pop rbx	       391	refs.c	FUNCTION_23
0x4001d93	              0x5d	                                 pop rbp	       391	refs.c	FUNCTION_23
0x4001d94	      0xbe00000000	                              mov esi, 0	       385	refs.c	FUNCTION_22	CALL_1
0x4001d99	          0x4889c7	                            mov rdi, rax	       385	refs.c	FUNCTION_22	CALL_1
0x4001d9c	      0xe96ffaffff	            jmp sym.refs_for_each_ref_in	       385	refs.c	FUNCTION_22	CALL_1
refs_update_ref	CALL,12:IF,4:FOR,0:DO,0:SWITCH,1:ELSE,1:WHILE,0:functions,0	193
0x4003280	            0x4157	                                push r15	      1073	refs.c	FUNCTION_59
0x4003282	            0x4156	                                push r14	      1073	refs.c	FUNCTION_59
0x4003284	          0x4989f7	                            mov r15, rsi	      1073	refs.c	FUNCTION_59
0x4003287	            0x4155	                                push r13	      1073	refs.c	FUNCTION_59
0x4003289	            0x4154	                                push r12	      1073	refs.c	FUNCTION_59
0x400328b	          0x4d89c5	                             mov r13, r8	      1073	refs.c	FUNCTION_59
0x400328e	              0x55	                                push rbp	      1073	refs.c	FUNCTION_59
0x400328f	              0x53	                                push rbx	      1073	refs.c	FUNCTION_59
0x4003290	          0x4889fd	                            mov rbp, rdi	      1073	refs.c	FUNCTION_59
0x4003293	          0x4889d7	                            mov rdi, rdx	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x4003296	          0x4889d3	                            mov rbx, rdx	      1073	refs.c	FUNCTION_59
0x4003299	          0x4989cc	                            mov r12, rcx	      1073	refs.c	FUNCTION_59
0x400329c	        0x4883ec78	                           sub rsp, 0x78	      1073	refs.c	FUNCTION_59
0x40032a0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1073	refs.c	FUNCTION_59
0x40032a9	      0x4889442468	             mov qword [rsp + 0x68], rax	      1073	refs.c	FUNCTION_59
0x40032ae	            0x31c0	                            xor eax, eax	      1073	refs.c	FUNCTION_59
0x40032b0	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      1073	refs.c	FUNCTION_59
0x40032b5	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1075	refs.c	FUNCTION_59
0x40032be	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1075	refs.c	FUNCTION_59
0x40032c7	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1075	refs.c	FUNCTION_59
0x40032d0	      0xe800000000	                          call 0x40032d5	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x40032d5	          0x83f801	                              cmp eax, 1	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x40032d8	     0xf84c2000000	                            je 0x40033a0	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x40032de	      0xbe30000000	                           mov esi, 0x30	       940	refs.c	FUNCTION_51	CALL_2
0x40032e3	      0xbf01000000	                              mov edi, 1	       940	refs.c	FUNCTION_51	CALL_2
0x40032e8	      0xe800000000	                          call 0x40032ed	       940	refs.c	FUNCTION_51	CALL_2
0x40032ed	        0x4883ec08	                              sub rsp, 8	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40032f1	          0x488928	                    mov qword [rax], rbp	       941	refs.c	FUNCTION_51
0x40032f4	          0x4c89e9	                            mov rcx, r13	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40032f7	      0x488d6c2418	                   lea rbp, [rsp + 0x18]	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40032fc	          0x4c89e2	                            mov rdx, r12	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40032ff	          0x4d89f9	                             mov r9, r15	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4003302	          0x4889de	                            mov rsi, rbx	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4003305	          0x4889c7	                            mov rdi, rax	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4003308	          0x4989c6	                            mov r14, rax	       940	refs.c	FUNCTION_51	CALL_2
0x400330b	              0x55	                                push rbp	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x400330c	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4003311	      0xe800000000	                          call 0x4003316	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4003316	            0x85c0	                           test eax, eax	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4003318	              0x5a	                                 pop rdx	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4003319	              0x59	                                 pop rcx	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x400331a	     0xf84c0010000	                            je 0x40034e0	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4003320	          0x4c89f7	                            mov rdi, r14	      1088	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_8
0x4003323	      0xe800000000	                          call 0x4003328	      1088	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_8
0x4003328	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x400332f	            0x85c0	                           test eax, eax	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4003331	            0x7425	                            je 0x4003358	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4003333	    0x83bc24b00000	               cmp dword [rsp + 0xb0], 1	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x400333b	            0x752f	                           jne 0x400336c	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x400333d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4003342	          0x4889de	                            mov rsi, rbx	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4003345	      0xbf00000000	                              mov edi, 0	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x400334a	            0x31c0	                            xor eax, eax	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x400334c	      0xe800000000	                          call 0x4003351	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4003351	     0xf1f80000000	                         nop dword [rax]	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4003358	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x400335d	          0x4889de	                            mov rsi, rbx	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4003360	      0xbf00000000	                              mov edi, 0	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4003365	            0x31c0	                            xor eax, eax	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4003367	      0xe800000000	                          call 0x400336c	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x400336c	          0x4889ef	                            mov rdi, rbp	      1104	refs.c	FUNCTION_59	IF_3	CALL_10
0x400336f	      0xe800000000	                          call 0x4003374	      1104	refs.c	FUNCTION_59	IF_3	CALL_10
0x4003374	      0xb801000000	                              mov eax, 1	      1105	refs.c	FUNCTION_59	IF_3
0x4003379	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      1111	refs.c	FUNCTION_59
0x400337e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1111	refs.c	FUNCTION_59
0x4003387	     0xf85f2010000	                           jne 0x400357f	      1111	refs.c	FUNCTION_59
0x400338d	        0x4883c478	                           add rsp, 0x78	      1111	refs.c	FUNCTION_59
0x4003391	              0x5b	                                 pop rbx	      1111	refs.c	FUNCTION_59
0x4003392	              0x5d	                                 pop rbp	      1111	refs.c	FUNCTION_59
0x4003393	            0x415c	                                 pop r12	      1111	refs.c	FUNCTION_59
0x4003395	            0x415d	                                 pop r13	      1111	refs.c	FUNCTION_59
0x4003397	            0x415e	                                 pop r14	      1111	refs.c	FUNCTION_59
0x4003399	            0x415f	                                 pop r15	      1111	refs.c	FUNCTION_59
0x400339b	              0xc3	                                     ret	      1111	refs.c	FUNCTION_59
0x400339c	         0xf1f4000	                         nop dword [rax]	      1111	refs.c	FUNCTION_59
0x40033a0	    0x488b3d000000	            mov rdi, qword [0x040033a7] 	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x40033a7	      0xe800000000	                          call 0x40033ac	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x40033ac	          0x4839e8	                            cmp rax, rbp	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x40033af	     0xf85de010000	                           jne 0x4003593	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x40033b5	          0x4d85e4	                           test r12, r12	       667	refs.c	FUNCTION_41	IF_1
0x40033b8	    0x48c744243000	               mov qword [rsp + 0x30], 0	       664	refs.c	FUNCTION_41
0x40033c1	    0x48c744243800	               mov qword [rsp + 0x38], 0	       664	refs.c	FUNCTION_41
0x40033ca	    0x48c744244000	               mov qword [rsp + 0x40], 0	       664	refs.c	FUNCTION_41
0x40033d3	     0xf84c8000000	                            je 0x40034a1	       667	refs.c	FUNCTION_41	IF_1
0x40033d9	          0x4c89e7	                            mov rdi, r12	       670	refs.c	FUNCTION_41	CALL_2
0x40033dc	      0xe800000000	                          call 0x40033e1	       670	refs.c	FUNCTION_41	CALL_2
0x40033e1	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       670	refs.c	FUNCTION_41	CALL_2
0x40033e6	          0x4889c2	                            mov rdx, rax	       670	refs.c	FUNCTION_41	CALL_2
0x40033e9	      0xbe00000000	                              mov esi, 0	       670	refs.c	FUNCTION_41	CALL_2
0x40033ee	            0x31c0	                            xor eax, eax	       670	refs.c	FUNCTION_41	CALL_2
0x40033f0	      0xe800000000	                          call 0x40033f5	       670	refs.c	FUNCTION_41	CALL_2
0x40033f5	          0x4889de	                            mov rsi, rbx	       672	refs.c	FUNCTION_41	CALL_3
0x40033f8	            0x31c0	                            xor eax, eax	       672	refs.c	FUNCTION_41	CALL_3
0x40033fa	      0xbf00000000	                              mov edi, 0	       672	refs.c	FUNCTION_41	CALL_3
0x40033ff	      0xe800000000	                          call 0x4003404	       672	refs.c	FUNCTION_41	CALL_3
0x4003404	    0x8b3500000000	            mov esi, dword [0x0400340a] 	       650	refs.c	FUNCTION_40	IF_1
0x400340a	          0x4989c4	                            mov r12, rax	       672	refs.c	FUNCTION_41	CALL_3
0x400340d	            0x85f6	                           test esi, esi	       650	refs.c	FUNCTION_40	IF_1
0x400340f	     0xf84a3000000	                            je 0x40034b8	       650	refs.c	FUNCTION_40	IF_1
0x4003415	    0x48630d000000	         movsxd rcx, dword [0x0400341c] 	       673	refs.c	FUNCTION_41	CALL_4
0x400341c	      0xba01000000	                              mov edx, 1	       673	refs.c	FUNCTION_41	CALL_4
0x4003421	          0x4c89e6	                            mov rsi, r12	       673	refs.c	FUNCTION_41	CALL_4
0x4003424	      0xbf00000000	                              mov edi, 0	       673	refs.c	FUNCTION_41	CALL_4
0x4003429	      0xe800000000	                          call 0x400342e	       673	refs.c	FUNCTION_41	CALL_4
0x400342e	            0x85c0	                           test eax, eax	       676	refs.c	FUNCTION_41	IF_2
0x4003430	            0x89c5	                            mov ebp, eax	       673	refs.c	FUNCTION_41	CALL_4
0x4003432	     0xf88d8000000	                            js 0x4003510	       676	refs.c	FUNCTION_41	IF_2
0x4003438	          0x4d85ed	                           test r13, r13	       682	refs.c	FUNCTION_41	IF_3
0x400343b	            0x7436	                            je 0x4003473	       682	refs.c	FUNCTION_41	IF_3
0x400343d	      0x488d542450	                   lea rdx, [rsp + 0x50]	       239	refs.c	FUNCTION_11	CALL_1
0x4003442	            0x31c9	                            xor ecx, ecx	       239	refs.c	FUNCTION_11	CALL_1
0x4003444	      0xbe01000000	                              mov esi, 1	       239	refs.c	FUNCTION_11	CALL_1
0x4003449	          0x4889df	                            mov rdi, rbx	       239	refs.c	FUNCTION_11	CALL_1
0x400344c	      0xe800000000	                          call 0x4003451	       239	refs.c	FUNCTION_11	CALL_1
0x4003451	            0x85c0	                           test eax, eax	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4003453	     0xf852b010000	                           jne 0x4003584	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4003459	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       975	cache.h	FUNCTION_144	CALL_1
0x400345e	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x4003463	          0x4c89ee	                            mov rsi, r13	       975	cache.h	FUNCTION_144	CALL_1
0x4003466	      0xe800000000	                          call 0x400346b	       975	cache.h	FUNCTION_144	CALL_1
0x400346b	            0x85c0	                           test eax, eax	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x400346d	     0xf85d5000000	                           jne 0x4003548	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x4003473	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4003478	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x400347d	            0x89ef	                            mov edi, ebp	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x400347f	      0xe800000000	                          call 0x4003484	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4003484	          0x4885c0	                           test rax, rax	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4003487	     0xf88e3000000	                            js 0x4003570	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x400348d	      0xbf00000000	                              mov edi, 0	       700	refs.c	FUNCTION_41	CALL_16
0x4003492	      0xe800000000	                          call 0x4003497	       700	refs.c	FUNCTION_41	CALL_16
0x4003497	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       703	refs.c	FUNCTION_41	CALL_17
0x400349c	      0xe800000000	                          call 0x40034a1	       703	refs.c	FUNCTION_41	CALL_17
0x40034a1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1107	refs.c	FUNCTION_59	CALL_11
0x40034a6	      0xe800000000	                          call 0x40034ab	      1107	refs.c	FUNCTION_59	CALL_11
0x40034ab	            0x31c0	                            xor eax, eax	      1110	refs.c	FUNCTION_59
0x40034ad	      0xe9c7feffff	                           jmp 0x4003379	      1110	refs.c	FUNCTION_59
0x40034b2	    0x660f1f440000	                    nop word [rax + rax]	      1110	refs.c	FUNCTION_59
0x40034b8	      0xbe00000000	                              mov esi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x40034bd	      0xbf00000000	                              mov edi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x40034c2	      0xe800000000	                          call 0x40034c7	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x40034c7	    0xc70500000000	               mov dword [0x040034d1], 1	       652	refs.c	FUNCTION_40	IF_1
0x40034d1	      0xe93fffffff	                           jmp 0x4003415	       652	refs.c	FUNCTION_40	IF_1
0x40034d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       652	refs.c	FUNCTION_40	IF_1
0x40034e0	          0x4889ee	                            mov rsi, rbp	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x40034e3	          0x4c89f7	                            mov rdi, r14	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x40034e6	      0xe800000000	                          call 0x40034eb	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x40034eb	            0x85c0	                           test eax, eax	      1085	refs.c	FUNCTION_59	ELSE_1	IF_2
0x40034ed	     0xf852dfeffff	                           jne 0x4003320	      1085	refs.c	FUNCTION_59	ELSE_1	IF_2
0x40034f3	          0x4889ef	                            mov rdi, rbp	      1107	refs.c	FUNCTION_59	CALL_11
0x40034f6	        0x8944240c	              mov dword [rsp + 0xc], eax	      1107	refs.c	FUNCTION_59	CALL_11
0x40034fa	      0xe800000000	                          call 0x40034ff	      1107	refs.c	FUNCTION_59	CALL_11
0x40034ff	          0x4c89f7	                            mov rdi, r14	      1109	refs.c	FUNCTION_59	CALL_12
0x4003502	      0xe800000000	                          call 0x4003507	      1109	refs.c	FUNCTION_59	CALL_12
0x4003507	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1109	refs.c	FUNCTION_59	CALL_12
0x400350b	      0xe969feffff	                           jmp 0x4003379	      1109	refs.c	FUNCTION_59	CALL_12
0x4003510	      0xe800000000	                          call 0x4003515	       678	refs.c	FUNCTION_41	IF_2	CALL_7
0x4003515	            0x8b38	                    mov edi, dword [rax]	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4003517	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x400351c	      0xe800000000	                          call 0x4003521	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4003521	          0x4c89e2	                            mov rdx, r12	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4003524	          0x4889c1	                            mov rcx, rax	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4003527	      0xbe00000000	                              mov esi, 0	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x400352c	          0x4889ef	                            mov rdi, rbp	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x400352f	            0x31c0	                            xor eax, eax	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4003531	      0xe800000000	                          call 0x4003536	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4003536	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       703	refs.c	FUNCTION_41	CALL_17
0x400353b	      0xe800000000	                          call 0x4003540	       703	refs.c	FUNCTION_41	CALL_17
0x4003540	      0xe9e3fdffff	                           jmp 0x4003328	       703	refs.c	FUNCTION_41	CALL_17
0x4003545	           0xf1f00	                         nop dword [rax]	       703	refs.c	FUNCTION_41	CALL_17
0x4003548	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x400354d	          0x4889da	                            mov rdx, rbx	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4003550	      0xbe00000000	                              mov esi, 0	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4003555	          0x4889ef	                            mov rdi, rbp	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4003558	            0x31c0	                            xor eax, eax	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x400355a	      0xe800000000	                          call 0x400355f	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x400355f	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_181	CALL_1
0x4003564	      0xe800000000	                          call 0x4003569	       304	lockfile.h	FUNCTION_181	CALL_1
0x4003569	            0xebcb	                           jmp 0x4003536	       304	lockfile.h	FUNCTION_181	CALL_1
0x400356b	       0xf1f440000	                   nop dword [rax + rax]	       304	lockfile.h	FUNCTION_181	CALL_1
0x4003570	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4003575	          0x4c89e2	                            mov rdx, r12	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4003578	      0xbe00000000	                              mov esi, 0	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x400357d	            0xebd6	                           jmp 0x4003555	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x400357f	      0xe800000000	                          call 0x4003584	      1111	refs.c	FUNCTION_59
0x4003584	          0x4889de	                            mov rsi, rbx	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x4003587	      0xbf00000000	                              mov edi, 0	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x400358c	            0x31c0	                            xor eax, eax	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x400358e	      0xe800000000	                          call 0x4003593	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x4003593	      0xb900000000	                              mov ecx, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4003598	      0xba37040000	                          mov edx, 0x437	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x400359d	      0xbe00000000	                              mov esi, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x40035a2	      0xbf00000000	                              mov edi, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x40035a7	      0xe800000000	                          call 0x40035ac	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
head_ref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	14
0x4001e30	              0x55	                                push rbp	      1338	refs.c	FUNCTION_67
0x4001e31	              0x53	                                push rbx	      1338	refs.c	FUNCTION_67
0x4001e32	          0x4889fb	                            mov rbx, rdi	      1338	refs.c	FUNCTION_67
0x4001e35	          0x4889f5	                            mov rbp, rsi	      1338	refs.c	FUNCTION_67
0x4001e38	        0x4883ec08	                              sub rsp, 8	      1338	refs.c	FUNCTION_67
0x4001e3c	    0x488b3d000000	            mov rdi, qword [0x04001e43] 	      1339	refs.c	FUNCTION_67	CALL_2
0x4001e43	      0xe800000000	                          call 0x4001e48	      1339	refs.c	FUNCTION_67	CALL_2
0x4001e48	        0x4883c408	                              add rsp, 8	      1340	refs.c	FUNCTION_67
0x4001e4c	          0x4889ea	                            mov rdx, rbp	      1339	refs.c	FUNCTION_67	CALL_2
0x4001e4f	          0x4889de	                            mov rsi, rbx	      1339	refs.c	FUNCTION_67	CALL_2
0x4001e52	              0x5b	                                 pop rbx	      1340	refs.c	FUNCTION_67
0x4001e53	              0x5d	                                 pop rbp	      1340	refs.c	FUNCTION_67
0x4001e54	          0x4889c7	                            mov rdi, rax	      1339	refs.c	FUNCTION_67	CALL_2
0x4001e57	      0xe9d4fcffff	                   jmp sym.refs_head_ref	      1339	refs.c	FUNCTION_67	CALL_2
warn_dangling_symref	CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	17
0x4002280	        0x4883ec38	                           sub rsp, 0x38	       352	refs.c	FUNCTION_18
0x4002284	        0x48893c24	                    mov qword [rsp], rdi	       355	refs.c	FUNCTION_18
0x4002288	      0x4889742418	             mov qword [rsp + 0x18], rsi	       358	refs.c	FUNCTION_18
0x400228d	      0xbf00000000	                              mov edi, 0	       359	refs.c	FUNCTION_18	CALL_1
0x4002292	          0x4889e6	                            mov rsi, rsp	       359	refs.c	FUNCTION_18	CALL_1
0x4002295	      0x4889542408	                mov qword [rsp + 8], rdx	       356	refs.c	FUNCTION_18
0x400229a	    0x48c744241000	               mov qword [rsp + 0x10], 0	       357	refs.c	FUNCTION_18
0x40022a3	    0x64488b042528	                mov rax, qword fs:[0x28]	       352	refs.c	FUNCTION_18
0x40022ac	      0x4889442428	             mov qword [rsp + 0x28], rax	       352	refs.c	FUNCTION_18
0x40022b1	            0x31c0	                            xor eax, eax	       352	refs.c	FUNCTION_18
0x40022b3	      0xe800000000	                          call 0x40022b8	       359	refs.c	FUNCTION_18	CALL_1
0x40022b8	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       360	refs.c	FUNCTION_18
0x40022bd	    0x644833042528	                xor rax, qword fs:[0x28]	       360	refs.c	FUNCTION_18
0x40022c6	            0x7505	                           jne 0x40022cd	       360	refs.c	FUNCTION_18
0x40022c8	        0x4883c438	                           add rsp, 0x38	       360	refs.c	FUNCTION_18
0x40022cc	              0xc3	                                     ret	       360	refs.c	FUNCTION_18
0x40022cd	      0xe800000000	                          call 0x40022d2	       360	refs.c	FUNCTION_18
ref_is_hidden	CALL,1:IF,4:FOR,1:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0	51
0x40015c0	    0x488b05000000	            mov rax, qword [0x040015c7] 	      1249	refs.c	FUNCTION_63	IF_1
0x40015c7	          0x4885c0	                           test rax, rax	      1249	refs.c	FUNCTION_63	IF_1
0x40015ca	            0x7465	                            je 0x4001631	      1249	refs.c	FUNCTION_63	IF_1
0x40015cc	        0x448b5008	               mov r10d, dword [rax + 8]	      1251	refs.c	FUNCTION_63	FOR_1
0x40015d0	        0x4183ea01	                             sub r10d, 1	      1251	refs.c	FUNCTION_63	FOR_1
0x40015d4	            0x785b	                            js 0x4001631	      1251	refs.c	FUNCTION_63	FOR_1
0x40015d6	          0x4d63ca	                         movsxd r9, r10d	      1251	refs.c	FUNCTION_63	FOR_1
0x40015d9	        0x49c1e104	                               shl r9, 4	      1251	refs.c	FUNCTION_63	FOR_1
0x40015dd	          0x4c0308	                     add r9, qword [rax]	      1251	refs.c	FUNCTION_63	FOR_1
0x40015e0	          0x498b09	                     mov rcx, qword [r9]	      1252	refs.c	FUNCTION_63	FOR_1
0x40015e3	            0x31c0	                            xor eax, eax	      1254	refs.c	FUNCTION_63	FOR_1
0x40015e5	        0x440fb601	                   movzx r8d, byte [rcx]	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x40015e9	        0x4180f821	                           cmp r8b, 0x21	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x40015ed	            0x7449	                            je 0x4001638	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x40015ef	        0x4180f85e	                           cmp r8b, 0x5e	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x40015f3	          0x4889fa	                            mov rdx, rdi	      1266	refs.c	FUNCTION_63	FOR_1	ELSE_1
0x40015f6	            0x7457	                            je 0x400164f	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x40015f8	          0x4885d2	                           test rdx, rdx	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x40015fb	            0x7511	                           jne 0x400160e	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x40015fd	            0xeb24	                           jmp 0x4001623	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x40015ff	              0x90	                                     nop	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x4001600	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4001604	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4001608	        0x443a42ff	                 cmp r8b, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_221	DO_1
0x400160c	            0x7515	                           jne 0x4001623	       488	git-compat-util.h	FUNCTION_221	DO_1
0x400160e	        0x440fb601	                   movzx r8d, byte [rcx]	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4001612	          0x4584c0	                           test r8b, r8b	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4001615	            0x75e9	                           jne 0x4001600	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4001617	           0xfb612	                   movzx edx, byte [rdx]	      1272	refs.c	FUNCTION_63	FOR_1	IF_4
0x400161a	            0x84d2	                             test dl, dl	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x400161c	            0x743a	                            je 0x4001658	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x400161e	          0x80fa2f	                            cmp dl, 0x2f	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4001621	            0x7435	                            je 0x4001658	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4001623	        0x4183ea01	                             sub r10d, 1	      1251	refs.c	FUNCTION_63	FOR_1
0x4001627	        0x4983e910	                            sub r9, 0x10	      1251	refs.c	FUNCTION_63	FOR_1
0x400162b	        0x4183faff	            cmp r10d, 0xffffffffffffffff	      1251	refs.c	FUNCTION_63	FOR_1
0x400162f	            0x75af	                           jne 0x40015e0	      1251	refs.c	FUNCTION_63	FOR_1
0x4001631	            0x31c0	                            xor eax, eax	      1250	refs.c	FUNCTION_63	IF_1
0x4001633	              0xc3	                                     ret	      1250	refs.c	FUNCTION_63	IF_1
0x4001634	         0xf1f4000	                         nop dword [rax]	      1250	refs.c	FUNCTION_63	IF_1
0x4001638	      0x440fb64101	               movzx r8d, byte [rcx + 1]	      1250	refs.c	FUNCTION_63	IF_1
0x400163d	        0x4883c101	                              add rcx, 1	      1259	refs.c	FUNCTION_63	FOR_1	IF_2
0x4001641	      0xb801000000	                              mov eax, 1	      1258	refs.c	FUNCTION_63	FOR_1	IF_2
0x4001646	          0x4889fa	                            mov rdx, rdi	      1266	refs.c	FUNCTION_63	FOR_1	ELSE_1
0x4001649	        0x4180f85e	                           cmp r8b, 0x5e	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x400164d	            0x75a9	                           jne 0x40015f8	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x400164f	        0x4883c101	                              add rcx, 1	      1264	refs.c	FUNCTION_63	FOR_1	IF_3
0x4001653	          0x4889f2	                            mov rdx, rsi	      1263	refs.c	FUNCTION_63	FOR_1	IF_3
0x4001656	            0xeba0	                           jmp 0x40015f8	      1263	refs.c	FUNCTION_63	FOR_1	IF_3
0x4001658	          0x83f001	                              xor eax, 1	      1263	refs.c	FUNCTION_63	FOR_1	IF_3
0x400165b	              0xc3	                                     ret	      1263	refs.c	FUNCTION_63	FOR_1	IF_3
for_each_ref_in	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	16
0x40020d0	            0x4154	                                push r12	      1408	refs.c	FUNCTION_73
0x40020d2	              0x55	                                push rbp	      1408	refs.c	FUNCTION_73
0x40020d3	          0x4989d4	                            mov r12, rdx	      1408	refs.c	FUNCTION_73
0x40020d6	              0x53	                                push rbx	      1408	refs.c	FUNCTION_73
0x40020d7	          0x4889fb	                            mov rbx, rdi	      1408	refs.c	FUNCTION_73
0x40020da	    0x488b3d000000	            mov rdi, qword [0x040020e1] 	      1409	refs.c	FUNCTION_73	CALL_2
0x40020e1	          0x4889f5	                            mov rbp, rsi	      1408	refs.c	FUNCTION_73
0x40020e4	      0xe800000000	                          call 0x40020e9	      1409	refs.c	FUNCTION_73	CALL_2
0x40020e9	          0x4c89e1	                            mov rcx, r12	      1409	refs.c	FUNCTION_73	CALL_2
0x40020ec	          0x4889ea	                            mov rdx, rbp	      1409	refs.c	FUNCTION_73	CALL_2
0x40020ef	          0x4889de	                            mov rsi, rbx	      1409	refs.c	FUNCTION_73	CALL_2
0x40020f2	              0x5b	                                 pop rbx	      1410	refs.c	FUNCTION_73
0x40020f3	              0x5d	                                 pop rbp	      1410	refs.c	FUNCTION_73
0x40020f4	            0x415c	                                 pop r12	      1410	refs.c	FUNCTION_73
0x40020f6	          0x4889c7	                            mov rdi, rax	      1409	refs.c	FUNCTION_73	CALL_2
0x40020f9	      0xe912f7ffff	            jmp sym.refs_for_each_ref_in	      1409	refs.c	FUNCTION_73	CALL_2
refs_verify_refname_available	CALL,21:IF,6:FOR,1:DO,0:SWITCH,0:ELSE,1:WHILE,1:functions,0	189
0x4003610	            0x4157	                                push r15	      1930	refs.c	FUNCTION_103
0x4003612	            0x4156	                                push r14	      1930	refs.c	FUNCTION_103
0x4003614	            0x4155	                                push r13	      1930	refs.c	FUNCTION_103
0x4003616	            0x4154	                                push r12	      1930	refs.c	FUNCTION_103
0x4003618	              0x55	                                push rbp	      1930	refs.c	FUNCTION_103
0x4003619	              0x53	                                push rbx	      1930	refs.c	FUNCTION_103
0x400361a	          0x4889cd	                            mov rbp, rcx	      1930	refs.c	FUNCTION_103
0x400361d	    0x4881ec880000	                           sub rsp, 0x88	      1930	refs.c	FUNCTION_103
0x4003624	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1930	refs.c	FUNCTION_103
0x400362d	      0x48894c2478	             mov qword [rsp + 0x78], rcx	      1930	refs.c	FUNCTION_103
0x4003632	            0x31c9	                            xor ecx, ecx	      1930	refs.c	FUNCTION_103
0x4003634	          0x4d85c0	                             test r8, r8	      1946	refs.c	FUNCTION_103	CALL_1
0x4003637	      0x4c89442408	                 mov qword [rsp + 8], r8	      1930	refs.c	FUNCTION_103
0x400363c	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1933	refs.c	FUNCTION_103
0x4003645	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1933	refs.c	FUNCTION_103
0x400364e	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1933	refs.c	FUNCTION_103
0x4003657	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1934	refs.c	FUNCTION_103
0x4003660	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1934	refs.c	FUNCTION_103
0x4003669	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1934	refs.c	FUNCTION_103
0x4003672	     0xf848b020000	                            je 0x4003903	      1946	refs.c	FUNCTION_103	CALL_1
0x4003678	          0x4989fd	                            mov r13, rdi	      1946	refs.c	FUNCTION_103	CALL_1
0x400367b	          0x4889f7	                            mov rdi, rsi	      1948	refs.c	FUNCTION_103	CALL_3
0x400367e	          0x4989f4	                            mov r12, rsi	      1948	refs.c	FUNCTION_103	CALL_3
0x4003681	          0x4989d7	                            mov r15, rdx	      1948	refs.c	FUNCTION_103	CALL_3
0x4003684	      0xe800000000	                          call 0x4003689	      1948	refs.c	FUNCTION_103	CALL_3
0x4003689	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1948	refs.c	FUNCTION_103	CALL_3
0x400368e	        0x488d7001	                      lea rsi, [rax + 1]	      1948	refs.c	FUNCTION_103	CALL_3
0x4003692	      0xe800000000	                          call 0x4003697	      1948	refs.c	FUNCTION_103	CALL_3
0x4003697	      0xbe2f000000	                           mov esi, 0x2f	      1949	refs.c	FUNCTION_103	FOR_1
0x400369c	          0x4c89e7	                            mov rdi, r12	      1949	refs.c	FUNCTION_103	FOR_1
0x400369f	      0xe800000000	                          call 0x40036a4	      1949	refs.c	FUNCTION_103	FOR_1
0x40036a4	          0x4885c0	                           test rax, rax	      1949	refs.c	FUNCTION_103	FOR_1
0x40036a7	          0x4889c3	                            mov rbx, rax	      1949	refs.c	FUNCTION_103	FOR_1
0x40036aa	     0xf848e000000	                            je 0x400373e	      1949	refs.c	FUNCTION_103	FOR_1
0x40036b0	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x40036b5	          0x4889da	                            mov rdx, rbx	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x40036b8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x40036bd	          0x4c29e2	                            sub rdx, r12	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x40036c0	          0x4829f2	                            sub rdx, rsi	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x40036c3	          0x4c01e6	                            add rsi, r12	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x40036c6	      0xe800000000	                          call 0x40036cb	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x40036cb	          0x4885ed	                           test rbp, rbp	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x40036ce	            0x7411	                            je 0x40036e1	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x40036d0	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x40036d5	          0x4889ef	                            mov rdi, rbp	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x40036d8	      0xe800000000	                          call 0x40036dd	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x40036dd	            0x85c0	                           test eax, eax	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x40036df	            0x7543	                           jne 0x4003724	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x40036e1	        0x498b4500	                    mov rax, qword [r13]	      1467	refs.c	FUNCTION_80	CALL_1
0x40036e5	      0x4c8d742440	                   lea r14, [rsp + 0x40]	      1467	refs.c	FUNCTION_80	CALL_1
0x40036ea	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1467	refs.c	FUNCTION_80	CALL_1
0x40036ef	      0x488d542460	                   lea rdx, [rsp + 0x60]	      1467	refs.c	FUNCTION_80	CALL_1
0x40036f4	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1467	refs.c	FUNCTION_80	CALL_1
0x40036f9	          0x4c89ef	                            mov rdi, r13	      1467	refs.c	FUNCTION_80	CALL_1
0x40036fc	          0x4c89f1	                            mov rcx, r14	      1467	refs.c	FUNCTION_80	CALL_1
0x40036ff	          0xff5070	                 call qword [rax + 0x70]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003702	            0x85c0	                           test eax, eax	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_6
0x4003704	     0xf845e010000	                            je 0x4003868	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_6
0x400370a	          0x4d85ff	                           test r15, r15	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_8
0x400370d	            0x7415	                            je 0x4003724	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_8
0x400370f	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_8
0x4003714	          0x4c89ff	                            mov rdi, r15	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_8
0x4003717	      0xe800000000	                          call 0x400371c	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_8
0x400371c	            0x85c0	                           test eax, eax	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_8
0x400371e	     0xf856c010000	                           jne 0x4003890	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_8
0x4003724	        0x488d7b01	                      lea rdi, [rbx + 1]	      1949	refs.c	FUNCTION_103	FOR_1
0x4003728	      0xbe2f000000	                           mov esi, 0x2f	      1949	refs.c	FUNCTION_103	FOR_1
0x400372d	      0xe800000000	                          call 0x4003732	      1949	refs.c	FUNCTION_103	FOR_1
0x4003732	          0x4885c0	                           test rax, rax	      1949	refs.c	FUNCTION_103	FOR_1
0x4003735	          0x4889c3	                            mov rbx, rax	      1949	refs.c	FUNCTION_103	FOR_1
0x4003738	     0xf8572ffffff	                           jne 0x40036b0	      1949	refs.c	FUNCTION_103	FOR_1
0x400373e	          0x4c89e3	                            mov rbx, r12	      1982	refs.c	FUNCTION_103	CALL_10
0x4003741	      0x48035c2428	             add rbx, qword [rsp + 0x28]	      1982	refs.c	FUNCTION_103	CALL_10
0x4003746	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_190	CALL_2
0x4003749	      0xe800000000	                          call 0x400374e	       279	strbuf.h	FUNCTION_190	CALL_2
0x400374e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       279	strbuf.h	FUNCTION_190	CALL_2
0x4003753	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_190	CALL_2
0x4003756	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_190	CALL_2
0x4003759	      0xe800000000	                          call 0x400375e	       279	strbuf.h	FUNCTION_190	CALL_2
0x400375e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       279	strbuf.h	FUNCTION_190	CALL_2
0x4003763	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_187
0x4003766	     0xf84dc000000	                            je 0x4003848	       141	strbuf.h	FUNCTION_187
0x400376c	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       141	strbuf.h	FUNCTION_187
0x4003771	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x4003775	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x4003778	     0xf84ca000000	                            je 0x4003848	       227	strbuf.h	FUNCTION_189	IF_1	CALL_1
0x400377e	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_189
0x4003782	      0xb901000000	                              mov ecx, 1	      1985	refs.c	FUNCTION_103	CALL_12
0x4003787	          0x4c89ef	                            mov rdi, r13	      1985	refs.c	FUNCTION_103	CALL_12
0x400378a	      0x4889442428	             mov qword [rsp + 0x28], rax	       229	strbuf.h	FUNCTION_189
0x400378f	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       229	strbuf.h	FUNCTION_189
0x4003794	        0xc604102f	              mov byte [rax + rdx], 0x2f	       229	strbuf.h	FUNCTION_189
0x4003798	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       230	strbuf.h	FUNCTION_189
0x400379d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       230	strbuf.h	FUNCTION_189
0x40037a2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_189
0x40037a6	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1985	refs.c	FUNCTION_103	CALL_12
0x40037ab	            0x31d2	                            xor edx, edx	      1985	refs.c	FUNCTION_103	CALL_12
0x40037ad	      0xe800000000	                          call 0x40037b2	      1985	refs.c	FUNCTION_103	CALL_12
0x40037b2	          0x4889c3	                            mov rbx, rax	      1985	refs.c	FUNCTION_103	CALL_12
0x40037b5	           0xf1f00	                         nop dword [rax]	      1985	refs.c	FUNCTION_103	CALL_12
0x40037b8	          0x4889df	                            mov rdi, rbx	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_13
0x40037bb	      0xe800000000	                          call 0x40037c0	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_13
0x40037c0	            0x85c0	                           test eax, eax	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_13
0x40037c2	          0x4189c5	                           mov r13d, eax	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_13
0x40037c5	     0xf85e8000000	                           jne 0x40038b3	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_13
0x40037cb	          0x4885ed	                           test rbp, rbp	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x40037ce	            0x7410	                            je 0x40037e0	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x40037d0	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_14
0x40037d4	          0x4889ef	                            mov rdi, rbp	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_14
0x40037d7	      0xe800000000	                          call 0x40037dc	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_14
0x40037dc	            0x85c0	                           test eax, eax	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x40037de	            0x75d8	                           jne 0x40037b8	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x40037e0	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x40037e4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x40037e9	          0x4c89e1	                            mov rcx, r12	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x40037ec	      0xbe00000000	                              mov esi, 0	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x40037f1	            0x31c0	                            xor eax, eax	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x40037f3	      0x4c8d742440	                   lea r14, [rsp + 0x40]	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x40037f8	      0xe800000000	                          call 0x40037fd	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x40037fd	          0x4889df	                            mov rdi, rbx	      1994	refs.c	FUNCTION_103	WHILE_1	CALL_16
0x4003800	      0xbbffffffff	                     mov ebx, 0xffffffff	      1939	refs.c	FUNCTION_103
0x4003805	      0xe800000000	                          call 0x400380a	      1994	refs.c	FUNCTION_103	WHILE_1	CALL_16
0x400380a	          0x4c89f7	                            mov rdi, r14	      2009	refs.c	FUNCTION_103	CALL_20
0x400380d	      0xe800000000	                          call 0x4003812	      2009	refs.c	FUNCTION_103	CALL_20
0x4003812	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2010	refs.c	FUNCTION_103	CALL_21
0x4003817	      0xe800000000	                          call 0x400381c	      2010	refs.c	FUNCTION_103	CALL_21
0x400381c	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      2012	refs.c	FUNCTION_103
0x4003821	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2012	refs.c	FUNCTION_103
0x400382a	            0x89d8	                            mov eax, ebx	      2012	refs.c	FUNCTION_103
0x400382c	     0xf85ea000000	                           jne 0x400391c	      2012	refs.c	FUNCTION_103
0x4003832	    0x4881c4880000	                           add rsp, 0x88	      2012	refs.c	FUNCTION_103
0x4003839	              0x5b	                                 pop rbx	      2012	refs.c	FUNCTION_103
0x400383a	              0x5d	                                 pop rbp	      2012	refs.c	FUNCTION_103
0x400383b	            0x415c	                                 pop r12	      2012	refs.c	FUNCTION_103
0x400383d	            0x415d	                                 pop r13	      2012	refs.c	FUNCTION_103
0x400383f	            0x415e	                                 pop r14	      2012	refs.c	FUNCTION_103
0x4003841	            0x415f	                                 pop r15	      2012	refs.c	FUNCTION_103
0x4003843	              0xc3	                                     ret	      2012	refs.c	FUNCTION_103
0x4003844	         0xf1f4000	                         nop dword [rax]	      2012	refs.c	FUNCTION_103
0x4003848	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       228	strbuf.h	FUNCTION_189	CALL_2
0x400384d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_189	CALL_2
0x4003852	      0xe800000000	                          call 0x4003857	       228	strbuf.h	FUNCTION_189	CALL_2
0x4003857	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       228	strbuf.h	FUNCTION_189	CALL_2
0x400385c	      0xe91dffffff	                           jmp 0x400377e	       228	strbuf.h	FUNCTION_189	CALL_2
0x4003861	     0xf1f80000000	                         nop dword [rax]	       228	strbuf.h	FUNCTION_189	CALL_2
0x4003868	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x400386d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x4003872	          0x4c89e1	                            mov rcx, r12	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x4003875	      0xbe00000000	                              mov esi, 0	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x400387a	            0x31c0	                            xor eax, eax	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x400387c	      0xbbffffffff	                     mov ebx, 0xffffffff	      1939	refs.c	FUNCTION_103
0x4003881	      0xe800000000	                          call 0x4003886	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x4003886	            0xeb82	                           jmp 0x400380a	      1964	refs.c	FUNCTION_103	FOR_1	IF_2
0x4003888	     0xf1f84000000	                   nop dword [rax + rax]	      1964	refs.c	FUNCTION_103	FOR_1	IF_2
0x4003890	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_9
0x4003895	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_9
0x400389a	          0x4c89e2	                            mov rdx, r12	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_9
0x400389d	      0xbe00000000	                              mov esi, 0	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_9
0x40038a2	            0x31c0	                            xor eax, eax	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_9
0x40038a4	      0xbbffffffff	                     mov ebx, 0xffffffff	      1939	refs.c	FUNCTION_103
0x40038a9	      0xe800000000	                          call 0x40038ae	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_9
0x40038ae	      0xe957ffffff	                           jmp 0x400380a	      1970	refs.c	FUNCTION_103	FOR_1	IF_3
0x40038b3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1998	refs.c	FUNCTION_103	IF_5
0x40038b6	            0x753f	                           jne 0x40038f7	      1998	refs.c	FUNCTION_103	IF_5
0x40038b8	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2001	refs.c	FUNCTION_103	CALL_18
0x40038bd	          0x4889ea	                            mov rdx, rbp	      2001	refs.c	FUNCTION_103	CALL_18
0x40038c0	          0x4c89fe	                            mov rsi, r15	      2001	refs.c	FUNCTION_103	CALL_18
0x40038c3	            0x31db	                            xor ebx, ebx	      2006	refs.c	FUNCTION_103	ELSE_1
0x40038c5	      0x4c8d742440	                   lea r14, [rsp + 0x40]	      2006	refs.c	FUNCTION_103	ELSE_1
0x40038ca	      0xe800000000	                          call 0x40038cf	      2001	refs.c	FUNCTION_103	CALL_18
0x40038cf	          0x4885c0	                           test rax, rax	      2002	refs.c	FUNCTION_103	IF_6
0x40038d2	     0xf8432ffffff	                            je 0x400380a	      2002	refs.c	FUNCTION_103	IF_6
0x40038d8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2003	refs.c	FUNCTION_103	IF_6	CALL_19
0x40038dd	          0x4889c1	                            mov rcx, rax	      2003	refs.c	FUNCTION_103	IF_6	CALL_19
0x40038e0	          0x4c89e2	                            mov rdx, r12	      2003	refs.c	FUNCTION_103	IF_6	CALL_19
0x40038e3	      0xbe00000000	                              mov esi, 0	      2003	refs.c	FUNCTION_103	IF_6	CALL_19
0x40038e8	            0x31c0	                            xor eax, eax	      2003	refs.c	FUNCTION_103	IF_6	CALL_19
0x40038ea	          0x4489eb	                           mov ebx, r13d	      1939	refs.c	FUNCTION_103
0x40038ed	      0xe800000000	                          call 0x40038f2	      2003	refs.c	FUNCTION_103	IF_6	CALL_19
0x40038f2	      0xe913ffffff	                           jmp 0x400380a	      2003	refs.c	FUNCTION_103	IF_6	CALL_19
0x40038f7	      0xbf00000000	                              mov edi, 0	      1999	refs.c	FUNCTION_103	CALL_17
0x40038fc	            0x31c0	                            xor eax, eax	      1999	refs.c	FUNCTION_103	CALL_17
0x40038fe	      0xe800000000	                          call 0x4003903	      1999	refs.c	FUNCTION_103	CALL_17
0x4003903	      0xb900000000	                              mov ecx, 0	      1946	refs.c	FUNCTION_103	CALL_1
0x4003908	      0xba9a070000	                          mov edx, 0x79a	      1946	refs.c	FUNCTION_103	CALL_1
0x400390d	      0xbe00000000	                              mov esi, 0	      1946	refs.c	FUNCTION_103	CALL_1
0x4003912	      0xbf00000000	                              mov edi, 0	      1946	refs.c	FUNCTION_103	CALL_1
0x4003917	      0xe800000000	                          call 0x400391c	      1946	refs.c	FUNCTION_103	CALL_1
0x400391c	      0xe800000000	                          call 0x4003921	      2012	refs.c	FUNCTION_103
ref_filter_match	CALL,0:IF,3:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,2	75
0x40008e0	            0x4155	                                push r13	       266	refs.c	FUNCTION_14
0x40008e2	            0x4154	                                push r12	       266	refs.c	FUNCTION_14
0x40008e4	          0x4989fc	                            mov r12, rdi	       266	refs.c	FUNCTION_14
0x40008e7	              0x55	                                push rbp	       266	refs.c	FUNCTION_14
0x40008e8	              0x53	                                push rbx	       266	refs.c	FUNCTION_14
0x40008e9	          0x4889f5	                            mov rbp, rsi	       266	refs.c	FUNCTION_14
0x40008ec	        0x4883ec08	                              sub rsp, 8	       266	refs.c	FUNCTION_14
0x40008f0	          0x4885d2	                           test rdx, rdx	       269	refs.c	FUNCTION_14	IF_1
0x40008f3	            0x745b	                            je 0x4000950	       269	refs.c	FUNCTION_14	IF_1
0x40008f5	          0x8b4208	                mov eax, dword [rdx + 8]	       269	refs.c	FUNCTION_14	IF_1
0x40008f8	          0x4989d5	                            mov r13, rdx	       269	refs.c	FUNCTION_14	IF_1
0x40008fb	            0x85c0	                           test eax, eax	       269	refs.c	FUNCTION_14	IF_1
0x40008fd	            0x7451	                            je 0x4000950	       269	refs.c	FUNCTION_14	IF_1
0x40008ff	          0x488b1a	                    mov rbx, qword [rdx]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000902	          0x4885db	                           test rbx, rbx	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000905	            0x7449	                            je 0x4000950	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000907	        0x48c1e004	                              shl rax, 4	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x400090b	          0x4801d8	                            add rax, rbx	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x400090e	          0x4839c3	                            cmp rbx, rax	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000911	            0x721c	                            jb 0x400092f	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000913	            0xeb3b	                           jmp 0x4000950	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000915	           0xf1f00	                         nop dword [rax]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000918	        0x4883c310	                           add rbx, 0x10	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x400091c	            0x7432	                            je 0x4000950	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x400091e	        0x418b4508	                mov eax, dword [r13 + 8]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000922	        0x48c1e004	                              shl rax, 4	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000926	        0x49034500	                    add rax, qword [r13]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x400092a	          0x4839c3	                            cmp rbx, rax	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x400092d	            0x7321	                           jae 0x4000950	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x400092f	          0x4889de	                            mov rsi, rbx	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000932	          0x4c89e7	                            mov rdi, r12	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000935	      0xe846fcffff	              call sym.match_ref_pattern	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x400093a	            0x85c0	                           test eax, eax	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x400093c	            0x74da	                            je 0x4000918	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x400093e	        0x4883c408	                              add rsp, 8	       289	refs.c	FUNCTION_14
0x4000942	            0x31c0	                            xor eax, eax	       272	refs.c	FUNCTION_14	FUNCTION_1	IF_1
0x4000944	              0x5b	                                 pop rbx	       289	refs.c	FUNCTION_14
0x4000945	              0x5d	                                 pop rbp	       289	refs.c	FUNCTION_14
0x4000946	            0x415c	                                 pop r12	       289	refs.c	FUNCTION_14
0x4000948	            0x415d	                                 pop r13	       289	refs.c	FUNCTION_14
0x400094a	              0xc3	                                     ret	       289	refs.c	FUNCTION_14
0x400094b	       0xf1f440000	                   nop dword [rax + rax]	       289	refs.c	FUNCTION_14
0x4000950	          0x4885ed	                           test rbp, rbp	       276	refs.c	FUNCTION_14	IF_2
0x4000953	            0x7448	                            je 0x400099d	       276	refs.c	FUNCTION_14	IF_2
0x4000955	          0x8b4508	                mov eax, dword [rbp + 8]	       276	refs.c	FUNCTION_14	IF_2
0x4000958	            0x85c0	                           test eax, eax	       276	refs.c	FUNCTION_14	IF_2
0x400095a	            0x7441	                            je 0x400099d	       276	refs.c	FUNCTION_14	IF_2
0x400095c	        0x488b5d00	                    mov rbx, qword [rbp]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000960	          0x4885db	                           test rbx, rbx	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000963	            0x74d9	                            je 0x400093e	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000965	        0x48c1e004	                              shl rax, 4	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000969	          0x4801d8	                            add rax, rbx	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x400096c	          0x4839c3	                            cmp rbx, rax	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x400096f	            0x721d	                            jb 0x400098e	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000971	            0xebcb	                           jmp 0x400093e	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000973	       0xf1f440000	                   nop dword [rax + rax]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000978	        0x4883c310	                           add rbx, 0x10	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x400097c	            0x74c0	                            je 0x400093e	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x400097e	          0x8b4508	                mov eax, dword [rbp + 8]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000981	        0x48c1e004	                              shl rax, 4	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000985	        0x48034500	                    add rax, qword [rbp]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000989	          0x4839c3	                            cmp rbx, rax	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x400098c	            0x73b0	                           jae 0x400093e	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x400098e	          0x4889de	                            mov rsi, rbx	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000991	          0x4c89e7	                            mov rdi, r12	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000994	      0xe8e7fbffff	              call sym.match_ref_pattern	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000999	            0x85c0	                           test eax, eax	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x400099b	            0x74db	                            je 0x4000978	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x400099d	        0x4883c408	                              add rsp, 8	       289	refs.c	FUNCTION_14
0x40009a1	      0xb801000000	                              mov eax, 1	       288	refs.c	FUNCTION_14
0x40009a6	              0x5b	                                 pop rbx	       289	refs.c	FUNCTION_14
0x40009a7	              0x5d	                                 pop rbp	       289	refs.c	FUNCTION_14
0x40009a8	            0x415c	                                 pop r12	       289	refs.c	FUNCTION_14
0x40009aa	            0x415d	                                 pop r13	       289	refs.c	FUNCTION_14
0x40009ac	              0xc3	                                     ret	       289	refs.c	FUNCTION_14
ref_transaction_create	CALL,3:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	41
0x4001370	            0x4157	                                push r15	      1036	refs.c	FUNCTION_56
0x4001372	            0x4156	                                push r14	      1036	refs.c	FUNCTION_56
0x4001374	            0x4155	                                push r13	      1036	refs.c	FUNCTION_56
0x4001376	            0x4154	                                push r12	      1036	refs.c	FUNCTION_56
0x4001378	              0x55	                                push rbp	      1036	refs.c	FUNCTION_56
0x4001379	              0x53	                                push rbx	      1036	refs.c	FUNCTION_56
0x400137a	        0x4883ec08	                              sub rsp, 8	      1036	refs.c	FUNCTION_56
0x400137e	          0x4885d2	                           test rdx, rdx	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4001381	            0x7456	                            je 0x40013d9	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4001383	          0x4889d3	                            mov rbx, rdx	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4001386	          0x4889fd	                            mov rbp, rdi	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4001389	          0x4989f4	                            mov r12, rsi	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x400138c	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_144	CALL_1
0x4001391	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_144	CALL_1
0x4001396	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_144	CALL_1
0x4001399	          0x4189cd	                           mov r13d, ecx	       975	cache.h	FUNCTION_144	CALL_1
0x400139c	          0x4d89c6	                             mov r14, r8	       975	cache.h	FUNCTION_144	CALL_1
0x400139f	          0x4d89cf	                             mov r15, r9	       975	cache.h	FUNCTION_144	CALL_1
0x40013a2	      0xe800000000	                          call 0x40013a7	       975	cache.h	FUNCTION_144	CALL_1
0x40013a7	            0x85c0	                           test eax, eax	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40013a9	            0x742e	                            je 0x40013d9	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40013ab	        0x4883ec08	                              sub rsp, 8	      1039	refs.c	FUNCTION_56	CALL_3
0x40013af	          0x4d89f1	                             mov r9, r14	      1039	refs.c	FUNCTION_56	CALL_3
0x40013b2	          0x4589e8	                           mov r8d, r13d	      1039	refs.c	FUNCTION_56	CALL_3
0x40013b5	            0x4157	                                push r15	      1039	refs.c	FUNCTION_56	CALL_3
0x40013b7	          0x4889da	                            mov rdx, rbx	      1039	refs.c	FUNCTION_56	CALL_3
0x40013ba	          0x4c89e6	                            mov rsi, r12	      1039	refs.c	FUNCTION_56	CALL_3
0x40013bd	          0x4889ef	                            mov rdi, rbp	      1039	refs.c	FUNCTION_56	CALL_3
0x40013c0	      0xb900000000	                              mov ecx, 0	      1039	refs.c	FUNCTION_56	CALL_3
0x40013c5	      0xe800000000	                          call 0x40013ca	      1039	refs.c	FUNCTION_56	CALL_3
0x40013ca	        0x4883c418	                           add rsp, 0x18	      1041	refs.c	FUNCTION_56
0x40013ce	              0x5b	                                 pop rbx	      1041	refs.c	FUNCTION_56
0x40013cf	              0x5d	                                 pop rbp	      1041	refs.c	FUNCTION_56
0x40013d0	            0x415c	                                 pop r12	      1041	refs.c	FUNCTION_56
0x40013d2	            0x415d	                                 pop r13	      1041	refs.c	FUNCTION_56
0x40013d4	            0x415e	                                 pop r14	      1041	refs.c	FUNCTION_56
0x40013d6	            0x415f	                                 pop r15	      1041	refs.c	FUNCTION_56
0x40013d8	              0xc3	                                     ret	      1041	refs.c	FUNCTION_56
0x40013d9	      0xbf00000000	                              mov edi, 0	      1038	refs.c	FUNCTION_56	CALL_2
0x40013de	            0x31c0	                            xor eax, eax	      1038	refs.c	FUNCTION_56	CALL_2
0x40013e0	      0xe800000000	                          call 0x40013e5	      1038	refs.c	FUNCTION_56	CALL_2
for_each_tag_ref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	15
0x4001d30	              0x55	                                push rbp	       379	refs.c	FUNCTION_21
0x4001d31	              0x53	                                push rbx	       379	refs.c	FUNCTION_21
0x4001d32	          0x4889fb	                            mov rbx, rdi	       379	refs.c	FUNCTION_21
0x4001d35	          0x4889f5	                            mov rbp, rsi	       379	refs.c	FUNCTION_21
0x4001d38	        0x4883ec08	                              sub rsp, 8	       379	refs.c	FUNCTION_21
0x4001d3c	    0x488b3d000000	            mov rdi, qword [0x04001d43] 	       380	refs.c	FUNCTION_21	CALL_2
0x4001d43	      0xe800000000	                          call 0x4001d48	       380	refs.c	FUNCTION_21	CALL_2
0x4001d48	        0x4883c408	                              add rsp, 8	       381	refs.c	FUNCTION_21
0x4001d4c	          0x4889e9	                            mov rcx, rbp	       375	refs.c	FUNCTION_20	CALL_1
0x4001d4f	          0x4889da	                            mov rdx, rbx	       375	refs.c	FUNCTION_20	CALL_1
0x4001d52	              0x5b	                                 pop rbx	       381	refs.c	FUNCTION_21
0x4001d53	              0x5d	                                 pop rbp	       381	refs.c	FUNCTION_21
0x4001d54	      0xbe00000000	                              mov esi, 0	       375	refs.c	FUNCTION_20	CALL_1
0x4001d59	          0x4889c7	                            mov rdi, rax	       375	refs.c	FUNCTION_20	CALL_1
0x4001d5c	      0xe9affaffff	            jmp sym.refs_for_each_ref_in	       375	refs.c	FUNCTION_20	CALL_1
initial_ref_transaction_commit	CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	7
0x4003f40	          0x4889f8	                            mov rax, rdi	      2118	refs.c	FUNCTION_118
0x4003f43	          0x488b3f	                    mov rdi, qword [rdi]	      2119	refs.c	FUNCTION_118
0x4003f46	          0x4889f2	                            mov rdx, rsi	      2118	refs.c	FUNCTION_118
0x4003f49	          0x4889c6	                            mov rsi, rax	      2121	refs.c	FUNCTION_118	CALL_1
0x4003f4c	          0x488b0f	                    mov rcx, qword [rdi]	      2121	refs.c	FUNCTION_118	CALL_1
0x4003f4f	        0x488b4938	            mov rcx, qword [rcx + 0x38] 	      2121	refs.c	FUNCTION_118	CALL_1
0x4003f53	            0xffe1	                                 jmp rcx	      2121	refs.c	FUNCTION_118	CALL_1
for_each_namespaced_ref	CALL,5:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	41
0x40021a0	            0x4154	                                push r12	      1442	refs.c	FUNCTION_77
0x40021a2	              0x55	                                push rbp	      1442	refs.c	FUNCTION_77
0x40021a3	          0x4989f4	                            mov r12, rsi	      1442	refs.c	FUNCTION_77
0x40021a6	              0x53	                                push rbx	      1442	refs.c	FUNCTION_77
0x40021a7	          0x4889fd	                            mov rbp, rdi	      1442	refs.c	FUNCTION_77
0x40021aa	        0x4883ec20	                           sub rsp, 0x20	      1442	refs.c	FUNCTION_77
0x40021ae	    0x64488b042528	                mov rax, qword fs:[0x28]	      1442	refs.c	FUNCTION_77
0x40021b7	      0x4889442418	             mov qword [rsp + 0x18], rax	      1442	refs.c	FUNCTION_77
0x40021bc	            0x31c0	                            xor eax, eax	      1442	refs.c	FUNCTION_77
0x40021be	    0x48c704240000	                      mov qword [rsp], 0	      1443	refs.c	FUNCTION_77
0x40021c6	    0x48c744240800	                  mov qword [rsp + 8], 0	      1443	refs.c	FUNCTION_77
0x40021cf	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1443	refs.c	FUNCTION_77
0x40021d8	      0xe800000000	                          call 0x40021dd	      1445	refs.c	FUNCTION_77	CALL_2
0x40021dd	      0xbe00000000	                              mov esi, 0	      1445	refs.c	FUNCTION_77	CALL_2
0x40021e2	          0x4889c2	                            mov rdx, rax	      1445	refs.c	FUNCTION_77	CALL_2
0x40021e5	          0x4889e7	                            mov rdi, rsp	      1445	refs.c	FUNCTION_77	CALL_2
0x40021e8	            0x31c0	                            xor eax, eax	      1445	refs.c	FUNCTION_77	CALL_2
0x40021ea	      0xe800000000	                          call 0x40021ef	      1445	refs.c	FUNCTION_77	CALL_2
0x40021ef	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1447	refs.c	FUNCTION_77
0x40021f4	    0x488b3d000000	            mov rdi, qword [0x040021fb] 	      1446	refs.c	FUNCTION_77	CALL_4
0x40021fb	      0xe800000000	                          call 0x4002200	      1446	refs.c	FUNCTION_77	CALL_4
0x4002200	          0x4531c0	                            xor r8d, r8d	      1446	refs.c	FUNCTION_77	CALL_4
0x4002203	            0x31c9	                            xor ecx, ecx	      1446	refs.c	FUNCTION_77	CALL_4
0x4002205	          0x4889de	                            mov rsi, rbx	      1446	refs.c	FUNCTION_77	CALL_4
0x4002208	          0x4d89e1	                             mov r9, r12	      1446	refs.c	FUNCTION_77	CALL_4
0x400220b	          0x4889ea	                            mov rdx, rbp	      1446	refs.c	FUNCTION_77	CALL_4
0x400220e	          0x4889c7	                            mov rdi, rax	      1446	refs.c	FUNCTION_77	CALL_4
0x4002211	      0xe89af5ffff	                call sym.do_for_each_ref	      1446	refs.c	FUNCTION_77	CALL_4
0x4002216	          0x4889e7	                            mov rdi, rsp	      1448	refs.c	FUNCTION_77	CALL_5
0x4002219	            0x89c3	                            mov ebx, eax	      1446	refs.c	FUNCTION_77	CALL_4
0x400221b	      0xe800000000	                          call 0x4002220	      1448	refs.c	FUNCTION_77	CALL_5
0x4002220	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1450	refs.c	FUNCTION_77
0x4002225	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1450	refs.c	FUNCTION_77
0x400222e	            0x750b	                           jne 0x400223b	      1450	refs.c	FUNCTION_77
0x4002230	        0x4883c420	                           add rsp, 0x20	      1450	refs.c	FUNCTION_77
0x4002234	            0x89d8	                            mov eax, ebx	      1450	refs.c	FUNCTION_77
0x4002236	              0x5b	                                 pop rbx	      1450	refs.c	FUNCTION_77
0x4002237	              0x5d	                                 pop rbp	      1450	refs.c	FUNCTION_77
0x4002238	            0x415c	                                 pop r12	      1450	refs.c	FUNCTION_77
0x400223a	              0xc3	                                     ret	      1450	refs.c	FUNCTION_77
0x400223b	      0xe800000000	                call sym.for_each_rawref	      1450	refs.c	FUNCTION_77
delete_refs	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	18
0x4003f70	            0x4154	                                push r12	      2132	refs.c	FUNCTION_120
0x4003f72	              0x55	                                push rbp	      2132	refs.c	FUNCTION_120
0x4003f73	          0x4189d4	                           mov r12d, edx	      2132	refs.c	FUNCTION_120
0x4003f76	              0x53	                                push rbx	      2132	refs.c	FUNCTION_120
0x4003f77	          0x4889fb	                            mov rbx, rdi	      2132	refs.c	FUNCTION_120
0x4003f7a	    0x488b3d000000	            mov rdi, qword [0x04003f81] 	      2133	refs.c	FUNCTION_120	CALL_2
0x4003f81	          0x4889f5	                            mov rbp, rsi	      2132	refs.c	FUNCTION_120
0x4003f84	      0xe800000000	                          call 0x4003f89	      2133	refs.c	FUNCTION_120	CALL_2
0x4003f89	          0x488b10	                    mov rdx, qword [rax]	      2127	refs.c	FUNCTION_119	CALL_1
0x4003f8c	          0x4489e1	                           mov ecx, r12d	      2127	refs.c	FUNCTION_119	CALL_1
0x4003f8f	          0x4889de	                            mov rsi, rbx	      2127	refs.c	FUNCTION_119	CALL_1
0x4003f92	              0x5b	                                 pop rbx	      2134	refs.c	FUNCTION_120
0x4003f93	          0x4889c7	                            mov rdi, rax	      2127	refs.c	FUNCTION_119	CALL_1
0x4003f96	        0x4c8b4250	              mov r8, qword [rdx + 0x50]	      2127	refs.c	FUNCTION_119	CALL_1
0x4003f9a	          0x4889ea	                            mov rdx, rbp	      2127	refs.c	FUNCTION_119	CALL_1
0x4003f9d	              0x5d	                                 pop rbp	      2134	refs.c	FUNCTION_120
0x4003f9e	            0x415c	                                 pop r12	      2134	refs.c	FUNCTION_120
0x4003fa0	          0x41ffe0	                                  jmp r8	      2127	refs.c	FUNCTION_119	CALL_1
copy_existing_ref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	18
0x4004010	            0x4154	                                push r12	      2154	refs.c	FUNCTION_124
0x4004012	              0x55	                                push rbp	      2154	refs.c	FUNCTION_124
0x4004013	          0x4989d4	                            mov r12, rdx	      2154	refs.c	FUNCTION_124
0x4004016	              0x53	                                push rbx	      2154	refs.c	FUNCTION_124
0x4004017	          0x4889fb	                            mov rbx, rdi	      2154	refs.c	FUNCTION_124
0x400401a	    0x488b3d000000	            mov rdi, qword [0x04004021] 	      2155	refs.c	FUNCTION_124	CALL_2
0x4004021	          0x4889f5	                            mov rbp, rsi	      2154	refs.c	FUNCTION_124
0x4004024	      0xe800000000	                          call 0x4004029	      2155	refs.c	FUNCTION_124	CALL_2
0x4004029	          0x488b10	                    mov rdx, qword [rax]	      2150	refs.c	FUNCTION_123	CALL_1
0x400402c	          0x4c89e1	                            mov rcx, r12	      2150	refs.c	FUNCTION_123	CALL_1
0x400402f	          0x4889de	                            mov rsi, rbx	      2150	refs.c	FUNCTION_123	CALL_1
0x4004032	              0x5b	                                 pop rbx	      2156	refs.c	FUNCTION_124
0x4004033	          0x4889c7	                            mov rdi, rax	      2150	refs.c	FUNCTION_123	CALL_1
0x4004036	        0x4c8b4260	              mov r8, qword [rdx + 0x60]	      2150	refs.c	FUNCTION_123	CALL_1
0x400403a	          0x4889ea	                            mov rdx, rbp	      2150	refs.c	FUNCTION_123	CALL_1
0x400403d	              0x5d	                                 pop rbp	      2156	refs.c	FUNCTION_124
0x400403e	            0x415c	                                 pop r12	      2156	refs.c	FUNCTION_124
0x4004040	          0x41ffe0	                                  jmp r8	      2150	refs.c	FUNCTION_123	CALL_1
peel_ref	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	14
0x4002d10	              0x55	                                push rbp	      1800	refs.c	FUNCTION_96
0x4002d11	              0x53	                                push rbx	      1800	refs.c	FUNCTION_96
0x4002d12	          0x4889fb	                            mov rbx, rdi	      1800	refs.c	FUNCTION_96
0x4002d15	          0x4889f5	                            mov rbp, rsi	      1800	refs.c	FUNCTION_96
0x4002d18	        0x4883ec08	                              sub rsp, 8	      1800	refs.c	FUNCTION_96
0x4002d1c	    0x488b3d000000	            mov rdi, qword [0x04002d23] 	      1801	refs.c	FUNCTION_96	CALL_2
0x4002d23	      0xe800000000	                          call 0x4002d28	      1801	refs.c	FUNCTION_96	CALL_2
0x4002d28	        0x4883c408	                              add rsp, 8	      1802	refs.c	FUNCTION_96
0x4002d2c	          0x4889ea	                            mov rdx, rbp	      1801	refs.c	FUNCTION_96	CALL_2
0x4002d2f	          0x4889de	                            mov rsi, rbx	      1801	refs.c	FUNCTION_96	CALL_2
0x4002d32	              0x5b	                                 pop rbx	      1802	refs.c	FUNCTION_96
0x4002d33	              0x5d	                                 pop rbp	      1802	refs.c	FUNCTION_96
0x4002d34	          0x4889c7	                            mov rdi, rax	      1801	refs.c	FUNCTION_96	CALL_2
0x4002d37	      0xe924ffffff	                   jmp sym.refs_peel_ref	      1801	refs.c	FUNCTION_96	CALL_2
ref_transaction_commit	CALL,4:IF,1:FOR,0:DO,0:SWITCH,1:ELSE,0:WHILE,0:functions,0	36
0x4002f60	            0x4154	                                push r12	      1900	refs.c	FUNCTION_102
0x4002f62	              0x55	                                push rbp	      1900	refs.c	FUNCTION_102
0x4002f63	          0x4989f4	                            mov r12, rsi	      1900	refs.c	FUNCTION_102
0x4002f66	              0x53	                                push rbx	      1900	refs.c	FUNCTION_102
0x4002f67	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002f6a	          0x4889fb	                            mov rbx, rdi	      1900	refs.c	FUNCTION_102
0x4002f6d	          0x488b2f	                    mov rbp, qword [rdi]	      1901	refs.c	FUNCTION_102
0x4002f70	          0x83f801	                              cmp eax, 1	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002f73	            0x7434	                            je 0x4002fa9	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002f75	            0x7229	                            jb 0x4002fa0	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002f77	          0x83f802	                              cmp eax, 2	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002f7a	            0x7514	                           jne 0x4002f90	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002f7c	      0xbf00000000	                              mov edi, 0	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x4002f81	            0x31c0	                            xor eax, eax	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x4002f83	      0xe800000000	                          call 0x4002f88	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x4002f88	     0xf1f84000000	                   nop dword [rax + rax]	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x4002f90	      0xbf00000000	                              mov edi, 0	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x4002f95	            0x31c0	                            xor eax, eax	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x4002f97	      0xe800000000	                          call 0x4002f9c	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x4002f9c	         0xf1f4000	                         nop dword [rax]	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x4002fa0	      0xe800000000	                          call 0x4002fa5	      1907	refs.c	FUNCTION_102	SWITCH_1	CALL_1
0x4002fa5	            0x85c0	                           test eax, eax	      1908	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4002fa7	            0x7517	                           jne 0x4002fc0	      1908	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4002fa9	        0x488b4500	                    mov rax, qword [rbp]	      1922	refs.c	FUNCTION_102	CALL_4
0x4002fad	          0x4c89e2	                            mov rdx, r12	      1922	refs.c	FUNCTION_102	CALL_4
0x4002fb0	          0x4889de	                            mov rsi, rbx	      1922	refs.c	FUNCTION_102	CALL_4
0x4002fb3	          0x4889ef	                            mov rdi, rbp	      1922	refs.c	FUNCTION_102	CALL_4
0x4002fb6	              0x5b	                                 pop rbx	      1923	refs.c	FUNCTION_102
0x4002fb7	              0x5d	                                 pop rbp	      1923	refs.c	FUNCTION_102
0x4002fb8	            0x415c	                                 pop r12	      1923	refs.c	FUNCTION_102
0x4002fba	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1922	refs.c	FUNCTION_102	CALL_4
0x4002fbe	            0xffe0	                                 jmp rax	      1922	refs.c	FUNCTION_102	CALL_4
0x4002fc0	              0x5b	                                 pop rbx	      1923	refs.c	FUNCTION_102
0x4002fc1	              0x5d	                                 pop rbp	      1923	refs.c	FUNCTION_102
0x4002fc2	            0x415c	                                 pop r12	      1923	refs.c	FUNCTION_102
0x4002fc4	              0xc3	                                     ret	      1923	refs.c	FUNCTION_102
resolve_ref_unsafe	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	22
0x4002360	            0x4155	                                push r13	      1573	refs.c	FUNCTION_83
0x4002362	            0x4154	                                push r12	      1573	refs.c	FUNCTION_83
0x4002364	          0x4989cd	                            mov r13, rcx	      1573	refs.c	FUNCTION_83
0x4002367	              0x55	                                push rbp	      1573	refs.c	FUNCTION_83
0x4002368	              0x53	                                push rbx	      1573	refs.c	FUNCTION_83
0x4002369	          0x4889fb	                            mov rbx, rdi	      1573	refs.c	FUNCTION_83
0x400236c	            0x89f5	                            mov ebp, esi	      1573	refs.c	FUNCTION_83
0x400236e	          0x4989d4	                            mov r12, rdx	      1573	refs.c	FUNCTION_83
0x4002371	        0x4883ec08	                              sub rsp, 8	      1573	refs.c	FUNCTION_83
0x4002375	    0x488b3d000000	            mov rdi, qword [0x0400237c] 	      1574	refs.c	FUNCTION_83	CALL_2
0x400237c	      0xe800000000	                          call 0x4002381	      1574	refs.c	FUNCTION_83	CALL_2
0x4002381	        0x4883c408	                              add rsp, 8	      1576	refs.c	FUNCTION_83
0x4002385	          0x4d89e8	                             mov r8, r13	      1574	refs.c	FUNCTION_83	CALL_2
0x4002388	          0x4c89e1	                            mov rcx, r12	      1574	refs.c	FUNCTION_83	CALL_2
0x400238b	            0x89ea	                            mov edx, ebp	      1574	refs.c	FUNCTION_83	CALL_2
0x400238d	          0x4889de	                            mov rsi, rbx	      1574	refs.c	FUNCTION_83	CALL_2
0x4002390	          0x4889c7	                            mov rdi, rax	      1574	refs.c	FUNCTION_83	CALL_2
0x4002393	              0x5b	                                 pop rbx	      1576	refs.c	FUNCTION_83
0x4002394	              0x5d	                                 pop rbp	      1576	refs.c	FUNCTION_83
0x4002395	            0x415c	                                 pop r12	      1576	refs.c	FUNCTION_83
0x4002397	            0x415d	                                 pop r13	      1576	refs.c	FUNCTION_83
0x4002399	      0xe932f5ffff	         jmp sym.refs_resolve_ref_unsafe	      1574	refs.c	FUNCTION_83	CALL_2
delete_reflog	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	10
0x4003ea0	              0x53	                                push rbx	      2086	refs.c	FUNCTION_115
0x4003ea1	          0x4889fb	                            mov rbx, rdi	      2086	refs.c	FUNCTION_115
0x4003ea4	    0x488b3d000000	            mov rdi, qword [0x04003eab] 	      2087	refs.c	FUNCTION_115	CALL_2
0x4003eab	      0xe800000000	                          call 0x4003eb0	      2087	refs.c	FUNCTION_115	CALL_2
0x4003eb0	          0x488b10	                    mov rdx, qword [rax]	      2082	refs.c	FUNCTION_114	CALL_1
0x4003eb3	          0x4889de	                            mov rsi, rbx	      2082	refs.c	FUNCTION_114	CALL_1
0x4003eb6	          0x4889c7	                            mov rdi, rax	      2082	refs.c	FUNCTION_114	CALL_1
0x4003eb9	              0x5b	                                 pop rbx	      2088	refs.c	FUNCTION_115
0x4003eba	    0x488b92a00000	            mov rdx, qword [rdx + 0xa0] 	      2082	refs.c	FUNCTION_114	CALL_1
0x4003ec1	            0xffe2	                                 jmp rdx	      2082	refs.c	FUNCTION_114	CALL_1
for_each_reflog	CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	17
0x4003a30	              0x55	                                push rbp	      2024	refs.c	FUNCTION_105
0x4003a31	              0x53	                                push rbx	      2024	refs.c	FUNCTION_105
0x4003a32	          0x4889fb	                            mov rbx, rdi	      2024	refs.c	FUNCTION_105
0x4003a35	          0x4889f5	                            mov rbp, rsi	      2024	refs.c	FUNCTION_105
0x4003a38	        0x4883ec08	                              sub rsp, 8	      2024	refs.c	FUNCTION_105
0x4003a3c	    0x488b3d000000	            mov rdi, qword [0x04003a43] 	      2025	refs.c	FUNCTION_105	CALL_2
0x4003a43	      0xe800000000	                          call 0x4003a48	      2025	refs.c	FUNCTION_105	CALL_2
0x4003a48	          0x488b10	                    mov rdx, qword [rax]	      2018	refs.c	FUNCTION_104	CALL_1
0x4003a4b	          0x4889c7	                            mov rdi, rax	      2018	refs.c	FUNCTION_104	CALL_1
0x4003a4e	          0xff5278	                 call qword [rdx + 0x78]	      2018	refs.c	FUNCTION_104	CALL_1
0x4003a51	        0x4883c408	                              add rsp, 8	      2026	refs.c	FUNCTION_105
0x4003a55	          0x4889ea	                            mov rdx, rbp	      2020	refs.c	FUNCTION_104	CALL_2
0x4003a58	          0x4889de	                            mov rsi, rbx	      2020	refs.c	FUNCTION_104	CALL_2
0x4003a5b	              0x5b	                                 pop rbx	      2026	refs.c	FUNCTION_105
0x4003a5c	              0x5d	                                 pop rbp	      2026	refs.c	FUNCTION_105
0x4003a5d	          0x4889c7	                            mov rdi, rax	      2020	refs.c	FUNCTION_104	CALL_2
0x4003a60	      0xe900000000	                           jmp 0x4003a65	      2020	refs.c	FUNCTION_104	CALL_2
prettify_refname	CALL,3:IF,1:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	41
0x4000c10	          0x4889f8	                            mov rax, rdi	       474	refs.c	FUNCTION_30
0x4000c13	      0xba00000000	                              mov edx, 0	       474	refs.c	FUNCTION_30
0x4000c18	            0xeb13	                           jmp 0x4000c2d	       474	refs.c	FUNCTION_30
0x4000c1a	    0x660f1f440000	                    nop word [rax + rax]	       474	refs.c	FUNCTION_30
0x4000c20	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c24	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c28	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c2b	            0x7513	                           jne 0x4000c40	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c2d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c30	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c32	            0x75ec	                           jne 0x4000c20	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c34	            0xf3c3	                                     ret	       480	refs.c	FUNCTION_30
0x4000c36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       480	refs.c	FUNCTION_30
0x4000c40	          0x4889f8	                            mov rax, rdi	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c43	      0xba00000000	                              mov edx, 0	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c48	            0xeb13	                           jmp 0x4000c5d	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c4a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c50	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c54	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c58	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c5b	            0x7513	                           jne 0x4000c70	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c5d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c60	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c62	            0x75ec	                           jne 0x4000c50	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c64	            0xebce	                           jmp 0x4000c34	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c70	          0x4889f8	                            mov rax, rdi	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c73	      0xba00000000	                              mov edx, 0	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c78	            0xeb13	                           jmp 0x4000c8d	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c7a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c80	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c84	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c88	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c8b	            0x7513	                           jne 0x4000ca0	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000c8d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c90	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c92	            0x75ec	                           jne 0x4000c80	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c94	            0xeb9e	                           jmp 0x4000c34	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000c96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       484	git-compat-util.h	FUNCTION_221	DO_1	IF_1
0x4000ca0	          0x4889f8	                            mov rax, rdi	       488	git-compat-util.h	FUNCTION_221	DO_1
0x4000ca3	              0xc3	                                     ret	       480	refs.c	FUNCTION_30
