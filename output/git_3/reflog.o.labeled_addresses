reflog_expiry_prepare	functions,0:IF,5:CALL,6:DO,0:ELSE,3:WHILE,0:SWITCH,0:FOR,1	73
0x4000a50	    0x488b82d80800	           mov rax, qword [rdx + 0x8d8] 	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000a57	            0x4154	                                push r12	       333	reflog.c	FUNCTION_8
0x4000a59	              0x55	                                push rbp	       333	reflog.c	FUNCTION_8
0x4000a5a	              0x53	                                push rbx	       333	reflog.c	FUNCTION_8
0x4000a5b	          0x4889d3	                            mov rbx, rdx	       333	reflog.c	FUNCTION_8
0x4000a5e	          0x4885c0	                           test rax, rax	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000a61	            0x741b	                            je 0x4000a7e	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000a63	          0x4989f8	                             mov r8, rdi	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000a66	          0x4989f1	                             mov r9, rsi	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000a69	      0xbf00000000	                              mov edi, 0	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000a6e	      0xb905000000	                              mov ecx, 5	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000a73	          0x4c89c6	                             mov rsi, r8	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000a76	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000a78	     0xf85da000000	                           jne 0x4000b58	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000a7e	    0x48c783e80800	              mov qword [rbx + 0x8e8], 0	       337	reflog.c	FUNCTION_8	IF_1
0x4000a89	    0xc70302000000	                      mov dword [rbx], 2	       338	reflog.c	FUNCTION_8	IF_1
0x4000a8f	    0x483983d00800	           cmp qword [rbx + 0x8d0], rax 	       347	reflog.c	FUNCTION_8	IF_3
0x4000a96	            0x7350	                           jae 0x4000ae8	       347	reflog.c	FUNCTION_8	IF_3
0x4000a98	            0x8b03	                    mov eax, dword [rbx]	       347	reflog.c	FUNCTION_8	IF_3
0x4000a9a	    0x48c743080000	                  mov qword [rbx + 8], 0	       350	reflog.c	FUNCTION_8
0x4000aa2	    0x48c783f00800	              mov qword [rbx + 0x8f0], 0	       351	reflog.c	FUNCTION_8
0x4000aad	          0x83f801	                              cmp eax, 1	       352	reflog.c	FUNCTION_8	IF_4
0x4000ab0	            0x744f	                            je 0x4000b01	       352	reflog.c	FUNCTION_8	IF_4
0x4000ab2	          0x83f802	                              cmp eax, 2	       353	reflog.c	FUNCTION_8	IF_4	IF_5
0x4000ab5	            0x7459	                            je 0x4000b10	       353	reflog.c	FUNCTION_8	IF_4	IF_5
0x4000ab7	        0x4c8d6308	                      lea r12, [rbx + 8]	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0x4000abb	    0x488bbbe80800	           mov rdi, qword [rbx + 0x8e8] 	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0x4000ac2	          0x4c89e6	                            mov rsi, r12	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0x4000ac5	      0xe800000000	                          call 0x4000aca	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0x4000aca	    0x488bb3d00800	           mov rsi, qword [rbx + 0x8d0] 	       362	reflog.c	FUNCTION_8	IF_4
0x4000ad1	          0x4c89e7	                            mov rdi, r12	       363	reflog.c	FUNCTION_8	IF_4	CALL_6
0x4000ad4	        0x48897310	             mov qword [rbx + 0x10], rsi	       362	reflog.c	FUNCTION_8	IF_4
0x4000ad8	              0x5b	                                 pop rbx	       365	reflog.c	FUNCTION_8
0x4000ad9	              0x5d	                                 pop rbp	       365	reflog.c	FUNCTION_8
0x4000ada	            0x415c	                                 pop r12	       365	reflog.c	FUNCTION_8
0x4000adc	      0xe9cffdffff	           jmp sym.mark_reachable.isra.3	       363	reflog.c	FUNCTION_8	IF_4	CALL_6
0x4000ae1	     0xf1f80000000	                         nop dword [rax]	       363	reflog.c	FUNCTION_8	IF_4	CALL_6
0x4000ae8	    0xc70301000000	                      mov dword [rbx], 1	       348	reflog.c	FUNCTION_8	IF_3
0x4000aee	    0x48c743080000	                  mov qword [rbx + 8], 0	       350	reflog.c	FUNCTION_8
0x4000af6	    0x48c783f00800	              mov qword [rbx + 0x8f0], 0	       351	reflog.c	FUNCTION_8
0x4000b01	              0x5b	                                 pop rbx	       365	reflog.c	FUNCTION_8
0x4000b02	              0x5d	                                 pop rbp	       365	reflog.c	FUNCTION_8
0x4000b03	            0x415c	                                 pop r12	       365	reflog.c	FUNCTION_8
0x4000b05	              0xc3	                                     ret	       365	reflog.c	FUNCTION_8
0x4000b06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       365	reflog.c	FUNCTION_8
0x4000b10	    0x488db3f00800	                  lea rsi, [rbx + 0x8f0]	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0x4000b17	      0xbf00000000	                              mov edi, 0	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0x4000b1c	        0x4c8d6308	                      lea r12, [rbx + 8]	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0x4000b20	      0xe800000000	                          call 0x4000b25	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0x4000b25	    0x488babf00800	           mov rbp, qword [rbx + 0x8f0] 	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000b2c	          0x4885ed	                           test rbp, rbp	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000b2f	            0x7499	                            je 0x4000aca	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000b31	     0xf1f80000000	                         nop dword [rax]	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000b38	        0x488b7d00	                    mov rdi, qword [rbp]	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0x4000b3c	          0x4c89e6	                            mov rsi, r12	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0x4000b3f	      0xe800000000	                          call 0x4000b44	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0x4000b44	        0x488b6d08	                mov rbp, qword [rbp + 8]	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000b48	          0x4885ed	                           test rbp, rbp	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000b4b	            0x75eb	                           jne 0x4000b38	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000b4d	      0xe978ffffff	                           jmp 0x4000aca	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000b52	    0x660f1f440000	                    nop word [rax + rax]	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000b58	      0xbe01000000	                              mov esi, 1	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0x4000b5d	          0x4c89cf	                             mov rdi, r9	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0x4000b60	      0xe800000000	                          call 0x4000b65	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0x4000b65	          0x4885c0	                           test rax, rax	       341	reflog.c	FUNCTION_8	ELSE_1	IF_2
0x4000b68	    0x488983e80800	            mov qword [rbx + 0x8e8], rax	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0x4000b6f	            0x7412	                            je 0x4000b83	       341	reflog.c	FUNCTION_8	ELSE_1	IF_2
0x4000b71	    0xc70300000000	                      mov dword [rbx], 0	       344	reflog.c	FUNCTION_8	ELSE_1	ELSE_2
0x4000b77	    0x488b83d80800	           mov rax, qword [rbx + 0x8d8] 	       344	reflog.c	FUNCTION_8	ELSE_1	ELSE_2
0x4000b7e	      0xe90cffffff	                           jmp 0x4000a8f	       344	reflog.c	FUNCTION_8	ELSE_1	ELSE_2
0x4000b83	    0xc70301000000	                      mov dword [rbx], 1	       342	reflog.c	FUNCTION_8	ELSE_1	IF_2
0x4000b89	    0x488b83d80800	           mov rax, qword [rbx + 0x8d8] 	       342	reflog.c	FUNCTION_8	ELSE_1	IF_2
0x4000b90	      0xe9fafeffff	                           jmp 0x4000a8f	       342	reflog.c	FUNCTION_8	ELSE_1	IF_2
unreachable	functions,0:IF,5:CALL,3:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0	50
0x40009b0	          0x4885f6	                           test rsi, rsi	       262	reflog.c	FUNCTION_5	IF_1
0x40009b3	            0x4154	                                push r12	       257	reflog.c	FUNCTION_5
0x40009b5	              0x55	                                push rbp	       257	reflog.c	FUNCTION_5
0x40009b6	          0x4889fd	                            mov rbp, rdi	       257	reflog.c	FUNCTION_5
0x40009b9	              0x53	                                push rbx	       257	reflog.c	FUNCTION_5
0x40009ba	          0x4889f3	                            mov rbx, rsi	       257	reflog.c	FUNCTION_5
0x40009bd	            0x7431	                            je 0x40009f0	       262	reflog.c	FUNCTION_5	IF_1
0x40009bf	            0x8b13	                    mov edx, dword [rbx]	       274	reflog.c	FUNCTION_5	IF_4
0x40009c1	          0xc1ea04	                              shr edx, 4	       274	reflog.c	FUNCTION_5	IF_4
0x40009c4	    0x81e200100000	                         and edx, 0x1000	       274	reflog.c	FUNCTION_5	IF_4
0x40009ca	            0x7552	                           jne 0x4000a1e	       274	reflog.c	FUNCTION_5	IF_4
0x40009cc	      0x48837d0800	                  cmp qword [rbp + 8], 0	       277	reflog.c	FUNCTION_5	IF_5
0x40009d1	            0x7407	                            je 0x40009da	       277	reflog.c	FUNCTION_5	IF_5
0x40009d3	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       277	reflog.c	FUNCTION_5	IF_5
0x40009d8	            0x754e	                           jne 0x4000a28	       277	reflog.c	FUNCTION_5	IF_5
0x40009da	            0x31c0	                            xor eax, eax	       282	reflog.c	FUNCTION_5
0x40009dc	            0x85d2	                           test edx, edx	       282	reflog.c	FUNCTION_5
0x40009de	              0x5b	                                 pop rbx	       283	reflog.c	FUNCTION_5
0x40009df	           0xf94c0	                                 sete al	       282	reflog.c	FUNCTION_5
0x40009e2	              0x5d	                                 pop rbp	       283	reflog.c	FUNCTION_5
0x40009e3	            0x415c	                                 pop r12	       283	reflog.c	FUNCTION_5
0x40009e5	              0xc3	                                     ret	       283	reflog.c	FUNCTION_5
0x40009e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       283	reflog.c	FUNCTION_5
0x40009f0	          0x4989d4	                            mov r12, rdx	       283	reflog.c	FUNCTION_5
0x40009f3	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_26	CALL_1
0x40009f8	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_26	CALL_1
0x40009fd	          0x4c89e7	                            mov rdi, r12	       975	cache.h	FUNCTION_26	CALL_1
0x4000a00	      0xe800000000	                          call 0x4000a05	       975	cache.h	FUNCTION_26	CALL_1
0x4000a05	            0x85c0	                           test eax, eax	       263	reflog.c	FUNCTION_5	IF_1	IF_2	CALL_1
0x4000a07	            0x7415	                            je 0x4000a1e	       263	reflog.c	FUNCTION_5	IF_1	IF_2	CALL_1
0x4000a09	      0xbe01000000	                              mov esi, 1	       266	reflog.c	FUNCTION_5	IF_1	CALL_2
0x4000a0e	          0x4c89e7	                            mov rdi, r12	       266	reflog.c	FUNCTION_5	IF_1	CALL_2
0x4000a11	      0xe800000000	                          call 0x4000a16	       266	reflog.c	FUNCTION_5	IF_1	CALL_2
0x4000a16	          0x4885c0	                           test rax, rax	       269	reflog.c	FUNCTION_5	IF_1	IF_3
0x4000a19	          0x4889c3	                            mov rbx, rax	       266	reflog.c	FUNCTION_5	IF_1	CALL_2
0x4000a1c	            0x75a1	                           jne 0x40009bf	       269	reflog.c	FUNCTION_5	IF_1	IF_3
0x4000a1e	              0x5b	                                 pop rbx	       283	reflog.c	FUNCTION_5
0x4000a1f	            0x31c0	                            xor eax, eax	       264	reflog.c	FUNCTION_5	IF_1	IF_2
0x4000a21	              0x5d	                                 pop rbp	       283	reflog.c	FUNCTION_5
0x4000a22	            0x415c	                                 pop r12	       283	reflog.c	FUNCTION_5
0x4000a24	              0xc3	                                     ret	       283	reflog.c	FUNCTION_5
0x4000a25	           0xf1f00	                         nop dword [rax]	       283	reflog.c	FUNCTION_5
0x4000a28	        0x488d7d08	                      lea rdi, [rbp + 8]	       283	reflog.c	FUNCTION_5
0x4000a2c	    0x48c745100000	               mov qword [rbp + 0x10], 0	       278	reflog.c	FUNCTION_5	IF_5
0x4000a34	            0x31f6	                            xor esi, esi	       279	reflog.c	FUNCTION_5	IF_5	CALL_3
0x4000a36	      0xe875feffff	          call sym.mark_reachable.isra.3	       279	reflog.c	FUNCTION_5	IF_5	CALL_3
0x4000a3b	            0x8b13	                    mov edx, dword [rbx]	       279	reflog.c	FUNCTION_5	IF_5	CALL_3
0x4000a3d	          0xc1ea04	                              shr edx, 4	       279	reflog.c	FUNCTION_5	IF_5	CALL_3
0x4000a40	    0x81e200100000	                         and edx, 0x1000	       279	reflog.c	FUNCTION_5	IF_5	CALL_3
0x4000a46	            0xeb92	                           jmp 0x40009da	       279	reflog.c	FUNCTION_5	IF_5	CALL_3
cmd_reflog	functions,0:IF,6:CALL,12:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0	95
0x4001610	          0x83ff01	                              cmp edi, 1	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x4001613	          0x4189f8	                            mov r8d, edi	       721	reflog.c	FUNCTION_18
0x4001616	          0x4989f3	                            mov r11, rsi	       721	reflog.c	FUNCTION_18
0x4001619	     0xf8e91000000	                           jle 0x40016b0	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x400161f	              0x53	                                push rbx	       721	reflog.c	FUNCTION_18
0x4001620	        0x488b4608	                mov rax, qword [rsi + 8]	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x4001624	          0x4989f1	                             mov r9, rsi	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x4001627	          0x4189fa	                           mov r10d, edi	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x400162a	          0x80382d	                    cmp byte [rax], 0x2d	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x400162d	            0x7461	                            je 0x4001690	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x400162f	      0xbf00000000	                              mov edi, 0	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x4001634	      0xb905000000	                              mov ecx, 5	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x4001639	          0x4889c6	                            mov rsi, rax	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x400163c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x400163e	     0xf848c000000	                            je 0x40016d0	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x4001644	      0xbf00000000	                              mov edi, 0	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x4001649	      0xb907000000	                              mov ecx, 7	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x400164e	          0x4889c6	                            mov rsi, rax	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x4001651	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x4001653	            0x7463	                            je 0x40016b8	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x4001655	      0xbf00000000	                              mov edi, 0	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x400165a	      0xb907000000	                              mov ecx, 7	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x400165f	          0x4889c6	                            mov rsi, rax	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x4001662	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x4001664	     0xf84a6000000	                            je 0x4001710	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x400166a	      0xbf00000000	                              mov edi, 0	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x400166f	      0xb907000000	                              mov ecx, 7	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x4001674	          0x4889c6	                            mov rsi, rax	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x4001677	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x4001679	            0x7465	                            je 0x40016e0	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x400167b	              0x5b	                                 pop rbx	       742	reflog.c	FUNCTION_18
0x400167c	          0x4c89de	                            mov rsi, r11	       727	reflog.c	FUNCTION_18	CALL_3
0x400167f	          0x4489c7	                            mov edi, r8d	       727	reflog.c	FUNCTION_18	CALL_3
0x4001682	      0xe900000000	                           jmp 0x4001687	       727	reflog.c	FUNCTION_18	CALL_3
0x4001687	    0x660f1f840000	                    nop word [rax + rax]	       727	reflog.c	FUNCTION_18	CALL_3
0x4001690	        0x80780168	                cmp byte [rax + 1], 0x68	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x4001694	            0x75e5	                           jne 0x400167b	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x4001696	        0x80780200	                   cmp byte [rax + 2], 0	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x400169a	            0x75df	                           jne 0x400167b	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x400169c	      0xbf00000000	                              mov edi, 0	       723	reflog.c	FUNCTION_18	CALL_2
0x40016a1	      0xe800000000	                          call 0x40016a6	       723	reflog.c	FUNCTION_18	CALL_2
0x40016a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       723	reflog.c	FUNCTION_18	CALL_2
0x40016b0	      0xe900000000	                           jmp 0x40016b5	       727	reflog.c	FUNCTION_18	CALL_3
0x40016b5	           0xf1f00	                         nop dword [rax]	       727	reflog.c	FUNCTION_18	CALL_3
0x40016b8	              0x5b	                                 pop rbx	       742	reflog.c	FUNCTION_18
0x40016b9	        0x498d7308	                      lea rsi, [r11 + 8]	       733	reflog.c	FUNCTION_18	CALL_7
0x40016bd	        0x418d78ff	                       lea edi, [r8 - 1]	       733	reflog.c	FUNCTION_18	CALL_7
0x40016c1	      0xe9daf9ffff	               jmp sym.cmd_reflog_expire	       733	reflog.c	FUNCTION_18	CALL_7
0x40016c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       733	reflog.c	FUNCTION_18	CALL_7
0x40016d0	              0x5b	                                 pop rbx	       742	reflog.c	FUNCTION_18
0x40016d1	        0x498d7308	                      lea rsi, [r11 + 8]	       730	reflog.c	FUNCTION_18	CALL_5
0x40016d5	        0x418d78ff	                       lea edi, [r8 - 1]	       730	reflog.c	FUNCTION_18	CALL_5
0x40016d9	      0xe900000000	                           jmp 0x40016de	       730	reflog.c	FUNCTION_18	CALL_5
0x40016de	            0x6690	                                     nop	       730	reflog.c	FUNCTION_18	CALL_5
0x40016e0	        0x4183ea01	                             sub r10d, 1	       739	reflog.c	FUNCTION_18	CALL_11
0x40016e4	        0x4183fa01	                             cmp r10d, 1	       691	reflog.c	FUNCTION_17	FOR_1
0x40016e8	            0x746c	                            je 0x4001756	       691	reflog.c	FUNCTION_17	FOR_1
0x40016ea	        0x498b4310	            mov rax, qword [r11 + 0x10] 	       692	reflog.c	FUNCTION_17	FOR_1
0x40016ee	          0x80382d	                    cmp byte [rax], 0x2d	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x40016f1	            0x752d	                           jne 0x4001720	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x40016f3	        0x8078012d	                cmp byte [rax + 1], 0x2d	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x40016f7	            0x755d	                           jne 0x4001756	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x40016f9	        0x80780200	                   cmp byte [rax + 2], 0	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x40016fd	            0x7557	                           jne 0x4001756	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x40016ff	      0xb802000000	                              mov eax, 2	       694	reflog.c	FUNCTION_17	FOR_1	IF_1
0x4001704	            0xeb1f	                           jmp 0x4001725	       694	reflog.c	FUNCTION_17	FOR_1	IF_1
0x4001706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       694	reflog.c	FUNCTION_17	FOR_1	IF_1
0x4001710	              0x5b	                                 pop rbx	       742	reflog.c	FUNCTION_18
0x4001711	        0x498d7308	                      lea rsi, [r11 + 8]	       736	reflog.c	FUNCTION_18	CALL_9
0x4001715	        0x418d78ff	                       lea edi, [r8 - 1]	       736	reflog.c	FUNCTION_18	CALL_9
0x4001719	      0xe992f6ffff	        jmp sym.cmd_reflog_delete.isra.8	       736	reflog.c	FUNCTION_18	CALL_9
0x400171e	            0x6690	                                     nop	       736	reflog.c	FUNCTION_18	CALL_9
0x4001720	      0xb801000000	                              mov eax, 1	       691	reflog.c	FUNCTION_17	FOR_1
0x4001725	          0x4129c2	                           sub r10d, eax	       705	reflog.c	FUNCTION_17	IF_3
0x4001728	        0x4183fa01	                             cmp r10d, 1	       705	reflog.c	FUNCTION_17	IF_3
0x400172c	            0x7528	                           jne 0x4001756	       705	reflog.c	FUNCTION_17	IF_3
0x400172e	      0x498d5cc108	               lea rbx, [r9 + rax*8 + 8]	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x4001733	      0xbe01000000	                              mov esi, 1	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x4001738	          0x488b3b	                    mov rdi, qword [rbx]	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x400173b	      0xe800000000	                          call 0x4001740	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x4001740	            0x85c0	                           test eax, eax	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x4001742	            0x751c	                           jne 0x4001760	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x4001744	          0x488b3b	                    mov rdi, qword [rbx]	       710	reflog.c	FUNCTION_17	CALL_6
0x4001747	      0xe800000000	                          call 0x400174c	       710	reflog.c	FUNCTION_17	CALL_6
0x400174c	            0x85c0	                           test eax, eax	       710	reflog.c	FUNCTION_17	CALL_6
0x400174e	           0xf94c0	                                 sete al	       710	reflog.c	FUNCTION_17	CALL_6
0x4001751	           0xfb6c0	                           movzx eax, al	       710	reflog.c	FUNCTION_17	CALL_6
0x4001754	              0x5b	                                 pop rbx	       742	reflog.c	FUNCTION_18
0x4001755	              0xc3	                                     ret	       742	reflog.c	FUNCTION_18
0x4001756	      0xbf00000000	                              mov edi, 0	       698	reflog.c	FUNCTION_17	FOR_1	ELSE_1	IF_2
0x400175b	      0xe800000000	                          call 0x4001760	       698	reflog.c	FUNCTION_17	FOR_1	ELSE_1	IF_2
0x4001760	          0x488b33	                    mov rsi, qword [rbx]	       709	reflog.c	FUNCTION_17	CALL_5
0x4001763	      0xbf00000000	                              mov edi, 0	       709	reflog.c	FUNCTION_17	CALL_5
0x4001768	            0x31c0	                            xor eax, eax	       709	reflog.c	FUNCTION_17	CALL_5
0x400176a	      0xe800000000	                  call section_end..data	       709	reflog.c	FUNCTION_17	CALL_5
tree_is_complete	functions,0:IF,7:CALL,8:DO,0:ELSE,0:WHILE,1:SWITCH,0:FOR,0	94
0x4000070	            0x4155	                                push r13	        61	reflog.c	FUNCTION_1
0x4000072	            0x4154	                                push r12	        61	reflog.c	FUNCTION_1
0x4000074	          0x4989fd	                            mov r13, rdi	        61	reflog.c	FUNCTION_1
0x4000077	              0x55	                                push rbp	        61	reflog.c	FUNCTION_1
0x4000078	              0x53	                                push rbx	        61	reflog.c	FUNCTION_1
0x4000079	        0x4883ec58	                           sub rsp, 0x58	        61	reflog.c	FUNCTION_1
0x400007d	    0x64488b042528	                mov rax, qword fs:[0x28]	        61	reflog.c	FUNCTION_1
0x4000086	      0x4889442448	             mov qword [rsp + 0x48], rax	        61	reflog.c	FUNCTION_1
0x400008b	            0x31c0	                            xor eax, eax	        61	reflog.c	FUNCTION_1
0x400008d	      0xe800000000	                          call 0x4000092	        67	reflog.c	FUNCTION_1	CALL_1
0x4000092	          0x4885c0	                           test rax, rax	        68	reflog.c	FUNCTION_1	IF_1
0x4000095	     0xf84f5000000	                            je 0x4000190	        68	reflog.c	FUNCTION_1	IF_1
0x400009b	            0x8b10	                    mov edx, dword [rax]	        70	reflog.c	FUNCTION_1	IF_2
0x400009d	          0x4889c3	                            mov rbx, rax	        70	reflog.c	FUNCTION_1	IF_2
0x40000a0	      0xb801000000	                              mov eax, 1	        71	reflog.c	FUNCTION_1	IF_2
0x40000a5	          0xc1ea04	                              shr edx, 4	        70	reflog.c	FUNCTION_1	IF_2
0x40000a8	    0x81e2ffffff07	                      and edx, 0x7ffffff	        70	reflog.c	FUNCTION_1	IF_2
0x40000ae	          0xf6c201	                              test dl, 1	        70	reflog.c	FUNCTION_1	IF_2
0x40000b1	     0xf8588000000	                           jne 0x400013f	        70	reflog.c	FUNCTION_1	IF_2
0x40000b7	          0x80e604	                               and dh, 4	        72	reflog.c	FUNCTION_1	IF_3
0x40000ba	     0xf85d0000000	                           jne 0x4000190	        72	reflog.c	FUNCTION_1	IF_3
0x40000c0	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	        75	reflog.c	FUNCTION_1	IF_4
0x40000c4	          0x4885f6	                           test rsi, rsi	        75	reflog.c	FUNCTION_1	IF_4
0x40000c7	     0xf8493000000	                            je 0x4000160	        75	reflog.c	FUNCTION_1	IF_4
0x40000cd	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	        75	reflog.c	FUNCTION_1	IF_4
0x40000d1	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	        75	reflog.c	FUNCTION_1	IF_4
0x40000d6	          0x4989e4	                            mov r12, rsp	        75	reflog.c	FUNCTION_1	IF_4
0x40000d9	          0x4889ef	                            mov rdi, rbp	        86	reflog.c	FUNCTION_1	CALL_3
0x40000dc	    0x41bd01000000	                             mov r13d, 1	        87	reflog.c	FUNCTION_1
0x40000e2	      0xe800000000	                          call 0x40000e7	        86	reflog.c	FUNCTION_1	CALL_3
0x40000e7	    0x660f1f840000	                    nop word [rax + rax]	        86	reflog.c	FUNCTION_1	CALL_3
0x40000f0	          0x4c89e6	                            mov rsi, r12	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x40000f3	          0x4889ef	                            mov rdi, rbp	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x40000f6	      0xe800000000	                          call 0x40000fb	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x40000fb	            0x85c0	                           test eax, eax	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x40000fd	            0x742b	                            je 0x400012a	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x40000ff	        0x488b3c24	                    mov rdi, qword [rsp]	      1251	cache.h	FUNCTION_41	CALL_1
0x4000103	            0x31f6	                            xor esi, esi	      1251	cache.h	FUNCTION_41	CALL_1
0x4000105	      0xe800000000	                          call 0x400010a	      1251	cache.h	FUNCTION_41	CALL_1
0x400010a	            0x85c0	                           test eax, eax	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x400010c	     0xf8586000000	                           jne 0x4000198	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x4000112	    0x810b00400000	                  or dword [rbx], 0x4000	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x4000118	          0x4c89e6	                            mov rsi, r12	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x400011b	          0x4889ef	                            mov rdi, rbp	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x400011e	          0x4531ed	                          xor r13d, r13d	        92	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x4000121	      0xe800000000	                          call 0x4000126	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x4000126	            0x85c0	                           test eax, eax	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x4000128	            0x75d5	                           jne 0x40000ff	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x400012a	          0x4889df	                            mov rdi, rbx	        95	reflog.c	FUNCTION_1	CALL_8
0x400012d	      0xe800000000	                          call 0x4000132	        95	reflog.c	FUNCTION_1	CALL_8
0x4000132	          0x4585ed	                         test r13d, r13d	        97	reflog.c	FUNCTION_1	IF_7
0x4000135	            0x7459	                            je 0x4000190	        97	reflog.c	FUNCTION_1	IF_7
0x4000137	          0x830b10	                    or dword [rbx], 0x10	        98	reflog.c	FUNCTION_1	IF_7
0x400013a	      0xb801000000	                              mov eax, 1	        98	reflog.c	FUNCTION_1	IF_7
0x400013f	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       100	reflog.c	FUNCTION_1
0x4000144	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       100	reflog.c	FUNCTION_1
0x400014d	     0xf8587000000	                           jne 0x40001da	       100	reflog.c	FUNCTION_1
0x4000153	        0x4883c458	                           add rsp, 0x58	       100	reflog.c	FUNCTION_1
0x4000157	              0x5b	                                 pop rbx	       100	reflog.c	FUNCTION_1
0x4000158	              0x5d	                                 pop rbp	       100	reflog.c	FUNCTION_1
0x4000159	            0x415c	                                 pop r12	       100	reflog.c	FUNCTION_1
0x400015b	            0x415d	                                 pop r13	       100	reflog.c	FUNCTION_1
0x400015d	              0xc3	                                     ret	       100	reflog.c	FUNCTION_1
0x400015e	            0x6690	                                     nop	       100	reflog.c	FUNCTION_1
0x4000160	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	      1200	cache.h	FUNCTION_40	CALL_1
0x4000165	          0x4889e6	                            mov rsi, rsp	      1200	cache.h	FUNCTION_40	CALL_1
0x4000168	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_40	CALL_1
0x400016d	          0x4c89ef	                            mov rdi, r13	      1200	cache.h	FUNCTION_40	CALL_1
0x4000170	          0x4989e4	                            mov r12, rsp	      1200	cache.h	FUNCTION_40	CALL_1
0x4000173	          0x4889ea	                            mov rdx, rbp	      1200	cache.h	FUNCTION_40	CALL_1
0x4000176	      0xe800000000	                          call 0x400017b	      1200	cache.h	FUNCTION_40	CALL_1
0x400017b	          0x4885c0	                           test rax, rax	        79	reflog.c	FUNCTION_1	IF_4	IF_5
0x400017e	          0x4889c6	                            mov rsi, rax	      1200	cache.h	FUNCTION_40	CALL_1
0x4000181	            0x7545	                           jne 0x40001c8	        79	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000183	    0x810b00400000	                  or dword [rbx], 0x4000	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000189	     0xf1f80000000	                         nop dword [rax]	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000190	            0x31c0	                            xor eax, eax	        81	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000192	            0xebab	                           jmp 0x400013f	        81	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000194	         0xf1f4000	                         nop dword [rax]	        81	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000198	        0x8b442410	            mov eax, dword [rsp + 0x10] 	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x400019c	      0x2500f00000	                         and eax, 0xf000	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x40001a1	      0x3d00400000	                         cmp eax, 0x4000	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x40001a6	     0xf8544ffffff	                           jne 0x40000f0	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x40001ac	        0x488b3c24	                    mov rdi, qword [rsp]	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001b0	      0xe8bbfeffff	               call sym.tree_is_complete	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001b5	            0x85c0	                           test eax, eax	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001b7	     0xf8455ffffff	                            je 0x4000112	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001bd	      0xe92effffff	                           jmp 0x40000f0	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001c2	    0x660f1f440000	                    nop word [rax + rax]	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001c8	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        84	reflog.c	FUNCTION_1	IF_4
0x40001cd	        0x48894318	             mov qword [rbx + 0x18], rax	        83	reflog.c	FUNCTION_1	IF_4
0x40001d1	        0x48895320	             mov qword [rbx + 0x20], rdx	        84	reflog.c	FUNCTION_1	IF_4
0x40001d5	      0xe9fffeffff	                           jmp 0x40000d9	        84	reflog.c	FUNCTION_1	IF_4
0x40001da	      0xe800000000	                          call 0x40001df	       100	reflog.c	FUNCTION_1
reflog_expire_config	functions,0:IF,7:CALL,8:DO,0:ELSE,2:WHILE,0:SWITCH,2:FOR,0	130
0x40002f0	            0x4155	                                push r13	       425	reflog.c	FUNCTION_12
0x40002f2	            0x4154	                                push r12	       425	reflog.c	FUNCTION_12
0x40002f4	          0x4989d4	                            mov r12, rdx	       425	reflog.c	FUNCTION_12
0x40002f7	              0x55	                                push rbp	       425	reflog.c	FUNCTION_12
0x40002f8	              0x53	                                push rbx	       425	reflog.c	FUNCTION_12
0x40002f9	          0x4889f5	                            mov rbp, rsi	       425	reflog.c	FUNCTION_12
0x40002fc	      0xbe00000000	                              mov esi, 0	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x4000301	          0x4889fb	                            mov rbx, rdi	       425	reflog.c	FUNCTION_12
0x4000304	        0x4883ec38	                           sub rsp, 0x38	       425	reflog.c	FUNCTION_12
0x4000308	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x400030d	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x4000312	      0x488d542410	                   lea rdx, [rsp + 0x10]	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x4000317	    0x64488b042528	                mov rax, qword fs:[0x28]	       425	reflog.c	FUNCTION_12
0x4000320	      0x4889442428	             mov qword [rsp + 0x28], rax	       425	reflog.c	FUNCTION_12
0x4000325	            0x31c0	                            xor eax, eax	       425	reflog.c	FUNCTION_12
0x4000327	      0xe800000000	                          call 0x400032c	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x400032c	            0x85c0	                           test eax, eax	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x400032e	     0xf88fc000000	                            js 0x4000430	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x4000334	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x4000339	      0xbf00000000	                              mov edi, 0	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x400033e	      0xb90d000000	                            mov ecx, 0xd	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x4000343	          0x4889c6	                            mov rsi, rax	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x4000346	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x4000348	     0xf8412010000	                            je 0x4000460	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x400034e	      0xbf00000000	                              mov edi, 0	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x4000353	      0xb918000000	                           mov ecx, 0x18	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x4000358	          0x4889c6	                            mov rsi, rax	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x400035b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x400035d	     0xf85cd000000	                           jne 0x4000430	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x4000363	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x4000368	          0x4889ea	                            mov rdx, rbp	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x400036b	          0x4889de	                            mov rsi, rbx	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x400036e	      0xe800000000	                          call 0x4000373	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x4000373	            0x85c0	                           test eax, eax	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x4000375	     0xf8556010000	                           jne 0x40004d1	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x400037b	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	       446	reflog.c	FUNCTION_12	IF_6
0x4000380	          0x4d85ed	                           test r13, r13	       446	reflog.c	FUNCTION_12	IF_6
0x4000383	     0xf8437010000	                            je 0x40004c0	       446	reflog.c	FUNCTION_12	IF_6
0x4000389	    0x41bc02000000	                             mov r12d, 2	       440	reflog.c	FUNCTION_12	ELSE_1	IF_4
0x400038f	    0x48833d000000	               cmp qword [0x04000397], 0	       406	reflog.c	FUNCTION_11	IF_1
0x4000397	      0x48636c240c	          movsxd rbp, dword [rsp + 0xc] 	       458	reflog.c	FUNCTION_12	CALL_8
0x400039c	     0xf840e010000	                            je 0x40004b0	       406	reflog.c	FUNCTION_11	IF_1
0x40003a2	    0x488b1d000000	            mov rbx, qword [0x040003a9] 	       409	reflog.c	FUNCTION_11	FOR_1
0x40003a9	          0x4885db	                           test rbx, rbx	       409	reflog.c	FUNCTION_11	FOR_1
0x40003ac	            0x7424	                            je 0x40003d2	       409	reflog.c	FUNCTION_11	FOR_1
0x40003ae	            0x6690	                                     nop	       409	reflog.c	FUNCTION_11	FOR_1
0x40003b0	        0x488d7b18	                   lea rdi, [rbx + 0x18]	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003b4	          0x4889ea	                            mov rdx, rbp	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003b7	          0x4c89ee	                            mov rsi, r13	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003ba	      0xe800000000	                          call 0x40003bf	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003bf	            0x85c0	                           test eax, eax	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003c1	            0x7507	                           jne 0x40003ca	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003c3	      0x807c2b1800	          cmp byte [rbx + rbp + 0x18], 0	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003c8	            0x7452	                            je 0x400041c	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003ca	          0x488b1b	                    mov rbx, qword [rbx]	       409	reflog.c	FUNCTION_11	FOR_1
0x40003cd	          0x4885db	                           test rbx, rbx	       409	reflog.c	FUNCTION_11	FOR_1
0x40003d0	            0x75de	                           jne 0x40003b0	       409	reflog.c	FUNCTION_11	FOR_1
0x40003d2	        0x4883fde7	             cmp rbp, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_59	IF_1
0x40003d6	     0xf8719010000	                            ja 0x40004f5	       785	git-compat-util.h	FUNCTION_59	IF_1
0x40003dc	     0xf84fe000000	                            je 0x40004e0	       785	git-compat-util.h	FUNCTION_59	IF_1
0x40003e2	        0x488d7519	                   lea rsi, [rbp + 0x19]	       414	reflog.c	FUNCTION_11
0x40003e6	      0xbf01000000	                              mov edi, 1	       414	reflog.c	FUNCTION_11
0x40003eb	      0xe800000000	                          call 0x40003f0	       414	reflog.c	FUNCTION_11
0x40003f0	        0x488d7818	                   lea rdi, [rax + 0x18]	        53	string3.h	FUNCTION_73	CALL_3
0x40003f4	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_73	CALL_3
0x40003f7	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_73	CALL_3
0x40003fa	          0x4889c3	                            mov rbx, rax	       414	reflog.c	FUNCTION_11
0x40003fd	      0xe800000000	                          call 0x4000402	        53	string3.h	FUNCTION_73	CALL_3
0x4000402	    0x488b05000000	            mov rax, qword [0x04000409] 	       415	reflog.c	FUNCTION_11
0x4000409	          0x4885db	                           test rbx, rbx	       459	reflog.c	FUNCTION_12	IF_7
0x400040c	    0x48891d000000	            mov qword [0x04000413], rbx 	       416	reflog.c	FUNCTION_11
0x4000413	          0x488918	                    mov qword [rax], rbx	       415	reflog.c	FUNCTION_11
0x4000416	     0xf84b5000000	                            je 0x40004d1	       459	reflog.c	FUNCTION_12	IF_7
0x400041c	        0x4183fc02	                             cmp r12d, 2	       461	reflog.c	FUNCTION_12	SWITCH_2
0x4000420	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       466	reflog.c	FUNCTION_12	SWITCH_2
0x4000425	            0x7579	                           jne 0x40004a0	       461	reflog.c	FUNCTION_12	SWITCH_2
0x4000427	        0x48894310	             mov qword [rbx + 0x10], rax	       466	reflog.c	FUNCTION_12	SWITCH_2
0x400042b	            0x31c0	                            xor eax, eax	       469	reflog.c	FUNCTION_12
0x400042d	            0xeb0f	                           jmp 0x400043e	       467	reflog.c	FUNCTION_12	SWITCH_2
0x400042f	              0x90	                                     nop	       467	reflog.c	FUNCTION_12	SWITCH_2
0x4000430	          0x4c89e2	                            mov rdx, r12	       433	reflog.c	FUNCTION_12	CALL_2
0x4000433	          0x4889ee	                            mov rsi, rbp	       433	reflog.c	FUNCTION_12	CALL_2
0x4000436	          0x4889df	                            mov rdi, rbx	       433	reflog.c	FUNCTION_12	CALL_2
0x4000439	      0xe800000000	                          call 0x400043e	       433	reflog.c	FUNCTION_12	CALL_2
0x400043e	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       470	reflog.c	FUNCTION_12
0x4000443	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       470	reflog.c	FUNCTION_12
0x400044c	     0xf8589000000	                           jne 0x40004db	       470	reflog.c	FUNCTION_12
0x4000452	        0x4883c438	                           add rsp, 0x38	       470	reflog.c	FUNCTION_12
0x4000456	              0x5b	                                 pop rbx	       470	reflog.c	FUNCTION_12
0x4000457	              0x5d	                                 pop rbp	       470	reflog.c	FUNCTION_12
0x4000458	            0x415c	                                 pop r12	       470	reflog.c	FUNCTION_12
0x400045a	            0x415d	                                 pop r13	       470	reflog.c	FUNCTION_12
0x400045c	              0xc3	                                     ret	       470	reflog.c	FUNCTION_12
0x400045d	           0xf1f00	                         nop dword [rax]	       470	reflog.c	FUNCTION_12
0x4000460	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x4000465	          0x4889ea	                            mov rdx, rbp	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x4000468	          0x4889de	                            mov rsi, rbx	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x400046b	      0xe800000000	                          call 0x4000470	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x4000470	            0x85c0	                           test eax, eax	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x4000472	            0x755d	                           jne 0x40004d1	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x4000474	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	       446	reflog.c	FUNCTION_12	IF_6
0x4000479	    0x41bc01000000	                             mov r12d, 1	       436	reflog.c	FUNCTION_12	IF_2
0x400047f	          0x4d85ed	                           test r13, r13	       446	reflog.c	FUNCTION_12	IF_6
0x4000482	     0xf8507ffffff	                           jne 0x400038f	       446	reflog.c	FUNCTION_12	IF_6
0x4000488	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       449	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x400048d	    0x488915000000	            mov qword [0x04000494], rdx 	       449	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x4000494	            0xeba8	                           jmp 0x400043e	       450	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x4000496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       450	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x40004a0	        0x48894308	                mov qword [rbx + 8], rax	       463	reflog.c	FUNCTION_12	SWITCH_2
0x40004a4	            0x31c0	                            xor eax, eax	       469	reflog.c	FUNCTION_12
0x40004a6	            0xeb96	                           jmp 0x400043e	       464	reflog.c	FUNCTION_12	SWITCH_2
0x40004a8	     0xf1f84000000	                   nop dword [rax + rax]	       464	reflog.c	FUNCTION_12	SWITCH_2
0x40004b0	    0x48c705000000	               mov qword [0x040004bb], 0	       407	reflog.c	FUNCTION_11	IF_1
0x40004bb	      0xe9e2feffff	                           jmp 0x40003a2	       407	reflog.c	FUNCTION_11	IF_1
0x40004c0	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       452	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x40004c5	    0x488915000000	            mov qword [0x040004cc], rdx 	       452	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x40004cc	      0xe96dffffff	                           jmp 0x400043e	       453	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x40004d1	      0xb8ffffffff	                     mov eax, 0xffffffff	       438	reflog.c	FUNCTION_12	IF_2	IF_3
0x40004d6	      0xe963ffffff	                           jmp 0x400043e	       438	reflog.c	FUNCTION_12	IF_2	IF_3
0x40004db	      0xe800000000	                          call 0x40004e0	       470	reflog.c	FUNCTION_12
0x40004e0	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40004e5	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40004e9	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40004ee	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40004f0	      0xe800000000	                          call 0x40004f5	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40004f5	          0x4889ea	                            mov rdx, rbp	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40004f8	      0xbe18000000	                           mov esi, 0x18	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40004fd	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x4000502	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x4000504	      0xe800000000	                          call 0x4000509	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
count_reflog_ent	functions,0:IF,1:CALL,0:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0	12
0x4000040	      0x488b442408	                mov rax, qword [rsp + 8]	       613	reflog.c	FUNCTION_15
0x4000045	    0x488b90d00800	           mov rdx, qword [rax + 0x8d0] 	       615	reflog.c	FUNCTION_15	IF_1
0x400004c	          0x4885d2	                           test rdx, rdx	       615	reflog.c	FUNCTION_15	IF_1
0x400004f	            0x740f	                            je 0x4000060	       615	reflog.c	FUNCTION_15	IF_1
0x4000051	          0x4839ca	                            cmp rdx, rcx	       615	reflog.c	FUNCTION_15	IF_1
0x4000054	            0x770a	                            ja 0x4000060	       615	reflog.c	FUNCTION_15	IF_1
0x4000056	            0x31c0	                            xor eax, eax	       618	reflog.c	FUNCTION_15
0x4000058	              0xc3	                                     ret	       618	reflog.c	FUNCTION_15
0x4000059	     0xf1f80000000	                         nop dword [rax]	       618	reflog.c	FUNCTION_15
0x4000060	    0x8380e0080000	              add dword [rax + 0x8e0], 1	       616	reflog.c	FUNCTION_15	IF_1
0x4000067	            0x31c0	                            xor eax, eax	       618	reflog.c	FUNCTION_15
0x4000069	              0xc3	                                     ret	       618	reflog.c	FUNCTION_15
collect_reflog	functions,0:IF,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,0	79
0x40001e0	            0x4156	                                push r14	       384	reflog.c	FUNCTION_10
0x40001e2	            0x4155	                                push r13	       384	reflog.c	FUNCTION_10
0x40001e4	          0x4989fe	                            mov r14, rdi	       384	reflog.c	FUNCTION_10
0x40001e7	            0x4154	                                push r12	       384	reflog.c	FUNCTION_10
0x40001e9	              0x55	                                push rbp	       384	reflog.c	FUNCTION_10
0x40001ea	          0x4989f5	                            mov r13, rsi	       384	reflog.c	FUNCTION_10
0x40001ed	              0x53	                                push rbx	       384	reflog.c	FUNCTION_10
0x40001ee	          0x4889cb	                            mov rbx, rcx	       384	reflog.c	FUNCTION_10
0x40001f1	      0xe800000000	                          call 0x40001f6	       388	reflog.c	FUNCTION_10
0x40001f6	        0x4883f8eb	             cmp rax, 0xffffffffffffffeb	       785	git-compat-util.h	FUNCTION_59	IF_1
0x40001fa	          0x4989c4	                            mov r12, rax	       388	reflog.c	FUNCTION_10
0x40001fd	     0xf87c7000000	                            ja 0x40002ca	       785	git-compat-util.h	FUNCTION_59	IF_1
0x4000203	     0xf84ac000000	                            je 0x40002b5	       785	git-compat-util.h	FUNCTION_59	IF_1
0x4000209	        0x488d7015	                   lea rsi, [rax + 0x15]	       388	reflog.c	FUNCTION_10
0x400020d	      0xbf01000000	                              mov edi, 1	       388	reflog.c	FUNCTION_10
0x4000212	      0xe800000000	                          call 0x4000217	       388	reflog.c	FUNCTION_10
0x4000217	        0x488d7814	                   lea rdi, [rax + 0x14]	        53	string3.h	FUNCTION_73	CALL_3
0x400021b	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_73	CALL_3
0x400021e	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_73	CALL_3
0x4000221	          0x4889c5	                            mov rbp, rax	       388	reflog.c	FUNCTION_10
0x4000224	      0xe800000000	                          call 0x4000229	        53	string3.h	FUNCTION_73	CALL_3
0x4000229	        0x498b4500	                    mov rax, qword [r13]	        53	string3.h	FUNCTION_73	CALL_3
0x400022d	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_73	CALL_3
0x4000231	        0x498b4508	                mov rax, qword [r13 + 8]	        53	string3.h	FUNCTION_73	CALL_3
0x4000235	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_73	CALL_3
0x4000239	        0x418b4510	            mov eax, dword [r13 + 0x10] 	        53	string3.h	FUNCTION_73	CALL_3
0x400023d	          0x894510	            mov dword [rbp + 0x10], eax 	        53	string3.h	FUNCTION_73	CALL_3
0x4000240	        0x48637b0c	          movsxd rdi, dword [rbx + 0xc] 	       390	reflog.c	FUNCTION_10
0x4000244	          0x8b4308	                mov eax, dword [rbx + 8]	       390	reflog.c	FUNCTION_10
0x4000247	            0x39c7	                            cmp edi, eax	       390	reflog.c	FUNCTION_10
0x4000249	            0x7c65	                            jl 0x40002b0	       390	reflog.c	FUNCTION_10
0x400024b	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       390	reflog.c	FUNCTION_10
0x400024f	            0x89c2	                            mov edx, eax	       390	reflog.c	FUNCTION_10
0x4000251	          0xc1ea1f	                           shr edx, 0x1f	       390	reflog.c	FUNCTION_10
0x4000254	             0x1c2	                            add edx, eax	       390	reflog.c	FUNCTION_10
0x4000256	            0xd1fa	                              sar edx, 1	       390	reflog.c	FUNCTION_10
0x4000258	            0x39d7	                            cmp edi, edx	       390	reflog.c	FUNCTION_10
0x400025a	            0x7d44	                           jge 0x40002a0	       390	reflog.c	FUNCTION_10
0x400025c	          0x895308	                mov dword [rbx + 8], edx	       390	reflog.c	FUNCTION_10
0x400025f	          0x4863d2	                         movsxd rdx, edx	       390	reflog.c	FUNCTION_10
0x4000262	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_60	IF_1
0x400026c	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_60	IF_1
0x400026f	            0x776d	                            ja 0x40002de	       795	git-compat-util.h	FUNCTION_60	IF_1
0x4000271	          0x488b3b	                    mov rdi, qword [rbx]	       390	reflog.c	FUNCTION_10
0x4000274	    0x488d34d50000	                        lea rsi, [rdx*8]	       390	reflog.c	FUNCTION_10
0x400027c	      0xe800000000	                          call 0x4000281	       390	reflog.c	FUNCTION_10
0x4000281	        0x48637b0c	          movsxd rdi, dword [rbx + 0xc] 	       390	reflog.c	FUNCTION_10
0x4000285	          0x488903	                    mov qword [rbx], rax	       390	reflog.c	FUNCTION_10
0x4000288	          0x8d5701	                      lea edx, [rdi + 1]	       391	reflog.c	FUNCTION_10
0x400028b	          0x89530c	              mov dword [rbx + 0xc], edx	       391	reflog.c	FUNCTION_10
0x400028e	        0x48892cf8	            mov qword [rax + rdi*8], rbp	       391	reflog.c	FUNCTION_10
0x4000292	            0x31c0	                            xor eax, eax	       393	reflog.c	FUNCTION_10
0x4000294	              0x5b	                                 pop rbx	       393	reflog.c	FUNCTION_10
0x4000295	              0x5d	                                 pop rbp	       393	reflog.c	FUNCTION_10
0x4000296	            0x415c	                                 pop r12	       393	reflog.c	FUNCTION_10
0x4000298	            0x415d	                                 pop r13	       393	reflog.c	FUNCTION_10
0x400029a	            0x415e	                                 pop r14	       393	reflog.c	FUNCTION_10
0x400029c	              0xc3	                                     ret	       393	reflog.c	FUNCTION_10
0x400029d	           0xf1f00	                         nop dword [rax]	       393	reflog.c	FUNCTION_10
0x40002a0	          0x8d5701	                      lea edx, [rdi + 1]	       390	reflog.c	FUNCTION_10
0x40002a3	          0x895308	                mov dword [rbx + 8], edx	       390	reflog.c	FUNCTION_10
0x40002a6	            0xebb7	                           jmp 0x400025f	       390	reflog.c	FUNCTION_10
0x40002a8	     0xf1f84000000	                   nop dword [rax + rax]	       390	reflog.c	FUNCTION_10
0x40002b0	          0x488b03	                    mov rax, qword [rbx]	       390	reflog.c	FUNCTION_10
0x40002b3	            0xebd3	                           jmp 0x4000288	       390	reflog.c	FUNCTION_10
0x40002b5	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40002ba	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40002be	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40002c3	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40002c5	      0xe800000000	                          call 0x40002ca	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40002ca	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40002cd	      0xbe14000000	                           mov esi, 0x14	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40002d2	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40002d7	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40002d9	      0xe800000000	                          call 0x40002de	       786	git-compat-util.h	FUNCTION_59	IF_1	CALL_1
0x40002de	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x40002e3	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x40002e8	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x40002ea	      0xe800000000	                          call 0x40002ef	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
