_	WHILE,0:functions,0:IF,1:ELSE,0:DO,0:SWITCH,0:CALL,2:FOR,0	15
0x56	              0x55	                                push rbp	        51	gettext.h	FUNCTION_3
0x57	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_3
0x5a	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_3
0x5e	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_3
0x62	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_3	IF_1
0x66	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_3	IF_1
0x69	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_3	IF_1
0x6b	            0x7507	                           jne 0x40000b4	        52	gettext.h	FUNCTION_3	IF_1
0x6d	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_3	IF_1
0x72	            0xeb0c	                           jmp 0x40000c0	        53	gettext.h	FUNCTION_3	IF_1
0x74	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_3	CALL_2
0x78	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_3	CALL_2
0x7b	      0xe800000000	                          call 0x40000c0	        54	gettext.h	FUNCTION_3	CALL_2
0x80	              0xc9	                                   leave	        55	gettext.h	FUNCTION_3
0x81	              0xc3	                                     ret	        55	gettext.h	FUNCTION_3
show_commit	WHILE,2:functions,0:IF,18:ELSE,6:DO,0:SWITCH,0:CALL,34:FOR,0	333
0x16b	              0x55	                                push rbp	        79	rev-list.c	FUNCTION_5
0x16c	          0x4889e5	                            mov rbp, rsp	        79	rev-list.c	FUNCTION_5
0x16f	              0x53	                                push rbx	        79	rev-list.c	FUNCTION_5
0x170	    0x4881ec080100	                          sub rsp, 0x108	        79	rev-list.c	FUNCTION_5
0x177	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	        79	rev-list.c	FUNCTION_5
0x17e	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	        79	rev-list.c	FUNCTION_5
0x185	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	rev-list.c	FUNCTION_5
0x18e	        0x488945e8	             mov qword [rbp - 0x18], rax	        79	rev-list.c	FUNCTION_5
0x192	            0x31c0	                            xor eax, eax	        79	rev-list.c	FUNCTION_5
0x194	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	        80	rev-list.c	FUNCTION_5
0x19b	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	        80	rev-list.c	FUNCTION_5
0x1a2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	        81	rev-list.c	FUNCTION_5
0x1a9	          0x488b00	                    mov rax, qword [rax]	        81	rev-list.c	FUNCTION_5
0x1ac	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	        81	rev-list.c	FUNCTION_5
0x1b3	    0x8b0500000000	            mov eax, dword [0x040001f9] 	        83	rev-list.c	FUNCTION_5	CALL_1
0x1b9	          0x83c001	                              add eax, 1	        83	rev-list.c	FUNCTION_5	CALL_1
0x1bc	    0x890500000000	            mov dword [0x04000202], eax 	        83	rev-list.c	FUNCTION_5	CALL_1
0x1c2	    0x8b0500000000	            mov eax, dword [0x04000208] 	        83	rev-list.c	FUNCTION_5	CALL_1
0x1c8	            0x89c2	                            mov edx, eax	        83	rev-list.c	FUNCTION_5	CALL_1
0x1ca	    0x488b05000000	            mov rax, qword [0x04000211] 	        83	rev-list.c	FUNCTION_5	CALL_1
0x1d1	          0x4889d6	                            mov rsi, rdx	        83	rev-list.c	FUNCTION_5	CALL_1
0x1d4	          0x4889c7	                            mov rdi, rax	        83	rev-list.c	FUNCTION_5	CALL_1
0x1d7	      0xe800000000	                          call 0x400021c	        83	rev-list.c	FUNCTION_5	CALL_1
0x1dc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	        85	rev-list.c	FUNCTION_5	IF_1
0x1e3	          0x8b4008	                mov eax, dword [rax + 8]	        85	rev-list.c	FUNCTION_5	IF_1
0x1e6	          0x83e002	                              and eax, 2	        85	rev-list.c	FUNCTION_5	IF_1
0x1e9	            0x85c0	                           test eax, eax	        85	rev-list.c	FUNCTION_5	IF_1
0x1eb	            0x741e	                            je 0x400024b	        85	rev-list.c	FUNCTION_5	IF_1
0x1ed	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	        86	rev-list.c	FUNCTION_5	IF_1	CALL_2
0x1f4	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	        86	rev-list.c	FUNCTION_5	IF_1	CALL_2
0x1fb	          0x4889d6	                            mov rsi, rdx	        86	rev-list.c	FUNCTION_5	IF_1	CALL_2
0x1fe	          0x4889c7	                            mov rdi, rax	        86	rev-list.c	FUNCTION_5	IF_1	CALL_2
0x201	      0xe895050000	                  call sym.finish_commit	        86	rev-list.c	FUNCTION_5	IF_1	CALL_2
0x206	      0xe972050000	                           jmp 0x40007bd	        87	rev-list.c	FUNCTION_5	IF_1
0x20b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        90	rev-list.c	FUNCTION_5	CALL_3
0x212	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	        90	rev-list.c	FUNCTION_5	CALL_3
0x219	          0x4889c7	                            mov rdi, rax	        90	rev-list.c	FUNCTION_5	CALL_3
0x21c	      0xe800000000	                          call 0x4000261	        90	rev-list.c	FUNCTION_5	CALL_3
0x221	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        92	rev-list.c	FUNCTION_5	IF_2
0x228	         0xfb64076	           movzx eax, byte [rax + 0x76] 	        92	rev-list.c	FUNCTION_5	IF_2
0x22c	          0x83e040	                           and eax, 0x40	        92	rev-list.c	FUNCTION_5	IF_2
0x22f	            0x84c0	                             test al, al	        92	rev-list.c	FUNCTION_5	IF_2
0x231	     0xf84ad000000	                            je 0x4000324	        92	rev-list.c	FUNCTION_5	IF_2
0x237	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	        93	rev-list.c	FUNCTION_5	IF_2	IF_3
0x23e	            0x8b00	                    mov eax, dword [rax]	        93	rev-list.c	FUNCTION_5	IF_2	IF_3
0x240	          0xc1e804	                              shr eax, 4	        93	rev-list.c	FUNCTION_5	IF_2	IF_3
0x243	      0x25ffffff07	                      and eax, 0x7ffffff	        93	rev-list.c	FUNCTION_5	IF_2	IF_3
0x248	      0x2500020000	                          and eax, 0x200	        93	rev-list.c	FUNCTION_5	IF_2	IF_3
0x24d	            0x85c0	                           test eax, eax	        93	rev-list.c	FUNCTION_5	IF_2	IF_3
0x24f	            0x741f	                            je 0x40002b0	        93	rev-list.c	FUNCTION_5	IF_2	IF_3
0x251	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        94	rev-list.c	FUNCTION_5	IF_2	IF_3
0x258	    0x8b8078080000	           mov eax, dword [rax + 0x878] 	        94	rev-list.c	FUNCTION_5	IF_2	IF_3
0x25e	          0x8d5001	                      lea edx, [rax + 1]	        94	rev-list.c	FUNCTION_5	IF_2	IF_3
0x261	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        94	rev-list.c	FUNCTION_5	IF_2	IF_3
0x268	    0x899078080000	            mov dword [rax + 0x878], edx	        94	rev-list.c	FUNCTION_5	IF_2	IF_3
0x26e	            0xeb56	                           jmp 0x4000306	        94	rev-list.c	FUNCTION_5	IF_2	IF_3
0x270	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	        95	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x277	            0x8b00	                    mov eax, dword [rax]	        95	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x279	          0xc1e804	                              shr eax, 4	        95	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x27c	      0x25ffffff07	                      and eax, 0x7ffffff	        95	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x281	      0x2500010000	                          and eax, 0x100	        95	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x286	            0x85c0	                           test eax, eax	        95	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x288	            0x741f	                            je 0x40002e9	        95	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x28a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        96	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x291	    0x8b8070080000	           mov eax, dword [rax + 0x870] 	        96	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x297	          0x8d5001	                      lea edx, [rax + 1]	        96	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x29a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        96	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x2a1	    0x899070080000	            mov dword [rax + 0x870], edx	        96	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x2a7	            0xeb1d	                           jmp 0x4000306	        96	rev-list.c	FUNCTION_5	IF_2	ELSE_1	IF_4
0x2a9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        98	rev-list.c	FUNCTION_5	IF_2	ELSE_2
0x2b0	    0x8b8074080000	           mov eax, dword [rax + 0x874] 	        98	rev-list.c	FUNCTION_5	IF_2	ELSE_2
0x2b6	          0x8d5001	                      lea edx, [rax + 1]	        98	rev-list.c	FUNCTION_5	IF_2	ELSE_2
0x2b9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        98	rev-list.c	FUNCTION_5	IF_2	ELSE_2
0x2c0	    0x899074080000	            mov dword [rax + 0x874], edx	        98	rev-list.c	FUNCTION_5	IF_2	ELSE_2
0x2c6	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	        99	rev-list.c	FUNCTION_5	IF_2	CALL_4
0x2cd	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	        99	rev-list.c	FUNCTION_5	IF_2	CALL_4
0x2d4	          0x4889d6	                            mov rsi, rdx	        99	rev-list.c	FUNCTION_5	IF_2	CALL_4
0x2d7	          0x4889c7	                            mov rdi, rax	        99	rev-list.c	FUNCTION_5	IF_2	CALL_4
0x2da	      0xe8bc040000	                  call sym.finish_commit	        99	rev-list.c	FUNCTION_5	IF_2	CALL_4
0x2df	      0xe999040000	                           jmp 0x40007bd	       100	rev-list.c	FUNCTION_5	IF_2
0x2e4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       103	rev-list.c	FUNCTION_5	IF_5
0x2eb	          0x8b400c	              mov eax, dword [rax + 0xc]	       103	rev-list.c	FUNCTION_5	IF_5
0x2ee	            0x85c0	                           test eax, eax	       103	rev-list.c	FUNCTION_5	IF_5
0x2f0	            0x741d	                            je 0x400034f	       103	rev-list.c	FUNCTION_5	IF_5
0x2f2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       104	rev-list.c	FUNCTION_5	CALL_5
0x2f9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       104	rev-list.c	FUNCTION_5	CALL_5
0x2fd	          0x4889c6	                            mov rsi, rax	       104	rev-list.c	FUNCTION_5	CALL_5
0x300	      0xbf00000000	                              mov edi, 0	       104	rev-list.c	FUNCTION_5	CALL_5
0x305	      0xb800000000	                              mov eax, 0	       104	rev-list.c	FUNCTION_5	CALL_5
0x30a	      0xe800000000	                          call 0x400034f	       104	rev-list.c	FUNCTION_5	CALL_5
0x30f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       105	rev-list.c	FUNCTION_5	IF_6
0x316	        0x488b4018	            mov rax, qword [rax + 0x18] 	       105	rev-list.c	FUNCTION_5	IF_6
0x31a	          0x4885c0	                           test rax, rax	       105	rev-list.c	FUNCTION_5	IF_6
0x31d	            0x741d	                            je 0x400037c	       105	rev-list.c	FUNCTION_5	IF_6
0x31f	    0x488b15000000	            mov rdx, qword [0x04000366] 	       106	rev-list.c	FUNCTION_5	CALL_6
0x326	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       106	rev-list.c	FUNCTION_5	CALL_6
0x32d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       106	rev-list.c	FUNCTION_5	CALL_6
0x331	          0x4889d6	                            mov rsi, rdx	       106	rev-list.c	FUNCTION_5	CALL_6
0x334	          0x4889c7	                            mov rdi, rax	       106	rev-list.c	FUNCTION_5	CALL_6
0x337	      0xe800000000	                          call 0x400037c	       106	rev-list.c	FUNCTION_5	CALL_6
0x33c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       108	rev-list.c	FUNCTION_5	IF_7
0x343	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       108	rev-list.c	FUNCTION_5	IF_7
0x34a	          0x4885c0	                           test rax, rax	       108	rev-list.c	FUNCTION_5	IF_7
0x34d	            0x752b	                           jne 0x40003ba	       108	rev-list.c	FUNCTION_5	IF_7
0x34f	    0x488b1d000000	            mov rbx, qword [0x04000396] 	       109	rev-list.c	FUNCTION_5	CALL_8
0x356	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       109	rev-list.c	FUNCTION_5	CALL_8
0x35d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       109	rev-list.c	FUNCTION_5	CALL_8
0x364	          0x4889d6	                            mov rsi, rdx	       109	rev-list.c	FUNCTION_5	CALL_8
0x367	          0x4889c7	                            mov rdi, rax	       109	rev-list.c	FUNCTION_5	CALL_8
0x36a	      0xe800000000	                          call 0x40003af	       109	rev-list.c	FUNCTION_5	CALL_8
0x36f	          0x4889de	                            mov rsi, rbx	       109	rev-list.c	FUNCTION_5	CALL_8
0x372	          0x4889c7	                            mov rdi, rax	       109	rev-list.c	FUNCTION_5	CALL_8
0x375	      0xe800000000	                          call 0x40003ba	       109	rev-list.c	FUNCTION_5	CALL_8
0x37a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       110	rev-list.c	FUNCTION_5	IF_8
0x381	         0xfb6407b	           movzx eax, byte [rax + 0x7b] 	       110	rev-list.c	FUNCTION_5	IF_8
0x385	          0x83e001	                              and eax, 1	       110	rev-list.c	FUNCTION_5	IF_8
0x388	            0x84c0	                             test al, al	       110	rev-list.c	FUNCTION_5	IF_8
0x38a	            0x7449	                            je 0x4000415	       110	rev-list.c	FUNCTION_5	IF_8
0x38c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       110	rev-list.c	FUNCTION_5	IF_8
0x393	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       110	rev-list.c	FUNCTION_5	IF_8
0x399	            0x85c0	                           test eax, eax	       110	rev-list.c	FUNCTION_5	IF_8
0x39b	            0x7438	                            je 0x4000415	       110	rev-list.c	FUNCTION_5	IF_8
0x39d	    0x488b1d000000	            mov rbx, qword [0x040003e4] 	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3a4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3ab	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3b1	            0x89c2	                            mov edx, eax	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3b3	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3ba	        0x4883c004	                              add rax, 4	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3be	            0x89d6	                            mov esi, edx	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3c0	          0x4889c7	                            mov rdi, rax	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3c3	      0xe800000000	                          call 0x4000408	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3c8	          0x4889de	                            mov rsi, rbx	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3cb	          0x4889c7	                            mov rdi, rax	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3ce	      0xe800000000	                          call 0x4000413	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3d3	            0xeb25	                           jmp 0x400043a	       111	rev-list.c	FUNCTION_5	IF_8	CALL_10
0x3d5	    0x488b1d000000	            mov rbx, qword [0x0400041c] 	       114	rev-list.c	FUNCTION_5	CALL_12
0x3dc	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       114	rev-list.c	FUNCTION_5	CALL_12
0x3e3	        0x4883c004	                              add rax, 4	       114	rev-list.c	FUNCTION_5	CALL_12
0x3e7	          0x4889c7	                            mov rdi, rax	       114	rev-list.c	FUNCTION_5	CALL_12
0x3ea	      0xe800000000	                          call 0x400042f	       114	rev-list.c	FUNCTION_5	CALL_12
0x3ef	          0x4889de	                            mov rsi, rbx	       114	rev-list.c	FUNCTION_5	CALL_12
0x3f2	          0x4889c7	                            mov rdi, rax	       114	rev-list.c	FUNCTION_5	CALL_12
0x3f5	      0xe800000000	                          call 0x400043a	       114	rev-list.c	FUNCTION_5	CALL_12
0x3fa	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       115	rev-list.c	FUNCTION_5	IF_9
0x401	         0xfb64077	           movzx eax, byte [rax + 0x77] 	       115	rev-list.c	FUNCTION_5	IF_9
0x405	          0x83e008	                              and eax, 8	       115	rev-list.c	FUNCTION_5	IF_9
0x408	            0x84c0	                             test al, al	       115	rev-list.c	FUNCTION_5	IF_9
0x40a	            0x7458	                            je 0x40004a4	       115	rev-list.c	FUNCTION_5	IF_9
0x40c	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       116	rev-list.c	FUNCTION_5	IF_9
0x413	        0x488b4030	            mov rax, qword [rax + 0x30] 	       116	rev-list.c	FUNCTION_5	IF_9
0x417	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       116	rev-list.c	FUNCTION_5	IF_9
0x41e	            0xeb3a	                           jmp 0x400049a	       117	rev-list.c	FUNCTION_5	IF_9	WHILE_1
0x420	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       118	rev-list.c	FUNCTION_5	IF_9	WHILE_1	CALL_14
0x427	          0x488b00	                    mov rax, qword [rax]	       118	rev-list.c	FUNCTION_5	IF_9	WHILE_1	CALL_14
0x42a	        0x4883c004	                              add rax, 4	       118	rev-list.c	FUNCTION_5	IF_9	WHILE_1	CALL_14
0x42e	          0x4889c7	                            mov rdi, rax	       118	rev-list.c	FUNCTION_5	IF_9	WHILE_1	CALL_14
0x431	      0xe800000000	                          call 0x4000476	       118	rev-list.c	FUNCTION_5	IF_9	WHILE_1	CALL_14
0x436	          0x4889c6	                            mov rsi, rax	       118	rev-list.c	FUNCTION_5	IF_9	WHILE_1	CALL_14
0x439	      0xbf00000000	                              mov edi, 0	       118	rev-list.c	FUNCTION_5	IF_9	WHILE_1	CALL_14
0x43e	      0xb800000000	                              mov eax, 0	       118	rev-list.c	FUNCTION_5	IF_9	WHILE_1	CALL_14
0x443	      0xe800000000	                          call 0x4000488	       118	rev-list.c	FUNCTION_5	IF_9	WHILE_1	CALL_14
0x448	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       119	rev-list.c	FUNCTION_5	IF_9	WHILE_1
0x44f	        0x488b4008	                mov rax, qword [rax + 8]	       119	rev-list.c	FUNCTION_5	IF_9	WHILE_1
0x453	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       119	rev-list.c	FUNCTION_5	IF_9	WHILE_1
0x45a	    0x4883bd00ffff	              cmp qword [rbp - 0x100], 0	       117	rev-list.c	FUNCTION_5	IF_9	WHILE_1
0x462	            0x75bc	                           jne 0x4000460	       117	rev-list.c	FUNCTION_5	IF_9	WHILE_1
0x464	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       122	rev-list.c	FUNCTION_5	IF_10
0x46b	    0x488b80000800	           mov rax, qword [rax + 0x800] 	       122	rev-list.c	FUNCTION_5	IF_10
0x472	          0x4885c0	                           test rax, rax	       122	rev-list.c	FUNCTION_5	IF_10
0x475	            0x746d	                            je 0x4000524	       122	rev-list.c	FUNCTION_5	IF_10
0x477	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       125	rev-list.c	FUNCTION_5	IF_10	CALL_15
0x47e	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       125	rev-list.c	FUNCTION_5	IF_10	CALL_15
0x485	    0x4881c2000800	                          add rdx, 0x800	       125	rev-list.c	FUNCTION_5	IF_10	CALL_15
0x48c	          0x4889c6	                            mov rsi, rax	       125	rev-list.c	FUNCTION_5	IF_10	CALL_15
0x48f	          0x4889d7	                            mov rdi, rdx	       125	rev-list.c	FUNCTION_5	IF_10	CALL_15
0x492	      0xe800000000	                          call 0x40004d7	       125	rev-list.c	FUNCTION_5	IF_10	CALL_15
0x497	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       125	rev-list.c	FUNCTION_5	IF_10	CALL_15
0x49e	            0xeb3a	                           jmp 0x400051a	       126	rev-list.c	FUNCTION_5	IF_10	WHILE_2
0x4a0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       127	rev-list.c	FUNCTION_5	IF_10	WHILE_2	CALL_17
0x4a7	          0x488b00	                    mov rax, qword [rax]	       127	rev-list.c	FUNCTION_5	IF_10	WHILE_2	CALL_17
0x4aa	        0x4883c004	                              add rax, 4	       127	rev-list.c	FUNCTION_5	IF_10	WHILE_2	CALL_17
0x4ae	          0x4889c7	                            mov rdi, rax	       127	rev-list.c	FUNCTION_5	IF_10	WHILE_2	CALL_17
0x4b1	      0xe800000000	                          call 0x40004f6	       127	rev-list.c	FUNCTION_5	IF_10	WHILE_2	CALL_17
0x4b6	          0x4889c6	                            mov rsi, rax	       127	rev-list.c	FUNCTION_5	IF_10	WHILE_2	CALL_17
0x4b9	      0xbf00000000	                              mov edi, 0	       127	rev-list.c	FUNCTION_5	IF_10	WHILE_2	CALL_17
0x4be	      0xb800000000	                              mov eax, 0	       127	rev-list.c	FUNCTION_5	IF_10	WHILE_2	CALL_17
0x4c3	      0xe800000000	                          call 0x4000508	       127	rev-list.c	FUNCTION_5	IF_10	WHILE_2	CALL_17
0x4c8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       128	rev-list.c	FUNCTION_5	IF_10	WHILE_2
0x4cf	        0x488b4008	                mov rax, qword [rax + 8]	       128	rev-list.c	FUNCTION_5	IF_10	WHILE_2
0x4d3	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       128	rev-list.c	FUNCTION_5	IF_10	WHILE_2
0x4da	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	       126	rev-list.c	FUNCTION_5	IF_10	WHILE_2
0x4e2	            0x75bc	                           jne 0x40004e0	       126	rev-list.c	FUNCTION_5	IF_10	WHILE_2
0x4e4	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       131	rev-list.c	FUNCTION_5	CALL_18
0x4eb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       131	rev-list.c	FUNCTION_5	CALL_18
0x4f2	          0x4889d6	                            mov rsi, rdx	       131	rev-list.c	FUNCTION_5	CALL_18
0x4f5	          0x4889c7	                            mov rdi, rax	       131	rev-list.c	FUNCTION_5	CALL_18
0x4f8	      0xe800000000	                          call 0x400053d	       131	rev-list.c	FUNCTION_5	CALL_18
0x4fd	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       132	rev-list.c	FUNCTION_5	IF_11
0x504	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	       132	rev-list.c	FUNCTION_5	IF_11
0x50a	          0x83f805	                              cmp eax, 5	       132	rev-list.c	FUNCTION_5	IF_11
0x50d	            0x750c	                           jne 0x400055b	       132	rev-list.c	FUNCTION_5	IF_11
0x50f	      0xbf20000000	                           mov edi, 0x20	       133	rev-list.c	FUNCTION_5	CALL_19
0x514	      0xe800000000	                          call 0x4000559	       133	rev-list.c	FUNCTION_5	CALL_19
0x519	            0xeb0a	                           jmp 0x4000565	       133	rev-list.c	FUNCTION_5	CALL_19
0x51b	      0xbf0a000000	                            mov edi, 0xa	       135	rev-list.c	FUNCTION_5	CALL_20
0x520	      0xe800000000	                          call 0x4000565	       135	rev-list.c	FUNCTION_5	CALL_20
0x525	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       137	rev-list.c	FUNCTION_5	IF_12
0x52c	         0xfb64079	           movzx eax, byte [rax + 0x79] 	       137	rev-list.c	FUNCTION_5	IF_12
0x530	          0x83e010	                           and eax, 0x10	       137	rev-list.c	FUNCTION_5	IF_12
0x533	            0x84c0	                             test al, al	       137	rev-list.c	FUNCTION_5	IF_12
0x535	     0xf84f1010000	                            je 0x400076c	       137	rev-list.c	FUNCTION_5	IF_12
0x53b	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       138	rev-list.c	FUNCTION_5	IF_12
0x546	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	       138	rev-list.c	FUNCTION_5	IF_12
0x551	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       138	rev-list.c	FUNCTION_5	IF_12
0x55c	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	       139	rev-list.c	FUNCTION_5	IF_12
0x563	      0xb800000000	                              mov eax, 0	       139	rev-list.c	FUNCTION_5	IF_12
0x568	      0xb914000000	                           mov ecx, 0x14	       139	rev-list.c	FUNCTION_5	IF_12
0x56d	          0x4889d7	                            mov rdi, rdx	       139	rev-list.c	FUNCTION_5	IF_12
0x570	          0xf348ab	              rep stosq qword [rdi], rax	       139	rev-list.c	FUNCTION_5	IF_12
0x573	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       140	rev-list.c	FUNCTION_5	IF_12
0x57a	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       140	rev-list.c	FUNCTION_5	IF_12
0x580	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       140	rev-list.c	FUNCTION_5	IF_12
0x586	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       141	rev-list.c	FUNCTION_5	IF_12
0x58d	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	       141	rev-list.c	FUNCTION_5	IF_12
0x594	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       141	rev-list.c	FUNCTION_5	IF_12
0x59b	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	       141	rev-list.c	FUNCTION_5	IF_12
0x5a2	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       141	rev-list.c	FUNCTION_5	IF_12
0x5a9	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       141	rev-list.c	FUNCTION_5	IF_12
0x5b0	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       141	rev-list.c	FUNCTION_5	IF_12
0x5b7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       142	rev-list.c	FUNCTION_5	IF_12
0x5be	         0xfb6407b	           movzx eax, byte [rax + 0x7b] 	       142	rev-list.c	FUNCTION_5	IF_12
0x5c2	          0xc0e805	                               shr al, 5	       142	rev-list.c	FUNCTION_5	IF_12
0x5c5	          0x83e001	                              and eax, 1	       142	rev-list.c	FUNCTION_5	IF_12
0x5c8	          0x83e001	                              and eax, 1	       142	rev-list.c	FUNCTION_5	IF_12
0x5cb	            0x89c2	                            mov edx, eax	       142	rev-list.c	FUNCTION_5	IF_12
0x5cd	     0xfb68570ffff	            movzx eax, byte [rbp - 0x90]	       142	rev-list.c	FUNCTION_5	IF_12
0x5d4	          0x83e0fe	                     and eax, 0xfffffffe	       142	rev-list.c	FUNCTION_5	IF_12
0x5d7	             0x9d0	                             or eax, edx	       142	rev-list.c	FUNCTION_5	IF_12
0x5d9	    0x888570ffffff	               mov byte [rbp - 0x90], al	       142	rev-list.c	FUNCTION_5	IF_12
0x5df	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       143	rev-list.c	FUNCTION_5	IF_12
0x5e6	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	       143	rev-list.c	FUNCTION_5	IF_12
0x5ec	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	       143	rev-list.c	FUNCTION_5	IF_12
0x5f2	      0xe800000000	                          call 0x4000637	       144	rev-list.c	FUNCTION_5	IF_12	CALL_21
0x5f7	        0x48894598	             mov qword [rbp - 0x68], rax	       144	rev-list.c	FUNCTION_5	IF_12	CALL_21
0x5fb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       145	rev-list.c	FUNCTION_5	IF_12
0x602	    0x8b8038050000	           mov eax, dword [rax + 0x538] 	       145	rev-list.c	FUNCTION_5	IF_12
0x608	          0x8945a8	             mov dword [rbp - 0x58], eax	       145	rev-list.c	FUNCTION_5	IF_12
0x60b	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	       146	rev-list.c	FUNCTION_5	IF_12	CALL_22
0x612	    0x488b8df8feff	            mov rcx, qword [rbp - 0x108]	       146	rev-list.c	FUNCTION_5	IF_12	CALL_22
0x619	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       146	rev-list.c	FUNCTION_5	IF_12	CALL_22
0x620	          0x4889ce	                            mov rsi, rcx	       146	rev-list.c	FUNCTION_5	IF_12	CALL_22
0x623	          0x4889c7	                            mov rdi, rax	       146	rev-list.c	FUNCTION_5	IF_12	CALL_22
0x626	      0xe800000000	                          call 0x400066b	       146	rev-list.c	FUNCTION_5	IF_12	CALL_22
0x62b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       147	rev-list.c	FUNCTION_5	IF_12	IF_13
0x632	          0x4885c0	                           test rax, rax	       147	rev-list.c	FUNCTION_5	IF_12	IF_13
0x635	     0xf84a0000000	                            je 0x400071b	       147	rev-list.c	FUNCTION_5	IF_12	IF_13
0x63b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       148	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_14
0x642	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	       148	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_14
0x648	          0x83f805	                              cmp eax, 5	       148	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_14
0x64b	            0x7416	                            je 0x40006a3	       148	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_14
0x64d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       149	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_23
0x654	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       149	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_23
0x65b	          0x4889c7	                            mov rdi, rax	       149	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_23
0x65e	      0xe800000000	                          call 0x40006a3	       149	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_23
0x663	    0x488b0d000000	            mov rcx, qword [0x040006aa] 	       151	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_24
0x66a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       151	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_24
0x671	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       151	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_24
0x678	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	       151	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_24
0x67f	          0x4889ce	                            mov rsi, rcx	       151	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_24
0x682	          0x4889c7	                            mov rdi, rax	       151	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_24
0x685	      0xe800000000	                          call 0x40006ca	       151	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_24
0x68a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       168	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_15
0x691	          0x4885c0	                           test rax, rax	       168	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_15
0x694	            0x7432	                            je 0x4000708	       168	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_15
0x696	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       168	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_15
0x69d	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       168	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_15
0x6a4	        0x4883ea01	                              sub rdx, 1	       168	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_15
0x6a8	          0x4801d0	                            add rax, rdx	       168	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_15
0x6ab	           0xfb600	                   movzx eax, byte [rax]	       168	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_15
0x6ae	            0x3c0a	                             cmp al, 0xa	       168	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_15
0x6b0	            0x7516	                           jne 0x4000708	       168	rev-list.c	FUNCTION_5	IF_12	IF_13	IF_15
0x6b2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       169	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_25
0x6b9	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       169	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_25
0x6c0	          0x4889c7	                            mov rdi, rax	       169	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_25
0x6c3	      0xe800000000	                          call 0x4000708	       169	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_25
0x6c8	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       170	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_26
0x6cf	          0x8b4010	            mov eax, dword [rax + 0x10] 	       170	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_26
0x6d2	            0x89c7	                            mov edi, eax	       170	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_26
0x6d4	      0xe800000000	                          call 0x4000719	       170	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_26
0x6d9	            0xeb40	                           jmp 0x400075b	       170	rev-list.c	FUNCTION_5	IF_12	IF_13	CALL_26
0x6db	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       177	rev-list.c	FUNCTION_5	IF_12	ELSE_5	IF_16	CALL_27
0x6e2	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       177	rev-list.c	FUNCTION_5	IF_12	ELSE_5	IF_16	CALL_27
0x6e9	          0x4889c7	                            mov rdi, rax	       177	rev-list.c	FUNCTION_5	IF_12	ELSE_5	IF_16	CALL_27
0x6ec	      0xe800000000	                          call 0x4000731	       177	rev-list.c	FUNCTION_5	IF_12	ELSE_5	IF_16	CALL_27
0x6f1	            0x85c0	                           test eax, eax	       177	rev-list.c	FUNCTION_5	IF_12	ELSE_5	IF_16	CALL_27
0x6f3	            0x740a	                            je 0x400073f	       177	rev-list.c	FUNCTION_5	IF_12	ELSE_5	IF_16	CALL_27
0x6f5	      0xbf0a000000	                            mov edi, 0xa	       178	rev-list.c	FUNCTION_5	IF_12	ELSE_5	CALL_28
0x6fa	      0xe800000000	                          call 0x400073f	       178	rev-list.c	FUNCTION_5	IF_12	ELSE_5	CALL_28
0x6ff	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       179	rev-list.c	FUNCTION_5	IF_12	ELSE_5	IF_17
0x706	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	       179	rev-list.c	FUNCTION_5	IF_12	ELSE_5	IF_17
0x70c	          0x83f805	                              cmp eax, 5	       179	rev-list.c	FUNCTION_5	IF_12	ELSE_5	IF_17
0x70f	            0x750a	                           jne 0x400075b	       179	rev-list.c	FUNCTION_5	IF_12	ELSE_5	IF_17
0x711	      0xbf0a000000	                            mov edi, 0xa	       180	rev-list.c	FUNCTION_5	IF_12	ELSE_5	CALL_29
0x716	      0xe800000000	                          call 0x400075b	       180	rev-list.c	FUNCTION_5	IF_12	ELSE_5	CALL_29
0x71b	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       182	rev-list.c	FUNCTION_5	IF_12	CALL_30
0x722	          0x4889c7	                            mov rdi, rax	       182	rev-list.c	FUNCTION_5	IF_12	CALL_30
0x725	      0xe800000000	                          call 0x400076a	       182	rev-list.c	FUNCTION_5	IF_12	CALL_30
0x72a	            0xeb24	                           jmp 0x4000790	       182	rev-list.c	FUNCTION_5	IF_12	CALL_30
0x72c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       184	rev-list.c	FUNCTION_5	ELSE_6	IF_18	CALL_31
0x733	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       184	rev-list.c	FUNCTION_5	ELSE_6	IF_18	CALL_31
0x73a	          0x4889c7	                            mov rdi, rax	       184	rev-list.c	FUNCTION_5	ELSE_6	IF_18	CALL_31
0x73d	      0xe800000000	                          call 0x4000782	       184	rev-list.c	FUNCTION_5	ELSE_6	IF_18	CALL_31
0x742	            0x85c0	                           test eax, eax	       184	rev-list.c	FUNCTION_5	ELSE_6	IF_18	CALL_31
0x744	            0x740a	                            je 0x4000790	       184	rev-list.c	FUNCTION_5	ELSE_6	IF_18	CALL_31
0x746	      0xbf0a000000	                            mov edi, 0xa	       185	rev-list.c	FUNCTION_5	ELSE_6	CALL_32
0x74b	      0xe800000000	                          call 0x4000790	       185	rev-list.c	FUNCTION_5	ELSE_6	CALL_32
0x750	    0x488b05000000	            mov rax, qword [0x04000797] 	       187	rev-list.c	FUNCTION_5	CALL_33
0x757	      0xbe00000000	                              mov esi, 0	       187	rev-list.c	FUNCTION_5	CALL_33
0x75c	          0x4889c7	                            mov rdi, rax	       187	rev-list.c	FUNCTION_5	CALL_33
0x75f	      0xe800000000	                          call 0x40007a4	       187	rev-list.c	FUNCTION_5	CALL_33
0x764	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	       188	rev-list.c	FUNCTION_5	CALL_34
0x76b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       188	rev-list.c	FUNCTION_5	CALL_34
0x772	          0x4889d6	                            mov rsi, rdx	       188	rev-list.c	FUNCTION_5	CALL_34
0x775	          0x4889c7	                            mov rdi, rax	       188	rev-list.c	FUNCTION_5	CALL_34
0x778	      0xe81e000000	                  call sym.finish_commit	       188	rev-list.c	FUNCTION_5	CALL_34
0x77d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       189	rev-list.c	FUNCTION_5
0x781	    0x644833042528	                xor rax, qword fs:[0x28]	       189	rev-list.c	FUNCTION_5
0x78a	            0x7405	                            je 0x40007d1	       189	rev-list.c	FUNCTION_5
0x78c	      0xe800000000	                          call 0x40007d1	       189	rev-list.c	FUNCTION_5
0x791	    0x4881c4080100	                          add rsp, 0x108	       189	rev-list.c	FUNCTION_5
0x798	              0x5b	                                 pop rbx	       189	rev-list.c	FUNCTION_5
0x799	              0x5d	                                 pop rbp	       189	rev-list.c	FUNCTION_5
0x79a	              0xc3	                                     ret	       189	rev-list.c	FUNCTION_5
show_object_fast	WHILE,0:functions,0:IF,0:ELSE,0:DO,0:SWITCH,0:CALL,2:FOR,0	21
0xbef	              0x55	                                push rbp	       323	rev-list.c	FUNCTION_14
0xbf0	          0x4889e5	                            mov rbp, rsp	       323	rev-list.c	FUNCTION_14
0xbf3	        0x4883ec30	                           sub rsp, 0x30	       323	rev-list.c	FUNCTION_14
0xbf7	        0x48897df8	                mov qword [rbp - 8], rdi	       323	rev-list.c	FUNCTION_14
0xbfb	          0x8975f4	              mov dword [rbp - 0xc], esi	       323	rev-list.c	FUNCTION_14
0xbfe	          0x8955f0	             mov dword [rbp - 0x10], edx	       323	rev-list.c	FUNCTION_14
0xc01	          0x894dec	             mov dword [rbp - 0x14], ecx	       323	rev-list.c	FUNCTION_14
0xc04	        0x4c8945e0	              mov qword [rbp - 0x20], r8	       323	rev-list.c	FUNCTION_14
0xc08	        0x4c894dd8	              mov qword [rbp - 0x28], r9	       323	rev-list.c	FUNCTION_14
0xc0c	        0x488b45f8	                mov rax, qword [rbp - 8]	       324	rev-list.c	FUNCTION_14	CALL_2
0xc10	          0x4889c7	                            mov rdi, rax	       324	rev-list.c	FUNCTION_14	CALL_2
0xc13	      0xe800000000	                          call 0x4000c58	       324	rev-list.c	FUNCTION_14	CALL_2
0xc18	          0x4889c2	                            mov rdx, rax	       324	rev-list.c	FUNCTION_14	CALL_2
0xc1b	    0x488b05000000	            mov rax, qword [0x04000c62] 	       324	rev-list.c	FUNCTION_14	CALL_2
0xc22	      0xbe00000000	                              mov esi, 0	       324	rev-list.c	FUNCTION_14	CALL_2
0xc27	          0x4889c7	                            mov rdi, rax	       324	rev-list.c	FUNCTION_14	CALL_2
0xc2a	      0xb800000000	                              mov eax, 0	       324	rev-list.c	FUNCTION_14	CALL_2
0xc2f	      0xe800000000	                          call 0x4000c74	       324	rev-list.c	FUNCTION_14	CALL_2
0xc34	      0xb801000000	                              mov eax, 1	       325	rev-list.c	FUNCTION_14
0xc39	              0xc9	                                   leave	       326	rev-list.c	FUNCTION_14
0xc3a	              0xc3	                                     ret	       326	rev-list.c	FUNCTION_14
print_var_str	WHILE,0:functions,0:IF,0:ELSE,0:DO,0:SWITCH,0:CALL,1:FOR,0	14
0x9f4	              0x55	                                push rbp	       262	rev-list.c	FUNCTION_11
0x9f5	          0x4889e5	                            mov rbp, rsp	       262	rev-list.c	FUNCTION_11
0x9f8	        0x4883ec10	                           sub rsp, 0x10	       262	rev-list.c	FUNCTION_11
0x9fc	        0x48897df8	                mov qword [rbp - 8], rdi	       262	rev-list.c	FUNCTION_11
0xa00	        0x488975f0	             mov qword [rbp - 0x10], rsi	       262	rev-list.c	FUNCTION_11
0xa04	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       263	rev-list.c	FUNCTION_11	CALL_1
0xa08	        0x488b45f8	                mov rax, qword [rbp - 8]	       263	rev-list.c	FUNCTION_11	CALL_1
0xa0c	          0x4889c6	                            mov rsi, rax	       263	rev-list.c	FUNCTION_11	CALL_1
0xa0f	      0xbf00000000	                              mov edi, 0	       263	rev-list.c	FUNCTION_11	CALL_1
0xa14	      0xb800000000	                              mov eax, 0	       263	rev-list.c	FUNCTION_11	CALL_1
0xa19	      0xe800000000	                          call 0x4000a5e	       263	rev-list.c	FUNCTION_11	CALL_1
0xa1e	              0x90	                                     nop	       264	rev-list.c	FUNCTION_11
0xa1f	              0xc9	                                   leave	       264	rev-list.c	FUNCTION_11
0xa20	              0xc3	                                     ret	       264	rev-list.c	FUNCTION_11
skip_prefix	WHILE,0:functions,0:IF,1:ELSE,0:DO,1:SWITCH,0:CALL,0:FOR,0	27
0x0	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_23
0x1	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_23
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_23
0x8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_23
0xc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_23
0x10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_23	DO_1	IF_1
0x14	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_23	DO_1	IF_1
0x17	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_23	DO_1	IF_1
0x19	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_23	DO_1	IF_1
0x1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_23	DO_1	IF_1
0x1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_23	DO_1	IF_1
0x23	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_23	DO_1	IF_1
0x26	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_23	DO_1	IF_1
0x2b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_23	DO_1	IF_1
0x2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_23	DO_1
0x31	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_23	DO_1
0x35	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_23	DO_1
0x39	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_23	DO_1
0x3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_23	DO_1
0x40	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_23	DO_1
0x44	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_23	DO_1
0x48	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_23	DO_1
0x4b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_23	DO_1
0x4d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_23	DO_1
0x4f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_23
0x54	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_23
0x55	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_23
oidmap_iter_init	WHILE,0:functions,0:IF,0:ELSE,0:DO,0:SWITCH,0:CALL,1:FOR,0	13
0x82	              0x55	                                push rbp	        74	oidmap.h	FUNCTION_48
0x83	          0x4889e5	                            mov rbp, rsp	        74	oidmap.h	FUNCTION_48
0x86	        0x4883ec10	                           sub rsp, 0x10	        74	oidmap.h	FUNCTION_48
0x8a	        0x48897df8	                mov qword [rbp - 8], rdi	        74	oidmap.h	FUNCTION_48
0x8e	        0x488975f0	             mov qword [rbp - 0x10], rsi	        74	oidmap.h	FUNCTION_48
0x92	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        75	oidmap.h	FUNCTION_48	CALL_1
0x96	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	oidmap.h	FUNCTION_48	CALL_1
0x9a	          0x4889d6	                            mov rsi, rdx	        75	oidmap.h	FUNCTION_48	CALL_1
0x9d	          0x4889c7	                            mov rdi, rax	        75	oidmap.h	FUNCTION_48	CALL_1
0xa0	      0xe800000000	                          call 0x40000e5	        75	oidmap.h	FUNCTION_48	CALL_1
0xa5	              0x90	                                     nop	        76	oidmap.h	FUNCTION_48
0xa6	              0xc9	                                   leave	        76	oidmap.h	FUNCTION_48
0xa7	              0xc3	                                     ret	        76	oidmap.h	FUNCTION_48
parse_missing_action_value	WHILE,0:functions,0:IF,4:ELSE,0:DO,0:SWITCH,0:CALL,4:FOR,0	46
0xc3b	              0x55	                                push rbp	       329	rev-list.c	FUNCTION_15
0xc3c	          0x4889e5	                            mov rbp, rsp	       329	rev-list.c	FUNCTION_15
0xc3f	        0x4883ec10	                           sub rsp, 0x10	       329	rev-list.c	FUNCTION_15
0xc43	        0x48897df8	                mov qword [rbp - 8], rdi	       329	rev-list.c	FUNCTION_15
0xc47	        0x488b45f8	                mov rax, qword [rbp - 8]	       330	rev-list.c	FUNCTION_15	IF_1	CALL_1
0xc4b	      0xbe00000000	                              mov esi, 0	       330	rev-list.c	FUNCTION_15	IF_1	CALL_1
0xc50	          0x4889c7	                            mov rdi, rax	       330	rev-list.c	FUNCTION_15	IF_1	CALL_1
0xc53	      0xe800000000	                          call 0x4000c98	       330	rev-list.c	FUNCTION_15	IF_1	CALL_1
0xc58	            0x85c0	                           test eax, eax	       330	rev-list.c	FUNCTION_15	IF_1	CALL_1
0xc5a	            0x7514	                           jne 0x4000cb0	       330	rev-list.c	FUNCTION_15	IF_1	CALL_1
0xc5c	    0xc70500000000	               mov dword [0x04000ca6], 0	       331	rev-list.c	FUNCTION_15	IF_1
0xc66	      0xb801000000	                              mov eax, 1	       332	rev-list.c	FUNCTION_15	IF_1
0xc6b	      0xe995000000	                           jmp 0x4000d45	       332	rev-list.c	FUNCTION_15	IF_1
0xc70	        0x488b45f8	                mov rax, qword [rbp - 8]	       335	rev-list.c	FUNCTION_15	IF_2	CALL_2
0xc74	      0xbe00000000	                              mov esi, 0	       335	rev-list.c	FUNCTION_15	IF_2	CALL_2
0xc79	          0x4889c7	                            mov rdi, rax	       335	rev-list.c	FUNCTION_15	IF_2	CALL_2
0xc7c	      0xe800000000	                          call 0x4000cc1	       335	rev-list.c	FUNCTION_15	IF_2	CALL_2
0xc81	            0x85c0	                           test eax, eax	       335	rev-list.c	FUNCTION_15	IF_2	CALL_2
0xc83	            0x751b	                           jne 0x4000ce0	       335	rev-list.c	FUNCTION_15	IF_2	CALL_2
0xc85	    0xc70500000000	               mov dword [0x04000ccf], 1	       336	rev-list.c	FUNCTION_15	IF_2
0xc8f	    0xc70500000000	               mov dword [0x04000cd9], 0	       337	rev-list.c	FUNCTION_15	IF_2
0xc99	      0xb801000000	                              mov eax, 1	       338	rev-list.c	FUNCTION_15	IF_2
0xc9e	            0xeb65	                           jmp 0x4000d45	       338	rev-list.c	FUNCTION_15	IF_2
0xca0	        0x488b45f8	                mov rax, qword [rbp - 8]	       341	rev-list.c	FUNCTION_15	IF_3	CALL_3
0xca4	      0xbe00000000	                              mov esi, 0	       341	rev-list.c	FUNCTION_15	IF_3	CALL_3
0xca9	          0x4889c7	                            mov rdi, rax	       341	rev-list.c	FUNCTION_15	IF_3	CALL_3
0xcac	      0xe800000000	                          call 0x4000cf1	       341	rev-list.c	FUNCTION_15	IF_3	CALL_3
0xcb1	            0x85c0	                           test eax, eax	       341	rev-list.c	FUNCTION_15	IF_3	CALL_3
0xcb3	            0x751b	                           jne 0x4000d10	       341	rev-list.c	FUNCTION_15	IF_3	CALL_3
0xcb5	    0xc70500000000	               mov dword [0x04000cff], 2	       342	rev-list.c	FUNCTION_15	IF_3
0xcbf	    0xc70500000000	               mov dword [0x04000d09], 0	       343	rev-list.c	FUNCTION_15	IF_3
0xcc9	      0xb801000000	                              mov eax, 1	       344	rev-list.c	FUNCTION_15	IF_3
0xcce	            0xeb35	                           jmp 0x4000d45	       344	rev-list.c	FUNCTION_15	IF_3
0xcd0	        0x488b45f8	                mov rax, qword [rbp - 8]	       347	rev-list.c	FUNCTION_15	IF_4	CALL_4
0xcd4	      0xbe00000000	                              mov esi, 0	       347	rev-list.c	FUNCTION_15	IF_4	CALL_4
0xcd9	          0x4889c7	                            mov rdi, rax	       347	rev-list.c	FUNCTION_15	IF_4	CALL_4
0xcdc	      0xe800000000	                          call 0x4000d21	       347	rev-list.c	FUNCTION_15	IF_4	CALL_4
0xce1	            0x85c0	                           test eax, eax	       347	rev-list.c	FUNCTION_15	IF_4	CALL_4
0xce3	            0x751b	                           jne 0x4000d40	       347	rev-list.c	FUNCTION_15	IF_4	CALL_4
0xce5	    0xc70500000000	               mov dword [0x04000d2f], 3	       348	rev-list.c	FUNCTION_15	IF_4
0xcef	    0xc70500000000	               mov dword [0x04000d39], 0	       349	rev-list.c	FUNCTION_15	IF_4
0xcf9	      0xb801000000	                              mov eax, 1	       350	rev-list.c	FUNCTION_15	IF_4
0xcfe	            0xeb05	                           jmp 0x4000d45	       350	rev-list.c	FUNCTION_15	IF_4
0xd00	      0xb800000000	                              mov eax, 0	       353	rev-list.c	FUNCTION_15
0xd05	              0xc9	                                   leave	       354	rev-list.c	FUNCTION_15
0xd06	              0xc3	                                     ret	       354	rev-list.c	FUNCTION_15
oidset_iter_next	WHILE,0:functions,0:IF,0:ELSE,0:DO,0:SWITCH,0:CALL,1:FOR,0	16
0x10e	              0x55	                                push rbp	        71	oidset.h	FUNCTION_46
0x10f	          0x4889e5	                            mov rbp, rsp	        71	oidset.h	FUNCTION_46
0x112	        0x4883ec20	                           sub rsp, 0x20	        71	oidset.h	FUNCTION_46
0x116	        0x48897de8	             mov qword [rbp - 0x18], rdi	        71	oidset.h	FUNCTION_46
0x11a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	oidset.h	FUNCTION_46	CALL_1
0x11e	          0x4889c7	                            mov rdi, rax	        72	oidset.h	FUNCTION_46	CALL_1
0x121	      0xe882ffffff	               call sym.oidmap_iter_next	        72	oidset.h	FUNCTION_46	CALL_1
0x126	        0x488945f8	                mov qword [rbp - 8], rax	        72	oidset.h	FUNCTION_46	CALL_1
0x12a	      0x48837df800	                  cmp qword [rbp - 8], 0	        73	oidset.h	FUNCTION_46
0x12f	            0x740a	                            je 0x400017b	        73	oidset.h	FUNCTION_46
0x131	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	oidset.h	FUNCTION_46
0x135	        0x4883c010	                           add rax, 0x10	        73	oidset.h	FUNCTION_46
0x139	            0xeb05	                           jmp 0x4000180	        73	oidset.h	FUNCTION_46
0x13b	      0xb800000000	                              mov eax, 0	        73	oidset.h	FUNCTION_46
0x140	              0xc9	                                   leave	        74	oidset.h	FUNCTION_46
0x141	              0xc3	                                     ret	        74	oidset.h	FUNCTION_46
oidset_iter_init	WHILE,0:functions,0:IF,0:ELSE,0:DO,0:SWITCH,0:CALL,1:FOR,0	13
0xe8	              0x55	                                push rbp	        66	oidset.h	FUNCTION_45
0xe9	          0x4889e5	                            mov rbp, rsp	        66	oidset.h	FUNCTION_45
0xec	        0x4883ec10	                           sub rsp, 0x10	        66	oidset.h	FUNCTION_45
0xf0	        0x48897df8	                mov qword [rbp - 8], rdi	        66	oidset.h	FUNCTION_45
0xf4	        0x488975f0	             mov qword [rbp - 0x10], rsi	        66	oidset.h	FUNCTION_45
0xf8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        67	oidset.h	FUNCTION_45	CALL_1
0xfc	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	oidset.h	FUNCTION_45	CALL_1
0x100	          0x4889d6	                            mov rsi, rdx	        67	oidset.h	FUNCTION_45	CALL_1
0x103	          0x4889c7	                            mov rdi, rax	        67	oidset.h	FUNCTION_45	CALL_1
0x106	      0xe877ffffff	               call sym.oidmap_iter_init	        67	oidset.h	FUNCTION_45	CALL_1
0x10b	              0x90	                                     nop	        68	oidset.h	FUNCTION_45
0x10c	              0xc9	                                   leave	        68	oidset.h	FUNCTION_45
0x10d	              0xc3	                                     ret	        68	oidset.h	FUNCTION_45
finish_object__ma	WHILE,0:functions,0:IF,1:ELSE,0:DO,0:SWITCH,1:CALL,7:FOR,0	52
0x7e3	              0x55	                                push rbp	       201	rev-list.c	FUNCTION_7
0x7e4	          0x4889e5	                            mov rbp, rsp	       201	rev-list.c	FUNCTION_7
0x7e7	        0x4883ec10	                           sub rsp, 0x10	       201	rev-list.c	FUNCTION_7
0x7eb	        0x48897df8	                mov qword [rbp - 8], rdi	       201	rev-list.c	FUNCTION_7
0x7ef	    0x8b0500000000	            mov eax, dword [0x04000835] 	       208	rev-list.c	FUNCTION_7	SWITCH_1
0x7f5	          0x83f801	                              cmp eax, 1	       208	rev-list.c	FUNCTION_7	SWITCH_1
0x7f8	     0xf8499000000	                            je 0x40008d7	       208	rev-list.c	FUNCTION_7	SWITCH_1
0x7fe	          0x83f801	                              cmp eax, 1	       208	rev-list.c	FUNCTION_7	SWITCH_1
0x801	            0x720c	                            jb 0x400084f	       208	rev-list.c	FUNCTION_7	SWITCH_1
0x803	          0x83f802	                              cmp eax, 2	       208	rev-list.c	FUNCTION_7	SWITCH_1
0x806	            0x7429	                            je 0x4000871	       208	rev-list.c	FUNCTION_7	SWITCH_1
0x808	          0x83f803	                              cmp eax, 3	       208	rev-list.c	FUNCTION_7	SWITCH_1
0x80b	            0x743b	                            je 0x4000888	       208	rev-list.c	FUNCTION_7	SWITCH_1
0x80d	            0xeb6f	                           jmp 0x40008be	       208	rev-list.c	FUNCTION_7	SWITCH_1
0x80f	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	rev-list.c	FUNCTION_7	SWITCH_1	CALL_2
0x813	        0x4883c004	                              add rax, 4	       210	rev-list.c	FUNCTION_7	SWITCH_1	CALL_2
0x817	          0x4889c7	                            mov rdi, rax	       210	rev-list.c	FUNCTION_7	SWITCH_1	CALL_2
0x81a	      0xe800000000	                          call 0x400085f	       210	rev-list.c	FUNCTION_7	SWITCH_1	CALL_2
0x81f	          0x4889c6	                            mov rsi, rax	       210	rev-list.c	FUNCTION_7	SWITCH_1	CALL_2
0x822	      0xbf00000000	                              mov edi, 0	       210	rev-list.c	FUNCTION_7	SWITCH_1	CALL_2
0x827	      0xb800000000	                              mov eax, 0	       210	rev-list.c	FUNCTION_7	SWITCH_1	CALL_2
0x82c	      0xe800000000	                          call 0x4000871	       210	rev-list.c	FUNCTION_7	SWITCH_1	CALL_2
0x831	        0x488b45f8	                mov rax, qword [rbp - 8]	       217	rev-list.c	FUNCTION_7	SWITCH_1	CALL_3
0x835	        0x4883c004	                              add rax, 4	       217	rev-list.c	FUNCTION_7	SWITCH_1	CALL_3
0x839	          0x4889c6	                            mov rsi, rax	       217	rev-list.c	FUNCTION_7	SWITCH_1	CALL_3
0x83c	      0xbf00000000	                              mov edi, 0	       217	rev-list.c	FUNCTION_7	SWITCH_1	CALL_3
0x841	      0xe800000000	                          call 0x4000886	       217	rev-list.c	FUNCTION_7	SWITCH_1	CALL_3
0x846	            0xeb53	                           jmp 0x40008db	       218	rev-list.c	FUNCTION_7	SWITCH_1
0x848	        0x488b45f8	                mov rax, qword [rbp - 8]	       221	rev-list.c	FUNCTION_7	SWITCH_1	IF_1	CALL_4
0x84c	        0x4883c004	                              add rax, 4	       221	rev-list.c	FUNCTION_7	SWITCH_1	IF_1	CALL_4
0x850	          0x4889c7	                            mov rdi, rax	       221	rev-list.c	FUNCTION_7	SWITCH_1	IF_1	CALL_4
0x853	      0xe800000000	                          call 0x4000898	       221	rev-list.c	FUNCTION_7	SWITCH_1	IF_1	CALL_4
0x858	            0x85c0	                           test eax, eax	       221	rev-list.c	FUNCTION_7	SWITCH_1	IF_1	CALL_4
0x85a	            0x753e	                           jne 0x40008da	       221	rev-list.c	FUNCTION_7	SWITCH_1	IF_1	CALL_4
0x85c	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	rev-list.c	FUNCTION_7	SWITCH_1	CALL_6
0x860	        0x4883c004	                              add rax, 4	       224	rev-list.c	FUNCTION_7	SWITCH_1	CALL_6
0x864	          0x4889c7	                            mov rdi, rax	       223	rev-list.c	FUNCTION_7	SWITCH_1	CALL_5
0x867	      0xe800000000	                          call 0x40008ac	       223	rev-list.c	FUNCTION_7	SWITCH_1	CALL_5
0x86c	          0x4889c6	                            mov rsi, rax	       223	rev-list.c	FUNCTION_7	SWITCH_1	CALL_5
0x86f	      0xbf00000000	                              mov edi, 0	       223	rev-list.c	FUNCTION_7	SWITCH_1	CALL_5
0x874	      0xb800000000	                              mov eax, 0	       223	rev-list.c	FUNCTION_7	SWITCH_1	CALL_5
0x879	      0xe800000000	                          call 0x40008be	       223	rev-list.c	FUNCTION_7	SWITCH_1	CALL_5
0x87e	      0xba00000000	                              mov edx, 0	       228	rev-list.c	FUNCTION_7	SWITCH_1	CALL_7
0x883	      0xbee4000000	                           mov esi, 0xe4	       228	rev-list.c	FUNCTION_7	SWITCH_1	CALL_7
0x888	      0xbf00000000	                              mov edi, 0	       228	rev-list.c	FUNCTION_7	SWITCH_1	CALL_7
0x88d	      0xb800000000	                              mov eax, 0	       228	rev-list.c	FUNCTION_7	SWITCH_1	CALL_7
0x892	      0xe800000000	                          call 0x40008d7	       228	rev-list.c	FUNCTION_7	SWITCH_1	CALL_7
0x897	              0x90	                                     nop	       214	rev-list.c	FUNCTION_7	SWITCH_1
0x898	            0xeb01	                           jmp 0x40008db	       214	rev-list.c	FUNCTION_7	SWITCH_1
0x89a	              0x90	                                     nop	       222	rev-list.c	FUNCTION_7	SWITCH_1	IF_1
0x89b	              0xc9	                                   leave	       231	rev-list.c	FUNCTION_7
0x89c	              0xc3	                                     ret	       231	rev-list.c	FUNCTION_7
finish_commit	WHILE,0:functions,0:IF,1:ELSE,0:DO,0:SWITCH,0:CALL,2:FOR,0	21
0x79b	              0x55	                                push rbp	       192	rev-list.c	FUNCTION_6
0x79c	          0x4889e5	                            mov rbp, rsp	       192	rev-list.c	FUNCTION_6
0x79f	        0x4883ec10	                           sub rsp, 0x10	       192	rev-list.c	FUNCTION_6
0x7a3	        0x48897df8	                mov qword [rbp - 8], rdi	       192	rev-list.c	FUNCTION_6
0x7a7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       192	rev-list.c	FUNCTION_6
0x7ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	rev-list.c	FUNCTION_6	IF_1
0x7af	        0x488b4030	            mov rax, qword [rax + 0x30] 	       193	rev-list.c	FUNCTION_6	IF_1
0x7b3	          0x4885c0	                           test rax, rax	       193	rev-list.c	FUNCTION_6	IF_1
0x7b6	            0x741c	                            je 0x4000814	       193	rev-list.c	FUNCTION_6	IF_1
0x7b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	rev-list.c	FUNCTION_6	IF_1	CALL_1
0x7bc	        0x488b4030	            mov rax, qword [rax + 0x30] 	       194	rev-list.c	FUNCTION_6	IF_1	CALL_1
0x7c0	          0x4889c7	                            mov rdi, rax	       194	rev-list.c	FUNCTION_6	IF_1	CALL_1
0x7c3	      0xe800000000	                          call 0x4000808	       194	rev-list.c	FUNCTION_6	IF_1	CALL_1
0x7c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	rev-list.c	FUNCTION_6	IF_1
0x7cc	    0x48c740300000	               mov qword [rax + 0x30], 0	       195	rev-list.c	FUNCTION_6	IF_1
0x7d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       197	rev-list.c	FUNCTION_6	CALL_2
0x7d8	          0x4889c7	                            mov rdi, rax	       197	rev-list.c	FUNCTION_6	CALL_2
0x7db	      0xe800000000	                          call 0x4000820	       197	rev-list.c	FUNCTION_6	CALL_2
0x7e0	              0x90	                                     nop	       198	rev-list.c	FUNCTION_6
0x7e1	              0xc9	                                   leave	       198	rev-list.c	FUNCTION_6
0x7e2	              0xc3	                                     ret	       198	rev-list.c	FUNCTION_6
print_var_int	WHILE,0:functions,0:IF,0:ELSE,0:DO,0:SWITCH,0:CALL,1:FOR,0	14
0xa21	              0x55	                                push rbp	       267	rev-list.c	FUNCTION_12
0xa22	          0x4889e5	                            mov rbp, rsp	       267	rev-list.c	FUNCTION_12
0xa25	        0x4883ec10	                           sub rsp, 0x10	       267	rev-list.c	FUNCTION_12
0xa29	        0x48897df8	                mov qword [rbp - 8], rdi	       267	rev-list.c	FUNCTION_12
0xa2d	          0x8975f4	              mov dword [rbp - 0xc], esi	       267	rev-list.c	FUNCTION_12
0xa30	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       268	rev-list.c	FUNCTION_12	CALL_1
0xa33	        0x488b45f8	                mov rax, qword [rbp - 8]	       268	rev-list.c	FUNCTION_12	CALL_1
0xa37	          0x4889c6	                            mov rsi, rax	       268	rev-list.c	FUNCTION_12	CALL_1
0xa3a	      0xbf00000000	                              mov edi, 0	       268	rev-list.c	FUNCTION_12	CALL_1
0xa3f	      0xb800000000	                              mov eax, 0	       268	rev-list.c	FUNCTION_12	CALL_1
0xa44	      0xe800000000	                          call 0x4000a89	       268	rev-list.c	FUNCTION_12	CALL_1
0xa49	              0x90	                                     nop	       269	rev-list.c	FUNCTION_12
0xa4a	              0xc9	                                   leave	       269	rev-list.c	FUNCTION_12
0xa4b	              0xc3	                                     ret	       269	rev-list.c	FUNCTION_12
show_edge	WHILE,0:functions,0:IF,0:ELSE,0:DO,0:SWITCH,0:CALL,2:FOR,0	15
0x9c3	              0x55	                                push rbp	       257	rev-list.c	FUNCTION_10
0x9c4	          0x4889e5	                            mov rbp, rsp	       257	rev-list.c	FUNCTION_10
0x9c7	        0x4883ec10	                           sub rsp, 0x10	       257	rev-list.c	FUNCTION_10
0x9cb	        0x48897df8	                mov qword [rbp - 8], rdi	       257	rev-list.c	FUNCTION_10
0x9cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	rev-list.c	FUNCTION_10	CALL_2
0x9d3	        0x4883c004	                              add rax, 4	       258	rev-list.c	FUNCTION_10	CALL_2
0x9d7	          0x4889c7	                            mov rdi, rax	       258	rev-list.c	FUNCTION_10	CALL_2
0x9da	      0xe800000000	                          call 0x4000a1f	       258	rev-list.c	FUNCTION_10	CALL_2
0x9df	          0x4889c6	                            mov rsi, rax	       258	rev-list.c	FUNCTION_10	CALL_2
0x9e2	      0xbf00000000	                              mov edi, 0	       258	rev-list.c	FUNCTION_10	CALL_2
0x9e7	      0xb800000000	                              mov eax, 0	       258	rev-list.c	FUNCTION_10	CALL_2
0x9ec	      0xe800000000	                          call 0x4000a31	       258	rev-list.c	FUNCTION_10	CALL_2
0x9f1	              0x90	                                     nop	       259	rev-list.c	FUNCTION_10
0x9f2	              0xc9	                                   leave	       259	rev-list.c	FUNCTION_10
0x9f3	              0xc3	                                     ret	       259	rev-list.c	FUNCTION_10
finish_object	WHILE,0:functions,0:IF,2:ELSE,0:DO,0:SWITCH,0:CALL,3:FOR,0	47
0x89d	              0x55	                                push rbp	       234	rev-list.c	FUNCTION_8
0x89e	          0x4889e5	                            mov rbp, rsp	       234	rev-list.c	FUNCTION_8
0x8a1	        0x4883ec30	                           sub rsp, 0x30	       234	rev-list.c	FUNCTION_8
0x8a5	        0x48897de8	             mov qword [rbp - 0x18], rdi	       234	rev-list.c	FUNCTION_8
0x8a9	        0x488975e0	             mov qword [rbp - 0x20], rsi	       234	rev-list.c	FUNCTION_8
0x8ad	        0x488955d8	             mov qword [rbp - 0x28], rdx	       234	rev-list.c	FUNCTION_8
0x8b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       235	rev-list.c	FUNCTION_8
0x8b5	        0x488945f8	                mov qword [rbp - 8], rax	       235	rev-list.c	FUNCTION_8
0x8b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8bd	           0xfb600	                   movzx eax, byte [rax]	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8c0	          0x83e00e	                            and eax, 0xe	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8c3	            0x3c06	                               cmp al, 6	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8c5	            0x7527	                           jne 0x400092e	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8cb	        0x4883c004	                              add rax, 4	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8cf	          0x4889c7	                            mov rdi, rax	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8d2	      0xe800000000	                          call 0x4000917	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8d7	            0x85c0	                           test eax, eax	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8d9	            0x7513	                           jne 0x400092e	       236	rev-list.c	FUNCTION_8	IF_1	CALL_1
0x8db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       237	rev-list.c	FUNCTION_8	IF_1	CALL_2
0x8df	          0x4889c7	                            mov rdi, rax	       237	rev-list.c	FUNCTION_8	IF_1	CALL_2
0x8e2	      0xe8fcfeffff	              call sym.finish_object__ma	       237	rev-list.c	FUNCTION_8	IF_1	CALL_2
0x8e7	      0xb801000000	                              mov eax, 1	       238	rev-list.c	FUNCTION_8	IF_1
0x8ec	            0xeb43	                           jmp 0x4000971	       238	rev-list.c	FUNCTION_8	IF_1
0x8ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       240	rev-list.c	FUNCTION_8	IF_2
0x8f2	          0x488b00	                    mov rax, qword [rax]	       240	rev-list.c	FUNCTION_8	IF_2
0x8f5	         0xfb64075	           movzx eax, byte [rax + 0x75] 	       240	rev-list.c	FUNCTION_8	IF_2
0x8f9	          0x83e080	                     and eax, 0xffffff80	       240	rev-list.c	FUNCTION_8	IF_2
0x8fc	            0x84c0	                             test al, al	       240	rev-list.c	FUNCTION_8	IF_2
0x8fe	            0x742c	                            je 0x400096c	       240	rev-list.c	FUNCTION_8	IF_2
0x900	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       240	rev-list.c	FUNCTION_8	IF_2
0x904	           0xfb600	                   movzx eax, byte [rax]	       240	rev-list.c	FUNCTION_8	IF_2
0x907	          0x83e001	                              and eax, 1	       240	rev-list.c	FUNCTION_8	IF_2
0x90a	            0x84c0	                             test al, al	       240	rev-list.c	FUNCTION_8	IF_2
0x90c	            0x751e	                           jne 0x400096c	       240	rev-list.c	FUNCTION_8	IF_2
0x90e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       240	rev-list.c	FUNCTION_8	IF_2
0x912	           0xfb600	                   movzx eax, byte [rax]	       240	rev-list.c	FUNCTION_8	IF_2
0x915	          0x83e00e	                            and eax, 0xe	       240	rev-list.c	FUNCTION_8	IF_2
0x918	            0x3c02	                               cmp al, 2	       240	rev-list.c	FUNCTION_8	IF_2
0x91a	            0x7410	                            je 0x400096c	       240	rev-list.c	FUNCTION_8	IF_2
0x91c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       241	rev-list.c	FUNCTION_8	CALL_3
0x920	        0x4883c004	                              add rax, 4	       241	rev-list.c	FUNCTION_8	CALL_3
0x924	          0x4889c7	                            mov rdi, rax	       241	rev-list.c	FUNCTION_8	CALL_3
0x927	      0xe800000000	                          call 0x400096c	       241	rev-list.c	FUNCTION_8	CALL_3
0x92c	      0xb800000000	                              mov eax, 0	       242	rev-list.c	FUNCTION_8
0x931	              0xc9	                                   leave	       243	rev-list.c	FUNCTION_8
0x932	              0xc3	                                     ret	       243	rev-list.c	FUNCTION_8
oidmap_iter_next	WHILE,0:functions,0:IF,0:ELSE,0:DO,0:SWITCH,0:CALL,1:FOR,0	9
0xa8	              0x55	                                push rbp	        79	oidmap.h	FUNCTION_49
0xa9	          0x4889e5	                            mov rbp, rsp	        79	oidmap.h	FUNCTION_49
0xac	        0x4883ec10	                           sub rsp, 0x10	        79	oidmap.h	FUNCTION_49
0xb0	        0x48897df8	                mov qword [rbp - 8], rdi	        79	oidmap.h	FUNCTION_49
0xb4	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	oidmap.h	FUNCTION_49	CALL_1
0xb8	          0x4889c7	                            mov rdi, rax	        80	oidmap.h	FUNCTION_49	CALL_1
0xbb	      0xe800000000	                          call 0x4000100	        80	oidmap.h	FUNCTION_49	CALL_1
0xc0	              0xc9	                                   leave	        81	oidmap.h	FUNCTION_49
0xc1	              0xc3	                                     ret	        81	oidmap.h	FUNCTION_49
show_object	WHILE,0:functions,0:IF,2:ELSE,0:DO,0:SWITCH,0:CALL,3:FOR,0	42
0x933	              0x55	                                push rbp	       246	rev-list.c	FUNCTION_9
0x934	          0x4889e5	                            mov rbp, rsp	       246	rev-list.c	FUNCTION_9
0x937	        0x4883ec30	                           sub rsp, 0x30	       246	rev-list.c	FUNCTION_9
0x93b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       246	rev-list.c	FUNCTION_9
0x93f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       246	rev-list.c	FUNCTION_9
0x943	        0x488955d8	             mov qword [rbp - 0x28], rdx	       246	rev-list.c	FUNCTION_9
0x947	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	rev-list.c	FUNCTION_9
0x94b	        0x488945f8	                mov qword [rbp - 8], rax	       247	rev-list.c	FUNCTION_9
0x94f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       248	rev-list.c	FUNCTION_9	IF_1	CALL_1
0x953	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       248	rev-list.c	FUNCTION_9	IF_1	CALL_1
0x957	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       248	rev-list.c	FUNCTION_9	IF_1	CALL_1
0x95b	          0x4889ce	                            mov rsi, rcx	       248	rev-list.c	FUNCTION_9	IF_1	CALL_1
0x95e	          0x4889c7	                            mov rdi, rax	       248	rev-list.c	FUNCTION_9	IF_1	CALL_1
0x961	      0xe837ffffff	                  call sym.finish_object	       248	rev-list.c	FUNCTION_9	IF_1	CALL_1
0x966	            0x85c0	                           test eax, eax	       248	rev-list.c	FUNCTION_9	IF_1	CALL_1
0x968	            0x7553	                           jne 0x40009fd	       248	rev-list.c	FUNCTION_9	IF_1	CALL_1
0x96a	    0x8b0500000000	            mov eax, dword [0x040009b0] 	       250	rev-list.c	FUNCTION_9	CALL_2
0x970	          0x83c001	                              add eax, 1	       250	rev-list.c	FUNCTION_9	CALL_2
0x973	    0x890500000000	            mov dword [0x040009b9], eax 	       250	rev-list.c	FUNCTION_9	CALL_2
0x979	    0x8b0500000000	            mov eax, dword [0x040009bf] 	       250	rev-list.c	FUNCTION_9	CALL_2
0x97f	            0x89c2	                            mov edx, eax	       250	rev-list.c	FUNCTION_9	CALL_2
0x981	    0x488b05000000	            mov rax, qword [0x040009c8] 	       250	rev-list.c	FUNCTION_9	CALL_2
0x988	          0x4889d6	                            mov rsi, rdx	       250	rev-list.c	FUNCTION_9	CALL_2
0x98b	          0x4889c7	                            mov rdi, rax	       250	rev-list.c	FUNCTION_9	CALL_2
0x98e	      0xe800000000	                          call 0x40009d3	       250	rev-list.c	FUNCTION_9	CALL_2
0x993	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	rev-list.c	FUNCTION_9	IF_2
0x997	          0x8b4008	                mov eax, dword [rax + 8]	       251	rev-list.c	FUNCTION_9	IF_2
0x99a	          0x83e002	                              and eax, 2	       251	rev-list.c	FUNCTION_9	IF_2
0x99d	            0x85c0	                           test eax, eax	       251	rev-list.c	FUNCTION_9	IF_2
0x99f	            0x751f	                           jne 0x4000a00	       251	rev-list.c	FUNCTION_9	IF_2
0x9a1	    0x488b05000000	            mov rax, qword [0x040009e8] 	       253	rev-list.c	FUNCTION_9	CALL_3
0x9a8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       253	rev-list.c	FUNCTION_9	CALL_3
0x9ac	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       253	rev-list.c	FUNCTION_9	CALL_3
0x9b0	          0x4889ce	                            mov rsi, rcx	       253	rev-list.c	FUNCTION_9	CALL_3
0x9b3	          0x4889c7	                            mov rdi, rax	       253	rev-list.c	FUNCTION_9	CALL_3
0x9b6	      0xe800000000	                          call 0x40009fb	       253	rev-list.c	FUNCTION_9	CALL_3
0x9bb	            0xeb04	                           jmp 0x4000a01	       253	rev-list.c	FUNCTION_9	CALL_3
0x9bd	              0x90	                                     nop	       249	rev-list.c	FUNCTION_9	IF_1
0x9be	            0xeb01	                           jmp 0x4000a01	       249	rev-list.c	FUNCTION_9	IF_1
0x9c0	              0x90	                                     nop	       252	rev-list.c	FUNCTION_9	IF_2
0x9c1	              0xc9	                                   leave	       254	rev-list.c	FUNCTION_9
0x9c2	              0xc3	                                     ret	       254	rev-list.c	FUNCTION_9
list_objects_filter_set_no_filter	WHILE,0:functions,0:IF,0:ELSE,0:DO,0:SWITCH,0:CALL,1:FOR,0	14
0x142	              0x55	                                push rbp	        68	list-objects-filter-options.h	FUNCTION_51
0x143	          0x4889e5	                            mov rbp, rsp	        68	list-objects-filter-options.h	FUNCTION_51
0x146	        0x4883ec10	                           sub rsp, 0x10	        68	list-objects-filter-options.h	FUNCTION_51
0x14a	        0x48897df8	                mov qword [rbp - 8], rdi	        68	list-objects-filter-options.h	FUNCTION_51
0x14e	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	list-objects-filter-options.h	FUNCTION_51	CALL_1
0x152	          0x4889c7	                            mov rdi, rax	        69	list-objects-filter-options.h	FUNCTION_51	CALL_1
0x155	      0xe800000000	                          call 0x400019a	        69	list-objects-filter-options.h	FUNCTION_51	CALL_1
0x15a	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	list-objects-filter-options.h	FUNCTION_51
0x15e	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	        70	list-objects-filter-options.h	FUNCTION_51
0x162	          0x83ca01	                               or edx, 1	        70	list-objects-filter-options.h	FUNCTION_51
0x165	          0x88500c	                mov byte [rax + 0xc], dl	        70	list-objects-filter-options.h	FUNCTION_51
0x168	              0x90	                                     nop	        71	list-objects-filter-options.h	FUNCTION_51
0x169	              0xc9	                                   leave	        71	list-objects-filter-options.h	FUNCTION_51
0x16a	              0xc3	                                     ret	        71	list-objects-filter-options.h	FUNCTION_51
cmd_rev_list	WHILE,2:functions,0:IF,48:ELSE,6:DO,0:SWITCH,0:CALL,67:FOR,3	622
0xd07	              0x55	                                push rbp	       357	rev-list.c	FUNCTION_16
0xd08	          0x4889e5	                            mov rbp, rsp	       357	rev-list.c	FUNCTION_16
0xd0b	              0x53	                                push rbx	       357	rev-list.c	FUNCTION_16
0xd0c	    0x4881ec680900	                          sub rsp, 0x968	       357	rev-list.c	FUNCTION_16
0xd13	    0x89bdacf6ffff	            mov dword [rbp - 0x954], edi	       357	rev-list.c	FUNCTION_16
0xd19	    0x4889b5a0f6ff	            mov qword [rbp - 0x960], rsi	       357	rev-list.c	FUNCTION_16
0xd20	    0x48899598f6ff	            mov qword [rbp - 0x968], rdx	       357	rev-list.c	FUNCTION_16
0xd27	    0x64488b042528	                mov rax, qword fs:[0x28]	       357	rev-list.c	FUNCTION_16
0xd30	        0x488945e8	             mov qword [rbp - 0x18], rax	       357	rev-list.c	FUNCTION_16
0xd34	            0x31c0	                            xor eax, eax	       357	rev-list.c	FUNCTION_16
0xd36	    0xc785bcf6ffff	              mov dword [rbp - 0x944], 0	       361	rev-list.c	FUNCTION_16
0xd40	    0xc785c0f6ffff	              mov dword [rbp - 0x940], 0	       362	rev-list.c	FUNCTION_16
0xd4a	    0xc785c4f6ffff	              mov dword [rbp - 0x93c], 0	       363	rev-list.c	FUNCTION_16
0xd54	    0xc785c8f6ffff	              mov dword [rbp - 0x938], 0	       364	rev-list.c	FUNCTION_16
0xd5e	    0x48c785d0f6ff	              mov qword [rbp - 0x930], 0	       365	rev-list.c	FUNCTION_16
0xd69	    0x83bdacf6ffff	              cmp dword [rbp - 0x954], 2	       367	rev-list.c	FUNCTION_16	IF_1	CALL_1
0xd70	            0x7529	                           jne 0x4000ddb	       367	rev-list.c	FUNCTION_16	IF_1	CALL_1
0xd72	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       367	rev-list.c	FUNCTION_16	IF_1	CALL_1
0xd79	        0x4883c008	                              add rax, 8	       367	rev-list.c	FUNCTION_16	IF_1	CALL_1
0xd7d	          0x488b00	                    mov rax, qword [rax]	       367	rev-list.c	FUNCTION_16	IF_1	CALL_1
0xd80	      0xbe00000000	                              mov esi, 0	       367	rev-list.c	FUNCTION_16	IF_1	CALL_1
0xd85	          0x4889c7	                            mov rdi, rax	       367	rev-list.c	FUNCTION_16	IF_1	CALL_1
0xd88	      0xe800000000	                          call 0x4000dcd	       367	rev-list.c	FUNCTION_16	IF_1	CALL_1
0xd8d	            0x85c0	                           test eax, eax	       367	rev-list.c	FUNCTION_16	IF_1	CALL_1
0xd8f	            0x750a	                           jne 0x4000ddb	       367	rev-list.c	FUNCTION_16	IF_1	CALL_1
0xd91	      0xbf00000000	                              mov edi, 0	       368	rev-list.c	FUNCTION_16	CALL_2
0xd96	      0xe800000000	                          call 0x4000ddb	       368	rev-list.c	FUNCTION_16	CALL_2
0xd9b	      0xbe00000000	                              mov esi, 0	       370	rev-list.c	FUNCTION_16	CALL_3
0xda0	      0xbf00000000	                              mov edi, 0	       370	rev-list.c	FUNCTION_16	CALL_3
0xda5	      0xe800000000	                          call 0x4000dea	       370	rev-list.c	FUNCTION_16	CALL_3
0xdaa	    0x488b9598f6ff	            mov rdx, qword [rbp - 0x968]	       371	rev-list.c	FUNCTION_16	CALL_4
0xdb1	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       371	rev-list.c	FUNCTION_16	CALL_4
0xdb8	          0x4889d6	                            mov rsi, rdx	       371	rev-list.c	FUNCTION_16	CALL_4
0xdbb	          0x4889c7	                            mov rdi, rax	       371	rev-list.c	FUNCTION_16	CALL_4
0xdbe	      0xe800000000	                          call 0x4000e03	       371	rev-list.c	FUNCTION_16	CALL_4
0xdc3	    0x8b0500000000	            mov eax, dword [0x04000e09] 	       372	rev-list.c	FUNCTION_16
0xdc9	    0x8985d0f7ffff	            mov dword [rbp - 0x830], eax	       372	rev-list.c	FUNCTION_16
0xdcf	    0xc785d4f7ffff	              mov dword [rbp - 0x82c], 9	       373	rev-list.c	FUNCTION_16
0xdd9	    0xc785b8f6ffff	              mov dword [rbp - 0x948], 1	       385	rev-list.c	FUNCTION_16	FOR_1
0xde3	            0xeb5f	                           jmp 0x4000e84	       385	rev-list.c	FUNCTION_16	FOR_1
0xde5	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       386	rev-list.c	FUNCTION_16	FOR_1
0xdeb	            0x4898	                                    cdqe	       386	rev-list.c	FUNCTION_16	FOR_1
0xded	    0x488d14c50000	                        lea rdx, [rax*8]	       386	rev-list.c	FUNCTION_16	FOR_1
0xdf5	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       386	rev-list.c	FUNCTION_16	FOR_1
0xdfc	          0x4801d0	                            add rax, rdx	       386	rev-list.c	FUNCTION_16	FOR_1
0xdff	          0x488b00	                    mov rax, qword [rax]	       386	rev-list.c	FUNCTION_16	FOR_1
0xe02	    0x488985d8f6ff	            mov qword [rbp - 0x928], rax	       386	rev-list.c	FUNCTION_16	FOR_1
0xe09	    0x488b85d8f6ff	            mov rax, qword [rbp - 0x928]	       387	rev-list.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0xe10	      0xbe00000000	                              mov esi, 0	       387	rev-list.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0xe15	          0x4889c7	                            mov rdi, rax	       387	rev-list.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0xe18	      0xe800000000	                          call 0x4000e5d	       387	rev-list.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0xe1d	            0x85c0	                           test eax, eax	       387	rev-list.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0xe1f	            0x751c	                           jne 0x4000e7d	       387	rev-list.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0xe21	    0xc70500000000	               mov dword [0x04000e6b], 0	       388	rev-list.c	FUNCTION_16	FOR_1	IF_2
0xe2b	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       389	rev-list.c	FUNCTION_16	FOR_1	IF_2
0xe32	          0x83c880	                      or eax, 0xffffff80	       389	rev-list.c	FUNCTION_16	FOR_1	IF_2
0xe35	    0x8885a8f7ffff	              mov byte [rbp - 0x858], al	       389	rev-list.c	FUNCTION_16	FOR_1	IF_2
0xe3b	            0xeb15	                           jmp 0x4000e92	       390	rev-list.c	FUNCTION_16	FOR_1	IF_2
0xe3d	    0x8385b8f6ffff	              add dword [rbp - 0x948], 1	       385	rev-list.c	FUNCTION_16	FOR_1
0xe44	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       385	rev-list.c	FUNCTION_16	FOR_1
0xe4a	    0x3b85acf6ffff	            cmp eax, dword [rbp - 0x954]	       385	rev-list.c	FUNCTION_16	FOR_1
0xe50	            0x7c93	                            jl 0x4000e25	       385	rev-list.c	FUNCTION_16	FOR_1
0xe52	    0xc785b8f6ffff	              mov dword [rbp - 0x948], 1	       393	rev-list.c	FUNCTION_16	FOR_2
0xe5c	      0xe982000000	                           jmp 0x4000f23	       393	rev-list.c	FUNCTION_16	FOR_2
0xe61	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       394	rev-list.c	FUNCTION_16	FOR_2
0xe67	            0x4898	                                    cdqe	       394	rev-list.c	FUNCTION_16	FOR_2
0xe69	    0x488d14c50000	                        lea rdx, [rax*8]	       394	rev-list.c	FUNCTION_16	FOR_2
0xe71	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       394	rev-list.c	FUNCTION_16	FOR_2
0xe78	          0x4801d0	                            add rax, rdx	       394	rev-list.c	FUNCTION_16	FOR_2
0xe7b	          0x488b00	                    mov rax, qword [rax]	       394	rev-list.c	FUNCTION_16	FOR_2
0xe7e	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	       394	rev-list.c	FUNCTION_16	FOR_2
0xe85	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       395	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_6
0xe8c	    0x488d9510f7ff	                  lea rdx, [rbp - 0x8f0]	       395	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_6
0xe93	      0xbe00000000	                              mov esi, 0	       395	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_6
0xe98	          0x4889c7	                            mov rdi, rax	       395	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_6
0xe9b	      0xe860f1ffff	                    call sym.skip_prefix	       395	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_6
0xea0	            0x85c0	                           test eax, eax	       395	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_6
0xea2	            0x7438	                            je 0x4000f1c	       395	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_6
0xea4	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       396	rev-list.c	FUNCTION_16	FOR_2	IF_3	IF_4
0xeab	          0x83e080	                     and eax, 0xffffff80	       396	rev-list.c	FUNCTION_16	FOR_2	IF_3	IF_4
0xeae	            0x84c0	                             test al, al	       396	rev-list.c	FUNCTION_16	FOR_2	IF_3	IF_4
0xeb0	            0x7417	                            je 0x4000f09	       396	rev-list.c	FUNCTION_16	FOR_2	IF_3	IF_4
0xeb2	      0xbf00000000	                              mov edi, 0	       397	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_8
0xeb7	      0xe89af1ffff	                               call sym.	       397	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_8
0xebc	          0x4889c7	                            mov rdi, rax	       397	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_8
0xebf	      0xb800000000	                              mov eax, 0	       397	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_8
0xec4	      0xe800000000	                          call 0x4000f09	       397	rev-list.c	FUNCTION_16	FOR_2	IF_3	CALL_8
0xec9	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       398	rev-list.c	FUNCTION_16	FOR_2	IF_3	IF_5	CALL_9
0xed0	          0x4889c7	                            mov rdi, rax	       398	rev-list.c	FUNCTION_16	FOR_2	IF_3	IF_5	CALL_9
0xed3	      0xe863fdffff	     call sym.parse_missing_action_value	       398	rev-list.c	FUNCTION_16	FOR_2	IF_3	IF_5	CALL_9
0xed8	            0x85c0	                           test eax, eax	       398	rev-list.c	FUNCTION_16	FOR_2	IF_3	IF_5	CALL_9
0xeda	            0x751b	                           jne 0x4000f37	       398	rev-list.c	FUNCTION_16	FOR_2	IF_3	IF_5	CALL_9
0xedc	    0x8385b8f6ffff	              add dword [rbp - 0x948], 1	       393	rev-list.c	FUNCTION_16	FOR_2
0xee3	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       393	rev-list.c	FUNCTION_16	FOR_2
0xee9	    0x3b85acf6ffff	            cmp eax, dword [rbp - 0x954]	       393	rev-list.c	FUNCTION_16	FOR_2
0xeef	     0xf8c6cffffff	                            jl 0x4000ea1	       393	rev-list.c	FUNCTION_16	FOR_2
0xef5	            0xeb01	                           jmp 0x4000f38	       393	rev-list.c	FUNCTION_16	FOR_2
0xef7	              0x90	                                     nop	       399	rev-list.c	FUNCTION_16	FOR_2	IF_3	IF_5
0xef8	    0x488d9530f7ff	                  lea rdx, [rbp - 0x8d0]	       403	rev-list.c	FUNCTION_16	CALL_10
0xeff	    0x488bb5a0f6ff	            mov rsi, qword [rbp - 0x960]	       403	rev-list.c	FUNCTION_16	CALL_10
0xf06	    0x8b85acf6ffff	            mov eax, dword [rbp - 0x954]	       403	rev-list.c	FUNCTION_16	CALL_10
0xf0c	      0xb900000000	                              mov ecx, 0	       403	rev-list.c	FUNCTION_16	CALL_10
0xf11	            0x89c7	                            mov edi, eax	       403	rev-list.c	FUNCTION_16	CALL_10
0xf13	      0xe800000000	                          call 0x4000f58	       403	rev-list.c	FUNCTION_16	CALL_10
0xf18	    0x8985acf6ffff	            mov dword [rbp - 0x954], eax	       403	rev-list.c	FUNCTION_16	CALL_10
0xf1e	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	       405	rev-list.c	FUNCTION_16	CALL_11
0xf25	      0xba20000000	                           mov edx, 0x20	       405	rev-list.c	FUNCTION_16	CALL_11
0xf2a	      0xbe00000000	                              mov esi, 0	       405	rev-list.c	FUNCTION_16	CALL_11
0xf2f	          0x4889c7	                            mov rdi, rax	       405	rev-list.c	FUNCTION_16	CALL_11
0xf32	      0xe800000000	                          call 0x4000f77	       405	rev-list.c	FUNCTION_16	CALL_11
0xf37	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       406	rev-list.c	FUNCTION_16
0xf3e	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	       406	rev-list.c	FUNCTION_16
0xf45	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       407	rev-list.c	FUNCTION_16	IF_6
0xf4c	          0x83e004	                              and eax, 4	       407	rev-list.c	FUNCTION_16	IF_6
0xf4f	            0x84c0	                             test al, al	       407	rev-list.c	FUNCTION_16	IF_6
0xf51	            0x740a	                            je 0x4000f9d	       407	rev-list.c	FUNCTION_16	IF_6
0xf53	    0xc785bcf6ffff	              mov dword [rbp - 0x944], 1	       408	rev-list.c	FUNCTION_16	IF_6
0xf5d	     0xfb68561fcff	           movzx eax, byte [rbp - 0x39f]	       410	rev-list.c	FUNCTION_16	IF_7
0xf64	          0x83e004	                              and eax, 4	       410	rev-list.c	FUNCTION_16	IF_7
0xf67	            0x84c0	                             test al, al	       410	rev-list.c	FUNCTION_16	IF_7
0xf69	            0x740f	                            je 0x4000fba	       410	rev-list.c	FUNCTION_16	IF_7
0xf6b	    0x8b8518f7ffff	            mov eax, dword [rbp - 0x8e8]	       411	rev-list.c	FUNCTION_16	IF_7
0xf71	          0x83c802	                               or eax, 2	       411	rev-list.c	FUNCTION_16	IF_7
0xf74	    0x898518f7ffff	            mov dword [rbp - 0x8e8], eax	       411	rev-list.c	FUNCTION_16	IF_7
0xf7a	    0xc785b8f6ffff	              mov dword [rbp - 0x948], 1	       412	rev-list.c	FUNCTION_16	FOR_3
0xf84	      0xe9e7020000	                           jmp 0x40012b0	       412	rev-list.c	FUNCTION_16	FOR_3
0xf89	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       413	rev-list.c	FUNCTION_16	FOR_3
0xf8f	            0x4898	                                    cdqe	       413	rev-list.c	FUNCTION_16	FOR_3
0xf91	    0x488d14c50000	                        lea rdx, [rax*8]	       413	rev-list.c	FUNCTION_16	FOR_3
0xf99	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       413	rev-list.c	FUNCTION_16	FOR_3
0xfa0	          0x4801d0	                            add rax, rdx	       413	rev-list.c	FUNCTION_16	FOR_3
0xfa3	          0x488b00	                    mov rax, qword [rax]	       413	rev-list.c	FUNCTION_16	FOR_3
0xfa6	    0x488985f0f6ff	            mov qword [rbp - 0x910], rax	       413	rev-list.c	FUNCTION_16	FOR_3
0xfad	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       415	rev-list.c	FUNCTION_16	FOR_3	IF_8	CALL_12
0xfb4	      0xbe00000000	                              mov esi, 0	       415	rev-list.c	FUNCTION_16	FOR_3	IF_8	CALL_12
0xfb9	          0x4889c7	                            mov rdi, rax	       415	rev-list.c	FUNCTION_16	FOR_3	IF_8	CALL_12
0xfbc	      0xe800000000	                          call 0x4001001	       415	rev-list.c	FUNCTION_16	FOR_3	IF_8	CALL_12
0xfc1	            0x85c0	                           test eax, eax	       415	rev-list.c	FUNCTION_16	FOR_3	IF_8	CALL_12
0xfc3	            0x7515	                           jne 0x400101a	       415	rev-list.c	FUNCTION_16	FOR_3	IF_8	CALL_12
0xfc5	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	       416	rev-list.c	FUNCTION_16	FOR_3	IF_8
0xfcc	          0x83c810	                            or eax, 0x10	       416	rev-list.c	FUNCTION_16	FOR_3	IF_8
0xfcf	    0x8885a9f7ffff	              mov byte [rbp - 0x857], al	       416	rev-list.c	FUNCTION_16	FOR_3	IF_8
0xfd5	      0xe98f020000	                           jmp 0x40012a9	       417	rev-list.c	FUNCTION_16	FOR_3	IF_8
0xfda	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       419	rev-list.c	FUNCTION_16	FOR_3	IF_9	CALL_13
0xfe1	      0xbe00000000	                              mov esi, 0	       419	rev-list.c	FUNCTION_16	FOR_3	IF_9	CALL_13
0xfe6	          0x4889c7	                            mov rdi, rax	       419	rev-list.c	FUNCTION_16	FOR_3	IF_9	CALL_13
0xfe9	      0xe800000000	                          call 0x400102e	       419	rev-list.c	FUNCTION_16	FOR_3	IF_9	CALL_13
0xfee	            0x85c0	                           test eax, eax	       419	rev-list.c	FUNCTION_16	FOR_3	IF_9	CALL_13
0xff0	            0x750f	                           jne 0x4001041	       419	rev-list.c	FUNCTION_16	FOR_3	IF_9	CALL_13
0xff2	    0xc7851cf7ffff	              mov dword [rbp - 0x8e4], 1	       420	rev-list.c	FUNCTION_16	FOR_3	IF_9
0xffc	      0xe968020000	                           jmp 0x40012a9	       421	rev-list.c	FUNCTION_16	FOR_3	IF_9
0x1001	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       423	rev-list.c	FUNCTION_16	FOR_3	IF_10	CALL_14
0x1008	      0xbe00000000	                              mov esi, 0	       423	rev-list.c	FUNCTION_16	FOR_3	IF_10	CALL_14
0x100d	          0x4889c7	                            mov rdi, rax	       423	rev-list.c	FUNCTION_16	FOR_3	IF_10	CALL_14
0x1010	      0xe800000000	                          call 0x4001055	       423	rev-list.c	FUNCTION_16	FOR_3	IF_10	CALL_14
0x1015	            0x85c0	                           test eax, eax	       423	rev-list.c	FUNCTION_16	FOR_3	IF_10	CALL_14
0x1017	            0x750f	                           jne 0x4001068	       423	rev-list.c	FUNCTION_16	FOR_3	IF_10	CALL_14
0x1019	    0xc785bcf6ffff	              mov dword [rbp - 0x944], 1	       424	rev-list.c	FUNCTION_16	FOR_3	IF_10
0x1023	      0xe941020000	                           jmp 0x40012a9	       425	rev-list.c	FUNCTION_16	FOR_3	IF_10
0x1028	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       427	rev-list.c	FUNCTION_16	FOR_3	IF_11	CALL_15
0x102f	      0xbe00000000	                              mov esi, 0	       427	rev-list.c	FUNCTION_16	FOR_3	IF_11	CALL_15
0x1034	          0x4889c7	                            mov rdi, rax	       427	rev-list.c	FUNCTION_16	FOR_3	IF_11	CALL_15
0x1037	      0xe800000000	                          call 0x400107c	       427	rev-list.c	FUNCTION_16	FOR_3	IF_11	CALL_15
0x103c	            0x85c0	                           test eax, eax	       427	rev-list.c	FUNCTION_16	FOR_3	IF_11	CALL_15
0x103e	            0x7538	                           jne 0x40010b8	       427	rev-list.c	FUNCTION_16	FOR_3	IF_11	CALL_15
0x1040	    0xc785bcf6ffff	              mov dword [rbp - 0x944], 1	       428	rev-list.c	FUNCTION_16	FOR_3	IF_11
0x104a	    0xc785c4f6ffff	              mov dword [rbp - 0x93c], 1	       429	rev-list.c	FUNCTION_16	FOR_3	IF_11
0x1054	    0x8b8518f7ffff	            mov eax, dword [rbp - 0x8e8]	       430	rev-list.c	FUNCTION_16	FOR_3	IF_11
0x105a	          0x83c801	                               or eax, 1	       430	rev-list.c	FUNCTION_16	FOR_3	IF_11
0x105d	    0x898518f7ffff	            mov dword [rbp - 0x8e8], eax	       430	rev-list.c	FUNCTION_16	FOR_3	IF_11
0x1063	     0xfb685a7f7ff	           movzx eax, byte [rbp - 0x859]	       431	rev-list.c	FUNCTION_16	FOR_3	IF_11
0x106a	          0x83c820	                            or eax, 0x20	       431	rev-list.c	FUNCTION_16	FOR_3	IF_11
0x106d	    0x8885a7f7ffff	              mov byte [rbp - 0x859], al	       431	rev-list.c	FUNCTION_16	FOR_3	IF_11
0x1073	      0xe9f1010000	                           jmp 0x40012a9	       432	rev-list.c	FUNCTION_16	FOR_3	IF_11
0x1078	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       434	rev-list.c	FUNCTION_16	FOR_3	IF_12	CALL_16
0x107f	      0xbe00000000	                              mov esi, 0	       434	rev-list.c	FUNCTION_16	FOR_3	IF_12	CALL_16
0x1084	          0x4889c7	                            mov rdi, rax	       434	rev-list.c	FUNCTION_16	FOR_3	IF_12	CALL_16
0x1087	      0xe800000000	                          call 0x40010cc	       434	rev-list.c	FUNCTION_16	FOR_3	IF_12	CALL_16
0x108c	            0x85c0	                           test eax, eax	       434	rev-list.c	FUNCTION_16	FOR_3	IF_12	CALL_16
0x108e	            0x7519	                           jne 0x40010e9	       434	rev-list.c	FUNCTION_16	FOR_3	IF_12	CALL_16
0x1090	    0xc785bcf6ffff	              mov dword [rbp - 0x944], 1	       435	rev-list.c	FUNCTION_16	FOR_3	IF_12
0x109a	    0xc785c0f6ffff	              mov dword [rbp - 0x940], 1	       436	rev-list.c	FUNCTION_16	FOR_3	IF_12
0x10a4	      0xe9c0010000	                           jmp 0x40012a9	       437	rev-list.c	FUNCTION_16	FOR_3	IF_12
0x10a9	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       439	rev-list.c	FUNCTION_16	FOR_3	IF_13	CALL_17
0x10b0	      0xbe00000000	                              mov esi, 0	       439	rev-list.c	FUNCTION_16	FOR_3	IF_13	CALL_17
0x10b5	          0x4889c7	                            mov rdi, rax	       439	rev-list.c	FUNCTION_16	FOR_3	IF_13	CALL_17
0x10b8	      0xe800000000	                          call 0x40010fd	       439	rev-list.c	FUNCTION_16	FOR_3	IF_13	CALL_17
0x10bd	            0x85c0	                           test eax, eax	       439	rev-list.c	FUNCTION_16	FOR_3	IF_13	CALL_17
0x10bf	            0x750f	                           jne 0x4001110	       439	rev-list.c	FUNCTION_16	FOR_3	IF_13	CALL_17
0x10c1	    0xc785c8f6ffff	              mov dword [rbp - 0x938], 1	       440	rev-list.c	FUNCTION_16	FOR_3	IF_13
0x10cb	      0xe999010000	                           jmp 0x40012a9	       441	rev-list.c	FUNCTION_16	FOR_3	IF_13
0x10d0	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       443	rev-list.c	FUNCTION_16	FOR_3	IF_14	CALL_18
0x10d7	      0xbe00000000	                              mov esi, 0	       443	rev-list.c	FUNCTION_16	FOR_3	IF_14	CALL_18
0x10dc	          0x4889c7	                            mov rdi, rax	       443	rev-list.c	FUNCTION_16	FOR_3	IF_14	CALL_18
0x10df	      0xe800000000	                          call 0x4001124	       443	rev-list.c	FUNCTION_16	FOR_3	IF_14	CALL_18
0x10e4	            0x85c0	                           test eax, eax	       443	rev-list.c	FUNCTION_16	FOR_3	IF_14	CALL_18
0x10e6	            0x7519	                           jne 0x4001141	       443	rev-list.c	FUNCTION_16	FOR_3	IF_14	CALL_18
0x10e8	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       444	rev-list.c	FUNCTION_16	FOR_3	IF_14	CALL_19
0x10ef	          0x4889c7	                            mov rdi, rax	       444	rev-list.c	FUNCTION_16	FOR_3	IF_14	CALL_19
0x10f2	      0xe800000000	                          call 0x4001137	       444	rev-list.c	FUNCTION_16	FOR_3	IF_14	CALL_19
0x10f7	      0xb800000000	                              mov eax, 0	       445	rev-list.c	FUNCTION_16	FOR_3	IF_14
0x10fc	      0xe9f2060000	                           jmp 0x4001833	       445	rev-list.c	FUNCTION_16	FOR_3	IF_14
0x1101	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       447	rev-list.c	FUNCTION_16	FOR_3	IF_15	CALL_20
0x1108	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	       447	rev-list.c	FUNCTION_16	FOR_3	IF_15	CALL_20
0x110f	      0xbe00000000	                              mov esi, 0	       447	rev-list.c	FUNCTION_16	FOR_3	IF_15	CALL_20
0x1114	          0x4889c7	                            mov rdi, rax	       447	rev-list.c	FUNCTION_16	FOR_3	IF_15	CALL_20
0x1117	      0xe8e4eeffff	                    call sym.skip_prefix	       447	rev-list.c	FUNCTION_16	FOR_3	IF_15	CALL_20
0x111c	            0x85c0	                           test eax, eax	       447	rev-list.c	FUNCTION_16	FOR_3	IF_15	CALL_20
0x111e	            0x7413	                            je 0x4001173	       447	rev-list.c	FUNCTION_16	FOR_3	IF_15	CALL_20
0x1120	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       448	rev-list.c	FUNCTION_16	FOR_3	IF_15
0x1127	    0x488985d0f6ff	            mov qword [rbp - 0x930], rax	       448	rev-list.c	FUNCTION_16	FOR_3	IF_15
0x112e	      0xe936010000	                           jmp 0x40012a9	       449	rev-list.c	FUNCTION_16	FOR_3	IF_15
0x1133	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       452	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_21
0x113a	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	       452	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_21
0x1141	      0xbe00000000	                              mov esi, 0	       452	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_21
0x1146	          0x4889c7	                            mov rdi, rax	       452	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_21
0x1149	      0xe8b2eeffff	                    call sym.skip_prefix	       452	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_21
0x114e	            0x85c0	                           test eax, eax	       452	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_21
0x1150	     0xf8483000000	                            je 0x4001219	       452	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_21
0x1156	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       453	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_22
0x115d	          0x4889c6	                            mov rsi, rax	       453	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_22
0x1160	      0xbf00000000	                              mov edi, 0	       453	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_22
0x1165	      0xe800000000	                          call 0x40011aa	       453	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_22
0x116a	    0x8b0500000000	            mov eax, dword [0x040011b0] 	       454	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_17
0x1170	            0x85c0	                           test eax, eax	       454	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_17
0x1172	            0x7425	                            je 0x40011d9	       454	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_17
0x1174	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       454	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_17
0x117b	          0x83e040	                           and eax, 0x40	       454	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_17
0x117e	            0x84c0	                             test al, al	       454	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_17
0x1180	            0x7517	                           jne 0x40011d9	       454	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_17
0x1182	      0xbf00000000	                              mov edi, 0	       455	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_24
0x1187	      0xe8caeeffff	                               call sym.	       455	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_24
0x118c	          0x4889c7	                            mov rdi, rax	       455	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_24
0x118f	      0xb800000000	                              mov eax, 0	       455	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_24
0x1194	      0xe800000000	                          call 0x40011d9	       455	rev-list.c	FUNCTION_16	FOR_3	IF_16	CALL_24
0x1199	    0x8b0500000000	            mov eax, dword [0x040011df] 	       456	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18
0x119f	          0x83f803	                              cmp eax, 3	       456	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18
0x11a2	     0xf85ba000000	                           jne 0x40012a2	       456	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18
0x11a8	    0x488b05000000	            mov rax, qword [0x040011ef] 	       457	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18
0x11af	          0x4885c0	                           test rax, rax	       456	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18
0x11b2	     0xf85aa000000	                           jne 0x40012a2	       456	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18
0x11b8	    0x488b1d000000	            mov rbx, qword [0x040011ff] 	       458	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18	CALL_26
0x11bf	      0xbf00000000	                              mov edi, 0	       458	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18	CALL_26
0x11c4	      0xe88deeffff	                               call sym.	       458	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18	CALL_26
0x11c9	          0x4889de	                            mov rsi, rbx	       458	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18	CALL_26
0x11cc	          0x4889c7	                            mov rdi, rax	       458	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18	CALL_26
0x11cf	      0xb800000000	                              mov eax, 0	       458	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18	CALL_26
0x11d4	      0xe800000000	                          call 0x4001219	       458	rev-list.c	FUNCTION_16	FOR_3	IF_16	IF_18	CALL_26
0x11d9	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       462	rev-list.c	FUNCTION_16	FOR_3	IF_19	CALL_27
0x11e0	      0xbe00000000	                              mov esi, 0	       462	rev-list.c	FUNCTION_16	FOR_3	IF_19	CALL_27
0x11e5	          0x4889c7	                            mov rdi, rax	       462	rev-list.c	FUNCTION_16	FOR_3	IF_19	CALL_27
0x11e8	      0xe800000000	                          call 0x400122d	       462	rev-list.c	FUNCTION_16	FOR_3	IF_19	CALL_27
0x11ed	            0x85c0	                           test eax, eax	       462	rev-list.c	FUNCTION_16	FOR_3	IF_19	CALL_27
0x11ef	            0x750c	                           jne 0x400123d	       462	rev-list.c	FUNCTION_16	FOR_3	IF_19	CALL_27
0x11f1	      0xbf00000000	                              mov edi, 0	       463	rev-list.c	FUNCTION_16	FOR_3	IF_19	CALL_28
0x11f6	      0xe847efffff	call sym.list_objects_filter_set_no_filter	       463	rev-list.c	FUNCTION_16	FOR_3	IF_19	CALL_28
0x11fb	            0xeb6c	                           jmp 0x40012a9	       464	rev-list.c	FUNCTION_16	FOR_3	IF_19
0x11fd	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       466	rev-list.c	FUNCTION_16	FOR_3	IF_20	CALL_29
0x1204	      0xbe00000000	                              mov esi, 0	       466	rev-list.c	FUNCTION_16	FOR_3	IF_20	CALL_29
0x1209	          0x4889c7	                            mov rdi, rax	       466	rev-list.c	FUNCTION_16	FOR_3	IF_20	CALL_29
0x120c	      0xe800000000	                          call 0x4001251	       466	rev-list.c	FUNCTION_16	FOR_3	IF_20	CALL_29
0x1211	            0x85c0	                           test eax, eax	       466	rev-list.c	FUNCTION_16	FOR_3	IF_20	CALL_29
0x1213	            0x750c	                           jne 0x4001261	       466	rev-list.c	FUNCTION_16	FOR_3	IF_20	CALL_29
0x1215	    0xc70500000000	               mov dword [0x0400125f], 1	       467	rev-list.c	FUNCTION_16	FOR_3	IF_20
0x121f	            0xeb48	                           jmp 0x40012a9	       468	rev-list.c	FUNCTION_16	FOR_3	IF_20
0x1221	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       471	rev-list.c	FUNCTION_16	FOR_3	IF_21	CALL_30
0x1228	      0xbe00000000	                              mov esi, 0	       471	rev-list.c	FUNCTION_16	FOR_3	IF_21	CALL_30
0x122d	          0x4889c7	                            mov rdi, rax	       471	rev-list.c	FUNCTION_16	FOR_3	IF_21	CALL_30
0x1230	      0xe800000000	                          call 0x4001275	       471	rev-list.c	FUNCTION_16	FOR_3	IF_21	CALL_30
0x1235	            0x85c0	                           test eax, eax	       471	rev-list.c	FUNCTION_16	FOR_3	IF_21	CALL_30
0x1237	            0x742c	                            je 0x40012a5	       471	rev-list.c	FUNCTION_16	FOR_3	IF_21	CALL_30
0x1239	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       473	rev-list.c	FUNCTION_16	FOR_3	IF_22	CALL_31
0x1240	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	       473	rev-list.c	FUNCTION_16	FOR_3	IF_22	CALL_31
0x1247	      0xbe00000000	                              mov esi, 0	       473	rev-list.c	FUNCTION_16	FOR_3	IF_22	CALL_31
0x124c	          0x4889c7	                            mov rdi, rax	       473	rev-list.c	FUNCTION_16	FOR_3	IF_22	CALL_31
0x124f	      0xe8acedffff	                    call sym.skip_prefix	       473	rev-list.c	FUNCTION_16	FOR_3	IF_22	CALL_31
0x1254	            0x85c0	                           test eax, eax	       473	rev-list.c	FUNCTION_16	FOR_3	IF_22	CALL_31
0x1256	            0x7510	                           jne 0x40012a8	       473	rev-list.c	FUNCTION_16	FOR_3	IF_22	CALL_31
0x1258	      0xbf00000000	                              mov edi, 0	       476	rev-list.c	FUNCTION_16	FOR_3	CALL_32
0x125d	      0xe800000000	                          call 0x40012a2	       476	rev-list.c	FUNCTION_16	FOR_3	CALL_32
0x1262	              0x90	                                     nop	       460	rev-list.c	FUNCTION_16	FOR_3	IF_16
0x1263	            0xeb04	                           jmp 0x40012a9	       460	rev-list.c	FUNCTION_16	FOR_3	IF_16
0x1265	              0x90	                                     nop	       472	rev-list.c	FUNCTION_16	FOR_3	IF_21
0x1266	            0xeb01	                           jmp 0x40012a9	       472	rev-list.c	FUNCTION_16	FOR_3	IF_21
0x1268	              0x90	                                     nop	       474	rev-list.c	FUNCTION_16	FOR_3	IF_22
0x1269	    0x8385b8f6ffff	              add dword [rbp - 0x948], 1	       412	rev-list.c	FUNCTION_16	FOR_3
0x1270	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       412	rev-list.c	FUNCTION_16	FOR_3
0x1276	    0x3b85acf6ffff	            cmp eax, dword [rbp - 0x954]	       412	rev-list.c	FUNCTION_16	FOR_3
0x127c	     0xf8c07fdffff	                            jl 0x4000fc9	       412	rev-list.c	FUNCTION_16	FOR_3
0x1282	    0x8b85d4f7ffff	            mov eax, dword [rbp - 0x82c]	       479	rev-list.c	FUNCTION_16	IF_23
0x1288	          0x83f809	                              cmp eax, 9	       479	rev-list.c	FUNCTION_16	IF_23
0x128b	            0x742f	                            je 0x40012fc	       479	rev-list.c	FUNCTION_16	IF_23
0x128d	    0xc78520f7ffff	            mov dword [rbp - 0x8e0], 0xa	       481	rev-list.c	FUNCTION_16	IF_23
0x1297	    0x8b85d4f7ffff	            mov eax, dword [rbp - 0x82c]	       482	rev-list.c	FUNCTION_16	IF_23	IF_24
0x129d	          0x83f805	                              cmp eax, 5	       482	rev-list.c	FUNCTION_16	IF_23	IF_24
0x12a0	            0x750d	                           jne 0x40012ef	       482	rev-list.c	FUNCTION_16	IF_23	IF_24
0x12a2	    0x48c78528f7ff	              mov qword [rbp - 0x8d8], 0	       483	rev-list.c	FUNCTION_16	IF_23	IF_24
0x12ad	            0xeb25	                           jmp 0x4001314	       483	rev-list.c	FUNCTION_16	IF_23	IF_24
0x12af	    0x48c78528f7ff	              mov qword [rbp - 0x8d8], 0	       485	rev-list.c	FUNCTION_16	IF_23	ELSE_1
0x12ba	            0xeb18	                           jmp 0x4001314	       485	rev-list.c	FUNCTION_16	IF_23	ELSE_1
0x12bc	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	       487	rev-list.c	FUNCTION_16	ELSE_2	IF_25
0x12c3	          0x83e010	                           and eax, 0x10	       487	rev-list.c	FUNCTION_16	ELSE_2	IF_25
0x12c6	            0x84c0	                             test al, al	       487	rev-list.c	FUNCTION_16	ELSE_2	IF_25
0x12c8	            0x740a	                            je 0x4001314	       487	rev-list.c	FUNCTION_16	ELSE_2	IF_25
0x12ca	    0xc785d4f7ffff	              mov dword [rbp - 0x82c], 0	       489	rev-list.c	FUNCTION_16	ELSE_2	IF_25
0x12d4	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       491	rev-list.c	FUNCTION_16	IF_26	CALL_33
0x12db	          0x4885c0	                           test rax, rax	       491	rev-list.c	FUNCTION_16	IF_26	CALL_33
0x12de	            0x7551	                           jne 0x4001371	       491	rev-list.c	FUNCTION_16	IF_26	CALL_33
0x12e0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       491	rev-list.c	FUNCTION_16	IF_26	CALL_33
0x12e7	          0x4889c7	                            mov rdi, rax	       491	rev-list.c	FUNCTION_16	IF_26	CALL_33
0x12ea	      0xe800000000	                          call 0x400132f	       491	rev-list.c	FUNCTION_16	IF_26	CALL_33
0x12ef	            0x85c0	                           test eax, eax	       491	rev-list.c	FUNCTION_16	IF_26	CALL_33
0x12f1	            0x743e	                            je 0x4001371	       491	rev-list.c	FUNCTION_16	IF_26	CALL_33
0x12f3	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       492	rev-list.c	FUNCTION_16	IF_26
0x12fa	          0x83e010	                           and eax, 0x10	       492	rev-list.c	FUNCTION_16	IF_26
0x12fd	            0x84c0	                             test al, al	       491	rev-list.c	FUNCTION_16	IF_26	CALL_33
0x12ff	            0x7530	                           jne 0x4001371	       491	rev-list.c	FUNCTION_16	IF_26	CALL_33
0x1301	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       492	rev-list.c	FUNCTION_16	IF_26
0x1308	          0x83e020	                           and eax, 0x20	       492	rev-list.c	FUNCTION_16	IF_26
0x130b	            0x84c0	                             test al, al	       492	rev-list.c	FUNCTION_16	IF_26
0x130d	            0x7522	                           jne 0x4001371	       492	rev-list.c	FUNCTION_16	IF_26
0x130f	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       492	rev-list.c	FUNCTION_16	IF_26
0x1316	          0x83e040	                           and eax, 0x40	       492	rev-list.c	FUNCTION_16	IF_26
0x1319	            0x84c0	                             test al, al	       492	rev-list.c	FUNCTION_16	IF_26
0x131b	            0x7514	                           jne 0x4001371	       492	rev-list.c	FUNCTION_16	IF_26
0x131d	    0x8b8538f7ffff	            mov eax, dword [rbp - 0x8c8]	       493	rev-list.c	FUNCTION_16	IF_26
0x1323	            0x85c0	                           test eax, eax	       492	rev-list.c	FUNCTION_16	IF_26
0x1325	            0x750a	                           jne 0x4001371	       492	rev-list.c	FUNCTION_16	IF_26
0x1327	    0x8b8598f7ffff	            mov eax, dword [rbp - 0x868]	       494	rev-list.c	FUNCTION_16	IF_26
0x132d	            0x85c0	                           test eax, eax	       493	rev-list.c	FUNCTION_16	IF_26
0x132f	            0x740e	                            je 0x400137f	       493	rev-list.c	FUNCTION_16	IF_26
0x1331	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	       494	rev-list.c	FUNCTION_16	IF_26
0x1338	          0x83e001	                              and eax, 1	       494	rev-list.c	FUNCTION_16	IF_26
0x133b	            0x84c0	                             test al, al	       494	rev-list.c	FUNCTION_16	IF_26
0x133d	            0x740a	                            je 0x4001389	       494	rev-list.c	FUNCTION_16	IF_26
0x133f	      0xbf00000000	                              mov edi, 0	       496	rev-list.c	FUNCTION_16	CALL_34
0x1344	      0xe800000000	                          call 0x4001389	       496	rev-list.c	FUNCTION_16	CALL_34
0x1349	     0xfb685aaf7ff	           movzx eax, byte [rbp - 0x856]	       498	rev-list.c	FUNCTION_16	IF_27
0x1350	          0x83e010	                           and eax, 0x10	       498	rev-list.c	FUNCTION_16	IF_27
0x1353	            0x84c0	                             test al, al	       498	rev-list.c	FUNCTION_16	IF_27
0x1355	            0x7417	                            je 0x40013ae	       498	rev-list.c	FUNCTION_16	IF_27
0x1357	      0xbf00000000	                              mov edi, 0	       499	rev-list.c	FUNCTION_16	CALL_36
0x135c	      0xe8f5ecffff	                               call sym.	       499	rev-list.c	FUNCTION_16	CALL_36
0x1361	          0x4889c7	                            mov rdi, rax	       499	rev-list.c	FUNCTION_16	CALL_36
0x1364	      0xb800000000	                              mov eax, 0	       499	rev-list.c	FUNCTION_16	CALL_36
0x1369	      0xe800000000	                          call 0x40013ae	       499	rev-list.c	FUNCTION_16	CALL_36
0x136e	    0x8b0500000000	            mov eax, dword [0x040013b4] 	       501	rev-list.c	FUNCTION_16	IF_28
0x1374	            0x85c0	                           test eax, eax	       501	rev-list.c	FUNCTION_16	IF_28
0x1376	            0x7420	                            je 0x40013d8	       501	rev-list.c	FUNCTION_16	IF_28
0x1378	    0x83bdc8f6ffff	              cmp dword [rbp - 0x938], 0	       501	rev-list.c	FUNCTION_16	IF_28
0x137f	            0x7417	                            je 0x40013d8	       501	rev-list.c	FUNCTION_16	IF_28
0x1381	      0xbf00000000	                              mov edi, 0	       502	rev-list.c	FUNCTION_16	CALL_38
0x1386	      0xe8cbecffff	                               call sym.	       502	rev-list.c	FUNCTION_16	CALL_38
0x138b	          0x4889c7	                            mov rdi, rax	       502	rev-list.c	FUNCTION_16	CALL_38
0x138e	      0xb800000000	                              mov eax, 0	       502	rev-list.c	FUNCTION_16	CALL_38
0x1393	      0xe800000000	                          call 0x40013d8	       502	rev-list.c	FUNCTION_16	CALL_38
0x1398	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	       504	rev-list.c	FUNCTION_16
0x139f	          0x83e010	                           and eax, 0x10	       504	rev-list.c	FUNCTION_16
0x13a2	            0x84c0	                             test al, al	       505	rev-list.c	FUNCTION_16
0x13a4	            0x7518	                           jne 0x40013fe	       505	rev-list.c	FUNCTION_16
0x13a6	    0x488b8580f8ff	            mov rax, qword [rbp - 0x780]	       505	rev-list.c	FUNCTION_16
0x13ad	          0x4885c0	                           test rax, rax	       504	rev-list.c	FUNCTION_16
0x13b0	            0x750c	                           jne 0x40013fe	       504	rev-list.c	FUNCTION_16
0x13b2	    0x488b8590f8ff	            mov rax, qword [rbp - 0x770]	       506	rev-list.c	FUNCTION_16
0x13b9	          0x4885c0	                           test rax, rax	       505	rev-list.c	FUNCTION_16
0x13bc	            0x7407	                            je 0x4001405	       505	rev-list.c	FUNCTION_16
0x13be	      0xb801000000	                              mov eax, 1	       505	rev-list.c	FUNCTION_16
0x13c3	            0xeb05	                           jmp 0x400140a	       505	rev-list.c	FUNCTION_16
0x13c5	      0xb800000000	                              mov eax, 0	       505	rev-list.c	FUNCTION_16
0x13ca	    0x890500000000	            mov dword [0x04001410], eax 	       504	rev-list.c	FUNCTION_16
0x13d0	    0x83bdbcf6ffff	              cmp dword [rbp - 0x944], 0	       507	rev-list.c	FUNCTION_16	IF_29
0x13d7	            0x7410	                            je 0x4001429	       507	rev-list.c	FUNCTION_16	IF_29
0x13d9	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       508	rev-list.c	FUNCTION_16	IF_29
0x13e0	          0x83c804	                               or eax, 4	       508	rev-list.c	FUNCTION_16	IF_29
0x13e3	    0x8885a6f7ffff	              mov byte [rbp - 0x85a], al	       508	rev-list.c	FUNCTION_16	IF_29
0x13e9	    0x4883bdd0f6ff	              cmp qword [rbp - 0x930], 0	       510	rev-list.c	FUNCTION_16	IF_30
0x13f1	            0x741b	                            je 0x400144e	       510	rev-list.c	FUNCTION_16	IF_30
0x13f3	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       511	rev-list.c	FUNCTION_16	CALL_39
0x13fa	      0xbe00000000	                              mov esi, 0	       511	rev-list.c	FUNCTION_16	CALL_39
0x13ff	          0x4889c7	                            mov rdi, rax	       511	rev-list.c	FUNCTION_16	CALL_39
0x1402	      0xe800000000	                          call 0x4001447	       511	rev-list.c	FUNCTION_16	CALL_39
0x1407	    0x488905000000	            mov qword [0x0400144e], rax 	       511	rev-list.c	FUNCTION_16	CALL_39
0x140e	    0x83bdc8f6ffff	              cmp dword [rbp - 0x938], 0	       513	rev-list.c	FUNCTION_16	IF_31
0x1415	     0xf842b010000	                            je 0x4001586	       513	rev-list.c	FUNCTION_16	IF_31
0x141b	     0xfb685a4f7ff	           movzx eax, byte [rbp - 0x85c]	       513	rev-list.c	FUNCTION_16	IF_31
0x1422	          0x83e008	                              and eax, 8	       513	rev-list.c	FUNCTION_16	IF_31
0x1425	            0x84c0	                             test al, al	       513	rev-list.c	FUNCTION_16	IF_31
0x1427	     0xf8519010000	                           jne 0x4001586	       513	rev-list.c	FUNCTION_16	IF_31
0x142d	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x1434	          0x83e040	                           and eax, 0x40	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x1437	            0x84c0	                             test al, al	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x1439	     0xf84ab000000	                            je 0x400152a	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x143f	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x1446	          0x83e080	                     and eax, 0xffffff80	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x1449	            0x84c0	                             test al, al	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x144b	     0xf8599000000	                           jne 0x400152a	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x1451	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x1458	          0x83e002	                              and eax, 2	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x145b	            0x84c0	                             test al, al	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x145d	     0xf8587000000	                           jne 0x400152a	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x1463	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	       516	rev-list.c	FUNCTION_16	IF_31	IF_32
0x1469	    0x8985ccf6ffff	            mov dword [rbp - 0x934], eax	       516	rev-list.c	FUNCTION_16	IF_31	IF_32
0x146f	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       517	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_40
0x1476	          0x4889c7	                            mov rdi, rax	       517	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_40
0x1479	      0xe800000000	                          call 0x40014be	       517	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_40
0x147e	            0x85c0	                           test eax, eax	       517	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_40
0x1480	     0xf85bf000000	                           jne 0x4001585	       517	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_40
0x1486	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       518	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_41
0x148d	      0xb900000000	                              mov ecx, 0	       518	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_41
0x1492	      0xba00000000	                              mov edx, 0	       518	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_41
0x1497	      0xbe00000000	                              mov esi, 0	       518	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_41
0x149c	          0x4889c7	                            mov rdi, rax	       518	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_41
0x149f	      0xe800000000	                          call 0x40014e4	       518	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_41
0x14a4	    0x83bdccf6ffff	              cmp dword [rbp - 0x934], 0	       519	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	IF_34
0x14ab	            0x781c	                            js 0x4001509	       519	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	IF_34
0x14ad	    0x8b95ccf6ffff	            mov edx, dword [rbp - 0x934]	       519	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	IF_34
0x14b3	    0x8b85f0f6ffff	            mov eax, dword [rbp - 0x910]	       519	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	IF_34
0x14b9	            0x39c2	                            cmp edx, eax	       519	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	IF_34
0x14bb	            0x730c	                           jae 0x4001509	       519	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	IF_34
0x14bd	    0x8b85ccf6ffff	            mov eax, dword [rbp - 0x934]	       520	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	IF_34
0x14c3	    0x8985f0f6ffff	            mov dword [rbp - 0x910], eax	       520	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	IF_34
0x14c9	    0x8b85f0f6ffff	            mov eax, dword [rbp - 0x910]	       521	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_42
0x14cf	            0x89c6	                            mov esi, eax	       521	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_42
0x14d1	      0xbf00000000	                              mov edi, 0	       521	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_42
0x14d6	      0xb800000000	                              mov eax, 0	       521	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_42
0x14db	      0xe800000000	                          call 0x4001520	       521	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33	CALL_42
0x14e0	      0xb800000000	                              mov eax, 0	       522	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33
0x14e5	      0xe909030000	                           jmp 0x4001833	       522	rev-list.c	FUNCTION_16	IF_31	IF_32	IF_33
0x14ea	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	       524	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x14f0	            0x85c0	                           test eax, eax	       524	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x14f2	            0x7952	                           jns 0x4001586	       524	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x14f4	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       524	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x14fb	          0x83e010	                           and eax, 0x10	       524	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x14fe	            0x84c0	                             test al, al	       524	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x1500	            0x7444	                            je 0x4001586	       524	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x1502	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       525	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x1509	          0x83e020	                           and eax, 0x20	       525	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x150c	            0x84c0	                             test al, al	       525	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x150e	            0x7436	                            je 0x4001586	       525	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x1510	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       525	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x1517	          0x83e040	                           and eax, 0x40	       525	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x151a	            0x84c0	                             test al, al	       525	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x151c	            0x7428	                            je 0x4001586	       525	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35
0x151e	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       526	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35	IF_36	CALL_43
0x1525	          0x4889c7	                            mov rdi, rax	       526	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35	IF_36	CALL_43
0x1528	      0xe800000000	                          call 0x400156d	       526	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35	IF_36	CALL_43
0x152d	            0x85c0	                           test eax, eax	       526	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35	IF_36	CALL_43
0x152f	            0x7515	                           jne 0x4001586	       526	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35	IF_36	CALL_43
0x1531	      0xbf00000000	                              mov edi, 0	       527	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35	IF_36	CALL_44
0x1536	      0xe800000000	                          call 0x400157b	       527	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35	IF_36	CALL_44
0x153b	      0xb800000000	                              mov eax, 0	       528	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35	IF_36
0x1540	      0xe9ae020000	                           jmp 0x4001833	       528	rev-list.c	FUNCTION_16	IF_31	ELSE_3	IF_35	IF_36
0x1545	              0x90	                                     nop	       514	rev-list.c	FUNCTION_16	IF_31	IF_32
0x1546	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       533	rev-list.c	FUNCTION_16	IF_37	CALL_45
0x154d	          0x4889c7	                            mov rdi, rax	       533	rev-list.c	FUNCTION_16	IF_37	CALL_45
0x1550	      0xe800000000	                          call 0x4001595	       533	rev-list.c	FUNCTION_16	IF_37	CALL_45
0x1555	            0x85c0	                           test eax, eax	       533	rev-list.c	FUNCTION_16	IF_37	CALL_45
0x1557	            0x740f	                            je 0x40015a8	       533	rev-list.c	FUNCTION_16	IF_37	CALL_45
0x1559	      0xbf00000000	                              mov edi, 0	       534	rev-list.c	FUNCTION_16	CALL_46
0x155e	      0xb800000000	                              mov eax, 0	       534	rev-list.c	FUNCTION_16	CALL_46
0x1563	      0xe800000000	                          call 0x40015a8	       534	rev-list.c	FUNCTION_16	CALL_46
0x1568	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       535	rev-list.c	FUNCTION_16	IF_38
0x156f	          0x83e020	                           and eax, 0x20	       535	rev-list.c	FUNCTION_16	IF_38
0x1572	            0x84c0	                             test al, al	       535	rev-list.c	FUNCTION_16	IF_38
0x1574	            0x7414	                            je 0x40015ca	       535	rev-list.c	FUNCTION_16	IF_38
0x1576	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       536	rev-list.c	FUNCTION_16	CALL_47
0x157d	      0xbe00000000	                              mov esi, 0	       536	rev-list.c	FUNCTION_16	CALL_47
0x1582	          0x4889c7	                            mov rdi, rax	       536	rev-list.c	FUNCTION_16	CALL_47
0x1585	      0xe800000000	                          call 0x40015ca	       536	rev-list.c	FUNCTION_16	CALL_47
0x158a	    0x83bdbcf6ffff	              cmp dword [rbp - 0x944], 0	       538	rev-list.c	FUNCTION_16	IF_39
0x1591	            0x744e	                            je 0x4001621	       538	rev-list.c	FUNCTION_16	IF_39
0x1593	    0x8b8dc4f6ffff	            mov ecx, dword [rbp - 0x93c]	       541	rev-list.c	FUNCTION_16	IF_39	CALL_48
0x1599	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	       541	rev-list.c	FUNCTION_16	IF_39	CALL_48
0x15a0	    0x488db5b4f6ff	                  lea rsi, [rbp - 0x94c]	       541	rev-list.c	FUNCTION_16	IF_39	CALL_48
0x15a7	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       541	rev-list.c	FUNCTION_16	IF_39	CALL_48
0x15ae	          0x4889c7	                            mov rdi, rax	       541	rev-list.c	FUNCTION_16	IF_39	CALL_48
0x15b1	      0xe800000000	                          call 0x40015f6	       541	rev-list.c	FUNCTION_16	IF_39	CALL_48
0x15b6	    0x83bdc0f6ffff	              cmp dword [rbp - 0x940], 0	       543	rev-list.c	FUNCTION_16	IF_39	IF_40
0x15bd	            0x7422	                            je 0x4001621	       543	rev-list.c	FUNCTION_16	IF_39	IF_40
0x15bf	    0x8b95f0f6ffff	            mov edx, dword [rbp - 0x910]	       544	rev-list.c	FUNCTION_16	IF_39	CALL_49
0x15c5	    0x8b8db4f6ffff	            mov ecx, dword [rbp - 0x94c]	       544	rev-list.c	FUNCTION_16	IF_39	CALL_49
0x15cb	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	       544	rev-list.c	FUNCTION_16	IF_39	CALL_49
0x15d2	            0x89ce	                            mov esi, ecx	       544	rev-list.c	FUNCTION_16	IF_39	CALL_49
0x15d4	          0x4889c7	                            mov rdi, rax	       544	rev-list.c	FUNCTION_16	IF_39	CALL_49
0x15d7	      0xe870f4ffff	               call sym.show_bisect_vars	       544	rev-list.c	FUNCTION_16	IF_39	CALL_49
0x15dc	      0xe912020000	                           jmp 0x4001833	       544	rev-list.c	FUNCTION_16	IF_39	CALL_49
0x15e1	    0x8b0500000000	            mov eax, dword [0x04001627] 	       547	rev-list.c	FUNCTION_16	IF_41
0x15e7	            0x85c0	                           test eax, eax	       547	rev-list.c	FUNCTION_16	IF_41
0x15e9	            0x740f	                            je 0x400163a	       547	rev-list.c	FUNCTION_16	IF_41
0x15eb	      0xbe00400000	                         mov esi, 0x4000	       548	rev-list.c	FUNCTION_16	CALL_50
0x15f0	      0xbf00000000	                              mov edi, 0	       548	rev-list.c	FUNCTION_16	CALL_50
0x15f5	      0xe8c8eaffff	                    call sym.oidset_init	       548	rev-list.c	FUNCTION_16	CALL_50
0x15fa	    0x8b0500000000	            mov eax, dword [0x04001640] 	       549	rev-list.c	FUNCTION_16	IF_42
0x1600	          0x83f802	                              cmp eax, 2	       549	rev-list.c	FUNCTION_16	IF_42
0x1603	            0x750f	                           jne 0x4001654	       549	rev-list.c	FUNCTION_16	IF_42
0x1605	      0xbe00400000	                         mov esi, 0x4000	       550	rev-list.c	FUNCTION_16	CALL_51
0x160a	      0xbf00000000	                              mov edi, 0	       550	rev-list.c	FUNCTION_16	CALL_51
0x160f	      0xe8aeeaffff	                    call sym.oidset_init	       550	rev-list.c	FUNCTION_16	CALL_51
0x1614	    0x8b0500000000	            mov eax, dword [0x0400165a] 	       554	rev-list.c	FUNCTION_16
0x161a	            0x85c0	                           test eax, eax	       552	rev-list.c	FUNCTION_16	CALL_52
0x161c	            0x7407	                            je 0x4001665	       552	rev-list.c	FUNCTION_16	CALL_52
0x161e	      0xb900000000	                              mov ecx, 0	       552	rev-list.c	FUNCTION_16	CALL_52
0x1623	            0xeb05	                           jmp 0x400166a	       552	rev-list.c	FUNCTION_16	CALL_52
0x1625	      0xb900000000	                              mov ecx, 0	       552	rev-list.c	FUNCTION_16	CALL_52
0x162a	    0x488d9510f7ff	                  lea rdx, [rbp - 0x8f0]	       552	rev-list.c	FUNCTION_16	CALL_52
0x1631	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       552	rev-list.c	FUNCTION_16	CALL_52
0x1638	          0x4989c9	                             mov r9, rcx	       552	rev-list.c	FUNCTION_16	CALL_52
0x163b	          0x4989d0	                             mov r8, rdx	       552	rev-list.c	FUNCTION_16	CALL_52
0x163e	      0xb900000000	                              mov ecx, 0	       552	rev-list.c	FUNCTION_16	CALL_52
0x1643	      0xba00000000	                              mov edx, 0	       552	rev-list.c	FUNCTION_16	CALL_52
0x1648	          0x4889c6	                            mov rsi, rax	       552	rev-list.c	FUNCTION_16	CALL_52
0x164b	      0xbf00000000	                              mov edi, 0	       552	rev-list.c	FUNCTION_16	CALL_52
0x1650	      0xe800000000	                          call 0x4001695	       552	rev-list.c	FUNCTION_16	CALL_52
0x1655	    0x8b0500000000	            mov eax, dword [0x0400169b] 	       556	rev-list.c	FUNCTION_16	IF_43
0x165b	            0x85c0	                           test eax, eax	       556	rev-list.c	FUNCTION_16	IF_43
0x165d	            0x7461	                            je 0x4001700	       556	rev-list.c	FUNCTION_16	IF_43
0x165f	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       559	rev-list.c	FUNCTION_16	IF_43	CALL_53
0x1666	          0x4889c6	                            mov rsi, rax	       559	rev-list.c	FUNCTION_16	IF_43	CALL_53
0x1669	      0xbf00000000	                              mov edi, 0	       559	rev-list.c	FUNCTION_16	IF_43	CALL_53
0x166e	      0xe875eaffff	               call sym.oidset_iter_init	       559	rev-list.c	FUNCTION_16	IF_43	CALL_53
0x1673	            0xeb21	                           jmp 0x40016d6	       560	rev-list.c	FUNCTION_16	IF_43	WHILE_1	CALL_54
0x1675	    0x488b85e0f6ff	            mov rax, qword [rbp - 0x920]	       561	rev-list.c	FUNCTION_16	IF_43	CALL_56
0x167c	          0x4889c7	                            mov rdi, rax	       561	rev-list.c	FUNCTION_16	IF_43	CALL_56
0x167f	      0xe800000000	                          call 0x40016c4	       561	rev-list.c	FUNCTION_16	IF_43	CALL_56
0x1684	          0x4889c6	                            mov rsi, rax	       561	rev-list.c	FUNCTION_16	IF_43	CALL_56
0x1687	      0xbf00000000	                              mov edi, 0	       561	rev-list.c	FUNCTION_16	IF_43	CALL_56
0x168c	      0xb800000000	                              mov eax, 0	       561	rev-list.c	FUNCTION_16	IF_43	CALL_56
0x1691	      0xe800000000	                          call 0x40016d6	       561	rev-list.c	FUNCTION_16	IF_43	CALL_56
0x1696	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       560	rev-list.c	FUNCTION_16	IF_43	WHILE_1	CALL_54
0x169d	          0x4889c7	                            mov rdi, rax	       560	rev-list.c	FUNCTION_16	IF_43	WHILE_1	CALL_54
0x16a0	      0xe869eaffff	               call sym.oidset_iter_next	       560	rev-list.c	FUNCTION_16	IF_43	WHILE_1	CALL_54
0x16a5	    0x488985e0f6ff	            mov qword [rbp - 0x920], rax	       560	rev-list.c	FUNCTION_16	IF_43	WHILE_1	CALL_54
0x16ac	    0x4883bde0f6ff	              cmp qword [rbp - 0x920], 0	       560	rev-list.c	FUNCTION_16	IF_43	WHILE_1	CALL_54
0x16b4	            0x75bf	                           jne 0x40016b5	       560	rev-list.c	FUNCTION_16	IF_43	WHILE_1	CALL_54
0x16b6	      0xbf00000000	                              mov edi, 0	       562	rev-list.c	FUNCTION_16	IF_43	CALL_57
0x16bb	      0xe800000000	                          call 0x4001700	       562	rev-list.c	FUNCTION_16	IF_43	CALL_57
0x16c0	    0x8b0500000000	            mov eax, dword [0x04001706] 	       564	rev-list.c	FUNCTION_16	IF_44
0x16c6	          0x83f802	                              cmp eax, 2	       564	rev-list.c	FUNCTION_16	IF_44
0x16c9	            0x7561	                           jne 0x400176c	       564	rev-list.c	FUNCTION_16	IF_44
0x16cb	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       567	rev-list.c	FUNCTION_16	IF_44	CALL_58
0x16d2	          0x4889c6	                            mov rsi, rax	       567	rev-list.c	FUNCTION_16	IF_44	CALL_58
0x16d5	      0xbf00000000	                              mov edi, 0	       567	rev-list.c	FUNCTION_16	IF_44	CALL_58
0x16da	      0xe809eaffff	               call sym.oidset_iter_init	       567	rev-list.c	FUNCTION_16	IF_44	CALL_58
0x16df	            0xeb21	                           jmp 0x4001742	       568	rev-list.c	FUNCTION_16	IF_44	WHILE_2	CALL_59
0x16e1	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	       569	rev-list.c	FUNCTION_16	IF_44	CALL_61
0x16e8	          0x4889c7	                            mov rdi, rax	       569	rev-list.c	FUNCTION_16	IF_44	CALL_61
0x16eb	      0xe800000000	                          call 0x4001730	       569	rev-list.c	FUNCTION_16	IF_44	CALL_61
0x16f0	          0x4889c6	                            mov rsi, rax	       569	rev-list.c	FUNCTION_16	IF_44	CALL_61
0x16f3	      0xbf00000000	                              mov edi, 0	       569	rev-list.c	FUNCTION_16	IF_44	CALL_61
0x16f8	      0xb800000000	                              mov eax, 0	       569	rev-list.c	FUNCTION_16	IF_44	CALL_61
0x16fd	      0xe800000000	                          call 0x4001742	       569	rev-list.c	FUNCTION_16	IF_44	CALL_61
0x1702	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       568	rev-list.c	FUNCTION_16	IF_44	WHILE_2	CALL_59
0x1709	          0x4889c7	                            mov rdi, rax	       568	rev-list.c	FUNCTION_16	IF_44	WHILE_2	CALL_59
0x170c	      0xe8fde9ffff	               call sym.oidset_iter_next	       568	rev-list.c	FUNCTION_16	IF_44	WHILE_2	CALL_59
0x1711	    0x488985e8f6ff	            mov qword [rbp - 0x918], rax	       568	rev-list.c	FUNCTION_16	IF_44	WHILE_2	CALL_59
0x1718	    0x4883bde8f6ff	              cmp qword [rbp - 0x918], 0	       568	rev-list.c	FUNCTION_16	IF_44	WHILE_2	CALL_59
0x1720	            0x75bf	                           jne 0x4001721	       568	rev-list.c	FUNCTION_16	IF_44	WHILE_2	CALL_59
0x1722	      0xbf00000000	                              mov edi, 0	       570	rev-list.c	FUNCTION_16	IF_44	CALL_62
0x1727	      0xe800000000	                          call 0x400176c	       570	rev-list.c	FUNCTION_16	IF_44	CALL_62
0x172c	      0xbf00000000	                              mov edi, 0	       573	rev-list.c	FUNCTION_16	CALL_63
0x1731	      0xe800000000	                          call 0x4001776	       573	rev-list.c	FUNCTION_16	CALL_63
0x1736	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       575	rev-list.c	FUNCTION_16	IF_45
0x173d	          0x83e040	                           and eax, 0x40	       575	rev-list.c	FUNCTION_16	IF_45
0x1740	            0x84c0	                             test al, al	       575	rev-list.c	FUNCTION_16	IF_45
0x1742	     0xf84a6000000	                            je 0x400182e	       575	rev-list.c	FUNCTION_16	IF_45
0x1748	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       576	rev-list.c	FUNCTION_16	IF_45	IF_46
0x174f	          0x83e080	                     and eax, 0xffffff80	       576	rev-list.c	FUNCTION_16	IF_45	IF_46
0x1752	            0x84c0	                             test al, al	       576	rev-list.c	FUNCTION_16	IF_45	IF_46
0x1754	            0x742a	                            je 0x40017c0	       576	rev-list.c	FUNCTION_16	IF_45	IF_46
0x1756	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       576	rev-list.c	FUNCTION_16	IF_45	IF_46
0x175d	          0x83e002	                              and eax, 2	       576	rev-list.c	FUNCTION_16	IF_45	IF_46
0x1760	            0x84c0	                             test al, al	       576	rev-list.c	FUNCTION_16	IF_45	IF_46
0x1762	            0x741c	                            je 0x40017c0	       576	rev-list.c	FUNCTION_16	IF_45	IF_46
0x1764	          0x8b4da8	             mov ecx, dword [rbp - 0x58]	       577	rev-list.c	FUNCTION_16	IF_45	CALL_64
0x1767	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       577	rev-list.c	FUNCTION_16	IF_45	CALL_64
0x176a	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       577	rev-list.c	FUNCTION_16	IF_45	CALL_64
0x176d	            0x89c6	                            mov esi, eax	       577	rev-list.c	FUNCTION_16	IF_45	CALL_64
0x176f	      0xbf00000000	                              mov edi, 0	       577	rev-list.c	FUNCTION_16	IF_45	CALL_64
0x1774	      0xb800000000	                              mov eax, 0	       577	rev-list.c	FUNCTION_16	IF_45	CALL_64
0x1779	      0xe800000000	                          call 0x40017be	       577	rev-list.c	FUNCTION_16	IF_45	CALL_64
0x177e	            0xeb6e	                           jmp 0x400182e	       577	rev-list.c	FUNCTION_16	IF_45	CALL_64
0x1780	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       578	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x1787	          0x83e080	                     and eax, 0xffffff80	       578	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x178a	            0x84c0	                             test al, al	       578	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x178c	            0x7419	                            je 0x40017e7	       578	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x178e	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       579	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x1791	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       579	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x1794	            0x89c6	                            mov esi, eax	       579	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x1796	      0xbf00000000	                              mov edi, 0	       579	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x179b	      0xb800000000	                              mov eax, 0	       579	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x17a0	      0xe800000000	                          call 0x40017e5	       579	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x17a5	            0xeb47	                           jmp 0x400182e	       579	rev-list.c	FUNCTION_16	IF_45	ELSE_4	IF_47
0x17a7	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       580	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17ae	          0x83e002	                              and eax, 2	       580	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17b1	            0x84c0	                             test al, al	       580	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17b3	            0x7420	                            je 0x4001815	       580	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17b5	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       581	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17b8	          0x8b4da0	             mov ecx, dword [rbp - 0x60]	       581	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17bb	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       581	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17be	             0x1d1	                            add ecx, edx	       581	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17c0	            0x89c2	                            mov edx, eax	       581	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17c2	            0x89ce	                            mov esi, ecx	       581	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17c4	      0xbf00000000	                              mov edi, 0	       581	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17c9	      0xb800000000	                              mov eax, 0	       581	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17ce	      0xe800000000	                          call 0x4001813	       581	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17d3	            0xeb19	                           jmp 0x400182e	       581	rev-list.c	FUNCTION_16	IF_45	ELSE_5	IF_48
0x17d5	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       583	rev-list.c	FUNCTION_16	IF_45	CALL_67
0x17d8	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       583	rev-list.c	FUNCTION_16	IF_45	CALL_67
0x17db	             0x1d0	                            add eax, edx	       583	rev-list.c	FUNCTION_16	IF_45	CALL_67
0x17dd	            0x89c6	                            mov esi, eax	       583	rev-list.c	FUNCTION_16	IF_45	CALL_67
0x17df	      0xbf00000000	                              mov edi, 0	       583	rev-list.c	FUNCTION_16	IF_45	CALL_67
0x17e4	      0xb800000000	                              mov eax, 0	       583	rev-list.c	FUNCTION_16	IF_45	CALL_67
0x17e9	      0xe800000000	                          call 0x400182e	       583	rev-list.c	FUNCTION_16	IF_45	CALL_67
0x17ee	      0xb800000000	                              mov eax, 0	       586	rev-list.c	FUNCTION_16
0x17f3	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       587	rev-list.c	FUNCTION_16
0x17f7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       587	rev-list.c	FUNCTION_16
0x1800	            0x7405	                            je 0x4001847	       587	rev-list.c	FUNCTION_16
0x1802	      0xe800000000	                          call 0x4001847	       587	rev-list.c	FUNCTION_16
0x1807	    0x4881c4680900	                          add rsp, 0x968	       587	rev-list.c	FUNCTION_16
0x180e	              0x5b	                                 pop rbx	       587	rev-list.c	FUNCTION_16
0x180f	              0x5d	                                 pop rbp	       587	rev-list.c	FUNCTION_16
0x1810	              0xc3	                                     ret	       587	rev-list.c	FUNCTION_16
show_bisect_vars	WHILE,0:functions,0:IF,4:ELSE,0:DO,0:SWITCH,0:CALL,11:FOR,0	110
0xa4c	              0x55	                                push rbp	       272	rev-list.c	FUNCTION_13
0xa4d	          0x4889e5	                            mov rbp, rsp	       272	rev-list.c	FUNCTION_13
0xa50	        0x4883ec70	                           sub rsp, 0x70	       272	rev-list.c	FUNCTION_13
0xa54	        0x48897d98	             mov qword [rbp - 0x68], rdi	       272	rev-list.c	FUNCTION_13
0xa58	          0x897594	             mov dword [rbp - 0x6c], esi	       272	rev-list.c	FUNCTION_13
0xa5b	          0x895590	             mov dword [rbp - 0x70], edx	       272	rev-list.c	FUNCTION_13
0xa5e	    0x64488b042528	                mov rax, qword fs:[0x28]	       272	rev-list.c	FUNCTION_13
0xa67	        0x488945f8	                mov qword [rbp - 8], rax	       272	rev-list.c	FUNCTION_13
0xa6b	            0x31c0	                            xor eax, eax	       272	rev-list.c	FUNCTION_13
0xa6d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       273	rev-list.c	FUNCTION_13
0xa71	          0x8b4008	                mov eax, dword [rax + 8]	       273	rev-list.c	FUNCTION_13
0xa74	          0x8945ac	             mov dword [rbp - 0x54], eax	       273	rev-list.c	FUNCTION_13
0xa77	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       274	rev-list.c	FUNCTION_13
0xa7f	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       274	rev-list.c	FUNCTION_13
0xa87	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       274	rev-list.c	FUNCTION_13
0xa8f	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       274	rev-list.c	FUNCTION_13
0xa97	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       274	rev-list.c	FUNCTION_13
0xa9f	        0xc645e800	                mov byte [rbp - 0x18], 0	       274	rev-list.c	FUNCTION_13
0xaa3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       276	rev-list.c	FUNCTION_13
0xaa7	          0x488b00	                    mov rax, qword [rax]	       276	rev-list.c	FUNCTION_13
0xaaa	        0x488945b8	             mov qword [rbp - 0x48], rax	       276	rev-list.c	FUNCTION_13
0xaae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       278	rev-list.c	FUNCTION_13	IF_1
0xab2	          0x488b00	                    mov rax, qword [rax]	       278	rev-list.c	FUNCTION_13	IF_1
0xab5	          0x4885c0	                           test rax, rax	       278	rev-list.c	FUNCTION_13	IF_1
0xab8	            0x750a	                           jne 0x4000b04	       278	rev-list.c	FUNCTION_13	IF_1
0xaba	      0xb801000000	                              mov eax, 1	       279	rev-list.c	FUNCTION_13	IF_1
0xabf	      0xe915010000	                           jmp 0x4000c19	       279	rev-list.c	FUNCTION_13	IF_1
0xac4	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       281	rev-list.c	FUNCTION_13	CALL_1
0xac7	          0x83e001	                              and eax, 1	       281	rev-list.c	FUNCTION_13	CALL_1
0xaca	            0x89c2	                            mov edx, eax	       281	rev-list.c	FUNCTION_13	CALL_1
0xacc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       281	rev-list.c	FUNCTION_13	CALL_1
0xad0	          0x488b00	                    mov rax, qword [rax]	       281	rev-list.c	FUNCTION_13	CALL_1
0xad3	        0x488d75b0	                   lea rsi, [rbp - 0x50]	       281	rev-list.c	FUNCTION_13	CALL_1
0xad7	    0x41b800000000	                              mov r8d, 0	       281	rev-list.c	FUNCTION_13	CALL_1
0xadd	      0xb900000000	                              mov ecx, 0	       281	rev-list.c	FUNCTION_13	CALL_1
0xae2	          0x4889c7	                            mov rdi, rax	       281	rev-list.c	FUNCTION_13	CALL_1
0xae5	      0xe800000000	                          call 0x4000b2a	       281	rev-list.c	FUNCTION_13	CALL_1
0xaea	          0x4889c2	                            mov rdx, rax	       281	rev-list.c	FUNCTION_13	CALL_1
0xaed	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       281	rev-list.c	FUNCTION_13	CALL_1
0xaf1	          0x488910	                    mov qword [rax], rdx	       281	rev-list.c	FUNCTION_13	CALL_1
0xaf4	          0x8b4590	             mov eax, dword [rbp - 0x70]	       294	rev-list.c	FUNCTION_13
0xaf7	          0x2b4594	             sub eax, dword [rbp - 0x6c]	       294	rev-list.c	FUNCTION_13
0xafa	          0x8945a8	             mov dword [rbp - 0x58], eax	       294	rev-list.c	FUNCTION_13
0xafd	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       295	rev-list.c	FUNCTION_13	IF_2
0xb00	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       295	rev-list.c	FUNCTION_13	IF_2
0xb03	            0x7d06	                           jge 0x4000b4b	       295	rev-list.c	FUNCTION_13	IF_2
0xb05	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       296	rev-list.c	FUNCTION_13	IF_2
0xb08	          0x8945a8	             mov dword [rbp - 0x58], eax	       296	rev-list.c	FUNCTION_13	IF_2
0xb0b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       298	rev-list.c	FUNCTION_13	IF_3
0xb0f	          0x488b00	                    mov rax, qword [rax]	       298	rev-list.c	FUNCTION_13	IF_3
0xb12	          0x4885c0	                           test rax, rax	       298	rev-list.c	FUNCTION_13	IF_3
0xb15	            0x741d	                            je 0x4000b74	       298	rev-list.c	FUNCTION_13	IF_3
0xb17	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       299	rev-list.c	FUNCTION_13	CALL_2
0xb1b	          0x488b00	                    mov rax, qword [rax]	       299	rev-list.c	FUNCTION_13	CALL_2
0xb1e	          0x488b00	                    mov rax, qword [rax]	       299	rev-list.c	FUNCTION_13	CALL_2
0xb21	        0x488d5004	                      lea rdx, [rax + 4]	       299	rev-list.c	FUNCTION_13	CALL_2
0xb25	        0x488d45c0	                   lea rax, [rbp - 0x40]	       299	rev-list.c	FUNCTION_13	CALL_2
0xb29	          0x4889d6	                            mov rsi, rdx	       299	rev-list.c	FUNCTION_13	CALL_2
0xb2c	          0x4889c7	                            mov rdi, rax	       299	rev-list.c	FUNCTION_13	CALL_2
0xb2f	      0xe800000000	                          call 0x4000b74	       299	rev-list.c	FUNCTION_13	CALL_2
0xb34	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       301	rev-list.c	FUNCTION_13	IF_4
0xb37	          0x83e001	                              and eax, 1	       301	rev-list.c	FUNCTION_13	IF_4
0xb3a	            0x85c0	                           test eax, eax	       301	rev-list.c	FUNCTION_13	IF_4
0xb3c	            0x7427	                            je 0x4000ba5	       301	rev-list.c	FUNCTION_13	IF_4
0xb3e	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       302	rev-list.c	FUNCTION_13	IF_4	CALL_3
0xb42	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       302	rev-list.c	FUNCTION_13	IF_4	CALL_3
0xb46	          0x4889d1	                            mov rcx, rdx	       302	rev-list.c	FUNCTION_13	IF_4	CALL_3
0xb49	      0xba00000000	                              mov edx, 0	       302	rev-list.c	FUNCTION_13	IF_4	CALL_3
0xb4e	      0xbe00000000	                              mov esi, 0	       302	rev-list.c	FUNCTION_13	IF_4	CALL_3
0xb53	          0x4889c7	                            mov rdi, rax	       302	rev-list.c	FUNCTION_13	IF_4	CALL_3
0xb56	      0xe800000000	                          call 0x4000b9b	       302	rev-list.c	FUNCTION_13	IF_4	CALL_3
0xb5b	      0xbf00000000	                              mov edi, 0	       303	rev-list.c	FUNCTION_13	IF_4	CALL_4
0xb60	      0xe800000000	                          call 0x4000ba5	       303	rev-list.c	FUNCTION_13	IF_4	CALL_4
0xb65	        0x488d45c0	                   lea rax, [rbp - 0x40]	       306	rev-list.c	FUNCTION_13	CALL_5
0xb69	          0x4889c6	                            mov rsi, rax	       306	rev-list.c	FUNCTION_13	CALL_5
0xb6c	      0xbf00000000	                              mov edi, 0	       306	rev-list.c	FUNCTION_13	CALL_5
0xb71	      0xe87efeffff	                  call sym.print_var_str	       306	rev-list.c	FUNCTION_13	CALL_5
0xb76	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       307	rev-list.c	FUNCTION_13	CALL_6
0xb79	          0x83e801	                              sub eax, 1	       307	rev-list.c	FUNCTION_13	CALL_6
0xb7c	            0x89c6	                            mov esi, eax	       307	rev-list.c	FUNCTION_13	CALL_6
0xb7e	      0xbf00000000	                              mov edi, 0	       307	rev-list.c	FUNCTION_13	CALL_6
0xb83	      0xe899feffff	                  call sym.print_var_int	       307	rev-list.c	FUNCTION_13	CALL_6
0xb88	          0x8b4590	             mov eax, dword [rbp - 0x70]	       308	rev-list.c	FUNCTION_13	CALL_7
0xb8b	          0x2b4594	             sub eax, dword [rbp - 0x6c]	       308	rev-list.c	FUNCTION_13	CALL_7
0xb8e	          0x83e801	                              sub eax, 1	       308	rev-list.c	FUNCTION_13	CALL_7
0xb91	            0x89c6	                            mov esi, eax	       308	rev-list.c	FUNCTION_13	CALL_7
0xb93	      0xbf00000000	                              mov edi, 0	       308	rev-list.c	FUNCTION_13	CALL_7
0xb98	      0xe884feffff	                  call sym.print_var_int	       308	rev-list.c	FUNCTION_13	CALL_7
0xb9d	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       309	rev-list.c	FUNCTION_13	CALL_8
0xba0	          0x83e801	                              sub eax, 1	       309	rev-list.c	FUNCTION_13	CALL_8
0xba3	            0x89c6	                            mov esi, eax	       309	rev-list.c	FUNCTION_13	CALL_8
0xba5	      0xbf00000000	                              mov edi, 0	       309	rev-list.c	FUNCTION_13	CALL_8
0xbaa	      0xe872feffff	                  call sym.print_var_int	       309	rev-list.c	FUNCTION_13	CALL_8
0xbaf	          0x8b4590	             mov eax, dword [rbp - 0x70]	       310	rev-list.c	FUNCTION_13	CALL_9
0xbb2	            0x89c6	                            mov esi, eax	       310	rev-list.c	FUNCTION_13	CALL_9
0xbb4	      0xbf00000000	                              mov edi, 0	       310	rev-list.c	FUNCTION_13	CALL_9
0xbb9	      0xe863feffff	                  call sym.print_var_int	       310	rev-list.c	FUNCTION_13	CALL_9
0xbbe	          0x8b4590	             mov eax, dword [rbp - 0x70]	       311	rev-list.c	FUNCTION_13	CALL_11
0xbc1	            0x89c7	                            mov edi, eax	       311	rev-list.c	FUNCTION_13	CALL_11
0xbc3	      0xe800000000	                          call 0x4000c08	       311	rev-list.c	FUNCTION_13	CALL_11
0xbc8	            0x89c6	                            mov esi, eax	       311	rev-list.c	FUNCTION_13	CALL_11
0xbca	      0xbf00000000	                              mov edi, 0	       311	rev-list.c	FUNCTION_13	CALL_11
0xbcf	      0xe84dfeffff	                  call sym.print_var_int	       311	rev-list.c	FUNCTION_13	CALL_11
0xbd4	      0xb800000000	                              mov eax, 0	       313	rev-list.c	FUNCTION_13
0xbd9	        0x488b4df8	                mov rcx, qword [rbp - 8]	       314	rev-list.c	FUNCTION_13
0xbdd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       314	rev-list.c	FUNCTION_13
0xbe6	            0x7405	                            je 0x4000c2d	       314	rev-list.c	FUNCTION_13
0xbe8	      0xe800000000	                          call 0x4000c2d	       314	rev-list.c	FUNCTION_13
0xbed	              0xc9	                                   leave	       314	rev-list.c	FUNCTION_13
0xbee	              0xc3	                                     ret	       314	rev-list.c	FUNCTION_13
oidset_init	WHILE,0:functions,0:IF,0:ELSE,0:DO,0:SWITCH,0:CALL,1:FOR,0	13
0xc2	              0x55	                                push rbp	        29	oidset.h	FUNCTION_44
0xc3	          0x4889e5	                            mov rbp, rsp	        29	oidset.h	FUNCTION_44
0xc6	        0x4883ec10	                           sub rsp, 0x10	        29	oidset.h	FUNCTION_44
0xca	        0x48897df8	                mov qword [rbp - 8], rdi	        29	oidset.h	FUNCTION_44
0xce	        0x488975f0	             mov qword [rbp - 0x10], rsi	        29	oidset.h	FUNCTION_44
0xd2	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	oidset.h	FUNCTION_44	CALL_1
0xd6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        30	oidset.h	FUNCTION_44	CALL_1
0xda	          0x4889d6	                            mov rsi, rdx	        30	oidset.h	FUNCTION_44	CALL_1
0xdd	          0x4889c7	                            mov rdi, rax	        30	oidset.h	FUNCTION_44	CALL_1
0xe0	      0xe800000000	                          call 0x4000125	        30	oidset.h	FUNCTION_44	CALL_1
0xe5	              0x90	                                     nop	        31	oidset.h	FUNCTION_44
0xe6	              0xc9	                                   leave	        31	oidset.h	FUNCTION_44
0xe7	              0xc3	                                     ret	        31	oidset.h	FUNCTION_44
