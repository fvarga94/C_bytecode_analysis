color_output	IF,1:CALL,3:SWITCH,1:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	79
0x400050b	              0x55	                                push rbp	       170	color.c	FUNCTION_10
0x400050c	          0x4889e5	                            mov rbp, rsp	       170	color.c	FUNCTION_10
0x400050f	        0x4883ec20	                           sub rsp, 0x20	       170	color.c	FUNCTION_10
0x4000513	        0x48897df8	                mov qword [rbp - 8], rdi	       170	color.c	FUNCTION_10
0x4000517	          0x8975f4	              mov dword [rbp - 0xc], esi	       170	color.c	FUNCTION_10
0x400051a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       170	color.c	FUNCTION_10
0x400051e	            0x89c8	                            mov eax, ecx	       170	color.c	FUNCTION_10
0x4000520	          0x8845f0	               mov byte [rbp - 0x10], al	       170	color.c	FUNCTION_10
0x4000523	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       171	color.c	FUNCTION_10	SWITCH_1
0x4000527	            0x8b00	                    mov eax, dword [rax]	       171	color.c	FUNCTION_10	SWITCH_1
0x4000529	          0x83f804	                              cmp eax, 4	       171	color.c	FUNCTION_10	SWITCH_1
0x400052c	     0xf87e5000000	                            ja 0x4000617	       171	color.c	FUNCTION_10	SWITCH_1
0x4000532	            0x89c0	                            mov eax, eax	       171	color.c	FUNCTION_10	SWITCH_1
0x4000534	    0x488b04c50000	                  mov rax, qword [rax*8]	       171	color.c	FUNCTION_10	SWITCH_1
0x400053c	            0xffe0	                                 jmp rax	       171	color.c	FUNCTION_10	SWITCH_1
0x400053e	        0x837df401	                cmp dword [rbp - 0xc], 1	       176	color.c	FUNCTION_10	SWITCH_1	IF_1
0x4000542	            0x7f0f	                            jg 0x4000553	       176	color.c	FUNCTION_10	SWITCH_1	IF_1
0x4000544	      0xbf00000000	                              mov edi, 0	       177	color.c	FUNCTION_10	SWITCH_1	CALL_1
0x4000549	      0xb800000000	                              mov eax, 0	       177	color.c	FUNCTION_10	SWITCH_1	CALL_1
0x400054e	      0xe800000000	                          call 0x4000553	       177	color.c	FUNCTION_10	SWITCH_1	CALL_1
0x4000553	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	color.c	FUNCTION_10	SWITCH_1
0x4000557	        0x488d5001	                      lea rdx, [rax + 1]	       178	color.c	FUNCTION_10	SWITCH_1
0x400055b	        0x488955f8	                mov qword [rbp - 8], rdx	       178	color.c	FUNCTION_10	SWITCH_1
0x400055f	         0xfb655f0	            movzx edx, byte [rbp - 0x10]	       178	color.c	FUNCTION_10	SWITCH_1
0x4000563	            0x8810	                      mov byte [rax], dl	       178	color.c	FUNCTION_10	SWITCH_1
0x4000565	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	color.c	FUNCTION_10	SWITCH_1
0x4000569	        0x488d5001	                      lea rdx, [rax + 1]	       179	color.c	FUNCTION_10	SWITCH_1
0x400056d	        0x488955f8	                mov qword [rbp - 8], rdx	       179	color.c	FUNCTION_10	SWITCH_1
0x4000571	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       179	color.c	FUNCTION_10	SWITCH_1
0x4000575	         0xfb65204	               movzx edx, byte [rdx + 4]	       179	color.c	FUNCTION_10	SWITCH_1
0x4000579	          0x83c230	                           add edx, 0x30	       179	color.c	FUNCTION_10	SWITCH_1
0x400057c	            0x8810	                      mov byte [rax], dl	       179	color.c	FUNCTION_10	SWITCH_1
0x400057e	      0xe994000000	                           jmp 0x4000617	       180	color.c	FUNCTION_10	SWITCH_1
0x4000583	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x4000587	         0xfb64004	               movzx eax, byte [rax + 4]	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x400058b	           0xfb6c8	                           movzx ecx, al	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x400058e	         0xfbe55f0	            movsx edx, byte [rbp - 0x10]	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x4000592	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x4000595	          0x4863f0	                         movsxd rsi, eax	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x4000598	        0x488b45f8	                mov rax, qword [rbp - 8]	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x400059c	          0x4189c8	                            mov r8d, ecx	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x400059f	            0x89d1	                            mov ecx, edx	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x40005a1	      0xba00000000	                              mov edx, 0	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x40005a6	          0x4889c7	                            mov rdi, rax	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x40005a9	      0xb800000000	                              mov eax, 0	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x40005ae	      0xe800000000	                          call 0x40005b3	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x40005b3	            0x4898	                                    cdqe	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x40005b5	        0x480145f8	                add qword [rbp - 8], rax	       182	color.c	FUNCTION_10	SWITCH_1	CALL_2
0x40005b9	            0xeb5c	                           jmp 0x4000617	       183	color.c	FUNCTION_10	SWITCH_1
0x40005bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	color.c	FUNCTION_10	SWITCH_1
0x40005bf	         0xfb64007	               movzx eax, byte [rax + 7]	       186	color.c	FUNCTION_10	SWITCH_1
0x40005c3	           0xfb6c8	                           movzx ecx, al	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	color.c	FUNCTION_10	SWITCH_1
0x40005ca	         0xfb64006	               movzx eax, byte [rax + 6]	       186	color.c	FUNCTION_10	SWITCH_1
0x40005ce	        0x440fb6c0	                           movzx r8d, al	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	color.c	FUNCTION_10	SWITCH_1
0x40005d6	         0xfb64005	               movzx eax, byte [rax + 5]	       186	color.c	FUNCTION_10	SWITCH_1
0x40005da	           0xfb6f8	                           movzx edi, al	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005dd	         0xfbe55f0	            movsx edx, byte [rbp - 0x10]	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005e1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005e4	          0x4863f0	                         movsxd rsi, eax	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005eb	        0x4883ec08	                              sub rsp, 8	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005ef	              0x51	                                push rcx	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005f0	          0x4589c1	                            mov r9d, r8d	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005f3	          0x4189f8	                            mov r8d, edi	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005f6	            0x89d1	                            mov ecx, edx	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005f8	      0xba00000000	                              mov edx, 0	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x40005fd	          0x4889c7	                            mov rdi, rax	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x4000600	      0xb800000000	                              mov eax, 0	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x4000605	      0xe800000000	                          call 0x400060a	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x400060a	        0x4883c410	                           add rsp, 0x10	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x400060e	            0x4898	                                    cdqe	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x4000610	        0x480145f8	                add qword [rbp - 8], rax	       185	color.c	FUNCTION_10	SWITCH_1	CALL_3
0x4000614	            0xeb01	                           jmp 0x4000617	       187	color.c	FUNCTION_10	SWITCH_1
0x4000616	              0x90	                                     nop	       174	color.c	FUNCTION_10	SWITCH_1
0x4000617	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	color.c	FUNCTION_10
0x400061b	              0xc9	                                   leave	       190	color.c	FUNCTION_10
0x400061c	              0xc3	                                     ret	       190	color.c	FUNCTION_10
color_print_strbuf	IF,2:CALL,3:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	34
0x4000d49	              0x55	                                push rbp	       376	color.c	FUNCTION_18
0x4000d4a	          0x4889e5	                            mov rbp, rsp	       376	color.c	FUNCTION_18
0x4000d4d	        0x4883ec20	                           sub rsp, 0x20	       376	color.c	FUNCTION_18
0x4000d51	        0x48897df8	                mov qword [rbp - 8], rdi	       376	color.c	FUNCTION_18
0x4000d55	        0x488975f0	             mov qword [rbp - 0x10], rsi	       376	color.c	FUNCTION_18
0x4000d59	        0x488955e8	             mov qword [rbp - 0x18], rdx	       376	color.c	FUNCTION_18
0x4000d5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       377	color.c	FUNCTION_18	IF_1
0x4000d61	           0xfb600	                   movzx eax, byte [rax]	       377	color.c	FUNCTION_18	IF_1
0x4000d64	            0x84c0	                             test al, al	       377	color.c	FUNCTION_18	IF_1
0x4000d66	            0x7413	                            je 0x4000d7b	       377	color.c	FUNCTION_18	IF_1
0x4000d68	        0x488b55f8	                mov rdx, qword [rbp - 8]	       378	color.c	FUNCTION_18	CALL_1
0x4000d6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       378	color.c	FUNCTION_18	CALL_1
0x4000d70	          0x4889d6	                            mov rsi, rdx	       378	color.c	FUNCTION_18	CALL_1
0x4000d73	          0x4889c7	                            mov rdi, rax	       378	color.c	FUNCTION_18	CALL_1
0x4000d76	      0xe800000000	                          call 0x4000d7b	       378	color.c	FUNCTION_18	CALL_1
0x4000d7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       379	color.c	FUNCTION_18	CALL_2
0x4000d7f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       379	color.c	FUNCTION_18	CALL_2
0x4000d83	        0x488b55f8	                mov rdx, qword [rbp - 8]	       379	color.c	FUNCTION_18	CALL_2
0x4000d87	          0x4889d6	                            mov rsi, rdx	       379	color.c	FUNCTION_18	CALL_2
0x4000d8a	          0x4889c7	                            mov rdi, rax	       379	color.c	FUNCTION_18	CALL_2
0x4000d8d	      0xe800000000	                          call 0x4000d92	       379	color.c	FUNCTION_18	CALL_2
0x4000d92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       380	color.c	FUNCTION_18	IF_2
0x4000d96	           0xfb600	                   movzx eax, byte [rax]	       380	color.c	FUNCTION_18	IF_2
0x4000d99	            0x84c0	                             test al, al	       380	color.c	FUNCTION_18	IF_2
0x4000d9b	            0x741b	                            je 0x4000db8	       380	color.c	FUNCTION_18	IF_2
0x4000d9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       381	color.c	FUNCTION_18	CALL_3
0x4000da1	          0x4889c1	                            mov rcx, rax	       381	color.c	FUNCTION_18	CALL_3
0x4000da4	      0xba03000000	                              mov edx, 3	       381	color.c	FUNCTION_18	CALL_3
0x4000da9	      0xbe01000000	                              mov esi, 1	       381	color.c	FUNCTION_18	CALL_3
0x4000dae	      0xbf00000000	                              mov edi, 0	       381	color.c	FUNCTION_18	CALL_3
0x4000db3	      0xe800000000	                          call 0x4000db8	       381	color.c	FUNCTION_18	CALL_3
0x4000db8	              0x90	                                     nop	       382	color.c	FUNCTION_18
0x4000db9	              0xc9	                                   leave	       382	color.c	FUNCTION_18
0x4000dba	              0xc3	                                     ret	       382	color.c	FUNCTION_18
git_color_default_config	IF,1:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	24
0x4000cfa	              0x55	                                push rbp	       368	color.c	FUNCTION_17
0x4000cfb	          0x4889e5	                            mov rbp, rsp	       368	color.c	FUNCTION_17
0x4000cfe	        0x4883ec20	                           sub rsp, 0x20	       368	color.c	FUNCTION_17
0x4000d02	        0x48897df8	                mov qword [rbp - 8], rdi	       368	color.c	FUNCTION_17
0x4000d06	        0x488975f0	             mov qword [rbp - 0x10], rsi	       368	color.c	FUNCTION_17
0x4000d0a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       368	color.c	FUNCTION_17
0x4000d0e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       369	color.c	FUNCTION_17	IF_1	CALL_1
0x4000d12	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       369	color.c	FUNCTION_17	IF_1	CALL_1
0x4000d16	        0x488b45f8	                mov rax, qword [rbp - 8]	       369	color.c	FUNCTION_17	IF_1	CALL_1
0x4000d1a	          0x4889ce	                            mov rsi, rcx	       369	color.c	FUNCTION_17	IF_1	CALL_1
0x4000d1d	          0x4889c7	                            mov rdi, rax	       369	color.c	FUNCTION_17	IF_1	CALL_1
0x4000d20	      0xe800000000	                          call 0x4000d25	       369	color.c	FUNCTION_17	IF_1	CALL_1
0x4000d25	            0x85c0	                           test eax, eax	       369	color.c	FUNCTION_17	IF_1	CALL_1
0x4000d27	            0x7907	                           jns 0x4000d30	       369	color.c	FUNCTION_17	IF_1	CALL_1
0x4000d29	      0xb8ffffffff	                     mov eax, 0xffffffff	       370	color.c	FUNCTION_17	IF_1
0x4000d2e	            0xeb17	                           jmp 0x4000d47	       370	color.c	FUNCTION_17	IF_1
0x4000d30	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       372	color.c	FUNCTION_17	CALL_2
0x4000d34	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       372	color.c	FUNCTION_17	CALL_2
0x4000d38	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	color.c	FUNCTION_17	CALL_2
0x4000d3c	          0x4889ce	                            mov rsi, rcx	       372	color.c	FUNCTION_17	CALL_2
0x4000d3f	          0x4889c7	                            mov rdi, rax	       372	color.c	FUNCTION_17	CALL_2
0x4000d42	      0xe800000000	                          call 0x4000d47	       372	color.c	FUNCTION_17	CALL_2
0x4000d47	              0xc9	                                   leave	       373	color.c	FUNCTION_17
0x4000d48	              0xc3	                                     ret	       373	color.c	FUNCTION_17
color_fprintf_ln	IF,0:CALL,3:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	43
0x4000f59	              0x55	                                push rbp	       410	color.c	FUNCTION_21
0x4000f5a	          0x4889e5	                            mov rbp, rsp	       410	color.c	FUNCTION_21
0x4000f5d	    0x4881ec000100	                          sub rsp, 0x100	       410	color.c	FUNCTION_21
0x4000f64	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       410	color.c	FUNCTION_21
0x4000f6b	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       410	color.c	FUNCTION_21
0x4000f72	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       410	color.c	FUNCTION_21
0x4000f79	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       410	color.c	FUNCTION_21
0x4000f80	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       410	color.c	FUNCTION_21
0x4000f87	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       410	color.c	FUNCTION_21
0x4000f8e	            0x84c0	                             test al, al	       410	color.c	FUNCTION_21
0x4000f90	            0x7420	                            je 0x4000fb2	       410	color.c	FUNCTION_21
0x4000f92	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       410	color.c	FUNCTION_21
0x4000f96	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       410	color.c	FUNCTION_21
0x4000f9a	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       410	color.c	FUNCTION_21
0x4000f9e	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       410	color.c	FUNCTION_21
0x4000fa2	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       410	color.c	FUNCTION_21
0x4000fa6	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       410	color.c	FUNCTION_21
0x4000faa	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       410	color.c	FUNCTION_21
0x4000fae	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       410	color.c	FUNCTION_21
0x4000fb2	    0x64488b042528	                mov rax, qword fs:[0x28]	       410	color.c	FUNCTION_21
0x4000fbb	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       410	color.c	FUNCTION_21
0x4000fc2	            0x31c0	                            xor eax, eax	       410	color.c	FUNCTION_21
0x4000fc4	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       413	color.c	FUNCTION_21	CALL_1
0x4000fce	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       413	color.c	FUNCTION_21	CALL_1
0x4000fd8	        0x488d4510	                   lea rax, [rbp + 0x10]	       413	color.c	FUNCTION_21	CALL_1
0x4000fdc	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       413	color.c	FUNCTION_21	CALL_1
0x4000fe3	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       413	color.c	FUNCTION_21	CALL_1
0x4000fea	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       413	color.c	FUNCTION_21	CALL_1
0x4000ff1	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       414	color.c	FUNCTION_21	CALL_2
0x4000ff8	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	       414	color.c	FUNCTION_21	CALL_2
0x4000fff	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       414	color.c	FUNCTION_21	CALL_2
0x4001006	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       414	color.c	FUNCTION_21	CALL_2
0x400100d	    0x41b800000000	                              mov r8d, 0	       414	color.c	FUNCTION_21	CALL_2
0x4001013	          0x4889c7	                            mov rdi, rax	       414	color.c	FUNCTION_21	CALL_2
0x4001016	      0xe8a0fdffff	                 call sym.color_vfprintf	       414	color.c	FUNCTION_21	CALL_2
0x400101b	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       414	color.c	FUNCTION_21	CALL_2
0x4001021	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       416	color.c	FUNCTION_21
0x4001027	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       417	color.c	FUNCTION_21
0x400102e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       417	color.c	FUNCTION_21
0x4001037	            0x7405	                            je 0x400103e	       417	color.c	FUNCTION_21
0x4001039	      0xe800000000	                          call 0x400103e	       417	color.c	FUNCTION_21
0x400103e	              0xc9	                                   leave	       417	color.c	FUNCTION_21
0x400103f	              0xc3	                                     ret	       417	color.c	FUNCTION_21
check_auto_color	IF,3:CALL,3:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	40
0x4000bd5	              0x55	                                push rbp	       323	color.c	FUNCTION_14
0x4000bd6	          0x4889e5	                            mov rbp, rsp	       323	color.c	FUNCTION_14
0x4000bd9	        0x4883ec20	                           sub rsp, 0x20	       323	color.c	FUNCTION_14
0x4000bdd	          0x897dec	             mov dword [rbp - 0x14], edi	       323	color.c	FUNCTION_14
0x4000be0	        0x837dec01	               cmp dword [rbp - 0x14], 1	       325	color.c	FUNCTION_14
0x4000be4	            0x7507	                           jne 0x4000bed	       325	color.c	FUNCTION_14
0x4000be6	      0xb800000000	                              mov eax, 0	       325	color.c	FUNCTION_14
0x4000beb	            0xeb05	                           jmp 0x4000bf2	       325	color.c	FUNCTION_14
0x4000bed	      0xb800000000	                              mov eax, 0	       325	color.c	FUNCTION_14
0x4000bf2	        0x488945f8	                mov qword [rbp - 8], rax	       325	color.c	FUNCTION_14
0x4000bf6	        0x488b45f8	                mov rax, qword [rbp - 8]	       326	color.c	FUNCTION_14	IF_1
0x4000bfa	            0x8b00	                    mov eax, dword [rax]	       326	color.c	FUNCTION_14	IF_1
0x4000bfc	            0x85c0	                           test eax, eax	       326	color.c	FUNCTION_14	IF_1
0x4000bfe	            0x7912	                           jns 0x4000c12	       326	color.c	FUNCTION_14	IF_1
0x4000c00	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       327	color.c	FUNCTION_14	CALL_1
0x4000c03	            0x89c7	                            mov edi, eax	       327	color.c	FUNCTION_14	CALL_1
0x4000c05	      0xe800000000	                          call 0x4000c0a	       327	color.c	FUNCTION_14	CALL_1
0x4000c0a	            0x89c2	                            mov edx, eax	       327	color.c	FUNCTION_14	CALL_1
0x4000c0c	        0x488b45f8	                mov rax, qword [rbp - 8]	       327	color.c	FUNCTION_14	CALL_1
0x4000c10	            0x8910	                    mov dword [rax], edx	       327	color.c	FUNCTION_14	CALL_1
0x4000c12	        0x488b45f8	                mov rax, qword [rbp - 8]	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c16	            0x8b00	                    mov eax, dword [rax]	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c18	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c1a	            0x7519	                           jne 0x4000c35	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c1c	        0x837dec01	               cmp dword [rbp - 0x14], 1	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c20	            0x7523	                           jne 0x4000c45	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c22	      0xe800000000	                          call 0x4000c27	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c27	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c29	            0x741a	                            je 0x4000c45	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c2b	    0x8b0500000000	            mov eax, dword [0x04000c31] 	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c31	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c33	            0x7410	                            je 0x4000c45	       328	color.c	FUNCTION_14	IF_2	CALL_2
0x4000c35	      0xe800000000	                          call 0x4000c3a	       329	color.c	FUNCTION_14	IF_2	IF_3	CALL_3
0x4000c3a	            0x85c0	                           test eax, eax	       329	color.c	FUNCTION_14	IF_2	IF_3	CALL_3
0x4000c3c	            0x7507	                           jne 0x4000c45	       329	color.c	FUNCTION_14	IF_2	IF_3	CALL_3
0x4000c3e	      0xb801000000	                              mov eax, 1	       330	color.c	FUNCTION_14	IF_2	IF_3
0x4000c43	            0xeb05	                           jmp 0x4000c4a	       330	color.c	FUNCTION_14	IF_2	IF_3
0x4000c45	      0xb800000000	                              mov eax, 0	       332	color.c	FUNCTION_14
0x4000c4a	              0xc9	                                   leave	       333	color.c	FUNCTION_14
0x4000c4b	              0xc3	                                     ret	       333	color.c	FUNCTION_14
color_parse_mem	IF,13:CALL,12:SWITCH,0:ELSE,1:FOR,1:functions,0:WHILE,4:DO,0	322
0x4000636	              0x55	                                push rbp	       198	color.c	FUNCTION_12
0x4000637	          0x4889e5	                            mov rbp, rsp	       198	color.c	FUNCTION_12
0x400063a	    0x4881ec900000	                           sub rsp, 0x90	       198	color.c	FUNCTION_12
0x4000641	        0x48897d88	             mov qword [rbp - 0x78], rdi	       198	color.c	FUNCTION_12
0x4000645	          0x897584	             mov dword [rbp - 0x7c], esi	       198	color.c	FUNCTION_12
0x4000648	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       198	color.c	FUNCTION_12
0x400064f	    0x64488b042528	                mov rax, qword fs:[0x28]	       198	color.c	FUNCTION_12
0x4000658	        0x488945f8	                mov qword [rbp - 8], rax	       198	color.c	FUNCTION_12
0x400065c	            0x31c0	                            xor eax, eax	       198	color.c	FUNCTION_12
0x400065e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       199	color.c	FUNCTION_12
0x4000662	        0x488945e0	             mov qword [rbp - 0x20], rax	       199	color.c	FUNCTION_12
0x4000666	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       200	color.c	FUNCTION_12
0x4000669	          0x894594	             mov dword [rbp - 0x6c], eax	       200	color.c	FUNCTION_12
0x400066c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       201	color.c	FUNCTION_12
0x4000673	        0x4883c04b	                           add rax, 0x4b	       201	color.c	FUNCTION_12
0x4000677	        0x488945e8	             mov qword [rbp - 0x18], rax	       201	color.c	FUNCTION_12
0x400067b	    0xc74598000000	               mov dword [rbp - 0x68], 0	       202	color.c	FUNCTION_12
0x4000682	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       203	color.c	FUNCTION_12
0x400068a	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       204	color.c	FUNCTION_12
0x4000692	            0xeb09	                           jmp 0x400069d	       206	color.c	FUNCTION_12	WHILE_1
0x4000694	      0x488345e001	               add qword [rbp - 0x20], 1	       207	color.c	FUNCTION_12	WHILE_1
0x4000699	        0x836d9401	               sub dword [rbp - 0x6c], 1	       208	color.c	FUNCTION_12	WHILE_1
0x400069d	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       206	color.c	FUNCTION_12	WHILE_1
0x40006a1	            0x7e1d	                           jle 0x40006c0	       206	color.c	FUNCTION_12	WHILE_1
0x40006a3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       206	color.c	FUNCTION_12	WHILE_1
0x40006a7	           0xfb600	                   movzx eax, byte [rax]	       206	color.c	FUNCTION_12	WHILE_1
0x40006aa	           0xfb6c0	                           movzx eax, al	       206	color.c	FUNCTION_12	WHILE_1
0x40006ad	            0x4898	                                    cdqe	       206	color.c	FUNCTION_12	WHILE_1
0x40006af	     0xfb680000000	                   movzx eax, byte [rax]	       206	color.c	FUNCTION_12	WHILE_1
0x40006b6	           0xfb6c0	                           movzx eax, al	       206	color.c	FUNCTION_12	WHILE_1
0x40006b9	          0x83e001	                              and eax, 1	       206	color.c	FUNCTION_12	WHILE_1
0x40006bc	            0x85c0	                           test eax, eax	       206	color.c	FUNCTION_12	WHILE_1
0x40006be	            0x75d4	                           jne 0x4000694	       206	color.c	FUNCTION_12	WHILE_1
0x40006c0	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       211	color.c	FUNCTION_12	IF_1
0x40006c4	            0x7514	                           jne 0x40006da	       211	color.c	FUNCTION_12	IF_1
0x40006c6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       212	color.c	FUNCTION_12	IF_1
0x40006cd	          0xc60000	                       mov byte [rax], 0	       212	color.c	FUNCTION_12	IF_1
0x40006d0	      0xb800000000	                              mov eax, 0	       213	color.c	FUNCTION_12	IF_1
0x40006d5	      0xe947040000	                           jmp 0x4000b21	       213	color.c	FUNCTION_12	IF_1
0x40006da	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       216	color.c	FUNCTION_12	IF_2	CALL_1
0x40006dd	          0x4863d0	                         movsxd rdx, eax	       216	color.c	FUNCTION_12	IF_2	CALL_1
0x40006e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       216	color.c	FUNCTION_12	IF_2	CALL_1
0x40006e4	      0xbe00000000	                              mov esi, 0	       216	color.c	FUNCTION_12	IF_2	CALL_1
0x40006e9	          0x4889c7	                            mov rdi, rax	       216	color.c	FUNCTION_12	IF_2	CALL_1
0x40006ec	      0xe800000000	                          call 0x40006f1	       216	color.c	FUNCTION_12	IF_2	CALL_1
0x40006f1	            0x85c0	                           test eax, eax	       216	color.c	FUNCTION_12	IF_2	CALL_1
0x40006f3	     0xf8539010000	                           jne 0x4000832	       216	color.c	FUNCTION_12	IF_2	CALL_1
0x40006f9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x40006fd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x4000704	          0x4829c2	                            sub rdx, rax	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x4000707	          0x4889d0	                            mov rax, rdx	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x400070a	          0x4889c1	                            mov rcx, rax	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x400070d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x4000714	      0xba00000000	                              mov edx, 0	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x4000719	          0x4889ce	                            mov rsi, rcx	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x400071c	          0x4889c7	                            mov rdi, rax	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x400071f	      0xb800000000	                              mov eax, 0	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x4000724	      0xe800000000	                          call 0x4000729	       217	color.c	FUNCTION_12	IF_2	CALL_2
0x4000729	      0xb800000000	                              mov eax, 0	       218	color.c	FUNCTION_12	IF_2
0x400072e	      0xe9ee030000	                           jmp 0x4000b21	       218	color.c	FUNCTION_12	IF_2
0x4000733	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       223	color.c	FUNCTION_12	WHILE_2
0x4000737	        0x488945f0	             mov qword [rbp - 0x10], rax	       223	color.c	FUNCTION_12	WHILE_2
0x400073b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       224	color.c	FUNCTION_12	WHILE_2
0x4000743	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       225	color.c	FUNCTION_12	WHILE_2
0x400074a	            0xeb08	                           jmp 0x4000754	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x400074c	        0x83459c01	               add dword [rbp - 0x64], 1	       228	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000750	        0x836d9401	               sub dword [rbp - 0x6c], 1	       229	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000754	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000758	            0x7e26	                           jle 0x4000780	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x400075a	          0x8b459c	             mov eax, dword [rbp - 0x64]	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x400075d	          0x4863d0	                         movsxd rdx, eax	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000760	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000764	          0x4801d0	                            add rax, rdx	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000767	           0xfb600	                   movzx eax, byte [rax]	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x400076a	           0xfb6c0	                           movzx eax, al	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x400076d	            0x4898	                                    cdqe	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x400076f	     0xfb680000000	                   movzx eax, byte [rax]	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000776	           0xfb6c0	                           movzx eax, al	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000779	          0x83e001	                              and eax, 1	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x400077c	            0x85c0	                           test eax, eax	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x400077e	            0x74cc	                            je 0x400074c	       227	color.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000780	          0x8b459c	             mov eax, dword [rbp - 0x64]	       232	color.c	FUNCTION_12	WHILE_2
0x4000783	          0x4863d0	                         movsxd rdx, eax	       232	color.c	FUNCTION_12	WHILE_2
0x4000786	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       232	color.c	FUNCTION_12	WHILE_2
0x400078a	          0x4801d0	                            add rax, rdx	       232	color.c	FUNCTION_12	WHILE_2
0x400078d	        0x488945e0	             mov qword [rbp - 0x20], rax	       232	color.c	FUNCTION_12	WHILE_2
0x4000791	            0xeb09	                           jmp 0x400079c	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x4000793	      0x488345e001	               add qword [rbp - 0x20], 1	       234	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x4000798	        0x836d9401	               sub dword [rbp - 0x6c], 1	       235	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x400079c	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007a0	            0x7e1d	                           jle 0x40007bf	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007a6	           0xfb600	                   movzx eax, byte [rax]	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007a9	           0xfb6c0	                           movzx eax, al	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007ac	            0x4898	                                    cdqe	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007ae	     0xfb680000000	                   movzx eax, byte [rax]	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007b5	           0xfb6c0	                           movzx eax, al	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007b8	          0x83e001	                              and eax, 1	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007bb	            0x85c0	                           test eax, eax	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007bd	            0x75d4	                           jne 0x4000793	       233	color.c	FUNCTION_12	WHILE_2	WHILE_4
0x40007bf	          0x8b559c	             mov edx, dword [rbp - 0x64]	       238	color.c	FUNCTION_12	WHILE_2	IF_3	CALL_3
0x40007c2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       238	color.c	FUNCTION_12	WHILE_2	IF_3	CALL_3
0x40007c6	        0x488d45d0	                   lea rax, [rbp - 0x30]	       238	color.c	FUNCTION_12	WHILE_2	IF_3	CALL_3
0x40007ca	          0x4889ce	                            mov rsi, rcx	       238	color.c	FUNCTION_12	WHILE_2	IF_3	CALL_3
0x40007cd	          0x4889c7	                            mov rdi, rax	       238	color.c	FUNCTION_12	WHILE_2	IF_3	CALL_3
0x40007d0	      0xe8faf9ffff	                    call sym.parse_color	       238	color.c	FUNCTION_12	WHILE_2	IF_3	CALL_3
0x40007d5	            0x85c0	                           test eax, eax	       238	color.c	FUNCTION_12	WHILE_2	IF_3	CALL_3
0x40007d7	            0x7526	                           jne 0x40007ff	       238	color.c	FUNCTION_12	WHILE_2	IF_3	CALL_3
0x40007d9	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       239	color.c	FUNCTION_12	WHILE_2	IF_3	IF_4
0x40007dc	            0x85c0	                           test eax, eax	       239	color.c	FUNCTION_12	WHILE_2	IF_3	IF_4
0x40007de	            0x750a	                           jne 0x40007ea	       239	color.c	FUNCTION_12	WHILE_2	IF_3	IF_4
0x40007e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       240	color.c	FUNCTION_12	WHILE_2	IF_3	IF_4
0x40007e4	        0x488945b0	             mov qword [rbp - 0x50], rax	       240	color.c	FUNCTION_12	WHILE_2	IF_3	IF_4
0x40007e8	            0xeb48	                           jmp 0x4000832	       241	color.c	FUNCTION_12	WHILE_2	IF_3	IF_4
0x40007ea	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       243	color.c	FUNCTION_12	WHILE_2	IF_3	IF_5
0x40007ed	            0x85c0	                           test eax, eax	       243	color.c	FUNCTION_12	WHILE_2	IF_3	IF_5
0x40007ef	     0xf8500030000	                           jne 0x4000af5	       243	color.c	FUNCTION_12	WHILE_2	IF_3	IF_5
0x40007f5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       244	color.c	FUNCTION_12	WHILE_2	IF_3	IF_5
0x40007f9	        0x488945c0	             mov qword [rbp - 0x40], rax	       244	color.c	FUNCTION_12	WHILE_2	IF_3	IF_5
0x40007fd	            0xeb33	                           jmp 0x4000832	       245	color.c	FUNCTION_12	WHILE_2	IF_3	IF_5
0x40007ff	          0x8b459c	             mov eax, dword [rbp - 0x64]	       249	color.c	FUNCTION_12	WHILE_2	CALL_4
0x4000802	          0x4863d0	                         movsxd rdx, eax	       249	color.c	FUNCTION_12	WHILE_2	CALL_4
0x4000805	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       249	color.c	FUNCTION_12	WHILE_2	CALL_4
0x4000809	          0x4889d6	                            mov rsi, rdx	       249	color.c	FUNCTION_12	WHILE_2	CALL_4
0x400080c	          0x4889c7	                            mov rdi, rax	       249	color.c	FUNCTION_12	WHILE_2	CALL_4
0x400080f	      0xe89ffbffff	                     call sym.parse_attr	       249	color.c	FUNCTION_12	WHILE_2	CALL_4
0x4000814	          0x8945a8	             mov dword [rbp - 0x58], eax	       249	color.c	FUNCTION_12	WHILE_2	CALL_4
0x4000817	        0x837da800	               cmp dword [rbp - 0x58], 0	       250	color.c	FUNCTION_12	WHILE_2	IF_6
0x400081b	     0xf88d7020000	                            js 0x4000af8	       250	color.c	FUNCTION_12	WHILE_2	IF_6
0x4000821	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       251	color.c	FUNCTION_12	WHILE_2	IF_6
0x4000824	      0xba01000000	                              mov edx, 1	       251	color.c	FUNCTION_12	WHILE_2	IF_6
0x4000829	            0x89c1	                            mov ecx, eax	       251	color.c	FUNCTION_12	WHILE_2	IF_6
0x400082b	            0xd3e2	                             shl edx, cl	       251	color.c	FUNCTION_12	WHILE_2	IF_6
0x400082d	            0x89d0	                            mov eax, edx	       251	color.c	FUNCTION_12	WHILE_2	IF_6
0x400082f	           0x94598	              or dword [rbp - 0x68], eax	       251	color.c	FUNCTION_12	WHILE_2	IF_6
0x4000832	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       222	color.c	FUNCTION_12	WHILE_2
0x4000836	     0xf8ff7feffff	                            jg 0x4000733	       222	color.c	FUNCTION_12	WHILE_2
0x400083c	        0x837d9800	               cmp dword [rbp - 0x68], 0	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x4000840	            0x7524	                           jne 0x4000866	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x4000842	        0x488d45b0	                   lea rax, [rbp - 0x50]	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x4000846	          0x4889c7	                            mov rdi, rax	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x4000849	      0xe8cffdffff	                    call sym.color_empty	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x400084e	            0x85c0	                           test eax, eax	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x4000850	            0x7414	                            je 0x4000866	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x4000852	        0x488d45c0	                   lea rax, [rbp - 0x40]	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x4000856	          0x4889c7	                            mov rdi, rax	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x4000859	      0xe8bffdffff	                    call sym.color_empty	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x400085e	            0x85c0	                           test eax, eax	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x4000860	     0xf8557020000	                           jne 0x4000abd	       263	color.c	FUNCTION_12	ELSE_1	IF_7	CALL_6
0x4000866	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       264	color.c	FUNCTION_12	ELSE_1	IF_7
0x400086d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       267	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000874	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       267	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000878	            0x750f	                           jne 0x4000889	       267	color.c	FUNCTION_12	ELSE_1	IF_7
0x400087a	      0xbf00000000	                              mov edi, 0	       267	color.c	FUNCTION_12	ELSE_1	IF_7
0x400087f	      0xb800000000	                              mov eax, 0	       267	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000884	      0xe800000000	                          call 0x4000889	       267	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000889	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       267	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000890	        0x488d5001	                      lea rdx, [rax + 1]	       267	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000894	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       267	color.c	FUNCTION_12	ELSE_1	IF_7
0x400089b	          0xc6001b	                    mov byte [rax], 0x1b	       267	color.c	FUNCTION_12	ELSE_1	IF_7
0x400089e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       268	color.c	FUNCTION_12	ELSE_1	IF_7
0x40008a5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       268	color.c	FUNCTION_12	ELSE_1	IF_7
0x40008a9	            0x750f	                           jne 0x40008ba	       268	color.c	FUNCTION_12	ELSE_1	IF_7
0x40008ab	      0xbf00000000	                              mov edi, 0	       268	color.c	FUNCTION_12	ELSE_1	IF_7
0x40008b0	      0xb800000000	                              mov eax, 0	       268	color.c	FUNCTION_12	ELSE_1	IF_7
0x40008b5	      0xe800000000	                          call 0x40008ba	       268	color.c	FUNCTION_12	ELSE_1	IF_7
0x40008ba	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       268	color.c	FUNCTION_12	ELSE_1	IF_7
0x40008c1	        0x488d5001	                      lea rdx, [rax + 1]	       268	color.c	FUNCTION_12	ELSE_1	IF_7
0x40008c5	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       268	color.c	FUNCTION_12	ELSE_1	IF_7
0x40008cc	          0xc6005b	                    mov byte [rax], 0x5b	       268	color.c	FUNCTION_12	ELSE_1	IF_7
0x40008cf	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       270	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x40008d6	      0xe9a7000000	                           jmp 0x4000982	       270	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x40008db	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       271	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x40008de	      0xba01000000	                              mov edx, 1	       271	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x40008e3	            0x89c1	                            mov ecx, eax	       271	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x40008e5	            0xd3e2	                             shl edx, cl	       271	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x40008e7	            0x89d0	                            mov eax, edx	       271	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x40008e9	          0x8945ac	             mov dword [rbp - 0x54], eax	       271	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x40008ec	          0x8b4598	             mov eax, dword [rbp - 0x68]	       272	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_8
0x40008ef	          0x2345ac	             and eax, dword [rbp - 0x54]	       272	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_8
0x40008f2	            0x85c0	                           test eax, eax	       272	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_8
0x40008f4	     0xf8483000000	                            je 0x400097d	       272	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_8
0x40008fa	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       274	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x40008fd	            0xf7d0	                                 not eax	       274	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x40008ff	          0x214598	             and dword [rbp - 0x68], eax	       274	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x4000902	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       275	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x4000905	          0x8d5001	                      lea edx, [rax + 1]	       275	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x4000908	          0x8955a0	             mov dword [rbp - 0x60], edx	       275	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x400090b	            0x85c0	                           test eax, eax	       275	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x400090d	            0x7431	                            je 0x4000940	       275	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x400090f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       276	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x4000916	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       276	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x400091a	            0x750f	                           jne 0x400092b	       276	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x400091c	      0xbf00000000	                              mov edi, 0	       276	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x4000921	      0xb800000000	                              mov eax, 0	       276	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x4000926	      0xe800000000	                          call 0x400092b	       276	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x400092b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       276	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x4000932	        0x488d5001	                      lea rdx, [rax + 1]	       276	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x4000936	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       276	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x400093d	          0xc6003b	                    mov byte [rax], 0x3b	       276	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_9
0x4000940	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x4000944	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x400094b	          0x4829c2	                            sub rdx, rax	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x400094e	          0x4889d0	                            mov rax, rdx	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x4000951	          0x4889c6	                            mov rsi, rax	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x4000954	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x4000957	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x400095e	            0x89d1	                            mov ecx, edx	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x4000960	      0xba00000000	                              mov edx, 0	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x4000965	          0x4889c7	                            mov rdi, rax	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x4000968	      0xb800000000	                              mov eax, 0	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x400096d	      0xe800000000	                          call 0x4000972	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x4000972	            0x4898	                                    cdqe	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x4000974	    0x48018578ffff	            add qword [rbp - 0x88], rax 	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x400097b	            0xeb01	                           jmp 0x400097e	       277	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	CALL_7
0x400097d	              0x90	                                     nop	       273	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1	IF_8
0x400097e	        0x8345a401	               add dword [rbp - 0x5c], 1	       270	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x4000982	        0x837d9800	               cmp dword [rbp - 0x68], 0	       270	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x4000986	     0xf854fffffff	                           jne 0x40008db	       270	color.c	FUNCTION_12	ELSE_1	IF_7	FOR_1
0x400098c	        0x488d45b0	                   lea rax, [rbp - 0x50]	       279	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_8
0x4000990	          0x4889c7	                            mov rdi, rax	       279	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_8
0x4000993	      0xe885fcffff	                    call sym.color_empty	       279	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_8
0x4000998	            0x85c0	                           test eax, eax	       279	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_8
0x400099a	            0x7570	                           jne 0x4000a0c	       279	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_8
0x400099c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       280	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x400099f	          0x8d5001	                      lea edx, [rax + 1]	       280	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009a2	          0x8955a0	             mov dword [rbp - 0x60], edx	       280	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009a5	            0x85c0	                           test eax, eax	       280	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009a7	            0x7431	                            je 0x40009da	       280	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009a9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       281	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009b0	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       281	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009b4	            0x750f	                           jne 0x40009c5	       281	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009b6	      0xbf00000000	                              mov edi, 0	       281	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009bb	      0xb800000000	                              mov eax, 0	       281	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009c0	      0xe800000000	                          call 0x40009c5	       281	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009c5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       281	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009cc	        0x488d5001	                      lea rdx, [rax + 1]	       281	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009d0	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       281	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009d7	          0xc6003b	                    mov byte [rax], 0x3b	       281	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	IF_11
0x40009da	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x40009de	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x40009e5	          0x4829c2	                            sub rdx, rax	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x40009e8	          0x4889d0	                            mov rax, rdx	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x40009eb	            0x89c6	                            mov esi, eax	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x40009ed	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x40009f1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x40009f8	      0xb933000000	                           mov ecx, 0x33	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x40009fd	          0x4889c7	                            mov rdi, rax	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x4000a00	      0xe806fbffff	                   call sym.color_output	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x4000a05	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       283	color.c	FUNCTION_12	ELSE_1	IF_7	IF_10	CALL_9
0x4000a0c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       285	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_10
0x4000a10	          0x4889c7	                            mov rdi, rax	       285	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_10
0x4000a13	      0xe805fcffff	                    call sym.color_empty	       285	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_10
0x4000a18	            0x85c0	                           test eax, eax	       285	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_10
0x4000a1a	            0x7570	                           jne 0x4000a8c	       285	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_10
0x4000a1c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       286	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a1f	          0x8d5001	                      lea edx, [rax + 1]	       286	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a22	          0x8955a0	             mov dword [rbp - 0x60], edx	       286	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a25	            0x85c0	                           test eax, eax	       286	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a27	            0x7431	                            je 0x4000a5a	       286	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a29	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       287	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a30	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       287	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a34	            0x750f	                           jne 0x4000a45	       287	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a36	      0xbf00000000	                              mov edi, 0	       287	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a3b	      0xb800000000	                              mov eax, 0	       287	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a40	      0xe800000000	                          call 0x4000a45	       287	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a45	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       287	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a4c	        0x488d5001	                      lea rdx, [rax + 1]	       287	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a50	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       287	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a57	          0xc6003b	                    mov byte [rax], 0x3b	       287	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	IF_13
0x4000a5a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a5e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a65	          0x4829c2	                            sub rdx, rax	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a68	          0x4889d0	                            mov rax, rdx	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a6b	            0x89c6	                            mov esi, eax	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a6d	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a71	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a78	      0xb934000000	                           mov ecx, 0x34	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a7d	          0x4889c7	                            mov rdi, rax	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a80	      0xe886faffff	                   call sym.color_output	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a85	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       289	color.c	FUNCTION_12	ELSE_1	IF_7	IF_12	CALL_11
0x4000a8c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       291	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000a93	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       291	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000a97	            0x750f	                           jne 0x4000aa8	       291	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000a99	      0xbf00000000	                              mov edi, 0	       291	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000a9e	      0xb800000000	                              mov eax, 0	       291	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000aa3	      0xe800000000	                          call 0x4000aa8	       291	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000aa8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       291	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000aaf	        0x488d5001	                      lea rdx, [rax + 1]	       291	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000ab3	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       291	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000aba	          0xc6006d	                    mov byte [rax], 0x6d	       291	color.c	FUNCTION_12	ELSE_1	IF_7
0x4000abd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       293	color.c	FUNCTION_12
0x4000ac4	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       293	color.c	FUNCTION_12
0x4000ac8	            0x750f	                           jne 0x4000ad9	       293	color.c	FUNCTION_12
0x4000aca	      0xbf00000000	                              mov edi, 0	       293	color.c	FUNCTION_12
0x4000acf	      0xb800000000	                              mov eax, 0	       293	color.c	FUNCTION_12
0x4000ad4	      0xe800000000	                          call 0x4000ad9	       293	color.c	FUNCTION_12
0x4000ad9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       293	color.c	FUNCTION_12
0x4000ae0	        0x488d5001	                      lea rdx, [rax + 1]	       293	color.c	FUNCTION_12
0x4000ae4	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       293	color.c	FUNCTION_12
0x4000aeb	          0xc60000	                       mov byte [rax], 0	       293	color.c	FUNCTION_12
0x4000aee	      0xb800000000	                              mov eax, 0	       294	color.c	FUNCTION_12
0x4000af3	            0xeb2c	                           jmp 0x4000b21	       294	color.c	FUNCTION_12
0x4000af5	              0x90	                                     nop	       247	color.c	FUNCTION_12	WHILE_2	IF_3
0x4000af6	            0xeb01	                           jmp 0x4000af9	       247	color.c	FUNCTION_12	WHILE_2	IF_3
0x4000af8	              0x90	                                     nop	       253	color.c	FUNCTION_12	WHILE_2	ELSE_1
0x4000af9	      0xbf00000000	                              mov edi, 0	       296	color.c	FUNCTION_12	CALL_12
0x4000afe	      0xe8cbf5ffff	                               call sym.	       296	color.c	FUNCTION_12	CALL_12
0x4000b03	          0x4889c1	                            mov rcx, rax	       296	color.c	FUNCTION_12	CALL_12
0x4000b06	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       296	color.c	FUNCTION_12	CALL_12
0x4000b0a	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       296	color.c	FUNCTION_12	CALL_12
0x4000b0d	            0x89c6	                            mov esi, eax	       296	color.c	FUNCTION_12	CALL_12
0x4000b0f	          0x4889cf	                            mov rdi, rcx	       296	color.c	FUNCTION_12	CALL_12
0x4000b12	      0xb800000000	                              mov eax, 0	       296	color.c	FUNCTION_12	CALL_12
0x4000b17	      0xe800000000	                          call 0x4000b1c	       296	color.c	FUNCTION_12	CALL_12
0x4000b1c	      0xe81ff5ffff	                    call sym.const_error	       296	color.c	FUNCTION_12	CALL_12
0x4000b21	        0x488b4df8	                mov rcx, qword [rbp - 8]	       298	color.c	FUNCTION_12
0x4000b25	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       298	color.c	FUNCTION_12
0x4000b2e	            0x7405	                            je 0x4000b35	       298	color.c	FUNCTION_12
0x4000b30	      0xe800000000	                          call 0x4000b35	       298	color.c	FUNCTION_12
0x4000b35	              0xc9	                                   leave	       298	color.c	FUNCTION_12
0x4000b36	              0xc3	                                     ret	       298	color.c	FUNCTION_12
git_config_colorbool	IF,6:CALL,4:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	47
0x4000b37	              0x55	                                push rbp	       301	color.c	FUNCTION_13
0x4000b38	          0x4889e5	                            mov rbp, rsp	       301	color.c	FUNCTION_13
0x4000b3b	        0x4883ec10	                           sub rsp, 0x10	       301	color.c	FUNCTION_13
0x4000b3f	        0x48897df8	                mov qword [rbp - 8], rdi	       301	color.c	FUNCTION_13
0x4000b43	        0x488975f0	             mov qword [rbp - 0x10], rsi	       301	color.c	FUNCTION_13
0x4000b47	      0x48837df000	               cmp qword [rbp - 0x10], 0	       302	color.c	FUNCTION_13	IF_1
0x4000b4c	            0x7454	                            je 0x4000ba2	       302	color.c	FUNCTION_13	IF_1
0x4000b4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       303	color.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000b52	      0xbe00000000	                              mov esi, 0	       303	color.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000b57	          0x4889c7	                            mov rdi, rax	       303	color.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000b5a	      0xe800000000	                          call 0x4000b5f	       303	color.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000b5f	            0x85c0	                           test eax, eax	       303	color.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000b61	            0x7507	                           jne 0x4000b6a	       303	color.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000b63	      0xb800000000	                              mov eax, 0	       304	color.c	FUNCTION_13	IF_1	IF_2
0x4000b68	            0xeb69	                           jmp 0x4000bd3	       304	color.c	FUNCTION_13	IF_1	IF_2
0x4000b6a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       305	color.c	FUNCTION_13	IF_1	IF_3	CALL_2
0x4000b6e	      0xbe00000000	                              mov esi, 0	       305	color.c	FUNCTION_13	IF_1	IF_3	CALL_2
0x4000b73	          0x4889c7	                            mov rdi, rax	       305	color.c	FUNCTION_13	IF_1	IF_3	CALL_2
0x4000b76	      0xe800000000	                          call 0x4000b7b	       305	color.c	FUNCTION_13	IF_1	IF_3	CALL_2
0x4000b7b	            0x85c0	                           test eax, eax	       305	color.c	FUNCTION_13	IF_1	IF_3	CALL_2
0x4000b7d	            0x7507	                           jne 0x4000b86	       305	color.c	FUNCTION_13	IF_1	IF_3	CALL_2
0x4000b7f	      0xb801000000	                              mov eax, 1	       306	color.c	FUNCTION_13	IF_1	IF_3
0x4000b84	            0xeb4d	                           jmp 0x4000bd3	       306	color.c	FUNCTION_13	IF_1	IF_3
0x4000b86	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       307	color.c	FUNCTION_13	IF_1	IF_4	CALL_3
0x4000b8a	      0xbe00000000	                              mov esi, 0	       307	color.c	FUNCTION_13	IF_1	IF_4	CALL_3
0x4000b8f	          0x4889c7	                            mov rdi, rax	       307	color.c	FUNCTION_13	IF_1	IF_4	CALL_3
0x4000b92	      0xe800000000	                          call 0x4000b97	       307	color.c	FUNCTION_13	IF_1	IF_4	CALL_3
0x4000b97	            0x85c0	                           test eax, eax	       307	color.c	FUNCTION_13	IF_1	IF_4	CALL_3
0x4000b99	            0x7507	                           jne 0x4000ba2	       307	color.c	FUNCTION_13	IF_1	IF_4	CALL_3
0x4000b9b	      0xb802000000	                              mov eax, 2	       308	color.c	FUNCTION_13	IF_1	IF_4
0x4000ba0	            0xeb31	                           jmp 0x4000bd3	       308	color.c	FUNCTION_13	IF_1	IF_4
0x4000ba2	      0x48837df800	                  cmp qword [rbp - 8], 0	       311	color.c	FUNCTION_13	IF_5
0x4000ba7	            0x7507	                           jne 0x4000bb0	       311	color.c	FUNCTION_13	IF_5
0x4000ba9	      0xb8ffffffff	                     mov eax, 0xffffffff	       312	color.c	FUNCTION_13	IF_5
0x4000bae	            0xeb23	                           jmp 0x4000bd3	       312	color.c	FUNCTION_13	IF_5
0x4000bb0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       315	color.c	FUNCTION_13	IF_6	CALL_4
0x4000bb4	        0x488b45f8	                mov rax, qword [rbp - 8]	       315	color.c	FUNCTION_13	IF_6	CALL_4
0x4000bb8	          0x4889d6	                            mov rsi, rdx	       315	color.c	FUNCTION_13	IF_6	CALL_4
0x4000bbb	          0x4889c7	                            mov rdi, rax	       315	color.c	FUNCTION_13	IF_6	CALL_4
0x4000bbe	      0xe800000000	                          call 0x4000bc3	       315	color.c	FUNCTION_13	IF_6	CALL_4
0x4000bc3	            0x85c0	                           test eax, eax	       315	color.c	FUNCTION_13	IF_6	CALL_4
0x4000bc5	            0x7507	                           jne 0x4000bce	       315	color.c	FUNCTION_13	IF_6	CALL_4
0x4000bc7	      0xb800000000	                              mov eax, 0	       316	color.c	FUNCTION_13	IF_6
0x4000bcc	            0xeb05	                           jmp 0x4000bd3	       316	color.c	FUNCTION_13	IF_6
0x4000bce	      0xb802000000	                              mov eax, 2	       319	color.c	FUNCTION_13
0x4000bd3	              0xc9	                                   leave	       320	color.c	FUNCTION_13
0x4000bd4	              0xc3	                                     ret	       320	color.c	FUNCTION_13
parse_color	IF,9:CALL,6:SWITCH,0:ELSE,3:FOR,1:functions,0:WHILE,0:DO,0	132
0x40001cf	              0x55	                                push rbp	        65	color.c	FUNCTION_7
0x40001d0	          0x4889e5	                            mov rbp, rsp	        65	color.c	FUNCTION_7
0x40001d3	        0x4883ec40	                           sub rsp, 0x40	        65	color.c	FUNCTION_7
0x40001d7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        65	color.c	FUNCTION_7
0x40001db	        0x488975d0	             mov qword [rbp - 0x30], rsi	        65	color.c	FUNCTION_7
0x40001df	          0x8955cc	             mov dword [rbp - 0x34], edx	        65	color.c	FUNCTION_7
0x40001e2	    0x64488b042528	                mov rax, qword fs:[0x28]	        65	color.c	FUNCTION_7
0x40001eb	        0x488945f8	                mov qword [rbp - 8], rax	        65	color.c	FUNCTION_7
0x40001ef	            0x31c0	                            xor eax, eax	        65	color.c	FUNCTION_7
0x40001f1	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	        76	color.c	FUNCTION_7	IF_1	CALL_1
0x40001f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        76	color.c	FUNCTION_7	IF_1	CALL_1
0x40001f8	      0xba00000000	                              mov edx, 0	        76	color.c	FUNCTION_7	IF_1	CALL_1
0x40001fd	            0x89ce	                            mov esi, ecx	        76	color.c	FUNCTION_7	IF_1	CALL_1
0x40001ff	          0x4889c7	                            mov rdi, rax	        76	color.c	FUNCTION_7	IF_1	CALL_1
0x4000202	      0xe80effffff	                     call sym.match_word	        76	color.c	FUNCTION_7	IF_1	CALL_1
0x4000207	            0x85c0	                           test eax, eax	        76	color.c	FUNCTION_7	IF_1	CALL_1
0x4000209	            0x7414	                            je 0x400021f	        76	color.c	FUNCTION_7	IF_1	CALL_1
0x400020b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        77	color.c	FUNCTION_7	IF_1
0x400020f	    0xc70001000000	                      mov dword [rax], 1	        77	color.c	FUNCTION_7	IF_1
0x4000215	      0xb800000000	                              mov eax, 0	        78	color.c	FUNCTION_7	IF_1
0x400021a	      0xe97e010000	                           jmp 0x400039d	        78	color.c	FUNCTION_7	IF_1
0x400021f	        0x837dcc07	               cmp dword [rbp - 0x34], 7	        82	color.c	FUNCTION_7	IF_2
0x4000223	            0x757c	                           jne 0x40002a1	        82	color.c	FUNCTION_7	IF_2
0x4000225	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        82	color.c	FUNCTION_7	IF_2
0x4000229	           0xfb600	                   movzx eax, byte [rax]	        82	color.c	FUNCTION_7	IF_2
0x400022c	            0x3c23	                            cmp al, 0x23	        82	color.c	FUNCTION_7	IF_2
0x400022e	            0x7571	                           jne 0x40002a1	        82	color.c	FUNCTION_7	IF_2
0x4000230	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x4000234	        0x488d5005	                      lea rdx, [rax + 5]	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x4000238	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x400023c	        0x4883c001	                              add rax, 1	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x4000240	          0x4889d6	                            mov rsi, rdx	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x4000243	          0x4889c7	                            mov rdi, rax	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x4000246	      0xe81cffffff	                  call sym.get_hex_color	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x400024b	            0x85c0	                           test eax, eax	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x400024d	            0x7552	                           jne 0x40002a1	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x400024f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	color.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x4000253	        0x488d5006	                      lea rdx, [rax + 6]	        84	color.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x4000257	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        84	color.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x400025b	        0x4883c003	                              add rax, 3	        84	color.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x400025f	          0x4889d6	                            mov rsi, rdx	        84	color.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x4000262	          0x4889c7	                            mov rdi, rax	        84	color.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x4000265	      0xe8fdfeffff	                  call sym.get_hex_color	        84	color.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x400026a	            0x85c0	                           test eax, eax	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x400026c	            0x7533	                           jne 0x40002a1	        83	color.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x400026e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	color.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x4000272	        0x488d5007	                      lea rdx, [rax + 7]	        85	color.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x4000276	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        85	color.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x400027a	        0x4883c005	                              add rax, 5	        85	color.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x400027e	          0x4889d6	                            mov rsi, rdx	        85	color.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x4000281	          0x4889c7	                            mov rdi, rax	        85	color.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x4000284	      0xe8defeffff	                  call sym.get_hex_color	        85	color.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x4000289	            0x85c0	                           test eax, eax	        84	color.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x400028b	            0x7514	                           jne 0x40002a1	        84	color.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x400028d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	color.c	FUNCTION_7	IF_2	IF_3
0x4000291	    0xc70004000000	                      mov dword [rax], 4	        86	color.c	FUNCTION_7	IF_2	IF_3
0x4000297	      0xb800000000	                              mov eax, 0	        87	color.c	FUNCTION_7	IF_2	IF_3
0x400029c	      0xe9fc000000	                           jmp 0x400039d	        87	color.c	FUNCTION_7	IF_2	IF_3
0x40002a1	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        92	color.c	FUNCTION_7	FOR_1
0x40002a8	            0xeb46	                           jmp 0x40002f0	        92	color.c	FUNCTION_7	FOR_1
0x40002aa	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        93	color.c	FUNCTION_7	FOR_1	IF_4	CALL_5
0x40002ad	            0x4898	                                    cdqe	        93	color.c	FUNCTION_7	FOR_1	IF_4	CALL_5
0x40002af	    0x488b14c50000	                  mov rdx, qword [rax*8]	        93	color.c	FUNCTION_7	FOR_1	IF_4	CALL_5
0x40002b7	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	        93	color.c	FUNCTION_7	FOR_1	IF_4	CALL_5
0x40002ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        93	color.c	FUNCTION_7	FOR_1	IF_4	CALL_5
0x40002be	            0x89ce	                            mov esi, ecx	        93	color.c	FUNCTION_7	FOR_1	IF_4	CALL_5
0x40002c0	          0x4889c7	                            mov rdi, rax	        93	color.c	FUNCTION_7	FOR_1	IF_4	CALL_5
0x40002c3	      0xe84dfeffff	                     call sym.match_word	        93	color.c	FUNCTION_7	FOR_1	IF_4	CALL_5
0x40002c8	            0x85c0	                           test eax, eax	        93	color.c	FUNCTION_7	FOR_1	IF_4	CALL_5
0x40002ca	            0x7420	                            je 0x40002ec	        93	color.c	FUNCTION_7	FOR_1	IF_4	CALL_5
0x40002cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        94	color.c	FUNCTION_7	FOR_1	IF_4
0x40002d0	    0xc70002000000	                      mov dword [rax], 2	        94	color.c	FUNCTION_7	FOR_1	IF_4
0x40002d6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        95	color.c	FUNCTION_7	FOR_1	IF_4
0x40002d9	            0x89c2	                            mov edx, eax	        95	color.c	FUNCTION_7	FOR_1	IF_4
0x40002db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        95	color.c	FUNCTION_7	FOR_1	IF_4
0x40002df	          0x885004	                  mov byte [rax + 4], dl	        95	color.c	FUNCTION_7	FOR_1	IF_4
0x40002e2	      0xb800000000	                              mov eax, 0	        96	color.c	FUNCTION_7	FOR_1	IF_4
0x40002e7	      0xe9b1000000	                           jmp 0x400039d	        96	color.c	FUNCTION_7	FOR_1	IF_4
0x40002ec	        0x8345e401	               add dword [rbp - 0x1c], 1	        92	color.c	FUNCTION_7	FOR_1
0x40002f0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        92	color.c	FUNCTION_7	FOR_1
0x40002f3	          0x83f807	                              cmp eax, 7	        92	color.c	FUNCTION_7	FOR_1
0x40002f6	            0x76b2	                           jbe 0x40002aa	        92	color.c	FUNCTION_7	FOR_1
0x40002f8	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       101	color.c	FUNCTION_7	CALL_6
0x40002fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       101	color.c	FUNCTION_7	CALL_6
0x4000300	      0xba0a000000	                            mov edx, 0xa	       101	color.c	FUNCTION_7	CALL_6
0x4000305	          0x4889ce	                            mov rsi, rcx	       101	color.c	FUNCTION_7	CALL_6
0x4000308	          0x4889c7	                            mov rdi, rax	       101	color.c	FUNCTION_7	CALL_6
0x400030b	      0xe800000000	                          call 0x4000310	       101	color.c	FUNCTION_7	CALL_6
0x4000310	        0x488945f0	             mov qword [rbp - 0x10], rax	       101	color.c	FUNCTION_7	CALL_6
0x4000314	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	color.c	FUNCTION_7	IF_5
0x4000318	          0x4889c2	                            mov rdx, rax	       102	color.c	FUNCTION_7	IF_5
0x400031b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       102	color.c	FUNCTION_7	IF_5
0x400031f	          0x4829c2	                            sub rdx, rax	       102	color.c	FUNCTION_7	IF_5
0x4000322	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       102	color.c	FUNCTION_7	IF_5
0x4000325	            0x4898	                                    cdqe	       102	color.c	FUNCTION_7	IF_5
0x4000327	          0x4839c2	                            cmp rdx, rax	       102	color.c	FUNCTION_7	IF_5
0x400032a	            0x756c	                           jne 0x4000398	       102	color.c	FUNCTION_7	IF_5
0x400032c	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	       107	color.c	FUNCTION_7	IF_5	IF_6
0x4000331	            0x7c65	                            jl 0x4000398	       107	color.c	FUNCTION_7	IF_5	IF_6
0x4000333	      0x48837df000	               cmp qword [rbp - 0x10], 0	       109	color.c	FUNCTION_7	IF_5	ELSE_1	IF_7
0x4000338	            0x7911	                           jns 0x400034b	       109	color.c	FUNCTION_7	IF_5	ELSE_1	IF_7
0x400033a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       110	color.c	FUNCTION_7	IF_5	ELSE_1	IF_7
0x400033e	    0xc70001000000	                      mov dword [rax], 1	       110	color.c	FUNCTION_7	IF_5	ELSE_1	IF_7
0x4000344	      0xb800000000	                              mov eax, 0	       111	color.c	FUNCTION_7	IF_5	ELSE_1	IF_7
0x4000349	            0xeb52	                           jmp 0x400039d	       111	color.c	FUNCTION_7	IF_5	ELSE_1	IF_7
0x400034b	      0x48837df007	               cmp qword [rbp - 0x10], 7	       113	color.c	FUNCTION_7	IF_5	ELSE_2	IF_8
0x4000350	            0x7f1e	                            jg 0x4000370	       113	color.c	FUNCTION_7	IF_5	ELSE_2	IF_8
0x4000352	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       114	color.c	FUNCTION_7	IF_5	ELSE_2	IF_8
0x4000356	    0xc70002000000	                      mov dword [rax], 2	       114	color.c	FUNCTION_7	IF_5	ELSE_2	IF_8
0x400035c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       115	color.c	FUNCTION_7	IF_5	ELSE_2	IF_8
0x4000360	            0x89c2	                            mov edx, eax	       115	color.c	FUNCTION_7	IF_5	ELSE_2	IF_8
0x4000362	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       115	color.c	FUNCTION_7	IF_5	ELSE_2	IF_8
0x4000366	          0x885004	                  mov byte [rax + 4], dl	       115	color.c	FUNCTION_7	IF_5	ELSE_2	IF_8
0x4000369	      0xb800000000	                              mov eax, 0	       116	color.c	FUNCTION_7	IF_5	ELSE_2	IF_8
0x400036e	            0xeb2d	                           jmp 0x400039d	       116	color.c	FUNCTION_7	IF_5	ELSE_2	IF_8
0x4000370	    0x48817df0ff00	           cmp qword [rbp - 0x10], 0xff 	       117	color.c	FUNCTION_7	IF_5	ELSE_3	IF_9
0x4000378	            0x7f1e	                            jg 0x4000398	       117	color.c	FUNCTION_7	IF_5	ELSE_3	IF_9
0x400037a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       118	color.c	FUNCTION_7	IF_5	ELSE_3	IF_9
0x400037e	    0xc70003000000	                      mov dword [rax], 3	       118	color.c	FUNCTION_7	IF_5	ELSE_3	IF_9
0x4000384	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       119	color.c	FUNCTION_7	IF_5	ELSE_3	IF_9
0x4000388	            0x89c2	                            mov edx, eax	       119	color.c	FUNCTION_7	IF_5	ELSE_3	IF_9
0x400038a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       119	color.c	FUNCTION_7	IF_5	ELSE_3	IF_9
0x400038e	          0x885004	                  mov byte [rax + 4], dl	       119	color.c	FUNCTION_7	IF_5	ELSE_3	IF_9
0x4000391	      0xb800000000	                              mov eax, 0	       120	color.c	FUNCTION_7	IF_5	ELSE_3	IF_9
0x4000396	            0xeb05	                           jmp 0x400039d	       120	color.c	FUNCTION_7	IF_5	ELSE_3	IF_9
0x4000398	      0xb8ffffffff	                     mov eax, 0xffffffff	       124	color.c	FUNCTION_7
0x400039d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       125	color.c	FUNCTION_7
0x40003a1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       125	color.c	FUNCTION_7
0x40003aa	            0x7405	                            je 0x40003b1	       125	color.c	FUNCTION_7
0x40003ac	      0xe800000000	                          call 0x40003b1	       125	color.c	FUNCTION_7
0x40003b1	              0xc9	                                   leave	       125	color.c	FUNCTION_7
0x40003b2	              0xc3	                                     ret	       125	color.c	FUNCTION_7
skip_prefix_mem	IF,1:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	38
0x400004b	              0x55	                                push rbp	       522	git-compat-util.h	FUNCTION_31
0x400004c	          0x4889e5	                            mov rbp, rsp	       522	git-compat-util.h	FUNCTION_31
0x400004f	        0x4883ec40	                           sub rsp, 0x40	       522	git-compat-util.h	FUNCTION_31
0x4000053	        0x48897de8	             mov qword [rbp - 0x18], rdi	       522	git-compat-util.h	FUNCTION_31
0x4000057	        0x488975e0	             mov qword [rbp - 0x20], rsi	       522	git-compat-util.h	FUNCTION_31
0x400005b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       522	git-compat-util.h	FUNCTION_31
0x400005f	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       522	git-compat-util.h	FUNCTION_31
0x4000063	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       522	git-compat-util.h	FUNCTION_31
0x4000067	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       523	git-compat-util.h	FUNCTION_31	CALL_1
0x400006b	          0x4889c7	                            mov rdi, rax	       523	git-compat-util.h	FUNCTION_31	CALL_1
0x400006e	      0xe800000000	                          call 0x4000073	       523	git-compat-util.h	FUNCTION_31	CALL_1
0x4000073	        0x488945f8	                mov qword [rbp - 8], rax	       523	git-compat-util.h	FUNCTION_31	CALL_1
0x4000077	        0x488b45f8	                mov rax, qword [rbp - 8]	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x400007b	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x400007f	            0x7746	                            ja 0x40000c7	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x4000081	        0x488b55f8	                mov rdx, qword [rbp - 8]	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x4000085	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x4000089	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x400008d	          0x4889ce	                            mov rsi, rcx	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x4000090	          0x4889c7	                            mov rdi, rax	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x4000093	      0xe800000000	                          call 0x4000098	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x4000098	            0x85c0	                           test eax, eax	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x400009a	            0x752b	                           jne 0x40000c7	       524	git-compat-util.h	FUNCTION_31	IF_1	CALL_2
0x400009c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       525	git-compat-util.h	FUNCTION_31	IF_1
0x40000a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       525	git-compat-util.h	FUNCTION_31	IF_1
0x40000a4	          0x4801c2	                            add rdx, rax	       525	git-compat-util.h	FUNCTION_31	IF_1
0x40000a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       525	git-compat-util.h	FUNCTION_31	IF_1
0x40000ab	          0x488910	                    mov qword [rax], rdx	       525	git-compat-util.h	FUNCTION_31	IF_1
0x40000ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       526	git-compat-util.h	FUNCTION_31	IF_1
0x40000b2	        0x482b45f8	                sub rax, qword [rbp - 8]	       526	git-compat-util.h	FUNCTION_31	IF_1
0x40000b6	          0x4889c2	                            mov rdx, rax	       526	git-compat-util.h	FUNCTION_31	IF_1
0x40000b9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       526	git-compat-util.h	FUNCTION_31	IF_1
0x40000bd	          0x488910	                    mov qword [rax], rdx	       526	git-compat-util.h	FUNCTION_31	IF_1
0x40000c0	      0xb801000000	                              mov eax, 1	       527	git-compat-util.h	FUNCTION_31	IF_1
0x40000c5	            0xeb05	                           jmp 0x40000cc	       527	git-compat-util.h	FUNCTION_31	IF_1
0x40000c7	      0xb800000000	                              mov eax, 0	       529	git-compat-util.h	FUNCTION_31
0x40000cc	              0xc9	                                   leave	       530	git-compat-util.h	FUNCTION_31
0x40000cd	              0xc3	                                     ret	       530	git-compat-util.h	FUNCTION_31
want_color_fd	IF,3:CALL,1:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	30
0x4000c4c	              0x55	                                push rbp	       336	color.c	FUNCTION_15
0x4000c4d	          0x4889e5	                            mov rbp, rsp	       336	color.c	FUNCTION_15
0x4000c50	        0x4883ec10	                           sub rsp, 0x10	       336	color.c	FUNCTION_15
0x4000c54	          0x897dfc	                mov dword [rbp - 4], edi	       336	color.c	FUNCTION_15
0x4000c57	          0x8975f8	                mov dword [rbp - 8], esi	       336	color.c	FUNCTION_15
0x4000c5a	        0x837df800	                  cmp dword [rbp - 8], 0	       346	color.c	FUNCTION_15	IF_1
0x4000c5e	            0x7909	                           jns 0x4000c69	       346	color.c	FUNCTION_15	IF_1
0x4000c60	    0x8b0500000000	            mov eax, dword [0x04000c66] 	       347	color.c	FUNCTION_15	IF_1
0x4000c66	          0x8945f8	                mov dword [rbp - 8], eax	       347	color.c	FUNCTION_15	IF_1
0x4000c69	        0x837df802	                  cmp dword [rbp - 8], 2	       349	color.c	FUNCTION_15	IF_2
0x4000c6d	            0x7536	                           jne 0x4000ca5	       349	color.c	FUNCTION_15	IF_2
0x4000c6f	          0x8b45fc	                mov eax, dword [rbp - 4]	       350	color.c	FUNCTION_15	IF_2	IF_3
0x4000c72	            0x4898	                                    cdqe	       350	color.c	FUNCTION_15	IF_2	IF_3
0x4000c74	    0x8b0485000000	                  mov eax, dword [rax*4]	       350	color.c	FUNCTION_15	IF_2	IF_3
0x4000c7b	            0x85c0	                           test eax, eax	       350	color.c	FUNCTION_15	IF_2	IF_3
0x4000c7d	            0x7918	                           jns 0x4000c97	       350	color.c	FUNCTION_15	IF_2	IF_3
0x4000c7f	          0x8b45fc	                mov eax, dword [rbp - 4]	       351	color.c	FUNCTION_15	IF_2	CALL_1
0x4000c82	            0x89c7	                            mov edi, eax	       351	color.c	FUNCTION_15	IF_2	CALL_1
0x4000c84	      0xe84cffffff	               call sym.check_auto_color	       351	color.c	FUNCTION_15	IF_2	CALL_1
0x4000c89	            0x89c2	                            mov edx, eax	       351	color.c	FUNCTION_15	IF_2	CALL_1
0x4000c8b	          0x8b45fc	                mov eax, dword [rbp - 4]	       351	color.c	FUNCTION_15	IF_2	CALL_1
0x4000c8e	            0x4898	                                    cdqe	       351	color.c	FUNCTION_15	IF_2	CALL_1
0x4000c90	    0x891485000000	                  mov dword [rax*4], edx	       351	color.c	FUNCTION_15	IF_2	CALL_1
0x4000c97	          0x8b45fc	                mov eax, dword [rbp - 4]	       352	color.c	FUNCTION_15	IF_2
0x4000c9a	            0x4898	                                    cdqe	       352	color.c	FUNCTION_15	IF_2
0x4000c9c	    0x8b0485000000	                  mov eax, dword [rax*4]	       352	color.c	FUNCTION_15	IF_2
0x4000ca3	            0xeb03	                           jmp 0x4000ca8	       352	color.c	FUNCTION_15	IF_2
0x4000ca5	          0x8b45f8	                mov eax, dword [rbp - 8]	       354	color.c	FUNCTION_15
0x4000ca8	              0xc9	                                   leave	       355	color.c	FUNCTION_15
0x4000ca9	              0xc3	                                     ret	       355	color.c	FUNCTION_15
color_empty	IF,0:CALL,0:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	10
0x400061d	              0x55	                                push rbp	       193	color.c	FUNCTION_11
0x400061e	          0x4889e5	                            mov rbp, rsp	       193	color.c	FUNCTION_11
0x4000621	        0x48897df8	                mov qword [rbp - 8], rdi	       193	color.c	FUNCTION_11
0x4000625	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	color.c	FUNCTION_11
0x4000629	            0x8b00	                    mov eax, dword [rax]	       194	color.c	FUNCTION_11
0x400062b	          0x83f801	                              cmp eax, 1	       194	color.c	FUNCTION_11
0x400062e	           0xf96c0	                                setbe al	       194	color.c	FUNCTION_11
0x4000631	           0xfb6c0	                           movzx eax, al	       194	color.c	FUNCTION_11
0x4000634	              0x5d	                                 pop rbp	       195	color.c	FUNCTION_11
0x4000635	              0xc3	                                     ret	       195	color.c	FUNCTION_11
parse_attr	IF,2:CALL,3:SWITCH,0:ELSE,0:FOR,1:functions,0:WHILE,0:DO,0	83
0x40003b3	              0x55	                                push rbp	       128	color.c	FUNCTION_8
0x40003b4	          0x4889e5	                            mov rbp, rsp	       128	color.c	FUNCTION_8
0x40003b7	        0x4883ec20	                           sub rsp, 0x20	       128	color.c	FUNCTION_8
0x40003bb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       128	color.c	FUNCTION_8
0x40003bf	        0x488975e0	             mov qword [rbp - 0x20], rsi	       128	color.c	FUNCTION_8
0x40003c3	    0xc745f8000000	                  mov dword [rbp - 8], 0	       144	color.c	FUNCTION_8
0x40003ca	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003d2	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003d6	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003da	          0x4989c8	                             mov r8, rcx	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003dd	          0x4889d1	                            mov rcx, rdx	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003e0	      0xba00000000	                              mov edx, 0	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003e5	          0x4889c7	                            mov rdi, rax	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003e8	      0xe85efcffff	                call sym.skip_prefix_mem	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003ed	            0x85c0	                           test eax, eax	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003ef	            0x742a	                            je 0x400041b	       147	color.c	FUNCTION_8	IF_1	CALL_1
0x40003f1	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       148	color.c	FUNCTION_8	IF_1	CALL_2
0x40003f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	color.c	FUNCTION_8	IF_1	CALL_2
0x40003f9	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       148	color.c	FUNCTION_8	IF_1	CALL_2
0x40003fd	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       148	color.c	FUNCTION_8	IF_1	CALL_2
0x4000401	          0x4989c8	                             mov r8, rcx	       148	color.c	FUNCTION_8	IF_1	CALL_2
0x4000404	          0x4889d1	                            mov rcx, rdx	       148	color.c	FUNCTION_8	IF_1	CALL_2
0x4000407	      0xba00000000	                              mov edx, 0	       148	color.c	FUNCTION_8	IF_1	CALL_2
0x400040c	          0x4889c7	                            mov rdi, rax	       148	color.c	FUNCTION_8	IF_1	CALL_2
0x400040f	      0xe837fcffff	                call sym.skip_prefix_mem	       148	color.c	FUNCTION_8	IF_1	CALL_2
0x4000414	    0xc745f8010000	                  mov dword [rbp - 8], 1	       149	color.c	FUNCTION_8	IF_1
0x400041b	    0xc745fc000000	                  mov dword [rbp - 4], 0	       152	color.c	FUNCTION_8	FOR_1
0x4000422	      0xe99f000000	                           jmp 0x40004c6	       152	color.c	FUNCTION_8	FOR_1
0x4000427	          0x8b45fc	                mov eax, dword [rbp - 4]	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x400042a	          0x4863d0	                         movsxd rdx, eax	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x400042d	          0x4889d0	                            mov rax, rdx	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000430	          0x4801c0	                            add rax, rax	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000433	          0x4801d0	                            add rax, rdx	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000436	        0x48c1e003	                              shl rax, 3	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x400043a	    0x480500000000	                              add rax, 0	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000440	          0x488b10	                    mov rdx, qword [rax]	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000443	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000447	          0x4839c2	                            cmp rdx, rax	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x400044a	            0x7576	                           jne 0x40004c2	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x400044c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000450	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000454	          0x8b45fc	                mov eax, dword [rbp - 4]	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000457	          0x4863d0	                         movsxd rdx, eax	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x400045a	          0x4889d0	                            mov rax, rdx	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x400045d	          0x4801c0	                            add rax, rax	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000460	          0x4801d0	                            add rax, rdx	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000463	        0x48c1e003	                              shl rax, 3	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000467	    0x480500000000	                              add rax, 0	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x400046d	          0x488b00	                    mov rax, qword [rax]	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000470	          0x4889f2	                            mov rdx, rsi	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000473	          0x4889ce	                            mov rsi, rcx	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000476	          0x4889c7	                            mov rdi, rax	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000479	      0xe800000000	                          call 0x400047e	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x400047e	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000480	            0x7540	                           jne 0x40004c2	       153	color.c	FUNCTION_8	FOR_1	IF_2	CALL_3
0x4000482	        0x837df800	                  cmp dword [rbp - 8], 0	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x4000486	            0x741d	                            je 0x40004a5	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x4000488	          0x8b45fc	                mov eax, dword [rbp - 4]	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x400048b	          0x4863d0	                         movsxd rdx, eax	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x400048e	          0x4889d0	                            mov rax, rdx	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x4000491	          0x4801c0	                            add rax, rax	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x4000494	          0x4801d0	                            add rax, rdx	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x4000497	        0x48c1e003	                              shl rax, 3	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x400049b	    0x480500000000	                              add rax, 0	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004a1	            0x8b00	                    mov eax, dword [rax]	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004a3	            0xeb32	                           jmp 0x40004d7	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004a5	          0x8b45fc	                mov eax, dword [rbp - 4]	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004a8	          0x4863d0	                         movsxd rdx, eax	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004ab	          0x4889d0	                            mov rax, rdx	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004ae	          0x4801c0	                            add rax, rax	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004b1	          0x4801d0	                            add rax, rdx	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004b4	        0x48c1e003	                              shl rax, 3	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004b8	    0x480500000000	                              add rax, 0	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004be	            0x8b00	                    mov eax, dword [rax]	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004c0	            0xeb15	                           jmp 0x40004d7	       154	color.c	FUNCTION_8	FOR_1	IF_2
0x40004c2	        0x8345fc01	                  add dword [rbp - 4], 1	       152	color.c	FUNCTION_8	FOR_1
0x40004c6	          0x8b45fc	                mov eax, dword [rbp - 4]	       152	color.c	FUNCTION_8	FOR_1
0x40004c9	          0x83f806	                              cmp eax, 6	       152	color.c	FUNCTION_8	FOR_1
0x40004cc	     0xf8655ffffff	                           jbe 0x4000427	       152	color.c	FUNCTION_8	FOR_1
0x40004d2	      0xb8ffffffff	                     mov eax, 0xffffffff	       156	color.c	FUNCTION_8
0x40004d7	              0xc9	                                   leave	       157	color.c	FUNCTION_8
0x40004d8	              0xc3	                                     ret	       157	color.c	FUNCTION_8
git_color_config	IF,1:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	23
0x4000caa	              0x55	                                push rbp	       358	color.c	FUNCTION_16
0x4000cab	          0x4889e5	                            mov rbp, rsp	       358	color.c	FUNCTION_16
0x4000cae	        0x4883ec20	                           sub rsp, 0x20	       358	color.c	FUNCTION_16
0x4000cb2	        0x48897df8	                mov qword [rbp - 8], rdi	       358	color.c	FUNCTION_16
0x4000cb6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       358	color.c	FUNCTION_16
0x4000cba	        0x488955e8	             mov qword [rbp - 0x18], rdx	       358	color.c	FUNCTION_16
0x4000cbe	        0x488b45f8	                mov rax, qword [rbp - 8]	       359	color.c	FUNCTION_16	IF_1	CALL_1
0x4000cc2	      0xbe00000000	                              mov esi, 0	       359	color.c	FUNCTION_16	IF_1	CALL_1
0x4000cc7	          0x4889c7	                            mov rdi, rax	       359	color.c	FUNCTION_16	IF_1	CALL_1
0x4000cca	      0xe800000000	                          call 0x4000ccf	       359	color.c	FUNCTION_16	IF_1	CALL_1
0x4000ccf	            0x85c0	                           test eax, eax	       359	color.c	FUNCTION_16	IF_1	CALL_1
0x4000cd1	            0x7520	                           jne 0x4000cf3	       359	color.c	FUNCTION_16	IF_1	CALL_1
0x4000cd3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       360	color.c	FUNCTION_16	IF_1	CALL_2
0x4000cd7	        0x488b45f8	                mov rax, qword [rbp - 8]	       360	color.c	FUNCTION_16	IF_1	CALL_2
0x4000cdb	          0x4889d6	                            mov rsi, rdx	       360	color.c	FUNCTION_16	IF_1	CALL_2
0x4000cde	          0x4889c7	                            mov rdi, rax	       360	color.c	FUNCTION_16	IF_1	CALL_2
0x4000ce1	      0xe800000000	                          call 0x4000ce6	       360	color.c	FUNCTION_16	IF_1	CALL_2
0x4000ce6	    0x890500000000	            mov dword [0x04000cec], eax 	       360	color.c	FUNCTION_16	IF_1	CALL_2
0x4000cec	      0xb800000000	                              mov eax, 0	       361	color.c	FUNCTION_16	IF_1
0x4000cf1	            0xeb05	                           jmp 0x4000cf8	       361	color.c	FUNCTION_16	IF_1
0x4000cf3	      0xb800000000	                              mov eax, 0	       364	color.c	FUNCTION_16
0x4000cf8	              0xc9	                                   leave	       365	color.c	FUNCTION_16
0x4000cf9	              0xc3	                                     ret	       365	color.c	FUNCTION_16
_	IF,1:CALL,0:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	15
0x40000ce	              0x55	                                push rbp	        51	gettext.h	FUNCTION_3
0x40000cf	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_3
0x40000d2	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_3
0x40000d6	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_3
0x40000da	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_3	IF_1
0x40000de	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_3	IF_1
0x40000e1	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_3	IF_1
0x40000e3	            0x7507	                           jne 0x40000ec	        52	gettext.h	FUNCTION_3	IF_1
0x40000e5	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_3	IF_1
0x40000ea	            0xeb0c	                           jmp 0x40000f8	        53	gettext.h	FUNCTION_3	IF_1
0x40000ec	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_3
0x40000f0	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_3
0x40000f3	      0xe800000000	                          call 0x40000f8	        54	gettext.h	FUNCTION_3
0x40000f8	              0xc9	                                   leave	        55	gettext.h	FUNCTION_3
0x40000f9	              0xc3	                                     ret	        55	gettext.h	FUNCTION_3
const_error	IF,0:CALL,0:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_28
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_28
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_28
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_28
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_28
color_parse	IF,0:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	16
0x40004d9	              0x55	                                push rbp	       160	color.c	FUNCTION_9
0x40004da	          0x4889e5	                            mov rbp, rsp	       160	color.c	FUNCTION_9
0x40004dd	        0x4883ec10	                           sub rsp, 0x10	       160	color.c	FUNCTION_9
0x40004e1	        0x48897df8	                mov qword [rbp - 8], rdi	       160	color.c	FUNCTION_9
0x40004e5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       160	color.c	FUNCTION_9
0x40004e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       161	color.c	FUNCTION_9	CALL_2
0x40004ed	          0x4889c7	                            mov rdi, rax	       161	color.c	FUNCTION_9	CALL_2
0x40004f0	      0xe800000000	                          call 0x40004f5	       161	color.c	FUNCTION_9	CALL_2
0x40004f5	            0x89c1	                            mov ecx, eax	       161	color.c	FUNCTION_9	CALL_2
0x40004f7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       161	color.c	FUNCTION_9	CALL_2
0x40004fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       161	color.c	FUNCTION_9	CALL_2
0x40004ff	            0x89ce	                            mov esi, ecx	       161	color.c	FUNCTION_9	CALL_2
0x4000501	          0x4889c7	                            mov rdi, rax	       161	color.c	FUNCTION_9	CALL_2
0x4000504	      0xe800000000	                          call 0x4000509	       161	color.c	FUNCTION_9	CALL_2
0x4000509	              0xc9	                                   leave	       162	color.c	FUNCTION_9
0x400050a	              0xc3	                                     ret	       162	color.c	FUNCTION_9
hexval	IF,0:CALL,0:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	10
0x40000fa	              0x55	                                push rbp	      1272	cache.h	FUNCTION_73
0x40000fb	          0x4889e5	                            mov rbp, rsp	      1272	cache.h	FUNCTION_73
0x40000fe	            0x89f8	                            mov eax, edi	      1272	cache.h	FUNCTION_73
0x4000100	          0x8845fc	                  mov byte [rbp - 4], al	      1272	cache.h	FUNCTION_73
0x4000103	         0xfb645fc	               movzx eax, byte [rbp - 4]	      1273	cache.h	FUNCTION_73
0x4000107	            0x4898	                                    cdqe	      1273	cache.h	FUNCTION_73
0x4000109	     0xfb680000000	                   movzx eax, byte [rax]	      1273	cache.h	FUNCTION_73
0x4000110	           0xfbec0	                           movsx eax, al	      1273	cache.h	FUNCTION_73
0x4000113	              0x5d	                                 pop rbp	      1274	cache.h	FUNCTION_73
0x4000114	              0xc3	                                     ret	      1274	cache.h	FUNCTION_73
color_is_nil	IF,0:CALL,1:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	13
0x4001040	              0x55	                                push rbp	       420	color.c	FUNCTION_22
0x4001041	          0x4889e5	                            mov rbp, rsp	       420	color.c	FUNCTION_22
0x4001044	        0x4883ec10	                           sub rsp, 0x10	       420	color.c	FUNCTION_22
0x4001048	        0x48897df8	                mov qword [rbp - 8], rdi	       420	color.c	FUNCTION_22
0x400104c	        0x488b45f8	                mov rax, qword [rbp - 8]	       421	color.c	FUNCTION_22	CALL_1
0x4001050	      0xbe00000000	                              mov esi, 0	       421	color.c	FUNCTION_22	CALL_1
0x4001055	          0x4889c7	                            mov rdi, rax	       421	color.c	FUNCTION_22	CALL_1
0x4001058	      0xe800000000	                          call 0x400105d	       421	color.c	FUNCTION_22	CALL_1
0x400105d	            0x85c0	                           test eax, eax	       421	color.c	FUNCTION_22	CALL_1
0x400105f	           0xf94c0	                                 sete al	       421	color.c	FUNCTION_22	CALL_1
0x4001062	           0xfb6c0	                           movzx eax, al	       421	color.c	FUNCTION_22	CALL_1
0x4001065	              0xc9	                                   leave	       422	color.c	FUNCTION_22
0x4001066	              0xc3	                                     ret	       422	color.c	FUNCTION_22
match_word	IF,0:CALL,1:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	27
0x4000115	              0x55	                                push rbp	        50	color.c	FUNCTION_5
0x4000116	          0x4889e5	                            mov rbp, rsp	        50	color.c	FUNCTION_5
0x4000119	        0x4883ec20	                           sub rsp, 0x20	        50	color.c	FUNCTION_5
0x400011d	        0x48897df8	                mov qword [rbp - 8], rdi	        50	color.c	FUNCTION_5
0x4000121	          0x8975f4	              mov dword [rbp - 0xc], esi	        50	color.c	FUNCTION_5
0x4000124	        0x488955e8	             mov qword [rbp - 0x18], rdx	        50	color.c	FUNCTION_5
0x4000128	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        51	color.c	FUNCTION_5	CALL_1
0x400012b	          0x4863d0	                         movsxd rdx, eax	        51	color.c	FUNCTION_5	CALL_1
0x400012e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        51	color.c	FUNCTION_5	CALL_1
0x4000132	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	color.c	FUNCTION_5	CALL_1
0x4000136	          0x4889ce	                            mov rsi, rcx	        51	color.c	FUNCTION_5	CALL_1
0x4000139	          0x4889c7	                            mov rdi, rax	        51	color.c	FUNCTION_5	CALL_1
0x400013c	      0xe800000000	                          call 0x4000141	        51	color.c	FUNCTION_5	CALL_1
0x4000141	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_5	CALL_1
0x4000143	            0x751b	                           jne 0x4000160	        51	color.c	FUNCTION_5	CALL_1
0x4000145	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        51	color.c	FUNCTION_5	CALL_1
0x4000148	          0x4863d0	                         movsxd rdx, eax	        51	color.c	FUNCTION_5	CALL_1
0x400014b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	color.c	FUNCTION_5	CALL_1
0x400014f	          0x4801d0	                            add rax, rdx	        51	color.c	FUNCTION_5	CALL_1
0x4000152	           0xfb600	                   movzx eax, byte [rax]	        51	color.c	FUNCTION_5	CALL_1
0x4000155	            0x84c0	                             test al, al	        51	color.c	FUNCTION_5	CALL_1
0x4000157	            0x7507	                           jne 0x4000160	        51	color.c	FUNCTION_5	CALL_1
0x4000159	      0xb801000000	                              mov eax, 1	        51	color.c	FUNCTION_5	CALL_1
0x400015e	            0xeb05	                           jmp 0x4000165	        51	color.c	FUNCTION_5	CALL_1
0x4000160	      0xb800000000	                              mov eax, 0	        51	color.c	FUNCTION_5	CALL_1
0x4000165	              0xc9	                                   leave	        52	color.c	FUNCTION_5
0x4000166	              0xc3	                                     ret	        52	color.c	FUNCTION_5
get_hex_color	IF,1:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	36
0x4000167	              0x55	                                push rbp	        55	color.c	FUNCTION_6
0x4000168	          0x4889e5	                            mov rbp, rsp	        55	color.c	FUNCTION_6
0x400016b	              0x53	                                push rbx	        55	color.c	FUNCTION_6
0x400016c	        0x4883ec20	                           sub rsp, 0x20	        55	color.c	FUNCTION_6
0x4000170	        0x48897de0	             mov qword [rbp - 0x20], rdi	        55	color.c	FUNCTION_6
0x4000174	        0x488975d8	             mov qword [rbp - 0x28], rsi	        55	color.c	FUNCTION_6
0x4000178	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	color.c	FUNCTION_6	CALL_2
0x400017c	           0xfb600	                   movzx eax, byte [rax]	        57	color.c	FUNCTION_6	CALL_2
0x400017f	           0xfb6c0	                           movzx eax, al	        57	color.c	FUNCTION_6	CALL_2
0x4000182	            0x89c7	                            mov edi, eax	        57	color.c	FUNCTION_6	CALL_2
0x4000184	      0xe871ffffff	                         call sym.hexval	        57	color.c	FUNCTION_6	CALL_2
0x4000189	          0xc1e004	                              shl eax, 4	        57	color.c	FUNCTION_6	CALL_2
0x400018c	            0x89c3	                            mov ebx, eax	        57	color.c	FUNCTION_6	CALL_2
0x400018e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	color.c	FUNCTION_6	CALL_2
0x4000192	        0x4883c001	                              add rax, 1	        57	color.c	FUNCTION_6	CALL_2
0x4000196	           0xfb600	                   movzx eax, byte [rax]	        57	color.c	FUNCTION_6	CALL_2
0x4000199	           0xfb6c0	                           movzx eax, al	        57	color.c	FUNCTION_6	CALL_2
0x400019c	            0x89c7	                            mov edi, eax	        57	color.c	FUNCTION_6	CALL_2
0x400019e	      0xe857ffffff	                         call sym.hexval	        57	color.c	FUNCTION_6	CALL_2
0x40001a3	             0x9d8	                             or eax, ebx	        57	color.c	FUNCTION_6	CALL_2
0x40001a5	          0x8945f4	              mov dword [rbp - 0xc], eax	        57	color.c	FUNCTION_6	CALL_2
0x40001a8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        58	color.c	FUNCTION_6	IF_1
0x40001ab	            0xb000	                               mov al, 0	        58	color.c	FUNCTION_6	IF_1
0x40001ad	            0x85c0	                           test eax, eax	        58	color.c	FUNCTION_6	IF_1
0x40001af	            0x7407	                            je 0x40001b8	        58	color.c	FUNCTION_6	IF_1
0x40001b1	      0xb8ffffffff	                     mov eax, 0xffffffff	        59	color.c	FUNCTION_6	IF_1
0x40001b6	            0xeb10	                           jmp 0x40001c8	        59	color.c	FUNCTION_6	IF_1
0x40001b8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        60	color.c	FUNCTION_6
0x40001bb	            0x89c2	                            mov edx, eax	        60	color.c	FUNCTION_6
0x40001bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        60	color.c	FUNCTION_6
0x40001c1	            0x8810	                      mov byte [rax], dl	        60	color.c	FUNCTION_6
0x40001c3	      0xb800000000	                              mov eax, 0	        61	color.c	FUNCTION_6
0x40001c8	        0x4883c420	                           add rsp, 0x20	        62	color.c	FUNCTION_6
0x40001cc	              0x5b	                                 pop rbx	        62	color.c	FUNCTION_6
0x40001cd	              0x5d	                                 pop rbp	        62	color.c	FUNCTION_6
0x40001ce	              0xc3	                                     ret	        62	color.c	FUNCTION_6
color_vfprintf	IF,3:CALL,4:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	50
0x4000dbb	              0x55	                                push rbp	       386	color.c	FUNCTION_19
0x4000dbc	          0x4889e5	                            mov rbp, rsp	       386	color.c	FUNCTION_19
0x4000dbf	        0x4883ec40	                           sub rsp, 0x40	       386	color.c	FUNCTION_19
0x4000dc3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       386	color.c	FUNCTION_19
0x4000dc7	        0x488975e0	             mov qword [rbp - 0x20], rsi	       386	color.c	FUNCTION_19
0x4000dcb	        0x488955d8	             mov qword [rbp - 0x28], rdx	       386	color.c	FUNCTION_19
0x4000dcf	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       386	color.c	FUNCTION_19
0x4000dd3	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       386	color.c	FUNCTION_19
0x4000dd7	    0xc745fc000000	                  mov dword [rbp - 4], 0	       387	color.c	FUNCTION_19
0x4000dde	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       389	color.c	FUNCTION_19	IF_1
0x4000de2	           0xfb600	                   movzx eax, byte [rax]	       389	color.c	FUNCTION_19	IF_1
0x4000de5	            0x84c0	                             test al, al	       389	color.c	FUNCTION_19	IF_1
0x4000de7	            0x741d	                            je 0x4000e06	       389	color.c	FUNCTION_19	IF_1
0x4000de9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       390	color.c	FUNCTION_19	CALL_1
0x4000ded	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	color.c	FUNCTION_19	CALL_1
0x4000df1	      0xbe00000000	                              mov esi, 0	       390	color.c	FUNCTION_19	CALL_1
0x4000df6	          0x4889c7	                            mov rdi, rax	       390	color.c	FUNCTION_19	CALL_1
0x4000df9	      0xb800000000	                              mov eax, 0	       390	color.c	FUNCTION_19	CALL_1
0x4000dfe	      0xe800000000	                          call 0x4000e03	       390	color.c	FUNCTION_19	CALL_1
0x4000e03	           0x145fc	                add dword [rbp - 4], eax	       390	color.c	FUNCTION_19	CALL_1
0x4000e06	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       391	color.c	FUNCTION_19	CALL_2
0x4000e0a	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       391	color.c	FUNCTION_19	CALL_2
0x4000e0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	color.c	FUNCTION_19	CALL_2
0x4000e12	          0x4889ce	                            mov rsi, rcx	       391	color.c	FUNCTION_19	CALL_2
0x4000e15	          0x4889c7	                            mov rdi, rax	       391	color.c	FUNCTION_19	CALL_2
0x4000e18	      0xe800000000	                          call 0x4000e1d	       391	color.c	FUNCTION_19	CALL_2
0x4000e1d	           0x145fc	                add dword [rbp - 4], eax	       391	color.c	FUNCTION_19	CALL_2
0x4000e20	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       392	color.c	FUNCTION_19	IF_2
0x4000e24	           0xfb600	                   movzx eax, byte [rax]	       392	color.c	FUNCTION_19	IF_2
0x4000e27	            0x84c0	                             test al, al	       392	color.c	FUNCTION_19	IF_2
0x4000e29	            0x741e	                            je 0x4000e49	       392	color.c	FUNCTION_19	IF_2
0x4000e2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       393	color.c	FUNCTION_19	CALL_3
0x4000e2f	      0xba00000000	                              mov edx, 0	       393	color.c	FUNCTION_19	CALL_3
0x4000e34	      0xbe00000000	                              mov esi, 0	       393	color.c	FUNCTION_19	CALL_3
0x4000e39	          0x4889c7	                            mov rdi, rax	       393	color.c	FUNCTION_19	CALL_3
0x4000e3c	      0xb800000000	                              mov eax, 0	       393	color.c	FUNCTION_19	CALL_3
0x4000e41	      0xe800000000	                          call 0x4000e46	       393	color.c	FUNCTION_19	CALL_3
0x4000e46	           0x145fc	                add dword [rbp - 4], eax	       393	color.c	FUNCTION_19	CALL_3
0x4000e49	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       394	color.c	FUNCTION_19	IF_3
0x4000e4e	            0x741d	                            je 0x4000e6d	       394	color.c	FUNCTION_19	IF_3
0x4000e50	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       395	color.c	FUNCTION_19	CALL_4
0x4000e54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	color.c	FUNCTION_19	CALL_4
0x4000e58	      0xbe00000000	                              mov esi, 0	       395	color.c	FUNCTION_19	CALL_4
0x4000e5d	          0x4889c7	                            mov rdi, rax	       395	color.c	FUNCTION_19	CALL_4
0x4000e60	      0xb800000000	                              mov eax, 0	       395	color.c	FUNCTION_19	CALL_4
0x4000e65	      0xe800000000	                          call 0x4000e6a	       395	color.c	FUNCTION_19	CALL_4
0x4000e6a	           0x145fc	                add dword [rbp - 4], eax	       395	color.c	FUNCTION_19	CALL_4
0x4000e6d	          0x8b45fc	                mov eax, dword [rbp - 4]	       396	color.c	FUNCTION_19
0x4000e70	              0xc9	                                   leave	       397	color.c	FUNCTION_19
0x4000e71	              0xc3	                                     ret	       397	color.c	FUNCTION_19
color_fprintf	IF,0:CALL,3:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:DO,0	43
0x4000e72	              0x55	                                push rbp	       400	color.c	FUNCTION_20
0x4000e73	          0x4889e5	                            mov rbp, rsp	       400	color.c	FUNCTION_20
0x4000e76	    0x4881ec000100	                          sub rsp, 0x100	       400	color.c	FUNCTION_20
0x4000e7d	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       400	color.c	FUNCTION_20
0x4000e84	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       400	color.c	FUNCTION_20
0x4000e8b	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       400	color.c	FUNCTION_20
0x4000e92	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       400	color.c	FUNCTION_20
0x4000e99	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       400	color.c	FUNCTION_20
0x4000ea0	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       400	color.c	FUNCTION_20
0x4000ea7	            0x84c0	                             test al, al	       400	color.c	FUNCTION_20
0x4000ea9	            0x7420	                            je 0x4000ecb	       400	color.c	FUNCTION_20
0x4000eab	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       400	color.c	FUNCTION_20
0x4000eaf	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       400	color.c	FUNCTION_20
0x4000eb3	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       400	color.c	FUNCTION_20
0x4000eb7	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       400	color.c	FUNCTION_20
0x4000ebb	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       400	color.c	FUNCTION_20
0x4000ebf	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       400	color.c	FUNCTION_20
0x4000ec3	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       400	color.c	FUNCTION_20
0x4000ec7	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       400	color.c	FUNCTION_20
0x4000ecb	    0x64488b042528	                mov rax, qword fs:[0x28]	       400	color.c	FUNCTION_20
0x4000ed4	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       400	color.c	FUNCTION_20
0x4000edb	            0x31c0	                            xor eax, eax	       400	color.c	FUNCTION_20
0x4000edd	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       403	color.c	FUNCTION_20	CALL_1
0x4000ee7	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       403	color.c	FUNCTION_20	CALL_1
0x4000ef1	        0x488d4510	                   lea rax, [rbp + 0x10]	       403	color.c	FUNCTION_20	CALL_1
0x4000ef5	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       403	color.c	FUNCTION_20	CALL_1
0x4000efc	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       403	color.c	FUNCTION_20	CALL_1
0x4000f03	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       403	color.c	FUNCTION_20	CALL_1
0x4000f0a	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       404	color.c	FUNCTION_20	CALL_2
0x4000f11	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	       404	color.c	FUNCTION_20	CALL_2
0x4000f18	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       404	color.c	FUNCTION_20	CALL_2
0x4000f1f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       404	color.c	FUNCTION_20	CALL_2
0x4000f26	    0x41b800000000	                              mov r8d, 0	       404	color.c	FUNCTION_20	CALL_2
0x4000f2c	          0x4889c7	                            mov rdi, rax	       404	color.c	FUNCTION_20	CALL_2
0x4000f2f	      0xe887feffff	                 call sym.color_vfprintf	       404	color.c	FUNCTION_20	CALL_2
0x4000f34	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       404	color.c	FUNCTION_20	CALL_2
0x4000f3a	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       406	color.c	FUNCTION_20
0x4000f40	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       407	color.c	FUNCTION_20
0x4000f47	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       407	color.c	FUNCTION_20
0x4000f50	            0x7405	                            je 0x4000f57	       407	color.c	FUNCTION_20
0x4000f52	      0xe800000000	                          call 0x4000f57	       407	color.c	FUNCTION_20
0x4000f57	              0xc9	                                   leave	       407	color.c	FUNCTION_20
0x4000f58	              0xc3	                                     ret	       407	color.c	FUNCTION_20
