read_props	FOR,0:DO,0:ELSE,0:WHILE,1:CALL,13:IF,4:functions,0:SWITCH,1	104
0x4000516	              0x55	                                push rbp	       154	svndump.c	FUNCTION_6
0x4000517	          0x4889e5	                            mov rbp, rsp	       154	svndump.c	FUNCTION_6
0x400051a	        0x4883ec20	                           sub rsp, 0x20	       154	svndump.c	FUNCTION_6
0x400051e	    0x64488b042528	                mov rax, qword fs:[0x28]	       154	svndump.c	FUNCTION_6
0x4000527	        0x488945f8	                mov qword [rbp - 8], rax	       154	svndump.c	FUNCTION_6
0x400052b	            0x31c0	                            xor eax, eax	       154	svndump.c	FUNCTION_6
0x400052d	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       170	svndump.c	FUNCTION_6
0x4000534	      0xe932010000	                           jmp 0x400066b	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x4000539	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       173	svndump.c	FUNCTION_6	WHILE_1
0x400053d	           0xfb600	                   movzx eax, byte [rax]	       173	svndump.c	FUNCTION_6	WHILE_1
0x4000540	          0x8845e3	               mov byte [rbp - 0x1d], al	       173	svndump.c	FUNCTION_6	WHILE_1
0x4000543	        0x807de300	                cmp byte [rbp - 0x1d], 0	       176	svndump.c	FUNCTION_6	WHILE_1	IF_1
0x4000547	            0x740f	                            je 0x4000558	       176	svndump.c	FUNCTION_6	WHILE_1	IF_1
0x4000549	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       176	svndump.c	FUNCTION_6	WHILE_1	IF_1
0x400054d	        0x4883c001	                              add rax, 1	       176	svndump.c	FUNCTION_6	WHILE_1	IF_1
0x4000551	           0xfb600	                   movzx eax, byte [rax]	       176	svndump.c	FUNCTION_6	WHILE_1	IF_1
0x4000554	            0x3c20	                            cmp al, 0x20	       176	svndump.c	FUNCTION_6	WHILE_1	IF_1
0x4000556	            0x7416	                            je 0x400056e	       176	svndump.c	FUNCTION_6	WHILE_1	IF_1
0x4000558	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       177	svndump.c	FUNCTION_6	WHILE_1	CALL_3
0x400055c	          0x4889c6	                            mov rsi, rax	       177	svndump.c	FUNCTION_6	WHILE_1	CALL_3
0x400055f	      0xbf00000000	                              mov edi, 0	       177	svndump.c	FUNCTION_6	WHILE_1	CALL_3
0x4000564	      0xb800000000	                              mov eax, 0	       177	svndump.c	FUNCTION_6	WHILE_1	CALL_3
0x4000569	      0xe800000000	                          call 0x400056e	       177	svndump.c	FUNCTION_6	WHILE_1	CALL_3
0x400056e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       178	svndump.c	FUNCTION_6	WHILE_1	CALL_4
0x4000572	        0x4883c002	                              add rax, 2	       178	svndump.c	FUNCTION_6	WHILE_1	CALL_4
0x4000576	          0x4889c7	                            mov rdi, rax	       178	svndump.c	FUNCTION_6	WHILE_1	CALL_4
0x4000579	      0xe800000000	                          call 0x400057e	       178	svndump.c	FUNCTION_6	WHILE_1	CALL_4
0x400057e	          0x8945e8	             mov dword [rbp - 0x18], eax	       178	svndump.c	FUNCTION_6	WHILE_1	CALL_4
0x4000581	      0xbe00000000	                              mov esi, 0	       179	svndump.c	FUNCTION_6	WHILE_1
0x4000586	      0xbf00000000	                              mov edi, 0	       179	svndump.c	FUNCTION_6	WHILE_1
0x400058b	      0xe84ffbffff	                  call sym.strbuf_setlen	       179	svndump.c	FUNCTION_6	WHILE_1
0x4000590	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       180	svndump.c	FUNCTION_6	WHILE_1	CALL_5
0x4000593	          0x4889c2	                            mov rdx, rax	       180	svndump.c	FUNCTION_6	WHILE_1	CALL_5
0x4000596	      0xbe00000000	                              mov esi, 0	       180	svndump.c	FUNCTION_6	WHILE_1	CALL_5
0x400059b	      0xbf00000000	                              mov edi, 0	       180	svndump.c	FUNCTION_6	WHILE_1	CALL_5
0x40005a0	      0xe800000000	                          call 0x40005a5	       180	svndump.c	FUNCTION_6	WHILE_1	CALL_5
0x40005a5	    0x488b15000000	            mov rdx, qword [0x040005ac] 	       181	svndump.c	FUNCTION_6	WHILE_1	IF_2
0x40005ac	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       181	svndump.c	FUNCTION_6	WHILE_1	IF_2
0x40005af	          0x4839c2	                            cmp rdx, rax	       181	svndump.c	FUNCTION_6	WHILE_1	IF_2
0x40005b2	            0x7305	                           jae 0x40005b9	       181	svndump.c	FUNCTION_6	WHILE_1	IF_2
0x40005b4	      0xe82dffffff	                 call sym.die_short_read	       182	svndump.c	FUNCTION_6	WHILE_1	CALL_6
0x40005b9	      0xbf00000000	                              mov edi, 0	       185	svndump.c	FUNCTION_6	WHILE_1	CALL_7
0x40005be	      0xe800000000	                          call 0x40005c3	       185	svndump.c	FUNCTION_6	WHILE_1	CALL_7
0x40005c3	          0x8945ec	             mov dword [rbp - 0x14], eax	       185	svndump.c	FUNCTION_6	WHILE_1	CALL_7
0x40005c6	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	       186	svndump.c	FUNCTION_6	WHILE_1	IF_3
0x40005ca	            0x7505	                           jne 0x40005d1	       186	svndump.c	FUNCTION_6	WHILE_1	IF_3
0x40005cc	      0xe815ffffff	                 call sym.die_short_read	       187	svndump.c	FUNCTION_6	WHILE_1	CALL_8
0x40005d1	        0x837dec0a	            cmp dword [rbp - 0x14], 0xa 	       188	svndump.c	FUNCTION_6	WHILE_1	IF_4
0x40005d5	            0x7419	                            je 0x40005f0	       188	svndump.c	FUNCTION_6	WHILE_1	IF_4
0x40005d7	    0x488b05000000	            mov rax, qword [0x040005de] 	       189	svndump.c	FUNCTION_6	WHILE_1	CALL_9
0x40005de	          0x4889c6	                            mov rsi, rax	       189	svndump.c	FUNCTION_6	WHILE_1	CALL_9
0x40005e1	      0xbf00000000	                              mov edi, 0	       189	svndump.c	FUNCTION_6	WHILE_1	CALL_9
0x40005e6	      0xb800000000	                              mov eax, 0	       189	svndump.c	FUNCTION_6	WHILE_1	CALL_9
0x40005eb	      0xe800000000	                          call 0x40005f0	       189	svndump.c	FUNCTION_6	WHILE_1	CALL_9
0x40005f0	         0xfbe45e3	            movsx eax, byte [rbp - 0x1d]	       191	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x40005f4	          0x83f84b	                           cmp eax, 0x4b	       191	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x40005f7	            0x740c	                            je 0x4000605	       191	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x40005f9	          0x83f856	                           cmp eax, 0x56	       191	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x40005fc	            0x7430	                            je 0x400062e	       191	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x40005fe	          0x83f844	                           cmp eax, 0x44	       191	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x4000601	            0x7413	                            je 0x4000616	       191	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x4000603	            0xeb50	                           jmp 0x4000655	       191	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x4000605	      0xbe00000000	                              mov esi, 0	       193	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_10
0x400060a	      0xbf00000000	                              mov edi, 0	       193	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_10
0x400060f	      0xe837faffff	                    call sym.strbuf_swap	       193	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_10
0x4000614	            0xeb55	                           jmp 0x400066b	       194	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x4000616	        0x488d45e4	                   lea rax, [rbp - 0x1c]	       196	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_11
0x400061a	          0x4889c2	                            mov rdx, rax	       196	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_11
0x400061d	      0xbe00000000	                              mov esi, 0	       196	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_11
0x4000622	      0xbf00000000	                              mov edi, 0	       196	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_11
0x4000627	      0xe8adfcffff	                call sym.handle_property	       196	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_11
0x400062c	            0xeb3d	                           jmp 0x400066b	       197	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x400062e	        0x488d45e4	                   lea rax, [rbp - 0x1c]	       199	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_12
0x4000632	          0x4889c2	                            mov rdx, rax	       199	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_12
0x4000635	      0xbe00000000	                              mov esi, 0	       199	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_12
0x400063a	      0xbf00000000	                              mov edi, 0	       199	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_12
0x400063f	      0xe895fcffff	                call sym.handle_property	       199	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_12
0x4000644	      0xbe00000000	                              mov esi, 0	       200	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x4000649	      0xbf00000000	                              mov edi, 0	       200	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x400064e	      0xe88cfaffff	                  call sym.strbuf_setlen	       200	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x4000653	            0xeb16	                           jmp 0x400066b	       201	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1
0x4000655	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       203	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_13
0x4000659	          0x4889c6	                            mov rsi, rax	       203	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_13
0x400065c	      0xbf00000000	                              mov edi, 0	       203	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_13
0x4000661	      0xb800000000	                              mov eax, 0	       203	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_13
0x4000666	      0xe800000000	                          call 0x400066b	       203	svndump.c	FUNCTION_6	WHILE_1	SWITCH_1	CALL_13
0x400066b	      0xbf00000000	                              mov edi, 0	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x4000670	      0xe800000000	                          call 0x4000675	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x4000675	        0x488945f0	             mov qword [rbp - 0x10], rax	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x4000679	      0x48837df000	               cmp qword [rbp - 0x10], 0	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x400067e	            0x7419	                            je 0x4000699	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x4000680	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x4000684	      0xbe00000000	                              mov esi, 0	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x4000689	          0x4889c7	                            mov rdi, rax	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x400068c	      0xe800000000	                          call 0x4000691	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x4000691	            0x85c0	                           test eax, eax	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x4000693	     0xf85a0feffff	                           jne 0x4000539	       171	svndump.c	FUNCTION_6	WHILE_1	CALL_2
0x4000699	              0x90	                                     nop	       206	svndump.c	FUNCTION_6
0x400069a	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	svndump.c	FUNCTION_6
0x400069e	    0x644833042528	                xor rax, qword fs:[0x28]	       206	svndump.c	FUNCTION_6
0x40006a7	            0x7405	                            je 0x40006ae	       206	svndump.c	FUNCTION_6
0x40006a9	      0xe800000000	                          call 0x40006ae	       206	svndump.c	FUNCTION_6
0x40006ae	              0xc9	                                   leave	       206	svndump.c	FUNCTION_6
0x40006af	              0xc3	                                     ret	       206	svndump.c	FUNCTION_6
strbuf_addstr	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,2:IF,0:functions,0:SWITCH,0	17
0x4000179	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_20
0x400017a	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_20
0x400017d	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_20
0x4000181	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_20
0x4000185	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_20
0x4000189	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_20	CALL_2
0x400018d	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_20	CALL_2
0x4000190	      0xe800000000	                          call 0x4000195	       279	strbuf.h	FUNCTION_20	CALL_2
0x4000195	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_20	CALL_2
0x4000198	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_20	CALL_2
0x400019c	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_20	CALL_2
0x40001a0	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_20	CALL_2
0x40001a3	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_20	CALL_2
0x40001a6	      0xe800000000	                          call 0x40001ab	       279	strbuf.h	FUNCTION_20	CALL_2
0x40001ab	              0x90	                                     nop	       280	strbuf.h	FUNCTION_20
0x40001ac	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_20
0x40001ad	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_20
reset_rev_ctx	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,0:IF,0:functions,0:SWITCH,0	19
0x400023b	              0x55	                                push rbp	        74	svndump.c	FUNCTION_2
0x400023c	          0x4889e5	                            mov rbp, rsp	        74	svndump.c	FUNCTION_2
0x400023f	        0x4883ec10	                           sub rsp, 0x10	        74	svndump.c	FUNCTION_2
0x4000243	          0x897dfc	                mov dword [rbp - 4], edi	        74	svndump.c	FUNCTION_2
0x4000246	          0x8b45fc	                mov eax, dword [rbp - 4]	        75	svndump.c	FUNCTION_2
0x4000249	    0x890500000000	            mov dword [0x0400024f], eax 	        75	svndump.c	FUNCTION_2
0x400024f	    0x48c705000000	               mov qword [0x0400025a], 0	        76	svndump.c	FUNCTION_2
0x400025a	      0xbe00000000	                              mov esi, 0	        77	svndump.c	FUNCTION_2
0x400025f	      0xbf00000000	                              mov edi, 0	        77	svndump.c	FUNCTION_2
0x4000264	      0xe876feffff	                  call sym.strbuf_setlen	        77	svndump.c	FUNCTION_2
0x4000269	      0xbe00000000	                              mov esi, 0	        78	svndump.c	FUNCTION_2
0x400026e	      0xbf00000000	                              mov edi, 0	        78	svndump.c	FUNCTION_2
0x4000273	      0xe867feffff	                  call sym.strbuf_setlen	        78	svndump.c	FUNCTION_2
0x4000278	      0xbe00000000	                              mov esi, 0	        79	svndump.c	FUNCTION_2
0x400027d	      0xbf00000000	                              mov edi, 0	        79	svndump.c	FUNCTION_2
0x4000282	      0xe858feffff	                  call sym.strbuf_setlen	        79	svndump.c	FUNCTION_2
0x4000287	              0x90	                                     nop	        80	svndump.c	FUNCTION_2
0x4000288	              0xc9	                                   leave	        80	svndump.c	FUNCTION_2
0x4000289	              0xc3	                                     ret	        80	svndump.c	FUNCTION_2
strbuf_swap	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,0:IF,0:functions,0:SWITCH,0	39
0x400004b	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_16
0x400004c	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_16
0x400004f	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_16
0x4000053	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_16
0x4000057	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_16
0x400005b	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_16
0x4000064	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_16
0x4000068	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_16
0x400006a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_16
0x400006e	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_16
0x4000072	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_16
0x4000076	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_16
0x400007a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_16
0x400007e	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_16
0x4000081	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_16
0x4000085	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_16
0x4000089	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_16
0x400008d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_16
0x4000091	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_16
0x4000095	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_16
0x4000099	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_16
0x400009d	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_16
0x40000a2	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_16
0x40000a5	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_16
0x40000a8	      0xe800000000	                          call 0x40000ad	       127	strbuf.h	FUNCTION_16
0x40000ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_16
0x40000b1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_16
0x40000b5	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_16
0x40000b8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_16
0x40000bc	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_16
0x40000c0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_16
0x40000c4	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_16
0x40000c8	              0x90	                                     nop	       128	strbuf.h	FUNCTION_16
0x40000c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_16
0x40000cd	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_16
0x40000d6	            0x7405	                            je 0x40000dd	       128	strbuf.h	FUNCTION_16
0x40000d8	      0xe800000000	                          call 0x40000dd	       128	strbuf.h	FUNCTION_16
0x40000dd	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_16
0x40000de	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_16
svndump_deinit	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,13:IF,2:functions,0:SWITCH,0	43
0x40013cb	              0x55	                                push rbp	       518	svndump.c	FUNCTION_14
0x40013cc	          0x4889e5	                            mov rbp, rsp	       518	svndump.c	FUNCTION_14
0x40013cf	      0xe800000000	                          call 0x40013d4	       519	svndump.c	FUNCTION_14	CALL_1
0x40013d4	      0xbf00000000	                              mov edi, 0	       520	svndump.c	FUNCTION_14	CALL_2
0x40013d9	      0xe8aceeffff	                 call sym.reset_dump_ctx	       520	svndump.c	FUNCTION_14	CALL_2
0x40013de	      0xbf00000000	                              mov edi, 0	       521	svndump.c	FUNCTION_14	CALL_3
0x40013e3	      0xe853eeffff	                  call sym.reset_rev_ctx	       521	svndump.c	FUNCTION_14	CALL_3
0x40013e8	      0xbf00000000	                              mov edi, 0	       522	svndump.c	FUNCTION_14	CALL_4
0x40013ed	      0xe8bcedffff	                 call sym.reset_node_ctx	       522	svndump.c	FUNCTION_14	CALL_4
0x40013f2	      0xbf00000000	                              mov edi, 0	       523	svndump.c	FUNCTION_14	CALL_5
0x40013f7	      0xe800000000	                          call 0x40013fc	       523	svndump.c	FUNCTION_14	CALL_5
0x40013fc	      0xbf00000000	                              mov edi, 0	       524	svndump.c	FUNCTION_14	CALL_6
0x4001401	      0xe800000000	                          call 0x4001406	       524	svndump.c	FUNCTION_14	CALL_6
0x4001406	      0xbf00000000	                              mov edi, 0	       525	svndump.c	FUNCTION_14	CALL_7
0x400140b	      0xe800000000	                          call 0x4001410	       525	svndump.c	FUNCTION_14	CALL_7
0x4001410	      0xbf00000000	                              mov edi, 0	       526	svndump.c	FUNCTION_14	CALL_8
0x4001415	      0xe800000000	                          call 0x400141a	       526	svndump.c	FUNCTION_14	CALL_8
0x400141a	      0xbf00000000	                              mov edi, 0	       527	svndump.c	FUNCTION_14	CALL_9
0x400141f	      0xe800000000	                          call 0x4001424	       527	svndump.c	FUNCTION_14	CALL_9
0x4001424	      0xbf00000000	                              mov edi, 0	       528	svndump.c	FUNCTION_14	IF_1	CALL_10
0x4001429	      0xe800000000	                          call 0x400142e	       528	svndump.c	FUNCTION_14	IF_1	CALL_10
0x400142e	            0x85c0	                           test eax, eax	       528	svndump.c	FUNCTION_14	IF_1	CALL_10
0x4001430	            0x741e	                            je 0x4001450	       528	svndump.c	FUNCTION_14	IF_1	CALL_10
0x4001432	    0x488b05000000	            mov rax, qword [0x04001439] 	       529	svndump.c	FUNCTION_14	CALL_11
0x4001439	          0x4889c1	                            mov rcx, rax	       529	svndump.c	FUNCTION_14	CALL_11
0x400143c	      0xba0c000000	                            mov edx, 0xc	       529	svndump.c	FUNCTION_14	CALL_11
0x4001441	      0xbe01000000	                              mov esi, 1	       529	svndump.c	FUNCTION_14	CALL_11
0x4001446	      0xbf00000000	                              mov edi, 0	       529	svndump.c	FUNCTION_14	CALL_11
0x400144b	      0xe800000000	                          call 0x4001450	       529	svndump.c	FUNCTION_14	CALL_11
0x4001450	    0x488b05000000	            mov rax, qword [0x04001457] 	       530	svndump.c	FUNCTION_14	IF_2	CALL_12
0x4001457	          0x4889c7	                            mov rdi, rax	       530	svndump.c	FUNCTION_14	IF_2	CALL_12
0x400145a	      0xe800000000	                          call 0x400145f	       530	svndump.c	FUNCTION_14	IF_2	CALL_12
0x400145f	            0x85c0	                           test eax, eax	       530	svndump.c	FUNCTION_14	IF_2	CALL_12
0x4001461	            0x741e	                            je 0x4001481	       530	svndump.c	FUNCTION_14	IF_2	CALL_12
0x4001463	    0x488b05000000	            mov rax, qword [0x0400146a] 	       531	svndump.c	FUNCTION_14	CALL_13
0x400146a	          0x4889c1	                            mov rcx, rax	       531	svndump.c	FUNCTION_14	CALL_13
0x400146d	      0xba0d000000	                            mov edx, 0xd	       531	svndump.c	FUNCTION_14	CALL_13
0x4001472	      0xbe01000000	                              mov esi, 1	       531	svndump.c	FUNCTION_14	CALL_13
0x4001477	      0xbf00000000	                              mov edi, 0	       531	svndump.c	FUNCTION_14	CALL_13
0x400147c	      0xe800000000	                          call 0x4001481	       531	svndump.c	FUNCTION_14	CALL_13
0x4001481	              0x90	                                     nop	       532	svndump.c	FUNCTION_14
0x4001482	              0x5d	                                 pop rbp	       532	svndump.c	FUNCTION_14
0x4001483	              0xc3	                                     ret	       532	svndump.c	FUNCTION_14
handle_node	FOR,0:DO,0:ELSE,5:WHILE,0:CALL,18:IF,21:functions,0:SWITCH,0	196
0x40006b0	              0x55	                                push rbp	       209	svndump.c	FUNCTION_7
0x40006b1	          0x4889e5	                            mov rbp, rsp	       209	svndump.c	FUNCTION_7
0x40006b4	        0x4883ec30	                           sub rsp, 0x30	       209	svndump.c	FUNCTION_7
0x40006b8	    0x64488b042528	                mov rax, qword fs:[0x28]	       209	svndump.c	FUNCTION_7
0x40006c1	        0x488945f8	                mov qword [rbp - 8], rax	       209	svndump.c	FUNCTION_7
0x40006c5	            0x31c0	                            xor eax, eax	       209	svndump.c	FUNCTION_7
0x40006c7	    0x8b0500000000	            mov eax, dword [0x040006cd] 	       210	svndump.c	FUNCTION_7
0x40006cd	          0x8945e4	             mov dword [rbp - 0x1c], eax	       210	svndump.c	FUNCTION_7
0x40006d0	    0x488b05000000	            mov rax, qword [0x040006d7] 	       211	svndump.c	FUNCTION_7
0x40006d7	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       211	svndump.c	FUNCTION_7
0x40006db	           0xf95c0	                                setne al	       211	svndump.c	FUNCTION_7
0x40006de	           0xfb6c0	                           movzx eax, al	       211	svndump.c	FUNCTION_7
0x40006e1	          0x8945e8	             mov dword [rbp - 0x18], eax	       211	svndump.c	FUNCTION_7
0x40006e4	    0x488b05000000	            mov rax, qword [0x040006eb] 	       212	svndump.c	FUNCTION_7
0x40006eb	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       212	svndump.c	FUNCTION_7
0x40006ef	           0xf95c0	                                setne al	       212	svndump.c	FUNCTION_7
0x40006f2	           0xfb6c0	                           movzx eax, al	       212	svndump.c	FUNCTION_7
0x40006f5	          0x8945ec	             mov dword [rbp - 0x14], eax	       212	svndump.c	FUNCTION_7
0x40006f8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       220	svndump.c	FUNCTION_7
0x4000700	    0xc745e0a48100	          mov dword [rbp - 0x20], 0x81a4	       221	svndump.c	FUNCTION_7
0x4000707	    0x8b0500000000	            mov eax, dword [0x0400070d] 	       223	svndump.c	FUNCTION_7	IF_1
0x400070d	          0x83f803	                              cmp eax, 3	       223	svndump.c	FUNCTION_7	IF_1
0x4000710	            0x7539	                           jne 0x400074b	       223	svndump.c	FUNCTION_7	IF_1
0x4000712	        0x837dec00	               cmp dword [rbp - 0x14], 0	       224	svndump.c	FUNCTION_7	IF_1	IF_2
0x4000716	            0x7510	                           jne 0x4000728	       224	svndump.c	FUNCTION_7	IF_1	IF_2
0x4000718	        0x837de800	               cmp dword [rbp - 0x18], 0	       224	svndump.c	FUNCTION_7	IF_1	IF_2
0x400071c	            0x750a	                           jne 0x4000728	       224	svndump.c	FUNCTION_7	IF_1	IF_2
0x400071e	    0x8b0500000000	            mov eax, dword [0x04000724] 	       224	svndump.c	FUNCTION_7	IF_1	IF_2
0x4000724	            0x85c0	                           test eax, eax	       224	svndump.c	FUNCTION_7	IF_1	IF_2
0x4000726	            0x740f	                            je 0x4000737	       224	svndump.c	FUNCTION_7	IF_1	IF_2
0x4000728	      0xbf00000000	                              mov edi, 0	       225	svndump.c	FUNCTION_7	IF_1	IF_2	CALL_1
0x400072d	      0xb800000000	                              mov eax, 0	       225	svndump.c	FUNCTION_7	IF_1	IF_2	CALL_1
0x4000732	      0xe800000000	                          call 0x4000737	       225	svndump.c	FUNCTION_7	IF_1	IF_2	CALL_1
0x4000737	    0x488b05000000	            mov rax, qword [0x0400073e] 	       227	svndump.c	FUNCTION_7	IF_1	CALL_2
0x400073e	          0x4889c7	                            mov rdi, rax	       227	svndump.c	FUNCTION_7	IF_1	CALL_2
0x4000741	      0xe800000000	                          call 0x4000746	       227	svndump.c	FUNCTION_7	IF_1	CALL_2
0x4000746	      0xe99c020000	                           jmp 0x40009e7	       228	svndump.c	FUNCTION_7	IF_1
0x400074b	    0x8b0500000000	            mov eax, dword [0x04000751] 	       230	svndump.c	FUNCTION_7	IF_3
0x4000751	          0x83f804	                              cmp eax, 4	       230	svndump.c	FUNCTION_7	IF_3
0x4000754	            0x7519	                           jne 0x400076f	       230	svndump.c	FUNCTION_7	IF_3
0x4000756	    0x488b05000000	            mov rax, qword [0x0400075d] 	       231	svndump.c	FUNCTION_7	IF_3	CALL_3
0x400075d	          0x4889c7	                            mov rdi, rax	       231	svndump.c	FUNCTION_7	IF_3	CALL_3
0x4000760	      0xe800000000	                          call 0x4000765	       231	svndump.c	FUNCTION_7	IF_3	CALL_3
0x4000765	    0xc70500000000	               mov dword [0x0400076f], 2	       232	svndump.c	FUNCTION_7	IF_3
0x400076f	    0x8b0500000000	            mov eax, dword [0x04000775] 	       234	svndump.c	FUNCTION_7	IF_4
0x4000775	            0x85c0	                           test eax, eax	       234	svndump.c	FUNCTION_7	IF_4
0x4000777	            0x7433	                            je 0x40007ac	       234	svndump.c	FUNCTION_7	IF_4
0x4000779	    0x488b15000000	            mov rdx, qword [0x04000780] 	       235	svndump.c	FUNCTION_7	IF_4	CALL_4
0x4000780	    0x488b0d000000	            mov rcx, qword [0x04000787] 	       235	svndump.c	FUNCTION_7	IF_4	CALL_4
0x4000787	    0x8b0500000000	            mov eax, dword [0x0400078d] 	       235	svndump.c	FUNCTION_7	IF_4	CALL_4
0x400078d	          0x4889ce	                            mov rsi, rcx	       235	svndump.c	FUNCTION_7	IF_4	CALL_4
0x4000790	            0x89c7	                            mov edi, eax	       235	svndump.c	FUNCTION_7	IF_4	CALL_4
0x4000792	      0xe800000000	                          call 0x4000797	       235	svndump.c	FUNCTION_7	IF_4	CALL_4
0x4000797	    0x8b0500000000	            mov eax, dword [0x0400079d] 	       236	svndump.c	FUNCTION_7	IF_4	IF_5
0x400079d	          0x83f802	                              cmp eax, 2	       236	svndump.c	FUNCTION_7	IF_4	IF_5
0x40007a0	            0x750a	                           jne 0x40007ac	       236	svndump.c	FUNCTION_7	IF_4	IF_5
0x40007a2	    0xc70500000000	               mov dword [0x040007ac], 1	       237	svndump.c	FUNCTION_7	IF_4	IF_5
0x40007ac	        0x837dec00	               cmp dword [rbp - 0x14], 0	       239	svndump.c	FUNCTION_7	IF_6
0x40007b0	            0x7418	                            je 0x40007ca	       239	svndump.c	FUNCTION_7	IF_6
0x40007b2	    0x817de4004000	         cmp dword [rbp - 0x1c], 0x4000 	       239	svndump.c	FUNCTION_7	IF_6
0x40007b9	            0x750f	                           jne 0x40007ca	       239	svndump.c	FUNCTION_7	IF_6
0x40007bb	      0xbf00000000	                              mov edi, 0	       240	svndump.c	FUNCTION_7	CALL_5
0x40007c0	      0xb800000000	                              mov eax, 0	       240	svndump.c	FUNCTION_7	CALL_5
0x40007c5	      0xe800000000	                          call 0x40007ca	       240	svndump.c	FUNCTION_7	CALL_5
0x40007ca	    0x8b0500000000	            mov eax, dword [0x040007d0] 	       245	svndump.c	FUNCTION_7	IF_7
0x40007d0	          0x83f801	                              cmp eax, 1	       245	svndump.c	FUNCTION_7	IF_7
0x40007d3	            0x7533	                           jne 0x4000808	       245	svndump.c	FUNCTION_7	IF_7
0x40007d5	    0x488b05000000	            mov rax, qword [0x040007dc] 	       245	svndump.c	FUNCTION_7	IF_7
0x40007dc	           0xfb600	                   movzx eax, byte [rax]	       245	svndump.c	FUNCTION_7	IF_7
0x40007df	            0x84c0	                             test al, al	       245	svndump.c	FUNCTION_7	IF_7
0x40007e1	            0x7525	                           jne 0x4000808	       245	svndump.c	FUNCTION_7	IF_7
0x40007e3	    0x817de4004000	         cmp dword [rbp - 0x1c], 0x4000 	       246	svndump.c	FUNCTION_7	IF_7	IF_8
0x40007ea	            0x740f	                            je 0x40007fb	       246	svndump.c	FUNCTION_7	IF_7	IF_8
0x40007ec	      0xbf00000000	                              mov edi, 0	       247	svndump.c	FUNCTION_7	IF_7	CALL_6
0x40007f1	      0xb800000000	                              mov eax, 0	       247	svndump.c	FUNCTION_7	IF_7	CALL_6
0x40007f6	      0xe800000000	                          call 0x40007fb	       247	svndump.c	FUNCTION_7	IF_7	CALL_6
0x40007fb	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       248	svndump.c	FUNCTION_7	IF_7
0x4000803	      0xe9c9000000	                           jmp 0x40008d1	       248	svndump.c	FUNCTION_7	IF_7
0x4000808	    0x8b0500000000	            mov eax, dword [0x0400080e] 	       249	svndump.c	FUNCTION_7	ELSE_1	IF_9
0x400080e	          0x83f801	                              cmp eax, 1	       249	svndump.c	FUNCTION_7	ELSE_1	IF_9
0x4000811	            0x756f	                           jne 0x4000882	       249	svndump.c	FUNCTION_7	ELSE_1	IF_9
0x4000813	    0x488b05000000	            mov rax, qword [0x0400081a] 	       251	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_7
0x400081a	        0x488d55dc	                   lea rdx, [rbp - 0x24]	       251	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_7
0x400081e	          0x4889d6	                            mov rsi, rdx	       251	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_7
0x4000821	          0x4889c7	                            mov rdi, rax	       251	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_7
0x4000824	      0xe800000000	                          call 0x4000829	       251	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_7
0x4000829	        0x488945f0	             mov qword [rbp - 0x10], rax	       251	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_7
0x400082d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       252	svndump.c	FUNCTION_7	ELSE_1	IF_9	IF_10
0x4000830	      0x3d00400000	                         cmp eax, 0x4000	       252	svndump.c	FUNCTION_7	ELSE_1	IF_9	IF_10
0x4000835	            0x7518	                           jne 0x400084f	       252	svndump.c	FUNCTION_7	ELSE_1	IF_9	IF_10
0x4000837	    0x817de4004000	         cmp dword [rbp - 0x1c], 0x4000 	       252	svndump.c	FUNCTION_7	ELSE_1	IF_9	IF_10
0x400083e	            0x740f	                            je 0x400084f	       252	svndump.c	FUNCTION_7	ELSE_1	IF_9	IF_10
0x4000840	      0xbf00000000	                              mov edi, 0	       253	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_8
0x4000845	      0xb800000000	                              mov eax, 0	       253	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_8
0x400084a	      0xe800000000	                          call 0x400084f	       253	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_8
0x400084f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       254	svndump.c	FUNCTION_7	ELSE_1	IF_9	IF_11
0x4000852	      0x3d00400000	                         cmp eax, 0x4000	       254	svndump.c	FUNCTION_7	ELSE_1	IF_9	IF_11
0x4000857	            0x7418	                            je 0x4000871	       254	svndump.c	FUNCTION_7	ELSE_1	IF_9	IF_11
0x4000859	    0x817de4004000	         cmp dword [rbp - 0x1c], 0x4000 	       254	svndump.c	FUNCTION_7	ELSE_1	IF_9	IF_11
0x4000860	            0x750f	                           jne 0x4000871	       254	svndump.c	FUNCTION_7	ELSE_1	IF_9	IF_11
0x4000862	      0xbf00000000	                              mov edi, 0	       255	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_9
0x4000867	      0xb800000000	                              mov eax, 0	       255	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_9
0x400086c	      0xe800000000	                          call 0x4000871	       255	svndump.c	FUNCTION_7	ELSE_1	IF_9	CALL_9
0x4000871	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       256	svndump.c	FUNCTION_7	ELSE_1	IF_9
0x4000874	    0x890500000000	            mov dword [0x0400087a], eax 	       256	svndump.c	FUNCTION_7	ELSE_1	IF_9
0x400087a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       257	svndump.c	FUNCTION_7	ELSE_1	IF_9
0x400087d	          0x8945e0	             mov dword [rbp - 0x20], eax	       257	svndump.c	FUNCTION_7	ELSE_1	IF_9
0x4000880	            0xeb4f	                           jmp 0x40008d1	       257	svndump.c	FUNCTION_7	ELSE_1	IF_9
0x4000882	    0x8b0500000000	            mov eax, dword [0x04000888] 	       258	svndump.c	FUNCTION_7	ELSE_2	IF_12
0x4000888	          0x83f802	                              cmp eax, 2	       258	svndump.c	FUNCTION_7	ELSE_2	IF_12
0x400088b	            0x7535	                           jne 0x40008c2	       258	svndump.c	FUNCTION_7	ELSE_2	IF_12
0x400088d	    0x817de4004000	         cmp dword [rbp - 0x1c], 0x4000 	       259	svndump.c	FUNCTION_7	ELSE_2	IF_12	IF_13
0x4000894	            0x750a	                           jne 0x40008a0	       259	svndump.c	FUNCTION_7	ELSE_2	IF_12	IF_13
0x4000896	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       260	svndump.c	FUNCTION_7	ELSE_2	IF_12	IF_13
0x400089e	            0xeb31	                           jmp 0x40008d1	       260	svndump.c	FUNCTION_7	ELSE_2	IF_12	IF_13
0x40008a0	        0x837dec00	               cmp dword [rbp - 0x14], 0	       261	svndump.c	FUNCTION_7	ELSE_2	IF_12	ELSE_3	IF_14
0x40008a4	            0x740d	                            je 0x40008b3	       261	svndump.c	FUNCTION_7	ELSE_2	IF_12	ELSE_3	IF_14
0x40008a6	    0x488b05000000	            mov rax, qword [0x040008ad] 	       262	svndump.c	FUNCTION_7	ELSE_2	IF_12	ELSE_3	IF_14
0x40008ad	        0x488945f0	             mov qword [rbp - 0x10], rax	       262	svndump.c	FUNCTION_7	ELSE_2	IF_12	ELSE_3	IF_14
0x40008b1	            0xeb1e	                           jmp 0x40008d1	       262	svndump.c	FUNCTION_7	ELSE_2	IF_12	ELSE_3	IF_14
0x40008b3	      0xbf00000000	                              mov edi, 0	       264	svndump.c	FUNCTION_7	ELSE_2	IF_12	CALL_10
0x40008b8	      0xb800000000	                              mov eax, 0	       264	svndump.c	FUNCTION_7	ELSE_2	IF_12	CALL_10
0x40008bd	      0xe800000000	                          call 0x40008c2	       264	svndump.c	FUNCTION_7	ELSE_2	IF_12	CALL_10
0x40008c2	      0xbf00000000	                              mov edi, 0	       266	svndump.c	FUNCTION_7	ELSE_5	CALL_11
0x40008c7	      0xb800000000	                              mov eax, 0	       266	svndump.c	FUNCTION_7	ELSE_5	CALL_11
0x40008cc	      0xe800000000	                          call 0x40008d1	       266	svndump.c	FUNCTION_7	ELSE_5	CALL_11
0x40008d1	        0x837de800	               cmp dword [rbp - 0x18], 0	       272	svndump.c	FUNCTION_7	IF_15
0x40008d5	            0x7424	                            je 0x40008fb	       272	svndump.c	FUNCTION_7	IF_15
0x40008d7	    0x8b0500000000	            mov eax, dword [0x040008dd] 	       273	svndump.c	FUNCTION_7	IF_15	IF_16
0x40008dd	            0x85c0	                           test eax, eax	       273	svndump.c	FUNCTION_7	IF_15	IF_16
0x40008df	            0x7509	                           jne 0x40008ea	       273	svndump.c	FUNCTION_7	IF_15	IF_16
0x40008e1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       274	svndump.c	FUNCTION_7	IF_15	IF_16
0x40008e4	    0x890500000000	            mov dword [0x040008ea], eax 	       274	svndump.c	FUNCTION_7	IF_15	IF_16
0x40008ea	    0x488b05000000	            mov rax, qword [0x040008f1] 	       275	svndump.c	FUNCTION_7	IF_15	IF_17
0x40008f1	          0x4885c0	                           test rax, rax	       275	svndump.c	FUNCTION_7	IF_15	IF_17
0x40008f4	            0x7405	                            je 0x40008fb	       275	svndump.c	FUNCTION_7	IF_15	IF_17
0x40008f6	      0xe81bfcffff	                     call sym.read_props	       276	svndump.c	FUNCTION_7	IF_15	CALL_12
0x40008fb	    0x817de4004000	         cmp dword [rbp - 0x1c], 0x4000 	       282	svndump.c	FUNCTION_7	IF_18
0x4000902	     0xf84de000000	                            je 0x40009e6	       282	svndump.c	FUNCTION_7	IF_18
0x4000908	      0x48837df000	               cmp qword [rbp - 0x10], 0	       284	svndump.c	FUNCTION_7	CALL_13
0x400090d	            0x7519	                           jne 0x4000928	       284	svndump.c	FUNCTION_7	CALL_13
0x400090f	      0xb900000000	                              mov ecx, 0	       284	svndump.c	FUNCTION_7	CALL_13
0x4000914	      0xba1c010000	                          mov edx, 0x11c	       284	svndump.c	FUNCTION_7	CALL_13
0x4000919	      0xbe00000000	                              mov esi, 0	       284	svndump.c	FUNCTION_7	CALL_13
0x400091e	      0xbf00000000	                              mov edi, 0	       284	svndump.c	FUNCTION_7	CALL_13
0x4000923	      0xe800000000	                          call 0x4000928	       284	svndump.c	FUNCTION_7	CALL_13
0x4000928	    0x488b05000000	            mov rax, qword [0x0400092f] 	       285	svndump.c	FUNCTION_7	IF_19
0x400092f	        0x483945f0	            cmp qword [rbp - 0x10], rax 	       285	svndump.c	FUNCTION_7	IF_19
0x4000933	            0x7508	                           jne 0x400093d	       285	svndump.c	FUNCTION_7	IF_19
0x4000935	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       287	svndump.c	FUNCTION_7	IF_19
0x400093d	        0x837dec00	               cmp dword [rbp - 0x14], 0	       288	svndump.c	FUNCTION_7	IF_20
0x4000941	            0x7520	                           jne 0x4000963	       288	svndump.c	FUNCTION_7	IF_20
0x4000943	    0x8b0d00000000	            mov ecx, dword [0x04000949] 	       289	svndump.c	FUNCTION_7	IF_20	CALL_14
0x4000949	    0x488b05000000	            mov rax, qword [0x04000950] 	       289	svndump.c	FUNCTION_7	IF_20	CALL_14
0x4000950	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       289	svndump.c	FUNCTION_7	IF_20	CALL_14
0x4000954	            0x89ce	                            mov esi, ecx	       289	svndump.c	FUNCTION_7	IF_20	CALL_14
0x4000956	          0x4889c7	                            mov rdi, rax	       289	svndump.c	FUNCTION_7	IF_20	CALL_14
0x4000959	      0xe800000000	                          call 0x400095e	       289	svndump.c	FUNCTION_7	IF_20	CALL_14
0x400095e	      0xe984000000	                           jmp 0x40009e7	       290	svndump.c	FUNCTION_7	IF_20
0x4000963	    0x8b0500000000	            mov eax, dword [0x04000969] 	       292	svndump.c	FUNCTION_7	IF_21
0x4000969	            0x85c0	                           test eax, eax	       292	svndump.c	FUNCTION_7	IF_21
0x400096b	            0x753a	                           jne 0x40009a7	       292	svndump.c	FUNCTION_7	IF_21
0x400096d	    0x8b0d00000000	            mov ecx, dword [0x04000973] 	       293	svndump.c	FUNCTION_7	IF_21	CALL_15
0x4000973	    0x488b05000000	            mov rax, qword [0x0400097a] 	       293	svndump.c	FUNCTION_7	IF_21	CALL_15
0x400097a	      0xba00000000	                              mov edx, 0	       293	svndump.c	FUNCTION_7	IF_21	CALL_15
0x400097f	            0x89ce	                            mov esi, ecx	       293	svndump.c	FUNCTION_7	IF_21	CALL_15
0x4000981	          0x4889c7	                            mov rdi, rax	       293	svndump.c	FUNCTION_7	IF_21	CALL_15
0x4000984	      0xe800000000	                          call 0x4000989	       293	svndump.c	FUNCTION_7	IF_21	CALL_15
0x4000989	    0x488b0d000000	            mov rcx, qword [0x04000990] 	       294	svndump.c	FUNCTION_7	IF_21	CALL_16
0x4000990	    0x8b0500000000	            mov eax, dword [0x04000996] 	       294	svndump.c	FUNCTION_7	IF_21	CALL_16
0x4000996	      0xba00000000	                              mov edx, 0	       294	svndump.c	FUNCTION_7	IF_21	CALL_16
0x400099b	          0x4889ce	                            mov rsi, rcx	       294	svndump.c	FUNCTION_7	IF_21	CALL_16
0x400099e	            0x89c7	                            mov edi, eax	       294	svndump.c	FUNCTION_7	IF_21	CALL_16
0x40009a0	      0xe800000000	                          call 0x40009a5	       294	svndump.c	FUNCTION_7	IF_21	CALL_16
0x40009a5	            0xeb40	                           jmp 0x40009e7	       295	svndump.c	FUNCTION_7	IF_21
0x40009a7	    0x8b0d00000000	            mov ecx, dword [0x040009ad] 	       297	svndump.c	FUNCTION_7	CALL_17
0x40009ad	    0x488b05000000	            mov rax, qword [0x040009b4] 	       297	svndump.c	FUNCTION_7	CALL_17
0x40009b4	      0xba00000000	                              mov edx, 0	       297	svndump.c	FUNCTION_7	CALL_17
0x40009b9	            0x89ce	                            mov esi, ecx	       297	svndump.c	FUNCTION_7	CALL_17
0x40009bb	          0x4889c7	                            mov rdi, rax	       297	svndump.c	FUNCTION_7	CALL_17
0x40009be	      0xe800000000	                          call 0x40009c3	       297	svndump.c	FUNCTION_7	CALL_17
0x40009c3	    0x488b0d000000	            mov rcx, qword [0x040009ca] 	       298	svndump.c	FUNCTION_7	CALL_18
0x40009ca	    0x8b0500000000	            mov eax, dword [0x040009d0] 	       298	svndump.c	FUNCTION_7	CALL_18
0x40009d0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       298	svndump.c	FUNCTION_7	CALL_18
0x40009d4	          0x8b75e0	             mov esi, dword [rbp - 0x20]	       298	svndump.c	FUNCTION_7	CALL_18
0x40009d7	    0x41b800000000	                              mov r8d, 0	       298	svndump.c	FUNCTION_7	CALL_18
0x40009dd	            0x89c7	                            mov edi, eax	       298	svndump.c	FUNCTION_7	CALL_18
0x40009df	      0xe800000000	                          call 0x40009e4	       298	svndump.c	FUNCTION_7	CALL_18
0x40009e4	            0xeb01	                           jmp 0x40009e7	       298	svndump.c	FUNCTION_7	CALL_18
0x40009e6	              0x90	                                     nop	       283	svndump.c	FUNCTION_7	IF_18
0x40009e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	svndump.c	FUNCTION_7
0x40009eb	    0x644833042528	                xor rax, qword fs:[0x28]	       300	svndump.c	FUNCTION_7
0x40009f4	            0x7405	                            je 0x40009fb	       300	svndump.c	FUNCTION_7
0x40009f6	      0xe800000000	                          call 0x40009fb	       300	svndump.c	FUNCTION_7
0x40009fb	              0xc9	                                   leave	       300	svndump.c	FUNCTION_7
0x40009fc	              0xc3	                                     ret	       300	svndump.c	FUNCTION_7
die_short_read	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,3:IF,1:functions,0:SWITCH,0	12
0x40004e6	              0x55	                                push rbp	       147	svndump.c	FUNCTION_5
0x40004e7	          0x4889e5	                            mov rbp, rsp	       147	svndump.c	FUNCTION_5
0x40004ea	      0xbf00000000	                              mov edi, 0	       148	svndump.c	FUNCTION_5	IF_1	CALL_1
0x40004ef	      0xe800000000	                          call 0x40004f4	       148	svndump.c	FUNCTION_5	IF_1	CALL_1
0x40004f4	            0x85c0	                           test eax, eax	       148	svndump.c	FUNCTION_5	IF_1	CALL_1
0x40004f6	            0x740f	                            je 0x4000507	       148	svndump.c	FUNCTION_5	IF_1	CALL_1
0x40004f8	      0xbf00000000	                              mov edi, 0	       149	svndump.c	FUNCTION_5	CALL_2
0x40004fd	      0xb800000000	                              mov eax, 0	       149	svndump.c	FUNCTION_5	CALL_2
0x4000502	      0xe800000000	                          call 0x4000507	       149	svndump.c	FUNCTION_5	CALL_2
0x4000507	      0xbf00000000	                              mov edi, 0	       150	svndump.c	FUNCTION_5	CALL_3
0x400050c	      0xb800000000	                              mov eax, 0	       150	svndump.c	FUNCTION_5	CALL_3
0x4000511	      0xe800000000	                     call sym.read_props	       150	svndump.c	FUNCTION_5	CALL_3
svndump_reset	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,4:IF,0:functions,0:SWITCH,0	13
0x4001484	              0x55	                                push rbp	       535	svndump.c	FUNCTION_15
0x4001485	          0x4889e5	                            mov rbp, rsp	       535	svndump.c	FUNCTION_15
0x4001488	      0xbf00000000	                              mov edi, 0	       536	svndump.c	FUNCTION_15	CALL_1
0x400148d	      0xe800000000	                          call 0x4001492	       536	svndump.c	FUNCTION_15	CALL_1
0x4001492	      0xbf00000000	                              mov edi, 0	       537	svndump.c	FUNCTION_15	CALL_2
0x4001497	      0xe800000000	                          call 0x400149c	       537	svndump.c	FUNCTION_15	CALL_2
0x400149c	      0xbf00000000	                              mov edi, 0	       538	svndump.c	FUNCTION_15	CALL_3
0x40014a1	      0xe800000000	                          call 0x40014a6	       538	svndump.c	FUNCTION_15	CALL_3
0x40014a6	      0xbf00000000	                              mov edi, 0	       539	svndump.c	FUNCTION_15	CALL_4
0x40014ab	      0xe800000000	                          call 0x40014b0	       539	svndump.c	FUNCTION_15	CALL_4
0x40014b0	              0x90	                                     nop	       540	svndump.c	FUNCTION_15
0x40014b1	              0x5d	                                 pop rbp	       540	svndump.c	FUNCTION_15
0x40014b2	              0xc3	                                     ret	       540	svndump.c	FUNCTION_15
svndump_init	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,2:IF,1:functions,0:SWITCH,0	26
0x4001313	              0x55	                                push rbp	       502	svndump.c	FUNCTION_12
0x4001314	          0x4889e5	                            mov rbp, rsp	       502	svndump.c	FUNCTION_12
0x4001317	        0x4883ec10	                           sub rsp, 0x10	       502	svndump.c	FUNCTION_12
0x400131b	        0x48897df8	                mov qword [rbp - 8], rdi	       502	svndump.c	FUNCTION_12
0x400131f	        0x488b45f8	                mov rax, qword [rbp - 8]	       503	svndump.c	FUNCTION_12	IF_1	CALL_1
0x4001323	          0x4889c6	                            mov rsi, rax	       503	svndump.c	FUNCTION_12	IF_1	CALL_1
0x4001326	      0xbf00000000	                              mov edi, 0	       503	svndump.c	FUNCTION_12	IF_1	CALL_1
0x400132b	      0xe800000000	                          call 0x4001330	       503	svndump.c	FUNCTION_12	IF_1	CALL_1
0x4001330	            0x85c0	                           test eax, eax	       503	svndump.c	FUNCTION_12	IF_1	CALL_1
0x4001332	            0x742b	                            je 0x400135f	       503	svndump.c	FUNCTION_12	IF_1	CALL_1
0x4001334	      0x48837df800	                  cmp qword [rbp - 8], 0	       504	svndump.c	FUNCTION_12	IF_1
0x4001339	            0x7406	                            je 0x4001341	       504	svndump.c	FUNCTION_12	IF_1
0x400133b	        0x488b45f8	                mov rax, qword [rbp - 8]	       504	svndump.c	FUNCTION_12	IF_1
0x400133f	            0xeb05	                           jmp 0x4001346	       504	svndump.c	FUNCTION_12	IF_1
0x4001341	      0xb800000000	                              mov eax, 0	       504	svndump.c	FUNCTION_12	IF_1
0x4001346	          0x4889c6	                            mov rsi, rax	       504	svndump.c	FUNCTION_12	IF_1
0x4001349	      0xbf00000000	                              mov edi, 0	       504	svndump.c	FUNCTION_12	IF_1
0x400134e	      0xb800000000	                              mov eax, 0	       504	svndump.c	FUNCTION_12	IF_1
0x4001353	      0xe800000000	                          call 0x4001358	       504	svndump.c	FUNCTION_12	IF_1
0x4001358	      0xe8e3ecffff	                    call sym.const_error	       504	svndump.c	FUNCTION_12	IF_1
0x400135d	            0xeb0f	                           jmp 0x400136e	       504	svndump.c	FUNCTION_12	IF_1
0x400135f	      0xbf03000000	                              mov edi, 3	       505	svndump.c	FUNCTION_12	CALL_2
0x4001364	      0xe80bffffff	                           call sym.init	       505	svndump.c	FUNCTION_12	CALL_2
0x4001369	      0xb800000000	                              mov eax, 0	       506	svndump.c	FUNCTION_12
0x400136e	              0xc9	                                   leave	       507	svndump.c	FUNCTION_12
0x400136f	              0xc3	                                     ret	       507	svndump.c	FUNCTION_12
const_error	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,0:IF,0:functions,0:SWITCH,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_32
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_32
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_32
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_32
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_32
svndump_read	FOR,0:DO,0:ELSE,9:WHILE,1:CALL,50:IF,40:functions,0:SWITCH,1	457
0x4000b26	              0x55	                                push rbp	       326	svndump.c	FUNCTION_10
0x4000b27	          0x4889e5	                            mov rbp, rsp	       326	svndump.c	FUNCTION_10
0x4000b2a	        0x4883ec50	                           sub rsp, 0x50	       326	svndump.c	FUNCTION_10
0x4000b2e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       326	svndump.c	FUNCTION_10
0x4000b32	        0x488975c0	             mov qword [rbp - 0x40], rsi	       326	svndump.c	FUNCTION_10
0x4000b36	        0x488955b8	             mov qword [rbp - 0x48], rdx	       326	svndump.c	FUNCTION_10
0x4000b3a	    0x64488b042528	                mov rax, qword fs:[0x28]	       326	svndump.c	FUNCTION_10
0x4000b43	        0x488945f8	                mov qword [rbp - 8], rax	       326	svndump.c	FUNCTION_10
0x4000b47	            0x31c0	                            xor eax, eax	       326	svndump.c	FUNCTION_10
0x4000b49	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       329	svndump.c	FUNCTION_10
0x4000b50	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       332	svndump.c	FUNCTION_10	CALL_1
0x4000b54	          0x4889c7	                            mov rdi, rax	       332	svndump.c	FUNCTION_10	CALL_1
0x4000b57	      0xe82ef7ffff	                 call sym.reset_dump_ctx	       332	svndump.c	FUNCTION_10	CALL_1
0x4000b5c	      0xe9a1060000	                           jmp 0x4001202	       333	svndump.c	FUNCTION_10	WHILE_1	CALL_2
0x4000b61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       334	svndump.c	FUNCTION_10	WHILE_1	CALL_3
0x4000b65	      0xbe3a000000	                           mov esi, 0x3a	       334	svndump.c	FUNCTION_10	WHILE_1	CALL_3
0x4000b6a	          0x4889c7	                            mov rdi, rax	       334	svndump.c	FUNCTION_10	WHILE_1	CALL_3
0x4000b6d	      0xe800000000	                          call 0x4000b72	       334	svndump.c	FUNCTION_10	WHILE_1	CALL_3
0x4000b72	        0x488945e8	             mov qword [rbp - 0x18], rax	       334	svndump.c	FUNCTION_10	WHILE_1	CALL_3
0x4000b76	      0x48837de800	               cmp qword [rbp - 0x18], 0	       335	svndump.c	FUNCTION_10	WHILE_1	IF_1
0x4000b7b	            0x7505	                           jne 0x4000b82	       335	svndump.c	FUNCTION_10	WHILE_1	IF_1
0x4000b7d	      0xe980060000	                           jmp 0x4001202	       336	svndump.c	FUNCTION_10	WHILE_1	IF_1
0x4000b82	      0x488345e801	               add qword [rbp - 0x18], 1	       337	svndump.c	FUNCTION_10	WHILE_1
0x4000b87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       338	svndump.c	FUNCTION_10	WHILE_1	IF_2
0x4000b8b	           0xfb600	                   movzx eax, byte [rax]	       338	svndump.c	FUNCTION_10	WHILE_1	IF_2
0x4000b8e	            0x3c20	                            cmp al, 0x20	       338	svndump.c	FUNCTION_10	WHILE_1	IF_2
0x4000b90	            0x7405	                            je 0x4000b97	       338	svndump.c	FUNCTION_10	WHILE_1	IF_2
0x4000b92	      0xe96b060000	                           jmp 0x4001202	       339	svndump.c	FUNCTION_10	WHILE_1	IF_2
0x4000b97	      0x488345e801	               add qword [rbp - 0x18], 1	       340	svndump.c	FUNCTION_10	WHILE_1
0x4000b9c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       343	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000ba0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       343	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000ba4	          0x4829c2	                            sub rdx, rax	       343	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000ba7	          0x4889d0	                            mov rax, rdx	       343	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000baa	        0x4883e801	                              sub rax, 1	       343	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000bae	        0x4883e805	                              sub rax, 5	       343	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000bb2	        0x4883f816	                           cmp rax, 0x16	       343	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000bb6	     0xf8746060000	                            ja 0x4001202	       343	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000bbc	    0x488b04c50000	                  mov rax, qword [rax*8]	       343	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000bc4	            0xffe0	                                 jmp rax	       343	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000bc6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       345	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_3
0x4000bca	      0xba1a000000	                           mov edx, 0x1a	       345	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_3
0x4000bcf	      0xbe00000000	                              mov esi, 0	       345	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_3
0x4000bd4	          0x4889c7	                            mov rdi, rax	       345	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_3
0x4000bd7	      0xe800000000	                          call 0x4000bdc	       345	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_3
0x4000bdc	            0x85c0	                           test eax, eax	       345	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_3
0x4000bde	            0x7405	                            je 0x4000be5	       345	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_3
0x4000be0	      0xe91d060000	                           jmp 0x4001202	       346	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_3
0x4000be5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       347	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_4
0x4000be9	          0x4889c7	                            mov rdi, rax	       347	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_4
0x4000bec	      0xe800000000	                          call 0x4000bf1	       347	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_4
0x4000bf1	    0x890500000000	            mov dword [0x04000bf7], eax 	       347	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_4
0x4000bf7	    0x8b0500000000	            mov eax, dword [0x04000bfd] 	       348	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_4
0x4000bfd	          0x83f803	                              cmp eax, 3	       348	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_4
0x4000c00	     0xf86fc050000	                           jbe 0x4001202	       348	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_4
0x4000c06	    0x8b0500000000	            mov eax, dword [0x04000c0c] 	       349	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_4	CALL_5
0x4000c0c	            0x89c6	                            mov esi, eax	       349	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_4	CALL_5
0x4000c0e	      0xbf00000000	                              mov edi, 0	       349	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_4	CALL_5
0x4000c13	      0xb800000000	                              mov eax, 0	       349	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_4	CALL_5
0x4000c18	      0xe800000000	                          call 0x4000c1d	       349	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_4	CALL_5
0x4000c1d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       353	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_5
0x4000c21	      0xba04000000	                              mov edx, 4	       353	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_5
0x4000c26	      0xbe00000000	                              mov esi, 0	       353	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_5
0x4000c2b	          0x4889c7	                            mov rdi, rax	       353	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_5
0x4000c2e	      0xe800000000	                          call 0x4000c33	       353	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_5
0x4000c33	            0x85c0	                           test eax, eax	       353	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_5
0x4000c35	            0x7405	                            je 0x4000c3c	       353	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_5
0x4000c37	      0xe9c6050000	                           jmp 0x4001202	       354	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_5
0x4000c3c	      0xbe00000000	                              mov esi, 0	       355	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000c41	      0xbf00000000	                              mov edi, 0	       355	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000c46	      0xe894f4ffff	                  call sym.strbuf_setlen	       355	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000c4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       356	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_6
0x4000c4f	          0x4889c6	                            mov rsi, rax	       356	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_6
0x4000c52	      0xbf00000000	                              mov edi, 0	       356	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_6
0x4000c57	      0xe81df5ffff	                  call sym.strbuf_addstr	       356	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_6
0x4000c5c	      0xe9a1050000	                           jmp 0x4001202	       357	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000c61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       359	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_6
0x4000c65	      0xba0f000000	                            mov edx, 0xf	       359	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_6
0x4000c6a	      0xbe00000000	                              mov esi, 0	       359	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_6
0x4000c6f	          0x4889c7	                            mov rdi, rax	       359	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_6
0x4000c72	      0xe800000000	                          call 0x4000c77	       359	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_6
0x4000c77	            0x85c0	                           test eax, eax	       359	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_6
0x4000c79	            0x7405	                            je 0x4000c80	       359	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_6
0x4000c7b	      0xe982050000	                           jmp 0x4001202	       360	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_6
0x4000c80	        0x837dd002	               cmp dword [rbp - 0x30], 2	       361	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_7
0x4000c84	            0x7505	                           jne 0x4000c8b	       361	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_7
0x4000c86	      0xe825faffff	                    call sym.handle_node	       362	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_7
0x4000c8b	        0x837dd001	               cmp dword [rbp - 0x30], 1	       363	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_8
0x4000c8f	            0x750c	                           jne 0x4000c9d	       363	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_8
0x4000c91	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       364	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_8
0x4000c95	          0x4889c7	                            mov rdi, rax	       364	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_8
0x4000c98	      0xe860fdffff	                 call sym.begin_revision	       364	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_8
0x4000c9d	        0x837dd000	               cmp dword [rbp - 0x30], 0	       365	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_9
0x4000ca1	            0x740c	                            je 0x4000caf	       365	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_9
0x4000ca3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       366	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_9
0x4000ca7	          0x4889c7	                            mov rdi, rax	       366	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_9
0x4000caa	      0xe8abfdffff	                   call sym.end_revision	       366	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_9
0x4000caf	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       367	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000cb6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       368	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_11
0x4000cba	          0x4889c7	                            mov rdi, rax	       368	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_11
0x4000cbd	      0xe800000000	                          call 0x4000cc2	       368	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_11
0x4000cc2	            0x89c7	                            mov edi, eax	       368	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_11
0x4000cc4	      0xe872f5ffff	                  call sym.reset_rev_ctx	       368	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_11
0x4000cc9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       369	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_12
0x4000ccd	          0x4889c2	                            mov rdx, rax	       369	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_12
0x4000cd0	      0xbe00000000	                              mov esi, 0	       369	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_12
0x4000cd5	      0xbf00000000	                              mov edi, 0	       369	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_12
0x4000cda	      0xb800000000	                              mov eax, 0	       369	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_12
0x4000cdf	      0xe800000000	                          call 0x4000ce4	       369	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_12
0x4000ce4	      0xe919050000	                           jmp 0x4001202	       370	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000ce9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       372	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_10
0x4000ced	      0xba05000000	                              mov edx, 5	       372	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_10
0x4000cf2	      0xbe00000000	                              mov esi, 0	       372	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_10
0x4000cf7	          0x4889c7	                            mov rdi, rax	       372	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_10
0x4000cfa	      0xe800000000	                          call 0x4000cff	       372	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_10
0x4000cff	            0x85c0	                           test eax, eax	       372	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_10
0x4000d01	            0x7405	                            je 0x4000d08	       372	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_10
0x4000d03	      0xe9fa040000	                           jmp 0x4001202	       373	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_10
0x4000d08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       374	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_13
0x4000d0c	        0x4883c005	                              add rax, 5	       374	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_13
0x4000d10	      0xba04000000	                              mov edx, 4	       374	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_13
0x4000d15	      0xbe00000000	                              mov esi, 0	       374	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_13
0x4000d1a	          0x4889c7	                            mov rdi, rax	       374	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_13
0x4000d1d	      0xe800000000	                          call 0x4000d22	       374	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_13
0x4000d22	            0x85c0	                           test eax, eax	       374	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_13
0x4000d24	            0x7550	                           jne 0x4000d76	       374	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_13
0x4000d26	        0x837dd002	               cmp dword [rbp - 0x30], 2	       375	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000d2a	            0x7505	                           jne 0x4000d31	       375	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000d2c	      0xe87ff9ffff	                    call sym.handle_node	       376	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_14
0x4000d31	        0x837dd001	               cmp dword [rbp - 0x30], 1	       377	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	IF_13
0x4000d35	            0x750c	                           jne 0x4000d43	       377	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	IF_13
0x4000d37	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       378	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_15
0x4000d3b	          0x4889c7	                            mov rdi, rax	       378	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_15
0x4000d3e	      0xe8bafcffff	                 call sym.begin_revision	       378	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_15
0x4000d43	    0xc745d0020000	               mov dword [rbp - 0x30], 2	       379	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11
0x4000d4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       380	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_16
0x4000d4e	          0x4889c7	                            mov rdi, rax	       380	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_16
0x4000d51	      0xe858f4ffff	                 call sym.reset_node_ctx	       380	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_16
0x4000d56	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       381	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_17
0x4000d5a	          0x4889c2	                            mov rdx, rax	       381	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_17
0x4000d5d	      0xbe00000000	                              mov esi, 0	       381	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_17
0x4000d62	      0xbf00000000	                              mov edi, 0	       381	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_17
0x4000d67	      0xb800000000	                              mov eax, 0	       381	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_17
0x4000d6c	      0xe800000000	                          call 0x4000d71	       381	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11	CALL_17
0x4000d71	      0xe98c040000	                           jmp 0x4001202	       382	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_11
0x4000d76	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       384	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_14	CALL_18
0x4000d7a	        0x4883c005	                              add rax, 5	       384	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_14	CALL_18
0x4000d7e	      0xba04000000	                              mov edx, 4	       384	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_14	CALL_18
0x4000d83	      0xbe00000000	                              mov esi, 0	       384	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_14	CALL_18
0x4000d88	          0x4889c7	                            mov rdi, rax	       384	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_14	CALL_18
0x4000d8b	      0xe800000000	                          call 0x4000d90	       384	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_14	CALL_18
0x4000d90	            0x85c0	                           test eax, eax	       384	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_14	CALL_18
0x4000d92	            0x7405	                            je 0x4000d99	       384	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_14	CALL_18
0x4000d94	      0xe969040000	                           jmp 0x4001202	       385	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_14
0x4000d99	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       386	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_19
0x4000d9d	          0x4889c2	                            mov rdx, rax	       386	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_19
0x4000da0	      0xbe00000000	                              mov esi, 0	       386	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_19
0x4000da5	      0xbf00000000	                              mov edi, 0	       386	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_19
0x4000daa	      0xb800000000	                              mov eax, 0	       386	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_19
0x4000daf	      0xe800000000	                          call 0x4000db4	       386	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_19
0x4000db4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       387	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_15	CALL_20
0x4000db8	      0xbe00000000	                              mov esi, 0	       387	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_15	CALL_20
0x4000dbd	          0x4889c7	                            mov rdi, rax	       387	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_15	CALL_20
0x4000dc0	      0xe800000000	                          call 0x4000dc5	       387	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_15	CALL_20
0x4000dc5	            0x85c0	                           test eax, eax	       387	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_15	CALL_20
0x4000dc7	            0x750f	                           jne 0x4000dd8	       387	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_15	CALL_20
0x4000dc9	    0xc70500000000	         mov dword [0x04000dd3], 0x4000 	       388	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_15
0x4000dd3	      0xe92a040000	                           jmp 0x4001202	       388	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_15
0x4000dd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       389	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_1	IF_16	CALL_21
0x4000ddc	      0xbe00000000	                              mov esi, 0	       389	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_1	IF_16	CALL_21
0x4000de1	          0x4889c7	                            mov rdi, rax	       389	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_1	IF_16	CALL_21
0x4000de4	      0xe800000000	                          call 0x4000de9	       389	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_1	IF_16	CALL_21
0x4000de9	            0x85c0	                           test eax, eax	       389	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_1	IF_16	CALL_21
0x4000deb	            0x750f	                           jne 0x4000dfc	       389	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_1	IF_16	CALL_21
0x4000ded	    0xc70500000000	         mov dword [0x04000df7], 0x81a4 	       390	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_1	IF_16
0x4000df7	      0xe906040000	                           jmp 0x4001202	       390	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_1	IF_16
0x4000dfc	    0x488b05000000	            mov rax, qword [0x04000e03] 	       392	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_22
0x4000e03	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       392	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_22
0x4000e07	      0xbe00000000	                              mov esi, 0	       392	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_22
0x4000e0c	          0x4889c7	                            mov rdi, rax	       392	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_22
0x4000e0f	      0xb800000000	                              mov eax, 0	       392	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_22
0x4000e14	      0xe800000000	                          call 0x4000e19	       392	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_22
0x4000e19	      0xe9e4030000	                           jmp 0x4001202	       393	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000e1e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       395	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_17
0x4000e22	      0xba0b000000	                            mov edx, 0xb	       395	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_17
0x4000e27	      0xbe00000000	                              mov esi, 0	       395	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_17
0x4000e2c	          0x4889c7	                            mov rdi, rax	       395	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_17
0x4000e2f	      0xe800000000	                          call 0x4000e34	       395	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_17
0x4000e34	            0x85c0	                           test eax, eax	       395	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_17
0x4000e36	            0x7405	                            je 0x4000e3d	       395	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_17
0x4000e38	      0xe9c5030000	                           jmp 0x4001202	       396	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_17
0x4000e3d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       397	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_23
0x4000e41	          0x4889c2	                            mov rdx, rax	       397	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_23
0x4000e44	      0xbe00000000	                              mov esi, 0	       397	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_23
0x4000e49	      0xbf00000000	                              mov edi, 0	       397	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_23
0x4000e4e	      0xb800000000	                              mov eax, 0	       397	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_23
0x4000e53	      0xe800000000	                          call 0x4000e58	       397	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_23
0x4000e58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       398	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_18	CALL_24
0x4000e5c	      0xbe00000000	                              mov esi, 0	       398	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_18	CALL_24
0x4000e61	          0x4889c7	                            mov rdi, rax	       398	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_18	CALL_24
0x4000e64	      0xe800000000	                          call 0x4000e69	       398	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_18	CALL_24
0x4000e69	            0x85c0	                           test eax, eax	       398	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_18	CALL_24
0x4000e6b	            0x750f	                           jne 0x4000e7c	       398	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_18	CALL_24
0x4000e6d	    0xc70500000000	               mov dword [0x04000e77], 3	       399	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_18
0x4000e77	      0xe986030000	                           jmp 0x4001202	       399	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_18
0x4000e7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       400	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_3	IF_19	CALL_25
0x4000e80	      0xbe00000000	                              mov esi, 0	       400	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_3	IF_19	CALL_25
0x4000e85	          0x4889c7	                            mov rdi, rax	       400	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_3	IF_19	CALL_25
0x4000e88	      0xe800000000	                          call 0x4000e8d	       400	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_3	IF_19	CALL_25
0x4000e8d	            0x85c0	                           test eax, eax	       400	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_3	IF_19	CALL_25
0x4000e8f	            0x750f	                           jne 0x4000ea0	       400	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_3	IF_19	CALL_25
0x4000e91	    0xc70500000000	               mov dword [0x04000e9b], 2	       401	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_3	IF_19
0x4000e9b	      0xe962030000	                           jmp 0x4001202	       401	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_3	IF_19
0x4000ea0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       402	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_4	IF_20	CALL_26
0x4000ea4	      0xbe00000000	                              mov esi, 0	       402	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_4	IF_20	CALL_26
0x4000ea9	          0x4889c7	                            mov rdi, rax	       402	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_4	IF_20	CALL_26
0x4000eac	      0xe800000000	                          call 0x4000eb1	       402	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_4	IF_20	CALL_26
0x4000eb1	            0x85c0	                           test eax, eax	       402	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_4	IF_20	CALL_26
0x4000eb3	            0x750f	                           jne 0x4000ec4	       402	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_4	IF_20	CALL_26
0x4000eb5	    0xc70500000000	               mov dword [0x04000ebf], 1	       403	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_4	IF_20
0x4000ebf	      0xe93e030000	                           jmp 0x4001202	       403	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_4	IF_20
0x4000ec4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       404	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_5	IF_21	CALL_27
0x4000ec8	      0xbe00000000	                              mov esi, 0	       404	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_5	IF_21	CALL_27
0x4000ecd	          0x4889c7	                            mov rdi, rax	       404	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_5	IF_21	CALL_27
0x4000ed0	      0xe800000000	                          call 0x4000ed5	       404	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_5	IF_21	CALL_27
0x4000ed5	            0x85c0	                           test eax, eax	       404	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_5	IF_21	CALL_27
0x4000ed7	            0x750f	                           jne 0x4000ee8	       404	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_5	IF_21	CALL_27
0x4000ed9	    0xc70500000000	               mov dword [0x04000ee3], 4	       405	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_5	IF_21
0x4000ee3	      0xe91a030000	                           jmp 0x4001202	       405	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_5	IF_21
0x4000ee8	    0x488b05000000	            mov rax, qword [0x04000eef] 	       407	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_6	CALL_28
0x4000eef	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       407	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_6	CALL_28
0x4000ef3	      0xbe00000000	                              mov esi, 0	       407	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_6	CALL_28
0x4000ef8	          0x4889c7	                            mov rdi, rax	       407	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_6	CALL_28
0x4000efb	      0xb800000000	                              mov eax, 0	       407	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_6	CALL_28
0x4000f00	      0xe800000000	                          call 0x4000f05	       407	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_6	CALL_28
0x4000f05	    0xc70500000000	               mov dword [0x04000f0f], 0	       408	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_6
0x4000f0f	      0xe9ee020000	                           jmp 0x4001202	       410	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000f14	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       412	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_22
0x4000f18	      0xba12000000	                           mov edx, 0x12	       412	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_22
0x4000f1d	      0xbe00000000	                              mov esi, 0	       412	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_22
0x4000f22	          0x4889c7	                            mov rdi, rax	       412	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_22
0x4000f25	      0xe800000000	                          call 0x4000f2a	       412	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_22
0x4000f2a	            0x85c0	                           test eax, eax	       412	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_22
0x4000f2c	            0x7405	                            je 0x4000f33	       412	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_22
0x4000f2e	      0xe9cf020000	                           jmp 0x4001202	       413	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_22
0x4000f33	      0xbe00000000	                              mov esi, 0	       414	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000f38	      0xbf00000000	                              mov edi, 0	       414	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000f3d	      0xe89df1ffff	                  call sym.strbuf_setlen	       414	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000f42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       415	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_29
0x4000f46	          0x4889c6	                            mov rsi, rax	       415	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_29
0x4000f49	      0xbf00000000	                              mov edi, 0	       415	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_29
0x4000f4e	      0xe826f2ffff	                  call sym.strbuf_addstr	       415	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_29
0x4000f53	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       416	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_30
0x4000f57	          0x4889c2	                            mov rdx, rax	       416	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_30
0x4000f5a	      0xbe00000000	                              mov esi, 0	       416	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_30
0x4000f5f	      0xbf00000000	                              mov edi, 0	       416	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_30
0x4000f64	      0xb800000000	                              mov eax, 0	       416	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_30
0x4000f69	      0xe800000000	                          call 0x4000f6e	       416	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_30
0x4000f6e	      0xe98f020000	                           jmp 0x4001202	       417	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000f73	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       419	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_23
0x4000f77	      0xba11000000	                           mov edx, 0x11	       419	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_23
0x4000f7c	      0xbe00000000	                              mov esi, 0	       419	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_23
0x4000f81	          0x4889c7	                            mov rdi, rax	       419	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_23
0x4000f84	      0xe800000000	                          call 0x4000f89	       419	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_23
0x4000f89	            0x85c0	                           test eax, eax	       419	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_23
0x4000f8b	            0x7405	                            je 0x4000f92	       419	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_23
0x4000f8d	      0xe970020000	                           jmp 0x4001202	       420	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_23
0x4000f92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       421	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_31
0x4000f96	          0x4889c7	                            mov rdi, rax	       421	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_31
0x4000f99	      0xe800000000	                          call 0x4000f9e	       421	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_31
0x4000f9e	    0x890500000000	            mov dword [0x04000fa4], eax 	       421	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_31
0x4000fa4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       422	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_32
0x4000fa8	          0x4889c2	                            mov rdx, rax	       422	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_32
0x4000fab	      0xbe00000000	                              mov esi, 0	       422	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_32
0x4000fb0	      0xbf00000000	                              mov edi, 0	       422	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_32
0x4000fb5	      0xb800000000	                              mov eax, 0	       422	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_32
0x4000fba	      0xe800000000	                          call 0x4000fbf	       422	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_32
0x4000fbf	      0xe93e020000	                           jmp 0x4001202	       423	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4000fc4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fc8	      0xba04000000	                              mov edx, 4	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fcd	      0xbe00000000	                              mov esi, 0	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fd2	          0x4889c7	                            mov rdi, rax	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fd5	      0xe800000000	                          call 0x4000fda	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fda	            0x85c0	                           test eax, eax	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fdc	            0x741f	                            je 0x4000ffd	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fde	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fe2	      0xba04000000	                              mov edx, 4	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fe7	      0xbe00000000	                              mov esi, 0	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fec	          0x4889c7	                            mov rdi, rax	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000fef	      0xe800000000	                          call 0x4000ff4	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000ff4	            0x85c0	                           test eax, eax	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000ff6	            0x7405	                            je 0x4000ffd	       425	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000ff8	      0xe905020000	                           jmp 0x4001202	       426	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_24
0x4000ffd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       427	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_25
0x4001001	        0x4883c004	                              add rax, 4	       427	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_25
0x4001005	      0xba0f000000	                            mov edx, 0xf	       427	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_25
0x400100a	      0xbe00000000	                              mov esi, 0	       427	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_25
0x400100f	          0x4889c7	                            mov rdi, rax	       427	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_25
0x4001012	      0xe800000000	                          call 0x4001017	       427	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_25
0x4001017	            0x85c0	                           test eax, eax	       427	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_25
0x4001019	            0x7405	                            je 0x4001020	       427	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_25
0x400101b	      0xe9e2010000	                           jmp 0x4001202	       428	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_25
0x4001020	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	       433	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4001024	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       433	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4001028	      0xba0a000000	                            mov edx, 0xa	       433	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x400102d	          0x4889ce	                            mov rsi, rcx	       433	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4001030	          0x4889c7	                            mov rdi, rax	       433	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4001033	      0xe800000000	                          call 0x4001038	       433	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4001038	        0x488945f0	             mov qword [rbp - 0x10], rax	       433	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x400103c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001040	           0xfb600	                   movzx eax, byte [rax]	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001043	           0xfb6c0	                           movzx eax, al	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001046	            0x4898	                                    cdqe	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001048	     0xfb680000000	                   movzx eax, byte [rax]	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x400104f	           0xfb6c0	                           movzx eax, al	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001052	          0x83e002	                              and eax, 2	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001055	            0x85c0	                           test eax, eax	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001057	            0x740b	                            je 0x4001064	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001059	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x400105d	           0xfb600	                   movzx eax, byte [rax]	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001060	            0x84c0	                             test al, al	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001062	            0x7416	                            je 0x400107a	       434	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_26
0x4001064	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       435	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_33
0x4001068	          0x4889c6	                            mov rsi, rax	       435	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_33
0x400106b	      0xbf00000000	                              mov edi, 0	       435	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_33
0x4001070	      0xb800000000	                              mov eax, 0	       435	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_33
0x4001075	      0xe800000000	                          call 0x400107a	       435	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_33
0x400107a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       436	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_27
0x400107e	          0x4885c0	                           test rax, rax	       436	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_27
0x4001081	            0x7916	                           jns 0x4001099	       436	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_27
0x4001083	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       437	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_34
0x4001087	          0x4889c6	                            mov rsi, rax	       437	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_34
0x400108a	      0xbf00000000	                              mov edi, 0	       437	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_34
0x400108f	      0xb800000000	                              mov eax, 0	       437	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_34
0x4001094	      0xe800000000	                          call 0x4001099	       437	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_34
0x4001099	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       439	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_28
0x400109d	           0xfb600	                   movzx eax, byte [rax]	       439	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_28
0x40010a0	            0x3c54	                            cmp al, 0x54	       439	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_28
0x40010a2	            0x750d	                           jne 0x40010b1	       439	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_28
0x40010a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       440	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_28
0x40010a8	    0x488905000000	            mov qword [0x040010af], rax 	       440	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_28
0x40010af	            0xeb0b	                           jmp 0x40010bc	       443	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x40010b1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       442	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_7
0x40010b5	    0x488905000000	            mov qword [0x040010bc], rax 	       442	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_7
0x40010bc	              0x90	                                     nop	       443	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x40010bd	      0xe940010000	                           jmp 0x4001202	       443	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x40010c2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       446	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29
0x40010c6	      0xba0a000000	                            mov edx, 0xa	       446	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29
0x40010cb	      0xbe00000000	                              mov esi, 0	       446	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29
0x40010d0	          0x4889c7	                            mov rdi, rax	       446	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29
0x40010d3	      0xe800000000	                          call 0x40010d8	       446	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29
0x40010d8	            0x85c0	                           test eax, eax	       446	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29
0x40010da	            0x7524	                           jne 0x4001100	       446	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29
0x40010dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29	CALL_35
0x40010e0	      0xbe00000000	                              mov esi, 0	       447	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29	CALL_35
0x40010e5	          0x4889c7	                            mov rdi, rax	       447	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29	CALL_35
0x40010e8	      0xe800000000	                          call 0x40010ed	       447	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29	CALL_35
0x40010ed	            0x85c0	                           test eax, eax	       447	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29	CALL_35
0x40010ef	           0xf94c0	                                 sete al	       447	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29	CALL_35
0x40010f2	           0xfb6c0	                           movzx eax, al	       447	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29	CALL_35
0x40010f5	    0x890500000000	            mov dword [0x040010fb], eax 	       447	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29	CALL_35
0x40010fb	      0xe902010000	                           jmp 0x4001202	       448	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_29
0x4001100	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       450	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_30
0x4001104	      0xba0a000000	                            mov edx, 0xa	       450	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_30
0x4001109	      0xbe00000000	                              mov esi, 0	       450	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_30
0x400110e	          0x4889c7	                            mov rdi, rax	       450	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_30
0x4001111	      0xe800000000	                          call 0x4001116	       450	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_30
0x4001116	            0x85c0	                           test eax, eax	       450	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_30
0x4001118	            0x7405	                            je 0x400111f	       450	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_30
0x400111a	      0xe9e3000000	                           jmp 0x4001202	       451	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_30
0x400111f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_36
0x4001123	      0xbe00000000	                              mov esi, 0	       452	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_36
0x4001128	          0x4889c7	                            mov rdi, rax	       452	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_36
0x400112b	      0xe800000000	                          call 0x4001130	       452	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_36
0x4001130	            0x85c0	                           test eax, eax	       452	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_36
0x4001132	           0xf94c0	                                 sete al	       452	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_36
0x4001135	           0xfb6c0	                           movzx eax, al	       452	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_36
0x4001138	    0x890500000000	            mov dword [0x0400113e], eax 	       452	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_36
0x400113e	      0xe9bf000000	                           jmp 0x4001202	       453	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1
0x4001143	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       455	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_31
0x4001147	      0xba0e000000	                            mov edx, 0xe	       455	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_31
0x400114c	      0xbe00000000	                              mov esi, 0	       455	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_31
0x4001151	          0x4889c7	                            mov rdi, rax	       455	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_31
0x4001154	      0xe800000000	                          call 0x4001159	       455	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_31
0x4001159	            0x85c0	                           test eax, eax	       455	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_31
0x400115b	            0x7405	                            je 0x4001162	       455	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_31
0x400115d	      0xe9a0000000	                           jmp 0x4001202	       456	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_31
0x4001162	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       457	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_37
0x4001166	          0x4889c7	                            mov rdi, rax	       457	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_37
0x4001169	      0xe800000000	                          call 0x400116e	       457	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_37
0x400116e	          0x8945d4	             mov dword [rbp - 0x2c], eax	       457	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_37
0x4001171	      0xbf00000000	                              mov edi, 0	       458	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_38
0x4001176	      0xe800000000	                          call 0x400117b	       458	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_38
0x400117b	        0x488945e0	             mov qword [rbp - 0x20], rax	       458	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_38
0x400117f	      0x48837de000	               cmp qword [rbp - 0x20], 0	       459	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_32
0x4001184	            0x7505	                           jne 0x400118b	       459	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_32
0x4001186	      0xe85bf3ffff	                 call sym.die_short_read	       460	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_39
0x400118b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       461	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_33
0x400118f	           0xfb600	                   movzx eax, byte [rax]	       461	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_33
0x4001192	            0x84c0	                             test al, al	       461	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_33
0x4001194	            0x740f	                            je 0x40011a5	       461	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_33
0x4001196	      0xbf00000000	                              mov edi, 0	       462	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_40
0x400119b	      0xb800000000	                              mov eax, 0	       462	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_40
0x40011a0	      0xe800000000	                          call 0x40011a5	       462	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	CALL_40
0x40011a5	        0x837dd001	               cmp dword [rbp - 0x30], 1	       463	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_34
0x40011a9	            0x7507	                           jne 0x40011b2	       463	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_34
0x40011ab	      0xe866f3ffff	                     call sym.read_props	       464	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_34	CALL_41
0x40011b0	            0xeb50	                           jmp 0x4001202	       464	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	IF_34	CALL_41
0x40011b2	        0x837dd002	               cmp dword [rbp - 0x30], 2	       465	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_8	IF_35
0x40011b6	            0x750e	                           jne 0x40011c6	       465	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_8	IF_35
0x40011b8	      0xe8f3f4ffff	                    call sym.handle_node	       466	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_8	IF_35	CALL_42
0x40011bd	    0xc745d0030000	               mov dword [rbp - 0x30], 3	       467	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_8	IF_35
0x40011c4	            0xeb3c	                           jmp 0x4001202	       467	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_8	IF_35
0x40011c6	    0x488b05000000	            mov rax, qword [0x040011cd] 	       469	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	CALL_43
0x40011cd	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       469	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	CALL_43
0x40011d0	      0xbe00000000	                              mov esi, 0	       469	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	CALL_43
0x40011d5	          0x4889c7	                            mov rdi, rax	       469	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	CALL_43
0x40011d8	      0xb800000000	                              mov eax, 0	       469	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	CALL_43
0x40011dd	      0xe800000000	                          call 0x40011e2	       469	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	CALL_43
0x40011e2	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       470	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	IF_36	CALL_44
0x40011e5	          0x4889c6	                            mov rsi, rax	       470	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	IF_36	CALL_44
0x40011e8	      0xbf00000000	                              mov edi, 0	       470	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	IF_36	CALL_44
0x40011ed	      0xe800000000	                          call 0x40011f2	       470	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	IF_36	CALL_44
0x40011f2	          0x4889c2	                            mov rdx, rax	       470	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	IF_36	CALL_44
0x40011f5	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       470	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	IF_36	CALL_44
0x40011f8	          0x4839c2	                            cmp rdx, rax	       470	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	IF_36	CALL_44
0x40011fb	            0x7405	                            je 0x4001202	       470	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	IF_36	CALL_44
0x40011fd	      0xe8e4f2ffff	                 call sym.die_short_read	       471	svndump.c	FUNCTION_10	WHILE_1	SWITCH_1	ELSE_9	CALL_45
0x4001202	      0xbf00000000	                              mov edi, 0	       333	svndump.c	FUNCTION_10	WHILE_1	CALL_2
0x4001207	      0xe800000000	                          call 0x400120c	       333	svndump.c	FUNCTION_10	WHILE_1	CALL_2
0x400120c	        0x488945e0	             mov qword [rbp - 0x20], rax	       333	svndump.c	FUNCTION_10	WHILE_1	CALL_2
0x4001210	      0x48837de000	               cmp qword [rbp - 0x20], 0	       333	svndump.c	FUNCTION_10	WHILE_1	CALL_2
0x4001215	     0xf8546f9ffff	                           jne 0x4000b61	       333	svndump.c	FUNCTION_10	WHILE_1	CALL_2
0x400121b	      0xbf00000000	                              mov edi, 0	       475	svndump.c	FUNCTION_10	IF_37	CALL_46
0x4001220	      0xe800000000	                          call 0x4001225	       475	svndump.c	FUNCTION_10	IF_37	CALL_46
0x4001225	            0x85c0	                           test eax, eax	       475	svndump.c	FUNCTION_10	IF_37	CALL_46
0x4001227	            0x7405	                            je 0x400122e	       475	svndump.c	FUNCTION_10	IF_37	CALL_46
0x4001229	      0xe8b8f2ffff	                 call sym.die_short_read	       476	svndump.c	FUNCTION_10	CALL_47
0x400122e	        0x837dd002	               cmp dword [rbp - 0x30], 2	       477	svndump.c	FUNCTION_10	IF_38
0x4001232	            0x7505	                           jne 0x4001239	       477	svndump.c	FUNCTION_10	IF_38
0x4001234	      0xe877f4ffff	                    call sym.handle_node	       478	svndump.c	FUNCTION_10	CALL_48
0x4001239	        0x837dd001	               cmp dword [rbp - 0x30], 1	       479	svndump.c	FUNCTION_10	IF_39
0x400123d	            0x750c	                           jne 0x400124b	       479	svndump.c	FUNCTION_10	IF_39
0x400123f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       480	svndump.c	FUNCTION_10	CALL_49
0x4001243	          0x4889c7	                            mov rdi, rax	       480	svndump.c	FUNCTION_10	CALL_49
0x4001246	      0xe8b2f7ffff	                 call sym.begin_revision	       480	svndump.c	FUNCTION_10	CALL_49
0x400124b	        0x837dd000	               cmp dword [rbp - 0x30], 0	       481	svndump.c	FUNCTION_10	IF_40
0x400124f	            0x740c	                            je 0x400125d	       481	svndump.c	FUNCTION_10	IF_40
0x4001251	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       482	svndump.c	FUNCTION_10	CALL_50
0x4001255	          0x4889c7	                            mov rdi, rax	       482	svndump.c	FUNCTION_10	CALL_50
0x4001258	      0xe8fdf7ffff	                   call sym.end_revision	       482	svndump.c	FUNCTION_10	CALL_50
0x400125d	              0x90	                                     nop	       483	svndump.c	FUNCTION_10
0x400125e	        0x488b45f8	                mov rax, qword [rbp - 8]	       483	svndump.c	FUNCTION_10
0x4001262	    0x644833042528	                xor rax, qword fs:[0x28]	       483	svndump.c	FUNCTION_10
0x400126b	            0x7405	                            je 0x4001272	       483	svndump.c	FUNCTION_10
0x400126d	      0xe800000000	                          call 0x4001272	       483	svndump.c	FUNCTION_10
0x4001272	              0xc9	                                   leave	       483	svndump.c	FUNCTION_10
0x4001273	              0xc3	                                     ret	       483	svndump.c	FUNCTION_10
begin_revision	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,1:IF,1:functions,0:SWITCH,0	25
0x40009fd	              0x55	                                push rbp	       303	svndump.c	FUNCTION_8
0x40009fe	          0x4889e5	                            mov rbp, rsp	       303	svndump.c	FUNCTION_8
0x4000a01	        0x4883ec10	                           sub rsp, 0x10	       303	svndump.c	FUNCTION_8
0x4000a05	        0x48897df8	                mov qword [rbp - 8], rdi	       303	svndump.c	FUNCTION_8
0x4000a09	    0x8b0500000000	            mov eax, dword [0x04000a0f] 	       304	svndump.c	FUNCTION_8	IF_1
0x4000a0f	            0x85c0	                           test eax, eax	       304	svndump.c	FUNCTION_8	IF_1
0x4000a11	            0x7444	                            je 0x4000a57	       304	svndump.c	FUNCTION_8	IF_1
0x4000a13	    0x488b3d000000	            mov rdi, qword [0x04000a1a] 	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a1a	    0x488b0d000000	            mov rcx, qword [0x04000a21] 	       307	svndump.c	FUNCTION_8
0x4000a21	    0x488b15000000	            mov rdx, qword [0x04000a28] 	       307	svndump.c	FUNCTION_8
0x4000a28	    0x488b35000000	            mov rsi, qword [0x04000a2f] 	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a2f	    0x8b0500000000	            mov eax, dword [0x04000a35] 	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a35	        0x4883ec08	                              sub rsp, 8	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a39	          0xff75f8	                    push qword [rbp - 8]	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a3c	          0x4989f9	                             mov r9, rdi	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a3f	          0x4989c8	                             mov r8, rcx	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a42	          0x4889d1	                            mov rcx, rdx	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a45	      0xba00000000	                              mov edx, 0	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a4a	            0x89c7	                            mov edi, eax	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a4c	      0xe800000000	                          call 0x4000a51	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a51	        0x4883c410	                           add rsp, 0x10	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a55	            0xeb01	                           jmp 0x4000a58	       306	svndump.c	FUNCTION_8	CALL_1
0x4000a57	              0x90	                                     nop	       305	svndump.c	FUNCTION_8	IF_1
0x4000a58	              0xc9	                                   leave	       309	svndump.c	FUNCTION_8
0x4000a59	              0xc3	                                     ret	       309	svndump.c	FUNCTION_8
handle_property	FOR,0:DO,0:ELSE,1:WHILE,0:CALL,10:IF,12:functions,0:SWITCH,1	136
0x40002d9	              0x55	                                push rbp	        94	svndump.c	FUNCTION_4
0x40002da	          0x4889e5	                            mov rbp, rsp	        94	svndump.c	FUNCTION_4
0x40002dd	        0x4883ec30	                           sub rsp, 0x30	        94	svndump.c	FUNCTION_4
0x40002e1	        0x48897de8	             mov qword [rbp - 0x18], rdi	        94	svndump.c	FUNCTION_4
0x40002e5	        0x488975e0	             mov qword [rbp - 0x20], rsi	        94	svndump.c	FUNCTION_4
0x40002e9	        0x488955d8	             mov qword [rbp - 0x28], rdx	        94	svndump.c	FUNCTION_4
0x40002ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	svndump.c	FUNCTION_4
0x40002f1	        0x488b4010	            mov rax, qword [rax + 0x10] 	        95	svndump.c	FUNCTION_4
0x40002f5	        0x488945f0	             mov qword [rbp - 0x10], rax	        95	svndump.c	FUNCTION_4
0x40002f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	svndump.c	FUNCTION_4
0x40002fd	        0x488b4008	                mov rax, qword [rax + 8]	        96	svndump.c	FUNCTION_4
0x4000301	        0x488945f8	                mov qword [rbp - 8], rax	        96	svndump.c	FUNCTION_4
0x4000305	        0x488b45f8	                mov rax, qword [rbp - 8]	        98	svndump.c	FUNCTION_4	SWITCH_1
0x4000309	        0x4883c001	                              add rax, 1	        98	svndump.c	FUNCTION_4	SWITCH_1
0x400030d	        0x4883e808	                              sub rax, 8	        98	svndump.c	FUNCTION_4	SWITCH_1
0x4000311	        0x4883f807	                              cmp rax, 7	        98	svndump.c	FUNCTION_4	SWITCH_1
0x4000315	     0xf87c9010000	                            ja 0x40004e4	        98	svndump.c	FUNCTION_4	SWITCH_1
0x400031b	    0x488b04c50000	                  mov rax, qword [rax*8]	        98	svndump.c	FUNCTION_4	SWITCH_1
0x4000323	            0xffe0	                                 jmp rax	        98	svndump.c	FUNCTION_4	SWITCH_1
0x4000325	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       100	svndump.c	FUNCTION_4	SWITCH_1	IF_1
0x4000329	      0xba07000000	                              mov edx, 7	       100	svndump.c	FUNCTION_4	SWITCH_1	IF_1
0x400032e	      0xbe00000000	                              mov esi, 0	       100	svndump.c	FUNCTION_4	SWITCH_1	IF_1
0x4000333	          0x4889c7	                            mov rdi, rax	       100	svndump.c	FUNCTION_4	SWITCH_1	IF_1
0x4000336	      0xe800000000	                          call 0x400033b	       100	svndump.c	FUNCTION_4	SWITCH_1	IF_1
0x400033b	            0x85c0	                           test eax, eax	       100	svndump.c	FUNCTION_4	SWITCH_1	IF_1
0x400033d	     0xf858e010000	                           jne 0x40004d1	       100	svndump.c	FUNCTION_4	SWITCH_1	IF_1
0x4000343	      0x48837de000	               cmp qword [rbp - 0x20], 0	       102	svndump.c	FUNCTION_4	SWITCH_1	IF_2
0x4000348	            0x750f	                           jne 0x4000359	       102	svndump.c	FUNCTION_4	SWITCH_1	IF_2
0x400034a	      0xbf00000000	                              mov edi, 0	       103	svndump.c	FUNCTION_4	SWITCH_1	CALL_1
0x400034f	      0xb800000000	                              mov eax, 0	       103	svndump.c	FUNCTION_4	SWITCH_1	CALL_1
0x4000354	      0xe800000000	                          call 0x4000359	       103	svndump.c	FUNCTION_4	SWITCH_1	CALL_1
0x4000359	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       104	svndump.c	FUNCTION_4	SWITCH_1	CALL_2
0x400035d	          0x4889c6	                            mov rsi, rax	       104	svndump.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000360	      0xbf00000000	                              mov edi, 0	       104	svndump.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000365	      0xe8e1fcffff	                    call sym.strbuf_swap	       104	svndump.c	FUNCTION_4	SWITCH_1	CALL_2
0x400036a	      0xe975010000	                           jmp 0x40004e4	       105	svndump.c	FUNCTION_4	SWITCH_1
0x400036f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       107	svndump.c	FUNCTION_4	SWITCH_1	IF_3
0x4000373	      0xba0a000000	                            mov edx, 0xa	       107	svndump.c	FUNCTION_4	SWITCH_1	IF_3
0x4000378	      0xbe00000000	                              mov esi, 0	       107	svndump.c	FUNCTION_4	SWITCH_1	IF_3
0x400037d	          0x4889c7	                            mov rdi, rax	       107	svndump.c	FUNCTION_4	SWITCH_1	IF_3
0x4000380	      0xe800000000	                          call 0x4000385	       107	svndump.c	FUNCTION_4	SWITCH_1	IF_3
0x4000385	            0x85c0	                           test eax, eax	       107	svndump.c	FUNCTION_4	SWITCH_1	IF_3
0x4000387	     0xf8547010000	                           jne 0x40004d4	       107	svndump.c	FUNCTION_4	SWITCH_1	IF_3
0x400038d	      0x48837de000	               cmp qword [rbp - 0x20], 0	       109	svndump.c	FUNCTION_4	SWITCH_1	IF_4
0x4000392	            0x7514	                           jne 0x40003a8	       109	svndump.c	FUNCTION_4	SWITCH_1	IF_4
0x4000394	      0xbe00000000	                              mov esi, 0	       110	svndump.c	FUNCTION_4	SWITCH_1	IF_4
0x4000399	      0xbf00000000	                              mov edi, 0	       110	svndump.c	FUNCTION_4	SWITCH_1	IF_4
0x400039e	      0xe83cfdffff	                  call sym.strbuf_setlen	       110	svndump.c	FUNCTION_4	SWITCH_1	IF_4
0x40003a3	      0xe93c010000	                           jmp 0x40004e4	       113	svndump.c	FUNCTION_4	SWITCH_1
0x40003a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       112	svndump.c	FUNCTION_4	SWITCH_1	CALL_3
0x40003ac	          0x4889c6	                            mov rsi, rax	       112	svndump.c	FUNCTION_4	SWITCH_1	CALL_3
0x40003af	      0xbf00000000	                              mov edi, 0	       112	svndump.c	FUNCTION_4	SWITCH_1	CALL_3
0x40003b4	      0xe892fcffff	                    call sym.strbuf_swap	       112	svndump.c	FUNCTION_4	SWITCH_1	CALL_3
0x40003b9	      0xe926010000	                           jmp 0x40004e4	       113	svndump.c	FUNCTION_4	SWITCH_1
0x40003be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       115	svndump.c	FUNCTION_4	SWITCH_1	IF_5
0x40003c2	      0xba08000000	                              mov edx, 8	       115	svndump.c	FUNCTION_4	SWITCH_1	IF_5
0x40003c7	      0xbe00000000	                              mov esi, 0	       115	svndump.c	FUNCTION_4	SWITCH_1	IF_5
0x40003cc	          0x4889c7	                            mov rdi, rax	       115	svndump.c	FUNCTION_4	SWITCH_1	IF_5
0x40003cf	      0xe800000000	                          call 0x40003d4	       115	svndump.c	FUNCTION_4	SWITCH_1	IF_5
0x40003d4	            0x85c0	                           test eax, eax	       115	svndump.c	FUNCTION_4	SWITCH_1	IF_5
0x40003d6	     0xf85fb000000	                           jne 0x40004d7	       115	svndump.c	FUNCTION_4	SWITCH_1	IF_5
0x40003dc	      0x48837de000	               cmp qword [rbp - 0x20], 0	       117	svndump.c	FUNCTION_4	SWITCH_1	IF_6
0x40003e1	            0x750f	                           jne 0x40003f2	       117	svndump.c	FUNCTION_4	SWITCH_1	IF_6
0x40003e3	      0xbf00000000	                              mov edi, 0	       118	svndump.c	FUNCTION_4	SWITCH_1	CALL_4
0x40003e8	      0xb800000000	                              mov eax, 0	       118	svndump.c	FUNCTION_4	SWITCH_1	CALL_4
0x40003ed	      0xe800000000	                          call 0x40003f2	       118	svndump.c	FUNCTION_4	SWITCH_1	CALL_4
0x40003f2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       119	svndump.c	FUNCTION_4	SWITCH_1	IF_7	CALL_5
0x40003f6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       119	svndump.c	FUNCTION_4	SWITCH_1	IF_7	CALL_5
0x40003fa	      0xba00000000	                              mov edx, 0	       119	svndump.c	FUNCTION_4	SWITCH_1	IF_7	CALL_5
0x40003ff	      0xbe00000000	                              mov esi, 0	       119	svndump.c	FUNCTION_4	SWITCH_1	IF_7	CALL_5
0x4000404	          0x4889c7	                            mov rdi, rax	       119	svndump.c	FUNCTION_4	SWITCH_1	IF_7	CALL_5
0x4000407	      0xe800000000	                          call 0x400040c	       119	svndump.c	FUNCTION_4	SWITCH_1	IF_7	CALL_5
0x400040c	            0x85c0	                           test eax, eax	       119	svndump.c	FUNCTION_4	SWITCH_1	IF_7	CALL_5
0x400040e	     0xf84c6000000	                            je 0x40004da	       119	svndump.c	FUNCTION_4	SWITCH_1	IF_7	CALL_5
0x4000414	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       120	svndump.c	FUNCTION_4	SWITCH_1	CALL_6
0x4000418	        0x488b4010	            mov rax, qword [rax + 0x10] 	       120	svndump.c	FUNCTION_4	SWITCH_1	CALL_6
0x400041c	          0x4889c6	                            mov rsi, rax	       120	svndump.c	FUNCTION_4	SWITCH_1	CALL_6
0x400041f	      0xbf00000000	                              mov edi, 0	       120	svndump.c	FUNCTION_4	SWITCH_1	CALL_6
0x4000424	      0xb800000000	                              mov eax, 0	       120	svndump.c	FUNCTION_4	SWITCH_1	CALL_6
0x4000429	      0xe800000000	                          call 0x400042e	       120	svndump.c	FUNCTION_4	SWITCH_1	CALL_6
0x400042e	      0xe9a7000000	                           jmp 0x40004da	       121	svndump.c	FUNCTION_4	SWITCH_1
0x4000433	      0x48837df80e	                cmp qword [rbp - 8], 0xe	       124	svndump.c	FUNCTION_4	SWITCH_1	IF_8	CALL_7
0x4000438	            0x751e	                           jne 0x4000458	       124	svndump.c	FUNCTION_4	SWITCH_1	IF_8	CALL_7
0x400043a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       125	svndump.c	FUNCTION_4	SWITCH_1	IF_8
0x400043e	      0xba0e000000	                            mov edx, 0xe	       125	svndump.c	FUNCTION_4	SWITCH_1	IF_8
0x4000443	      0xbe00000000	                              mov esi, 0	       125	svndump.c	FUNCTION_4	SWITCH_1	IF_8
0x4000448	          0x4889c7	                            mov rdi, rax	       125	svndump.c	FUNCTION_4	SWITCH_1	IF_8
0x400044b	      0xe800000000	                          call 0x4000450	       125	svndump.c	FUNCTION_4	SWITCH_1	IF_8
0x4000450	            0x85c0	                           test eax, eax	       124	svndump.c	FUNCTION_4	SWITCH_1	IF_8	CALL_7
0x4000452	     0xf8585000000	                           jne 0x40004dd	       124	svndump.c	FUNCTION_4	SWITCH_1	IF_8	CALL_7
0x4000458	      0x48837df80b	                cmp qword [rbp - 8], 0xb	       127	svndump.c	FUNCTION_4	SWITCH_1	IF_9	CALL_8
0x400045d	            0x751a	                           jne 0x4000479	       127	svndump.c	FUNCTION_4	SWITCH_1	IF_9	CALL_8
0x400045f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       128	svndump.c	FUNCTION_4	SWITCH_1	IF_9
0x4000463	      0xba0b000000	                            mov edx, 0xb	       128	svndump.c	FUNCTION_4	SWITCH_1	IF_9
0x4000468	      0xbe00000000	                              mov esi, 0	       128	svndump.c	FUNCTION_4	SWITCH_1	IF_9
0x400046d	          0x4889c7	                            mov rdi, rax	       128	svndump.c	FUNCTION_4	SWITCH_1	IF_9
0x4000470	      0xe800000000	                          call 0x4000475	       128	svndump.c	FUNCTION_4	SWITCH_1	IF_9
0x4000475	            0x85c0	                           test eax, eax	       127	svndump.c	FUNCTION_4	SWITCH_1	IF_9	CALL_8
0x4000477	            0x7567	                           jne 0x40004e0	       127	svndump.c	FUNCTION_4	SWITCH_1	IF_9	CALL_8
0x4000479	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       130	svndump.c	FUNCTION_4	SWITCH_1	IF_10
0x400047d	            0x8b00	                    mov eax, dword [rax]	       130	svndump.c	FUNCTION_4	SWITCH_1	IF_10
0x400047f	            0x85c0	                           test eax, eax	       130	svndump.c	FUNCTION_4	SWITCH_1	IF_10
0x4000481	            0x7416	                            je 0x4000499	       130	svndump.c	FUNCTION_4	SWITCH_1	IF_10
0x4000483	      0x48837de000	               cmp qword [rbp - 0x20], 0	       131	svndump.c	FUNCTION_4	SWITCH_1	IF_10	IF_11
0x4000488	            0x7459	                            je 0x40004e3	       131	svndump.c	FUNCTION_4	SWITCH_1	IF_10	IF_11
0x400048a	      0xbf00000000	                              mov edi, 0	       133	svndump.c	FUNCTION_4	SWITCH_1	IF_10	CALL_9
0x400048f	      0xb800000000	                              mov eax, 0	       133	svndump.c	FUNCTION_4	SWITCH_1	IF_10	CALL_9
0x4000494	      0xe800000000	                          call 0x4000499	       133	svndump.c	FUNCTION_4	SWITCH_1	IF_10	CALL_9
0x4000499	      0x48837de000	               cmp qword [rbp - 0x20], 0	       135	svndump.c	FUNCTION_4	SWITCH_1	IF_12
0x400049e	            0x750c	                           jne 0x40004ac	       135	svndump.c	FUNCTION_4	SWITCH_1	IF_12
0x40004a0	    0xc70500000000	         mov dword [0x040004aa], 0x81a4 	       136	svndump.c	FUNCTION_4	SWITCH_1	IF_12
0x40004aa	            0xeb38	                           jmp 0x40004e4	       137	svndump.c	FUNCTION_4	SWITCH_1	IF_12
0x40004ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       139	svndump.c	FUNCTION_4	SWITCH_1
0x40004b0	    0xc70001000000	                      mov dword [rax], 1	       139	svndump.c	FUNCTION_4	SWITCH_1
0x40004b6	      0x48837df80e	                cmp qword [rbp - 8], 0xe	       140	svndump.c	FUNCTION_4	SWITCH_1	CALL_10
0x40004bb	            0x7507	                           jne 0x40004c4	       140	svndump.c	FUNCTION_4	SWITCH_1	CALL_10
0x40004bd	      0xb8ed810000	                         mov eax, 0x81ed	       140	svndump.c	FUNCTION_4	SWITCH_1	CALL_10
0x40004c2	            0xeb05	                           jmp 0x40004c9	       140	svndump.c	FUNCTION_4	SWITCH_1	CALL_10
0x40004c4	      0xb800a00000	                         mov eax, 0xa000	       140	svndump.c	FUNCTION_4	SWITCH_1	CALL_10
0x40004c9	    0x890500000000	            mov dword [0x040004cf], eax 	       140	svndump.c	FUNCTION_4	SWITCH_1	CALL_10
0x40004cf	            0xeb13	                           jmp 0x40004e4	       140	svndump.c	FUNCTION_4	SWITCH_1	CALL_10
0x40004d1	              0x90	                                     nop	       101	svndump.c	FUNCTION_4	SWITCH_1	IF_1
0x40004d2	            0xeb10	                           jmp 0x40004e4	       101	svndump.c	FUNCTION_4	SWITCH_1	IF_1
0x40004d4	              0x90	                                     nop	       108	svndump.c	FUNCTION_4	SWITCH_1	IF_3
0x40004d5	            0xeb0d	                           jmp 0x40004e4	       108	svndump.c	FUNCTION_4	SWITCH_1	IF_3
0x40004d7	              0x90	                                     nop	       116	svndump.c	FUNCTION_4	SWITCH_1	IF_5
0x40004d8	            0xeb0a	                           jmp 0x40004e4	       116	svndump.c	FUNCTION_4	SWITCH_1	IF_5
0x40004da	              0x90	                                     nop	       121	svndump.c	FUNCTION_4	SWITCH_1
0x40004db	            0xeb07	                           jmp 0x40004e4	       121	svndump.c	FUNCTION_4	SWITCH_1
0x40004dd	              0x90	                                     nop	       126	svndump.c	FUNCTION_4	SWITCH_1	IF_8
0x40004de	            0xeb04	                           jmp 0x40004e4	       126	svndump.c	FUNCTION_4	SWITCH_1	IF_8
0x40004e0	              0x90	                                     nop	       129	svndump.c	FUNCTION_4	SWITCH_1	IF_9
0x40004e1	            0xeb01	                           jmp 0x40004e4	       129	svndump.c	FUNCTION_4	SWITCH_1	IF_9
0x40004e3	              0x90	                                     nop	       132	svndump.c	FUNCTION_4	SWITCH_1	IF_10	IF_11
0x40004e4	              0xc9	                                   leave	       144	svndump.c	FUNCTION_4
0x40004e5	              0xc3	                                     ret	       144	svndump.c	FUNCTION_4
init	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,11:IF,0:functions,0:SWITCH,0	37
0x4001274	              0x55	                                push rbp	       486	svndump.c	FUNCTION_11
0x4001275	          0x4889e5	                            mov rbp, rsp	       486	svndump.c	FUNCTION_11
0x4001278	        0x4883ec10	                           sub rsp, 0x10	       486	svndump.c	FUNCTION_11
0x400127c	          0x897dfc	                mov dword [rbp - 4], edi	       486	svndump.c	FUNCTION_11
0x400127f	          0x8b45fc	                mov eax, dword [rbp - 4]	       487	svndump.c	FUNCTION_11	CALL_1
0x4001282	            0x89c7	                            mov edi, eax	       487	svndump.c	FUNCTION_11	CALL_1
0x4001284	      0xe800000000	                          call 0x4001289	       487	svndump.c	FUNCTION_11	CALL_1
0x4001289	      0xbe00100000	                         mov esi, 0x1000	       488	svndump.c	FUNCTION_11	CALL_2
0x400128e	      0xbf00000000	                              mov edi, 0	       488	svndump.c	FUNCTION_11	CALL_2
0x4001293	      0xe800000000	                          call 0x4001298	       488	svndump.c	FUNCTION_11	CALL_2
0x4001298	      0xbe00100000	                         mov esi, 0x1000	       489	svndump.c	FUNCTION_11	CALL_3
0x400129d	      0xbf00000000	                              mov edi, 0	       489	svndump.c	FUNCTION_11	CALL_3
0x40012a2	      0xe800000000	                          call 0x40012a7	       489	svndump.c	FUNCTION_11	CALL_3
0x40012a7	      0xbe00100000	                         mov esi, 0x1000	       490	svndump.c	FUNCTION_11	CALL_4
0x40012ac	      0xbf00000000	                              mov edi, 0	       490	svndump.c	FUNCTION_11	CALL_4
0x40012b1	      0xe800000000	                          call 0x40012b6	       490	svndump.c	FUNCTION_11	CALL_4
0x40012b6	      0xbe00100000	                         mov esi, 0x1000	       491	svndump.c	FUNCTION_11	CALL_5
0x40012bb	      0xbf00000000	                              mov edi, 0	       491	svndump.c	FUNCTION_11	CALL_5
0x40012c0	      0xe800000000	                          call 0x40012c5	       491	svndump.c	FUNCTION_11	CALL_5
0x40012c5	      0xbe00100000	                         mov esi, 0x1000	       492	svndump.c	FUNCTION_11	CALL_6
0x40012ca	      0xbf00000000	                              mov edi, 0	       492	svndump.c	FUNCTION_11	CALL_6
0x40012cf	      0xe800000000	                          call 0x40012d4	       492	svndump.c	FUNCTION_11	CALL_6
0x40012d4	      0xbe00100000	                         mov esi, 0x1000	       493	svndump.c	FUNCTION_11	CALL_7
0x40012d9	      0xbf00000000	                              mov edi, 0	       493	svndump.c	FUNCTION_11	CALL_7
0x40012de	      0xe800000000	                          call 0x40012e3	       493	svndump.c	FUNCTION_11	CALL_7
0x40012e3	      0xbe00100000	                         mov esi, 0x1000	       494	svndump.c	FUNCTION_11	CALL_8
0x40012e8	      0xbf00000000	                              mov edi, 0	       494	svndump.c	FUNCTION_11	CALL_8
0x40012ed	      0xe800000000	                          call 0x40012f2	       494	svndump.c	FUNCTION_11	CALL_8
0x40012f2	      0xbf00000000	                              mov edi, 0	       495	svndump.c	FUNCTION_11	CALL_9
0x40012f7	      0xe88eefffff	                 call sym.reset_dump_ctx	       495	svndump.c	FUNCTION_11	CALL_9
0x40012fc	      0xbf00000000	                              mov edi, 0	       496	svndump.c	FUNCTION_11	CALL_10
0x4001301	      0xe835efffff	                  call sym.reset_rev_ctx	       496	svndump.c	FUNCTION_11	CALL_10
0x4001306	      0xbf00000000	                              mov edi, 0	       497	svndump.c	FUNCTION_11	CALL_11
0x400130b	      0xe89eeeffff	                 call sym.reset_node_ctx	       497	svndump.c	FUNCTION_11	CALL_11
0x4001310	              0x90	                                     nop	       498	svndump.c	FUNCTION_11
0x4001311	              0xc9	                                   leave	       499	svndump.c	FUNCTION_11
0x4001312	              0xc3	                                     ret	       499	svndump.c	FUNCTION_11
reset_node_ctx	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,1:IF,1:functions,0:SWITCH,0	26
0x40001ae	              0x55	                                push rbp	        59	svndump.c	FUNCTION_1
0x40001af	          0x4889e5	                            mov rbp, rsp	        59	svndump.c	FUNCTION_1
0x40001b2	        0x4883ec10	                           sub rsp, 0x10	        59	svndump.c	FUNCTION_1
0x40001b6	        0x48897df8	                mov qword [rbp - 8], rdi	        59	svndump.c	FUNCTION_1
0x40001ba	    0xc70500000000	               mov dword [0x040001c4], 0	        60	svndump.c	FUNCTION_1
0x40001c4	    0xc70500000000	               mov dword [0x040001ce], 0	        61	svndump.c	FUNCTION_1
0x40001ce	    0x48c705000000	mov qword [0x040001d9], 0xffffffffffffffff 	        62	svndump.c	FUNCTION_1
0x40001d9	    0x48c705000000	mov qword [0x040001e4], 0xffffffffffffffff 	        63	svndump.c	FUNCTION_1
0x40001e4	      0xbe00000000	                              mov esi, 0	        64	svndump.c	FUNCTION_1
0x40001e9	      0xbf00000000	                              mov edi, 0	        64	svndump.c	FUNCTION_1
0x40001ee	      0xe8ecfeffff	                  call sym.strbuf_setlen	        64	svndump.c	FUNCTION_1
0x40001f3	    0xc70500000000	               mov dword [0x040001fd], 0	        65	svndump.c	FUNCTION_1
0x40001fd	      0xbe00000000	                              mov esi, 0	        66	svndump.c	FUNCTION_1
0x4000202	      0xbf00000000	                              mov edi, 0	        66	svndump.c	FUNCTION_1
0x4000207	      0xe8d3feffff	                  call sym.strbuf_setlen	        66	svndump.c	FUNCTION_1
0x400020c	      0x48837df800	                  cmp qword [rbp - 8], 0	        67	svndump.c	FUNCTION_1	IF_1
0x4000211	            0x7411	                            je 0x4000224	        67	svndump.c	FUNCTION_1	IF_1
0x4000213	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	svndump.c	FUNCTION_1	CALL_1
0x4000217	          0x4889c6	                            mov rsi, rax	        68	svndump.c	FUNCTION_1	CALL_1
0x400021a	      0xbf00000000	                              mov edi, 0	        68	svndump.c	FUNCTION_1	CALL_1
0x400021f	      0xe855ffffff	                  call sym.strbuf_addstr	        68	svndump.c	FUNCTION_1	CALL_1
0x4000224	    0xc70500000000	               mov dword [0x0400022e], 0	        69	svndump.c	FUNCTION_1
0x400022e	    0xc70500000000	               mov dword [0x04000238], 0	        70	svndump.c	FUNCTION_1
0x4000238	              0x90	                                     nop	        71	svndump.c	FUNCTION_1
0x4000239	              0xc9	                                   leave	        71	svndump.c	FUNCTION_1
0x400023a	              0xc3	                                     ret	        71	svndump.c	FUNCTION_1
reset_dump_ctx	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,1:IF,1:functions,0:SWITCH,0	20
0x400028a	              0x55	                                push rbp	        83	svndump.c	FUNCTION_3
0x400028b	          0x4889e5	                            mov rbp, rsp	        83	svndump.c	FUNCTION_3
0x400028e	        0x4883ec10	                           sub rsp, 0x10	        83	svndump.c	FUNCTION_3
0x4000292	        0x48897df8	                mov qword [rbp - 8], rdi	        83	svndump.c	FUNCTION_3
0x4000296	      0xbe00000000	                              mov esi, 0	        84	svndump.c	FUNCTION_3
0x400029b	      0xbf00000000	                              mov edi, 0	        84	svndump.c	FUNCTION_3
0x40002a0	      0xe83afeffff	                  call sym.strbuf_setlen	        84	svndump.c	FUNCTION_3
0x40002a5	      0x48837df800	                  cmp qword [rbp - 8], 0	        85	svndump.c	FUNCTION_3	IF_1
0x40002aa	            0x7411	                            je 0x40002bd	        85	svndump.c	FUNCTION_3	IF_1
0x40002ac	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	svndump.c	FUNCTION_3	CALL_1
0x40002b0	          0x4889c6	                            mov rsi, rax	        86	svndump.c	FUNCTION_3	CALL_1
0x40002b3	      0xbf00000000	                              mov edi, 0	        86	svndump.c	FUNCTION_3	CALL_1
0x40002b8	      0xe8bcfeffff	                  call sym.strbuf_addstr	        86	svndump.c	FUNCTION_3	CALL_1
0x40002bd	    0xc70500000000	               mov dword [0x040002c7], 1	        87	svndump.c	FUNCTION_3
0x40002c7	      0xbe00000000	                              mov esi, 0	        88	svndump.c	FUNCTION_3
0x40002cc	      0xbf00000000	                              mov edi, 0	        88	svndump.c	FUNCTION_3
0x40002d1	      0xe809feffff	                  call sym.strbuf_setlen	        88	svndump.c	FUNCTION_3
0x40002d6	              0x90	                                     nop	        89	svndump.c	FUNCTION_3
0x40002d7	              0xc9	                                   leave	        89	svndump.c	FUNCTION_3
0x40002d8	              0xc3	                                     ret	        89	svndump.c	FUNCTION_3
svndump_init_fd	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,4:IF,1:functions,0:SWITCH,0	28
0x4001370	              0x55	                                push rbp	       510	svndump.c	FUNCTION_13
0x4001371	          0x4889e5	                            mov rbp, rsp	       510	svndump.c	FUNCTION_13
0x4001374	        0x4883ec10	                           sub rsp, 0x10	       510	svndump.c	FUNCTION_13
0x4001378	          0x897dfc	                mov dword [rbp - 4], edi	       510	svndump.c	FUNCTION_13
0x400137b	          0x8975f8	                mov dword [rbp - 8], esi	       510	svndump.c	FUNCTION_13
0x400137e	          0x8b45fc	                mov eax, dword [rbp - 4]	       511	svndump.c	FUNCTION_13	IF_1	CALL_2
0x4001381	            0x89c7	                            mov edi, eax	       511	svndump.c	FUNCTION_13	IF_1	CALL_2
0x4001383	      0xe800000000	                          call 0x4001388	       511	svndump.c	FUNCTION_13	IF_1	CALL_2
0x4001388	            0x89c6	                            mov esi, eax	       511	svndump.c	FUNCTION_13	IF_1	CALL_2
0x400138a	      0xbf00000000	                              mov edi, 0	       511	svndump.c	FUNCTION_13	IF_1	CALL_2
0x400138f	      0xe800000000	                          call 0x4001394	       511	svndump.c	FUNCTION_13	IF_1	CALL_2
0x4001394	            0x85c0	                           test eax, eax	       511	svndump.c	FUNCTION_13	IF_1	CALL_2
0x4001396	            0x741b	                            je 0x40013b3	       511	svndump.c	FUNCTION_13	IF_1	CALL_2
0x4001398	          0x8b45fc	                mov eax, dword [rbp - 4]	       512	svndump.c	FUNCTION_13	IF_1
0x400139b	            0x89c6	                            mov esi, eax	       512	svndump.c	FUNCTION_13	IF_1
0x400139d	      0xbf00000000	                              mov edi, 0	       512	svndump.c	FUNCTION_13	IF_1
0x40013a2	      0xb800000000	                              mov eax, 0	       512	svndump.c	FUNCTION_13	IF_1
0x40013a7	      0xe800000000	                          call 0x40013ac	       512	svndump.c	FUNCTION_13	IF_1
0x40013ac	      0xe88fecffff	                    call sym.const_error	       512	svndump.c	FUNCTION_13	IF_1
0x40013b1	            0xeb16	                           jmp 0x40013c9	       512	svndump.c	FUNCTION_13	IF_1
0x40013b3	          0x8b45f8	                mov eax, dword [rbp - 8]	       513	svndump.c	FUNCTION_13	CALL_4
0x40013b6	            0x89c7	                            mov edi, eax	       513	svndump.c	FUNCTION_13	CALL_4
0x40013b8	      0xe800000000	                          call 0x40013bd	       513	svndump.c	FUNCTION_13	CALL_4
0x40013bd	            0x89c7	                            mov edi, eax	       513	svndump.c	FUNCTION_13	CALL_4
0x40013bf	      0xe8b0feffff	                           call sym.init	       513	svndump.c	FUNCTION_13	CALL_4
0x40013c4	      0xb800000000	                              mov eax, 0	       514	svndump.c	FUNCTION_13
0x40013c9	              0xc9	                                   leave	       515	svndump.c	FUNCTION_13
0x40013ca	              0xc3	                                     ret	       515	svndump.c	FUNCTION_13
strbuf_setlen	FOR,0:DO,0:ELSE,1:WHILE,0:CALL,2:IF,2:functions,0:SWITCH,0	43
0x40000df	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_18
0x40000e0	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_18
0x40000e3	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_18
0x40000e7	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_18
0x40000eb	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_18
0x40000ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_18	IF_1
0x40000f3	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_18	IF_1
0x40000f6	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_18	IF_1
0x40000f9	            0x740d	                            je 0x4000108	       162	strbuf.h	FUNCTION_18	IF_1
0x40000fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_18	IF_1
0x40000ff	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_18	IF_1
0x4000102	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_18	IF_1
0x4000106	            0xeb05	                           jmp 0x400010d	       162	strbuf.h	FUNCTION_18	IF_1
0x4000108	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_18	IF_1
0x400010d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_18	IF_1
0x4000111	            0x730f	                           jae 0x4000122	       162	strbuf.h	FUNCTION_18	IF_1
0x4000113	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_18	CALL_1
0x4000118	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_18	CALL_1
0x400011d	      0xe800000000	                          call 0x4000122	       163	strbuf.h	FUNCTION_18	CALL_1
0x4000122	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_18
0x4000126	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_18
0x400012a	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_18
0x400012e	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_18	IF_2
0x4000132	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_18	IF_2
0x4000136	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_18	IF_2
0x400013c	            0x7414	                            je 0x4000152	       165	strbuf.h	FUNCTION_18	IF_2
0x400013e	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_18	IF_2
0x4000142	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_18	IF_2
0x4000146	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_18	IF_2
0x400014a	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_18	IF_2
0x400014d	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_18	IF_2
0x4000150	            0xeb24	                           jmp 0x4000176	       169	strbuf.h	FUNCTION_18
0x4000152	     0xfb605000000	           movzx eax, byte [0x04000159] 	       168	strbuf.h	FUNCTION_18	CALL_2
0x4000159	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_18	CALL_2
0x400015b	            0x7419	                            je 0x4000176	       168	strbuf.h	FUNCTION_18	CALL_2
0x400015d	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x4000162	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_18	CALL_2
0x4000167	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x400016c	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x4000171	      0xe800000000	                          call 0x4000176	       168	strbuf.h	FUNCTION_18	CALL_2
0x4000176	              0x90	                                     nop	       169	strbuf.h	FUNCTION_18
0x4000177	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_18
0x4000178	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_18
end_revision	FOR,0:DO,0:ELSE,0:WHILE,0:CALL,6:IF,1:functions,0:SWITCH,0	47
0x4000a5a	              0x55	                                push rbp	       312	svndump.c	FUNCTION_9
0x4000a5b	          0x4889e5	                            mov rbp, rsp	       312	svndump.c	FUNCTION_9
0x4000a5e	        0x4883ec30	                           sub rsp, 0x30	       312	svndump.c	FUNCTION_9
0x4000a62	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       312	svndump.c	FUNCTION_9
0x4000a66	    0x64488b042528	                mov rax, qword fs:[0x28]	       312	svndump.c	FUNCTION_9
0x4000a6f	        0x488945f8	                mov qword [rbp - 8], rax	       312	svndump.c	FUNCTION_9
0x4000a73	            0x31c0	                            xor eax, eax	       312	svndump.c	FUNCTION_9
0x4000a75	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       313	svndump.c	FUNCTION_9
0x4000a7d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       313	svndump.c	FUNCTION_9
0x4000a85	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       313	svndump.c	FUNCTION_9
0x4000a8d	    0x8b0500000000	            mov eax, dword [0x04000a93] 	       314	svndump.c	FUNCTION_9	IF_1
0x4000a93	            0x85c0	                           test eax, eax	       314	svndump.c	FUNCTION_9	IF_1
0x4000a95	            0x7478	                            je 0x4000b0f	       314	svndump.c	FUNCTION_9	IF_1
0x4000a97	    0x8b0500000000	            mov eax, dword [0x04000a9d] 	       315	svndump.c	FUNCTION_9	IF_1	CALL_1
0x4000a9d	            0x89c7	                            mov edi, eax	       315	svndump.c	FUNCTION_9	IF_1	CALL_1
0x4000a9f	      0xe800000000	                          call 0x4000aa4	       315	svndump.c	FUNCTION_9	IF_1	CALL_1
0x4000aa4	    0x488b15000000	            mov rdx, qword [0x04000aab] 	       316	svndump.c	FUNCTION_9	IF_1	CALL_2
0x4000aab	    0x8b0500000000	            mov eax, dword [0x04000ab1] 	       316	svndump.c	FUNCTION_9	IF_1	CALL_2
0x4000ab1	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       316	svndump.c	FUNCTION_9	IF_1	CALL_2
0x4000ab5	          0x4989c8	                             mov r8, rcx	       316	svndump.c	FUNCTION_9	IF_1	CALL_2
0x4000ab8	          0x4889d1	                            mov rcx, rdx	       316	svndump.c	FUNCTION_9	IF_1	CALL_2
0x4000abb	      0xba00000000	                              mov edx, 0	       316	svndump.c	FUNCTION_9	IF_1	CALL_2
0x4000ac0	      0xbe00000000	                              mov esi, 0	       316	svndump.c	FUNCTION_9	IF_1	CALL_2
0x4000ac5	            0x89c7	                            mov edi, eax	       316	svndump.c	FUNCTION_9	IF_1	CALL_2
0x4000ac7	      0xe800000000	                          call 0x4000acc	       316	svndump.c	FUNCTION_9	IF_1	CALL_2
0x4000acc	    0x8b1500000000	            mov edx, dword [0x04000ad2] 	       318	svndump.c	FUNCTION_9	IF_1	CALL_3
0x4000ad2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       318	svndump.c	FUNCTION_9	IF_1	CALL_3
0x4000ad6	      0xbe00000000	                              mov esi, 0	       318	svndump.c	FUNCTION_9	IF_1	CALL_3
0x4000adb	          0x4889c7	                            mov rdi, rax	       318	svndump.c	FUNCTION_9	IF_1	CALL_3
0x4000ade	      0xb800000000	                              mov eax, 0	       318	svndump.c	FUNCTION_9	IF_1	CALL_3
0x4000ae3	      0xe800000000	                          call 0x4000ae8	       318	svndump.c	FUNCTION_9	IF_1	CALL_3
0x4000ae8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       319	svndump.c	FUNCTION_9	IF_1	CALL_4
0x4000aec	      0xbe00000000	                              mov esi, 0	       319	svndump.c	FUNCTION_9	IF_1	CALL_4
0x4000af1	          0x4889c7	                            mov rdi, rax	       319	svndump.c	FUNCTION_9	IF_1	CALL_4
0x4000af4	      0xe800000000	                          call 0x4000af9	       319	svndump.c	FUNCTION_9	IF_1	CALL_4
0x4000af9	      0xbf00000000	                              mov edi, 0	       320	svndump.c	FUNCTION_9	IF_1	CALL_5
0x4000afe	      0xe800000000	                          call 0x4000b03	       320	svndump.c	FUNCTION_9	IF_1	CALL_5
0x4000b03	        0x488d45e0	                   lea rax, [rbp - 0x20]	       321	svndump.c	FUNCTION_9	IF_1	CALL_6
0x4000b07	          0x4889c7	                            mov rdi, rax	       321	svndump.c	FUNCTION_9	IF_1	CALL_6
0x4000b0a	      0xe800000000	                          call 0x4000b0f	       321	svndump.c	FUNCTION_9	IF_1	CALL_6
0x4000b0f	              0x90	                                     nop	       323	svndump.c	FUNCTION_9
0x4000b10	        0x488b45f8	                mov rax, qword [rbp - 8]	       323	svndump.c	FUNCTION_9
0x4000b14	    0x644833042528	                xor rax, qword fs:[0x28]	       323	svndump.c	FUNCTION_9
0x4000b1d	            0x7405	                            je 0x4000b24	       323	svndump.c	FUNCTION_9
0x4000b1f	      0xe800000000	                          call 0x4000b24	       323	svndump.c	FUNCTION_9
0x4000b24	              0xc9	                                   leave	       323	svndump.c	FUNCTION_9
0x4000b25	              0xc3	                                     ret	       323	svndump.c	FUNCTION_9
