strbuf_addstr	DO,0:SWITCH,0:FOR,0:functions,0:IF,0:CALL,2:ELSE,0:WHILE,0	17
0x400017e	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x400017f	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x4000182	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x4000186	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x400018a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x400018e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000192	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000195	      0xe800000000	                          call 0x400019a	       279	strbuf.h	FUNCTION_5	CALL_2
0x400019a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x400019d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001a5	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001a8	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001ab	      0xe800000000	                          call 0x40001b0	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001b0	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x40001b1	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x40001b2	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
recv_sideband	DO,0:SWITCH,1:FOR,0:functions,0:IF,7:CALL,16:ELSE,2:WHILE,2	216
0x40001b3	              0x55	                                push rbp	        22	sideband.c	FUNCTION_12
0x40001b4	          0x4889e5	                            mov rbp, rsp	        22	sideband.c	FUNCTION_12
0x40001b7	    0x4881ec600001	                        sub rsp, 0x10060	        22	sideband.c	FUNCTION_12
0x40001be	    0x4889bda8fffe	          mov qword [rbp - 0x10058], rdi	        22	sideband.c	FUNCTION_12
0x40001c5	    0x89b5a4fffeff	          mov dword [rbp - 0x1005c], esi	        22	sideband.c	FUNCTION_12
0x40001cb	    0x8995a0fffeff	          mov dword [rbp - 0x10060], edx	        22	sideband.c	FUNCTION_12
0x40001d1	    0x64488b042528	                mov rax, qword fs:[0x28]	        22	sideband.c	FUNCTION_12
0x40001da	        0x488945f8	                mov qword [rbp - 8], rax	        22	sideband.c	FUNCTION_12
0x40001de	            0x31c0	                            xor eax, eax	        22	sideband.c	FUNCTION_12
0x40001e0	    0x48c785e0fffe	            mov qword [rbp - 0x10020], 0	        25	sideband.c	FUNCTION_12
0x40001eb	    0x48c785e8fffe	            mov qword [rbp - 0x10018], 0	        25	sideband.c	FUNCTION_12
0x40001f6	    0x48c785f0fffe	            mov qword [rbp - 0x10010], 0	        25	sideband.c	FUNCTION_12
0x4000201	    0xc785b8fffeff	            mov dword [rbp - 0x10048], 0	        26	sideband.c	FUNCTION_12
0x400020b	      0xbf02000000	                              mov edi, 2	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x4000210	      0xe800000000	                          call 0x4000215	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x4000215	            0x85c0	                           test eax, eax	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x4000217	            0x7416	                            je 0x400022f	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x4000219	      0xe800000000	                          call 0x400021e	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x400021e	            0x85c0	                           test eax, eax	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x4000220	            0x750d	                           jne 0x400022f	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x4000222	    0x48c785c8fffe	            mov qword [rbp - 0x10038], 0	        29	sideband.c	FUNCTION_12	IF_1
0x400022d	            0xeb0b	                           jmp 0x400023a	        29	sideband.c	FUNCTION_12	IF_1
0x400022f	    0x48c785c8fffe	            mov qword [rbp - 0x10038], 0	        31	sideband.c	FUNCTION_12	ELSE_1
0x400023a	      0xe91e030000	                           jmp 0x400055d	        33	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x400023f	    0x488d950000ff	                lea rdx, [rbp - 0x10000]	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x4000246	    0x8b85a4fffeff	          mov eax, dword [rbp - 0x1005c]	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x400024c	    0x41b900000000	                              mov r9d, 0	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x4000252	    0x41b8f0ff0000	                         mov r8d, 0xfff0	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x4000258	          0x4889d1	                            mov rcx, rdx	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x400025b	      0xba00000000	                              mov edx, 0	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x4000260	      0xbe00000000	                              mov esi, 0	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x4000265	            0x89c7	                            mov edi, eax	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x4000267	      0xe800000000	                          call 0x400026c	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x400026c	    0x8985bcfffeff	          mov dword [rbp - 0x10044], eax	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x4000272	    0x83bdbcfffeff	            cmp dword [rbp - 0x10044], 0	        37	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_2
0x4000279	     0xf84ed020000	                            je 0x400056c	        37	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_2
0x400027f	    0x83bdbcfffeff	            cmp dword [rbp - 0x10044], 0	        39	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3
0x4000286	            0x7f4d	                            jg 0x40002d5	        39	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3
0x4000288	    0x488b85e8fffe	          mov rax, qword [rbp - 0x10018]	        42	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3
0x400028f	          0x4885c0	                           test rax, rax	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x4000292	            0x7407	                            je 0x400029b	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x4000294	      0xbe00000000	                              mov esi, 0	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x4000299	            0xeb05	                           jmp 0x40002a0	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x400029b	      0xbe00000000	                              mov esi, 0	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x40002a0	    0x488b95a8fffe	          mov rdx, qword [rbp - 0x10058]	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x40002a7	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x40002ae	          0x4889d1	                            mov rcx, rdx	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x40002b1	          0x4889f2	                            mov rdx, rsi	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x40002b4	      0xbe00000000	                              mov esi, 0	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x40002b9	          0x4889c7	                            mov rdi, rax	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x40002bc	      0xb800000000	                              mov eax, 0	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x40002c1	      0xe800000000	                          call 0x40002c6	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x40002c6	    0xc785b8fffeff	  mov dword [rbp - 0x10048], 0xfffffffe 	        43	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3
0x40002d0	      0xe998020000	                           jmp 0x400056d	        44	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3
0x40002d5	     0xfb6850000ff	         movzx eax, byte [rbp - 0x10000]	        46	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x40002dc	           0xfbec0	                           movsx eax, al	        46	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x40002df	      0x25ff000000	                           and eax, 0xff	        46	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x40002e4	    0x8985c0fffeff	          mov dword [rbp - 0x10040], eax	        46	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x40002ea	    0x8b85bcfffeff	          mov eax, dword [rbp - 0x10044]	        47	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x40002f0	            0x4898	                                    cdqe	        47	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x40002f2	    0xc684050000ff	       mov byte [rbp + rax - 0x10000], 0	        47	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x40002fa	    0x83adbcfffeff	            sub dword [rbp - 0x10044], 1	        48	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x4000301	    0x8b85c0fffeff	          mov eax, dword [rbp - 0x10040]	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x4000307	          0x83f802	                              cmp eax, 2	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400030a	            0x7463	                            je 0x400036f	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400030c	          0x83f803	                              cmp eax, 3	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400030f	            0x740e	                            je 0x400031f	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x4000311	          0x83f801	                              cmp eax, 1	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x4000314	     0xf84cb010000	                            je 0x40004e5	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400031a	      0xe9ec010000	                           jmp 0x400050b	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400031f	    0x488d850000ff	                lea rax, [rbp - 0x10000]	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000326	        0x4883c001	                              add rax, 1	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400032a	    0x488b95e8fffe	          mov rdx, qword [rbp - 0x10018]	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000331	          0x4885d2	                           test rdx, rdx	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000334	            0x7407	                            je 0x400033d	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000336	      0xba00000000	                              mov edx, 0	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400033b	            0xeb05	                           jmp 0x4000342	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400033d	      0xba00000000	                              mov edx, 0	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000342	    0x488dbde0fffe	                lea rdi, [rbp - 0x10020]	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000349	          0x4989c0	                             mov r8, rax	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400034c	      0xb900000000	                              mov ecx, 0	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000351	      0xbe00000000	                              mov esi, 0	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000356	      0xb800000000	                              mov eax, 0	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400035b	      0xe800000000	                          call 0x4000360	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000360	    0xc785b8fffeff	  mov dword [rbp - 0x10048], 0xffffffff 	        53	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400036a	      0xe9ee010000	                           jmp 0x400055d	        54	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400036f	    0x488d850000ff	                lea rax, [rbp - 0x10000]	        56	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x4000376	        0x4883c001	                              add rax, 1	        56	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400037a	    0x488985d0fffe	          mov qword [rbp - 0x10030], rax	        56	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x4000381	      0xe9e4000000	                           jmp 0x400046a	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x4000386	    0x488b95d8fffe	          mov rdx, qword [rbp - 0x10028]	        67	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x400038d	    0x488b85d0fffe	          mov rax, qword [rbp - 0x10030]	        67	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000394	          0x4829c2	                            sub rdx, rax	        67	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000397	          0x4889d0	                            mov rax, rdx	        67	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x400039a	    0x8985c4fffeff	          mov dword [rbp - 0x1003c], eax	        67	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x40003a0	    0x488b85e8fffe	          mov rax, qword [rbp - 0x10018]	        69	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x40003a7	          0x4885c0	                           test rax, rax	        69	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x40003aa	            0x7514	                           jne 0x40003c0	        69	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x40003ac	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        70	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_7
0x40003b3	      0xbe00000000	                              mov esi, 0	        70	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_7
0x40003b8	          0x4889c7	                            mov rdi, rax	        70	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_7
0x40003bb	      0xe8befdffff	                  call sym.strbuf_addstr	        70	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_7
0x40003c0	    0x83bdc4fffeff	            cmp dword [rbp - 0x1003c], 0	        71	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x40003c7	            0x7e42	                           jle 0x400040b	        71	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x40003c9	    0x488b85d8fffe	          mov rax, qword [rbp - 0x10028]	        73	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x40003d0	           0xfb600	                   movzx eax, byte [rax]	        73	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x40003d3	           0xfbef8	                           movsx edi, al	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40003d6	    0x488bb5c8fffe	          mov rsi, qword [rbp - 0x10038]	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40003dd	    0x488b8dd0fffe	          mov rcx, qword [rbp - 0x10030]	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40003e4	    0x8b95c4fffeff	          mov edx, dword [rbp - 0x1003c]	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40003ea	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40003f1	          0x4189f9	                            mov r9d, edi	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40003f4	          0x4989f0	                             mov r8, rsi	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40003f7	      0xbe00000000	                              mov esi, 0	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40003fc	          0x4889c7	                            mov rdi, rax	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40003ff	      0xb800000000	                              mov eax, 0	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x4000404	      0xe800000000	                          call 0x4000409	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x4000409	            0xeb1e	                           jmp 0x4000429	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x400040b	    0x488b85d8fffe	          mov rax, qword [rbp - 0x10028]	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x4000412	           0xfb600	                   movzx eax, byte [rax]	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x4000415	           0xfbed0	                           movsx edx, al	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x4000418	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x400041f	            0x89d6	                            mov esi, edx	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x4000421	          0x4889c7	                            mov rdi, rax	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x4000424	      0xe8e7fcffff	                   call sym.strbuf_addch	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x4000429	    0x488b95e8fffe	          mov rdx, qword [rbp - 0x10018]	        77	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x4000430	    0x488b85f0fffe	          mov rax, qword [rbp - 0x10010]	        77	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x4000437	          0x4889c6	                            mov rsi, rax	        77	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x400043a	      0xbf02000000	                              mov edi, 2	        77	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x400043f	      0xe800000000	                          call 0x4000444	        77	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x4000444	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        78	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x400044b	      0xbe00000000	                              mov esi, 0	        78	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000450	          0x4889c7	                            mov rdi, rax	        78	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000453	      0xe81efcffff	                  call sym.strbuf_setlen	        78	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000458	    0x488b85d8fffe	          mov rax, qword [rbp - 0x10028]	        80	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x400045f	        0x4883c001	                              add rax, 1	        80	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000463	    0x488985d0fffe	          mov qword [rbp - 0x10030], rax	        80	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x400046a	    0x488b85d0fffe	          mov rax, qword [rbp - 0x10030]	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x4000471	      0xbe00000000	                              mov esi, 0	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x4000476	          0x4889c7	                            mov rdi, rax	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x4000479	      0xe800000000	                          call 0x400047e	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x400047e	    0x488985d8fffe	          mov qword [rbp - 0x10028], rax	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x4000485	    0x4883bdd8fffe	            cmp qword [rbp - 0x10028], 0	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x400048d	     0xf85f3feffff	                           jne 0x4000386	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x4000493	    0x488b85d0fffe	          mov rax, qword [rbp - 0x10030]	        83	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6
0x400049a	           0xfb600	                   movzx eax, byte [rax]	        83	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6
0x400049d	            0x84c0	                             test al, al	        83	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6
0x400049f	     0xf84b8000000	                            je 0x400055d	        83	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6
0x40004a5	    0x488b85e8fffe	          mov rax, qword [rbp - 0x10018]	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004ac	          0x4885c0	                           test rax, rax	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004af	            0x7407	                            je 0x40004b8	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004b1	      0xbe00000000	                              mov esi, 0	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004b6	            0xeb05	                           jmp 0x40004bd	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004b8	      0xbe00000000	                              mov esi, 0	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004bd	    0x488b95d0fffe	          mov rdx, qword [rbp - 0x10030]	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004c4	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004cb	          0x4889d1	                            mov rcx, rdx	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004ce	          0x4889f2	                            mov rdx, rsi	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004d1	      0xbe00000000	                              mov esi, 0	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004d6	          0x4889c7	                            mov rdi, rax	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004d9	      0xb800000000	                              mov eax, 0	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004de	      0xe800000000	                          call 0x40004e3	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_11
0x40004e3	            0xeb78	                           jmp 0x400055d	        86	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x40004e5	    0x8b85bcfffeff	          mov eax, dword [rbp - 0x10044]	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x40004eb	          0x4863d0	                         movsxd rdx, eax	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x40004ee	    0x488d850000ff	                lea rax, [rbp - 0x10000]	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x40004f5	        0x4883c001	                              add rax, 1	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x40004f9	    0x8b8da0fffeff	          mov ecx, dword [rbp - 0x10060]	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x40004ff	          0x4889c6	                            mov rsi, rax	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000502	            0x89cf	                            mov edi, ecx	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000504	      0xe800000000	                          call 0x4000509	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000509	            0xeb52	                           jmp 0x400055d	        89	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400050b	    0x488b85e8fffe	          mov rax, qword [rbp - 0x10018]	        92	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x4000512	          0x4885c0	                           test rax, rax	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4000515	            0x7407	                            je 0x400051e	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4000517	      0xbe00000000	                              mov esi, 0	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x400051c	            0xeb05	                           jmp 0x4000523	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x400051e	      0xbe00000000	                              mov esi, 0	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4000523	    0x8b8dc0fffeff	          mov ecx, dword [rbp - 0x10040]	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4000529	    0x488b95a8fffe	          mov rdx, qword [rbp - 0x10058]	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4000530	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4000537	          0x4189c8	                            mov r8d, ecx	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x400053a	          0x4889d1	                            mov rcx, rdx	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x400053d	          0x4889f2	                            mov rdx, rsi	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4000540	      0xbe00000000	                              mov esi, 0	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4000545	          0x4889c7	                            mov rdi, rax	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4000548	      0xb800000000	                              mov eax, 0	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x400054d	      0xe800000000	                          call 0x4000552	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4000552	    0xc785b8fffeff	  mov dword [rbp - 0x10048], 0xfffffffe 	        93	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400055c	              0x90	                                     nop	        94	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x400055d	    0x83bdb8fffeff	            cmp dword [rbp - 0x10048], 0	        33	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x4000564	     0xf84d5fcffff	                            je 0x400023f	        33	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x400056a	            0xeb01	                           jmp 0x400056d	        33	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x400056c	              0x90	                                     nop	        38	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_2
0x400056d	    0x488b85e8fffe	          mov rax, qword [rbp - 0x10018]	        98	sideband.c	FUNCTION_12	IF_7
0x4000574	          0x4885c0	                           test rax, rax	        98	sideband.c	FUNCTION_12	IF_7
0x4000577	            0x742f	                            je 0x40005a8	        98	sideband.c	FUNCTION_12	IF_7
0x4000579	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        99	sideband.c	FUNCTION_12	IF_7	CALL_14
0x4000580	      0xbe0a000000	                            mov esi, 0xa	        99	sideband.c	FUNCTION_12	IF_7	CALL_14
0x4000585	          0x4889c7	                            mov rdi, rax	        99	sideband.c	FUNCTION_12	IF_7	CALL_14
0x4000588	      0xe883fbffff	                   call sym.strbuf_addch	        99	sideband.c	FUNCTION_12	IF_7	CALL_14
0x400058d	    0x488b95e8fffe	          mov rdx, qword [rbp - 0x10018]	       100	sideband.c	FUNCTION_12	IF_7	CALL_15
0x4000594	    0x488b85f0fffe	          mov rax, qword [rbp - 0x10010]	       100	sideband.c	FUNCTION_12	IF_7	CALL_15
0x400059b	          0x4889c6	                            mov rsi, rax	       100	sideband.c	FUNCTION_12	IF_7	CALL_15
0x400059e	      0xbf02000000	                              mov edi, 2	       100	sideband.c	FUNCTION_12	IF_7	CALL_15
0x40005a3	      0xe800000000	                          call 0x40005a8	       100	sideband.c	FUNCTION_12	IF_7	CALL_15
0x40005a8	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	       102	sideband.c	FUNCTION_12	CALL_16
0x40005af	          0x4889c7	                            mov rdi, rax	       102	sideband.c	FUNCTION_12	CALL_16
0x40005b2	      0xe800000000	                          call 0x40005b7	       102	sideband.c	FUNCTION_12	CALL_16
0x40005b7	    0x8b85b8fffeff	          mov eax, dword [rbp - 0x10048]	       103	sideband.c	FUNCTION_12
0x40005bd	        0x488b4df8	                mov rcx, qword [rbp - 8]	       104	sideband.c	FUNCTION_12
0x40005c1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       104	sideband.c	FUNCTION_12
0x40005ca	            0x7405	                            je 0x40005d1	       104	sideband.c	FUNCTION_12
0x40005cc	      0xe800000000	                          call 0x40005d1	       104	sideband.c	FUNCTION_12
0x40005d1	              0xc9	                                   leave	       104	sideband.c	FUNCTION_12
0x40005d2	              0xc3	                                     ret	       104	sideband.c	FUNCTION_12
strbuf_avail	DO,0:SWITCH,0:FOR,0:functions,0:IF,0:CALL,0:ELSE,0:WHILE,0	18
0x4000040	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x4000041	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x4000048	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x400004c	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0x400004f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x4000052	            0x741b	                            je 0x400006f	       141	strbuf.h	FUNCTION_2
0x4000054	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x4000058	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x400005b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x400005f	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x4000063	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x4000066	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x4000069	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x400006d	            0xeb05	                           jmp 0x4000074	       141	strbuf.h	FUNCTION_2
0x400006f	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x4000074	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x4000075	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
send_sideband	DO,0:SWITCH,0:FOR,0:functions,0:IF,2:CALL,5:ELSE,1:WHILE,1	77
0x40005d3	              0x55	                                push rbp	       111	sideband.c	FUNCTION_13
0x40005d4	          0x4889e5	                            mov rbp, rsp	       111	sideband.c	FUNCTION_13
0x40005d7	        0x4883ec40	                           sub rsp, 0x40	       111	sideband.c	FUNCTION_13
0x40005db	          0x897ddc	             mov dword [rbp - 0x24], edi	       111	sideband.c	FUNCTION_13
0x40005de	          0x8975d8	             mov dword [rbp - 0x28], esi	       111	sideband.c	FUNCTION_13
0x40005e1	        0x488955d0	             mov qword [rbp - 0x30], rdx	       111	sideband.c	FUNCTION_13
0x40005e5	        0x48894dc8	             mov qword [rbp - 0x38], rcx	       111	sideband.c	FUNCTION_13
0x40005e9	        0x448945c4	             mov dword [rbp - 0x3c], r8d	       111	sideband.c	FUNCTION_13
0x40005ed	    0x64488b042528	                mov rax, qword fs:[0x28]	       111	sideband.c	FUNCTION_13
0x40005f6	        0x488945f8	                mov qword [rbp - 8], rax	       111	sideband.c	FUNCTION_13
0x40005fa	            0x31c0	                            xor eax, eax	       111	sideband.c	FUNCTION_13
0x40005fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       112	sideband.c	FUNCTION_13
0x4000600	        0x488945e8	             mov qword [rbp - 0x18], rax	       112	sideband.c	FUNCTION_13
0x4000604	      0xe9bd000000	                           jmp 0x40006c6	       114	sideband.c	FUNCTION_13	WHILE_1
0x4000609	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       118	sideband.c	FUNCTION_13	WHILE_1
0x400060d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       118	sideband.c	FUNCTION_13	WHILE_1
0x4000610	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       119	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x4000613	          0x83e805	                              sub eax, 5	       119	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x4000616	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       119	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x4000619	            0x7309	                           jae 0x4000624	       119	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x400061b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       120	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x400061e	          0x83e805	                              sub eax, 5	       120	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x4000621	          0x8945e4	             mov dword [rbp - 0x1c], eax	       120	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x4000624	        0x837dd800	               cmp dword [rbp - 0x28], 0	       121	sideband.c	FUNCTION_13	WHILE_1	IF_2
0x4000628	            0x7841	                            js 0x400066b	       121	sideband.c	FUNCTION_13	WHILE_1	IF_2
0x400062a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x400062d	          0x8d5005	                      lea edx, [rax + 5]	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x4000630	        0x488d45f0	                   lea rax, [rbp - 0x10]	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x4000634	            0x89d1	                            mov ecx, edx	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x4000636	      0xba00000000	                              mov edx, 0	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x400063b	      0xbe05000000	                              mov esi, 5	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x4000640	          0x4889c7	                            mov rdi, rax	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x4000643	      0xb800000000	                              mov eax, 0	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x4000648	      0xe800000000	                          call 0x400064d	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x400064d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       123	sideband.c	FUNCTION_13	WHILE_1	IF_2
0x4000650	          0x8845f4	                mov byte [rbp - 0xc], al	       123	sideband.c	FUNCTION_13	WHILE_1	IF_2
0x4000653	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x4000657	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x400065a	      0xba05000000	                              mov edx, 5	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x400065f	          0x4889ce	                            mov rsi, rcx	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x4000662	            0x89c7	                            mov edi, eax	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x4000664	      0xe800000000	                          call 0x4000669	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x4000669	            0xeb39	                           jmp 0x40006a4	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x400066b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x400066e	          0x8d5004	                      lea edx, [rax + 4]	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x4000671	        0x488d45f0	                   lea rax, [rbp - 0x10]	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x4000675	            0x89d1	                            mov ecx, edx	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x4000677	      0xba00000000	                              mov edx, 0	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x400067c	      0xbe05000000	                              mov esi, 5	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x4000681	          0x4889c7	                            mov rdi, rax	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x4000684	      0xb800000000	                              mov eax, 0	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x4000689	      0xe800000000	                          call 0x400068e	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x400068e	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000692	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000695	      0xba04000000	                              mov edx, 4	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x400069a	          0x4889ce	                            mov rsi, rcx	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x400069d	            0x89c7	                            mov edi, eax	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x400069f	      0xe800000000	                          call 0x40006a4	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x40006a4	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x40006a7	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x40006ab	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x40006ae	          0x4889ce	                            mov rsi, rcx	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x40006b1	            0x89c7	                            mov edi, eax	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x40006b3	      0xe800000000	                          call 0x40006b8	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x40006b8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       130	sideband.c	FUNCTION_13	WHILE_1
0x40006bb	        0x480145e8	            add qword [rbp - 0x18], rax 	       130	sideband.c	FUNCTION_13	WHILE_1
0x40006bf	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       131	sideband.c	FUNCTION_13	WHILE_1
0x40006c2	        0x482945c8	             sub qword [rbp - 0x38], rax	       131	sideband.c	FUNCTION_13	WHILE_1
0x40006c6	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       114	sideband.c	FUNCTION_13	WHILE_1
0x40006cb	     0xf8538ffffff	                           jne 0x4000609	       114	sideband.c	FUNCTION_13	WHILE_1
0x40006d1	              0x90	                                     nop	       133	sideband.c	FUNCTION_13
0x40006d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       133	sideband.c	FUNCTION_13
0x40006d6	    0x644833042528	                xor rax, qword fs:[0x28]	       133	sideband.c	FUNCTION_13
0x40006df	            0x7405	                            je 0x40006e6	       133	sideband.c	FUNCTION_13
0x40006e1	      0xe800000000	                          call 0x40006e6	       133	sideband.c	FUNCTION_13
0x40006e6	              0xc9	                                   leave	       133	sideband.c	FUNCTION_13
0x40006e7	              0xc3	                                     ret	       133	sideband.c	FUNCTION_13
strbuf_setlen	DO,0:SWITCH,0:FOR,0:functions,0:IF,2:CALL,2:ELSE,1:WHILE,0	43
0x4000076	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x4000077	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x400007a	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x400007e	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x4000082	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x4000086	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x400008a	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x400008d	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0x4000090	            0x740d	                            je 0x400009f	       162	strbuf.h	FUNCTION_3	IF_1
0x4000092	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x4000096	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x4000099	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0x400009d	            0xeb05	                           jmp 0x40000a4	       162	strbuf.h	FUNCTION_3	IF_1
0x400009f	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0x40000a4	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000a8	            0x730f	                           jae 0x40000b9	       162	strbuf.h	FUNCTION_3	IF_1
0x40000aa	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000af	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000b4	      0xe800000000	                          call 0x40000b9	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0x40000bd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0x40000c1	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0x40000c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0x40000c9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0x40000cd	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0x40000d3	            0x7414	                            je 0x40000e9	       165	strbuf.h	FUNCTION_3	IF_2
0x40000d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0x40000d9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0x40000dd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0x40000e1	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0x40000e4	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0x40000e7	            0xeb24	                           jmp 0x400010d	       169	strbuf.h	FUNCTION_3
0x40000e9	     0xfb605000000	           movzx eax, byte [0x040000f0] 	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000f0	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000f2	            0x7419	                            je 0x400010d	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000f4	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000f9	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000fe	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000103	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000108	      0xe800000000	                          call 0x400010d	       168	strbuf.h	FUNCTION_3	CALL_2
0x400010d	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0x400010e	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0x400010f	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
strbuf_addch	DO,0:SWITCH,0:FOR,0:functions,0:IF,1:CALL,2:ELSE,0:WHILE,0	33
0x4000110	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0x4000111	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0x4000114	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0x4000118	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0x400011c	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0x400011f	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000123	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000126	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400012b	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400012e	            0x7511	                           jne 0x4000141	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000130	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000134	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000139	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x400013c	      0xe800000000	                          call 0x4000141	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000141	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000145	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x4000149	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x400014d	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x4000151	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x4000155	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000159	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x400015d	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x4000160	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x4000163	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x4000165	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x4000169	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x400016d	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x4000171	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x4000175	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x4000178	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x400017b	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x400017c	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x400017d	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
