reencode_string_iconv	IF,3:DO,0:FOR,0:CALL,4:ELSE,1:WHILE,1:functions,0:SWITCH,0	90
0x40011c4	              0x55	                                push rbp	       474	utf8.c	FUNCTION_17
0x40011c5	          0x4889e5	                            mov rbp, rsp	       474	utf8.c	FUNCTION_17
0x40011c8	        0x4883ec60	                           sub rsp, 0x60	       474	utf8.c	FUNCTION_17
0x40011cc	        0x48897db8	             mov qword [rbp - 0x48], rdi	       474	utf8.c	FUNCTION_17
0x40011d0	        0x488975b0	             mov qword [rbp - 0x50], rsi	       474	utf8.c	FUNCTION_17
0x40011d4	        0x488955a8	             mov qword [rbp - 0x58], rdx	       474	utf8.c	FUNCTION_17
0x40011d8	        0x48894da0	             mov qword [rbp - 0x60], rcx	       474	utf8.c	FUNCTION_17
0x40011dc	    0x64488b042528	                mov rax, qword fs:[0x28]	       474	utf8.c	FUNCTION_17
0x40011e5	        0x488945f8	                mov qword [rbp - 8], rax	       474	utf8.c	FUNCTION_17
0x40011e9	            0x31c0	                            xor eax, eax	       474	utf8.c	FUNCTION_17
0x40011eb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       479	utf8.c	FUNCTION_17
0x40011ef	        0x488945c0	             mov qword [rbp - 0x40], rax	       479	utf8.c	FUNCTION_17
0x40011f3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       480	utf8.c	FUNCTION_17
0x40011f7	        0x4883c001	                              add rax, 1	       480	utf8.c	FUNCTION_17
0x40011fb	        0x488945e0	             mov qword [rbp - 0x20], rax	       480	utf8.c	FUNCTION_17
0x40011ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       481	utf8.c	FUNCTION_17	CALL_1
0x4001203	          0x4889c7	                            mov rdi, rax	       481	utf8.c	FUNCTION_17	CALL_1
0x4001206	      0xe800000000	                          call 0x400120b	       481	utf8.c	FUNCTION_17	CALL_1
0x400120b	        0x488945d8	             mov qword [rbp - 0x28], rax	       481	utf8.c	FUNCTION_17	CALL_1
0x400120f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       482	utf8.c	FUNCTION_17
0x4001213	        0x488945c8	             mov qword [rbp - 0x38], rax	       482	utf8.c	FUNCTION_17
0x4001217	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       483	utf8.c	FUNCTION_17
0x400121b	        0x488945d0	             mov qword [rbp - 0x30], rax	       483	utf8.c	FUNCTION_17
0x400121f	        0x488d7dc0	                   lea rdi, [rbp - 0x40]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4001223	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4001227	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x400122b	        0x488d75d0	                   lea rsi, [rbp - 0x30]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x400122f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4001233	          0x4989f8	                             mov r8, rdi	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4001236	          0x4889c7	                            mov rdi, rax	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4001239	      0xe800000000	                          call 0x400123e	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x400123e	        0x488945e8	             mov qword [rbp - 0x18], rax	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4001242	      0x48837de8ff	cmp qword [rbp - 0x18], 0xffffffffffffffff	       488	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4001247	     0xf8589000000	                           jne 0x40012d6	       488	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x400124d	      0xe800000000	                          call 0x4001252	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4001252	            0x8b00	                    mov eax, dword [rax]	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4001254	          0x83f807	                              cmp eax, 7	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4001257	            0x7416	                            je 0x400126f	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4001259	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       491	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2	CALL_3
0x400125d	          0x4889c7	                            mov rdi, rax	       491	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2	CALL_3
0x4001260	      0xe800000000	                          call 0x4001265	       491	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2	CALL_3
0x4001265	      0xb800000000	                              mov eax, 0	       492	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x400126a	      0xe993000000	                           jmp 0x4001302	       492	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x400126f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4001273	          0x4889c2	                            mov rdx, rax	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4001276	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x400127a	          0x4829c2	                            sub rdx, rax	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x400127d	          0x4889d0	                            mov rax, rdx	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4001280	        0x488945f0	             mov qword [rbp - 0x10], rax	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4001284	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4001288	        0x488d1400	                    lea rdx, [rax + rax]	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x400128c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4001290	          0x4801d0	                            add rax, rdx	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4001293	        0x4883c020	                           add rax, 0x20	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4001297	        0x488945e0	             mov qword [rbp - 0x20], rax	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x400129b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x400129f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x40012a3	          0x4889d6	                            mov rsi, rdx	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x40012a6	          0x4889c7	                            mov rdi, rax	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x40012a9	      0xe800000000	                          call 0x40012ae	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x40012ae	        0x488945d8	             mov qword [rbp - 0x28], rax	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x40012b2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x40012b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x40012ba	          0x4801d0	                            add rax, rdx	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x40012bd	        0x488945c8	             mov qword [rbp - 0x38], rax	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x40012c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x40012c5	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x40012c9	        0x4883e801	                              sub rax, 1	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x40012cd	        0x488945c0	             mov qword [rbp - 0x40], rax	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x40012d1	      0xe949ffffff	                           jmp 0x400121f	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x40012d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       506	utf8.c	FUNCTION_17	WHILE_1	ELSE_1
0x40012da	          0xc60000	                       mov byte [rax], 0	       506	utf8.c	FUNCTION_17	WHILE_1	ELSE_1
0x40012dd	      0x48837da000	               cmp qword [rbp - 0x60], 0	       507	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x40012e2	            0x7419	                            je 0x40012fd	       507	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x40012e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x40012e8	          0x4889c2	                            mov rdx, rax	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x40012eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x40012ef	          0x4829c2	                            sub rdx, rax	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x40012f2	          0x4889d0	                            mov rax, rdx	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x40012f5	            0x89c2	                            mov edx, eax	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x40012f7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x40012fb	            0x8910	                    mov dword [rax], edx	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x40012fd	              0x90	                                     nop	       509	utf8.c	FUNCTION_17	WHILE_1	ELSE_1
0x40012fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       512	utf8.c	FUNCTION_17
0x4001302	        0x488b4df8	                mov rcx, qword [rbp - 8]	       513	utf8.c	FUNCTION_17
0x4001306	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       513	utf8.c	FUNCTION_17
0x400130f	            0x7405	                            je 0x4001316	       513	utf8.c	FUNCTION_17
0x4001311	      0xe800000000	                          call 0x4001316	       513	utf8.c	FUNCTION_17
0x4001316	              0xc9	                                   leave	       513	utf8.c	FUNCTION_17
0x4001317	              0xc3	                                     ret	       513	utf8.c	FUNCTION_17
git_is_dir_sep	IF,0:DO,0:FOR,0:CALL,0:ELSE,0:WHILE,0:functions,0:SWITCH,0	8
0x4000040	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_30
0x4000041	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_30
0x4000044	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_30
0x4000047	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_30
0x400004b	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_30
0x400004e	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_30
0x4000051	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_30
0x4000052	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_30
strbuf_add_wrapped_bytes	IF,0:DO,0:FOR,0:CALL,3:ELSE,0:WHILE,0:functions,0:SWITCH,0	30
0x4000c8f	              0x55	                                push rbp	       348	utf8.c	FUNCTION_11
0x4000c90	          0x4889e5	                            mov rbp, rsp	       348	utf8.c	FUNCTION_11
0x4000c93	        0x4883ec30	                           sub rsp, 0x30	       348	utf8.c	FUNCTION_11
0x4000c97	        0x48897de8	             mov qword [rbp - 0x18], rdi	       348	utf8.c	FUNCTION_11
0x4000c9b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       348	utf8.c	FUNCTION_11
0x4000c9f	          0x8955dc	             mov dword [rbp - 0x24], edx	       348	utf8.c	FUNCTION_11
0x4000ca2	          0x894dd8	             mov dword [rbp - 0x28], ecx	       348	utf8.c	FUNCTION_11
0x4000ca5	        0x448945d4	             mov dword [rbp - 0x2c], r8d	       348	utf8.c	FUNCTION_11
0x4000ca9	        0x44894dd0	             mov dword [rbp - 0x30], r9d	       348	utf8.c	FUNCTION_11
0x4000cad	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       349	utf8.c	FUNCTION_11	CALL_1
0x4000cb0	          0x4863d0	                         movsxd rdx, eax	       349	utf8.c	FUNCTION_11	CALL_1
0x4000cb3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       349	utf8.c	FUNCTION_11	CALL_1
0x4000cb7	          0x4889d6	                            mov rsi, rdx	       349	utf8.c	FUNCTION_11	CALL_1
0x4000cba	          0x4889c7	                            mov rdi, rax	       349	utf8.c	FUNCTION_11	CALL_1
0x4000cbd	      0xe800000000	                          call 0x4000cc2	       349	utf8.c	FUNCTION_11	CALL_1
0x4000cc2	        0x488945f8	                mov qword [rbp - 8], rax	       349	utf8.c	FUNCTION_11	CALL_1
0x4000cc6	          0x8b7dd0	             mov edi, dword [rbp - 0x30]	       350	utf8.c	FUNCTION_11	CALL_2
0x4000cc9	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       350	utf8.c	FUNCTION_11	CALL_2
0x4000ccc	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       350	utf8.c	FUNCTION_11	CALL_2
0x4000ccf	        0x488b75f8	                mov rsi, qword [rbp - 8]	       350	utf8.c	FUNCTION_11	CALL_2
0x4000cd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       350	utf8.c	FUNCTION_11	CALL_2
0x4000cd7	          0x4189f8	                            mov r8d, edi	       350	utf8.c	FUNCTION_11	CALL_2
0x4000cda	          0x4889c7	                            mov rdi, rax	       350	utf8.c	FUNCTION_11	CALL_2
0x4000cdd	      0xe800000000	                          call 0x4000ce2	       350	utf8.c	FUNCTION_11	CALL_2
0x4000ce2	        0x488b45f8	                mov rax, qword [rbp - 8]	       351	utf8.c	FUNCTION_11	CALL_3
0x4000ce6	          0x4889c7	                            mov rdi, rax	       351	utf8.c	FUNCTION_11	CALL_3
0x4000ce9	      0xe800000000	                          call 0x4000cee	       351	utf8.c	FUNCTION_11	CALL_3
0x4000cee	              0x90	                                     nop	       352	utf8.c	FUNCTION_11
0x4000cef	              0xc9	                                   leave	       352	utf8.c	FUNCTION_11
0x4000cf0	              0xc3	                                     ret	       352	utf8.c	FUNCTION_11
git_wcwidth	IF,4:DO,0:FOR,0:CALL,2:ELSE,0:WHILE,0:functions,0:SWITCH,0	37
0x40003b4	              0x55	                                push rbp	        80	utf8.c	ELSE_2	FUNCTION_3
0x40003b5	          0x4889e5	                            mov rbp, rsp	        80	utf8.c	ELSE_2	FUNCTION_3
0x40003b8	        0x4883ec08	                              sub rsp, 8	        80	utf8.c	ELSE_2	FUNCTION_3
0x40003bc	          0x897dfc	                mov dword [rbp - 4], edi	        80	utf8.c	ELSE_2	FUNCTION_3
0x40003bf	        0x837dfc00	                  cmp dword [rbp - 4], 0	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x40003c3	            0x7507	                           jne 0x40003cc	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x40003c5	      0xb800000000	                              mov eax, 0	        88	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x40003ca	            0xeb5f	                           jmp 0x400042b	        88	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x40003cc	        0x837dfc1f	               cmp dword [rbp - 4], 0x1f	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003d0	            0x760f	                           jbe 0x40003e1	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003d2	        0x837dfc7e	               cmp dword [rbp - 4], 0x7e	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003d6	            0x7610	                           jbe 0x40003e8	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003d8	    0x817dfc9f0000	               cmp dword [rbp - 4], 0x9f	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003df	            0x7707	                            ja 0x40003e8	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003e1	      0xb8ffffffff	                     mov eax, 0xffffffff	        90	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003e6	            0xeb43	                           jmp 0x400042b	        90	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003e8	          0x8b45fc	                mov eax, dword [rbp - 4]	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003eb	      0xba37010000	                          mov edx, 0x137	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003f0	      0xbe00000000	                              mov esi, 0	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003f5	            0x89c7	                            mov edi, eax	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003f7	      0xe8f9feffff	                       call sym.bisearch	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003fc	            0x85c0	                           test eax, eax	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003fe	            0x7407	                            je 0x4000407	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x4000400	      0xb800000000	                              mov eax, 0	        95	utf8.c	ELSE_2	FUNCTION_3	IF_3
0x4000405	            0xeb24	                           jmp 0x400042b	        95	utf8.c	ELSE_2	FUNCTION_3	IF_3
0x4000407	          0x8b45fc	                mov eax, dword [rbp - 4]	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x400040a	      0xba69000000	                           mov edx, 0x69	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x400040f	      0xbe00000000	                              mov esi, 0	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x4000414	            0x89c7	                            mov edi, eax	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x4000416	      0xe8dafeffff	                       call sym.bisearch	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x400041b	            0x85c0	                           test eax, eax	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x400041d	            0x7407	                            je 0x4000426	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x400041f	      0xb802000000	                              mov eax, 2	       100	utf8.c	ELSE_2	FUNCTION_3	IF_4
0x4000424	            0xeb05	                           jmp 0x400042b	       100	utf8.c	ELSE_2	FUNCTION_3	IF_4
0x4000426	      0xb801000000	                              mov eax, 1	       102	utf8.c	ELSE_2	FUNCTION_3
0x400042b	              0xc9	                                   leave	       103	utf8.c	ELSE_2	FUNCTION_3
0x400042c	              0xc3	                                     ret	       103	utf8.c	ELSE_2	FUNCTION_3
is_utf8	IF,2:DO,0:FOR,0:CALL,1:ELSE,0:WHILE,1:functions,0:SWITCH,0	37
0x40008d2	              0x55	                                push rbp	       229	utf8.c	FUNCTION_8
0x40008d3	          0x4889e5	                            mov rbp, rsp	       229	utf8.c	FUNCTION_8
0x40008d6	        0x4883ec08	                              sub rsp, 8	       229	utf8.c	FUNCTION_8
0x40008da	        0x48897df8	                mov qword [rbp - 8], rdi	       229	utf8.c	FUNCTION_8
0x40008de	            0xeb50	                           jmp 0x4000930	       230	utf8.c	FUNCTION_8	WHILE_1
0x40008e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008e4	           0xfb600	                   movzx eax, byte [rax]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008e7	            0x3c0a	                             cmp al, 0xa	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008e9	            0x7416	                            je 0x4000901	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008ef	           0xfb600	                   movzx eax, byte [rax]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008f2	            0x3c09	                               cmp al, 9	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008f4	            0x740b	                            je 0x4000901	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008fa	           0xfb600	                   movzx eax, byte [rax]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008fd	            0x3c0d	                             cmp al, 0xd	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40008ff	            0x750e	                           jne 0x400090f	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x4000901	        0x488b45f8	                mov rax, qword [rbp - 8]	       232	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x4000905	        0x4883c001	                              add rax, 1	       232	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x4000909	        0x488945f8	                mov qword [rbp - 8], rax	       232	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x400090d	            0xeb21	                           jmp 0x4000930	       233	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x400090f	        0x488d45f8	                      lea rax, [rbp - 8]	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x4000913	      0xbe00000000	                              mov esi, 0	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x4000918	          0x4889c7	                            mov rdi, rax	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x400091b	      0xe800000000	                          call 0x4000920	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x4000920	        0x488b45f8	                mov rax, qword [rbp - 8]	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x4000924	          0x4885c0	                           test rax, rax	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x4000927	            0x7507	                           jne 0x4000930	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x4000929	      0xb800000000	                              mov eax, 0	       237	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x400092e	            0xeb10	                           jmp 0x4000940	       237	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x4000930	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	utf8.c	FUNCTION_8	WHILE_1
0x4000934	           0xfb600	                   movzx eax, byte [rax]	       230	utf8.c	FUNCTION_8	WHILE_1
0x4000937	            0x84c0	                             test al, al	       230	utf8.c	FUNCTION_8	WHILE_1
0x4000939	            0x75a5	                           jne 0x40008e0	       230	utf8.c	FUNCTION_8	WHILE_1
0x400093b	      0xb801000000	                              mov eax, 1	       239	utf8.c	FUNCTION_8
0x4000940	              0xc9	                                   leave	       240	utf8.c	FUNCTION_8
0x4000941	              0xc3	                                     ret	       240	utf8.c	FUNCTION_8
strbuf_add_indented_text	IF,2:DO,0:FOR,0:CALL,2:ELSE,0:WHILE,1:functions,0:SWITCH,0	48
0x4000942	              0x55	                                push rbp	       244	utf8.c	FUNCTION_9
0x4000943	          0x4889e5	                            mov rbp, rsp	       244	utf8.c	FUNCTION_9
0x4000946	        0x4883ec30	                           sub rsp, 0x30	       244	utf8.c	FUNCTION_9
0x400094a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       244	utf8.c	FUNCTION_9
0x400094e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       244	utf8.c	FUNCTION_9
0x4000952	          0x8955dc	             mov dword [rbp - 0x24], edx	       244	utf8.c	FUNCTION_9
0x4000955	          0x894dd8	             mov dword [rbp - 0x28], ecx	       244	utf8.c	FUNCTION_9
0x4000958	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       245	utf8.c	FUNCTION_9	IF_1
0x400095c	            0x7977	                           jns 0x40009d5	       245	utf8.c	FUNCTION_9	IF_1
0x400095e	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       246	utf8.c	FUNCTION_9	IF_1
0x4000965	            0xeb6e	                           jmp 0x40009d5	       247	utf8.c	FUNCTION_9	WHILE_1
0x4000967	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       248	utf8.c	FUNCTION_9	WHILE_1
0x400096b	      0xbe0a000000	                            mov esi, 0xa	       248	utf8.c	FUNCTION_9	WHILE_1
0x4000970	          0x4889c7	                            mov rdi, rax	       248	utf8.c	FUNCTION_9	WHILE_1
0x4000973	      0xe800000000	                          call 0x4000978	       248	utf8.c	FUNCTION_9	WHILE_1
0x4000978	        0x488945f8	                mov qword [rbp - 8], rax	       248	utf8.c	FUNCTION_9	WHILE_1
0x400097c	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x4000980	           0xfb600	                   movzx eax, byte [rax]	       249	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x4000983	            0x3c0a	                             cmp al, 0xa	       249	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x4000985	            0x7505	                           jne 0x400098c	       249	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x4000987	      0x488345f801	                  add qword [rbp - 8], 1	       250	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x400098c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x400098f	          0x4863d0	                         movsxd rdx, eax	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x4000992	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x4000996	      0xbe20000000	                           mov esi, 0x20	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x400099b	          0x4889c7	                            mov rdi, rax	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x400099e	      0xe800000000	                          call 0x40009a3	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x40009a3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009a7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009ab	          0x4829c2	                            sub rdx, rax	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009ae	          0x4889d0	                            mov rax, rdx	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009b1	          0x4889c2	                            mov rdx, rax	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009b4	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009bc	          0x4889ce	                            mov rsi, rcx	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009bf	          0x4889c7	                            mov rdi, rax	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009c2	      0xe800000000	                          call 0x40009c7	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	utf8.c	FUNCTION_9	WHILE_1
0x40009cb	        0x488945e0	             mov qword [rbp - 0x20], rax	       253	utf8.c	FUNCTION_9	WHILE_1
0x40009cf	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       254	utf8.c	FUNCTION_9	WHILE_1
0x40009d2	          0x8945dc	             mov dword [rbp - 0x24], eax	       254	utf8.c	FUNCTION_9	WHILE_1
0x40009d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       247	utf8.c	FUNCTION_9	WHILE_1
0x40009d9	           0xfb600	                   movzx eax, byte [rax]	       247	utf8.c	FUNCTION_9	WHILE_1
0x40009dc	            0x84c0	                             test al, al	       247	utf8.c	FUNCTION_9	WHILE_1
0x40009de	            0x7587	                           jne 0x4000967	       247	utf8.c	FUNCTION_9	WHILE_1
0x40009e0	              0x90	                                     nop	       256	utf8.c	FUNCTION_9
0x40009e1	              0xc9	                                   leave	       256	utf8.c	FUNCTION_9
0x40009e2	              0xc3	                                     ret	       256	utf8.c	FUNCTION_9
utf8_fprintf	IF,1:DO,0:FOR,0:CALL,6:ELSE,0:WHILE,0:functions,0:SWITCH,0	59
0x4001080	              0x55	                                push rbp	       447	utf8.c	FUNCTION_16
0x4001081	          0x4889e5	                            mov rbp, rsp	       447	utf8.c	FUNCTION_16
0x4001084	    0x4881ec100100	                          sub rsp, 0x110	       447	utf8.c	FUNCTION_16
0x400108b	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	       447	utf8.c	FUNCTION_16
0x4001092	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	       447	utf8.c	FUNCTION_16
0x4001099	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       447	utf8.c	FUNCTION_16
0x40010a0	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       447	utf8.c	FUNCTION_16
0x40010a7	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       447	utf8.c	FUNCTION_16
0x40010ae	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       447	utf8.c	FUNCTION_16
0x40010b5	            0x84c0	                             test al, al	       447	utf8.c	FUNCTION_16
0x40010b7	            0x7420	                            je 0x40010d9	       447	utf8.c	FUNCTION_16
0x40010b9	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       447	utf8.c	FUNCTION_16
0x40010bd	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       447	utf8.c	FUNCTION_16
0x40010c1	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       447	utf8.c	FUNCTION_16
0x40010c5	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       447	utf8.c	FUNCTION_16
0x40010c9	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       447	utf8.c	FUNCTION_16
0x40010cd	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       447	utf8.c	FUNCTION_16
0x40010d1	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       447	utf8.c	FUNCTION_16
0x40010d5	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       447	utf8.c	FUNCTION_16
0x40010d9	    0x64488b042528	                mov rax, qword fs:[0x28]	       447	utf8.c	FUNCTION_16
0x40010e2	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       447	utf8.c	FUNCTION_16
0x40010e9	            0x31c0	                            xor eax, eax	       447	utf8.c	FUNCTION_16
0x40010eb	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       448	utf8.c	FUNCTION_16
0x40010f6	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       448	utf8.c	FUNCTION_16
0x4001101	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       448	utf8.c	FUNCTION_16
0x400110c	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       452	utf8.c	FUNCTION_16	CALL_1
0x4001116	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       452	utf8.c	FUNCTION_16	CALL_1
0x4001120	        0x488d4510	                   lea rax, [rbp + 0x10]	       452	utf8.c	FUNCTION_16	CALL_1
0x4001124	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       452	utf8.c	FUNCTION_16	CALL_1
0x400112b	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       452	utf8.c	FUNCTION_16	CALL_1
0x4001132	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       452	utf8.c	FUNCTION_16	CALL_1
0x4001139	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       453	utf8.c	FUNCTION_16	CALL_2
0x4001140	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	       453	utf8.c	FUNCTION_16	CALL_2
0x4001147	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       453	utf8.c	FUNCTION_16	CALL_2
0x400114e	          0x4889ce	                            mov rsi, rcx	       453	utf8.c	FUNCTION_16	CALL_2
0x4001151	          0x4889c7	                            mov rdi, rax	       453	utf8.c	FUNCTION_16	CALL_2
0x4001154	      0xe800000000	                          call 0x4001159	       453	utf8.c	FUNCTION_16	CALL_2
0x4001159	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       456	utf8.c	FUNCTION_16	CALL_4
0x4001160	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       456	utf8.c	FUNCTION_16	CALL_4
0x4001167	          0x4889d6	                            mov rsi, rdx	       456	utf8.c	FUNCTION_16	CALL_4
0x400116a	          0x4889c7	                            mov rdi, rax	       456	utf8.c	FUNCTION_16	CALL_4
0x400116d	      0xe800000000	                          call 0x4001172	       456	utf8.c	FUNCTION_16	CALL_4
0x4001172	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	       456	utf8.c	FUNCTION_16	CALL_4
0x4001178	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	       457	utf8.c	FUNCTION_16	IF_1
0x400117f	            0x7815	                            js 0x4001196	       457	utf8.c	FUNCTION_16	IF_1
0x4001181	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       458	utf8.c	FUNCTION_16	CALL_5
0x4001188	          0x4889c7	                            mov rdi, rax	       458	utf8.c	FUNCTION_16	CALL_5
0x400118b	      0xe800000000	                          call 0x4001190	       458	utf8.c	FUNCTION_16	CALL_5
0x4001190	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	       458	utf8.c	FUNCTION_16	CALL_5
0x4001196	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       459	utf8.c	FUNCTION_16	CALL_6
0x400119d	          0x4889c7	                            mov rdi, rax	       459	utf8.c	FUNCTION_16	CALL_6
0x40011a0	      0xe800000000	                          call 0x40011a5	       459	utf8.c	FUNCTION_16	CALL_6
0x40011a5	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	       460	utf8.c	FUNCTION_16
0x40011ab	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       461	utf8.c	FUNCTION_16
0x40011b2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       461	utf8.c	FUNCTION_16
0x40011bb	            0x7405	                            je 0x40011c2	       461	utf8.c	FUNCTION_16
0x40011bd	      0xe800000000	                          call 0x40011c2	       461	utf8.c	FUNCTION_16
0x40011c2	              0xc9	                                   leave	       461	utf8.c	FUNCTION_16
0x40011c3	              0xc3	                                     ret	       461	utf8.c	FUNCTION_16
bisearch	IF,3:DO,0:FOR,0:CALL,0:ELSE,2:WHILE,1:functions,0:SWITCH,0	62
0x40002f5	              0x55	                                push rbp	        28	utf8.c	FUNCTION_2
0x40002f6	          0x4889e5	                            mov rbp, rsp	        28	utf8.c	FUNCTION_2
0x40002f9	          0x897dec	             mov dword [rbp - 0x14], edi	        28	utf8.c	FUNCTION_2
0x40002fc	        0x488975e0	             mov qword [rbp - 0x20], rsi	        28	utf8.c	FUNCTION_2
0x4000300	          0x8955e8	             mov dword [rbp - 0x18], edx	        28	utf8.c	FUNCTION_2
0x4000303	    0xc745f8000000	                  mov dword [rbp - 8], 0	        29	utf8.c	FUNCTION_2
0x400030a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        32	utf8.c	FUNCTION_2	IF_1
0x400030e	            0x8b00	                    mov eax, dword [rax]	        32	utf8.c	FUNCTION_2	IF_1
0x4000310	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        32	utf8.c	FUNCTION_2	IF_1
0x4000313	            0x771c	                            ja 0x4000331	        32	utf8.c	FUNCTION_2	IF_1
0x4000315	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        32	utf8.c	FUNCTION_2	IF_1
0x4000318	            0x4898	                                    cdqe	        32	utf8.c	FUNCTION_2	IF_1
0x400031a	    0x488d14c50000	                        lea rdx, [rax*8]	        32	utf8.c	FUNCTION_2	IF_1
0x4000322	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        32	utf8.c	FUNCTION_2	IF_1
0x4000326	          0x4801d0	                            add rax, rdx	        32	utf8.c	FUNCTION_2	IF_1
0x4000329	          0x8b4004	                mov eax, dword [rax + 4]	        32	utf8.c	FUNCTION_2	IF_1
0x400032c	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        32	utf8.c	FUNCTION_2	IF_1
0x400032f	            0x7374	                           jae 0x40003a5	        32	utf8.c	FUNCTION_2	IF_1
0x4000331	      0xb800000000	                              mov eax, 0	        33	utf8.c	FUNCTION_2	IF_1
0x4000336	            0xeb7a	                           jmp 0x40003b2	        33	utf8.c	FUNCTION_2	IF_1
0x4000338	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        35	utf8.c	FUNCTION_2	WHILE_1
0x400033b	          0x2b45f8	                sub eax, dword [rbp - 8]	        35	utf8.c	FUNCTION_2	WHILE_1
0x400033e	            0x89c2	                            mov edx, eax	        35	utf8.c	FUNCTION_2	WHILE_1
0x4000340	          0xc1ea1f	                           shr edx, 0x1f	        35	utf8.c	FUNCTION_2	WHILE_1
0x4000343	             0x1d0	                            add eax, edx	        35	utf8.c	FUNCTION_2	WHILE_1
0x4000345	            0xd1f8	                              sar eax, 1	        35	utf8.c	FUNCTION_2	WHILE_1
0x4000347	            0x89c2	                            mov edx, eax	        35	utf8.c	FUNCTION_2	WHILE_1
0x4000349	          0x8b45f8	                mov eax, dword [rbp - 8]	        35	utf8.c	FUNCTION_2	WHILE_1
0x400034c	             0x1d0	                            add eax, edx	        35	utf8.c	FUNCTION_2	WHILE_1
0x400034e	          0x8945fc	                mov dword [rbp - 4], eax	        35	utf8.c	FUNCTION_2	WHILE_1
0x4000351	          0x8b45fc	                mov eax, dword [rbp - 4]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000354	            0x4898	                                    cdqe	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000356	    0x488d14c50000	                        lea rdx, [rax*8]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x400035e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000362	          0x4801d0	                            add rax, rdx	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000365	          0x8b4004	                mov eax, dword [rax + 4]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000368	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x400036b	            0x730b	                           jae 0x4000378	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x400036d	          0x8b45fc	                mov eax, dword [rbp - 4]	        37	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000370	          0x83c001	                              add eax, 1	        37	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000373	          0x8945f8	                mov dword [rbp - 8], eax	        37	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000376	            0xeb2d	                           jmp 0x40003a5	        37	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000378	          0x8b45fc	                mov eax, dword [rbp - 4]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x400037b	            0x4898	                                    cdqe	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x400037d	    0x488d14c50000	                        lea rdx, [rax*8]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x4000385	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x4000389	          0x4801d0	                            add rax, rdx	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x400038c	            0x8b00	                    mov eax, dword [rax]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x400038e	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x4000391	            0x760b	                           jbe 0x400039e	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x4000393	          0x8b45fc	                mov eax, dword [rbp - 4]	        39	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x4000396	          0x83e801	                              sub eax, 1	        39	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x4000399	          0x8945e8	             mov dword [rbp - 0x18], eax	        39	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x400039c	            0xeb07	                           jmp 0x40003a5	        39	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x400039e	      0xb801000000	                              mov eax, 1	        41	utf8.c	FUNCTION_2	WHILE_1	ELSE_2
0x40003a3	            0xeb0d	                           jmp 0x40003b2	        41	utf8.c	FUNCTION_2	WHILE_1	ELSE_2
0x40003a5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        34	utf8.c	FUNCTION_2	WHILE_1
0x40003a8	          0x3b45f8	                cmp eax, dword [rbp - 8]	        34	utf8.c	FUNCTION_2	WHILE_1
0x40003ab	            0x7d8b	                           jge 0x4000338	        34	utf8.c	FUNCTION_2	WHILE_1
0x40003ad	      0xb800000000	                              mov eax, 0	        44	utf8.c	FUNCTION_2	ELSE_2
0x40003b2	              0x5d	                                 pop rbp	        45	utf8.c	FUNCTION_2	ELSE_2
0x40003b3	              0xc3	                                     ret	        45	utf8.c	FUNCTION_2	ELSE_2
strbuf_addch	IF,1:DO,0:FOR,0:CALL,2:ELSE,0:WHILE,0:functions,0:SWITCH,0	33
0x40001b7	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_58
0x40001b8	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_58
0x40001bb	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_58
0x40001bf	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_58
0x40001c3	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_58
0x40001c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_58	IF_1	CALL_1
0x40001ca	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_58	IF_1	CALL_1
0x40001cd	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_58	IF_1	CALL_1
0x40001d2	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_58	IF_1	CALL_1
0x40001d5	            0x7511	                           jne 0x40001e8	       227	strbuf.h	FUNCTION_58	IF_1	CALL_1
0x40001d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_58	CALL_2
0x40001db	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_58	CALL_2
0x40001e0	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_58	CALL_2
0x40001e3	      0xe800000000	                          call 0x40001e8	       228	strbuf.h	FUNCTION_58	CALL_2
0x40001e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_58
0x40001ec	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_58
0x40001f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_58
0x40001f4	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_58
0x40001f8	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_58
0x40001fc	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_58
0x4000200	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_58
0x4000204	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_58
0x4000207	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_58
0x400020a	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_58
0x400020c	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_58
0x4000210	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_58
0x4000214	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_58
0x4000218	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_58
0x400021c	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_58
0x400021f	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_58
0x4000222	              0x90	                                     nop	       231	strbuf.h	FUNCTION_58
0x4000223	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_58
0x4000224	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_58
pick_one_utf8_char	IF,9:DO,0:FOR,0:CALL,0:ELSE,5:WHILE,0:functions,0:SWITCH,0	246
0x400042d	              0x55	                                push rbp	       118	utf8.c	FUNCTION_4
0x400042e	          0x4889e5	                            mov rbp, rsp	       118	utf8.c	FUNCTION_4
0x4000431	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       118	utf8.c	FUNCTION_4
0x4000435	        0x488975d0	             mov qword [rbp - 0x30], rsi	       118	utf8.c	FUNCTION_4
0x4000439	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       119	utf8.c	FUNCTION_4
0x400043d	          0x488b00	                    mov rax, qword [rax]	       119	utf8.c	FUNCTION_4
0x4000440	        0x488945f0	             mov qword [rbp - 0x10], rax	       119	utf8.c	FUNCTION_4
0x4000444	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       128	utf8.c	FUNCTION_4
0x4000449	            0x7409	                            je 0x4000454	       128	utf8.c	FUNCTION_4
0x400044b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       128	utf8.c	FUNCTION_4
0x400044f	          0x488b00	                    mov rax, qword [rax]	       128	utf8.c	FUNCTION_4
0x4000452	            0xeb05	                           jmp 0x4000459	       128	utf8.c	FUNCTION_4
0x4000454	      0xb8e7030000	                          mov eax, 0x3e7	       128	utf8.c	FUNCTION_4
0x4000459	        0x488945f8	                mov qword [rbp - 8], rax	       128	utf8.c	FUNCTION_4
0x400045d	      0x48837df800	                  cmp qword [rbp - 8], 0	       130	utf8.c	FUNCTION_4	IF_1
0x4000462	     0xf8412030000	                            je 0x400077a	       130	utf8.c	FUNCTION_4	IF_1
0x4000468	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x400046c	           0xfb600	                   movzx eax, byte [rax]	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x400046f	            0x84c0	                             test al, al	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x4000471	            0x781a	                            js 0x400048d	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x4000473	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       134	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x4000477	           0xfb600	                   movzx eax, byte [rax]	       134	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x400047a	           0xfb6c0	                           movzx eax, al	       134	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x400047d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       134	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x4000480	    0x48c745e80100	               mov qword [rbp - 0x18], 1	       135	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x4000488	      0xe900030000	                           jmp 0x400078d	       135	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x400048d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000491	           0xfb600	                   movzx eax, byte [rax]	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000494	           0xfb6c0	                           movzx eax, al	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000497	      0x25e0000000	                           and eax, 0xe0	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400049c	      0x3dc0000000	                           cmp eax, 0xc0	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40004a1	            0x7578	                           jne 0x400051b	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40004a3	      0x48837df801	                  cmp qword [rbp - 8], 1	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004a8	     0xf86cd020000	                           jbe 0x400077b	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004b2	        0x4883c001	                              add rax, 1	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004b6	           0xfb600	                   movzx eax, byte [rax]	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004b9	           0xfb6c0	                           movzx eax, al	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004bc	      0x25c0000000	                           and eax, 0xc0	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004c1	      0x3d80000000	                           cmp eax, 0x80	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004c6	     0xf85af020000	                           jne 0x400077b	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       140	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004d0	           0xfb600	                   movzx eax, byte [rax]	       140	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004d3	           0xfb6c0	                           movzx eax, al	       140	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004d6	      0x25fe000000	                           and eax, 0xfe	       140	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004db	      0x3dc0000000	                           cmp eax, 0xc0	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004e0	     0xf8495020000	                            je 0x400077b	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40004e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40004ea	           0xfb600	                   movzx eax, byte [rax]	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40004ed	           0xfb6c0	                           movzx eax, al	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40004f0	          0x83e01f	                           and eax, 0x1f	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40004f3	          0xc1e006	                              shl eax, 6	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40004f6	            0x89c2	                            mov edx, eax	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40004f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40004fc	        0x4883c001	                              add rax, 1	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000500	           0xfb600	                   movzx eax, byte [rax]	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000503	           0xfb6c0	                           movzx eax, al	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000506	          0x83e03f	                           and eax, 0x3f	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000509	             0x9d0	                             or eax, edx	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400050b	          0x8945e4	             mov dword [rbp - 0x1c], eax	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400050e	    0x48c745e80200	               mov qword [rbp - 0x18], 2	       143	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000516	      0xe972020000	                           jmp 0x400078d	       143	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400051b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400051f	           0xfb600	                   movzx eax, byte [rax]	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000522	           0xfb6c0	                           movzx eax, al	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000525	      0x25f0000000	                           and eax, 0xf0	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400052a	      0x3de0000000	                           cmp eax, 0xe0	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400052f	     0xf851a010000	                           jne 0x400064f	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000535	      0x48837df802	                  cmp qword [rbp - 8], 2	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400053a	     0xf863b020000	                           jbe 0x400077b	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000540	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000544	        0x4883c001	                              add rax, 1	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000548	           0xfb600	                   movzx eax, byte [rax]	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400054b	           0xfb6c0	                           movzx eax, al	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400054e	      0x25c0000000	                           and eax, 0xc0	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000553	      0x3d80000000	                           cmp eax, 0x80	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000558	     0xf851d020000	                           jne 0x400077b	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400055e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000562	        0x4883c002	                              add rax, 2	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000566	           0xfb600	                   movzx eax, byte [rax]	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000569	           0xfb6c0	                           movzx eax, al	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400056c	      0x25c0000000	                           and eax, 0xc0	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000571	      0x3d80000000	                           cmp eax, 0x80	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000576	     0xf85ff010000	                           jne 0x400077b	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400057c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000580	           0xfb600	                   movzx eax, byte [rax]	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000583	            0x3ce0	                            cmp al, 0xe0	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000585	            0x751e	                           jne 0x40005a5	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000587	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400058b	        0x4883c001	                              add rax, 1	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400058f	           0xfb600	                   movzx eax, byte [rax]	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000592	           0xfb6c0	                           movzx eax, al	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000595	      0x25e0000000	                           and eax, 0xe0	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400059a	      0x3d80000000	                           cmp eax, 0x80	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400059f	     0xf84d6010000	                            je 0x400077b	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005a9	           0xfb600	                   movzx eax, byte [rax]	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005ac	            0x3ced	                            cmp al, 0xed	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005ae	            0x751e	                           jne 0x40005ce	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005b4	        0x4883c001	                              add rax, 1	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005b8	           0xfb600	                   movzx eax, byte [rax]	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005bb	           0xfb6c0	                           movzx eax, al	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005be	      0x25e0000000	                           and eax, 0xe0	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005c3	      0x3da0000000	                           cmp eax, 0xa0	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005c8	     0xf84ad010000	                            je 0x400077b	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005d2	           0xfb600	                   movzx eax, byte [rax]	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005d5	            0x3cef	                            cmp al, 0xef	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005d7	            0x752d	                           jne 0x4000606	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005dd	        0x4883c001	                              add rax, 1	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005e1	           0xfb600	                   movzx eax, byte [rax]	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005e4	            0x3cbf	                            cmp al, 0xbf	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005e6	            0x751e	                           jne 0x4000606	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       155	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005ec	        0x4883c002	                              add rax, 2	       155	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005f0	           0xfb600	                   movzx eax, byte [rax]	       155	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005f3	           0xfb6c0	                           movzx eax, al	       155	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005f6	      0x25fe000000	                           and eax, 0xfe	       155	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40005fb	      0x3dbe000000	                           cmp eax, 0xbe	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000600	     0xf8475010000	                            je 0x400077b	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000606	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400060a	           0xfb600	                   movzx eax, byte [rax]	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400060d	           0xfb6c0	                           movzx eax, al	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000610	          0xc1e00c	                            shl eax, 0xc	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000613	           0xfb7c0	                           movzx eax, ax	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000616	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400061a	        0x4883c201	                              add rdx, 1	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400061e	           0xfb612	                   movzx edx, byte [rdx]	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000621	           0xfb6d2	                           movzx edx, dl	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000624	          0x83e23f	                           and edx, 0x3f	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000627	          0xc1e206	                              shl edx, 6	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400062a	             0x9c2	                             or edx, eax	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400062c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000630	        0x4883c002	                              add rax, 2	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000634	           0xfb600	                   movzx eax, byte [rax]	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000637	           0xfb6c0	                           movzx eax, al	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400063a	          0x83e03f	                           and eax, 0x3f	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400063d	             0x9d0	                             or eax, edx	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400063f	          0x8945e4	             mov dword [rbp - 0x1c], eax	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000642	    0x48c745e80300	               mov qword [rbp - 0x18], 3	       159	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400064a	      0xe93e010000	                           jmp 0x400078d	       159	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400064f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000653	           0xfb600	                   movzx eax, byte [rax]	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000656	           0xfb6c0	                           movzx eax, al	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000659	      0x25f8000000	                           and eax, 0xf8	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400065e	      0x3df0000000	                           cmp eax, 0xf0	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000663	     0xf8512010000	                           jne 0x400077b	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000669	      0x48837df803	                  cmp qword [rbp - 8], 3	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400066e	     0xf8607010000	                           jbe 0x400077b	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000674	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000678	        0x4883c001	                              add rax, 1	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400067c	           0xfb600	                   movzx eax, byte [rax]	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400067f	           0xfb6c0	                           movzx eax, al	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000682	      0x25c0000000	                           and eax, 0xc0	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000687	      0x3d80000000	                           cmp eax, 0x80	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400068c	     0xf85e9000000	                           jne 0x400077b	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000692	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000696	        0x4883c002	                              add rax, 2	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400069a	           0xfb600	                   movzx eax, byte [rax]	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400069d	           0xfb6c0	                           movzx eax, al	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006a0	      0x25c0000000	                           and eax, 0xc0	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006a5	      0x3d80000000	                           cmp eax, 0x80	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006aa	     0xf85cb000000	                           jne 0x400077b	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006b4	        0x4883c003	                              add rax, 3	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006b8	           0xfb600	                   movzx eax, byte [rax]	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006bb	           0xfb6c0	                           movzx eax, al	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006be	      0x25c0000000	                           and eax, 0xc0	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006c3	      0x3d80000000	                           cmp eax, 0x80	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006c8	     0xf85ad000000	                           jne 0x400077b	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006d2	           0xfb600	                   movzx eax, byte [rax]	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006d5	            0x3cf0	                            cmp al, 0xf0	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006d7	            0x751e	                           jne 0x40006f7	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006dd	        0x4883c001	                              add rax, 1	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006e1	           0xfb600	                   movzx eax, byte [rax]	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006e4	           0xfb6c0	                           movzx eax, al	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006e7	      0x25f0000000	                           and eax, 0xf0	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006ec	      0x3d80000000	                           cmp eax, 0x80	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006f1	     0xf8484000000	                            je 0x400077b	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006fb	           0xfb600	                   movzx eax, byte [rax]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40006fe	            0x3cf4	                            cmp al, 0xf4	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000700	            0x750f	                           jne 0x4000711	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000702	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000706	        0x4883c001	                              add rax, 1	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400070a	           0xfb600	                   movzx eax, byte [rax]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400070d	            0x3c8f	                            cmp al, 0x8f	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400070f	            0x776a	                            ja 0x400077b	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000711	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000715	           0xfb600	                   movzx eax, byte [rax]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000718	            0x3cf4	                            cmp al, 0xf4	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400071a	            0x775f	                            ja 0x400077b	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400071c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000720	           0xfb600	                   movzx eax, byte [rax]	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000723	           0xfb6c0	                           movzx eax, al	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000726	          0x83e007	                              and eax, 7	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000729	          0xc1e012	                           shl eax, 0x12	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400072c	            0x89c2	                            mov edx, eax	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400072e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000732	        0x4883c001	                              add rax, 1	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000736	           0xfb600	                   movzx eax, byte [rax]	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000739	           0xfb6c0	                           movzx eax, al	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400073c	          0x83e03f	                           and eax, 0x3f	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400073f	          0xc1e00c	                            shl eax, 0xc	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000742	             0x9c2	                             or edx, eax	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000744	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000748	        0x4883c002	                              add rax, 2	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400074c	           0xfb600	                   movzx eax, byte [rax]	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400074f	           0xfb6c0	                           movzx eax, al	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000752	          0x83e03f	                           and eax, 0x3f	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000755	          0xc1e006	                              shl eax, 6	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000758	             0x9c2	                             or edx, eax	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400075a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400075e	        0x4883c003	                              add rax, 3	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000762	           0xfb600	                   movzx eax, byte [rax]	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000765	           0xfb6c0	                           movzx eax, al	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000768	          0x83e03f	                           and eax, 0x3f	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400076b	             0x9d0	                             or eax, edx	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400076d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000770	    0x48c745e80400	               mov qword [rbp - 0x18], 4	       173	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000778	            0xeb13	                           jmp 0x400078d	       173	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400077a	              0x90	                                     nop	       131	utf8.c	FUNCTION_4	IF_1
0x400077b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       176	utf8.c	FUNCTION_4	ELSE_5
0x400077f	    0x48c700000000	                      mov qword [rax], 0	       176	utf8.c	FUNCTION_4	ELSE_5
0x4000786	      0xb800000000	                              mov eax, 0	       177	utf8.c	FUNCTION_4	ELSE_5
0x400078b	            0xeb31	                           jmp 0x40007be	       177	utf8.c	FUNCTION_4	ELSE_5
0x400078d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       180	utf8.c	FUNCTION_4
0x4000791	          0x488b10	                    mov rdx, qword [rax]	       180	utf8.c	FUNCTION_4
0x4000794	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	utf8.c	FUNCTION_4
0x4000798	          0x4801c2	                            add rdx, rax	       180	utf8.c	FUNCTION_4
0x400079b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       180	utf8.c	FUNCTION_4
0x400079f	          0x488910	                    mov qword [rax], rdx	       180	utf8.c	FUNCTION_4
0x40007a2	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       181	utf8.c	FUNCTION_4	IF_9
0x40007a7	            0x7412	                            je 0x40007bb	       181	utf8.c	FUNCTION_4	IF_9
0x40007a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       182	utf8.c	FUNCTION_4	IF_9
0x40007ad	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       182	utf8.c	FUNCTION_4	IF_9
0x40007b1	          0x4889c2	                            mov rdx, rax	       182	utf8.c	FUNCTION_4	IF_9
0x40007b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       182	utf8.c	FUNCTION_4	IF_9
0x40007b8	          0x488910	                    mov qword [rax], rdx	       182	utf8.c	FUNCTION_4	IF_9
0x40007bb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       183	utf8.c	FUNCTION_4
0x40007be	              0x5d	                                 pop rbp	       184	utf8.c	FUNCTION_4
0x40007bf	              0xc3	                                     ret	       184	utf8.c	FUNCTION_4
strbuf_setlen	IF,2:DO,0:FOR,0:CALL,2:ELSE,1:WHILE,0:functions,0:SWITCH,0	43
0x400011d	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_57
0x400011e	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_57
0x4000121	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_57
0x4000125	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_57
0x4000129	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_57
0x400012d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_57	IF_1
0x4000131	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_57	IF_1
0x4000134	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_57	IF_1
0x4000137	            0x740d	                            je 0x4000146	       162	strbuf.h	FUNCTION_57	IF_1
0x4000139	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_57	IF_1
0x400013d	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_57	IF_1
0x4000140	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_57	IF_1
0x4000144	            0xeb05	                           jmp 0x400014b	       162	strbuf.h	FUNCTION_57	IF_1
0x4000146	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_57	IF_1
0x400014b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_57	IF_1
0x400014f	            0x730f	                           jae 0x4000160	       162	strbuf.h	FUNCTION_57	IF_1
0x4000151	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_57	CALL_1
0x4000156	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_57	CALL_1
0x400015b	      0xe800000000	                          call 0x4000160	       163	strbuf.h	FUNCTION_57	CALL_1
0x4000160	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_57
0x4000164	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_57
0x4000168	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_57
0x400016c	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_57	IF_2
0x4000170	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_57	IF_2
0x4000174	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_57	IF_2
0x400017a	            0x7414	                            je 0x4000190	       165	strbuf.h	FUNCTION_57	IF_2
0x400017c	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_57	IF_2
0x4000180	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_57	IF_2
0x4000184	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_57	IF_2
0x4000188	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_57	IF_2
0x400018b	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_57	IF_2
0x400018e	            0xeb24	                           jmp 0x40001b4	       169	strbuf.h	FUNCTION_57
0x4000190	     0xfb605000000	           movzx eax, byte [0x04000197] 	       168	strbuf.h	FUNCTION_57	CALL_2
0x4000197	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_57	CALL_2
0x4000199	            0x7419	                            je 0x40001b4	       168	strbuf.h	FUNCTION_57	CALL_2
0x400019b	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_57	CALL_2
0x40001a0	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_57	CALL_2
0x40001a5	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_57	CALL_2
0x40001aa	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_57	CALL_2
0x40001af	      0xe800000000	                          call 0x40001b4	       168	strbuf.h	FUNCTION_57	CALL_2
0x40001b4	              0x90	                                     nop	       169	strbuf.h	FUNCTION_57
0x40001b5	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_57
0x40001b6	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_57
is_missing_required_utf_bom	IF,0:DO,0:FOR,0:CALL,6:ELSE,0:WHILE,0:functions,0:SWITCH,0	55
0x4001567	              0x55	                                push rbp	       590	utf8.c	FUNCTION_22
0x4001568	          0x4889e5	                            mov rbp, rsp	       590	utf8.c	FUNCTION_22
0x400156b	        0x4883ec20	                           sub rsp, 0x20	       590	utf8.c	FUNCTION_22
0x400156f	        0x48897df8	                mov qword [rbp - 8], rdi	       590	utf8.c	FUNCTION_22
0x4001573	        0x488975f0	             mov qword [rbp - 0x10], rsi	       590	utf8.c	FUNCTION_22
0x4001577	        0x488955e8	             mov qword [rbp - 0x18], rdx	       590	utf8.c	FUNCTION_22
0x400157b	        0x488b45f8	                mov rax, qword [rbp - 8]	       592	utf8.c	FUNCTION_22	CALL_1
0x400157f	      0xbe00000000	                              mov esi, 0	       592	utf8.c	FUNCTION_22	CALL_1
0x4001584	          0x4889c7	                            mov rdi, rax	       592	utf8.c	FUNCTION_22	CALL_1
0x4001587	      0xe89ef9ffff	              call sym.same_utf_encoding	       592	utf8.c	FUNCTION_22	CALL_1
0x400158c	            0x85c0	                           test eax, eax	       595	utf8.c	FUNCTION_22
0x400158e	            0x743c	                            je 0x40015cc	       595	utf8.c	FUNCTION_22
0x4001590	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       593	utf8.c	FUNCTION_22	CALL_2
0x4001594	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       593	utf8.c	FUNCTION_22	CALL_2
0x4001598	      0xb902000000	                              mov ecx, 2	       593	utf8.c	FUNCTION_22	CALL_2
0x400159d	      0xba00000000	                              mov edx, 0	       593	utf8.c	FUNCTION_22	CALL_2
0x40015a2	          0x4889c7	                            mov rdi, rax	       593	utf8.c	FUNCTION_22	CALL_2
0x40015a5	      0xe872feffff	                 call sym.has_bom_prefix	       593	utf8.c	FUNCTION_22	CALL_2
0x40015aa	            0x85c0	                           test eax, eax	       592	utf8.c	FUNCTION_22	CALL_1
0x40015ac	            0x751e	                           jne 0x40015cc	       592	utf8.c	FUNCTION_22	CALL_1
0x40015ae	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       594	utf8.c	FUNCTION_22	CALL_3
0x40015b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       594	utf8.c	FUNCTION_22	CALL_3
0x40015b6	      0xb902000000	                              mov ecx, 2	       594	utf8.c	FUNCTION_22	CALL_3
0x40015bb	      0xba00000000	                              mov edx, 0	       594	utf8.c	FUNCTION_22	CALL_3
0x40015c0	          0x4889c7	                            mov rdi, rax	       594	utf8.c	FUNCTION_22	CALL_3
0x40015c3	      0xe854feffff	                 call sym.has_bom_prefix	       594	utf8.c	FUNCTION_22	CALL_3
0x40015c8	            0x85c0	                           test eax, eax	       593	utf8.c	FUNCTION_22	CALL_2
0x40015ca	            0x7451	                            je 0x400161d	       593	utf8.c	FUNCTION_22	CALL_2
0x40015cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	utf8.c	FUNCTION_22	CALL_4
0x40015d0	      0xbe00000000	                              mov esi, 0	       596	utf8.c	FUNCTION_22	CALL_4
0x40015d5	          0x4889c7	                            mov rdi, rax	       596	utf8.c	FUNCTION_22	CALL_4
0x40015d8	      0xe84df9ffff	              call sym.same_utf_encoding	       596	utf8.c	FUNCTION_22	CALL_4
0x40015dd	            0x85c0	                           test eax, eax	       595	utf8.c	FUNCTION_22
0x40015df	            0x7443	                            je 0x4001624	       595	utf8.c	FUNCTION_22
0x40015e1	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       597	utf8.c	FUNCTION_22	CALL_5
0x40015e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       597	utf8.c	FUNCTION_22	CALL_5
0x40015e9	      0xb904000000	                              mov ecx, 4	       597	utf8.c	FUNCTION_22	CALL_5
0x40015ee	      0xba00000000	                              mov edx, 0	       597	utf8.c	FUNCTION_22	CALL_5
0x40015f3	          0x4889c7	                            mov rdi, rax	       597	utf8.c	FUNCTION_22	CALL_5
0x40015f6	      0xe821feffff	                 call sym.has_bom_prefix	       597	utf8.c	FUNCTION_22	CALL_5
0x40015fb	            0x85c0	                           test eax, eax	       596	utf8.c	FUNCTION_22	CALL_4
0x40015fd	            0x7525	                           jne 0x4001624	       596	utf8.c	FUNCTION_22	CALL_4
0x40015ff	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       598	utf8.c	FUNCTION_22	CALL_6
0x4001603	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       598	utf8.c	FUNCTION_22	CALL_6
0x4001607	      0xb904000000	                              mov ecx, 4	       598	utf8.c	FUNCTION_22	CALL_6
0x400160c	      0xba00000000	                              mov edx, 0	       598	utf8.c	FUNCTION_22	CALL_6
0x4001611	          0x4889c7	                            mov rdi, rax	       598	utf8.c	FUNCTION_22	CALL_6
0x4001614	      0xe803feffff	                 call sym.has_bom_prefix	       598	utf8.c	FUNCTION_22	CALL_6
0x4001619	            0x85c0	                           test eax, eax	       597	utf8.c	FUNCTION_22	CALL_5
0x400161b	            0x7507	                           jne 0x4001624	       597	utf8.c	FUNCTION_22	CALL_5
0x400161d	      0xb801000000	                              mov eax, 1	       595	utf8.c	FUNCTION_22
0x4001622	            0xeb05	                           jmp 0x4001629	       595	utf8.c	FUNCTION_22
0x4001624	      0xb800000000	                              mov eax, 0	       595	utf8.c	FUNCTION_22
0x4001629	              0xc9	                                   leave	       600	utf8.c	FUNCTION_22
0x400162a	              0xc3	                                     ret	       600	utf8.c	FUNCTION_22
fallback_encoding	IF,2:DO,0:FOR,0:CALL,2:ELSE,0:WHILE,0:functions,0:SWITCH,0	22
0x4001318	              0x55	                                push rbp	       516	utf8.c	FUNCTION_18
0x4001319	          0x4889e5	                            mov rbp, rsp	       516	utf8.c	FUNCTION_18
0x400131c	        0x4883ec10	                           sub rsp, 0x10	       516	utf8.c	FUNCTION_18
0x4001320	        0x48897df8	                mov qword [rbp - 8], rdi	       516	utf8.c	FUNCTION_18
0x4001324	        0x488b45f8	                mov rax, qword [rbp - 8]	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x4001328	          0x4889c7	                            mov rdi, rax	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x400132b	      0xe800000000	                          call 0x4001330	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x4001330	            0x85c0	                           test eax, eax	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x4001332	            0x7407	                            je 0x400133b	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x4001334	      0xb800000000	                              mov eax, 0	       525	utf8.c	FUNCTION_18	IF_1
0x4001339	            0xeb20	                           jmp 0x400135b	       525	utf8.c	FUNCTION_18	IF_1
0x400133b	        0x488b45f8	                mov rax, qword [rbp - 8]	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x400133f	      0xbe00000000	                              mov esi, 0	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x4001344	          0x4889c7	                            mov rdi, rax	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x4001347	      0xe800000000	                          call 0x400134c	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x400134c	            0x85c0	                           test eax, eax	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x400134e	            0x7507	                           jne 0x4001357	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x4001350	      0xb800000000	                              mov eax, 0	       532	utf8.c	FUNCTION_18	IF_2
0x4001355	            0xeb04	                           jmp 0x400135b	       532	utf8.c	FUNCTION_18	IF_2
0x4001357	        0x488b45f8	                mov rax, qword [rbp - 8]	       534	utf8.c	FUNCTION_18
0x400135b	              0xc9	                                   leave	       535	utf8.c	FUNCTION_18
0x400135c	              0xc3	                                     ret	       535	utf8.c	FUNCTION_18
skip_utf8_bom	IF,1:DO,0:FOR,0:CALL,4:ELSE,0:WHILE,0:functions,0:SWITCH,0	25
0x4001854	              0x55	                                push rbp	       716	utf8.c	FUNCTION_26
0x4001855	          0x4889e5	                            mov rbp, rsp	       716	utf8.c	FUNCTION_26
0x4001858	        0x4883ec10	                           sub rsp, 0x10	       716	utf8.c	FUNCTION_26
0x400185c	        0x48897df8	                mov qword [rbp - 8], rdi	       716	utf8.c	FUNCTION_26
0x4001860	        0x488975f0	             mov qword [rbp - 0x10], rsi	       716	utf8.c	FUNCTION_26
0x4001864	      0x48837df002	               cmp qword [rbp - 0x10], 2	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x4001869	            0x761d	                           jbe 0x4001888	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x400186b	        0x488b45f8	                mov rax, qword [rbp - 8]	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x400186f	          0x488b00	                    mov rax, qword [rax]	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x4001872	      0xba03000000	                              mov edx, 3	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x4001877	      0xbe00000000	                              mov esi, 0	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x400187c	          0x4889c7	                            mov rdi, rax	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x400187f	      0xe800000000	                          call 0x4001884	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x4001884	            0x85c0	                           test eax, eax	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x4001886	            0x7407	                            je 0x400188f	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x4001888	      0xb800000000	                              mov eax, 0	       719	utf8.c	FUNCTION_26	IF_1
0x400188d	            0xeb17	                           jmp 0x40018a6	       719	utf8.c	FUNCTION_26	IF_1
0x400188f	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	utf8.c	FUNCTION_26	CALL_4
0x4001893	          0x488b00	                    mov rax, qword [rax]	       720	utf8.c	FUNCTION_26	CALL_4
0x4001896	        0x488d5003	                      lea rdx, [rax + 3]	       720	utf8.c	FUNCTION_26	CALL_4
0x400189a	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	utf8.c	FUNCTION_26	CALL_4
0x400189e	          0x488910	                    mov qword [rax], rdx	       720	utf8.c	FUNCTION_26	CALL_4
0x40018a1	      0xb801000000	                              mov eax, 1	       721	utf8.c	FUNCTION_26
0x40018a6	              0xc9	                                   leave	       722	utf8.c	FUNCTION_26
0x40018a7	              0xc3	                                     ret	       722	utf8.c	FUNCTION_26
strbuf_add_wrapped_text	IF,13:DO,0:FOR,1:CALL,9:ELSE,6:WHILE,1:functions,0:SWITCH,0	189
0x40009e3	              0x55	                                push rbp	       266	utf8.c	FUNCTION_10
0x40009e4	          0x4889e5	                            mov rbp, rsp	       266	utf8.c	FUNCTION_10
0x40009e7	        0x4883ec60	                           sub rsp, 0x60	       266	utf8.c	FUNCTION_10
0x40009eb	        0x48897db8	             mov qword [rbp - 0x48], rdi	       266	utf8.c	FUNCTION_10
0x40009ef	        0x488975b0	             mov qword [rbp - 0x50], rsi	       266	utf8.c	FUNCTION_10
0x40009f3	          0x8955ac	             mov dword [rbp - 0x54], edx	       266	utf8.c	FUNCTION_10
0x40009f6	          0x894da8	             mov dword [rbp - 0x58], ecx	       266	utf8.c	FUNCTION_10
0x40009f9	        0x448945a4	             mov dword [rbp - 0x5c], r8d	       266	utf8.c	FUNCTION_10
0x40009fd	    0xc745cc010000	               mov dword [rbp - 0x34], 1	       267	utf8.c	FUNCTION_10
0x4000a04	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       268	utf8.c	FUNCTION_10
0x4000a08	        0x488945e8	             mov qword [rbp - 0x18], rax	       268	utf8.c	FUNCTION_10
0x4000a0c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       269	utf8.c	FUNCTION_10
0x4000a10	        0x488b4008	                mov rax, qword [rax + 8]	       269	utf8.c	FUNCTION_10
0x4000a14	        0x488945f0	             mov qword [rbp - 0x10], rax	       269	utf8.c	FUNCTION_10
0x4000a18	        0x837da400	               cmp dword [rbp - 0x5c], 0	       271	utf8.c	FUNCTION_10	IF_1
0x4000a1c	            0x7f1b	                            jg 0x4000a39	       271	utf8.c	FUNCTION_10	IF_1
0x4000a1e	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x4000a22	          0x8b4da8	             mov ecx, dword [rbp - 0x58]	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x4000a25	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x4000a28	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x4000a2c	          0x4889c7	                            mov rdi, rax	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x4000a2f	      0xe80effffff	       call sym.strbuf_add_indented_text	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x4000a34	      0xe954020000	                           jmp 0x4000c8d	       273	utf8.c	FUNCTION_10	IF_1
0x4000a39	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       277	utf8.c	FUNCTION_10
0x4000a3d	        0x488945d0	             mov qword [rbp - 0x30], rax	       277	utf8.c	FUNCTION_10
0x4000a41	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       278	utf8.c	FUNCTION_10
0x4000a44	          0x8945c4	             mov dword [rbp - 0x3c], eax	       278	utf8.c	FUNCTION_10
0x4000a47	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       278	utf8.c	FUNCTION_10
0x4000a4a	          0x8945c8	             mov dword [rbp - 0x38], eax	       278	utf8.c	FUNCTION_10
0x4000a4d	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       279	utf8.c	FUNCTION_10
0x4000a55	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       280	utf8.c	FUNCTION_10	IF_2
0x4000a59	            0x7921	                           jns 0x4000a7c	       280	utf8.c	FUNCTION_10	IF_2
0x4000a5b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       281	utf8.c	FUNCTION_10	IF_2
0x4000a5e	            0xf7d8	                                 neg eax	       281	utf8.c	FUNCTION_10	IF_2
0x4000a60	          0x8945c8	             mov dword [rbp - 0x38], eax	       281	utf8.c	FUNCTION_10	IF_2
0x4000a63	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       282	utf8.c	FUNCTION_10	IF_2
0x4000a67	        0x488945d8	             mov qword [rbp - 0x28], rax	       282	utf8.c	FUNCTION_10	IF_2
0x4000a6b	            0xeb0f	                           jmp 0x4000a7c	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000a6d	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0x4000a71	        0x488b45f8	                mov rax, qword [rbp - 8]	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0x4000a75	          0x4801d0	                            add rax, rdx	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0x4000a78	        0x488945b0	             mov qword [rbp - 0x50], rax	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0x4000a7c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000a80	          0x4889c7	                            mov rdi, rax	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000a83	      0xe800000000	                          call 0x4000a88	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000a88	        0x488945f8	                mov qword [rbp - 8], rax	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000a8c	      0x48837df800	                  cmp qword [rbp - 8], 0	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000a91	            0x75da	                           jne 0x4000a6d	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000a93	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       292	utf8.c	FUNCTION_10	FOR_1
0x4000a97	           0xfb600	                   movzx eax, byte [rax]	       292	utf8.c	FUNCTION_10	FOR_1
0x4000a9a	          0x8845c3	               mov byte [rbp - 0x3d], al	       292	utf8.c	FUNCTION_10	FOR_1
0x4000a9d	        0x807dc300	                cmp byte [rbp - 0x3d], 0	       293	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000aa1	            0x741e	                            je 0x4000ac1	       293	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000aa3	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	       293	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000aa7	           0xfb6c0	                           movzx eax, al	       293	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000aaa	            0x4898	                                    cdqe	       293	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000aac	     0xfb680000000	                   movzx eax, byte [rax]	       293	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000ab3	           0xfb6c0	                           movzx eax, al	       293	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000ab6	          0x83e001	                              and eax, 1	       293	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000ab9	            0x85c0	                           test eax, eax	       293	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000abb	     0xf8465010000	                            je 0x4000c26	       293	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000ac1	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000ac4	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000ac7	            0x7e0b	                           jle 0x4000ad4	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000ac9	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000ace	     0xf85f7000000	                           jne 0x4000bcb	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000ad4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       295	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000ad8	        0x488945e0	             mov qword [rbp - 0x20], rax	       295	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000adc	        0x807dc300	                cmp byte [rbp - 0x3d], 0	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4000ae0	            0x750e	                           jne 0x4000af0	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4000ae2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4000ae6	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4000aea	     0xf8499010000	                            je 0x4000c89	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4000af0	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x4000af5	            0x740a	                            je 0x4000b01	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x4000af7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       299	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x4000afb	        0x488945e0	             mov qword [rbp - 0x20], rax	       299	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x4000aff	            0xeb17	                           jmp 0x4000b18	       299	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x4000b01	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_3
0x4000b04	          0x4863d0	                         movsxd rdx, eax	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_3
0x4000b07	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_3
0x4000b0b	      0xbe20000000	                           mov esi, 0x20	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_3
0x4000b10	          0x4889c7	                            mov rdi, rax	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_3
0x4000b13	      0xe800000000	                          call 0x4000b18	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_3
0x4000b18	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b1c	          0x4889c2	                            mov rdx, rax	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b23	          0x4829c2	                            sub rdx, rax	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b26	          0x4889d0	                            mov rax, rdx	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b29	          0x4889c2	                            mov rdx, rax	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b2c	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b30	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b34	          0x4889ce	                            mov rsi, rcx	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b37	          0x4889c7	                            mov rdi, rax	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b3a	      0xe800000000	                          call 0x4000b3f	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000b3f	        0x807dc300	                cmp byte [rbp - 0x3d], 0	       303	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_7
0x4000b43	     0xf8443010000	                            je 0x4000c8c	       303	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_7
0x4000b49	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       305	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000b4d	        0x488945d8	             mov qword [rbp - 0x28], rax	       305	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000b51	        0x807dc309	                cmp byte [rbp - 0x3d], 9	       306	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x4000b55	            0x7506	                           jne 0x4000b5d	       306	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x4000b57	        0x834dc807	                or dword [rbp - 0x38], 7	       307	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x4000b5b	            0xeb57	                           jmp 0x4000bb4	       307	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x4000b5d	        0x807dc30a	              cmp byte [rbp - 0x3d], 0xa	       308	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x4000b61	            0x7551	                           jne 0x4000bb4	       308	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x4000b63	      0x488345d801	               add qword [rbp - 0x28], 1	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x4000b68	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x4000b6c	           0xfb600	                   movzx eax, byte [rax]	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x4000b6f	            0x3c0a	                             cmp al, 0xa	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x4000b71	            0x7513	                           jne 0x4000b86	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x4000b73	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       311	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10	CALL_5
0x4000b77	      0xbe0a000000	                            mov esi, 0xa	       311	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10	CALL_5
0x4000b7c	          0x4889c7	                            mov rdi, rax	       311	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10	CALL_5
0x4000b7f	      0xe833f6ffff	                   call sym.strbuf_addch	       311	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10	CALL_5
0x4000b84	            0xeb45	                           jmp 0x4000bcb	       312	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x4000b86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0x4000b8a	           0xfb600	                   movzx eax, byte [rax]	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0x4000b8d	           0xfb6c0	                           movzx eax, al	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0x4000b90	            0x4898	                                    cdqe	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0x4000b92	     0xfb680000000	                   movzx eax, byte [rax]	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0x4000b99	           0xfb6c0	                           movzx eax, al	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0x4000b9c	          0x83e006	                              and eax, 6	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0x4000b9f	            0x85c0	                           test eax, eax	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0x4000ba1	            0x7427	                            je 0x4000bca	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0x4000ba3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       317	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	CALL_6
0x4000ba7	      0xbe20000000	                           mov esi, 0x20	       317	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	CALL_6
0x4000bac	          0x4889c7	                            mov rdi, rax	       317	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	CALL_6
0x4000baf	      0xe803f6ffff	                   call sym.strbuf_addch	       317	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	CALL_6
0x4000bb4	        0x8345c801	               add dword [rbp - 0x38], 1	       319	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000bb8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       320	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000bbc	        0x4883c001	                              add rax, 1	       320	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000bc0	        0x488945b0	             mov qword [rbp - 0x50], rax	       320	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000bc4	              0x90	                                     nop	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000bc5	      0xe9ba000000	                           jmp 0x4000c84	       329	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000bca	              0x90	                                     nop	       315	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0x4000bcb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       324	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_7
0x4000bcf	      0xbe0a000000	                            mov esi, 0xa	       324	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_7
0x4000bd4	          0x4889c7	                            mov rdi, rax	       324	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_7
0x4000bd7	      0xe8dbf5ffff	                   call sym.strbuf_addch	       324	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_7
0x4000bdc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000be0	           0xfb600	                   movzx eax, byte [rax]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000be3	           0xfb6c0	                           movzx eax, al	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000be6	            0x4898	                                    cdqe	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000be8	     0xfb680000000	                   movzx eax, byte [rax]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000bef	           0xfb6c0	                           movzx eax, al	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000bf2	          0x83e001	                              and eax, 1	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000bf5	            0x85c0	                           test eax, eax	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000bf7	           0xf95c0	                                setne al	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000bfa	           0xfb6d0	                           movzx edx, al	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000bfd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000c01	          0x4801d0	                            add rax, rdx	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000c04	        0x488945d0	             mov qword [rbp - 0x30], rax	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000c08	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000c0c	        0x488945b0	             mov qword [rbp - 0x50], rax	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000c10	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000c18	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000c1b	          0x8945c4	             mov dword [rbp - 0x3c], eax	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000c1e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000c21	          0x8945c8	             mov dword [rbp - 0x38], eax	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000c24	            0xeb5e	                           jmp 0x4000c84	       329	utf8.c	FUNCTION_10	FOR_1	IF_3
0x4000c26	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       331	utf8.c	FUNCTION_10	FOR_1	IF_12
0x4000c2a	            0x7448	                            je 0x4000c74	       331	utf8.c	FUNCTION_10	FOR_1	IF_12
0x4000c2c	        0x488d45b0	                   lea rax, [rbp - 0x50]	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_8
0x4000c30	      0xbe00000000	                              mov esi, 0	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_8
0x4000c35	          0x4889c7	                            mov rdi, rax	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_8
0x4000c38	      0xe800000000	                          call 0x4000c3d	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_8
0x4000c3d	           0x145c8	             add dword [rbp - 0x38], eax	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_8
0x4000c40	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000c44	          0x4885c0	                           test rax, rax	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000c47	     0xf851efeffff	                           jne 0x4000a6b	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000c4d	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       334	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000c54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000c58	        0x488945b0	             mov qword [rbp - 0x50], rax	       335	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000c5c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       336	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13	CALL_9
0x4000c60	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       336	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13	CALL_9
0x4000c64	          0x4889d6	                            mov rsi, rdx	       336	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13	CALL_9
0x4000c67	          0x4889c7	                            mov rdi, rax	       336	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13	CALL_9
0x4000c6a	      0xe8aef4ffff	                  call sym.strbuf_setlen	       336	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13	CALL_9
0x4000c6f	      0xe9c5fdffff	                           jmp 0x4000a39	       337	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000c74	        0x8345c801	               add dword [rbp - 0x38], 1	       340	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x4000c78	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x4000c7c	        0x4883c001	                              add rax, 1	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x4000c80	        0x488945b0	             mov qword [rbp - 0x50], rax	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x4000c84	      0xe9e2fdffff	                           jmp 0x4000a6b	       343	utf8.c	FUNCTION_10	FOR_1
0x4000c89	              0x90	                                     nop	       297	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4000c8a	            0xeb01	                           jmp 0x4000c8d	       297	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4000c8c	              0x90	                                     nop	       304	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_7
0x4000c8d	              0xc9	                                   leave	       344	utf8.c	FUNCTION_10
0x4000c8e	              0xc3	                                     ret	       344	utf8.c	FUNCTION_10
strbuf_avail	IF,0:DO,0:FOR,0:CALL,0:ELSE,0:WHILE,0:functions,0:SWITCH,0	18
0x40000e7	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_56
0x40000e8	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_56
0x40000eb	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_56
0x40000ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_56
0x40000f3	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_56
0x40000f6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_56
0x40000f9	            0x741b	                            je 0x4000116	       141	strbuf.h	FUNCTION_56
0x40000fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_56
0x40000ff	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_56
0x4000102	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_56
0x4000106	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_56
0x400010a	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_56
0x400010d	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_56
0x4000110	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_56
0x4000114	            0xeb05	                           jmp 0x400011b	       141	strbuf.h	FUNCTION_56
0x4000116	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_56
0x400011b	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_56
0x400011c	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_56
strbuf_utf8_replace	IF,5:DO,0:FOR,0:CALL,10:ELSE,0:WHILE,2:functions,0:SWITCH,0	154
0x4000cf1	              0x55	                                push rbp	       356	utf8.c	FUNCTION_12
0x4000cf2	          0x4889e5	                            mov rbp, rsp	       356	utf8.c	FUNCTION_12
0x4000cf5	        0x4883ec70	                           sub rsp, 0x70	       356	utf8.c	FUNCTION_12
0x4000cf9	        0x48897da8	             mov qword [rbp - 0x58], rdi	       356	utf8.c	FUNCTION_12
0x4000cfd	          0x8975a4	             mov dword [rbp - 0x5c], esi	       356	utf8.c	FUNCTION_12
0x4000d00	          0x8955a0	             mov dword [rbp - 0x60], edx	       356	utf8.c	FUNCTION_12
0x4000d03	        0x48894d98	             mov qword [rbp - 0x68], rcx	       356	utf8.c	FUNCTION_12
0x4000d07	    0x64488b042528	                mov rax, qword fs:[0x28]	       356	utf8.c	FUNCTION_12
0x4000d10	        0x488945f8	                mov qword [rbp - 8], rax	       356	utf8.c	FUNCTION_12
0x4000d14	            0x31c0	                            xor eax, eax	       356	utf8.c	FUNCTION_12
0x4000d16	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       357	utf8.c	FUNCTION_12
0x4000d1e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       357	utf8.c	FUNCTION_12
0x4000d26	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       357	utf8.c	FUNCTION_12
0x4000d2e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       358	utf8.c	FUNCTION_12
0x4000d32	        0x488b4010	            mov rax, qword [rax + 0x10] 	       358	utf8.c	FUNCTION_12
0x4000d36	        0x488945b8	             mov qword [rbp - 0x48], rax	       358	utf8.c	FUNCTION_12
0x4000d3a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       359	utf8.c	FUNCTION_12
0x4000d3e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       359	utf8.c	FUNCTION_12
0x4000d42	        0x488b4008	                mov rax, qword [rax + 8]	       359	utf8.c	FUNCTION_12
0x4000d46	          0x4801d0	                            add rax, rdx	       359	utf8.c	FUNCTION_12
0x4000d49	        0x488945c8	             mov qword [rbp - 0x38], rax	       359	utf8.c	FUNCTION_12
0x4000d4d	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       361	utf8.c	FUNCTION_12
0x4000d54	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       361	utf8.c	FUNCTION_12
0x4000d5b	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       363	utf8.c	FUNCTION_12	IF_1
0x4000d60	            0x740f	                            je 0x4000d71	       363	utf8.c	FUNCTION_12	IF_1
0x4000d62	        0x488b4598	             mov rax, qword [rbp - 0x68]	       364	utf8.c	FUNCTION_12	CALL_1
0x4000d66	          0x4889c7	                            mov rdi, rax	       364	utf8.c	FUNCTION_12	CALL_1
0x4000d69	      0xe800000000	                          call 0x4000d6e	       364	utf8.c	FUNCTION_12	CALL_1
0x4000d6e	          0x8945b4	             mov dword [rbp - 0x4c], eax	       364	utf8.c	FUNCTION_12	CALL_1
0x4000d71	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       365	utf8.c	FUNCTION_12	CALL_2
0x4000d75	        0x488b5008	                mov rdx, qword [rax + 8]	       365	utf8.c	FUNCTION_12	CALL_2
0x4000d79	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       365	utf8.c	FUNCTION_12	CALL_2
0x4000d7c	            0x4898	                                    cdqe	       365	utf8.c	FUNCTION_12	CALL_2
0x4000d7e	          0x4801c2	                            add rdx, rax	       365	utf8.c	FUNCTION_12	CALL_2
0x4000d81	        0x488d45e0	                   lea rax, [rbp - 0x20]	       365	utf8.c	FUNCTION_12	CALL_2
0x4000d85	          0x4889d6	                            mov rsi, rdx	       365	utf8.c	FUNCTION_12	CALL_2
0x4000d88	          0x4889c7	                            mov rdi, rax	       365	utf8.c	FUNCTION_12	CALL_2
0x4000d8b	      0xe800000000	                          call 0x4000d90	       365	utf8.c	FUNCTION_12	CALL_2
0x4000d90	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       366	utf8.c	FUNCTION_12
0x4000d94	        0x488945c0	             mov qword [rbp - 0x40], rax	       366	utf8.c	FUNCTION_12
0x4000d98	      0xe926010000	                           jmp 0x4000ec3	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000d9d	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0x4000da1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0x4000da5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0x4000da9	          0x4889ce	                            mov rsi, rcx	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0x4000dac	          0x4889c7	                            mov rdi, rax	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0x4000daf	      0xe800000000	                          call 0x4000db4	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0x4000db4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000db8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000dbc	          0x4801d0	                            add rax, rdx	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000dbf	        0x488945b8	             mov qword [rbp - 0x48], rax	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000dc3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       375	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000dc7	        0x480145c0	            add qword [rbp - 0x40], rax 	       375	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000dcb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000dcf	          0x4889c7	                            mov rdi, rax	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000dd2	      0xe800000000	                          call 0x4000dd7	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000dd7	        0x488945d0	             mov qword [rbp - 0x30], rax	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000ddb	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000de0	            0x75bb	                           jne 0x4000d9d	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000de2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       378	utf8.c	FUNCTION_12	WHILE_1	IF_2
0x4000de6	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       378	utf8.c	FUNCTION_12	WHILE_1	IF_2
0x4000dea	     0xf83e3000000	                           jae 0x4000ed3	       378	utf8.c	FUNCTION_12	WHILE_1	IF_2
0x4000df0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       381	utf8.c	FUNCTION_12	WHILE_1
0x4000df4	        0x488945d8	             mov qword [rbp - 0x28], rax	       381	utf8.c	FUNCTION_12	WHILE_1
0x4000df8	        0x488d45b8	                   lea rax, [rbp - 0x48]	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000dfc	      0xbe00000000	                              mov esi, 0	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000e01	          0x4889c7	                            mov rdi, rax	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000e04	      0xe800000000	                          call 0x4000e09	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000e09	            0x4898	                                    cdqe	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000e0b	        0x488945d0	             mov qword [rbp - 0x30], rax	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000e0f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0x4000e13	          0x4885c0	                           test rax, rax	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0x4000e16	     0xf84ea000000	                            je 0x4000f06	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0x4000e1c	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e21	            0x7456	                            je 0x4000e79	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e23	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e26	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e29	            0x7c4e	                            jl 0x4000e79	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e2b	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e2e	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e31	             0x1d0	                            add eax, edx	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e33	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e36	            0x7e41	                           jle 0x4000e79	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e38	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       386	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000e3d	            0x742a	                            je 0x4000e69	       386	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000e3f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0x4000e42	          0x4863d0	                         movsxd rdx, eax	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0x4000e45	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0x4000e49	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0x4000e4d	          0x4889ce	                            mov rsi, rcx	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0x4000e50	          0x4889c7	                            mov rdi, rax	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0x4000e53	      0xe800000000	                          call 0x4000e58	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0x4000e58	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       388	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000e5b	            0x4898	                                    cdqe	       388	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000e5d	        0x480145c0	            add qword [rbp - 0x40], rax 	       388	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000e61	    0x48c745980000	               mov qword [rbp - 0x68], 0	       389	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000e69	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e6d	            0x89c2	                            mov edx, eax	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e6f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e72	             0x1d0	                            add eax, edx	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e74	          0x8945b0	             mov dword [rbp - 0x50], eax	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e77	            0xeb4a	                           jmp 0x4000ec3	       392	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000e79	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000e7d	          0x4889c2	                            mov rdx, rax	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000e80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000e84	          0x4829c2	                            sub rdx, rax	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000e87	          0x4889d0	                            mov rax, rdx	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000e8a	          0x4889c2	                            mov rdx, rax	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000e8d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000e91	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000e95	          0x4889ce	                            mov rsi, rcx	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000e98	          0x4889c7	                            mov rdi, rax	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000e9b	      0xe800000000	                          call 0x4000ea0	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000ea0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000ea4	          0x4889c2	                            mov rdx, rax	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000ea7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000eab	          0x4829c2	                            sub rdx, rax	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000eae	          0x4889d0	                            mov rax, rdx	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000eb1	        0x480145c0	            add qword [rbp - 0x40], rax 	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000eb5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       396	utf8.c	FUNCTION_12	WHILE_1
0x4000eb9	            0x89c2	                            mov edx, eax	       396	utf8.c	FUNCTION_12	WHILE_1
0x4000ebb	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       396	utf8.c	FUNCTION_12	WHILE_1
0x4000ebe	             0x1d0	                            add eax, edx	       396	utf8.c	FUNCTION_12	WHILE_1
0x4000ec0	          0x8945b0	             mov dword [rbp - 0x50], eax	       396	utf8.c	FUNCTION_12	WHILE_1
0x4000ec3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000ec7	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000ecb	     0xf82fafeffff	                            jb 0x4000dcb	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000ed1	            0xeb01	                           jmp 0x4000ed4	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000ed3	              0x90	                                     nop	       379	utf8.c	FUNCTION_12	WHILE_1	IF_2
0x4000ed4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       398	utf8.c	FUNCTION_12	CALL_8
0x4000ed8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       398	utf8.c	FUNCTION_12	CALL_8
0x4000edc	          0x4829d0	                            sub rax, rdx	       398	utf8.c	FUNCTION_12	CALL_8
0x4000edf	          0x4889c2	                            mov rdx, rax	       398	utf8.c	FUNCTION_12	CALL_8
0x4000ee2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       398	utf8.c	FUNCTION_12	CALL_8
0x4000ee6	          0x4889d6	                            mov rsi, rdx	       398	utf8.c	FUNCTION_12	CALL_8
0x4000ee9	          0x4889c7	                            mov rdi, rax	       398	utf8.c	FUNCTION_12	CALL_8
0x4000eec	      0xe82cf2ffff	                  call sym.strbuf_setlen	       398	utf8.c	FUNCTION_12	CALL_8
0x4000ef1	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       399	utf8.c	FUNCTION_12	CALL_9
0x4000ef5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       399	utf8.c	FUNCTION_12	CALL_9
0x4000ef9	          0x4889d6	                            mov rsi, rdx	       399	utf8.c	FUNCTION_12	CALL_9
0x4000efc	          0x4889c7	                            mov rdi, rax	       399	utf8.c	FUNCTION_12	CALL_9
0x4000eff	      0xe84ff1ffff	                    call sym.strbuf_swap	       399	utf8.c	FUNCTION_12	CALL_9
0x4000f04	            0xeb01	                           jmp 0x4000f07	       399	utf8.c	FUNCTION_12	CALL_9
0x4000f06	              0x90	                                     nop	       384	utf8.c	FUNCTION_12	WHILE_1	IF_3
0x4000f07	        0x488d45e0	                   lea rax, [rbp - 0x20]	       401	utf8.c	FUNCTION_12	CALL_10
0x4000f0b	          0x4889c7	                            mov rdi, rax	       401	utf8.c	FUNCTION_12	CALL_10
0x4000f0e	      0xe800000000	                          call 0x4000f13	       401	utf8.c	FUNCTION_12	CALL_10
0x4000f13	              0x90	                                     nop	       402	utf8.c	FUNCTION_12
0x4000f14	        0x488b45f8	                mov rax, qword [rbp - 8]	       402	utf8.c	FUNCTION_12
0x4000f18	    0x644833042528	                xor rax, qword fs:[0x28]	       402	utf8.c	FUNCTION_12
0x4000f21	            0x7405	                            je 0x4000f28	       402	utf8.c	FUNCTION_12
0x4000f23	      0xe800000000	                          call 0x4000f28	       402	utf8.c	FUNCTION_12
0x4000f28	              0xc9	                                   leave	       402	utf8.c	FUNCTION_12
0x4000f29	              0xc3	                                     ret	       402	utf8.c	FUNCTION_12
strbuf_swap	IF,0:DO,0:FOR,0:CALL,0:ELSE,0:WHILE,0:functions,0:SWITCH,0	39
0x4000053	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_55
0x4000054	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_55
0x4000057	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_55
0x400005b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_55
0x400005f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_55
0x4000063	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_55
0x400006c	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_55
0x4000070	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_55
0x4000072	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_55
0x4000076	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_55
0x400007a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_55
0x400007e	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_55
0x4000082	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_55
0x4000086	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_55
0x4000089	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_55
0x400008d	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_55
0x4000091	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_55
0x4000095	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_55
0x4000099	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_55
0x400009d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_55
0x40000a1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_55
0x40000a5	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_55
0x40000aa	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_55
0x40000ad	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_55
0x40000b0	      0xe800000000	                          call 0x40000b5	       127	strbuf.h	FUNCTION_55
0x40000b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_55
0x40000b9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_55
0x40000bd	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_55
0x40000c0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_55
0x40000c4	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_55
0x40000c8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_55
0x40000cc	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_55
0x40000d0	              0x90	                                     nop	       128	strbuf.h	FUNCTION_55
0x40000d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_55
0x40000d5	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_55
0x40000de	            0x7405	                            je 0x40000e5	       128	strbuf.h	FUNCTION_55
0x40000e0	      0xe800000000	                          call 0x40000e5	       128	strbuf.h	FUNCTION_55
0x40000e5	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_55
0x40000e6	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_55
strbuf_addstr	IF,0:DO,0:FOR,0:CALL,2:ELSE,0:WHILE,0:functions,0:SWITCH,0	17
0x4000225	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_59
0x4000226	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_59
0x4000229	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_59
0x400022d	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_59
0x4000231	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_59
0x4000235	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_59	CALL_2
0x4000239	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_59	CALL_2
0x400023c	      0xe800000000	                          call 0x4000241	       279	strbuf.h	FUNCTION_59	CALL_2
0x4000241	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_59	CALL_2
0x4000244	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_59	CALL_2
0x4000248	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_59	CALL_2
0x400024c	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_59	CALL_2
0x400024f	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_59	CALL_2
0x4000252	      0xe800000000	                          call 0x4000257	       279	strbuf.h	FUNCTION_59	CALL_2
0x4000257	              0x90	                                     nop	       280	strbuf.h	FUNCTION_59
0x4000258	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_59
0x4000259	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_59
same_encoding	IF,3:DO,0:FOR,0:CALL,2:ELSE,0:WHILE,0:functions,0:SWITCH,0	30
0x4001017	              0x55	                                push rbp	       430	utf8.c	FUNCTION_15
0x4001018	          0x4889e5	                            mov rbp, rsp	       430	utf8.c	FUNCTION_15
0x400101b	        0x4883ec10	                           sub rsp, 0x10	       430	utf8.c	FUNCTION_15
0x400101f	        0x48897df8	                mov qword [rbp - 8], rdi	       430	utf8.c	FUNCTION_15
0x4001023	        0x488975f0	             mov qword [rbp - 0x10], rsi	       430	utf8.c	FUNCTION_15
0x4001027	      0x48837df800	                  cmp qword [rbp - 8], 0	       433	utf8.c	FUNCTION_15	IF_1
0x400102c	            0x7508	                           jne 0x4001036	       433	utf8.c	FUNCTION_15	IF_1
0x400102e	    0x48c745f80000	                  mov qword [rbp - 8], 0	       434	utf8.c	FUNCTION_15	IF_1
0x4001036	      0x48837df000	               cmp qword [rbp - 0x10], 0	       435	utf8.c	FUNCTION_15	IF_2
0x400103b	            0x7508	                           jne 0x4001045	       435	utf8.c	FUNCTION_15	IF_2
0x400103d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       436	utf8.c	FUNCTION_15	IF_2
0x4001045	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4001049	        0x488b45f8	                mov rax, qword [rbp - 8]	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x400104d	          0x4889d6	                            mov rsi, rdx	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4001050	          0x4889c7	                            mov rdi, rax	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4001053	      0xe8d2feffff	              call sym.same_utf_encoding	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4001058	            0x85c0	                           test eax, eax	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x400105a	            0x7407	                            je 0x4001063	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x400105c	      0xb801000000	                              mov eax, 1	       438	utf8.c	FUNCTION_15	IF_3
0x4001061	            0xeb1b	                           jmp 0x400107e	       438	utf8.c	FUNCTION_15	IF_3
0x4001063	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       439	utf8.c	FUNCTION_15	CALL_2
0x4001067	        0x488b45f8	                mov rax, qword [rbp - 8]	       439	utf8.c	FUNCTION_15	CALL_2
0x400106b	          0x4889d6	                            mov rsi, rdx	       439	utf8.c	FUNCTION_15	CALL_2
0x400106e	          0x4889c7	                            mov rdi, rax	       439	utf8.c	FUNCTION_15	CALL_2
0x4001071	      0xe800000000	                          call 0x4001076	       439	utf8.c	FUNCTION_15	CALL_2
0x4001076	            0x85c0	                           test eax, eax	       439	utf8.c	FUNCTION_15	CALL_2
0x4001078	           0xf94c0	                                 sete al	       439	utf8.c	FUNCTION_15	CALL_2
0x400107b	           0xfb6c0	                           movzx eax, al	       439	utf8.c	FUNCTION_15	CALL_2
0x400107e	              0xc9	                                   leave	       440	utf8.c	FUNCTION_15
0x400107f	              0xc3	                                     ret	       440	utf8.c	FUNCTION_15
is_encoding_utf8	IF,2:DO,0:FOR,0:CALL,1:ELSE,0:WHILE,0:functions,0:SWITCH,0	19
0x4000fda	              0x55	                                push rbp	       421	utf8.c	FUNCTION_14
0x4000fdb	          0x4889e5	                            mov rbp, rsp	       421	utf8.c	FUNCTION_14
0x4000fde	        0x4883ec10	                           sub rsp, 0x10	       421	utf8.c	FUNCTION_14
0x4000fe2	        0x48897df8	                mov qword [rbp - 8], rdi	       421	utf8.c	FUNCTION_14
0x4000fe6	      0x48837df800	                  cmp qword [rbp - 8], 0	       422	utf8.c	FUNCTION_14	IF_1
0x4000feb	            0x7507	                           jne 0x4000ff4	       422	utf8.c	FUNCTION_14	IF_1
0x4000fed	      0xb801000000	                              mov eax, 1	       423	utf8.c	FUNCTION_14	IF_1
0x4000ff2	            0xeb21	                           jmp 0x4001015	       423	utf8.c	FUNCTION_14	IF_1
0x4000ff4	        0x488b45f8	                mov rax, qword [rbp - 8]	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4000ff8	          0x4889c6	                            mov rsi, rax	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4000ffb	      0xbf00000000	                              mov edi, 0	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4001000	      0xe825ffffff	              call sym.same_utf_encoding	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4001005	            0x85c0	                           test eax, eax	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4001007	            0x7407	                            je 0x4001010	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4001009	      0xb801000000	                              mov eax, 1	       425	utf8.c	FUNCTION_14	IF_2
0x400100e	            0xeb05	                           jmp 0x4001015	       425	utf8.c	FUNCTION_14	IF_2
0x4001010	      0xb800000000	                              mov eax, 0	       426	utf8.c	FUNCTION_14
0x4001015	              0xc9	                                   leave	       427	utf8.c	FUNCTION_14
0x4001016	              0xc3	                                     ret	       427	utf8.c	FUNCTION_14
same_utf_encoding	IF,1:DO,0:FOR,0:CALL,3:ELSE,0:WHILE,0:functions,0:SWITCH,0	53
0x4000f2a	              0x55	                                push rbp	       410	utf8.c	FUNCTION_13
0x4000f2b	          0x4889e5	                            mov rbp, rsp	       410	utf8.c	FUNCTION_13
0x4000f2e	        0x4883ec20	                           sub rsp, 0x20	       410	utf8.c	FUNCTION_13
0x4000f32	        0x48897de8	             mov qword [rbp - 0x18], rdi	       410	utf8.c	FUNCTION_13
0x4000f36	        0x488975e0	             mov qword [rbp - 0x20], rsi	       410	utf8.c	FUNCTION_13
0x4000f3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f3e	      0xbe00000000	                              mov esi, 0	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f43	          0x4889c7	                            mov rdi, rax	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f46	      0xe800000000	                          call 0x4000f4b	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f4b	            0x85c0	                           test eax, eax	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f4d	     0xf8480000000	                            je 0x4000fd3	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f53	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f57	      0xbe00000000	                              mov esi, 0	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f5c	          0x4889c7	                            mov rdi, rax	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f5f	      0xe800000000	                          call 0x4000f64	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f64	            0x85c0	                           test eax, eax	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f66	            0x746b	                            je 0x4000fd3	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x4000f68	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	utf8.c	FUNCTION_13	IF_1
0x4000f6c	        0x4883c003	                              add rax, 3	       413	utf8.c	FUNCTION_13	IF_1
0x4000f70	           0xfb600	                   movzx eax, byte [rax]	       413	utf8.c	FUNCTION_13	IF_1
0x4000f73	            0x3c2d	                            cmp al, 0x2d	       413	utf8.c	FUNCTION_13	IF_1
0x4000f75	            0x7507	                           jne 0x4000f7e	       413	utf8.c	FUNCTION_13	IF_1
0x4000f77	      0xb804000000	                              mov eax, 4	       413	utf8.c	FUNCTION_13	IF_1
0x4000f7c	            0xeb05	                           jmp 0x4000f83	       413	utf8.c	FUNCTION_13	IF_1
0x4000f7e	      0xb803000000	                              mov eax, 3	       413	utf8.c	FUNCTION_13	IF_1
0x4000f83	          0x8945f8	                mov dword [rbp - 8], eax	       413	utf8.c	FUNCTION_13	IF_1
0x4000f86	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       414	utf8.c	FUNCTION_13	IF_1
0x4000f8a	        0x4883c003	                              add rax, 3	       414	utf8.c	FUNCTION_13	IF_1
0x4000f8e	           0xfb600	                   movzx eax, byte [rax]	       414	utf8.c	FUNCTION_13	IF_1
0x4000f91	            0x3c2d	                            cmp al, 0x2d	       414	utf8.c	FUNCTION_13	IF_1
0x4000f93	            0x7507	                           jne 0x4000f9c	       414	utf8.c	FUNCTION_13	IF_1
0x4000f95	      0xb804000000	                              mov eax, 4	       414	utf8.c	FUNCTION_13	IF_1
0x4000f9a	            0xeb05	                           jmp 0x4000fa1	       414	utf8.c	FUNCTION_13	IF_1
0x4000f9c	      0xb803000000	                              mov eax, 3	       414	utf8.c	FUNCTION_13	IF_1
0x4000fa1	          0x8945fc	                mov dword [rbp - 4], eax	       414	utf8.c	FUNCTION_13	IF_1
0x4000fa4	          0x8b45fc	                mov eax, dword [rbp - 4]	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fa7	          0x4863d0	                         movsxd rdx, eax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000faa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fae	          0x4801c2	                            add rdx, rax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fb1	          0x8b45f8	                mov eax, dword [rbp - 8]	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fb4	          0x4863c8	                         movsxd rcx, eax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fbb	          0x4801c8	                            add rax, rcx	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fbe	          0x4889d6	                            mov rsi, rdx	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fc1	          0x4889c7	                            mov rdi, rax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fc4	      0xe800000000	                          call 0x4000fc9	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fc9	            0x85c0	                           test eax, eax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fcb	           0xf94c0	                                 sete al	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fce	           0xfb6c0	                           movzx eax, al	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fd1	            0xeb05	                           jmp 0x4000fd8	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000fd3	      0xb800000000	                              mov eax, 0	       417	utf8.c	FUNCTION_13
0x4000fd8	              0xc9	                                   leave	       418	utf8.c	FUNCTION_13
0x4000fd9	              0xc3	                                     ret	       418	utf8.c	FUNCTION_13
next_hfs_char	IF,1:DO,0:FOR,0:CALL,1:ELSE,0:WHILE,1:functions,0:SWITCH,1	34
0x4001726	              0x55	                                push rbp	       647	utf8.c	FUNCTION_24
0x4001727	          0x4889e5	                            mov rbp, rsp	       647	utf8.c	FUNCTION_24
0x400172a	        0x4883ec18	                           sub rsp, 0x18	       647	utf8.c	FUNCTION_24
0x400172e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       647	utf8.c	FUNCTION_24
0x4001732	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x4001736	      0xbe00000000	                              mov esi, 0	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x400173b	          0x4889c7	                            mov rdi, rax	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x400173e	      0xe8eaecffff	             call sym.pick_one_utf8_char	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x4001743	          0x8945fc	                mov dword [rbp - 4], eax	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x4001746	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x400174a	          0x488b00	                    mov rax, qword [rax]	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x400174d	          0x4885c0	                           test rax, rax	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x4001750	            0x7507	                           jne 0x4001759	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x4001752	      0xb800000000	                              mov eax, 0	       657	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x4001757	            0xeb37	                           jmp 0x4001790	       657	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x4001759	          0x8b45fc	                mov eax, dword [rbp - 4]	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400175c	      0x3d2e200000	                         cmp eax, 0x202e	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001761	            0x7713	                            ja 0x4001776	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001763	      0x3d2a200000	                         cmp eax, 0x202a	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001768	            0x73c8	                           jae 0x4001732	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400176a	      0x2d0c200000	                         sub eax, 0x200c	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400176f	          0x83f803	                              cmp eax, 3	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001772	            0x7719	                            ja 0x400178d	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001774	            0xeb15	                           jmp 0x400178b	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001776	      0x3d6a200000	                         cmp eax, 0x206a	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400177b	            0x7210	                            jb 0x400178d	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400177d	      0x3d6f200000	                         cmp eax, 0x206f	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001782	            0x76ae	                           jbe 0x4001732	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001784	      0x3dfffe0000	                         cmp eax, 0xfeff	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001789	            0x7502	                           jne 0x400178d	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400178b	            0xeba5	                           jmp 0x4001732	       681	utf8.c	FUNCTION_24	WHILE_1
0x400178d	          0x8b45fc	                mov eax, dword [rbp - 4]	       680	utf8.c	FUNCTION_24	WHILE_1
0x4001790	              0xc9	                                   leave	       682	utf8.c	FUNCTION_24
0x4001791	              0xc3	                                     ret	       682	utf8.c	FUNCTION_24
utf8_strwidth	IF,0:DO,0:FOR,0:CALL,1:ELSE,0:WHILE,0:functions,0:SWITCH,0	11
0x40008ae	              0x55	                                push rbp	       224	utf8.c	FUNCTION_7
0x40008af	          0x4889e5	                            mov rbp, rsp	       224	utf8.c	FUNCTION_7
0x40008b2	        0x4883ec10	                           sub rsp, 0x10	       224	utf8.c	FUNCTION_7
0x40008b6	        0x48897df8	                mov qword [rbp - 8], rdi	       224	utf8.c	FUNCTION_7
0x40008ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       225	utf8.c	FUNCTION_7	CALL_1
0x40008be	      0xba00000000	                              mov edx, 0	       225	utf8.c	FUNCTION_7	CALL_1
0x40008c3	      0xbeffffffff	                     mov esi, 0xffffffff	       225	utf8.c	FUNCTION_7	CALL_1
0x40008c8	          0x4889c7	                            mov rdi, rax	       225	utf8.c	FUNCTION_7	CALL_1
0x40008cb	      0xe800000000	                          call 0x40008d0	       225	utf8.c	FUNCTION_7	CALL_1
0x40008d0	              0xc9	                                   leave	       226	utf8.c	FUNCTION_7
0x40008d1	              0xc3	                                     ret	       226	utf8.c	FUNCTION_7
utf8_strnwidth	IF,1:DO,0:FOR,0:CALL,3:ELSE,0:WHILE,2:functions,0:SWITCH,0	52
0x4000805	              0x55	                                push rbp	       207	utf8.c	FUNCTION_6
0x4000806	          0x4889e5	                            mov rbp, rsp	       207	utf8.c	FUNCTION_6
0x4000809	        0x4883ec20	                           sub rsp, 0x20	       207	utf8.c	FUNCTION_6
0x400080d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       207	utf8.c	FUNCTION_6
0x4000811	          0x8975e4	             mov dword [rbp - 0x1c], esi	       207	utf8.c	FUNCTION_6
0x4000814	          0x8955e0	             mov dword [rbp - 0x20], edx	       207	utf8.c	FUNCTION_6
0x4000817	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       208	utf8.c	FUNCTION_6
0x400081e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       209	utf8.c	FUNCTION_6
0x4000822	        0x488945f8	                mov qword [rbp - 8], rax	       209	utf8.c	FUNCTION_6
0x4000826	        0x837de4ff	cmp dword [rbp - 0x1c], 0xffffffffffffffff	       211	utf8.c	FUNCTION_6	IF_1
0x400082a	            0x7550	                           jne 0x400087c	       211	utf8.c	FUNCTION_6	IF_1
0x400082c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       212	utf8.c	FUNCTION_6	CALL_1
0x4000830	          0x4889c7	                            mov rdi, rax	       212	utf8.c	FUNCTION_6	CALL_1
0x4000833	      0xe800000000	                          call 0x4000838	       212	utf8.c	FUNCTION_6	CALL_1
0x4000838	          0x8945e4	             mov dword [rbp - 0x1c], eax	       212	utf8.c	FUNCTION_6	CALL_1
0x400083b	            0xeb3f	                           jmp 0x400087c	       213	utf8.c	FUNCTION_6	WHILE_1
0x400083d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000841	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000844	            0x4898	                                    cdqe	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000846	          0x4801d0	                            add rax, rdx	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000849	        0x488945e8	             mov qword [rbp - 0x18], rax	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x400084d	        0x837de000	               cmp dword [rbp - 0x20], 0	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000851	            0x7415	                            je 0x4000868	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000853	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x4000857	          0x4889c7	                            mov rdi, rax	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x400085a	      0xe800000000	                          call 0x400085f	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x400085f	          0x8945f4	              mov dword [rbp - 0xc], eax	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x4000862	        0x837df400	                cmp dword [rbp - 0xc], 0	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000866	            0x75d5	                           jne 0x400083d	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000868	        0x488d45e8	                   lea rax, [rbp - 0x18]	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x400086c	      0xbe00000000	                              mov esi, 0	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x4000871	          0x4889c7	                            mov rdi, rax	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x4000874	      0xe800000000	                          call 0x4000879	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x4000879	           0x145f0	             add dword [rbp - 0x10], eax	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x400087c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000880	          0x4885c0	                           test rax, rax	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000883	            0x7416	                            je 0x400089b	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000885	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000888	          0x4863d0	                         movsxd rdx, eax	       213	utf8.c	FUNCTION_6	WHILE_1
0x400088b	        0x488b45f8	                mov rax, qword [rbp - 8]	       213	utf8.c	FUNCTION_6	WHILE_1
0x400088f	          0x4801c2	                            add rdx, rax	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000892	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000896	          0x4839c2	                            cmp rdx, rax	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000899	            0x77b2	                            ja 0x400084d	       213	utf8.c	FUNCTION_6	WHILE_1
0x400089b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       220	utf8.c	FUNCTION_6
0x400089f	          0x4885c0	                           test rax, rax	       220	utf8.c	FUNCTION_6
0x40008a2	            0x7405	                            je 0x40008a9	       220	utf8.c	FUNCTION_6
0x40008a4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       220	utf8.c	FUNCTION_6
0x40008a7	            0xeb03	                           jmp 0x40008ac	       220	utf8.c	FUNCTION_6
0x40008a9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       220	utf8.c	FUNCTION_6
0x40008ac	              0xc9	                                   leave	       221	utf8.c	FUNCTION_6
0x40008ad	              0xc3	                                     ret	       221	utf8.c	FUNCTION_6
is_hfs_dotgit	IF,5:DO,0:FOR,0:CALL,5:ELSE,0:WHILE,0:functions,0:SWITCH,0	58
0x4001792	              0x55	                                push rbp	       685	utf8.c	FUNCTION_25
0x4001793	          0x4889e5	                            mov rbp, rsp	       685	utf8.c	FUNCTION_25
0x4001796	        0x4883ec18	                           sub rsp, 0x18	       685	utf8.c	FUNCTION_25
0x400179a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       685	utf8.c	FUNCTION_25
0x400179e	        0x488d45e8	                   lea rax, [rbp - 0x18]	       688	utf8.c	FUNCTION_25	CALL_1
0x40017a2	          0x4889c7	                            mov rdi, rax	       688	utf8.c	FUNCTION_25	CALL_1
0x40017a5	      0xe87cffffff	                  call sym.next_hfs_char	       688	utf8.c	FUNCTION_25	CALL_1
0x40017aa	          0x8945fc	                mov dword [rbp - 4], eax	       688	utf8.c	FUNCTION_25	CALL_1
0x40017ad	        0x837dfc2e	               cmp dword [rbp - 4], 0x2e	       689	utf8.c	FUNCTION_25	IF_1
0x40017b1	            0x740a	                            je 0x40017bd	       689	utf8.c	FUNCTION_25	IF_1
0x40017b3	      0xb800000000	                              mov eax, 0	       690	utf8.c	FUNCTION_25	IF_1
0x40017b8	      0xe995000000	                           jmp 0x4001852	       690	utf8.c	FUNCTION_25	IF_1
0x40017bd	        0x488d45e8	                   lea rax, [rbp - 0x18]	       691	utf8.c	FUNCTION_25	CALL_2
0x40017c1	          0x4889c7	                            mov rdi, rax	       691	utf8.c	FUNCTION_25	CALL_2
0x40017c4	      0xe85dffffff	                  call sym.next_hfs_char	       691	utf8.c	FUNCTION_25	CALL_2
0x40017c9	          0x8945fc	                mov dword [rbp - 4], eax	       691	utf8.c	FUNCTION_25	CALL_2
0x40017cc	        0x837dfc67	               cmp dword [rbp - 4], 0x67	       698	utf8.c	FUNCTION_25	IF_2
0x40017d0	            0x740d	                            je 0x40017df	       698	utf8.c	FUNCTION_25	IF_2
0x40017d2	        0x837dfc47	               cmp dword [rbp - 4], 0x47	       698	utf8.c	FUNCTION_25	IF_2
0x40017d6	            0x7407	                            je 0x40017df	       698	utf8.c	FUNCTION_25	IF_2
0x40017d8	      0xb800000000	                              mov eax, 0	       699	utf8.c	FUNCTION_25	IF_2
0x40017dd	            0xeb73	                           jmp 0x4001852	       699	utf8.c	FUNCTION_25	IF_2
0x40017df	        0x488d45e8	                   lea rax, [rbp - 0x18]	       700	utf8.c	FUNCTION_25	CALL_3
0x40017e3	          0x4889c7	                            mov rdi, rax	       700	utf8.c	FUNCTION_25	CALL_3
0x40017e6	      0xe83bffffff	                  call sym.next_hfs_char	       700	utf8.c	FUNCTION_25	CALL_3
0x40017eb	          0x8945fc	                mov dword [rbp - 4], eax	       700	utf8.c	FUNCTION_25	CALL_3
0x40017ee	        0x837dfc69	               cmp dword [rbp - 4], 0x69	       701	utf8.c	FUNCTION_25	IF_3
0x40017f2	            0x740d	                            je 0x4001801	       701	utf8.c	FUNCTION_25	IF_3
0x40017f4	        0x837dfc49	               cmp dword [rbp - 4], 0x49	       701	utf8.c	FUNCTION_25	IF_3
0x40017f8	            0x7407	                            je 0x4001801	       701	utf8.c	FUNCTION_25	IF_3
0x40017fa	      0xb800000000	                              mov eax, 0	       702	utf8.c	FUNCTION_25	IF_3
0x40017ff	            0xeb51	                           jmp 0x4001852	       702	utf8.c	FUNCTION_25	IF_3
0x4001801	        0x488d45e8	                   lea rax, [rbp - 0x18]	       703	utf8.c	FUNCTION_25	CALL_4
0x4001805	          0x4889c7	                            mov rdi, rax	       703	utf8.c	FUNCTION_25	CALL_4
0x4001808	      0xe819ffffff	                  call sym.next_hfs_char	       703	utf8.c	FUNCTION_25	CALL_4
0x400180d	          0x8945fc	                mov dword [rbp - 4], eax	       703	utf8.c	FUNCTION_25	CALL_4
0x4001810	        0x837dfc74	               cmp dword [rbp - 4], 0x74	       704	utf8.c	FUNCTION_25	IF_4
0x4001814	            0x740d	                            je 0x4001823	       704	utf8.c	FUNCTION_25	IF_4
0x4001816	        0x837dfc54	               cmp dword [rbp - 4], 0x54	       704	utf8.c	FUNCTION_25	IF_4
0x400181a	            0x7407	                            je 0x4001823	       704	utf8.c	FUNCTION_25	IF_4
0x400181c	      0xb800000000	                              mov eax, 0	       705	utf8.c	FUNCTION_25	IF_4
0x4001821	            0xeb2f	                           jmp 0x4001852	       705	utf8.c	FUNCTION_25	IF_4
0x4001823	        0x488d45e8	                   lea rax, [rbp - 0x18]	       706	utf8.c	FUNCTION_25	CALL_5
0x4001827	          0x4889c7	                            mov rdi, rax	       706	utf8.c	FUNCTION_25	CALL_5
0x400182a	      0xe8f7feffff	                  call sym.next_hfs_char	       706	utf8.c	FUNCTION_25	CALL_5
0x400182f	          0x8945fc	                mov dword [rbp - 4], eax	       706	utf8.c	FUNCTION_25	CALL_5
0x4001832	        0x837dfc00	                  cmp dword [rbp - 4], 0	       707	utf8.c	FUNCTION_25	IF_5
0x4001836	            0x7415	                            je 0x400184d	       707	utf8.c	FUNCTION_25	IF_5
0x4001838	          0x8b45fc	                mov eax, dword [rbp - 4]	       707	utf8.c	FUNCTION_25	IF_5
0x400183b	            0x89c7	                            mov edi, eax	       707	utf8.c	FUNCTION_25	IF_5
0x400183d	      0xe8fee7ffff	                 call sym.git_is_dir_sep	       707	utf8.c	FUNCTION_25	IF_5
0x4001842	            0x85c0	                           test eax, eax	       707	utf8.c	FUNCTION_25	IF_5
0x4001844	            0x7507	                           jne 0x400184d	       707	utf8.c	FUNCTION_25	IF_5
0x4001846	      0xb800000000	                              mov eax, 0	       708	utf8.c	FUNCTION_25	IF_5
0x400184b	            0xeb05	                           jmp 0x4001852	       708	utf8.c	FUNCTION_25	IF_5
0x400184d	      0xb801000000	                              mov eax, 1	       710	utf8.c	FUNCTION_25
0x4001852	              0xc9	                                   leave	       711	utf8.c	FUNCTION_25
0x4001853	              0xc3	                                     ret	       711	utf8.c	FUNCTION_25
display_mode_esc_sequence_len	IF,3:DO,0:FOR,0:CALL,0:ELSE,0:WHILE,1:functions,0:SWITCH,0	49
0x400025a	              0x55	                                push rbp	        13	utf8.c	IF_1	FUNCTION_1
0x400025b	          0x4889e5	                            mov rbp, rsp	        13	utf8.c	IF_1	FUNCTION_1
0x400025e	        0x48897de8	             mov qword [rbp - 0x18], rdi	        13	utf8.c	IF_1	FUNCTION_1
0x4000262	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        14	utf8.c	IF_1	FUNCTION_1
0x4000266	        0x488945f8	                mov qword [rbp - 8], rax	        14	utf8.c	IF_1	FUNCTION_1
0x400026a	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	utf8.c	IF_1	FUNCTION_1
0x400026e	        0x488d5001	                      lea rdx, [rax + 1]	        15	utf8.c	IF_1	FUNCTION_1
0x4000272	        0x488955f8	                mov qword [rbp - 8], rdx	        15	utf8.c	IF_1	FUNCTION_1
0x4000276	           0xfb600	                   movzx eax, byte [rax]	        15	utf8.c	IF_1	FUNCTION_1
0x4000279	            0x3c1b	                            cmp al, 0x1b	        15	utf8.c	IF_1	FUNCTION_1
0x400027b	            0x7407	                            je 0x4000284	        15	utf8.c	IF_1	FUNCTION_1
0x400027d	      0xb800000000	                              mov eax, 0	        16	utf8.c	FUNCTION_1
0x4000282	            0xeb6f	                           jmp 0x40002f3	        16	utf8.c	FUNCTION_1
0x4000284	        0x488b45f8	                mov rax, qword [rbp - 8]	        17	utf8.c	FUNCTION_1	IF_2
0x4000288	        0x488d5001	                      lea rdx, [rax + 1]	        17	utf8.c	FUNCTION_1	IF_2
0x400028c	        0x488955f8	                mov qword [rbp - 8], rdx	        17	utf8.c	FUNCTION_1	IF_2
0x4000290	           0xfb600	                   movzx eax, byte [rax]	        17	utf8.c	FUNCTION_1	IF_2
0x4000293	            0x3c5b	                            cmp al, 0x5b	        17	utf8.c	FUNCTION_1	IF_2
0x4000295	            0x740c	                            je 0x40002a3	        17	utf8.c	FUNCTION_1	IF_2
0x4000297	      0xb800000000	                              mov eax, 0	        18	utf8.c	FUNCTION_1	IF_2
0x400029c	            0xeb55	                           jmp 0x40002f3	        18	utf8.c	FUNCTION_1	IF_2
0x400029e	      0x488345f801	                  add qword [rbp - 8], 1	        20	utf8.c	FUNCTION_1	WHILE_1
0x40002a3	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002a7	           0xfb600	                   movzx eax, byte [rax]	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002aa	           0xfb6c0	                           movzx eax, al	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002ad	            0x4898	                                    cdqe	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002af	     0xfb680000000	                   movzx eax, byte [rax]	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002b6	           0xfb6c0	                           movzx eax, al	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002b9	          0x83e002	                              and eax, 2	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002bc	            0x85c0	                           test eax, eax	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002be	            0x75de	                           jne 0x400029e	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002c0	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002c4	           0xfb600	                   movzx eax, byte [rax]	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002c7	            0x3c3b	                            cmp al, 0x3b	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002c9	            0x74d3	                            je 0x400029e	        19	utf8.c	FUNCTION_1	WHILE_1
0x40002cb	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	utf8.c	FUNCTION_1	IF_3
0x40002cf	        0x488d5001	                      lea rdx, [rax + 1]	        21	utf8.c	FUNCTION_1	IF_3
0x40002d3	        0x488955f8	                mov qword [rbp - 8], rdx	        21	utf8.c	FUNCTION_1	IF_3
0x40002d7	           0xfb600	                   movzx eax, byte [rax]	        21	utf8.c	FUNCTION_1	IF_3
0x40002da	            0x3c6d	                            cmp al, 0x6d	        21	utf8.c	FUNCTION_1	IF_3
0x40002dc	            0x7407	                            je 0x40002e5	        21	utf8.c	FUNCTION_1	IF_3
0x40002de	      0xb800000000	                              mov eax, 0	        22	utf8.c	FUNCTION_1	IF_3
0x40002e3	            0xeb0e	                           jmp 0x40002f3	        22	utf8.c	FUNCTION_1	IF_3
0x40002e5	        0x488b55f8	                mov rdx, qword [rbp - 8]	        23	utf8.c	FUNCTION_1
0x40002e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        23	utf8.c	FUNCTION_1
0x40002ed	          0x4829c2	                            sub rdx, rax	        23	utf8.c	FUNCTION_1
0x40002f0	          0x4889d0	                            mov rax, rdx	        23	utf8.c	FUNCTION_1
0x40002f3	              0x5d	                                 pop rbp	        24	utf8.c	FUNCTION_1
0x40002f4	              0xc3	                                     ret	        24	utf8.c	FUNCTION_1
has_prohibited_utf_bom	IF,0:DO,0:FOR,0:CALL,8:ELSE,0:WHILE,0:functions,0:SWITCH,0	67
0x4001475	              0x55	                                push rbp	       575	utf8.c	FUNCTION_21
0x4001476	          0x4889e5	                            mov rbp, rsp	       575	utf8.c	FUNCTION_21
0x4001479	        0x4883ec20	                           sub rsp, 0x20	       575	utf8.c	FUNCTION_21
0x400147d	        0x48897df8	                mov qword [rbp - 8], rdi	       575	utf8.c	FUNCTION_21
0x4001481	        0x488975f0	             mov qword [rbp - 0x10], rsi	       575	utf8.c	FUNCTION_21
0x4001485	        0x488955e8	             mov qword [rbp - 0x18], rdx	       575	utf8.c	FUNCTION_21
0x4001489	        0x488b45f8	                mov rax, qword [rbp - 8]	       577	utf8.c	FUNCTION_21	CALL_1
0x400148d	          0x4889c6	                            mov rsi, rax	       577	utf8.c	FUNCTION_21	CALL_1
0x4001490	      0xbf00000000	                              mov edi, 0	       577	utf8.c	FUNCTION_21	CALL_1
0x4001495	      0xe890faffff	              call sym.same_utf_encoding	       577	utf8.c	FUNCTION_21	CALL_1
0x400149a	            0x85c0	                           test eax, eax	       581	utf8.c	FUNCTION_21
0x400149c	            0x7515	                           jne 0x40014b3	       581	utf8.c	FUNCTION_21
0x400149e	        0x488b45f8	                mov rax, qword [rbp - 8]	       578	utf8.c	FUNCTION_21	CALL_2
0x40014a2	          0x4889c6	                            mov rsi, rax	       578	utf8.c	FUNCTION_21	CALL_2
0x40014a5	      0xbf00000000	                              mov edi, 0	       578	utf8.c	FUNCTION_21	CALL_2
0x40014aa	      0xe87bfaffff	              call sym.same_utf_encoding	       578	utf8.c	FUNCTION_21	CALL_2
0x40014af	            0x85c0	                           test eax, eax	       577	utf8.c	FUNCTION_21	CALL_1
0x40014b1	            0x7440	                            je 0x40014f3	       577	utf8.c	FUNCTION_21	CALL_1
0x40014b3	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       579	utf8.c	FUNCTION_21	CALL_3
0x40014b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       579	utf8.c	FUNCTION_21	CALL_3
0x40014bb	      0xb902000000	                              mov ecx, 2	       579	utf8.c	FUNCTION_21	CALL_3
0x40014c0	      0xba00000000	                              mov edx, 0	       579	utf8.c	FUNCTION_21	CALL_3
0x40014c5	          0x4889c7	                            mov rdi, rax	       579	utf8.c	FUNCTION_21	CALL_3
0x40014c8	      0xe84fffffff	                 call sym.has_bom_prefix	       579	utf8.c	FUNCTION_21	CALL_3
0x40014cd	            0x85c0	                           test eax, eax	       578	utf8.c	FUNCTION_21	CALL_2
0x40014cf	     0xf8584000000	                           jne 0x4001559	       578	utf8.c	FUNCTION_21	CALL_2
0x40014d5	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       580	utf8.c	FUNCTION_21	CALL_4
0x40014d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       580	utf8.c	FUNCTION_21	CALL_4
0x40014dd	      0xb902000000	                              mov ecx, 2	       580	utf8.c	FUNCTION_21	CALL_4
0x40014e2	      0xba00000000	                              mov edx, 0	       580	utf8.c	FUNCTION_21	CALL_4
0x40014e7	          0x4889c7	                            mov rdi, rax	       580	utf8.c	FUNCTION_21	CALL_4
0x40014ea	      0xe82dffffff	                 call sym.has_bom_prefix	       580	utf8.c	FUNCTION_21	CALL_4
0x40014ef	            0x85c0	                           test eax, eax	       579	utf8.c	FUNCTION_21	CALL_3
0x40014f1	            0x7566	                           jne 0x4001559	       579	utf8.c	FUNCTION_21	CALL_3
0x40014f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       582	utf8.c	FUNCTION_21	CALL_5
0x40014f7	          0x4889c6	                            mov rsi, rax	       582	utf8.c	FUNCTION_21	CALL_5
0x40014fa	      0xbf00000000	                              mov edi, 0	       582	utf8.c	FUNCTION_21	CALL_5
0x40014ff	      0xe826faffff	              call sym.same_utf_encoding	       582	utf8.c	FUNCTION_21	CALL_5
0x4001504	            0x85c0	                           test eax, eax	       581	utf8.c	FUNCTION_21
0x4001506	            0x7515	                           jne 0x400151d	       581	utf8.c	FUNCTION_21
0x4001508	        0x488b45f8	                mov rax, qword [rbp - 8]	       583	utf8.c	FUNCTION_21	CALL_6
0x400150c	          0x4889c6	                            mov rsi, rax	       583	utf8.c	FUNCTION_21	CALL_6
0x400150f	      0xbf00000000	                              mov edi, 0	       583	utf8.c	FUNCTION_21	CALL_6
0x4001514	      0xe811faffff	              call sym.same_utf_encoding	       583	utf8.c	FUNCTION_21	CALL_6
0x4001519	            0x85c0	                           test eax, eax	       582	utf8.c	FUNCTION_21	CALL_5
0x400151b	            0x7443	                            je 0x4001560	       582	utf8.c	FUNCTION_21	CALL_5
0x400151d	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       584	utf8.c	FUNCTION_21	CALL_7
0x4001521	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       584	utf8.c	FUNCTION_21	CALL_7
0x4001525	      0xb904000000	                              mov ecx, 4	       584	utf8.c	FUNCTION_21	CALL_7
0x400152a	      0xba00000000	                              mov edx, 0	       584	utf8.c	FUNCTION_21	CALL_7
0x400152f	          0x4889c7	                            mov rdi, rax	       584	utf8.c	FUNCTION_21	CALL_7
0x4001532	      0xe8e5feffff	                 call sym.has_bom_prefix	       584	utf8.c	FUNCTION_21	CALL_7
0x4001537	            0x85c0	                           test eax, eax	       583	utf8.c	FUNCTION_21	CALL_6
0x4001539	            0x751e	                           jne 0x4001559	       583	utf8.c	FUNCTION_21	CALL_6
0x400153b	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       585	utf8.c	FUNCTION_21	CALL_8
0x400153f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       585	utf8.c	FUNCTION_21	CALL_8
0x4001543	      0xb904000000	                              mov ecx, 4	       585	utf8.c	FUNCTION_21	CALL_8
0x4001548	      0xba00000000	                              mov edx, 0	       585	utf8.c	FUNCTION_21	CALL_8
0x400154d	          0x4889c7	                            mov rdi, rax	       585	utf8.c	FUNCTION_21	CALL_8
0x4001550	      0xe8c7feffff	                 call sym.has_bom_prefix	       585	utf8.c	FUNCTION_21	CALL_8
0x4001555	            0x85c0	                           test eax, eax	       584	utf8.c	FUNCTION_21	CALL_7
0x4001557	            0x7407	                            je 0x4001560	       584	utf8.c	FUNCTION_21	CALL_7
0x4001559	      0xb801000000	                              mov eax, 1	       581	utf8.c	FUNCTION_21
0x400155e	            0xeb05	                           jmp 0x4001565	       581	utf8.c	FUNCTION_21
0x4001560	      0xb800000000	                              mov eax, 0	       581	utf8.c	FUNCTION_21
0x4001565	              0xc9	                                   leave	       587	utf8.c	FUNCTION_21
0x4001566	              0xc3	                                     ret	       587	utf8.c	FUNCTION_21
reencode_string_len	IF,3:DO,0:FOR,0:CALL,6:ELSE,0:WHILE,0:functions,0:SWITCH,0	52
0x400135d	              0x55	                                push rbp	       540	utf8.c	FUNCTION_19
0x400135e	          0x4889e5	                            mov rbp, rsp	       540	utf8.c	FUNCTION_19
0x4001361	        0x4883ec40	                           sub rsp, 0x40	       540	utf8.c	FUNCTION_19
0x4001365	        0x48897de8	             mov qword [rbp - 0x18], rdi	       540	utf8.c	FUNCTION_19
0x4001369	          0x8975e4	             mov dword [rbp - 0x1c], esi	       540	utf8.c	FUNCTION_19
0x400136c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       540	utf8.c	FUNCTION_19
0x4001370	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       540	utf8.c	FUNCTION_19
0x4001374	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       540	utf8.c	FUNCTION_19
0x4001378	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       544	utf8.c	FUNCTION_19	IF_1
0x400137d	            0x750a	                           jne 0x4001389	       544	utf8.c	FUNCTION_19	IF_1
0x400137f	      0xb800000000	                              mov eax, 0	       545	utf8.c	FUNCTION_19	IF_1
0x4001384	      0xe991000000	                           jmp 0x400141a	       545	utf8.c	FUNCTION_19	IF_1
0x4001389	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       547	utf8.c	FUNCTION_19	CALL_1
0x400138d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       547	utf8.c	FUNCTION_19	CALL_1
0x4001391	          0x4889d6	                            mov rsi, rdx	       547	utf8.c	FUNCTION_19	CALL_1
0x4001394	          0x4889c7	                            mov rdi, rax	       547	utf8.c	FUNCTION_19	CALL_1
0x4001397	      0xe800000000	                          call 0x400139c	       547	utf8.c	FUNCTION_19	CALL_1
0x400139c	        0x488945f0	             mov qword [rbp - 0x10], rax	       547	utf8.c	FUNCTION_19	CALL_1
0x40013a0	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	       548	utf8.c	FUNCTION_19	IF_2
0x40013a5	            0x7545	                           jne 0x40013ec	       548	utf8.c	FUNCTION_19	IF_2
0x40013a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x40013ab	          0x4889c7	                            mov rdi, rax	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x40013ae	      0xe865ffffff	              call sym.fallback_encoding	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x40013b3	        0x488945d0	             mov qword [rbp - 0x30], rax	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x40013b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x40013bb	          0x4889c7	                            mov rdi, rax	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x40013be	      0xe855ffffff	              call sym.fallback_encoding	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x40013c3	        0x488945d8	             mov qword [rbp - 0x28], rax	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x40013c7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x40013cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x40013cf	          0x4889d6	                            mov rsi, rdx	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x40013d2	          0x4889c7	                            mov rdi, rax	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x40013d5	      0xe800000000	                          call 0x40013da	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x40013da	        0x488945f0	             mov qword [rbp - 0x10], rax	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x40013de	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	       553	utf8.c	FUNCTION_19	IF_2	IF_3
0x40013e3	            0x7507	                           jne 0x40013ec	       553	utf8.c	FUNCTION_19	IF_2	IF_3
0x40013e5	      0xb800000000	                              mov eax, 0	       554	utf8.c	FUNCTION_19	IF_2	IF_3
0x40013ea	            0xeb2e	                           jmp 0x400141a	       554	utf8.c	FUNCTION_19	IF_2	IF_3
0x40013ec	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       557	utf8.c	FUNCTION_19	CALL_5
0x40013ef	          0x4863f0	                         movsxd rsi, eax	       557	utf8.c	FUNCTION_19	CALL_5
0x40013f2	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       557	utf8.c	FUNCTION_19	CALL_5
0x40013f6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       557	utf8.c	FUNCTION_19	CALL_5
0x40013fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       557	utf8.c	FUNCTION_19	CALL_5
0x40013fe	          0x4889c7	                            mov rdi, rax	       557	utf8.c	FUNCTION_19	CALL_5
0x4001401	      0xe800000000	                          call 0x4001406	       557	utf8.c	FUNCTION_19	CALL_5
0x4001406	        0x488945f8	                mov qword [rbp - 8], rax	       557	utf8.c	FUNCTION_19	CALL_5
0x400140a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       558	utf8.c	FUNCTION_19	CALL_6
0x400140e	          0x4889c7	                            mov rdi, rax	       558	utf8.c	FUNCTION_19	CALL_6
0x4001411	      0xe800000000	                          call 0x4001416	       558	utf8.c	FUNCTION_19	CALL_6
0x4001416	        0x488b45f8	                mov rax, qword [rbp - 8]	       559	utf8.c	FUNCTION_19
0x400141a	              0xc9	                                   leave	       560	utf8.c	FUNCTION_19
0x400141b	              0xc3	                                     ret	       560	utf8.c	FUNCTION_19
utf8_width	IF,1:DO,0:FOR,0:CALL,2:ELSE,0:WHILE,0:functions,0:SWITCH,0	22
0x40007c0	              0x55	                                push rbp	       194	utf8.c	FUNCTION_5
0x40007c1	          0x4889e5	                            mov rbp, rsp	       194	utf8.c	FUNCTION_5
0x40007c4	        0x4883ec20	                           sub rsp, 0x20	       194	utf8.c	FUNCTION_5
0x40007c8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       194	utf8.c	FUNCTION_5
0x40007cc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       194	utf8.c	FUNCTION_5
0x40007d0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       195	utf8.c	FUNCTION_5	CALL_1
0x40007d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       195	utf8.c	FUNCTION_5	CALL_1
0x40007d8	          0x4889d6	                            mov rsi, rdx	       195	utf8.c	FUNCTION_5	CALL_1
0x40007db	          0x4889c7	                            mov rdi, rax	       195	utf8.c	FUNCTION_5	CALL_1
0x40007de	      0xe84afcffff	             call sym.pick_one_utf8_char	       195	utf8.c	FUNCTION_5	CALL_1
0x40007e3	          0x8945fc	                mov dword [rbp - 4], eax	       195	utf8.c	FUNCTION_5	CALL_1
0x40007e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       196	utf8.c	FUNCTION_5	IF_1
0x40007ea	          0x488b00	                    mov rax, qword [rax]	       196	utf8.c	FUNCTION_5	IF_1
0x40007ed	          0x4885c0	                           test rax, rax	       196	utf8.c	FUNCTION_5	IF_1
0x40007f0	            0x7507	                           jne 0x40007f9	       196	utf8.c	FUNCTION_5	IF_1
0x40007f2	      0xb800000000	                              mov eax, 0	       197	utf8.c	FUNCTION_5	IF_1
0x40007f7	            0xeb0a	                           jmp 0x4000803	       197	utf8.c	FUNCTION_5	IF_1
0x40007f9	          0x8b45fc	                mov eax, dword [rbp - 4]	       198	utf8.c	FUNCTION_5	CALL_2
0x40007fc	            0x89c7	                            mov edi, eax	       198	utf8.c	FUNCTION_5	CALL_2
0x40007fe	      0xe8b1fbffff	                    call sym.git_wcwidth	       198	utf8.c	FUNCTION_5	CALL_2
0x4000803	              0xc9	                                   leave	       199	utf8.c	FUNCTION_5
0x4000804	              0xc3	                                     ret	       199	utf8.c	FUNCTION_5
mbs_chrlen	IF,3:DO,0:FOR,0:CALL,2:ELSE,1:WHILE,0:functions,0:SWITCH,0	71
0x400162b	              0x55	                                push rbp	       612	utf8.c	FUNCTION_23
0x400162c	          0x4889e5	                            mov rbp, rsp	       612	utf8.c	FUNCTION_23
0x400162f	        0x4883ec40	                           sub rsp, 0x40	       612	utf8.c	FUNCTION_23
0x4001633	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       612	utf8.c	FUNCTION_23
0x4001637	        0x488975d0	             mov qword [rbp - 0x30], rsi	       612	utf8.c	FUNCTION_23
0x400163b	        0x488955c8	             mov qword [rbp - 0x38], rdx	       612	utf8.c	FUNCTION_23
0x400163f	    0x64488b042528	                mov rax, qword fs:[0x28]	       612	utf8.c	FUNCTION_23
0x4001648	        0x488945f8	                mov qword [rbp - 8], rax	       612	utf8.c	FUNCTION_23
0x400164c	            0x31c0	                            xor eax, eax	       612	utf8.c	FUNCTION_23
0x400164e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       614	utf8.c	FUNCTION_23
0x4001652	          0x488b00	                    mov rax, qword [rax]	       614	utf8.c	FUNCTION_23
0x4001655	        0x488945e8	             mov qword [rbp - 0x18], rax	       614	utf8.c	FUNCTION_23
0x4001659	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       615	utf8.c	FUNCTION_23
0x400165e	            0x7409	                            je 0x4001669	       615	utf8.c	FUNCTION_23
0x4001660	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       615	utf8.c	FUNCTION_23
0x4001664	          0x488b00	                    mov rax, qword [rax]	       615	utf8.c	FUNCTION_23
0x4001667	            0xeb07	                           jmp 0x4001670	       615	utf8.c	FUNCTION_23
0x4001669	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       615	utf8.c	FUNCTION_23
0x4001670	        0x488945f0	             mov qword [rbp - 0x10], rax	       615	utf8.c	FUNCTION_23
0x4001674	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       617	utf8.c	FUNCTION_23	IF_1
0x4001678	          0x4885c0	                           test rax, rax	       617	utf8.c	FUNCTION_23	IF_1
0x400167b	            0x750a	                           jne 0x4001687	       617	utf8.c	FUNCTION_23	IF_1
0x400167d	      0xb800000000	                              mov eax, 0	       618	utf8.c	FUNCTION_23	IF_1
0x4001682	      0xe989000000	                           jmp 0x4001710	       618	utf8.c	FUNCTION_23	IF_1
0x4001687	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x400168b	          0x4889c7	                            mov rdi, rax	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x400168e	      0xe800000000	                          call 0x4001693	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x4001693	            0x85c0	                           test eax, eax	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x4001695	            0x743c	                            je 0x40016d3	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x4001697	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x400169b	        0x488d45e8	                   lea rax, [rbp - 0x18]	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x400169f	          0x4889d6	                            mov rsi, rdx	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x40016a2	          0x4889c7	                            mov rdi, rax	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x40016a5	      0xe883edffff	             call sym.pick_one_utf8_char	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x40016aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       623	utf8.c	FUNCTION_23	IF_2
0x40016ae	          0x4885c0	                           test rax, rax	       623	utf8.c	FUNCTION_23	IF_2
0x40016b1	            0x7416	                            je 0x40016c9	       623	utf8.c	FUNCTION_23	IF_2
0x40016b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       623	utf8.c	FUNCTION_23	IF_2
0x40016b7	          0x4889c2	                            mov rdx, rax	       623	utf8.c	FUNCTION_23	IF_2
0x40016ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       623	utf8.c	FUNCTION_23	IF_2
0x40016be	          0x488b00	                    mov rax, qword [rax]	       623	utf8.c	FUNCTION_23	IF_2
0x40016c1	          0x4829c2	                            sub rdx, rax	       623	utf8.c	FUNCTION_23	IF_2
0x40016c4	          0x4889d0	                            mov rax, rdx	       623	utf8.c	FUNCTION_23	IF_2
0x40016c7	            0xeb05	                           jmp 0x40016ce	       623	utf8.c	FUNCTION_23	IF_2
0x40016c9	      0xb801000000	                              mov eax, 1	       623	utf8.c	FUNCTION_23	IF_2
0x40016ce	          0x8945e4	             mov dword [rbp - 0x1c], eax	       623	utf8.c	FUNCTION_23	IF_2
0x40016d1	            0xeb07	                           jmp 0x40016da	       623	utf8.c	FUNCTION_23	IF_2
0x40016d3	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	       631	utf8.c	FUNCTION_23	ELSE_1
0x40016da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       634	utf8.c	FUNCTION_23
0x40016de	          0x488b10	                    mov rdx, qword [rax]	       634	utf8.c	FUNCTION_23
0x40016e1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       634	utf8.c	FUNCTION_23
0x40016e4	            0x4898	                                    cdqe	       634	utf8.c	FUNCTION_23
0x40016e6	          0x4801c2	                            add rdx, rax	       634	utf8.c	FUNCTION_23
0x40016e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       634	utf8.c	FUNCTION_23
0x40016ed	          0x488910	                    mov qword [rax], rdx	       634	utf8.c	FUNCTION_23
0x40016f0	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       635	utf8.c	FUNCTION_23	IF_3
0x40016f5	            0x7416	                            je 0x400170d	       635	utf8.c	FUNCTION_23	IF_3
0x40016f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       636	utf8.c	FUNCTION_23	IF_3
0x40016fb	          0x488b10	                    mov rdx, qword [rax]	       636	utf8.c	FUNCTION_23	IF_3
0x40016fe	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       636	utf8.c	FUNCTION_23	IF_3
0x4001701	            0x4898	                                    cdqe	       636	utf8.c	FUNCTION_23	IF_3
0x4001703	          0x4829c2	                            sub rdx, rax	       636	utf8.c	FUNCTION_23	IF_3
0x4001706	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       636	utf8.c	FUNCTION_23	IF_3
0x400170a	          0x488910	                    mov qword [rax], rdx	       636	utf8.c	FUNCTION_23	IF_3
0x400170d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       638	utf8.c	FUNCTION_23
0x4001710	        0x488b4df8	                mov rcx, qword [rbp - 8]	       639	utf8.c	FUNCTION_23
0x4001714	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       639	utf8.c	FUNCTION_23
0x400171d	            0x7405	                            je 0x4001724	       639	utf8.c	FUNCTION_23
0x400171f	      0xe800000000	                          call 0x4001724	       639	utf8.c	FUNCTION_23
0x4001724	              0xc9	                                   leave	       639	utf8.c	FUNCTION_23
0x4001725	              0xc3	                                     ret	       639	utf8.c	FUNCTION_23
has_bom_prefix	IF,0:DO,0:FOR,0:CALL,1:ELSE,0:WHILE,0:functions,0:SWITCH,0	27
0x400141c	              0x55	                                push rbp	       565	utf8.c	FUNCTION_20
0x400141d	          0x4889e5	                            mov rbp, rsp	       565	utf8.c	FUNCTION_20
0x4001420	        0x4883ec20	                           sub rsp, 0x20	       565	utf8.c	FUNCTION_20
0x4001424	        0x48897df8	                mov qword [rbp - 8], rdi	       565	utf8.c	FUNCTION_20
0x4001428	        0x488975f0	             mov qword [rbp - 0x10], rsi	       565	utf8.c	FUNCTION_20
0x400142c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       565	utf8.c	FUNCTION_20
0x4001430	        0x48894de0	             mov qword [rbp - 0x20], rcx	       565	utf8.c	FUNCTION_20
0x4001434	      0x48837df800	                  cmp qword [rbp - 8], 0	       566	utf8.c	FUNCTION_20	CALL_1
0x4001439	            0x7433	                            je 0x400146e	       566	utf8.c	FUNCTION_20	CALL_1
0x400143b	      0x48837de800	               cmp qword [rbp - 0x18], 0	       566	utf8.c	FUNCTION_20	CALL_1
0x4001440	            0x742c	                            je 0x400146e	       566	utf8.c	FUNCTION_20	CALL_1
0x4001442	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       566	utf8.c	FUNCTION_20	CALL_1
0x4001446	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       566	utf8.c	FUNCTION_20	CALL_1
0x400144a	            0x7222	                            jb 0x400146e	       566	utf8.c	FUNCTION_20	CALL_1
0x400144c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       566	utf8.c	FUNCTION_20	CALL_1
0x4001450	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       566	utf8.c	FUNCTION_20	CALL_1
0x4001454	        0x488b45f8	                mov rax, qword [rbp - 8]	       566	utf8.c	FUNCTION_20	CALL_1
0x4001458	          0x4889ce	                            mov rsi, rcx	       566	utf8.c	FUNCTION_20	CALL_1
0x400145b	          0x4889c7	                            mov rdi, rax	       566	utf8.c	FUNCTION_20	CALL_1
0x400145e	      0xe800000000	                          call 0x4001463	       566	utf8.c	FUNCTION_20	CALL_1
0x4001463	            0x85c0	                           test eax, eax	       566	utf8.c	FUNCTION_20	CALL_1
0x4001465	            0x7507	                           jne 0x400146e	       566	utf8.c	FUNCTION_20	CALL_1
0x4001467	      0xb801000000	                              mov eax, 1	       566	utf8.c	FUNCTION_20	CALL_1
0x400146c	            0xeb05	                           jmp 0x4001473	       566	utf8.c	FUNCTION_20	CALL_1
0x400146e	      0xb800000000	                              mov eax, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x4001473	              0xc9	                                   leave	       567	utf8.c	FUNCTION_20
0x4001474	              0xc3	                                     ret	       567	utf8.c	FUNCTION_20
strbuf_utf8_align	IF,4:DO,0:FOR,0:CALL,6:ELSE,2:WHILE,0:functions,0:SWITCH,0	83
0x40018a8	              0x55	                                push rbp	       726	utf8.c	FUNCTION_27
0x40018a9	          0x4889e5	                            mov rbp, rsp	       726	utf8.c	FUNCTION_27
0x40018ac	        0x4883ec30	                           sub rsp, 0x30	       726	utf8.c	FUNCTION_27
0x40018b0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       726	utf8.c	FUNCTION_27
0x40018b4	          0x8975e4	             mov dword [rbp - 0x1c], esi	       726	utf8.c	FUNCTION_27
0x40018b7	          0x8955e0	             mov dword [rbp - 0x20], edx	       726	utf8.c	FUNCTION_27
0x40018ba	        0x48894dd8	             mov qword [rbp - 0x28], rcx	       726	utf8.c	FUNCTION_27
0x40018be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       727	utf8.c	FUNCTION_27	CALL_1
0x40018c2	          0x4889c7	                            mov rdi, rax	       727	utf8.c	FUNCTION_27	CALL_1
0x40018c5	      0xe800000000	                          call 0x40018ca	       727	utf8.c	FUNCTION_27	CALL_1
0x40018ca	          0x8945f0	             mov dword [rbp - 0x10], eax	       727	utf8.c	FUNCTION_27	CALL_1
0x40018cd	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       728	utf8.c	FUNCTION_27	CALL_2
0x40018d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       728	utf8.c	FUNCTION_27	CALL_2
0x40018d4	      0xba00000000	                              mov edx, 0	       728	utf8.c	FUNCTION_27	CALL_2
0x40018d9	            0x89ce	                            mov esi, ecx	       728	utf8.c	FUNCTION_27	CALL_2
0x40018db	          0x4889c7	                            mov rdi, rax	       728	utf8.c	FUNCTION_27	CALL_2
0x40018de	      0xe800000000	                          call 0x40018e3	       728	utf8.c	FUNCTION_27	CALL_2
0x40018e3	          0x8945f4	              mov dword [rbp - 0xc], eax	       728	utf8.c	FUNCTION_27	CALL_2
0x40018e6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       729	utf8.c	FUNCTION_27
0x40018e9	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       729	utf8.c	FUNCTION_27
0x40018ec	          0x8945f8	                mov dword [rbp - 8], eax	       729	utf8.c	FUNCTION_27
0x40018ef	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       731	utf8.c	FUNCTION_27	IF_1
0x40018f2	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       731	utf8.c	FUNCTION_27	IF_1
0x40018f5	            0x7218	                            jb 0x400190f	       731	utf8.c	FUNCTION_27	IF_1
0x40018f7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       732	utf8.c	FUNCTION_27	IF_1	CALL_3
0x40018fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       732	utf8.c	FUNCTION_27	IF_1	CALL_3
0x40018ff	          0x4889d6	                            mov rsi, rdx	       732	utf8.c	FUNCTION_27	IF_1	CALL_3
0x4001902	          0x4889c7	                            mov rdi, rax	       732	utf8.c	FUNCTION_27	IF_1	CALL_3
0x4001905	      0xe81be9ffff	                  call sym.strbuf_addstr	       732	utf8.c	FUNCTION_27	IF_1	CALL_3
0x400190a	      0xe9ab000000	                           jmp 0x40019ba	       733	utf8.c	FUNCTION_27	IF_1
0x400190f	        0x837de400	               cmp dword [rbp - 0x1c], 0	       736	utf8.c	FUNCTION_27	IF_2
0x4001913	            0x752a	                           jne 0x400193f	       736	utf8.c	FUNCTION_27	IF_2
0x4001915	          0x8b55f8	                mov edx, dword [rbp - 8]	       737	utf8.c	FUNCTION_27	CALL_4
0x4001918	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       737	utf8.c	FUNCTION_27	CALL_4
0x400191b	          0x8d3402	                    lea esi, [rdx + rax]	       737	utf8.c	FUNCTION_27	CALL_4
0x400191e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       737	utf8.c	FUNCTION_27	CALL_4
0x4001922	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       737	utf8.c	FUNCTION_27	CALL_4
0x4001926	          0x4889d1	                            mov rcx, rdx	       737	utf8.c	FUNCTION_27	CALL_4
0x4001929	            0x89f2	                            mov edx, esi	       737	utf8.c	FUNCTION_27	CALL_4
0x400192b	      0xbe00000000	                              mov esi, 0	       737	utf8.c	FUNCTION_27	CALL_4
0x4001930	          0x4889c7	                            mov rdi, rax	       737	utf8.c	FUNCTION_27	CALL_4
0x4001933	      0xb800000000	                              mov eax, 0	       737	utf8.c	FUNCTION_27	CALL_4
0x4001938	      0xe800000000	                          call 0x400193d	       737	utf8.c	FUNCTION_27	CALL_4
0x400193d	            0xeb7b	                           jmp 0x40019ba	       737	utf8.c	FUNCTION_27	CALL_4
0x400193f	        0x837de401	               cmp dword [rbp - 0x1c], 1	       738	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001943	            0x7547	                           jne 0x400198c	       738	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001945	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001948	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x400194b	            0x29c2	                            sub edx, eax	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x400194d	            0x89d0	                            mov eax, edx	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x400194f	            0xd1e8	                              shr eax, 1	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001951	          0x8945fc	                mov dword [rbp - 4], eax	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001954	          0x8b45fc	                mov eax, dword [rbp - 4]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001957	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400195a	            0x29c2	                            sub edx, eax	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400195c	          0x8b45f8	                mov eax, dword [rbp - 8]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400195f	          0x8d3402	                    lea esi, [rdx + rax]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001962	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001966	          0x8b55fc	                mov edx, dword [rbp - 4]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001969	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400196d	          0x4989c9	                             mov r9, rcx	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001970	          0x4189f0	                            mov r8d, esi	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001973	      0xb900000000	                              mov ecx, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001978	      0xbe00000000	                              mov esi, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400197d	          0x4889c7	                            mov rdi, rax	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001980	      0xb800000000	                              mov eax, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001985	      0xe800000000	                          call 0x400198a	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400198a	            0xeb2e	                           jmp 0x40019ba	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400198c	        0x837de402	               cmp dword [rbp - 0x1c], 2	       741	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001990	            0x7528	                           jne 0x40019ba	       741	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001992	          0x8b55f8	                mov edx, dword [rbp - 8]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001995	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001998	          0x8d3402	                    lea esi, [rdx + rax]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x400199b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x400199f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40019a3	          0x4889d1	                            mov rcx, rdx	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40019a6	            0x89f2	                            mov edx, esi	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40019a8	      0xbe00000000	                              mov esi, 0	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40019ad	          0x4889c7	                            mov rdi, rax	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40019b0	      0xb800000000	                              mov eax, 0	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40019b5	      0xe800000000	                          call 0x40019ba	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40019ba	              0xc9	                                   leave	       743	utf8.c	FUNCTION_27
0x40019bb	              0xc3	                                     ret	       743	utf8.c	FUNCTION_27
