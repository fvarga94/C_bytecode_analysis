input_error	IF,1:FOR,0:functions,0:DO,0:ELSE,0:WHILE,0:SWITCH,0:CALL,1	20
0x40000e5	              0x55	                                push rbp	        12	sliding_window.c	FUNCTION_1
0x40000e6	          0x4889e5	                            mov rbp, rsp	        12	sliding_window.c	FUNCTION_1
0x40000e9	        0x4883ec10	                           sub rsp, 0x10	        12	sliding_window.c	FUNCTION_1
0x40000ed	        0x48897df8	                mov qword [rbp - 8], rdi	        12	sliding_window.c	FUNCTION_1
0x40000f1	        0x488b45f8	                mov rax, qword [rbp - 8]	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40000f5	          0x4889c7	                            mov rdi, rax	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40000f8	      0xe800000000	                          call 0x40000fd	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40000fd	            0x85c0	                           test eax, eax	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40000ff	            0x7516	                           jne 0x4000117	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x4000101	      0xbf00000000	                              mov edi, 0	        14	sliding_window.c	FUNCTION_1	IF_1
0x4000106	      0xb800000000	                              mov eax, 0	        14	sliding_window.c	FUNCTION_1	IF_1
0x400010b	      0xe800000000	                          call 0x4000110	        14	sliding_window.c	FUNCTION_1	IF_1
0x4000110	      0xe82bffffff	                    call sym.const_error	        14	sliding_window.c	FUNCTION_1	IF_1
0x4000115	            0xeb14	                           jmp 0x400012b	        14	sliding_window.c	FUNCTION_1	IF_1
0x4000117	      0xbf00000000	                              mov edi, 0	        15	sliding_window.c	FUNCTION_1
0x400011c	      0xb800000000	                              mov eax, 0	        15	sliding_window.c	FUNCTION_1
0x4000121	      0xe800000000	                          call 0x4000126	        15	sliding_window.c	FUNCTION_1
0x4000126	      0xe815ffffff	                    call sym.const_error	        15	sliding_window.c	FUNCTION_1
0x400012b	              0xc9	                                   leave	        16	sliding_window.c	FUNCTION_1
0x400012c	              0xc3	                                     ret	        16	sliding_window.c	FUNCTION_1
check_offset_overflow	IF,2:FOR,0:functions,0:DO,0:ELSE,0:WHILE,0:SWITCH,0:CALL,0	32
0x40001c4	              0x55	                                push rbp	        35	sliding_window.c	FUNCTION_4
0x40001c5	          0x4889e5	                            mov rbp, rsp	        35	sliding_window.c	FUNCTION_4
0x40001c8	        0x4883ec10	                           sub rsp, 0x10	        35	sliding_window.c	FUNCTION_4
0x40001cc	        0x48897df8	                mov qword [rbp - 8], rdi	        35	sliding_window.c	FUNCTION_4
0x40001d0	        0x488975f0	             mov qword [rbp - 0x10], rsi	        35	sliding_window.c	FUNCTION_4
0x40001d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        36	sliding_window.c	FUNCTION_4	IF_1
0x40001d8	          0x4885c0	                           test rax, rax	        36	sliding_window.c	FUNCTION_4	IF_1
0x40001db	            0x791d	                           jns 0x40001fa	        36	sliding_window.c	FUNCTION_4	IF_1
0x40001dd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        37	sliding_window.c	FUNCTION_4	IF_1
0x40001e1	          0x4889c6	                            mov rsi, rax	        37	sliding_window.c	FUNCTION_4	IF_1
0x40001e4	      0xbf00000000	                              mov edi, 0	        37	sliding_window.c	FUNCTION_4	IF_1
0x40001e9	      0xb800000000	                              mov eax, 0	        37	sliding_window.c	FUNCTION_4	IF_1
0x40001ee	      0xe800000000	                          call 0x40001f3	        37	sliding_window.c	FUNCTION_4	IF_1
0x40001f3	      0xe848feffff	                    call sym.const_error	        37	sliding_window.c	FUNCTION_4	IF_1
0x40001f8	            0xeb40	                           jmp 0x400023a	        37	sliding_window.c	FUNCTION_4	IF_1
0x40001fa	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	        39	sliding_window.c	FUNCTION_4	IF_2
0x4000204	        0x482b45f8	                sub rax, qword [rbp - 8]	        39	sliding_window.c	FUNCTION_4	IF_2
0x4000208	          0x4889c2	                            mov rdx, rax	        39	sliding_window.c	FUNCTION_4	IF_2
0x400020b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        39	sliding_window.c	FUNCTION_4	IF_2
0x400020f	          0x4839c2	                            cmp rdx, rax	        39	sliding_window.c	FUNCTION_4	IF_2
0x4000212	            0x7d21	                           jge 0x4000235	        39	sliding_window.c	FUNCTION_4	IF_2
0x4000214	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	sliding_window.c	FUNCTION_4	IF_2
0x4000218	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        40	sliding_window.c	FUNCTION_4	IF_2
0x400021c	          0x4889c6	                            mov rsi, rax	        40	sliding_window.c	FUNCTION_4	IF_2
0x400021f	      0xbf00000000	                              mov edi, 0	        40	sliding_window.c	FUNCTION_4	IF_2
0x4000224	      0xb800000000	                              mov eax, 0	        40	sliding_window.c	FUNCTION_4	IF_2
0x4000229	      0xe800000000	                          call 0x400022e	        40	sliding_window.c	FUNCTION_4	IF_2
0x400022e	      0xe80dfeffff	                    call sym.const_error	        40	sliding_window.c	FUNCTION_4	IF_2
0x4000233	            0xeb05	                           jmp 0x400023a	        40	sliding_window.c	FUNCTION_4	IF_2
0x4000235	      0xb800000000	                              mov eax, 0	        43	sliding_window.c	FUNCTION_4
0x400023a	              0xc9	                                   leave	        44	sliding_window.c	FUNCTION_4
0x400023b	              0xc3	                                     ret	        44	sliding_window.c	FUNCTION_4
const_error	IF,0:FOR,0:functions,0:DO,0:ELSE,0:WHILE,0:SWITCH,0:CALL,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_11
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_11
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_11
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_11
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_11
skip_or_whine	IF,1:FOR,0:functions,0:DO,0:ELSE,0:WHILE,0:SWITCH,0:CALL,2	19
0x400012d	              0x55	                                push rbp	        19	sliding_window.c	FUNCTION_2
0x400012e	          0x4889e5	                            mov rbp, rsp	        19	sliding_window.c	FUNCTION_2
0x4000131	        0x4883ec10	                           sub rsp, 0x10	        19	sliding_window.c	FUNCTION_2
0x4000135	        0x48897df8	                mov qword [rbp - 8], rdi	        19	sliding_window.c	FUNCTION_2
0x4000139	        0x488975f0	             mov qword [rbp - 0x10], rsi	        19	sliding_window.c	FUNCTION_2
0x400013d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x4000141	        0x488b45f8	                mov rax, qword [rbp - 8]	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x4000145	          0x4889d6	                            mov rsi, rdx	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x4000148	          0x4889c7	                            mov rdi, rax	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x400014b	      0xe800000000	                          call 0x4000150	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x4000150	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x4000154	            0x740e	                            je 0x4000164	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x4000156	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	sliding_window.c	FUNCTION_2	CALL_2
0x400015a	          0x4889c7	                            mov rdi, rax	        21	sliding_window.c	FUNCTION_2	CALL_2
0x400015d	      0xe883ffffff	                    call sym.input_error	        21	sliding_window.c	FUNCTION_2	CALL_2
0x4000162	            0xeb05	                           jmp 0x4000169	        21	sliding_window.c	FUNCTION_2	CALL_2
0x4000164	      0xb800000000	                              mov eax, 0	        22	sliding_window.c	FUNCTION_2
0x4000169	              0xc9	                                   leave	        23	sliding_window.c	FUNCTION_2
0x400016a	              0xc3	                                     ret	        23	sliding_window.c	FUNCTION_2
read_to_fill_or_whine	IF,1:FOR,0:functions,0:DO,0:ELSE,0:WHILE,0:SWITCH,0:CALL,2	26
0x400016b	              0x55	                                push rbp	        27	sliding_window.c	FUNCTION_3
0x400016c	          0x4889e5	                            mov rbp, rsp	        27	sliding_window.c	FUNCTION_3
0x400016f	        0x4883ec20	                           sub rsp, 0x20	        27	sliding_window.c	FUNCTION_3
0x4000173	        0x48897df8	                mov qword [rbp - 8], rdi	        27	sliding_window.c	FUNCTION_3
0x4000177	        0x488975f0	             mov qword [rbp - 0x10], rsi	        27	sliding_window.c	FUNCTION_3
0x400017b	        0x488955e8	             mov qword [rbp - 0x18], rdx	        27	sliding_window.c	FUNCTION_3
0x400017f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        28	sliding_window.c	FUNCTION_3	CALL_1
0x4000183	        0x488b4008	                mov rax, qword [rax + 8]	        28	sliding_window.c	FUNCTION_3	CALL_1
0x4000187	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        28	sliding_window.c	FUNCTION_3	CALL_1
0x400018b	          0x4829c2	                            sub rdx, rax	        28	sliding_window.c	FUNCTION_3	CALL_1
0x400018e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        28	sliding_window.c	FUNCTION_3	CALL_1
0x4000192	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	sliding_window.c	FUNCTION_3	CALL_1
0x4000196	          0x4889ce	                            mov rsi, rcx	        28	sliding_window.c	FUNCTION_3	CALL_1
0x4000199	          0x4889c7	                            mov rdi, rax	        28	sliding_window.c	FUNCTION_3	CALL_1
0x400019c	      0xe800000000	                          call 0x40001a1	        28	sliding_window.c	FUNCTION_3	CALL_1
0x40001a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        29	sliding_window.c	FUNCTION_3	IF_1
0x40001a5	        0x488b4008	                mov rax, qword [rax + 8]	        29	sliding_window.c	FUNCTION_3	IF_1
0x40001a9	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        29	sliding_window.c	FUNCTION_3	IF_1
0x40001ad	            0x740e	                            je 0x40001bd	        29	sliding_window.c	FUNCTION_3	IF_1
0x40001af	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	sliding_window.c	FUNCTION_3	CALL_2
0x40001b3	          0x4889c7	                            mov rdi, rax	        30	sliding_window.c	FUNCTION_3	CALL_2
0x40001b6	      0xe82affffff	                    call sym.input_error	        30	sliding_window.c	FUNCTION_3	CALL_2
0x40001bb	            0xeb05	                           jmp 0x40001c2	        30	sliding_window.c	FUNCTION_3	CALL_2
0x40001bd	      0xb800000000	                              mov eax, 0	        31	sliding_window.c	FUNCTION_3
0x40001c2	              0xc9	                                   leave	        32	sliding_window.c	FUNCTION_3
0x40001c3	              0xc3	                                     ret	        32	sliding_window.c	FUNCTION_3
strbuf_setlen	IF,2:FOR,0:functions,0:DO,0:ELSE,1:WHILE,0:SWITCH,0:CALL,2	43
0x400004b	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_35
0x400004c	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_35
0x400004f	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_35
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_35
0x4000057	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_35
0x400005b	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_35	IF_1
0x400005f	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_35	IF_1
0x4000062	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_35	IF_1
0x4000065	            0x740d	                            je 0x4000074	       162	strbuf.h	FUNCTION_35	IF_1
0x4000067	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_35	IF_1
0x400006b	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_35	IF_1
0x400006e	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_35	IF_1
0x4000072	            0xeb05	                           jmp 0x4000079	       162	strbuf.h	FUNCTION_35	IF_1
0x4000074	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_35	IF_1
0x4000079	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_35	IF_1
0x400007d	            0x730f	                           jae 0x400008e	       162	strbuf.h	FUNCTION_35	IF_1
0x400007f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_35	CALL_1
0x4000084	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_35	CALL_1
0x4000089	      0xe800000000	                          call 0x400008e	       163	strbuf.h	FUNCTION_35	CALL_1
0x400008e	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_35
0x4000092	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_35
0x4000096	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_35
0x400009a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_35	IF_2
0x400009e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_35	IF_2
0x40000a2	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_35	IF_2
0x40000a8	            0x7414	                            je 0x40000be	       165	strbuf.h	FUNCTION_35	IF_2
0x40000aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_35	IF_2
0x40000ae	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_35	IF_2
0x40000b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_35	IF_2
0x40000b6	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_35	IF_2
0x40000b9	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_35	IF_2
0x40000bc	            0xeb24	                           jmp 0x40000e2	       169	strbuf.h	FUNCTION_35
0x40000be	     0xfb605000000	           movzx eax, byte [0x040000c5] 	       168	strbuf.h	FUNCTION_35	CALL_2
0x40000c5	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_35	CALL_2
0x40000c7	            0x7419	                            je 0x40000e2	       168	strbuf.h	FUNCTION_35	CALL_2
0x40000c9	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_35	CALL_2
0x40000ce	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_35	CALL_2
0x40000d3	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_35	CALL_2
0x40000d8	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_35	CALL_2
0x40000dd	      0xe800000000	                          call 0x40000e2	       168	strbuf.h	FUNCTION_35	CALL_2
0x40000e2	              0x90	                                     nop	       169	strbuf.h	FUNCTION_35
0x40000e3	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_35
0x40000e4	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_35
move_window	IF,7:FOR,0:functions,0:DO,0:ELSE,2:WHILE,0:SWITCH,0:CALL,9	147
0x400023c	              0x55	                                push rbp	        47	sliding_window.c	FUNCTION_5
0x400023d	          0x4889e5	                            mov rbp, rsp	        47	sliding_window.c	FUNCTION_5
0x4000240	        0x4883ec30	                           sub rsp, 0x30	        47	sliding_window.c	FUNCTION_5
0x4000244	        0x48897de8	             mov qword [rbp - 0x18], rdi	        47	sliding_window.c	FUNCTION_5
0x4000248	        0x488975e0	             mov qword [rbp - 0x20], rsi	        47	sliding_window.c	FUNCTION_5
0x400024c	        0x488955d8	             mov qword [rbp - 0x28], rdx	        47	sliding_window.c	FUNCTION_5
0x4000250	      0x48837de800	               cmp qword [rbp - 0x18], 0	        49	sliding_window.c	FUNCTION_5	CALL_1
0x4000255	            0x7519	                           jne 0x4000270	        49	sliding_window.c	FUNCTION_5	CALL_1
0x4000257	      0xb900000000	                              mov ecx, 0	        49	sliding_window.c	FUNCTION_5	CALL_1
0x400025c	      0xba31000000	                           mov edx, 0x31	        49	sliding_window.c	FUNCTION_5	CALL_1
0x4000261	      0xbe00000000	                              mov esi, 0	        49	sliding_window.c	FUNCTION_5	CALL_1
0x4000266	      0xbf00000000	                              mov edi, 0	        49	sliding_window.c	FUNCTION_5	CALL_1
0x400026b	      0xe800000000	                          call 0x4000270	        49	sliding_window.c	FUNCTION_5	CALL_1
0x4000270	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        50	sliding_window.c	FUNCTION_5	CALL_2
0x4000274	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        50	sliding_window.c	FUNCTION_5	CALL_2
0x4000278	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        50	sliding_window.c	FUNCTION_5	CALL_2
0x400027c	        0x488b4028	            mov rax, qword [rax + 0x28] 	        50	sliding_window.c	FUNCTION_5	CALL_2
0x4000280	          0x4839c2	                            cmp rdx, rax	        50	sliding_window.c	FUNCTION_5	CALL_2
0x4000283	            0x7619	                           jbe 0x400029e	        50	sliding_window.c	FUNCTION_5	CALL_2
0x4000285	      0xb900000000	                              mov ecx, 0	        50	sliding_window.c	FUNCTION_5	CALL_2
0x400028a	      0xba32000000	                           mov edx, 0x32	        50	sliding_window.c	FUNCTION_5	CALL_2
0x400028f	      0xbe00000000	                              mov esi, 0	        50	sliding_window.c	FUNCTION_5	CALL_2
0x4000294	      0xbf00000000	                              mov edi, 0	        50	sliding_window.c	FUNCTION_5	CALL_2
0x4000299	      0xe800000000	                          call 0x400029e	        50	sliding_window.c	FUNCTION_5	CALL_2
0x400029e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002a2	        0x488b5028	            mov rdx, qword [rax + 0x28] 	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002aa	        0x488b4008	                mov rax, qword [rax + 8]	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002ae	          0x4889d6	                            mov rsi, rdx	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002b1	          0x4889c7	                            mov rdi, rax	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002b4	      0xe80bffffff	          call sym.check_offset_overflow	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002b9	            0x85c0	                           test eax, eax	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002bb	            0x7419	                            je 0x40002d6	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002bd	      0xb900000000	                              mov ecx, 0	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002c2	      0xba33000000	                           mov edx, 0x33	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002c7	      0xbe00000000	                              mov esi, 0	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002cc	      0xbf00000000	                              mov edi, 0	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002d1	      0xe800000000	                          call 0x40002d6	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40002d6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40002da	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40002de	          0x4889d6	                            mov rsi, rdx	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40002e1	          0x4889c7	                            mov rdi, rax	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40002e4	      0xe8dbfeffff	          call sym.check_offset_overflow	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40002e9	            0x85c0	                           test eax, eax	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40002eb	            0x740a	                            je 0x40002f7	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x40002ed	      0xb8ffffffff	                     mov eax, 0xffffffff	        54	sliding_window.c	FUNCTION_5	IF_1
0x40002f2	      0xe96c010000	                           jmp 0x4000463	        54	sliding_window.c	FUNCTION_5	IF_1
0x40002f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        55	sliding_window.c	FUNCTION_5	IF_2
0x40002fb	        0x488b4008	                mov rax, qword [rax + 8]	        55	sliding_window.c	FUNCTION_5	IF_2
0x40002ff	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000303	            0x7f26	                            jg 0x400032b	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000305	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000309	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        55	sliding_window.c	FUNCTION_5	IF_2
0x400030d	          0x4801c2	                            add rdx, rax	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000310	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000314	        0x488b4008	                mov rax, qword [rax + 8]	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000318	          0x4889c1	                            mov rcx, rax	        55	sliding_window.c	FUNCTION_5	IF_2
0x400031b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        55	sliding_window.c	FUNCTION_5	IF_2
0x400031f	        0x488b4010	            mov rax, qword [rax + 0x10] 	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000323	          0x4801c8	                            add rax, rcx	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000326	          0x4839c2	                            cmp rdx, rax	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000329	            0x7319	                           jae 0x4000344	        55	sliding_window.c	FUNCTION_5	IF_2
0x400032b	      0xbf00000000	                              mov edi, 0	        56	sliding_window.c	FUNCTION_5	IF_2
0x4000330	      0xb800000000	                              mov eax, 0	        56	sliding_window.c	FUNCTION_5	IF_2
0x4000335	      0xe800000000	                          call 0x400033a	        56	sliding_window.c	FUNCTION_5	IF_2
0x400033a	      0xe801fdffff	                    call sym.const_error	        56	sliding_window.c	FUNCTION_5	IF_2
0x400033f	      0xe91f010000	                           jmp 0x4000463	        56	sliding_window.c	FUNCTION_5	IF_2
0x4000344	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000348	        0x488b4018	            mov rax, qword [rax + 0x18] 	        57	sliding_window.c	FUNCTION_5	IF_3
0x400034c	          0x4885c0	                           test rax, rax	        57	sliding_window.c	FUNCTION_5	IF_3
0x400034f	            0x7831	                            js 0x4000382	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000351	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000355	        0x488b4018	            mov rax, qword [rax + 0x18] 	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000359	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	        57	sliding_window.c	FUNCTION_5	IF_3
0x400035d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000361	          0x4801ca	                            add rdx, rcx	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000364	          0x4839d0	                            cmp rax, rdx	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000367	            0x7d19	                           jge 0x4000382	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000369	      0xbf00000000	                              mov edi, 0	        58	sliding_window.c	FUNCTION_5	IF_3
0x400036e	      0xb800000000	                              mov eax, 0	        58	sliding_window.c	FUNCTION_5	IF_3
0x4000373	      0xe800000000	                          call 0x4000378	        58	sliding_window.c	FUNCTION_5	IF_3
0x4000378	      0xe8c3fcffff	                    call sym.const_error	        58	sliding_window.c	FUNCTION_5	IF_3
0x400037d	      0xe9e1000000	                           jmp 0x4000463	        58	sliding_window.c	FUNCTION_5	IF_3
0x4000382	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	sliding_window.c	FUNCTION_5
0x4000386	        0x488b4008	                mov rax, qword [rax + 8]	        60	sliding_window.c	FUNCTION_5
0x400038a	          0x4889c2	                            mov rdx, rax	        60	sliding_window.c	FUNCTION_5
0x400038d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	sliding_window.c	FUNCTION_5
0x4000391	        0x488b4028	            mov rax, qword [rax + 0x28] 	        60	sliding_window.c	FUNCTION_5
0x4000395	          0x4801d0	                            add rax, rdx	        60	sliding_window.c	FUNCTION_5
0x4000398	        0x488945f8	                mov qword [rbp - 8], rax	        60	sliding_window.c	FUNCTION_5
0x400039c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        61	sliding_window.c	FUNCTION_5	IF_4
0x40003a0	        0x483b45f8	                cmp rax, qword [rbp - 8]	        61	sliding_window.c	FUNCTION_5	IF_4
0x40003a4	            0x7d2c	                           jge 0x40003d2	        61	sliding_window.c	FUNCTION_5	IF_4
0x40003a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003aa	        0x488b4008	                mov rax, qword [rax + 8]	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003ae	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003b2	          0x4829c2	                            sub rdx, rax	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003b5	          0x4889d0	                            mov rax, rdx	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003b8	          0x4889c2	                            mov rdx, rax	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003bf	        0x4883c020	                           add rax, 0x20	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003c3	      0xbe00000000	                              mov esi, 0	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003c8	          0x4889c7	                            mov rdi, rax	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003cb	      0xe800000000	                          call 0x40003d0	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003d0	            0xeb3d	                           jmp 0x400040f	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_6
0x40003d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_7
0x40003d6	        0x482b45f8	                sub rax, qword [rbp - 8]	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_7
0x40003da	          0x4889c2	                            mov rdx, rax	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_7
0x40003dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_7
0x40003e1	          0x488b00	                    mov rax, qword [rax]	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_7
0x40003e4	          0x4889d6	                            mov rsi, rdx	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_7
0x40003e7	          0x4889c7	                            mov rdi, rax	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_7
0x40003ea	      0xe83efdffff	                  call sym.skip_or_whine	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_7
0x40003ef	            0x85c0	                           test eax, eax	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_7
0x40003f1	            0x7407	                            je 0x40003fa	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_7
0x40003f3	      0xb8ffffffff	                     mov eax, 0xffffffff	        67	sliding_window.c	FUNCTION_5	ELSE_1	IF_5
0x40003f8	            0xeb69	                           jmp 0x4000463	        67	sliding_window.c	FUNCTION_5	ELSE_1	IF_5
0x40003fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	sliding_window.c	FUNCTION_5	ELSE_1	CALL_8
0x40003fe	        0x4883c020	                           add rax, 0x20	        68	sliding_window.c	FUNCTION_5	ELSE_1	CALL_8
0x4000402	      0xbe00000000	                              mov esi, 0	        68	sliding_window.c	FUNCTION_5	ELSE_1	CALL_8
0x4000407	          0x4889c7	                            mov rdi, rax	        68	sliding_window.c	FUNCTION_5	ELSE_1	CALL_8
0x400040a	      0xe83cfcffff	                  call sym.strbuf_setlen	        68	sliding_window.c	FUNCTION_5	ELSE_1	CALL_8
0x400040f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	sliding_window.c	FUNCTION_5	IF_6
0x4000413	        0x488b4028	            mov rax, qword [rax + 0x28] 	        71	sliding_window.c	FUNCTION_5	IF_6
0x4000417	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	        71	sliding_window.c	FUNCTION_5	IF_6
0x400041b	            0x7729	                            ja 0x4000446	        71	sliding_window.c	FUNCTION_5	IF_6
0x400041d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_9
0x4000421	        0x488d4820	                   lea rcx, [rax + 0x20]	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_9
0x4000425	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_9
0x4000429	          0x488b00	                    mov rax, qword [rax]	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_9
0x400042c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_9
0x4000430	          0x4889ce	                            mov rsi, rcx	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_9
0x4000433	          0x4889c7	                            mov rdi, rax	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_9
0x4000436	      0xe830fdffff	          call sym.read_to_fill_or_whine	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_9
0x400043b	            0x85c0	                           test eax, eax	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_9
0x400043d	            0x7407	                            je 0x4000446	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_9
0x400043f	      0xb8ffffffff	                     mov eax, 0xffffffff	        74	sliding_window.c	FUNCTION_5	ELSE_2	IF_7
0x4000444	            0xeb1d	                           jmp 0x4000463	        74	sliding_window.c	FUNCTION_5	ELSE_2	IF_7
0x4000446	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        76	sliding_window.c	FUNCTION_5
0x400044a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        76	sliding_window.c	FUNCTION_5
0x400044e	        0x48895008	                mov qword [rax + 8], rdx	        76	sliding_window.c	FUNCTION_5
0x4000452	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        77	sliding_window.c	FUNCTION_5
0x4000456	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        77	sliding_window.c	FUNCTION_5
0x400045a	        0x48895010	             mov qword [rax + 0x10], rdx	        77	sliding_window.c	FUNCTION_5
0x400045e	      0xb800000000	                              mov eax, 0	        78	sliding_window.c	FUNCTION_5
0x4000463	              0xc9	                                   leave	        79	sliding_window.c	FUNCTION_5
0x4000464	              0xc3	                                     ret	        79	sliding_window.c	FUNCTION_5
