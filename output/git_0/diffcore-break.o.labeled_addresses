should_break	CALL,6:FOR,0:ELSE,1:SWITCH,0:IF,12:WHILE,0:functions,0:DO,0	269
0x40000c9	              0x55	                                push rbp	        12	diffcore-break.c	FUNCTION_1
0x40000ca	          0x4889e5	                            mov rbp, rsp	        12	diffcore-break.c	FUNCTION_1
0x40000cd	        0x4883ec50	                           sub rsp, 0x50	        12	diffcore-break.c	FUNCTION_1
0x40000d1	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        12	diffcore-break.c	FUNCTION_1
0x40000d5	        0x488975c0	             mov qword [rbp - 0x40], rsi	        12	diffcore-break.c	FUNCTION_1
0x40000d9	          0x8955bc	             mov dword [rbp - 0x44], edx	        12	diffcore-break.c	FUNCTION_1
0x40000dc	        0x48894db0	             mov qword [rbp - 0x50], rcx	        12	diffcore-break.c	FUNCTION_1
0x40000e0	    0x64488b042528	                mov rax, qword fs:[0x28]	        12	diffcore-break.c	FUNCTION_1
0x40000e9	        0x488945f8	                mov qword [rbp - 8], rax	        12	diffcore-break.c	FUNCTION_1
0x40000ed	            0x31c0	                            xor eax, eax	        12	diffcore-break.c	FUNCTION_1
0x40000ef	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        51	diffcore-break.c	FUNCTION_1
0x40000f3	    0xc70000000000	                      mov dword [rax], 0	        51	diffcore-break.c	FUNCTION_1
0x40000f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x40000fd	         0xfb74040	           movzx eax, word [rax + 0x40] 	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x4000101	           0xfb7c0	                           movzx eax, ax	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x4000104	      0x2500f00000	                         and eax, 0xf000	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x4000109	      0x3d00800000	                         cmp eax, 0x8000	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x400010e	           0xf94c2	                                 sete dl	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x4000111	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x4000115	         0xfb74040	           movzx eax, word [rax + 0x40] 	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x4000119	           0xfb7c0	                           movzx eax, ax	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x400011c	      0x2500f00000	                         and eax, 0xf000	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x4000121	      0x3d00800000	                         cmp eax, 0x8000	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x4000126	           0xf94c0	                                 sete al	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x4000129	            0x31d0	                            xor eax, edx	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x400012b	            0x84c0	                             test al, al	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x400012d	            0x7414	                            je 0x4000143	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x400012f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        56	diffcore-break.c	FUNCTION_1	IF_1
0x4000133	    0xc70060ea0000	                 mov dword [rax], 0xea60	        56	diffcore-break.c	FUNCTION_1	IF_1
0x4000139	      0xb801000000	                              mov eax, 1	        57	diffcore-break.c	FUNCTION_1	IF_1
0x400013e	      0xe94f030000	                           jmp 0x4000492	        57	diffcore-break.c	FUNCTION_1	IF_1
0x4000143	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000147	         0xfb64042	           movzx eax, byte [rax + 0x42] 	        60	diffcore-break.c	FUNCTION_1	IF_2
0x400014b	          0x83e001	                              and eax, 1	        60	diffcore-break.c	FUNCTION_1	IF_2
0x400014e	            0x84c0	                             test al, al	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000150	            0x7430	                            je 0x4000182	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000152	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000156	         0xfb64042	           movzx eax, byte [rax + 0x42] 	        60	diffcore-break.c	FUNCTION_1	IF_2
0x400015a	          0x83e001	                              and eax, 1	        60	diffcore-break.c	FUNCTION_1	IF_2
0x400015d	            0x84c0	                             test al, al	        60	diffcore-break.c	FUNCTION_1	IF_2
0x400015f	            0x7421	                            je 0x4000182	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000161	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        61	diffcore-break.c	FUNCTION_1	IF_2	CALL_3
0x4000165	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        61	diffcore-break.c	FUNCTION_1	IF_2	CALL_3
0x4000169	          0x4889d6	                            mov rsi, rdx	        61	diffcore-break.c	FUNCTION_1	IF_2	CALL_3
0x400016c	          0x4889c7	                            mov rdi, rax	        61	diffcore-break.c	FUNCTION_1	IF_2	CALL_3
0x400016f	      0xe830ffffff	                         call sym.oidcmp	        61	diffcore-break.c	FUNCTION_1	IF_2	CALL_3
0x4000174	            0x85c0	                           test eax, eax	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000176	            0x750a	                           jne 0x4000182	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000178	      0xb800000000	                              mov eax, 0	        62	diffcore-break.c	FUNCTION_1	IF_2
0x400017d	      0xe910030000	                           jmp 0x4000492	        62	diffcore-break.c	FUNCTION_1	IF_2
0x4000182	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x4000186	      0xbe00000000	                              mov esi, 0	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x400018b	          0x4889c7	                            mov rdi, rax	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x400018e	      0xe800000000	                          call 0x4000193	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x4000193	            0x85c0	                           test eax, eax	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x4000195	            0x7515	                           jne 0x40001ac	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x4000197	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x400019b	      0xbe00000000	                              mov esi, 0	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40001a0	          0x4889c7	                            mov rdi, rax	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40001a3	      0xe800000000	                          call 0x40001a8	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40001a8	            0x85c0	                           test eax, eax	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40001aa	            0x740a	                            je 0x40001b6	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40001ac	      0xb800000000	                              mov eax, 0	        65	diffcore-break.c	FUNCTION_1	IF_3
0x40001b1	      0xe9dc020000	                           jmp 0x4000492	        65	diffcore-break.c	FUNCTION_1	IF_3
0x40001b6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        67	diffcore-break.c	FUNCTION_1
0x40001ba	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        67	diffcore-break.c	FUNCTION_1
0x40001be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        67	diffcore-break.c	FUNCTION_1
0x40001c2	        0x488b4030	            mov rax, qword [rax + 0x30] 	        67	diffcore-break.c	FUNCTION_1
0x40001c6	          0x4839c2	                            cmp rdx, rax	        67	diffcore-break.c	FUNCTION_1
0x40001c9	        0x480f43c2	                         cmovae rax, rdx	        67	diffcore-break.c	FUNCTION_1
0x40001cd	        0x488945e0	             mov qword [rbp - 0x20], rax	        67	diffcore-break.c	FUNCTION_1
0x40001d1	    0x48817de08f01	          cmp qword [rbp - 0x20], 0x18f 	        68	diffcore-break.c	FUNCTION_1	IF_4
0x40001d9	            0x770a	                            ja 0x40001e5	        68	diffcore-break.c	FUNCTION_1	IF_4
0x40001db	      0xb800000000	                              mov eax, 0	        69	diffcore-break.c	FUNCTION_1	IF_4
0x40001e0	      0xe9ad020000	                           jmp 0x4000492	        69	diffcore-break.c	FUNCTION_1	IF_4
0x40001e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        71	diffcore-break.c	FUNCTION_1	IF_5
0x40001e9	        0x488b4030	            mov rax, qword [rax + 0x30] 	        71	diffcore-break.c	FUNCTION_1	IF_5
0x40001ed	          0x4885c0	                           test rax, rax	        71	diffcore-break.c	FUNCTION_1	IF_5
0x40001f0	            0x750a	                           jne 0x40001fc	        71	diffcore-break.c	FUNCTION_1	IF_5
0x40001f2	      0xb800000000	                              mov eax, 0	        72	diffcore-break.c	FUNCTION_1	IF_5
0x40001f7	      0xe996020000	                           jmp 0x4000492	        72	diffcore-break.c	FUNCTION_1	IF_5
0x40001fc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x4000200	        0x488d4828	                   lea rcx, [rax + 0x28]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x4000204	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x4000208	        0x488d5028	                   lea rdx, [rax + 0x28]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x400020c	        0x4c8d45d8	                    lea r8, [rbp - 0x28]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x4000210	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x4000214	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x4000218	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x400021c	          0x4d89c1	                              mov r9, r8	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x400021f	          0x4989f8	                             mov r8, rdi	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x4000222	          0x4889c7	                            mov rdi, rax	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x4000225	      0xe800000000	                          call 0x400022a	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x400022a	            0x85c0	                           test eax, eax	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x400022c	            0x740a	                            je 0x4000238	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x400022e	      0xb800000000	                              mov eax, 0	        77	diffcore-break.c	FUNCTION_1	IF_6
0x4000233	      0xe95a020000	                           jmp 0x4000492	        77	diffcore-break.c	FUNCTION_1	IF_6
0x4000238	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        80	diffcore-break.c	FUNCTION_1	IF_7
0x400023c	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        80	diffcore-break.c	FUNCTION_1	IF_7
0x4000240	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        80	diffcore-break.c	FUNCTION_1	IF_7
0x4000244	          0x4839c2	                            cmp rdx, rax	        80	diffcore-break.c	FUNCTION_1	IF_7
0x4000247	            0x730c	                           jae 0x4000255	        80	diffcore-break.c	FUNCTION_1	IF_7
0x4000249	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        81	diffcore-break.c	FUNCTION_1	IF_7
0x400024d	        0x488b4030	            mov rax, qword [rax + 0x30] 	        81	diffcore-break.c	FUNCTION_1	IF_7
0x4000251	        0x488945d0	             mov qword [rbp - 0x30], rax	        81	diffcore-break.c	FUNCTION_1	IF_7
0x4000255	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        82	diffcore-break.c	FUNCTION_1	IF_8
0x4000259	        0x488b4030	            mov rax, qword [rax + 0x30] 	        82	diffcore-break.c	FUNCTION_1	IF_8
0x400025d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	        82	diffcore-break.c	FUNCTION_1	IF_8
0x4000261	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        82	diffcore-break.c	FUNCTION_1	IF_8
0x4000265	          0x4801ca	                            add rdx, rcx	        82	diffcore-break.c	FUNCTION_1	IF_8
0x4000268	          0x4839d0	                            cmp rax, rdx	        82	diffcore-break.c	FUNCTION_1	IF_8
0x400026b	            0x7331	                           jae 0x400029e	        82	diffcore-break.c	FUNCTION_1	IF_8
0x400026d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000271	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000275	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000279	          0x4839c2	                            cmp rdx, rax	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x400027c	            0x7618	                           jbe 0x4000296	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x400027e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000282	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000286	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x400028a	          0x4829c2	                            sub rdx, rax	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x400028d	          0x4889d0	                            mov rax, rdx	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000290	        0x488945d8	             mov qword [rbp - 0x28], rax	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000294	            0xeb08	                           jmp 0x400029e	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000296	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x400029e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        88	diffcore-break.c	FUNCTION_1
0x40002a2	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        88	diffcore-break.c	FUNCTION_1
0x40002a6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        88	diffcore-break.c	FUNCTION_1
0x40002aa	          0x4829c2	                            sub rdx, rax	        88	diffcore-break.c	FUNCTION_1
0x40002ad	          0x4889d0	                            mov rax, rdx	        88	diffcore-break.c	FUNCTION_1
0x40002b0	        0x488945e8	             mov qword [rbp - 0x18], rax	        88	diffcore-break.c	FUNCTION_1
0x40002b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	diffcore-break.c	FUNCTION_1
0x40002b8	          0x4885c0	                           test rax, rax	        95	diffcore-break.c	FUNCTION_1
0x40002bb	            0x780b	                            js 0x40002c8	        95	diffcore-break.c	FUNCTION_1
0x40002bd	        0x660fefc0	                         pxor xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x40002c1	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	        95	diffcore-break.c	FUNCTION_1
0x40002c6	            0xeb19	                           jmp 0x40002e1	        95	diffcore-break.c	FUNCTION_1
0x40002c8	          0x4889c2	                            mov rdx, rax	        95	diffcore-break.c	FUNCTION_1
0x40002cb	          0x48d1ea	                              shr rdx, 1	        95	diffcore-break.c	FUNCTION_1
0x40002ce	          0x83e001	                              and eax, 1	        95	diffcore-break.c	FUNCTION_1
0x40002d1	          0x4809c2	                             or rdx, rax	        95	diffcore-break.c	FUNCTION_1
0x40002d4	        0x660fefc0	                         pxor xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x40002d8	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	        95	diffcore-break.c	FUNCTION_1
0x40002dd	        0xf20f58c0	                        addsd xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x40002e1	    0xf20f100d0000	         movsd xmm1, qword [0x040002e9] 	        95	diffcore-break.c	FUNCTION_1
0x40002e9	        0xf20f59c8	                        mulsd xmm1, xmm0	        95	diffcore-break.c	FUNCTION_1
0x40002ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        95	diffcore-break.c	FUNCTION_1
0x40002f1	        0x488b4030	            mov rax, qword [rax + 0x30] 	        95	diffcore-break.c	FUNCTION_1
0x40002f5	          0x4885c0	                           test rax, rax	        95	diffcore-break.c	FUNCTION_1
0x40002f8	            0x780b	                            js 0x4000305	        95	diffcore-break.c	FUNCTION_1
0x40002fa	        0x660fefc0	                         pxor xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x40002fe	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	        95	diffcore-break.c	FUNCTION_1
0x4000303	            0xeb19	                           jmp 0x400031e	        95	diffcore-break.c	FUNCTION_1
0x4000305	          0x4889c2	                            mov rdx, rax	        95	diffcore-break.c	FUNCTION_1
0x4000308	          0x48d1ea	                              shr rdx, 1	        95	diffcore-break.c	FUNCTION_1
0x400030b	          0x83e001	                              and eax, 1	        95	diffcore-break.c	FUNCTION_1
0x400030e	          0x4809c2	                             or rdx, rax	        95	diffcore-break.c	FUNCTION_1
0x4000311	        0x660fefc0	                         pxor xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x4000315	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	        95	diffcore-break.c	FUNCTION_1
0x400031a	        0xf20f58c0	                        addsd xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x400031e	        0xf20f5ec8	                        divsd xmm1, xmm0	        95	diffcore-break.c	FUNCTION_1
0x4000322	        0x660f28c1	                       movapd xmm0, xmm1	        95	diffcore-break.c	FUNCTION_1
0x4000326	        0xf20f2cd0	                     cvttsd2si edx, xmm0	        95	diffcore-break.c	FUNCTION_1
0x400032a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        95	diffcore-break.c	FUNCTION_1
0x400032e	            0x8910	                    mov dword [rax], edx	        95	diffcore-break.c	FUNCTION_1
0x4000330	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        96	diffcore-break.c	FUNCTION_1	IF_10
0x4000334	            0x8b00	                    mov eax, dword [rax]	        96	diffcore-break.c	FUNCTION_1	IF_10
0x4000336	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	        96	diffcore-break.c	FUNCTION_1	IF_10
0x4000339	            0x7e0a	                           jle 0x4000345	        96	diffcore-break.c	FUNCTION_1	IF_10
0x400033b	      0xb801000000	                              mov eax, 1	        97	diffcore-break.c	FUNCTION_1	IF_10
0x4000340	      0xe94d010000	                           jmp 0x4000492	        97	diffcore-break.c	FUNCTION_1	IF_10
0x4000345	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       102	diffcore-break.c	FUNCTION_1
0x4000349	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	diffcore-break.c	FUNCTION_1
0x400034d	          0x4801d0	                            add rax, rdx	       102	diffcore-break.c	FUNCTION_1
0x4000350	        0x488945f0	             mov qword [rbp - 0x10], rax	       102	diffcore-break.c	FUNCTION_1
0x4000354	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000358	          0x4885c0	                           test rax, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400035b	            0x780b	                            js 0x4000368	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400035d	        0x660fefc0	                         pxor xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000361	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000366	            0xeb19	                           jmp 0x4000381	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000368	          0x4889c2	                            mov rdx, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400036b	          0x48d1ea	                              shr rdx, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400036e	          0x83e001	                              and eax, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000371	          0x4809c2	                             or rdx, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000374	        0x660fefc0	                         pxor xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000378	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400037d	        0xf20f58c0	                        addsd xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000381	    0xf20f100d0000	         movsd xmm1, qword [0x04000389] 	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000389	        0xf20f59c8	                        mulsd xmm1, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400038d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000391	          0x4885c0	                           test rax, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000394	            0x780b	                            js 0x40003a1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000396	        0x660fefc0	                         pxor xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400039a	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400039f	            0xeb19	                           jmp 0x40003ba	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003a1	          0x4889c2	                            mov rdx, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003a4	          0x48d1ea	                              shr rdx, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003a7	          0x83e001	                              and eax, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003aa	          0x4809c2	                             or rdx, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003ad	        0x660fefc0	                         pxor xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003b1	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003b6	        0xf20f58c0	                        addsd xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003ba	        0xf20f5ec8	                        divsd xmm1, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003be	        0x660fefc0	                         pxor xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003c2	      0xf20f2a45bc	       cvtsi2sd xmm0, dword [rbp - 0x44]	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003c7	        0x660f2ec1	                      ucomisd xmm0, xmm1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003cb	            0x760a	                           jbe 0x40003d7	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003cd	      0xb800000000	                              mov eax, 0	       104	diffcore-break.c	FUNCTION_1	IF_11
0x40003d2	      0xe9bb000000	                           jmp 0x4000492	       104	diffcore-break.c	FUNCTION_1	IF_11
0x40003d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003db	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003df	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003e2	            0x4898	                                    cdqe	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003e4	        0x480fafc2	                           imul rax, rdx	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003e8	          0x4885c0	                           test rax, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003eb	            0x780b	                            js 0x40003f8	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003ed	        0x660fefc0	                         pxor xmm0, xmm0	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003f1	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003f6	            0xeb19	                           jmp 0x4000411	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003f8	          0x4889c2	                            mov rdx, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003fb	          0x48d1ea	                              shr rdx, 1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003fe	          0x83e001	                              and eax, 1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000401	          0x4809c2	                             or rdx, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000404	        0x660fefc0	                         pxor xmm0, xmm0	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000408	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400040d	        0xf20f58c0	                        addsd xmm0, xmm0	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000411	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000415	          0x4885c0	                           test rax, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000418	            0x780b	                            js 0x4000425	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400041a	        0x660fefc9	                         pxor xmm1, xmm1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400041e	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000423	            0xeb19	                           jmp 0x400043e	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000425	          0x4889c2	                            mov rdx, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000428	          0x48d1ea	                              shr rdx, 1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400042b	          0x83e001	                              and eax, 1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400042e	          0x4809c2	                             or rdx, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000431	        0x660fefc9	                         pxor xmm1, xmm1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000435	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400043a	        0xf20f58c9	                        addsd xmm1, xmm1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400043e	    0xf20f10150000	         movsd xmm2, qword [0x04000446] 	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000446	        0xf20f59ca	                        mulsd xmm1, xmm2	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400044a	        0x660f2ec8	                      ucomisd xmm1, xmm0	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400044e	            0x763d	                           jbe 0x400048d	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000450	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000454	          0x4889d0	                            mov rax, rdx	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000457	        0x48c1e002	                              shl rax, 2	       110	diffcore-break.c	FUNCTION_1	IF_12
0x400045b	          0x4801d0	                            add rax, rdx	       110	diffcore-break.c	FUNCTION_1	IF_12
0x400045e	        0x48c1e002	                              shl rax, 2	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000462	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000466	            0x7325	                           jae 0x400048d	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000468	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       111	diffcore-break.c	FUNCTION_1	IF_12
0x400046c	          0x4889d0	                            mov rax, rdx	       111	diffcore-break.c	FUNCTION_1	IF_12
0x400046f	        0x48c1e002	                              shl rax, 2	       111	diffcore-break.c	FUNCTION_1	IF_12
0x4000473	          0x4801d0	                            add rax, rdx	       111	diffcore-break.c	FUNCTION_1	IF_12
0x4000476	        0x48c1e002	                              shl rax, 2	       111	diffcore-break.c	FUNCTION_1	IF_12
0x400047a	          0x4889c2	                            mov rdx, rax	       111	diffcore-break.c	FUNCTION_1	IF_12
0x400047d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       111	diffcore-break.c	FUNCTION_1	IF_12
0x4000481	          0x4839c2	                            cmp rdx, rax	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000484	            0x7307	                           jae 0x400048d	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000486	      0xb800000000	                              mov eax, 0	       112	diffcore-break.c	FUNCTION_1	IF_12
0x400048b	            0xeb05	                           jmp 0x4000492	       112	diffcore-break.c	FUNCTION_1	IF_12
0x400048d	      0xb801000000	                              mov eax, 1	       114	diffcore-break.c	FUNCTION_1
0x4000492	        0x488b4df8	                mov rcx, qword [rbp - 8]	       115	diffcore-break.c	FUNCTION_1
0x4000496	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       115	diffcore-break.c	FUNCTION_1
0x400049f	            0x7405	                            je 0x40004a6	       115	diffcore-break.c	FUNCTION_1
0x40004a1	      0xe800000000	                          call 0x40004a6	       115	diffcore-break.c	FUNCTION_1
0x40004a6	              0xc9	                                   leave	       115	diffcore-break.c	FUNCTION_1
0x40004a7	              0xc3	                                     ret	       115	diffcore-break.c	FUNCTION_1
merge_broken	CALL,14:FOR,0:ELSE,0:SWITCH,0:IF,5:WHILE,0:functions,0:DO,0	86
0x4000743	              0x55	                                push rbp	       229	diffcore-break.c	FUNCTION_3
0x4000744	          0x4889e5	                            mov rbp, rsp	       229	diffcore-break.c	FUNCTION_3
0x4000747	        0x4883ec40	                           sub rsp, 0x40	       229	diffcore-break.c	FUNCTION_3
0x400074b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       229	diffcore-break.c	FUNCTION_3
0x400074f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       229	diffcore-break.c	FUNCTION_3
0x4000753	        0x488955c8	             mov qword [rbp - 0x38], rdx	       229	diffcore-break.c	FUNCTION_3
0x4000757	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	diffcore-break.c	FUNCTION_3
0x400075b	        0x488945e8	             mov qword [rbp - 0x18], rax	       231	diffcore-break.c	FUNCTION_3
0x400075f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       231	diffcore-break.c	FUNCTION_3
0x4000763	        0x488945f0	             mov qword [rbp - 0x10], rax	       231	diffcore-break.c	FUNCTION_3
0x4000767	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x400076b	          0x488b00	                    mov rax, qword [rax]	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x400076e	         0xfb74040	           movzx eax, word [rax + 0x40] 	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x4000772	          0x6685c0	                             test ax, ax	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x4000775	            0x7410	                            je 0x4000787	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x4000777	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       234	diffcore-break.c	FUNCTION_3	IF_1
0x400077b	        0x488945f0	             mov qword [rbp - 0x10], rax	       234	diffcore-break.c	FUNCTION_3	IF_1
0x400077f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       234	diffcore-break.c	FUNCTION_3	IF_1
0x4000783	        0x488945e8	             mov qword [rbp - 0x18], rax	       234	diffcore-break.c	FUNCTION_3	IF_1
0x4000787	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x400078b	          0x488b00	                    mov rax, qword [rax]	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x400078e	         0xfb74040	           movzx eax, word [rax + 0x40] 	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x4000792	          0x6685c0	                             test ax, ax	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x4000795	            0x750f	                           jne 0x40007a6	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x4000797	      0xbf00000000	                              mov edi, 0	       238	diffcore-break.c	FUNCTION_3	CALL_3
0x400079c	      0xb800000000	                              mov eax, 0	       238	diffcore-break.c	FUNCTION_3	CALL_3
0x40007a1	      0xe800000000	                          call 0x40007a6	       238	diffcore-break.c	FUNCTION_3	CALL_3
0x40007a6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x40007aa	        0x488b4008	                mov rax, qword [rax + 8]	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x40007ae	         0xfb74040	           movzx eax, word [rax + 0x40] 	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x40007b2	          0x6685c0	                             test ax, ax	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x40007b5	            0x740f	                            je 0x40007c6	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x40007b7	      0xbf00000000	                              mov edi, 0	       240	diffcore-break.c	FUNCTION_3	CALL_5
0x40007bc	      0xb800000000	                              mov eax, 0	       240	diffcore-break.c	FUNCTION_3	CALL_5
0x40007c1	      0xe800000000	                          call 0x40007c6	       240	diffcore-break.c	FUNCTION_3	CALL_5
0x40007c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x40007ca	          0x488b00	                    mov rax, qword [rax]	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x40007cd	         0xfb74040	           movzx eax, word [rax + 0x40] 	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x40007d1	          0x6685c0	                             test ax, ax	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x40007d4	            0x740f	                            je 0x40007e5	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x40007d6	      0xbf00000000	                              mov edi, 0	       242	diffcore-break.c	FUNCTION_3	CALL_7
0x40007db	      0xb800000000	                              mov eax, 0	       242	diffcore-break.c	FUNCTION_3	CALL_7
0x40007e0	      0xe800000000	                          call 0x40007e5	       242	diffcore-break.c	FUNCTION_3	CALL_7
0x40007e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x40007e9	        0x488b4008	                mov rax, qword [rax + 8]	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x40007ed	         0xfb74040	           movzx eax, word [rax + 0x40] 	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x40007f1	          0x6685c0	                             test ax, ax	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x40007f4	            0x750f	                           jne 0x4000805	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x40007f6	      0xbf00000000	                              mov edi, 0	       244	diffcore-break.c	FUNCTION_3	CALL_9
0x40007fb	      0xb800000000	                              mov eax, 0	       244	diffcore-break.c	FUNCTION_3	CALL_9
0x4000800	      0xe800000000	                          call 0x4000805	       244	diffcore-break.c	FUNCTION_3	CALL_9
0x4000805	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x4000809	        0x488b5008	                mov rdx, qword [rax + 8]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x400080d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x4000811	          0x488b08	                    mov rcx, qword [rax]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x4000814	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x4000818	          0x4889ce	                            mov rsi, rcx	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x400081b	          0x4889c7	                            mov rdi, rax	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x400081e	      0xe800000000	                          call 0x4000823	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x4000823	        0x488945f8	                mov qword [rbp - 8], rax	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x4000827	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	diffcore-break.c	FUNCTION_3
0x400082b	         0xfb75010	           movzx edx, word [rax + 0x10] 	       247	diffcore-break.c	FUNCTION_3
0x400082f	        0x488b45f8	                mov rax, qword [rbp - 8]	       247	diffcore-break.c	FUNCTION_3
0x4000833	        0x66895010	               mov word [rax + 0x10], dx	       247	diffcore-break.c	FUNCTION_3
0x4000837	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       254	diffcore-break.c	FUNCTION_3
0x400083b	          0x488b00	                    mov rax, qword [rax]	       254	diffcore-break.c	FUNCTION_3
0x400083e	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       254	diffcore-break.c	FUNCTION_3
0x4000841	          0x83c201	                              add edx, 1	       254	diffcore-break.c	FUNCTION_3
0x4000844	          0x89503c	             mov dword [rax + 0x3c], edx	       254	diffcore-break.c	FUNCTION_3
0x4000847	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       255	diffcore-break.c	FUNCTION_3	CALL_11
0x400084b	        0x488b4008	                mov rax, qword [rax + 8]	       255	diffcore-break.c	FUNCTION_3	CALL_11
0x400084f	          0x4889c7	                            mov rdi, rax	       255	diffcore-break.c	FUNCTION_3	CALL_11
0x4000852	      0xe800000000	                          call 0x4000857	       255	diffcore-break.c	FUNCTION_3	CALL_11
0x4000857	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       256	diffcore-break.c	FUNCTION_3	CALL_12
0x400085b	          0x488b00	                    mov rax, qword [rax]	       256	diffcore-break.c	FUNCTION_3	CALL_12
0x400085e	          0x4889c7	                            mov rdi, rax	       256	diffcore-break.c	FUNCTION_3	CALL_12
0x4000861	      0xe800000000	                          call 0x4000866	       256	diffcore-break.c	FUNCTION_3	CALL_12
0x4000866	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       257	diffcore-break.c	FUNCTION_3	CALL_13
0x400086a	          0x4889c7	                            mov rdi, rax	       257	diffcore-break.c	FUNCTION_3	CALL_13
0x400086d	      0xe800000000	                          call 0x4000872	       257	diffcore-break.c	FUNCTION_3	CALL_13
0x4000872	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       258	diffcore-break.c	FUNCTION_3	CALL_14
0x4000876	          0x4889c7	                            mov rdi, rax	       258	diffcore-break.c	FUNCTION_3	CALL_14
0x4000879	      0xe800000000	                          call 0x400087e	       258	diffcore-break.c	FUNCTION_3	CALL_14
0x400087e	              0x90	                                     nop	       259	diffcore-break.c	FUNCTION_3
0x400087f	              0xc9	                                   leave	       259	diffcore-break.c	FUNCTION_3
0x4000880	              0xc3	                                     ret	       259	diffcore-break.c	FUNCTION_3
diffcore_merge_broken	CALL,8:FOR,2:ELSE,2:SWITCH,0:IF,4:WHILE,0:functions,0:DO,0	135
0x4000881	              0x55	                                push rbp	       262	diffcore-break.c	FUNCTION_4
0x4000882	          0x4889e5	                            mov rbp, rsp	       262	diffcore-break.c	FUNCTION_4
0x4000885	        0x4883ec40	                           sub rsp, 0x40	       262	diffcore-break.c	FUNCTION_4
0x4000889	    0x64488b042528	                mov rax, qword fs:[0x28]	       262	diffcore-break.c	FUNCTION_4
0x4000892	        0x488945f8	                mov qword [rbp - 8], rax	       262	diffcore-break.c	FUNCTION_4
0x4000896	            0x31c0	                            xor eax, eax	       262	diffcore-break.c	FUNCTION_4
0x4000898	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       263	diffcore-break.c	FUNCTION_4
0x40008a0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x40008a8	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x40008af	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x40008b2	          0x8945ec	             mov dword [rbp - 0x14], eax	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x40008b5	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x40008bc	      0xe96e010000	                           jmp 0x4000a2f	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x40008c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x40008c5	          0x488b00	                    mov rax, qword [rax]	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x40008c8	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x40008cb	          0x4863d2	                         movsxd rdx, edx	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x40008ce	        0x48c1e203	                              shl rdx, 3	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x40008d2	          0x4801d0	                            add rax, rdx	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x40008d5	          0x488b00	                    mov rax, qword [rax]	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x40008d8	        0x488945d0	             mov qword [rbp - 0x30], rax	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x40008dc	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       271	diffcore-break.c	FUNCTION_4	FOR_1	IF_1
0x40008e1	     0xf8443010000	                            je 0x4000a2a	       271	diffcore-break.c	FUNCTION_4	FOR_1	IF_1
0x40008e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x40008eb	         0xfb64013	           movzx eax, byte [rax + 0x13] 	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x40008ef	          0x83e001	                              and eax, 1	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x40008f2	            0x84c0	                             test al, al	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x40008f4	     0xf841b010000	                            je 0x4000a15	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x40008fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x40008fe	        0x488b4008	                mov rax, qword [rax + 8]	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x4000902	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x4000906	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x400090a	          0x488b00	                    mov rax, qword [rax]	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x400090d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x4000911	          0x4889d6	                            mov rsi, rdx	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x4000914	          0x4889c7	                            mov rdi, rax	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x4000917	      0xe800000000	                          call 0x400091c	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x400091c	            0x85c0	                           test eax, eax	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x400091e	     0xf85f1000000	                           jne 0x4000a15	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x4000924	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000927	          0x83c001	                              add eax, 1	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x400092a	          0x8945c4	             mov dword [rbp - 0x3c], eax	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x400092d	      0xe9b2000000	                           jmp 0x40009e4	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000932	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000936	          0x488b00	                    mov rax, qword [rax]	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000939	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x400093c	          0x4863d2	                         movsxd rdx, edx	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x400093f	        0x48c1e203	                              shl rdx, 3	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000943	          0x4801d0	                            add rax, rdx	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000946	          0x488b00	                    mov rax, qword [rax]	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000949	        0x488945d8	             mov qword [rbp - 0x28], rax	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x400094d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x4000951	         0xfb64013	           movzx eax, byte [rax + 0x13] 	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x4000955	          0x83e001	                              and eax, 1	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x4000958	            0x84c0	                             test al, al	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x400095a	     0xf8480000000	                            je 0x40009e0	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x4000960	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x4000964	        0x488b4008	                mov rax, qword [rax + 8]	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x4000968	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x400096c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x4000970	          0x488b00	                    mov rax, qword [rax]	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x4000973	        0x488b4018	            mov rax, qword [rax + 0x18] 	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x4000977	          0x4889d6	                            mov rsi, rdx	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x400097a	          0x4889c7	                            mov rdi, rax	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x400097d	      0xe800000000	                          call 0x4000982	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x4000982	            0x85c0	                           test eax, eax	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x4000984	            0x755a	                           jne 0x40009e0	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x4000986	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x400098a	        0x488b4008	                mov rax, qword [rax + 8]	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x400098e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x4000992	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x4000996	          0x488b00	                    mov rax, qword [rax]	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x4000999	        0x488b4018	            mov rax, qword [rax + 0x18] 	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x400099d	          0x4889d6	                            mov rsi, rdx	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x40009a0	          0x4889c7	                            mov rdi, rax	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x40009a3	      0xe800000000	                          call 0x40009a8	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x40009a8	            0x85c0	                           test eax, eax	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40009aa	            0x7534	                           jne 0x40009e0	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40009ac	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x40009b0	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x40009b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x40009b8	          0x4889ce	                            mov rsi, rcx	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x40009bb	          0x4889c7	                            mov rdi, rax	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x40009be	      0xe880fdffff	                   call sym.merge_broken	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x40009c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40009c7	          0x488b00	                    mov rax, qword [rax]	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40009ca	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40009cd	          0x4863d2	                         movsxd rdx, edx	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40009d0	        0x48c1e203	                              shl rdx, 3	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40009d4	          0x4801d0	                            add rax, rdx	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40009d7	    0x48c700000000	                      mov qword [rax], 0	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40009de	            0xeb14	                           jmp 0x40009f4	       287	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40009e0	        0x8345c401	               add dword [rbp - 0x3c], 1	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40009e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40009e8	          0x8b400c	              mov eax, dword [rax + 0xc]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40009eb	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40009ee	     0xf8f3effffff	                            jg 0x4000932	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40009f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x40009f8	          0x8b400c	              mov eax, dword [rax + 0xc]	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x40009fb	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x40009fe	            0x7f2b	                            jg 0x4000a2b	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x4000a00	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x4000a04	        0x488d45e0	                   lea rax, [rbp - 0x20]	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x4000a08	          0x4889d6	                            mov rsi, rdx	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x4000a0b	          0x4889c7	                            mov rdi, rax	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x4000a0e	      0xe800000000	                          call 0x4000a13	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x4000a13	            0xeb16	                           jmp 0x4000a2b	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x4000a15	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x4000a19	        0x488d45e0	                   lea rax, [rbp - 0x20]	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x4000a1d	          0x4889d6	                            mov rsi, rdx	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x4000a20	          0x4889c7	                            mov rdi, rax	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x4000a23	      0xe800000000	                          call 0x4000a28	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x4000a28	            0xeb01	                           jmp 0x4000a2b	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x4000a2a	              0x90	                                     nop	       273	diffcore-break.c	FUNCTION_4	FOR_1	IF_1
0x4000a2b	        0x8345c001	               add dword [rbp - 0x40], 1	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000a2f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000a33	          0x8b400c	              mov eax, dword [rax + 0xc]	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000a36	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000a39	     0xf8f82feffff	                            jg 0x40008c1	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000a3f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       299	diffcore-break.c	FUNCTION_4	CALL_8
0x4000a43	          0x488b00	                    mov rax, qword [rax]	       299	diffcore-break.c	FUNCTION_4	CALL_8
0x4000a46	          0x4889c7	                            mov rdi, rax	       299	diffcore-break.c	FUNCTION_4	CALL_8
0x4000a49	      0xe800000000	                          call 0x4000a4e	       299	diffcore-break.c	FUNCTION_4	CALL_8
0x4000a4e	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       300	diffcore-break.c	FUNCTION_4
0x4000a52	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       300	diffcore-break.c	FUNCTION_4
0x4000a56	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       300	diffcore-break.c	FUNCTION_4
0x4000a5a	          0x488901	                    mov qword [rcx], rax	       300	diffcore-break.c	FUNCTION_4
0x4000a5d	        0x48895108	                mov qword [rcx + 8], rdx	       300	diffcore-break.c	FUNCTION_4
0x4000a61	              0x90	                                     nop	       302	diffcore-break.c	FUNCTION_4
0x4000a62	        0x488b45f8	                mov rax, qword [rbp - 8]	       303	diffcore-break.c	FUNCTION_4
0x4000a66	    0x644833042528	                xor rax, qword fs:[0x28]	       303	diffcore-break.c	FUNCTION_4
0x4000a6f	            0x7405	                            je 0x4000a76	       303	diffcore-break.c	FUNCTION_4
0x4000a71	      0xe800000000	                          call 0x4000a76	       303	diffcore-break.c	FUNCTION_4
0x4000a76	              0xc9	                                   leave	       303	diffcore-break.c	FUNCTION_4
0x4000a77	              0xc3	                                     ret	       303	diffcore-break.c	FUNCTION_4
object_type	CALL,1:FOR,0:ELSE,0:SWITCH,0:IF,0:WHILE,0:functions,0:DO,0	18
0x4000040	              0x55	                                push rbp	       398	cache.h	FUNCTION_11
0x4000041	          0x4889e5	                            mov rbp, rsp	       398	cache.h	FUNCTION_11
0x4000044	          0x897dfc	                mov dword [rbp - 4], edi	       398	cache.h	FUNCTION_11
0x4000047	          0x8b45fc	                mov eax, dword [rbp - 4]	       399	cache.h	FUNCTION_11	CALL_1
0x400004a	      0x2500f00000	                         and eax, 0xf000	       399	cache.h	FUNCTION_11	CALL_1
0x400004f	      0x3d00400000	                         cmp eax, 0x4000	       399	cache.h	FUNCTION_11	CALL_1
0x4000054	            0x741d	                            je 0x4000073	       399	cache.h	FUNCTION_11	CALL_1
0x4000056	          0x8b45fc	                mov eax, dword [rbp - 4]	       400	cache.h	FUNCTION_11
0x4000059	      0x2500f00000	                         and eax, 0xf000	       400	cache.h	FUNCTION_11
0x400005e	      0x3d00e00000	                         cmp eax, 0xe000	       399	cache.h	FUNCTION_11	CALL_1
0x4000063	            0x7507	                           jne 0x400006c	       399	cache.h	FUNCTION_11	CALL_1
0x4000065	      0xb801000000	                              mov eax, 1	       399	cache.h	FUNCTION_11	CALL_1
0x400006a	            0xeb0c	                           jmp 0x4000078	       399	cache.h	FUNCTION_11	CALL_1
0x400006c	      0xb803000000	                              mov eax, 3	       399	cache.h	FUNCTION_11	CALL_1
0x4000071	            0xeb05	                           jmp 0x4000078	       399	cache.h	FUNCTION_11	CALL_1
0x4000073	      0xb802000000	                              mov eax, 2	       399	cache.h	FUNCTION_11	CALL_1
0x4000078	              0x5d	                                 pop rbp	       402	cache.h	FUNCTION_11
0x4000079	              0xc3	                                     ret	       402	cache.h	FUNCTION_11
hashcmp	CALL,1:FOR,0:ELSE,0:SWITCH,0:IF,0:WHILE,0:functions,0:DO,0	13
0x400007a	              0x55	                                push rbp	       974	cache.h	FUNCTION_12
0x400007b	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_12
0x400007e	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_12
0x4000082	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_12
0x4000086	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_12
0x400008a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_12	CALL_1
0x400008e	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_12	CALL_1
0x4000092	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_12	CALL_1
0x4000097	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_12	CALL_1
0x400009a	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_12	CALL_1
0x400009d	      0xe800000000	                          call 0x40000a2	       975	cache.h	FUNCTION_12	CALL_1
0x40000a2	              0xc9	                                   leave	       976	cache.h	FUNCTION_12
0x40000a3	              0xc3	                                     ret	       976	cache.h	FUNCTION_12
diffcore_break	CALL,18:FOR,1:ELSE,0:SWITCH,0:IF,5:WHILE,0:functions,0:DO,0	173
0x40004a8	              0x55	                                push rbp	       118	diffcore-break.c	FUNCTION_2
0x40004a9	          0x4889e5	                            mov rbp, rsp	       118	diffcore-break.c	FUNCTION_2
0x40004ac	        0x4883ec70	                           sub rsp, 0x70	       118	diffcore-break.c	FUNCTION_2
0x40004b0	          0x897d9c	             mov dword [rbp - 0x64], edi	       118	diffcore-break.c	FUNCTION_2
0x40004b3	    0x64488b042528	                mov rax, qword fs:[0x28]	       118	diffcore-break.c	FUNCTION_2
0x40004bc	        0x488945f8	                mov qword [rbp - 8], rax	       118	diffcore-break.c	FUNCTION_2
0x40004c0	            0x31c0	                            xor eax, eax	       118	diffcore-break.c	FUNCTION_2
0x40004c2	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       119	diffcore-break.c	FUNCTION_2
0x40004ca	          0x8b459c	             mov eax, dword [rbp - 0x64]	       159	diffcore-break.c	FUNCTION_2
0x40004cd	          0xc1e810	                           shr eax, 0x10	       159	diffcore-break.c	FUNCTION_2
0x40004d0	          0x8945b0	             mov dword [rbp - 0x50], eax	       159	diffcore-break.c	FUNCTION_2
0x40004d3	    0x81659cffff00	          and dword [rbp - 0x64], 0xffff	       160	diffcore-break.c	FUNCTION_2
0x40004da	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       162	diffcore-break.c	FUNCTION_2	IF_1
0x40004de	            0x7507	                           jne 0x40004e7	       162	diffcore-break.c	FUNCTION_2	IF_1
0x40004e0	    0xc7459c307500	          mov dword [rbp - 0x64], 0x7530	       163	diffcore-break.c	FUNCTION_2	IF_1
0x40004e7	        0x837db000	               cmp dword [rbp - 0x50], 0	       164	diffcore-break.c	FUNCTION_2	IF_2
0x40004eb	            0x7507	                           jne 0x40004f4	       164	diffcore-break.c	FUNCTION_2	IF_2
0x40004ed	    0xc745b0a08c00	          mov dword [rbp - 0x50], 0x8ca0	       165	diffcore-break.c	FUNCTION_2	IF_2
0x40004f4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x40004fc	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x4000503	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x4000506	          0x8945ec	             mov dword [rbp - 0x14], eax	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x4000509	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x4000510	      0xe9e5010000	                           jmp 0x40006fa	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x4000515	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4000519	          0x488b00	                    mov rax, qword [rax]	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x400051c	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x400051f	          0x4863d2	                         movsxd rdx, edx	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4000522	        0x48c1e203	                              shl rdx, 3	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4000526	          0x4801d0	                            add rax, rdx	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4000529	          0x488b00	                    mov rax, qword [rax]	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x400052c	        0x488945c0	             mov qword [rbp - 0x40], rax	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4000530	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4000534	          0x488b00	                    mov rax, qword [rax]	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4000537	         0xfb74040	           movzx eax, word [rax + 0x40] 	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x400053b	          0x6685c0	                             test ax, ax	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x400053e	     0xf8480010000	                            je 0x40006c4	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4000544	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4000548	        0x488b4008	                mov rax, qword [rax + 8]	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x400054c	         0xfb74040	           movzx eax, word [rax + 0x40] 	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4000550	          0x6685c0	                             test ax, ax	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4000553	     0xf846b010000	                            je 0x40006c4	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4000559	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x400055d	          0x488b00	                    mov rax, qword [rax]	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000560	         0xfb74040	           movzx eax, word [rax + 0x40] 	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000564	           0xfb7c0	                           movzx eax, ax	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000567	            0x89c7	                            mov edi, eax	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000569	      0xe8d2faffff	                    call sym.object_type	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x400056e	          0x83f803	                              cmp eax, 3	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4000571	     0xf854d010000	                           jne 0x40006c4	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4000577	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x400057b	        0x488b4008	                mov rax, qword [rax + 8]	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x400057f	         0xfb74040	           movzx eax, word [rax + 0x40] 	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000583	           0xfb7c0	                           movzx eax, ax	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000586	            0x89c7	                            mov edi, eax	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000588	      0xe8b3faffff	                    call sym.object_type	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x400058d	          0x83f803	                              cmp eax, 3	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000590	     0xf852e010000	                           jne 0x40006c4	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000596	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x400059a	        0x488b4008	                mov rax, qword [rax + 8]	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x400059e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x40005a2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x40005a6	          0x488b00	                    mov rax, qword [rax]	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x40005a9	        0x488b4018	            mov rax, qword [rax + 0x18] 	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x40005ad	          0x4889d6	                            mov rsi, rdx	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x40005b0	          0x4889c7	                            mov rdi, rax	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x40005b3	      0xe800000000	                          call 0x40005b8	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x40005b8	            0x85c0	                           test eax, eax	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x40005ba	     0xf8504010000	                           jne 0x40006c4	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x40005c0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x40005c4	        0x488b7008	                mov rsi, qword [rax + 8]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x40005c8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x40005cc	          0x488b00	                    mov rax, qword [rax]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x40005cf	        0x488d4dac	                   lea rcx, [rbp - 0x54]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x40005d3	          0x8b559c	             mov edx, dword [rbp - 0x64]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x40005d6	          0x4889c7	                            mov rdi, rax	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x40005d9	      0xe8ebfaffff	                   call sym.should_break	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x40005de	            0x85c0	                           test eax, eax	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x40005e0	     0xf84de000000	                            je 0x40006c4	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x40005e6	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       193	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	IF_5
0x40005e9	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       193	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	IF_5
0x40005ec	            0x7d07	                           jge 0x40005f5	       193	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	IF_5
0x40005ee	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       194	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	IF_5
0x40005f5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x40005f9	          0x488b00	                    mov rax, qword [rax]	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x40005fc	        0x488b4018	            mov rax, qword [rax + 0x18] 	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x4000600	          0x4889c7	                            mov rdi, rax	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x4000603	      0xe800000000	                          call 0x4000608	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x4000608	        0x488945c8	             mov qword [rbp - 0x38], rax	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x400060c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x4000610	          0x488b08	                    mov rcx, qword [rax]	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x4000613	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x4000617	        0x488d45e0	                   lea rax, [rbp - 0x20]	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x400061b	          0x4889ce	                            mov rsi, rcx	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x400061e	          0x4889c7	                            mov rdi, rax	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x4000621	      0xe800000000	                          call 0x4000626	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x4000626	        0x488945d0	             mov qword [rbp - 0x30], rax	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x400062a	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       199	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x400062d	            0x89c2	                            mov edx, eax	       199	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x400062f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       199	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000633	        0x66895010	               mov word [rax + 0x10], dx	       199	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000637	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       200	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x400063b	         0xfb65013	           movzx edx, byte [rax + 0x13] 	       200	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x400063f	          0x83ca01	                               or edx, 1	       200	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000642	          0x885013	               mov byte [rax + 0x13], dl	       200	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000645	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x4000649	        0x488b4008	                mov rax, qword [rax + 8]	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x400064d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x4000651	          0x4889c7	                            mov rdi, rax	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x4000654	      0xe800000000	                          call 0x4000659	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x4000659	        0x488945d8	             mov qword [rbp - 0x28], rax	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x400065d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x4000661	        0x488b5008	                mov rdx, qword [rax + 8]	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x4000665	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x4000669	        0x488d45e0	                   lea rax, [rbp - 0x20]	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x400066d	          0x4889ce	                            mov rsi, rcx	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x4000670	          0x4889c7	                            mov rdi, rax	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x4000673	      0xe800000000	                          call 0x4000678	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x4000678	        0x488945d0	             mov qword [rbp - 0x30], rax	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x400067c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       205	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x400067f	            0x89c2	                            mov edx, eax	       205	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000681	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       205	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000685	        0x66895010	               mov word [rax + 0x10], dx	       205	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000689	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       206	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x400068d	         0xfb65013	           movzx edx, byte [rax + 0x13] 	       206	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000691	          0x83ca01	                               or edx, 1	       206	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000694	          0x885013	               mov byte [rax + 0x13], dl	       206	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000697	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       208	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_12
0x400069b	          0x488b00	                    mov rax, qword [rax]	       208	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_12
0x400069e	          0x4889c7	                            mov rdi, rax	       208	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_12
0x40006a1	      0xe800000000	                          call 0x40006a6	       208	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_12
0x40006a6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       209	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_13
0x40006aa	        0x488b4008	                mov rax, qword [rax + 8]	       209	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_13
0x40006ae	          0x4889c7	                            mov rdi, rax	       209	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_13
0x40006b1	      0xe800000000	                          call 0x40006b6	       209	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_13
0x40006b6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x40006ba	          0x4889c7	                            mov rdi, rax	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x40006bd	      0xe800000000	                          call 0x40006c2	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x40006c2	            0xeb32	                           jmp 0x40006f6	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x40006c4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       216	diffcore-break.c	FUNCTION_2	FOR_1	CALL_15
0x40006c8	          0x488b00	                    mov rax, qword [rax]	       216	diffcore-break.c	FUNCTION_2	FOR_1	CALL_15
0x40006cb	          0x4889c7	                            mov rdi, rax	       216	diffcore-break.c	FUNCTION_2	FOR_1	CALL_15
0x40006ce	      0xe800000000	                          call 0x40006d3	       216	diffcore-break.c	FUNCTION_2	FOR_1	CALL_15
0x40006d3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       217	diffcore-break.c	FUNCTION_2	FOR_1	CALL_16
0x40006d7	        0x488b4008	                mov rax, qword [rax + 8]	       217	diffcore-break.c	FUNCTION_2	FOR_1	CALL_16
0x40006db	          0x4889c7	                            mov rdi, rax	       217	diffcore-break.c	FUNCTION_2	FOR_1	CALL_16
0x40006de	      0xe800000000	                          call 0x40006e3	       217	diffcore-break.c	FUNCTION_2	FOR_1	CALL_16
0x40006e3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x40006e7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x40006eb	          0x4889d6	                            mov rsi, rdx	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x40006ee	          0x4889c7	                            mov rdi, rax	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x40006f1	      0xe800000000	                          call 0x40006f6	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x40006f6	        0x8345b401	               add dword [rbp - 0x4c], 1	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x40006fa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x40006fe	          0x8b400c	              mov eax, dword [rax + 0xc]	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x4000701	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x4000704	     0xf8f0bfeffff	                            jg 0x4000515	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x400070a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       220	diffcore-break.c	FUNCTION_2	CALL_18
0x400070e	          0x488b00	                    mov rax, qword [rax]	       220	diffcore-break.c	FUNCTION_2	CALL_18
0x4000711	          0x4889c7	                            mov rdi, rax	       220	diffcore-break.c	FUNCTION_2	CALL_18
0x4000714	      0xe800000000	                          call 0x4000719	       220	diffcore-break.c	FUNCTION_2	CALL_18
0x4000719	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       221	diffcore-break.c	FUNCTION_2
0x400071d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       221	diffcore-break.c	FUNCTION_2
0x4000721	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       221	diffcore-break.c	FUNCTION_2
0x4000725	          0x488901	                    mov qword [rcx], rax	       221	diffcore-break.c	FUNCTION_2
0x4000728	        0x48895108	                mov qword [rcx + 8], rdx	       221	diffcore-break.c	FUNCTION_2
0x400072c	              0x90	                                     nop	       223	diffcore-break.c	FUNCTION_2
0x400072d	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	diffcore-break.c	FUNCTION_2
0x4000731	    0x644833042528	                xor rax, qword fs:[0x28]	       224	diffcore-break.c	FUNCTION_2
0x400073a	            0x7405	                            je 0x4000741	       224	diffcore-break.c	FUNCTION_2
0x400073c	      0xe800000000	                          call 0x4000741	       224	diffcore-break.c	FUNCTION_2
0x4000741	              0xc9	                                   leave	       224	diffcore-break.c	FUNCTION_2
0x4000742	              0xc3	                                     ret	       224	diffcore-break.c	FUNCTION_2
oidcmp	CALL,1:FOR,0:ELSE,0:SWITCH,0:IF,0:WHILE,0:functions,0:DO,0	12
0x40000a4	              0x55	                                push rbp	       979	cache.h	FUNCTION_13
0x40000a5	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_13
0x40000a8	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_13
0x40000ac	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_13
0x40000b0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_13
0x40000b4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_13	CALL_1
0x40000b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_13	CALL_1
0x40000bc	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_13	CALL_1
0x40000bf	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_13	CALL_1
0x40000c2	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_13	CALL_1
0x40000c7	              0xc9	                                   leave	       981	cache.h	FUNCTION_13
0x40000c8	              0xc3	                                     ret	       981	cache.h	FUNCTION_13
